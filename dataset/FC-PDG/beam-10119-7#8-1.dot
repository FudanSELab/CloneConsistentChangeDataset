digraph {
1 [style = filled, label = "testElementsAtAlmostPositiveInfinity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PCollection<String> windowedValues = p.apply(stream).apply(Window.into(windows)).apply(WithKeys.of(1)).apply(GroupByKey.create()).apply(Values.create()).apply(Flatten.iterables())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PCollection<String> windowedValues = p.apply(source).apply(Window.into(windows)).apply(WithKeys.of(1)).apply(GroupByKey.create()).apply(Values.create()).apply(Flatten.iterables())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "TestStream<String> stream = TestStream.create(StringUtf8Coder.of()).addElements(TimestampedValue.of(\"foo\",endOfGlobalWindow),TimestampedValue.of(\"bar\",endOfGlobalWindow)).advanceWatermarkToInfinity()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FixedWindows windows = FixedWindows.of(Duration.standardHours(6))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testElementsAtAlmostPositiveInfinity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "PAssert.that(windowedValues).inWindow(windows.assignWindow(GlobalWindow.INSTANCE.maxTimestamp())).containsInAnyOrder(\"foo\",\"bar\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PCollection<String> windowedValues = p.apply(source).apply(Window.into(windows)).apply(WithKeys.of(1)).apply(GroupByKey.create()).apply(Values.create()).apply(Flatten.iterables())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "PAssert.that(windowedValues).inWindow(windows.assignWindow(endOfGlobalWindow)).containsInAnyOrder(\"foo\",\"bar\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "p.run()@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CreateStream<String> source = CreateStream.of(StringUtf8Coder.of(),batchDuration()).nextBatch(TimestampedValue.of(\"foo\",endOfGlobalWindow),TimestampedValue.of(\"bar\",endOfGlobalWindow)).advanceNextBatchWatermarkToInfinity()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Instant endOfGlobalWindow = GlobalWindow.INSTANCE.maxTimestamp()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testElementsAtAlmostPositiveInfinity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
3->11 [style = bold, label=""];
9->5 [style = bold, label=""];
5->10 [style = bold, label=""];
10->3 [style = bold, label=""];
5->2 [style = bold, label=""];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
4->11 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
8->5 [style = bold, label=""];
3->7 [style = bold, label=""];
12->6 [style = bold, label=""];
0->6 [style = bold, label=""];
3->4 [style = bold, label=""];
4->7 [style = dashed, label="0"];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
}
