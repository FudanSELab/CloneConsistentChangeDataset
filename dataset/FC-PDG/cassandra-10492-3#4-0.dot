digraph {
19 [style = filled, label = "callbackNullTxn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cb.apply(Lists.newArrayList(result,fakeResult))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PendingAntiCompaction.AcquireResult result = acquisitionCallable.call()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cfs.disableAutoCompaction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(1,cb.submittedCompactions.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNotNull(result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(Transactional.AbstractTransactional.State.IN_PROGRESS,result.txn.state())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "InstrumentedAcquisitionCallback cb = new InstrumentedAcquisitionCallback(UUIDGen.getTimeUUID(),atEndpoint(FULL_RANGE,Collections.emptyList()))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "InstrumentedAcquisitionCallback cb = new InstrumentedAcquisitionCallback(UUIDGen.getTimeUUID(),FULL_RANGE)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ColumnFamilyStore cfs2 = Schema.instance.getColumnFamilyStoreInstance(Schema.instance.getTableMetadata(\"system\",\"peers\").id)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "callbackNullResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(Transactional.AbstractTransactional.State.ABORTED,result.txn.state())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PendingAntiCompaction.AcquireResult fakeResult = new PendingAntiCompaction.AcquireResult(cfs2,null,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertFalse(cb.submittedCompactions.contains(cfs2.metadata.id))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertTrue(cb.submittedCompactions.contains(cfm.id))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "callbackNullResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(cb.submittedCompactions.isEmpty())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InstrumentedAcquisitionCallback cb = new InstrumentedAcquisitionCallback(UUIDGen.getTimeUUID(),FULL_RANGE)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "makeSSTables(2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(cb.submittedCompactions.isEmpty())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PendingAntiCompaction.AcquisitionCallable acquisitionCallable = new PendingAntiCompaction.AcquisitionCallable(cfs,FULL_RANGE,UUIDGen.getTimeUUID())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
5->10 [style = bold, label=""];
20->17 [style = bold, label=""];
7->12 [style = bold, label=""];
3->14 [style = bold, label=""];
18->14 [style = solid, label="fakeResult"];
6->14 [style = solid, label="result"];
8->12 [style = dashed, label="0"];
11->9 [style = bold, label=""];
7->8 [style = bold, label=""];
12->0 [style = bold, label=""];
15->18 [style = bold, label=""];
13->1 [style = bold, label=""];
9->6 [style = bold, label=""];
1->11 [style = bold, label=""];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
5->16 [style = dashed, label="0"];
19->1 [style = bold, label=""];
3->5 [style = bold, label=""];
2->15 [style = bold, label=""];
4->1 [style = bold, label=""];
2->7 [style = bold, label=""];
6->3 [style = solid, label="result"];
15->18 [style = solid, label="cfs2"];
3->14 [style = dashed, label="0"];
16->20 [style = bold, label=""];
18->0 [style = bold, label=""];
6->2 [style = solid, label="result"];
}
