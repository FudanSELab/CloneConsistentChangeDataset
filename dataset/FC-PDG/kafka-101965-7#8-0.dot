digraph {
24 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assignment.putAll(taskId01Assignment)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "taskManager.handleAssignment(assignment,emptyMap())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectLastCall()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "consumer.pause(taskId00Partitions)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "verify(consumer)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expect(consumer.committed(taskId00Partitions)).andReturn(singletonMap(t1p0,offsetAndMetadata))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "replay(activeTaskCreator,topologyBuilder,consumer,changeLogReader)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final StateMachineTask corruptedTask = new StateMachineTask(taskId00,taskId00Partitions,true,stateManager)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final OffsetAndMetadata offsetAndMetadata = new OffsetAndMetadata(0L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "shouldNotCommitNonRunningNonCorruptedTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "taskManager.handleCorruption(singletonMap(taskId00,taskId00Partitions))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectLastCall().anyTimes()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(nonRunningNonCorruptedTask.commitPrepared)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final StateMachineTask nonRunningNonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "stateManager.markChangelogAsCorrupted(taskId00Partitions)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ProcessorStateManager stateManager = EasyMock.createStrictMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "nonCorruptedTask.setCommitNeeded()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "consumer.seek(t1p0,offsetAndMetadata)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds()),is(true))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertThat(nonCorruptedTask.state(),is(Task.State.RUNNING))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "consumer.commitSync(eq(emptyMap()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expect(consumer.assignment()).andReturn(taskId00Partitions)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignment))).andStubReturn(asList(corruptedTask,nonRunningNonCorruptedTask))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(nonRunningNonCorruptedTask.state(),is(Task.State.CREATED))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "nonRunningNonCorruptedTask.setCommitNeeded()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "taskManager.setPartitionResetter(null)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "verify(activeTaskCreator)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "taskManager.handleCorruption(singletonMap(taskId00,taskId00Partitions))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expect(consumer.assignment()).andReturn(taskId00Partitions)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(consumer)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "replay(stateManager)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final StateMachineTask nonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
11->25 [style = bold, label=""];
8->9 [style = solid, label="assignment"];
23->22 [style = bold, label=""];
4->34 [style = bold, label=""];
1->30 [style = dashed, label="0"];
15->11 [style = solid, label="stateManager"];
21->6 [style = solid, label="offsetAndMetadata"];
2->26 [style = bold, label=""];
16->4 [style = bold, label=""];
38->18 [style = bold, label=""];
22->3 [style = bold, label=""];
26->20 [style = bold, label=""];
3->21 [style = bold, label=""];
24->15 [style = bold, label=""];
20->22 [style = bold, label=""];
7->6 [style = bold, label=""];
15->27 [style = solid, label="stateManager"];
37->34 [style = solid, label="nonRunningNonCorruptedTask"];
28->23 [style = bold, label=""];
18->33 [style = bold, label=""];
14->12 [style = bold, label=""];
27->37 [style = dashed, label="0"];
10->11 [style = bold, label=""];
37->32 [style = bold, label=""];
1->14 [style = bold, label=""];
9->30 [style = bold, label=""];
13->18 [style = bold, label=""];
4->2 [style = bold, label=""];
12->13 [style = bold, label=""];
27->8 [style = bold, label=""];
5->0 [style = bold, label=""];
16->1 [style = solid, label="assignment"];
7->5 [style = solid, label="offsetAndMetadata"];
18->19 [style = bold, label=""];
7->6 [style = solid, label="offsetAndMetadata"];
25->4 [style = solid, label="corruptedTask"];
27->4 [style = solid, label="nonCorruptedTask"];
35->38 [style = bold, label=""];
17->9 [style = bold, label=""];
6->5 [style = bold, label=""];
0->17 [style = bold, label=""];
21->7 [style = bold, label=""];
20->28 [style = bold, label=""];
32->16 [style = bold, label=""];
29->15 [style = bold, label=""];
1->36 [style = bold, label=""];
21->7 [style = solid, label="offsetAndMetadata"];
4->34 [style = dashed, label="0"];
15->25 [style = solid, label="stateManager"];
25->27 [style = bold, label=""];
30->14 [style = bold, label=""];
25->37 [style = bold, label=""];
31->15 [style = bold, label=""];
9->1 [style = bold, label=""];
34->26 [style = bold, label=""];
15->10 [style = bold, label=""];
36->35 [style = bold, label=""];
25->34 [style = solid, label="corruptedTask"];
15->37 [style = solid, label="stateManager"];
}
