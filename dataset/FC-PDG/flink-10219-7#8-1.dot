digraph {
2 [style = filled, label = "tableOptions.put(\"format\",TestFormatFactory.IDENTIFIER)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tableOptions.put(\"key.fields\",NAME)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "getKeyValueOptions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return tableOptions@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tableOptions.put(\"scan.topic-partition-discovery.interval\",DISCOVERY_INTERVAL)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return tableOptions@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "tableOptions.put(String.format(\"value.%s.%s\",TestFormatFactory.IDENTIFIER,TestFormatFactory.DELIMITER.key()),\"|\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tableOptions.put(\"sink.semantic\",SinkSemantic.EXACTLY_ONCE.toString())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tableOptions.put(\"sink.partitioner\",KafkaConnectorOptionsUtil.SINK_PARTITIONER_VALUE_FIXED)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tableOptions.put(\"sink.transactional-id-prefix\",\"kafka-sink\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "tableOptions.put(\"value.fields-include\",KafkaConnectorOptions.ValueFieldsStrategy.EXCEPT_KEY.toString())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "tableOptions.put(\"connector\",KafkaDynamicTableFactory.IDENTIFIER)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tableOptions.put(\"sink.delivery-guarantee\",DeliveryGuarantee.EXACTLY_ONCE.toString())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "tableOptions.put(\"value.format\",TestFormatFactory.IDENTIFIER)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "tableOptions.put(\"format\",TestFormatFactory.IDENTIFIER)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tableOptions.put(\"key.format\",TestFormatFactory.IDENTIFIER)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tableOptions.put(formatDelimiterKey,\",\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,String> tableOptions = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tableOptions.put(String.format(\"key.%s.%s\",TestFormatFactory.IDENTIFIER,TestFormatFactory.DELIMITER.key()),\"#\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "getBasicSinkOptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String formatDelimiterKey = String.format(\"%s.%s\",TestFormatFactory.IDENTIFIER,TestFormatFactory.DELIMITER.key())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tableOptions.put(\"topic\",TOPIC)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tableOptions.put(\"properties.bootstrap.servers\",\"dummy\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tableOptions.put(\"properties.group.id\",\"dummy\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getBasicSinkOptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
11->20 [style = bold, label=""];
6->3 [style = solid, label="formatDelimiterKey"];
2->19 [style = dashed, label="0"];
3->21 [style = dashed, label="0"];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
1->15 [style = bold, label=""];
16->7 [style = bold, label=""];
20->1 [style = bold, label=""];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
24->18 [style = bold, label=""];
14->7 [style = bold, label=""];
0->7 [style = bold, label=""];
7->13 [style = solid, label="tableOptions"];
7->9 [style = bold, label=""];
5->19 [style = bold, label=""];
3->10 [style = bold, label=""];
7->10 [style = solid, label="tableOptions"];
5->2 [style = bold, label=""];
17->24 [style = bold, label=""];
10->13 [style = bold, label=""];
23->21 [style = bold, label=""];
21->22 [style = bold, label=""];
7->18 [style = solid, label="tableOptions"];
19->23 [style = bold, label=""];
22->17 [style = bold, label=""];
15->12 [style = bold, label=""];
8->4 [style = bold, label=""];
4->11 [style = bold, label=""];
5->15 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
3->10 [style = solid, label="formatDelimiterKey"];
}
