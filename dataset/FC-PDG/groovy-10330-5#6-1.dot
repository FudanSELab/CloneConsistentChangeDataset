digraph {
45 [style = filled, label = "init.setSourceEncoding(\"LEAD-123\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "init.setClasspath(\"\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(CompilerConfiguration.POST_JDK5,config.getTargetBytecode())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "init.setRecompileGroovySource(false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(false,config.getVerbose())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "init.setClasspath(\"File1\" + File.pathSeparator + \"Somewhere\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(false,config.getDebug())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.PRE_JDK5)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "init.setTolerance(55)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(true,config.getDebug())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",init.getScriptBaseClass())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(false,init.getRecompileGroovySource())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(initPPF,init.getPluginFactory())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(975,init.getMinimumRecompilationInterval())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "init.setMinimumRecompilationInterval(975)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(true,init.getRecompileGroovySource())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "init.setPluginFactory(initPPF)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCopyConstructor1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(true,config.getRecompileGroovySource())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "init.setDebug(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(\".jpp\",init.getDefaultScriptExtension())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(initTDFile,init.getTargetDirectory())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(true,config.getVerbose())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testCopyConstructor1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertEquals(\"Gutenberg\",config.getSourceEncoding())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "init.setParameters(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(initTDFile,config.getTargetDirectory())@@@51@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",config.getScriptBaseClass())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(55,config.getTolerance())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "init.setVerbose(false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "init.setWarningLevel(WarningMessage.POSSIBLE_ERRORS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(true,init.getVerbose())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "init.setParameters(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final File initTDFile = new File(\"A wandering path\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "init.setOutput(initOut)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(234,init.getMinimumRecompilationInterval())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(initOut,init.getOutput())@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(CompilerConfiguration.PRE_JDK5,config.getTargetBytecode())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(55,init.getTolerance())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(initJoint,config.getJointCompilationOptions())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,init.getWarningLevel())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(false,init.getDebug())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "testCopyConstructor2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "init.setJointCompilationOptions(initJoint)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(initOut,config.getOutput())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final ParserPluginFactory initPPF = ParserPluginFactory.newInstance(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "init.setTargetDirectory(initTDFile)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(\"\",init.getScriptBaseClass())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertEquals(\"\",config.getScriptBaseClass())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,config.getWarningLevel())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "init.setScriptBaseClass(\"\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "init.setDefaultScriptExtension(\".jpp\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(975,config.getMinimumRecompilationInterval())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\".jpp\",config.getDefaultScriptExtension())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final Map initJoint = new HashMap()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(720,init.getTolerance())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(false,init.getParameters())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "init.setScriptBaseClass(\"blarg.foo.WhatSit\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "initJoint.put(\"somekey\",\"somevalue\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(\"LEAD-123\",config.getSourceEncoding())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "init.setRecompileGroovySource(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(initTDFile,config.getTargetDirectory())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "init.setTolerance(720)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "init.setDebug(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(720,config.getTolerance())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(\"Gutenberg\",init.getSourceEncoding())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final PrintWriter initOut = new PrintWriter(System.out)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(false,config.getRecompileGroovySource())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{final List listCP = init.getClasspath()assertNotNull(listCP)assertEquals(0,listCP.size())}@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{final List listCP = config.getClasspath()assertEquals(0,listCP.size())}@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "init.setMinimumRecompilationInterval(234)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "init.setSourceEncoding(\"Gutenberg\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"LEAD-123\",init.getSourceEncoding())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "init.setVerbose(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(initJoint,init.getJointCompilationOptions())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(false,init.getVerbose())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(234,config.getMinimumRecompilationInterval())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(CompilerConfiguration.PRE_JDK5,init.getTargetBytecode())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(true,init.getDebug())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(initPPF,config.getPluginFactory())@@@60@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final CompilerConfiguration config = new CompilerConfiguration(init)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(true,init.getParameters())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.POST_JDK5)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(CompilerConfiguration.POST_JDK5,init.getTargetBytecode())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->44 [style = solid, label="init"];
29->59 [style = bold, label=""];
65->67 [style = bold, label=""];
73->58 [style = bold, label=""];
81->73 [style = bold, label=""];
42->9 [style = bold, label=""];
49->42 [style = solid, label="initTDFile"];
31->21 [style = bold, label=""];
45->24 [style = bold, label=""];
26->75 [style = dashed, label="0"];
3->34 [style = bold, label=""];
53->15 [style = solid, label="initJoint"];
0->53 [style = bold, label=""];
19->5 [style = bold, label=""];
82->68 [style = bold, label=""];
47->69 [style = dashed, label="0"];
21->1 [style = bold, label=""];
29->14 [style = bold, label=""];
60->63 [style = bold, label=""];
63->75 [style = bold, label=""];
19->82 [style = dashed, label="0"];
17->44 [style = bold, label=""];
48->18 [style = bold, label=""];
64->60 [style = bold, label=""];
41->13 [style = bold, label=""];
33->73 [style = dashed, label="0"];
70->83 [style = bold, label=""];
51->60 [style = dashed, label="0"];
79->29 [style = bold, label=""];
53->21 [style = solid, label="initJoint"];
46->38 [style = bold, label=""];
83->66 [style = bold, label=""];
10->61 [style = dashed, label="0"];
1->44 [style = bold, label=""];
57->61 [style = bold, label=""];
34->19 [style = bold, label=""];
38->11 [style = bold, label=""];
62->82 [style = bold, label=""];
12->20 [style = solid, label="initOut"];
26->47 [style = bold, label=""];
28->54 [style = bold, label=""];
56->62 [style = bold, label=""];
3->56 [style = dashed, label="0"];
75->69 [style = bold, label=""];
32->10 [style = bold, label=""];
25->2 [style = bold, label=""];
58->56 [style = bold, label=""];
53->41 [style = solid, label="initJoint"];
8->76 [style = dashed, label="0"];
37->74 [style = bold, label=""];
7->33 [style = bold, label=""];
35->40 [style = bold, label=""];
49->25 [style = bold, label=""];
78->11 [style = bold, label=""];
33->30 [style = bold, label=""];
12->14 [style = solid, label="initOut"];
35->70 [style = dashed, label="0"];
11->17 [style = bold, label=""];
80->76 [style = bold, label=""];
39->74 [style = dashed, label="0"];
53->43 [style = bold, label=""];
49->14 [style = solid, label="initTDFile"];
77->65 [style = bold, label=""];
5->68 [style = dashed, label="0"];
27->8 [style = bold, label=""];
48->1 [style = solid, label="initPPF"];
71->78 [style = bold, label=""];
25->0 [style = bold, label=""];
22->26 [style = bold, label=""];
46->71 [style = dashed, label="0"];
48->18 [style = solid, label="initPPF"];
27->80 [style = dashed, label="0"];
50->17 [style = bold, label=""];
74->84 [style = bold, label=""];
4->67 [style = dashed, label="0"];
14->42 [style = bold, label=""];
84->80 [style = bold, label=""];
12->20 [style = bold, label=""];
67->12 [style = bold, label=""];
24->77 [style = dashed, label="0"];
36->84 [style = dashed, label="0"];
49->25 [style = solid, label="initTDFile"];
8->35 [style = bold, label=""];
38->78 [style = dashed, label="0"];
49->17 [style = solid, label="initTDFile"];
6->37 [style = bold, label=""];
32->57 [style = dashed, label="0"];
40->83 [style = dashed, label="0"];
47->32 [style = bold, label=""];
28->64 [style = bold, label=""];
30->3 [style = bold, label=""];
29->42 [style = bold, label=""];
23->6 [style = bold, label=""];
76->70 [style = bold, label=""];
15->48 [style = bold, label=""];
4->12 [style = bold, label=""];
11->50 [style = bold, label=""];
20->49 [style = bold, label=""];
55->6 [style = bold, label=""];
16->4 [style = bold, label=""];
52->79 [style = dashed, label="0"];
37->39 [style = bold, label=""];
59->14 [style = bold, label=""];
54->64 [style = dashed, label="0"];
48->13 [style = solid, label="initPPF"];
54->51 [style = bold, label=""];
66->77 [style = bold, label=""];
12->50 [style = solid, label="initOut"];
17->31 [style = bold, label=""];
61->79 [style = bold, label=""];
7->81 [style = dashed, label="0"];
69->57 [style = bold, label=""];
72->6 [style = bold, label=""];
22->63 [style = dashed, label="0"];
18->2 [style = bold, label=""];
2->81 [style = bold, label=""];
10->52 [style = bold, label=""];
9->41 [style = bold, label=""];
24->16 [style = bold, label=""];
45->66 [style = dashed, label="0"];
36->27 [style = bold, label=""];
4->49 [style = bold, label=""];
43->15 [style = bold, label=""];
68->71 [style = bold, label=""];
44->28 [style = bold, label=""];
51->22 [style = bold, label=""];
30->58 [style = dashed, label="0"];
12->59 [style = solid, label="initOut"];
34->62 [style = dashed, label="0"];
52->29 [style = bold, label=""];
40->45 [style = bold, label=""];
2->7 [style = bold, label=""];
39->36 [style = bold, label=""];
5->46 [style = bold, label=""];
16->65 [style = dashed, label="0"];
}
