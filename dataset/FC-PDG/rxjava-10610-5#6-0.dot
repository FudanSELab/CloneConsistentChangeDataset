digraph {
19 [style = filled, label = "TestObserver<Integer> to = TestObserver.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(expected.getMessage(),expected.getMessage().startsWith(\"More values received than expected (0)\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AssertionError expected@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "to.assertValueSequence(Collections.emptyList())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "to.assertValueSequence(Collections.singletonList(1))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "to.assertValueSequence(Arrays.asList(1,2))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "to.assertValueSequence(Arrays.asList(1,2,3))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertValueSequence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "to.onNext(2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "AssertionError expected@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(expected.getMessage(),expected.getMessage().startsWith(\"More values received than expected (1)\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "to.onSubscribe(Disposable.empty())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertValueSequence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "throw new RuntimeException(\"Should have thrown\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertValueSequence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "to.onNext(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
4->16 [style = dashed, label="0"];
12->8 [style = dotted, label="true"];
4->13 [style = bold, label=""];
18->19 [style = bold, label=""];
3->15 [style = bold, label=""];
14->1 [style = bold, label=""];
8->0 [style = bold, label=""];
6->14 [style = bold, label=""];
6->14 [style = dotted, label="true"];
19->13 [style = bold, label=""];
11->3 [style = bold, label=""];
12->8 [style = bold, label=""];
15->0 [style = bold, label=""];
10->4 [style = bold, label=""];
13->5 [style = bold, label=""];
4->19 [style = dashed, label="0"];
5->11 [style = bold, label=""];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
9->1 [style = bold, label=""];
17->16 [style = bold, label=""];
}
