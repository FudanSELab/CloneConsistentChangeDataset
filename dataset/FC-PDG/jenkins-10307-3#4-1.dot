digraph {
3 [style = filled, label = "System.out.println(\"Waiting until online in progress...\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(result,succeededSilently())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "System.out.println(\"Waiting until going online is in progress...\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(true))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "onlineNodeShouldSucceedOnDisconnectedNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "slave.toComputer().disconnect()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(slave.toComputer().isOnline(),equalTo(false))@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DumbSlave slave = j.createSlave(\"aNode\",\"\",null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "System.out.println(\"Waiting until going online is in progress...\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "slave.toComputer().isConnecting()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "onlineNodeShouldSucceedOnDisconnectedNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.out.println(\"Waiting until online in progress...\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(slave.toComputer().isOffline(),equalTo(true))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "onlineNodeShouldSucceedOnDisconnectingNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "slave.toComputer().waitUntilOnline()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "slave.toComputer().isConnecting()@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Computer.CONNECT,Jenkins.READ).invokeWithArgs(\"aNode\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "slave.toComputer().waitUntilOffline()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
4->9 [style = bold, label=""];
8->15 [style = bold, label=""];
19->12 [style = bold, label=""];
14->0 [style = dotted, label="true"];
2->6 [style = bold, label=""];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
2->18 [style = bold, label=""];
14->17 [style = bold, label=""];
2->13 [style = dotted, label="true"];
7->8 [style = bold, label=""];
2->18 [style = dotted, label="true"];
14->1 [style = bold, label=""];
14->17 [style = dotted, label="true"];
4->9 [style = solid, label="result"];
15->9 [style = solid, label="result"];
12->2 [style = bold, label=""];
17->0 [style = bold, label=""];
14->5 [style = dotted, label="true"];
5->17 [style = dashed, label="0"];
5->0 [style = bold, label=""];
10->12 [style = bold, label=""];
15->9 [style = bold, label=""];
0->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
6->11 [style = bold, label=""];
18->13 [style = bold, label=""];
9->14 [style = bold, label=""];
3->13 [style = bold, label=""];
8->4 [style = bold, label=""];
13->6 [style = bold, label=""];
16->12 [style = bold, label=""];
11->7 [style = bold, label=""];
14->5 [style = bold, label=""];
}
