digraph {
28 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "timing.sleepABit()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "{node.close()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "node.debugReconnectLatch.countDown()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "node.debugReconnectLatch = new CountDownLatch(1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "{node.close()}@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "node.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->30 [style = bold, label=""];
12->25 [style = bold, label=""];
23->2 [style = bold, label=""];
26->24 [style = bold, label=""];
2->28 [style = solid, label="curator"];
14->7 [style = bold, label=""];
13->6 [style = dotted, label="true"];
13->15 [style = bold, label=""];
19->6 [style = bold, label=""];
0->28 [style = dashed, label="0"];
13->1 [style = dotted, label="true"];
8->1 [style = solid, label="stat"];
25->26 [style = solid, label="originalNode"];
9->8 [style = solid, label="path"];
28->26 [style = bold, label=""];
3->0 [style = solid, label="observer"];
13->10 [style = dotted, label="true"];
5->13 [style = solid, label="i"];
13->8 [style = dotted, label="true"];
9->0 [style = bold, label=""];
25->29 [style = solid, label="originalNode"];
7->22 [style = bold, label=""];
22->20 [style = bold, label=""];
7->20 [style = bold, label=""];
3->18 [style = bold, label=""];
0->11 [style = bold, label=""];
6->8 [style = bold, label=""];
5->13 [style = bold, label=""];
20->19 [style = bold, label=""];
2->3 [style = bold, label=""];
21->2 [style = bold, label=""];
8->1 [style = bold, label=""];
12->9 [style = bold, label=""];
30->27 [style = bold, label=""];
11->13 [style = solid, label="i"];
25->28 [style = solid, label="originalNode"];
25->28 [style = bold, label=""];
2->18 [style = bold, label=""];
9->14 [style = solid, label="path"];
9->0 [style = solid, label="path"];
9->25 [style = dashed, label="0"];
13->16 [style = bold, label=""];
11->5 [style = solid, label="i"];
13->20 [style = dotted, label="true"];
13->19 [style = dotted, label="true"];
11->13 [style = bold, label=""];
4->12 [style = bold, label=""];
13->22 [style = dotted, label="true"];
29->30 [style = solid, label="stat"];
13->15 [style = dotted, label="true"];
13->5 [style = dotted, label="true"];
2->18 [style = solid, label="curator"];
24->29 [style = bold, label=""];
13->14 [style = dotted, label="true"];
15->10 [style = bold, label=""];
10->14 [style = bold, label=""];
13->7 [style = dotted, label="true"];
18->4 [style = bold, label=""];
17->2 [style = bold, label=""];
1->5 [style = bold, label=""];
}
