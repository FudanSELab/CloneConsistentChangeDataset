digraph {
32 [style = filled, label = "testInitializeAsFollowerNonEmptyLog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "log.appendAsLeader(Collections.singleton(new SimpleRecord(\"foo\".getBytes())),lastEpoch)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(3L,log.endOffset().offset)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertSentFetchRequest(epoch,2L,lastEpoch)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "context.assertSentFetchRequest(epoch,2L,lastEpoch)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "int correlationId = assertSentFetchRequest(epoch,3L,lastEpoch)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "int lastEpoch = 3@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(3L,context.log.endOffset().offset)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(ElectionState.withElectedLeader(epoch,otherNodeId,voters),quorumStateStore.readElectionState())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "quorumStateStore.writeElectionState(ElectionState.withElectedLeader(epoch,otherNodeId,voters))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int epoch = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int localId = 0@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.poll()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "client.poll()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(2L,context.log.endOffset().offset)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "context.client.poll()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "int otherNodeId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "FetchResponseData response = context.outOfRangeFetchRecordsResponse(epoch,otherNodeId,2L,lastEpoch,1L)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "context.deliverResponse(correlationId,otherNodeId,response)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "FetchResponseData response = outOfRangeFetchRecordsResponse(epoch,otherNodeId,2L,lastEpoch,1L)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "int correlationId = context.assertSentFetchRequest(epoch,3L,lastEpoch)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "log.appendAsLeader(Arrays.asList(new SimpleRecord(\"baz\".getBytes())),lastEpoch)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSentFetchRequest(epoch,1L,lastEpoch)@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testFollowerLogReconciliation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "context.client.poll()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "log.appendAsLeader(Arrays.asList(new SimpleRecord(\"foo\".getBytes()),new SimpleRecord(\"bar\".getBytes())),lastEpoch)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "pollUntilSend(client)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "context.pollUntilSend()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(2L,log.endOffset().offset)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "testFollowerLogReconciliation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).updateLog(null).build()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "deliverResponse(correlationId,otherNodeId,response)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = solid, label="epoch"];
24->28 [style = bold, label=""];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
10->4 [style = solid, label="otherNodeId"];
15->13 [style = bold, label=""];
6->16 [style = solid, label="epoch"];
17->9 [style = solid, label="correlationId"];
11->34 [style = dashed, label="0"];
6->4 [style = solid, label="epoch"];
11->14 [style = bold, label=""];
6->13 [style = solid, label="epoch"];
10->7 [style = solid, label="otherNodeId"];
20->7 [style = solid, label="localId"];
16->9 [style = solid, label="response"];
10->16 [style = solid, label="otherNodeId"];
7->3 [style = solid, label="voters"];
31->24 [style = bold, label=""];
6->30 [style = solid, label="epoch"];
1->11 [style = solid, label="lastEpoch"];
33->4 [style = bold, label=""];
2->34 [style = bold, label=""];
34->33 [style = bold, label=""];
1->16 [style = solid, label="lastEpoch"];
10->27 [style = solid, label="otherNodeId"];
6->8 [style = solid, label="epoch"];
1->34 [style = solid, label="lastEpoch"];
10->24 [style = solid, label="otherNodeId"];
33->3 [style = solid, label="client"];
7->31 [style = bold, label=""];
6->2 [style = solid, label="epoch"];
1->13 [style = solid, label="lastEpoch"];
10->3 [style = solid, label="otherNodeId"];
4->8 [style = solid, label="client"];
6->24 [style = solid, label="epoch"];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
30->29 [style = bold, label=""];
0->15 [style = bold, label=""];
32->10 [style = bold, label=""];
26->22 [style = bold, label=""];
1->17 [style = solid, label="lastEpoch"];
1->30 [style = solid, label="lastEpoch"];
1->29 [style = solid, label="lastEpoch"];
20->10 [style = bold, label=""];
2->31 [style = dashed, label="0"];
8->17 [style = bold, label=""];
6->1 [style = bold, label=""];
29->27 [style = bold, label=""];
21->26 [style = bold, label=""];
25->20 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
6->17 [style = solid, label="epoch"];
9->18 [style = bold, label=""];
10->2 [style = solid, label="otherNodeId"];
23->21 [style = bold, label=""];
6->29 [style = solid, label="epoch"];
1->14 [style = solid, label="lastEpoch"];
7->2 [style = bold, label=""];
10->29 [style = solid, label="otherNodeId"];
3->8 [style = bold, label=""];
30->27 [style = solid, label="correlationId"];
6->22 [style = solid, label="epoch"];
28->19 [style = bold, label=""];
17->8 [style = dashed, label="0"];
29->27 [style = solid, label="response"];
27->23 [style = bold, label=""];
1->8 [style = solid, label="lastEpoch"];
7->4 [style = solid, label="voters"];
7->2 [style = solid, label="voters"];
10->9 [style = solid, label="otherNodeId"];
7->33 [style = solid, label="voters"];
2->11 [style = bold, label=""];
16->9 [style = bold, label=""];
18->0 [style = bold, label=""];
17->16 [style = bold, label=""];
1->22 [style = solid, label="lastEpoch"];
14->4 [style = bold, label=""];
19->30 [style = bold, label=""];
}
