digraph {
9 [style = filled, label = "overlordServerView = new CoordinatorServerView(baseView,new CoordinatorSegmentWatcherConfig())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadataManager,baseView,metadataRuleManager,null,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,null,new CoordinatorCustomDutyGroups(ImmutableSet.of()),new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector(),null,ZkEnablementConfig.ENABLED)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "baseView = new BatchServerInventoryView(zkPathsConfig,curator,jsonMapper,Predicates.alwaysTrue()){@Override public void registerSegmentCallback(Executor exec,final SegmentCallback callback){super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9ad966execnew SegmentCallback(){@Override public CallbackAction segmentAdded(DruidServerMetadata server,DataSegment segment){CallbackAction res = callback.segmentAdded(server,segment)segmentAddedLatch.countDown()return res}@Override public CallbackAction segmentRemoved(DruidServerMetadata server,DataSegment segment){CallbackAction res = callback.segmentRemoved(server,segment)segmentRemovedLatch.countDown()return res}@Override public CallbackAction segmentViewInitialized(){CallbackAction res = callback.segmentViewInitialized()segmentViewInitLatch.countDown()return res}}}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "baseView.start()@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "destinationLoadQueuePeon.start()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "serverView = new CoordinatorServerView(baseView,new CoordinatorSegmentWatcherConfig())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "setupViews['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "setupView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sourceLoadQueuePeon.start()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setupView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->6 [style = bold, label=""];
3->1 [style = solid, label="baseView"];
0->5 [style = bold, label=""];
3->0 [style = bold, label=""];
3->0 [style = solid, label="baseView"];
3->9 [style = solid, label="baseView"];
6->1 [style = bold, label=""];
3->9 [style = bold, label=""];
9->5 [style = bold, label=""];
5->4 [style = bold, label=""];
8->3 [style = bold, label=""];
2->3 [style = bold, label=""];
0->9 [style = dashed, label="0"];
7->3 [style = bold, label=""];
}
