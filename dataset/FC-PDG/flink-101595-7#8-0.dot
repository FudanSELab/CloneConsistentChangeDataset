digraph {
16 [style = filled, label = "fail(\"The future should fail exceptionally.\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "{cluster.after()}@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cluster.before()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MiniClusterWithClientResource cluster = new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setNumberSlotsPerTaskManager(parallelism).setConfiguration(configuration).build())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "env.getConfig().setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,0L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestAddres(),jobGraph.getJobID())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestAddres(),jobGraph.getJobID())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "env.setParallelism(parallelism)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testStopWithSavepointWithDrainCallsFinishBeforeSnapshotState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Configuration configuration = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cluster.before()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MiniClusterWithClientResource cluster = new MiniClusterWithClientResource(new MiniClusterResourceConfiguration.Builder().setNumberSlotsPerTaskManager(sinkParallelism + 1).build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testStopWithSavepointWithDrainGlobalFailoverIfSavepointAborted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final int parallelism = 2@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "client.submitJob(jobGraph).get()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testStopWithSavepointWithDrainCallsFinishBeforeSnapshotState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "client.stopWithSavepoint(jobGraph.getJobID(),true,savepointDir.getAbsolutePath()).get()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestClusterClient(),jobGraph.getJobID())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "int sinkParallelism = 5@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "waitUntilAllTasksAreRunning(cluster.getRestAddres(),jobGraph.getJobID())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "configuration.setString(HighAvailabilityOptions.HA_MODE,.getName())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ExecutionException ignored@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "env.addSource(new InfiniteTestSource()).name(\"Infinite test source\").addSink(new DiscardingSink<>())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ClusterClient<?> client = cluster.getClusterClient()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.getConfig().setRestartStrategy(RestartStrategies.noRestart())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
13->10 [style = bold, label=""];
0->9 [style = bold, label=""];
7->11 [style = bold, label=""];
4->24 [style = bold, label=""];
20->17 [style = bold, label=""];
24->2 [style = bold, label=""];
11->1 [style = bold, label=""];
25->18 [style = bold, label=""];
10->12 [style = solid, label="sinkParallelism"];
4->2 [style = bold, label=""];
5->14 [style = bold, label=""];
21->25 [style = bold, label=""];
6->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
28->16 [style = bold, label=""];
12->7 [style = bold, label=""];
29->21 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
18->22 [style = bold, label=""];
5->6 [style = bold, label=""];
18->19 [style = solid, label="parallelism"];
22->12 [style = bold, label=""];
19->26 [style = bold, label=""];
26->23 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
23->1 [style = bold, label=""];
12->19 [style = bold, label=""];
16->20 [style = bold, label=""];
15->27 [style = bold, label=""];
2->28 [style = bold, label=""];
27->20 [style = bold, label=""];
8->12 [style = bold, label=""];
14->4 [style = bold, label=""];
}
