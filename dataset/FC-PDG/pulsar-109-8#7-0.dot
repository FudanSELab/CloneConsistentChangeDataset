digraph {
24 [style = filled, label = "stats.setAddress(\"address1\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertTrue(allowedFields.contains(field),field + \" should not be exposed\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "ObjectMapper mapper = ObjectMapperFactory.create()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(stats.getConnectedSince(),\"connected\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "itr.hasNext()@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertNull(stats.getConnectedSince())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "stats.setConnectedSince(null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(stats.getAddress())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(stats.getAddress(),\"address1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "stats.setConnectedSince(\"connected\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(stats.getClientVersion(),\"version\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stats.setClientVersion(\"version2\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stats.setProducerName(null)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(stats.getClientVersion())@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testConsumerStats['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(stats.getAddress(),\"address1\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "stats.setProducerName(\"producer\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(stats.getClientVersion())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(stats.getConnectedSince(),\"\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "stats.setClientVersion(\"version\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(stats.getAddress())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(stats.getProducerName(),\"producer\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(stats.getAddress(),\"address\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "stats.setConnectedSince(\"\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(stats.getConnectedSince(),\"connected\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(stats.getClientVersion(),\"version2\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Set<String> allowedFields = Sets.newHashSet(\"accessMode\",\"msgRateIn\",\"msgThroughputIn\",\"averageMsgSize\",\"chunkedMessageRate\",\"producerId\",\"metadata\",\"address\",\"connectedSince\",\"clientVersion\",\"producerName\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(stats.getClientVersion(),\"version\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String field = itr.next()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertNull(stats.getConnectedSince())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(stats.getAddress(),\"address1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertNull(stats.getClientVersion())@@@45@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertNull(stats.getAddress())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(stats.getClientVersion(),\"version2\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "JsonNode node = mapper.readTree(mapper.writer().writeValueAsString(stats))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testPublisherStats['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(stats.getConnectedSince())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ConsumerStatsImpl stats = new ConsumerStatsImpl()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(stats.getClientVersion(),\"version\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(stats.getAddress(),\"address1\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Iterator<String> itr = node.fieldNames()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "testPublisherStats['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "stats.setAddress(null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stats.setAddress(\"address\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(stats.getClientVersion(),\"version2\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PublisherStatsImpl stats = new PublisherStatsImpl()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "stats.setClientVersion(null)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = bold, label=""];
11->12 [style = bold, label=""];
20->10 [style = bold, label=""];
34->28 [style = bold, label=""];
36->43 [style = bold, label=""];
10->30 [style = bold, label=""];
25->2 [style = bold, label=""];
24->20 [style = bold, label=""];
40->36 [style = bold, label=""];
37->44 [style = bold, label=""];
4->11 [style = bold, label=""];
7->16 [style = bold, label=""];
21->17 [style = bold, label=""];
41->43 [style = bold, label=""];
28->23 [style = bold, label=""];
33->7 [style = bold, label=""];
32->27 [style = bold, label=""];
15->21 [style = bold, label=""];
38->39 [style = bold, label=""];
46->21 [style = bold, label=""];
13->24 [style = bold, label=""];
0->13 [style = bold, label=""];
26->9 [style = bold, label=""];
26->14 [style = bold, label=""];
39->41 [style = bold, label=""];
8->1 [style = bold, label=""];
14->31 [style = bold, label=""];
43->34 [style = bold, label=""];
27->8 [style = bold, label=""];
35->5 [style = bold, label=""];
12->32 [style = bold, label=""];
23->6 [style = bold, label=""];
45->46 [style = bold, label=""];
22->26 [style = bold, label=""];
40->36 [style = solid, label="field"];
6->3 [style = bold, label=""];
3->19 [style = bold, label=""];
43->40 [style = bold, label=""];
21->39 [style = solid, label="stats"];
19->4 [style = bold, label=""];
5->29 [style = bold, label=""];
43->40 [style = dotted, label="true"];
29->22 [style = bold, label=""];
25->0 [style = bold, label=""];
43->36 [style = dotted, label="true"];
2->0 [style = bold, label=""];
30->35 [style = bold, label=""];
44->21 [style = bold, label=""];
9->38 [style = bold, label=""];
31->33 [style = bold, label=""];
15->46 [style = dashed, label="0"];
9->34 [style = bold, label=""];
17->25 [style = bold, label=""];
1->42 [style = bold, label=""];
16->9 [style = bold, label=""];
18->15 [style = bold, label=""];
}
