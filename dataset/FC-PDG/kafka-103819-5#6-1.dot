digraph {
0 [style = filled, label = "env.kafkaClient().prepareResponse(null,new CreateTopicsResponse(Collections.singletonMap(\"myTopic\",new ApiError(Errors.NONE,\"\"))))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testConnectionFailureOnMetadataUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Cluster cluster = mockBootstrapCluster()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.kafkaClient().prepareResponse(null,new MetadataResponse(discoveredCluster.nodes(),discoveredCluster.clusterResource().clusterId(),1,Collections.emptyList()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testConnectionFailureOnMetadataUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "env.kafkaClient().setUnreachable(cluster.nodes().get(0),200)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Cluster cluster = Cluster.bootstrap(Collections.singletonList(new InetSocketAddress(\"localhost\",8121)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testUnreachableBootstrapServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Cluster discoveredCluster = mockCluster(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KafkaFuture<Void> future = env.adminClient().createTopics(Collections.singleton(new NewTopic(\"myTopic\",Collections.singletonMap(0,asList(0,1,2)))),new CreateTopicsOptions().timeoutMs(10000)).all()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.kafkaClient().prepareResponse(null,new MetadataResponse(discoveredCluster.nodes(),discoveredCluster.clusterResource().clusterId(),1,Collections.emptyList()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.kafkaClient().prepareResponse(null,null,true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "future.get()@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.kafkaClient().prepareResponse(null,prepareCreateTopicsResponse(\"myTopic\",Errors.NONE))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
5->1 [style = bold, label=""];
3->6 [style = bold, label=""];
8->10 [style = bold, label=""];
1->2 [style = bold, label=""];
13->0 [style = bold, label=""];
14->13 [style = bold, label=""];
9->1 [style = bold, label=""];
0->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
1->11 [style = dashed, label="0"];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
6->8 [style = bold, label=""];
2->3 [style = bold, label=""];
3->14 [style = bold, label=""];
12->11 [style = bold, label=""];
10->4 [style = bold, label=""];
}
