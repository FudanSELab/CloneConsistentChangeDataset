digraph {
0 [style = filled, label = "List<CombinedScanTask> scanTasks = tasks()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return readTasks@@@12@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "readTasks.add(new ReadTask<>(task,tableBroadcast,expectedSchemaString,caseSensitive,localityPreferred,InternalRowReaderFactory.INSTANCE))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<InputPartition<InternalRow>> readTasks = Lists.newArrayList()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String expectedSchemaString = SchemaParser.toJson(expectedSchema)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Tasks.range(readTasks.length).stopOnFailure().executeWith(localityPreferred? ThreadPools.getWorkerPool(): null).run(null)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "readTasks(i( = new ReadTask(scanTasks.get(i),tableBroadcast,expectedSchemaString,caseSensitive,localityPreferred)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Broadcast<Table> tableBroadcast = sparkContext.broadcast(SerializableTable.copyOf(table))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String expectedSchemaString = SchemaParser.toJson(lazySchema())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "planInputPartitions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return readTasks@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "InputPartition(( readTasks = new InputPartition((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "planInputPartitions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "planInputPartitions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return readTasks@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "i < scanTasks.size()@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
4->6 [style = dotted, label="true"];
5->3 [style = bold, label=""];
16->13 [style = bold, label=""];
6->4 [style = solid, label="i"];
9->13 [style = solid, label="tableBroadcast"];
1->8 [style = bold, label=""];
9->0 [style = bold, label=""];
5->11 [style = solid, label="readTasks"];
8->15 [style = dashed, label="0"];
3->7 [style = solid, label="i"];
12->11 [style = bold, label=""];
4->7 [style = dotted, label="true"];
5->2 [style = solid, label="readTasks"];
4->2 [style = bold, label=""];
16->14 [style = solid, label="readTasks"];
6->7 [style = solid, label="i"];
3->4 [style = bold, label=""];
9->16 [style = bold, label=""];
4->7 [style = bold, label=""];
3->4 [style = solid, label="i"];
6->4 [style = bold, label=""];
9->7 [style = solid, label="tableBroadcast"];
10->8 [style = bold, label=""];
5->12 [style = bold, label=""];
15->9 [style = bold, label=""];
7->2 [style = solid, label="readTasks"];
7->6 [style = bold, label=""];
15->13 [style = solid, label="expectedSchemaString"];
17->15 [style = bold, label=""];
8->7 [style = solid, label="expectedSchemaString"];
8->9 [style = bold, label=""];
7->6 [style = solid, label="i"];
13->14 [style = bold, label=""];
0->5 [style = bold, label=""];
}
