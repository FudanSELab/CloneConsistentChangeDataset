digraph {
24 [style = filled, label = "InputRow row = rowPlusRaw.getInputRow()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(expected,raw)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Map<String,Object> raw = rowPlusRaw.getRawValues()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Map<String,Object> expected = new HashMap<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "testNextRowWithRawParseable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expected.put(\"timestamp\",TIMESTAMP_1)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "byte(( raw = rowPlusRaw.getRaw()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertRowValue(VALUE_0,row0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertRawValue(LINE_1,rowPlusRaw.getRaw())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(target.hasMore())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertRowValue(VALUE_0,row)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "InputRowListPlusRawValues rowPlusRaw = target.nextRowWithRaw()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "InputRow row0 = target.nextRow()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testMultiline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "InlineFirehose target = create(data)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertFalse(target.hasMore())@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "final String data = PARSEABLE@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertNull(rowPlusRaw.getParseException())@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertRowValue(VALUE_1,Iterables.getOnlyElement(rowPlusRaw.getInputRows()))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testMultiline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertRowValue(VALUE_1,rowPlusRaw.getInputRow())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "InputRowListPlusJson rowPlusRaw = target.nextRowWithRaw()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "InlineFirehose target = create(MULTILINE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertRawValue(data,raw)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expected.put(\"value\",VALUE_1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertFalse(target.hasMore())@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23->25 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
27->21 [style = solid, label="raw"];
24->5 [style = solid, label="row"];
18->12 [style = solid, label="expected"];
20->26 [style = bold, label=""];
2->3 [style = bold, label=""];
12->15 [style = bold, label=""];
26->23 [style = solid, label="data"];
7->11 [style = dashed, label="0"];
19->11 [style = bold, label=""];
16->19 [style = bold, label=""];
9->8 [style = bold, label=""];
11->18 [style = bold, label=""];
24->5 [style = bold, label=""];
5->16 [style = dashed, label="0"];
8->1 [style = bold, label=""];
25->24 [style = bold, label=""];
15->17 [style = bold, label=""];
26->21 [style = solid, label="data"];
5->6 [style = bold, label=""];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
6->24 [style = dashed, label="0"];
14->12 [style = bold, label=""];
26->23 [style = bold, label=""];
6->19 [style = dashed, label="0"];
18->13 [style = bold, label=""];
11->12 [style = solid, label="raw"];
10->9 [style = bold, label=""];
1->4 [style = solid, label="row0"];
5->27 [style = bold, label=""];
6->7 [style = bold, label=""];
27->21 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
4->16 [style = bold, label=""];
}
