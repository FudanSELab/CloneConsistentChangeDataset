digraph {
5 [style = filled, label = "env.getConfig().setMaxParallelism(globalMaxParallelism)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testAutoMaxParallelism['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DataStream<Integer> keyedResult2 = keyedResult1.keyBy(new KeySelector<Integer,Integer>(){@Override public Integer getKey(Integer value){return value}}).map(new NoOpIntMap()).setParallelism(mapParallelism)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int globalMaxParallelism = 42@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int maxParallelism = 21@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testMaxParallelismForwarding['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "keyedResult4.addSink(new DiscardingSink<Integer>())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "StreamNode keyedResult1Node = graph.getStreamNode(keyedResult1.getId())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DataStream<Integer> keyedResult1 = source.keyBy(new KeySelector<Integer,Integer>(){@Override public Integer getKey(Integer value){return value}}).map(new NoOpIntMap())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DataStream<Integer> source = env.fromElements(1,2,3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testMaxParallelismForwarding['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "StreamGraph graph = env.getStreamGraph()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int mapParallelism = 17@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "StreamNode keyedResult4Node = graph.getStreamNode(keyedResult4.getId())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StreamGraph graph = env.getStreamGraph()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(keyedResult2MaxParallelism,keyedResult2Node.getMaxParallelism())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "keyedResult2.addSink(new DiscardingSink<Integer>())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamNode keyedResult2Node = graph.getStreamNode(keyedResult2.getId())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "env.setParallelism(globalParallelism)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(maxParallelism,keyedResult4Node.getMaxParallelism())@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "DataStream<Integer> keyedResult3 = keyedResult2.keyBy(new KeySelector<Integer,Integer>(){@Override public Integer getKey(Integer value){return value}}).map(new NoOpIntMap()).setMaxParallelism(maxParallelism)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "StreamNode keyedResult3Node = graph.getStreamNode(keyedResult3.getId())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "DataStream<Integer> keyedResult4 = keyedResult3.keyBy(new KeySelector<Integer,Integer>(){@Override public Integer getKey(Integer value){return value}}).map(new NoOpIntMap()).setMaxParallelism(maxParallelism).setParallelism(mapParallelism)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int keyedResult2MaxParallelism = 17@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int globalParallelism = 42@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DataStream<Integer> source = env.fromElements(1,2,3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(globalMaxParallelism,keyedResult1Node.getMaxParallelism())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(maxParallelism,keyedResult3Node.getMaxParallelism())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
0->6 [style = bold, label=""];
14->5 [style = bold, label=""];
24->21 [style = bold, label=""];
8->14 [style = bold, label=""];
7->29 [style = dashed, label="0"];
0->28 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
9->4 [style = bold, label=""];
16->25 [style = bold, label=""];
20->18 [style = bold, label=""];
17->19 [style = bold, label=""];
15->4 [style = bold, label=""];
28->26 [style = bold, label=""];
14->13 [style = bold, label=""];
23->19 [style = solid, label="maxParallelism"];
3->21 [style = dashed, label="0"];
13->16 [style = dashed, label="0"];
23->28 [style = solid, label="maxParallelism"];
4->8 [style = bold, label=""];
10->28 [style = bold, label=""];
22->20 [style = bold, label=""];
3->7 [style = bold, label=""];
26->27 [style = bold, label=""];
25->12 [style = bold, label=""];
21->29 [style = bold, label=""];
23->17 [style = solid, label="maxParallelism"];
11->19 [style = dashed, label="0"];
8->10 [style = solid, label="keyedResult2MaxParallelism"];
1->11 [style = bold, label=""];
18->10 [style = solid, label="mapParallelism"];
12->10 [style = bold, label=""];
27->24 [style = bold, label=""];
23->13 [style = bold, label=""];
4->1 [style = solid, label="globalMaxParallelism"];
13->16 [style = bold, label=""];
6->3 [style = bold, label=""];
29->17 [style = bold, label=""];
4->20 [style = dashed, label="0"];
7->1 [style = bold, label=""];
20->16 [style = solid, label="globalParallelism"];
1->17 [style = dashed, label="0"];
18->26 [style = solid, label="mapParallelism"];
8->11 [style = solid, label="keyedResult2MaxParallelism"];
13->5 [style = bold, label=""];
10->0 [style = bold, label=""];
2->12 [style = bold, label=""];
4->5 [style = solid, label="globalMaxParallelism"];
18->23 [style = bold, label=""];
}
