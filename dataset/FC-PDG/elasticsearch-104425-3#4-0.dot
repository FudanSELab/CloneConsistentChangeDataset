digraph {
24 [style = filled, label = "fragments.clear()@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "transportMessage.writeTo(out)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertTrue(header.isCompressed())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertTrue(header.isRequest())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(1,releasable1.refCount())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final String headerValue = randomAlphaOfLength(20)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "message = new OutboundMessage.Request(threadContext,transportMessage,Version.CURRENT,action,requestId,false,true)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "isRequest@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(header.isHandshake())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "threadContext.addResponseHeader(headerKey,headerValue)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(header.isResponse())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final ArrayList<Object> fragments = new ArrayList<>()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "message = new OutboundMessage.Request(threadContext,new TestRequest(randomAlphaOfLength(100)),Version.CURRENT,action,requestId,false,null)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "testDecode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertTrue(header.isResponse())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "isRequest@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String headerKey = randomAlphaOfLength(10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int totalHeaderSize = TcpHeader.headerSize(Version.CURRENT) + totalBytes.getInt(TcpHeader.VARIABLE_HEADER_SIZE_POSITION)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ReleasableBytesReference releasable1 = ReleasableBytesReference.wrap(totalBytes)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final BytesReference totalBytes = message.serialize(new BytesStreamOutput())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Object endMarker = fragments.get(1)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "OutboundMessage message@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final ReleasableBytesReference releasable2 = ReleasableBytesReference.wrap(bytes2)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "message = new OutboundMessage.Response(threadContext,new TestResponse(randomAlphaOfLength(100)),Version.CURRENT,requestId,false,null)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "fragments.clear()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(InboundDecoder.END_CONTENT,endMarker)@@@59@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "final BytesStreamOutput out = new BytesStreamOutput()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "TransportMessage transportMessage@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "message = new OutboundMessage.Response(threadContext,new TestResponse(randomAlphaOfLength(100)),Version.CURRENT,requestId,false,false)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(uncompressedBytes,content)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(header.getHeaders().v2().get(headerKey),hasItems(headerValue))@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(totalBytes.length() - totalHeaderSize,bytesConsumed2)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "boolean isRequest = randomBoolean()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "message = new OutboundMessage.Response(threadContext,transportMessage,Version.CURRENT,requestId,false,true)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(InboundDecoder.END_CONTENT,endMarker)@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(header.needsToReadVariableHeader())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final BytesReference uncompressedBytes = out.bytes()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "int bytesConsumed2 = decoder.decode(releasable2,null)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int totalHeaderSize = TcpHeader.headerSize(Version.CURRENT) + totalBytes.getInt(TcpHeader.VARIABLE_HEADER_SIZE_POSITION)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String action = \"test-request\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "threadContext.putHeader(headerKey,headerValue)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testCompressedDecode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(action,header.getActionName())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Header header = (Header)fragments.get(0)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "InboundDecoder decoder = new InboundDecoder(Version.CURRENT,PageCacheRecycler.NON_RECYCLING_INSTANCE)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "isRequest@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "transportMessage = new TestResponse(randomAlphaOfLength(100))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Version.CURRENT,header.getVersion())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(totalHeaderSize,bytesConsumed)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "transportMessage = new TestRequest(randomAlphaOfLength(100))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(header.getHeaders().v1().get(headerKey),headerValue)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testDecode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ArrayList<Object> fragments = new ArrayList<>()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final BytesReference totalBytes = message.serialize(new BytesStreamOutput())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "long requestId = randomNonNegativeLong()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int bytesConsumed = decoder.decode(releasable1,null)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "isRequest@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(header.getHeaders().v2().get(headerKey),hasItems(headerValue))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Object content = fragments.get(0)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final BytesReference bytes2 = totalBytes.slice(bytesConsumed,totalBytes.length() - bytesConsumed)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "message = new OutboundMessage.Request(threadContext,new TestRequest(randomAlphaOfLength(100)),Version.CURRENT,action,requestId,false,false)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(requestId,header.getRequestId())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(1,releasable2.refCount())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61->48 [style = solid, label="transportMessage"];
43->62 [style = dotted, label="true"];
37->27 [style = bold, label=""];
11->14 [style = bold, label=""];
60->29 [style = bold, label=""];
53->52 [style = solid, label="uncompressedBytes"];
2->19 [style = dotted, label="false"];
1->20 [style = bold, label=""];
39->34 [style = solid, label="requestId"];
12->45 [style = solid, label="action"];
8->6 [style = solid, label="totalHeaderSize"];
62->55 [style = bold, label=""];
53->11 [style = bold, label=""];
15->57 [style = bold, label=""];
39->3 [style = solid, label="requestId"];
2->18 [style = dotted, label="true"];
20->27 [style = bold, label=""];
22->8 [style = bold, label=""];
7->55 [style = solid, label="headerKey"];
34->56 [style = dashed, label="0"];
0->28 [style = solid, label="bytesConsumed2"];
45->22 [style = bold, label=""];
43->55 [style = dotted, label="true"];
34->17 [style = bold, label=""];
43->1 [style = bold, label=""];
6->42 [style = solid, label="releasable1"];
25->19 [style = bold, label=""];
20->37 [style = bold, label=""];
48->21 [style = bold, label=""];
21->6 [style = solid, label="totalBytes"];
9->48 [style = dotted, label="true"];
38->26 [style = bold, label=""];
38->26 [style = solid, label="releasable1"];
40->31 [style = bold, label=""];
41->22 [style = bold, label=""];
39->45 [style = solid, label="requestId"];
42->0 [style = solid, label="bytesConsumed"];
2->25 [style = bold, label=""];
4->16 [style = bold, label=""];
0->28 [style = solid, label="bytes2"];
7->23 [style = solid, label="headerKey"];
29->62 [style = solid, label="isRequest"];
5->29 [style = bold, label=""];
11->4 [style = solid, label="totalHeaderSize"];
28->30 [style = bold, label=""];
24->0 [style = bold, label=""];
19->20 [style = bold, label=""];
43->51 [style = bold, label=""];
7->13 [style = solid, label="headerKey"];
26->27 [style = solid, label="bytesConsumed"];
28->30 [style = solid, label="releasable2"];
11->32 [style = solid, label="totalHeaderSize"];
2->18 [style = bold, label=""];
14->38 [style = bold, label=""];
40->19 [style = solid, label="headerValue"];
22->38 [style = solid, label="totalBytes"];
16->52 [style = solid, label="content"];
26->6 [style = bold, label=""];
27->24 [style = solid, label="bytes2"];
2->25 [style = dotted, label="false"];
36->50 [style = dashed, label="0"];
40->13 [style = solid, label="headerValue"];
61->48 [style = bold, label=""];
39->41 [style = solid, label="requestId"];
17->2 [style = bold, label=""];
39->7 [style = bold, label=""];
21->11 [style = bold, label=""];
15->9 [style = bold, label=""];
31->23 [style = dotted, label="true"];
9->44 [style = bold, label=""];
39->54 [style = solid, label="requestId"];
9->49 [style = dotted, label="false"];
55->27 [style = bold, label=""];
42->32 [style = bold, label=""];
24->0 [style = solid, label="releasable2"];
7->20 [style = solid, label="headerKey"];
44->22 [style = bold, label=""];
13->15 [style = bold, label=""];
56->18 [style = bold, label=""];
43->1 [style = dotted, label="true"];
35->34 [style = bold, label=""];
9->54 [style = dotted, label="false"];
1->62 [style = bold, label=""];
49->54 [style = bold, label=""];
26->6 [style = solid, label="bytesConsumed"];
9->3 [style = dotted, label="true"];
12->1 [style = solid, label="action"];
21->16 [style = solid, label="messageBytes"];
21->47 [style = bold, label=""];
47->59 [style = solid, label="out"];
16->36 [style = bold, label=""];
49->54 [style = solid, label="transportMessage"];
16->52 [style = dashed, label="0"];
3->61 [style = dashed, label="0"];
39->33 [style = solid, label="requestId"];
12->18 [style = solid, label="action"];
50->58 [style = bold, label=""];
36->52 [style = bold, label=""];
31->13 [style = bold, label=""];
23->15 [style = bold, label=""];
6->42 [style = bold, label=""];
8->28 [style = solid, label="totalHeaderSize"];
8->21 [style = solid, label="totalHeaderSize"];
29->31 [style = solid, label="isRequest"];
4->10 [style = solid, label="endMarker"];
47->59 [style = bold, label=""];
51->20 [style = bold, label=""];
32->33 [style = bold, label=""];
46->29 [style = bold, label=""];
59->53 [style = bold, label=""];
12->3 [style = solid, label="action"];
29->2 [style = solid, label="isRequest"];
7->1 [style = solid, label="headerKey"];
9->45 [style = dotted, label="true"];
30->16 [style = solid, label="content"];
39->44 [style = solid, label="requestId"];
3->45 [style = dashed, label="0"];
29->43 [style = solid, label="isRequest"];
40->20 [style = solid, label="headerValue"];
57->9 [style = bold, label=""];
9->3 [style = bold, label=""];
54->21 [style = bold, label=""];
52->50 [style = bold, label=""];
27->24 [style = bold, label=""];
12->39 [style = bold, label=""];
9->49 [style = bold, label=""];
7->40 [style = bold, label=""];
40->23 [style = solid, label="headerValue"];
36->10 [style = bold, label=""];
30->4 [style = solid, label="bytesConsumed2"];
33->35 [style = bold, label=""];
31->23 [style = bold, label=""];
11->38 [style = bold, label=""];
9->61 [style = dotted, label="true"];
2->43 [style = dotted, label="true"];
7->19 [style = solid, label="headerKey"];
40->1 [style = solid, label="headerValue"];
12->48 [style = solid, label="action"];
36->58 [style = solid, label="endMarker"];
3->22 [style = bold, label=""];
40->55 [style = solid, label="headerValue"];
9->41 [style = bold, label=""];
41->49 [style = dashed, label="0"];
9->61 [style = bold, label=""];
29->12 [style = bold, label=""];
43->51 [style = dotted, label="false"];
18->43 [style = bold, label=""];
29->9 [style = solid, label="isRequest"];
2->1 [style = dotted, label="true"];
30->4 [style = bold, label=""];
9->45 [style = bold, label=""];
31->13 [style = dotted, label="false"];
39->48 [style = solid, label="requestId"];
8->21 [style = bold, label=""];
43->20 [style = dotted, label="false"];
42->32 [style = solid, label="bytesConsumed"];
17->56 [style = bold, label=""];
9->41 [style = dotted, label="false"];
41->44 [style = dashed, label="0"];
0->28 [style = bold, label=""];
9->44 [style = dotted, label="false"];
}
