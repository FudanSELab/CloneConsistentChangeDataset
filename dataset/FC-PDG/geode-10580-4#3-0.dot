digraph {
9 [style = filled, label = "when(throwingSupplier.getAsInt()).thenThrow()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(23,stats.getInt(4))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "invokeIntSuppliersShouldUpdateStats['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IntSupplier throwingSupplier = mock()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(1,stats.invokeSuppliers())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "when(supplier1.getAsInt()).thenThrow()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "verify(supplier1).getAsInt()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verify(throwingSupplier).getAsInt()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(statistics.invokeSuppliers()).isEqualTo(1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "invokeSuppliersShouldCatchSupplierErrorsAndReturnCount['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "invokeSuppliersShouldCatchSupplierErrorsAndReturnCount['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "statistics.setIntSupplier(4,throwingSupplier)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(0,stats.invokeSuppliers())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(supplier1.getAsInt()).thenReturn(23)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "stats.setIntSupplier(4,supplier1)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "IntSupplier supplier1 = mock()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
4->15 [style = bold, label=""];
5->2 [style = solid, label="supplier1"];
0->12 [style = dashed, label="0"];
4->6 [style = dashed, label="0"];
9->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
10->6 [style = bold, label=""];
0->10 [style = dashed, label="0"];
2->12 [style = bold, label=""];
7->9 [style = bold, label=""];
2->0 [style = bold, label=""];
3->2 [style = bold, label=""];
12->4 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
5->13 [style = bold, label=""];
13->2 [style = bold, label=""];
7->8 [style = solid, label="throwingSupplier"];
5->7 [style = dashed, label="0"];
11->7 [style = bold, label=""];
14->5 [style = bold, label=""];
}
