digraph {
0 [style = filled, label = "result.getIndexColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result.setReferencedTable((SimpleTableSegment)visit(ctx.tableConstraintOption().tableName()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final TableConstraintContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "null != ctx.UNIQUE()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return result@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexName()))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "null != ctx.tableConstraintOption().FOREIGN()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "result.setIndexName(new IndexSegment(ctx.indexNameAndType().indexName().start.getStartIndex(),ctx.indexNameAndType().indexName().stop.getStopIndex(),(IdentifierValue)visit(ctx.indexNameAndType().indexName())))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "return result@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "null != ctx.indexNameAndType()@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "null != ctx.checkConstraint()@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "return result@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return result@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "return result@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexNameAndType().indexName()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "visitTableConstraintDef['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "visitTableConstraint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "result.setReferencedTable((SimpleTableSegment)visit(ctx.referenceDefinition()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "result.getPrimaryKeyColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>)visit(ctx.tableConstraintOption().columnNames(0))).getValue())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result.getIndexColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final TableConstraintDefContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "null != ctx.indexName()@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(),ctx.getStop().getStopIndex())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "null != ctx.tableConstraintOption().primaryKey()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "null != ctx.indexNameAndType()@@@26@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexNameAndType().indexName()))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "null != ctx.FOREIGN()@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "null != ctx.KEY() && null != ctx.PRIMARY()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "visitTableConstraintDef['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
17->8 [style = bold, label=""];
5->10 [style = bold, label=""];
19->12 [style = bold, label=""];
11->8 [style = solid, label="result"];
16->10 [style = bold, label=""];
4->1 [style = dotted, label="true"];
5->26 [style = dashed, label="0"];
1->15 [style = bold, label=""];
27->28 [style = bold, label=""];
13->20 [style = dotted, label="true"];
11->4 [style = bold, label=""];
18->19 [style = dotted, label="true"];
18->19 [style = bold, label=""];
18->12 [style = bold, label=""];
4->27 [style = dashed, label="0"];
28->26 [style = bold, label=""];
10->17 [style = bold, label=""];
26->8 [style = bold, label=""];
3->22 [style = dashed, label="0"];
4->15 [style = dotted, label="true"];
1->28 [style = dashed, label="0"];
2->10 [style = bold, label=""];
7->8 [style = bold, label=""];
26->24 [style = bold, label=""];
22->23 [style = bold, label=""];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
0->7 [style = bold, label=""];
20->18 [style = bold, label=""];
27->28 [style = dotted, label="true"];
7->22 [style = bold, label=""];
17->8 [style = dotted, label="true"];
5->2 [style = bold, label=""];
11->12 [style = solid, label="result"];
10->23 [style = dotted, label="true"];
27->26 [style = bold, label=""];
11->15 [style = solid, label="result"];
10->8 [style = bold, label=""];
6->9 [style = dotted, label="true"];
11->16 [style = solid, label="result"];
7->3 [style = dotted, label="true"];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
7->23 [style = bold, label=""];
10->0 [style = bold, label=""];
26->24 [style = dotted, label="true"];
11->23 [style = solid, label="result"];
5->16 [style = dotted, label="true"];
9->25 [style = dashed, label="0"];
8->21 [style = bold, label=""];
10->0 [style = dotted, label="true"];
23->17 [style = bold, label=""];
10->7 [style = dotted, label="true"];
4->1 [style = bold, label=""];
14->9 [style = dotted, label="true"];
24->8 [style = bold, label=""];
2->24 [style = dashed, label="0"];
7->22 [style = dotted, label="true"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
17->21 [style = bold, label=""];
29->11 [style = bold, label=""];
5->2 [style = dotted, label="true"];
29->25 [style = dotted, label="true"];
13->18 [style = bold, label=""];
21->13 [style = bold, label=""];
11->27 [style = bold, label=""];
13->20 [style = bold, label=""];
2->16 [style = bold, label=""];
}
