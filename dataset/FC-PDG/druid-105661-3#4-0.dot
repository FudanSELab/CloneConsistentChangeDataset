digraph {
1 [style = filled, label = "makeSingleValueVectorDimensionSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return new MultiValueDimensionVectorSelector(){@Override public IndexedInts(( getRowVector(){return rowVector}@Override public int getValueCardinality(){return dictionaryEncoded? 1: CARDINALITY_UNKNOWN}@Nullable @Override public String lookupName(int id){return \"2\"}@Override public boolean nameLookupPossibleInAdvance(){return dictionaryEncoded}@Nullable @Override public IdLookup idLookup(){return null}@Override public int getMaxVectorSize(){return inspector.getMaxVectorSize()}@Override public int getCurrentVectorSize(){return inspector.getCurrentVectorSize()}}@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Arrays.fill(rowVector,new ArrayBasedIndexedInts(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ad8080))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DimensionSpec dimensionSpec@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "makeSingleValueVectorDimensionSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "makeMultiValueVectorDimensionSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final IndexedInts(( rowVector = new IndexedInts((((@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return new SingleValueDimensionVectorSelector(){@Override public int(( getRowVector(){return rowVector}@Override public int getValueCardinality(){return dictionaryEncoded? 1: CARDINALITY_UNKNOWN}@Nullable @Override public String lookupName(int id){return \"2\"}@Override public boolean nameLookupPossibleInAdvance(){return dictionaryEncoded}@Nullable @Override public IdLookup idLookup(){return null}@Override public int getMaxVectorSize(){return inspector.getMaxVectorSize()}@Override public int getCurrentVectorSize(){return inspector.getCurrentVectorSize()}}@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(outputName,dimensionSpec.getOutputName())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DimensionSpec dimensionSpec@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4->11 [style = bold, label=""];
1->2 [style = dotted, label="true"];
6->5 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
1->3 [style = dotted, label="true"];
11->12 [style = solid, label="rowVector"];
11->9 [style = bold, label=""];
11->9 [style = solid, label="rowVector"];
3->8 [style = dashed, label="0"];
10->4 [style = bold, label=""];
6->4 [style = bold, label=""];
10->8 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
4->0 [style = bold, label=""];
9->12 [style = bold, label=""];
1->4 [style = bold, label=""];
}
