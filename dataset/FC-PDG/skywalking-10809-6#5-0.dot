digraph {
19 [style = filled, label = "start['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "numOfSearchableLogsTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int numOfSearchableAlarmTags = configService.getSearchableAlarmTags().split(Const.COMMA).length@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final int numOfSearchableTracesTags = configService.getSearchableTracesTags().split(Const.COMMA).length@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "h2Client.registerChecker(healthChecker)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "h2Client.connect()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "start['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "throw new ModuleStartException(\"Size of searchableAlarmTags(\" + numOfSearchableAlarmTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "MetricsCreator metricCreator = getManager().find(TelemetryModule.NAME).provider().getService()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "numOfSearchableAlarmTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "numOfSearchableTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "H2TableInstaller installer = new H2TableInstaller(h2Client,getManager(),config.getMaxSizeOfArrayColumn(),config.getNumOfSearchableValuesPerTag())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "start['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new ModuleStartException(\"Size of searchableTracesTags(\" + numOfSearchableTracesTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final ConfigService configService = getManager().find(CoreModule.NAME).provider().getService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int numOfSearchableLogsTags = configService.getSearchableLogsTags().split(Const.COMMA).length@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MySQLTableInstaller installer = new MySQLTableInstaller(mysqlClient,getManager(),config.getMaxSizeOfArrayColumn(),config.getNumOfSearchableValuesPerTag())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new ModuleStartException(\"Size of searchableTracesTags(\" + numOfSearchableTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "numOfSearchableTracesTags * config.getNumOfSearchableValuesPerTag() > config.getMaxSizeOfArrayColumn()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "mysqlClient.connect()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HealthCheckMetrics healthChecker = metricCreator.createHealthCheckerGauge(\"storage_h2\",MetricsTag.EMPTY_KEY,MetricsTag.EMPTY_VALUE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw new ModuleStartException(\"Size of searchableLogsTags(\" + numOfSearchableLogsTags + \"( * numOfSearchableValuesPerTag(\" + config.getNumOfSearchableValuesPerTag() + \"( > maxSizeOfArrayColumn(\" + config.getMaxSizeOfArrayColumn() + \"(. Potential out of bound in the runtime.\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int numOfSearchableTags = configService.getSearchableTracesTags().split(Const.COMMA).length@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "getManager().find(CoreModule.NAME).provider().getService().addModelListener(installer)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
5->2 [style = bold, label=""];
14->5 [style = bold, label=""];
12->11 [style = solid, label="numOfSearchableAlarmTags"];
20->22 [style = solid, label="numOfSearchableTracesTags"];
0->6 [style = dotted, label="true"];
1->9 [style = bold, label=""];
2->4 [style = bold, label=""];
8->5 [style = bold, label=""];
8->12 [style = bold, label=""];
18->4 [style = bold, label=""];
19->1 [style = bold, label=""];
16->23 [style = solid, label="healthChecker"];
9->0 [style = solid, label="numOfSearchableTags"];
22->3 [style = bold, label=""];
20->22 [style = bold, label=""];
18->4 [style = solid, label="installer"];
2->18 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->3 [style = bold, label=""];
17->3 [style = bold, label=""];
22->17 [style = bold, label=""];
3->7 [style = solid, label="numOfSearchableLogsTags"];
9->6 [style = solid, label="numOfSearchableTags"];
8->7 [style = dotted, label="true"];
11->14 [style = bold, label=""];
12->14 [style = solid, label="numOfSearchableAlarmTags"];
23->21 [style = bold, label=""];
10->1 [style = bold, label=""];
7->12 [style = bold, label=""];
16->23 [style = bold, label=""];
11->14 [style = dotted, label="true"];
21->18 [style = bold, label=""];
6->3 [style = bold, label=""];
3->8 [style = bold, label=""];
15->16 [style = bold, label=""];
5->21 [style = dashed, label="0"];
2->4 [style = solid, label="installer"];
9->20 [style = dashed, label="0"];
7->5 [style = bold, label=""];
13->1 [style = bold, label=""];
8->7 [style = bold, label=""];
12->11 [style = bold, label=""];
7->15 [style = bold, label=""];
20->17 [style = solid, label="numOfSearchableTracesTags"];
1->20 [style = bold, label=""];
22->17 [style = dotted, label="true"];
0->22 [style = dashed, label="0"];
8->15 [style = bold, label=""];
11->5 [style = bold, label=""];
3->8 [style = solid, label="numOfSearchableLogsTags"];
}
