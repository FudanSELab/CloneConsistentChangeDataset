digraph {
19 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(2,0),getZxid(2,0))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "db.lastProcessedZxid = getZxid(2,0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "db.txnLog.add(createProposal(getZxid(2,1)))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long peerZxid@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "peerZxid = getZxid(3,1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "peerZxid = getZxid(0,0)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(0,learnerHandler.getQueuedPackets().size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(learnerHandler.syncFollower(peerZxid,db,leader))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertOpType(Leader.DIFF,getZxid(1,2),getZxid(1,2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "db.lastProcessedZxid = getZxid(6,0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "reset()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,db,leader))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "db.txnLog.add(createProposal(getZxid(2,2)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,1)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(learnerHandler.syncFollower(peerZxid,leader))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "db.txnLog.add(createProposal(getZxid(4,1)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCrossEpochTrunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "reset()@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCrossEpochTrunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "peerZxid = getZxid(1,0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "peerZxid = getZxid(2,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "db.committedLog.add(createProposal(getZxid(1,2)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "reset()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "queuedPacketMatches(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@3d34e7)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testNewEpochZxid['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,1)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "db.txnLog.add(createProposal(getZxid(1,2)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1,learnerHandler.getQueuedPackets().size())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "db.txnLog.add(createProposal(getZxid(0,1)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(5,learnerHandler.getQueuedPackets().size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->26 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
3->14 [style = bold, label=""];
23->15 [style = bold, label=""];
17->27 [style = bold, label=""];
18->2 [style = bold, label=""];
20->9 [style = solid, label="peerZxid"];
7->9 [style = bold, label=""];
2->13 [style = bold, label=""];
7->20 [style = dashed, label="0"];
12->2 [style = bold, label=""];
4->5 [style = bold, label=""];
1->14 [style = dashed, label="0"];
25->21 [style = solid, label="peerZxid"];
15->24 [style = bold, label=""];
10->28 [style = bold, label=""];
7->11 [style = bold, label=""];
24->30 [style = bold, label=""];
14->26 [style = bold, label=""];
30->25 [style = bold, label=""];
7->9 [style = solid, label="peerZxid"];
3->1 [style = bold, label=""];
2->3 [style = bold, label=""];
25->21 [style = bold, label=""];
28->22 [style = bold, label=""];
21->19 [style = bold, label=""];
29->16 [style = bold, label=""];
11->8 [style = bold, label=""];
19->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
1->4 [style = bold, label=""];
7->11 [style = solid, label="peerZxid"];
13->3 [style = bold, label=""];
16->20 [style = bold, label=""];
20->9 [style = bold, label=""];
28->22 [style = solid, label="peerZxid"];
22->23 [style = bold, label=""];
9->8 [style = bold, label=""];
6->7 [style = bold, label=""];
0->2 [style = bold, label=""];
26->29 [style = bold, label=""];
8->10 [style = bold, label=""];
5->29 [style = dashed, label="0"];
5->6 [style = bold, label=""];
}
