digraph {
3 [style = filled, label = "testExpressionFilteringAndGrouping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testGroupByAndOrderByOrdinalOfAlias['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testQuery(\"SELECT\" + \" FLOOR(m1 / 2) * 2,\" + \" COUNT(*)\" + \"FROM druid.foo\" + \"WHERE FLOOR(m1 / 2) * 2 > -1\" + \"GROUP BY FLOOR(m1 / 2) * 2\" + \"ORDER BY 1 DESC\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(QSS(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(EXPRESSION_VIRTUAL_COLUMN(\"d0:v\",\"(floor((\"m1\" / 2)) * 2)\",ValueType.FLOAT)).setDimFilter(EXPRESSION_FILTER(\"((floor((\"m1\" / 2)) * 2) > -1)\")).setDimensions(DIMS(new DefaultDimensionSpec(\"d0:v\",\"d0\",ValueType.FLOAT))).setAggregatorSpecs(AGGS(new CountAggregatorFactory(\"a0\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"d0\",OrderByColumnSpec.Direction.DESCENDING,StringComparators.NUMERIC)),Integer.MAX_VALUE)).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e1d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e22,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e27,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e2c))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testExpressionFilteringAndGrouping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT cnt as theCnt, COUNT(*) FROM druid.foo GROUP BY 1 ORDER BY 1 ASC\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(QSS(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(DIMS(new DefaultDimensionSpec(\"cnt\",\"d0\",ValueType.LONG))).setAggregatorSpecs(AGGS(new CountAggregatorFactory(\"a0\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"d0\",OrderByColumnSpec.Direction.ASCENDING,StringComparators.NUMERIC)),Integer.MAX_VALUE)).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978ef7))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testQuery(\"SELECT\" + \" FLOOR(m1 / 2) * 2,\" + \" COUNT(*)\" + \"FROM druid.foo\" + \"WHERE FLOOR(m1 / 2) * 2 > -1\" + \"GROUP BY FLOOR(m1 / 2) * 2\" + \"ORDER BY 1 DESC\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expression_Virtual_Column(\"d0:v\",\"(floor((\"m1\" / 2)) * 2)\",ValueType.FLOAT)).setDimFilter(expressionFilter(\"((floor((\"m1\" / 2)) * 2) > -1)\")).setDimensions(dimensionSpec(new DefaultDimensionSpec(\"d0:v\",\"d0\",ValueType.FLOAT))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"d0\",OrderByColumnSpec.Direction.DESCENDING,StringComparators.NUMERIC)),Integer.MAX_VALUE)).setContext(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e95,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e9a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978e9f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@978ea4))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->2 [style = dashed, label="0"];
1->0 [style = bold, label=""];
4->5 [style = bold, label=""];
3->2 [style = bold, label=""];
}
