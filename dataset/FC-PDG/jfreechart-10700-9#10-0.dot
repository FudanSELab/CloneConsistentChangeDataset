digraph {
22 [style = filled, label = "DefaultTableXYDataset d1 = new DefaultTableXYDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "d1.add(values2,\"R2\",\"C2\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(d1.equals(d2))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "values2.add(111)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(d1 != d2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DefaultMultiValueCategoryDataset<String,String> d2 = CloneUtils.clone(d1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "d2 = CloneUtils.clone(d1)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(d1.equals(d2))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(d1.equals(d2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d1 != d2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "d1.addSeries(createSeries1())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "d1.add(values,\"R1\",\"C1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(d1.equals(d2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "DefaultMultiValueCategoryDataset<String,String> d1 = new DefaultMultiValueCategoryDataset<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DefaultTableXYDataset d2 = (DefaultTableXYDataset)d1.clone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "d2.add(values2,\"R2\",\"C2\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Integer> values2 = new ArrayList<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(d1 != d2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "d2 = (DefaultMultiValueCategoryDataset)d1.clone()@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.add(99)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->7 [style = bold, label=""];
20->6 [style = bold, label=""];
21->22 [style = bold, label=""];
8->4 [style = bold, label=""];
10->4 [style = solid, label="values"];
15->18 [style = bold, label=""];
23->24 [style = bold, label=""];
12->14 [style = bold, label=""];
11->0 [style = bold, label=""];
24->12 [style = solid, label="d2"];
0->20 [style = solid, label="d1"];
10->8 [style = bold, label=""];
9->15 [style = bold, label=""];
1->14 [style = solid, label="d2"];
17->12 [style = bold, label=""];
19->0 [style = bold, label=""];
5->9 [style = bold, label=""];
20->16 [style = solid, label="d2"];
0->1 [style = solid, label="d1"];
0->17 [style = solid, label="d1"];
3->13 [style = bold, label=""];
4->20 [style = bold, label=""];
0->1 [style = bold, label=""];
7->18 [style = solid, label="values2"];
4->2 [style = bold, label=""];
1->17 [style = solid, label="d2"];
2->6 [style = solid, label="d2"];
2->13 [style = solid, label="d2"];
22->12 [style = solid, label="d1"];
0->6 [style = solid, label="d1"];
7->9 [style = solid, label="values2"];
6->3 [style = bold, label=""];
1->17 [style = bold, label=""];
2->16 [style = solid, label="d2"];
18->16 [style = bold, label=""];
20->15 [style = solid, label="d2"];
2->6 [style = bold, label=""];
7->5 [style = bold, label=""];
24->12 [style = bold, label=""];
22->23 [style = bold, label=""];
14->10 [style = bold, label=""];
20->13 [style = solid, label="d2"];
20->6 [style = solid, label="d2"];
2->15 [style = solid, label="d2"];
24->10 [style = solid, label="d2"];
}
