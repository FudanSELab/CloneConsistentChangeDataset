digraph {
8 [style = filled, label = "throw new InvalidLoadBalancersException(invalidLoadBalances)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkToBeAlteredLoadBalancer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "checkToBeCreatedKeyGenerators['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final AlterReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkToBeCreatedKeyGenerators['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "throw new InvalidKeyGeneratorsException(invalidKeyGenerators)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "!invalidLoadBalances.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Collection<String> invalidLoadBalances = sqlStatement.getRules().stream().map(null).distinct().filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Collection<String> invalidKeyGenerators = getToBeCreatedKeyGenerators(sqlStatement).stream().distinct().filter(null).collect(Collectors.toList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!invalidKeyGenerators.isEmpty()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11->7 [style = dotted, label="true"];
6->4 [style = bold, label=""];
10->9 [style = bold, label=""];
4->2 [style = solid, label="invalidKeyGenerators"];
6->5 [style = dotted, label="true"];
10->8 [style = solid, label="invalidLoadBalances"];
0->2 [style = dotted, label="true"];
1->5 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
9->8 [style = bold, label=""];
11->10 [style = bold, label=""];
3->4 [style = bold, label=""];
3->1 [style = dotted, label="true"];
2->8 [style = dashed, label="0"];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
9->8 [style = dotted, label="true"];
}
