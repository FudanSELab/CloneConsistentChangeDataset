digraph {
0 [style = filled, label = "overrideExceptionConversionWord['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.logger.info(\"Hello world\",new RuntimeException(\"Expected\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.output.expect(containsString(\"Hello world\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "this.outputCapture.expect(not(containsString(\"???\")))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.logger.info(\"Hello world\",new RuntimeException(\"Wrapper\",new RuntimeException(\"Expected\")))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.outputCapture.expect(containsString(\"(junit-\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "this.output.expect(containsString(\"Wrapped by: java.lang.RuntimeException: Wrapper\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(new File(tmpDir() + \"/spring.log\").exists()).isFalse()@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "overrideExceptionConversionWord['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "this.outputCapture.expect(containsString(\"Wrapped by: java.lang.RuntimeException: Wrapper\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "this.initializer.initialize(this.context.getEnvironment(),this.context.getClassLoader())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "baseConfigLocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.outputCapture.expect(containsString(\"Hello world\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "addPropertiesToEnvironment(this.context,\"logging.exceptionConversionWord=%rEx\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
4->5 [style = dashed, label="0"];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
4->2 [style = bold, label=""];
9->11 [style = bold, label=""];
5->7 [style = dashed, label="0"];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
7->8 [style = bold, label=""];
11->3 [style = bold, label=""];
5->12 [style = bold, label=""];
10->13 [style = bold, label=""];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
4->8 [style = dashed, label="0"];
}
