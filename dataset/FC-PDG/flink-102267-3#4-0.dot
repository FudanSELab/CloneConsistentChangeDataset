digraph {
2 [style = filled, label = "String fileContent = \"111|222|333|444|555|666|777|888|999|000|\" + \"000|999|888|777|666|555|444|333|222|111|\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(format.reachedEnd())@@@27@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,fieldTypes,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c05c68)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(111,result.getField(0))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(result)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result = format.nextRecord(result)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "FileInputSplit split = RowCsvInputFormatTest.createTempFile(fileContent)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "result = format.nextRecord(result)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(333,result.getField(2))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testReadSparseWithPositionSetter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,typeInfo,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c05d0a)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testReadSparseWithMask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "format.setFieldDelimiter(\"&&\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,typeInfo,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c05bc6)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Row result = new Row(3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "format.setFieldDelimiter(\"|\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(format.reachedEnd())@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "format.open(split)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testReadSparseWithPositionSetter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(0,result.getField(0))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(777,result.getField(1))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNull(result)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "format.configure(new Configuration())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNotNull(result)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String fileContent = \"111&&222&&333&&444&&555&&666&&777&&888&&999&&000&&\" + \"000&&999&&888&&777&&666&&555&&444&&333&&222&&111&&\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "result = format.nextRecord(result)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(888,result.getField(2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FileInputSplit split = createTempFile(fileContent)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RowTypeInfo typeInfo = new RowTypeInfo(BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.INT_TYPE_INFO)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(444,result.getField(1))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TypeInformation(( fieldTypes = new TypeInformation((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c05c54@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertNull(result)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
13->14 [style = solid, label="result"];
12->7 [style = bold, label=""];
6->31 [style = dashed, label="0"];
12->5 [style = solid, label="result"];
19->28 [style = dashed, label="0"];
23->26 [style = solid, label="fieldTypes"];
0->29 [style = dashed, label="0"];
25->2 [style = bold, label=""];
1->4 [style = solid, label="result"];
18->24 [style = bold, label=""];
9->1 [style = solid, label="result"];
20->5 [style = bold, label=""];
29->28 [style = bold, label=""];
18->24 [style = solid, label="result"];
19->15 [style = bold, label=""];
16->9 [style = solid, label="result"];
30->31 [style = solid, label="fileContent"];
0->19 [style = bold, label=""];
6->17 [style = bold, label=""];
17->0 [style = solid, label="typeInfo"];
28->15 [style = bold, label=""];
8->16 [style = solid, label="result"];
12->7 [style = solid, label="result"];
11->2 [style = bold, label=""];
23->26 [style = bold, label=""];
24->22 [style = bold, label=""];
30->31 [style = bold, label=""];
10->12 [style = bold, label=""];
7->13 [style = bold, label=""];
6->16 [style = solid, label="split"];
1->13 [style = solid, label="result"];
5->21 [style = solid, label="result"];
16->12 [style = solid, label="result"];
2->6 [style = solid, label="fileContent"];
31->17 [style = bold, label=""];
5->21 [style = bold, label=""];
2->30 [style = dashed, label="0"];
21->18 [style = bold, label=""];
6->3 [style = solid, label="split"];
27->30 [style = bold, label=""];
3->8 [style = bold, label=""];
1->4 [style = bold, label=""];
15->3 [style = bold, label=""];
2->6 [style = bold, label=""];
4->10 [style = bold, label=""];
17->29 [style = solid, label="typeInfo"];
13->14 [style = bold, label=""];
26->3 [style = bold, label=""];
6->23 [style = bold, label=""];
31->3 [style = solid, label="split"];
9->1 [style = bold, label=""];
17->29 [style = bold, label=""];
17->0 [style = bold, label=""];
14->20 [style = bold, label=""];
13->18 [style = solid, label="result"];
16->9 [style = bold, label=""];
}
