digraph {
1 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i < 5@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "node.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Trigger deletedTrigger = Trigger.deleted()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "node.debugReconnectLatch = new CountDownLatch(1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "String path = node.getActualPath()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "{node.close()}@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "node.debugReconnectLatch.countDown()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "node.debugReconnectLatch = new CountDownLatch(1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{node.close()}@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "node.debugReconnectLatch.countDown()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = bold, label=""];
16->0 [style = bold, label=""];
20->17 [style = bold, label=""];
28->18 [style = bold, label=""];
26->32 [style = bold, label=""];
19->26 [style = dotted, label="true"];
22->19 [style = bold, label=""];
7->10 [style = bold, label=""];
27->22 [style = solid, label="i"];
19->17 [style = dotted, label="true"];
30->29 [style = solid, label="path"];
4->12 [style = solid, label="curator"];
32->24 [style = solid, label="stat"];
17->31 [style = bold, label=""];
9->4 [style = bold, label=""];
19->20 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
8->14 [style = bold, label=""];
25->4 [style = bold, label=""];
19->23 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
19->24 [style = dotted, label="true"];
24->22 [style = bold, label=""];
30->29 [style = bold, label=""];
12->7 [style = bold, label=""];
11->2 [style = bold, label=""];
14->1 [style = bold, label=""];
3->0 [style = bold, label=""];
30->18 [style = solid, label="path"];
23->28 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
29->27 [style = bold, label=""];
18->20 [style = bold, label=""];
31->26 [style = bold, label=""];
19->28 [style = dotted, label="true"];
5->11 [style = solid, label="observer"];
1->6 [style = bold, label=""];
27->19 [style = solid, label="i"];
5->12 [style = bold, label=""];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
5->29 [style = solid, label="observer"];
19->23 [style = bold, label=""];
19->32 [style = dotted, label="true"];
19->22 [style = dotted, label="true"];
15->4 [style = bold, label=""];
22->19 [style = solid, label="i"];
27->19 [style = bold, label=""];
30->32 [style = solid, label="path"];
11->30 [style = dashed, label="0"];
32->24 [style = bold, label=""];
4->5 [style = bold, label=""];
10->30 [style = bold, label=""];
19->31 [style = dotted, label="true"];
3->16 [style = dashed, label="0"];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
19->21 [style = bold, label=""];
}
