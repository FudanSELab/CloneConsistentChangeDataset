digraph {
28 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),a.getField(\"abstract\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testImportEntriesINSPEC['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "a.getField(\"title\").equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),b.getField(\"title\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"),first.getField(\"journal\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestInspec.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "BibEntry tmp = a@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testImportEntriesWOS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"89\"),a.getField(\"volume\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),first.getField(\"title\"))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"2006\"),a.getField(\"year\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"4\"),a.getField(\"number\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),a.getField(\"month\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "BibEntry a = entries.get(0)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),a.getField(\"journal\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"),a.getField(\"journal\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),b.getField(\"title\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(2,entries.size())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),a.getField(\"title\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),a.getField(\"author\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "a = b@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestWOS.isi\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),a.getField(\"publisher\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BibEntry b = entries.get(1)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"article\",a.getType())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "b = tmp@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testImportEntriesWOS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),a.getField(\"title\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),second.getField(\"title\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertEquals(\"article\",b.getType())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32->22 [style = bold, label=""];
11->14 [style = bold, label=""];
2->6 [style = bold, label=""];
3->25 [style = bold, label=""];
25->30 [style = bold, label=""];
28->31 [style = bold, label=""];
8->20 [style = solid, label="a"];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
18->19 [style = bold, label=""];
22->21 [style = bold, label=""];
25->24 [style = dotted, label="true"];
19->2 [style = bold, label=""];
20->16 [style = solid, label="tmp"];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
30->29 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
2->13 [style = bold, label=""];
4->25 [style = dashed, label="0"];
24->16 [style = bold, label=""];
5->1 [style = bold, label=""];
21->26 [style = bold, label=""];
25->20 [style = bold, label=""];
15->17 [style = bold, label=""];
17->28 [style = bold, label=""];
3->24 [style = solid, label="b"];
31->27 [style = bold, label=""];
7->19 [style = dashed, label="0"];
7->2 [style = bold, label=""];
29->32 [style = bold, label=""];
16->30 [style = bold, label=""];
25->20 [style = dotted, label="true"];
6->8 [style = bold, label=""];
26->15 [style = bold, label=""];
27->23 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->9 [style = bold, label=""];
20->24 [style = bold, label=""];
4->5 [style = bold, label=""];
25->16 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
