digraph {
36 [style = filled, label = "assertFalse(listener.isDone())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "new Action(Settings.EMPTY,\"testAction\",transportService,clusterService,threadPool).execute(request,listener)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "final ClusterState.Builder builder = ClusterState.builder(clusterService.state()).nodes(nodesBuilder)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final DiscoveryNodes.Builder nodesBuilder = DiscoveryNodes.builder(clusterService.state().nodes())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "randomBoolean()@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CapturingTransport.CapturedRequest capturedRequest = capturedRequests(0(@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(capturedRequest.node.isMasterNode())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(capturedRequest.request,equalTo(request))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"testAction\"))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()(0(@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertTrue(listener.isDone())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "setState(clusterService,ClusterStateCreationUtils.state(localNode,localNode,allNodes))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(capturedRequests.length,equalTo(1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "transport.handleResponse(capturedRequest.requestId,response)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"internal:testAction\"))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertThat(listener.get(),equalTo(response))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"testAction\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "t.addHeader(\"header\",\"is here\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "randomBoolean()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testDelegateToFailingMaster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"testAction\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "nodesBuilder.masterNodeId(null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(capturedRequest.node.isMasterNode())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final Response response = new Response()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "testMasterFailoverAfterStepDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "setState(clusterService,ClusterState.builder(clusterService.state()).nodes(nodesBuilder))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "new Action(Settings.EMPTY,\"testAction\",transportService,clusterService,threadPool){@Override protected void masterOperation(Request request,ClusterState state,ActionListener<Response> listener){setState(clusterService,ClusterStateCreationUtils.state(localNode,remoteNode,allNodes))Exception failure = randomBoolean()? new Discovery.FailedToCommitClusterStateException(\"Fake error\"): new NotMasterException(\"Fake error\")listener.onFailure(failure)}}.execute(request,listener)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "boolean rejoinSameMaster = failsWithConnectTransportException && randomBoolean()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nodesBuilder.masterNodeId(masterNode.getId())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "transport.handleRemoteError(capturedRequest.requestId,t)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"internal:testAction\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "nodesBuilder.remove(masterNode)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertTrue(listener.isDone())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "new Action(Settings.EMPTY,\"internal:testAction\",transportService,clusterService,threadPool).execute(request,listener)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "capturedRequests = transport.getCapturedRequestsAndClear()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(listener.isDone())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Request request = new Request().masterNodeTimeout(TimeValue.timeValueSeconds(failsWithConnectTransportException? 60: 0))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertThat(transport.capturedRequests().length,equalTo(1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "masterNode = new DiscoveryNode(masterNode.getId(),masterNode.getAddress(),masterNode.getVersion())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "setState(clusterService,ClusterStateCreationUtils.state(localNode,localNode,allNodes))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "PlainActionFuture<Response> listener = new PlainActionFuture<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "nodesBuilder.masterNodeId(masterNode.getId())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "DiscoveryNode masterNode = this.remoteNode@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "transport.handleRemoteError(capturedRequest.requestId,new ConnectTransportException(masterNode,\"Fake error\"))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertTrue(capturedRequest.node.isMasterNode())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "setState(clusterService,ClusterState.builder(clusterService.state()).nodes(nodesBuilder))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "transport.handleRemoteError(capturedRequest.requestId,new ConnectTransportException(masterNode,\"Fake error\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testDelegateToFailingMaster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(capturedRequest.request,equalTo(request))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "capturedRequest = capturedRequests(0(@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "setState(clusterService,builder.version(0))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "CapturingTransport.CapturedRequest(( capturedRequests = transport.getCapturedRequestsAndClear()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertFalse(listener.isDone())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ElasticsearchException t = new ElasticsearchException(\"test\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "PlainActionFuture<Response> listener = new PlainActionFuture<>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final DiscoveryNodes.Builder nodesBuilder = DiscoveryNodes.builder(clusterService.state().nodes())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean failsWithConnectTransportException = randomBoolean()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "nodesBuilder.add(masterNode)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fail(\"Expected exception but returned proper result\")@@@60@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(capturedRequests.length,equalTo(1))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "failsWithConnectTransportException@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rejoinSameMaster@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "listener.get()@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "setState(clusterService,ClusterState.builder(ClusterStateCreationUtils.state(localNode,masterNode,allNodes)).version(randomIntBetween(0,10)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(listener.isDone())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "listener.get()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(capturedRequest.request,equalTo(request))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final DiscoveryNodes.Builder nodesBuilder = DiscoveryNodes.builder(clusterService.state().nodes())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->34 [style = bold, label=""];
17->9 [style = bold, label=""];
5->1 [style = dotted, label="true"];
3->39 [style = solid, label="nodesBuilder"];
38->39 [style = dotted, label="true"];
8->6 [style = bold, label=""];
59->62 [style = bold, label=""];
10->15 [style = solid, label="failsWithConnectTransportException"];
51->10 [style = bold, label=""];
11->4 [style = solid, label="request"];
5->13 [style = dotted, label="true"];
5->38 [style = dotted, label="true"];
55->57 [style = bold, label=""];
15->11 [style = bold, label=""];
62->65 [style = bold, label=""];
11->54 [style = solid, label="request"];
21->1 [style = bold, label=""];
1->44 [style = dotted, label="true"];
40->14 [style = solid, label="masterNode"];
35->37 [style = dotted, label="true"];
5->29 [style = dotted, label="true"];
4->54 [style = dashed, label="0"];
67->58 [style = bold, label=""];
9->60 [style = dashed, label="0"];
50->54 [style = bold, label=""];
44->47 [style = bold, label=""];
41->13 [style = bold, label=""];
55->60 [style = solid, label="response"];
0->2 [style = solid, label="masterNode"];
13->34 [style = solid, label="capturedRequests"];
1->38 [style = bold, label=""];
38->19 [style = dotted, label="false"];
2->16 [style = bold, label=""];
33->7 [style = bold, label=""];
13->25 [style = bold, label=""];
18->31 [style = bold, label=""];
1->45 [style = dotted, label="true"];
65->66 [style = solid, label="listener"];
31->5 [style = bold, label=""];
10->35 [style = solid, label="failsWithConnectTransportException"];
38->8 [style = dotted, label="false"];
62->66 [style = solid, label="request"];
35->49 [style = dotted, label="true"];
5->33 [style = dotted, label="true"];
50->54 [style = solid, label="listener"];
26->42 [style = solid, label="t"];
58->56 [style = bold, label=""];
43->46 [style = solid, label="capturedRequests"];
30->19 [style = bold, label=""];
5->34 [style = dotted, label="true"];
5->52 [style = dotted, label="true"];
19->41 [style = bold, label=""];
5->25 [style = dotted, label="true"];
5->7 [style = dotted, label="true"];
7->52 [style = dashed, label="0"];
15->5 [style = solid, label="rejoinSameMaster"];
5->35 [style = dotted, label="false"];
8->30 [style = solid, label="nodesBuilder"];
38->30 [style = dotted, label="false"];
55->58 [style = solid, label="response"];
39->41 [style = bold, label=""];
66->61 [style = bold, label=""];
65->55 [style = bold, label=""];
36->37 [style = bold, label=""];
35->48 [style = dotted, label="false"];
26->48 [style = bold, label=""];
1->45 [style = bold, label=""];
61->63 [style = bold, label=""];
38->0 [style = dotted, label="false"];
14->21 [style = bold, label=""];
34->29 [style = bold, label=""];
33->52 [style = bold, label=""];
50->4 [style = solid, label="listener"];
54->43 [style = bold, label=""];
57->66 [style = bold, label=""];
56->60 [style = bold, label=""];
5->41 [style = dotted, label="true"];
45->47 [style = solid, label="nodesBuilder"];
43->20 [style = bold, label=""];
28->49 [style = bold, label=""];
35->42 [style = dotted, label="false"];
40->6 [style = solid, label="masterNode"];
50->4 [style = bold, label=""];
38->32 [style = dotted, label="true"];
45->44 [style = bold, label=""];
38->3 [style = bold, label=""];
35->24 [style = bold, label=""];
40->12 [style = bold, label=""];
31->53 [style = dashed, label="0"];
16->30 [style = bold, label=""];
38->2 [style = dotted, label="false"];
1->47 [style = dotted, label="true"];
22->10 [style = bold, label=""];
10->11 [style = solid, label="failsWithConnectTransportException"];
5->21 [style = dotted, label="true"];
32->39 [style = bold, label=""];
38->8 [style = bold, label=""];
42->28 [style = bold, label=""];
35->28 [style = dotted, label="false"];
46->23 [style = bold, label=""];
35->26 [style = bold, label=""];
23->18 [style = bold, label=""];
5->35 [style = bold, label=""];
38->6 [style = dotted, label="false"];
5->14 [style = dotted, label="true"];
12->50 [style = bold, label=""];
4->43 [style = bold, label=""];
10->15 [style = bold, label=""];
62->68 [style = solid, label="request"];
68->67 [style = bold, label=""];
35->24 [style = dotted, label="true"];
38->16 [style = dotted, label="false"];
53->5 [style = bold, label=""];
63->64 [style = bold, label=""];
35->36 [style = dotted, label="true"];
0->2 [style = bold, label=""];
37->17 [style = bold, label=""];
11->33 [style = solid, label="request"];
20->46 [style = bold, label=""];
35->9 [style = dotted, label="true"];
11->18 [style = solid, label="request"];
18->53 [style = bold, label=""];
6->0 [style = bold, label=""];
49->27 [style = bold, label=""];
5->14 [style = bold, label=""];
48->42 [style = bold, label=""];
11->40 [style = bold, label=""];
47->38 [style = bold, label=""];
40->24 [style = solid, label="masterNode"];
24->36 [style = bold, label=""];
38->3 [style = dotted, label="true"];
35->27 [style = dotted, label="true"];
29->33 [style = bold, label=""];
35->26 [style = dotted, label="false"];
64->68 [style = bold, label=""];
35->17 [style = dotted, label="true"];
3->32 [style = bold, label=""];
}
