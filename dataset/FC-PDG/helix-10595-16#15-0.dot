digraph {
26 [style = filled, label = "final MockParticipantManager participantManager = participants(0(@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (7 + r + (4 + r) * n)}},2000)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers.\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher after session expiry.\")@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final int r = 2@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "participants(i(.syncStart()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "int i = 0@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect number of zk-watchers after session expiry.\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "controller.syncStop()@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "handlerNb = participantManagerToExpire.getHandlers().size()@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "controller.syncStop()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "i < n@@@76@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",r,32,n,2,\"MasterSlave\",true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handlers\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String newSessionId = controller.getSessionId()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,11,\"HelixController should have 10 (5+2n) callback handlers for 2 (n) participant\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},2000)@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(result,\"Controller has incorrect zk-watchers after session expiry.\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ZkTestHelper.expireSession(controller.getZkClient())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManager.getSessionId())return watchPaths.size() == 1}},2000)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < n@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "final MockParticipantManager participantManagerToExpire = participants(1(@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String oldSessionId = controller.getSessionId()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},2000)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final int r = 1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertTrue(result)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handler, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "i++@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@80@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controller))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,7 + 2 * n,\"HelixController should have 10 (6+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,11,\"HelixController should have 10 (6+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher. MESSAGESHelixTaskExecutor\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "boolean result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (7 + r + (4 + r) * n)}},2000)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry\")@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){int controllerHandlerNb = controller.getHandlers().size()int particHandlerNb = participantManager.getHandlers().size()if (controllerHandlerNb == 10 && particHandlerNb == 2) return truereturn false}},1000)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "participants(i(.syncStop()@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int particHandlerNb = participantManagerToExpire.getHandlers().size()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "controller.syncStart()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
36->8 [style = dotted, label="true"];
14->5 [style = solid, label="i"];
65->67 [style = bold, label=""];
3->70 [style = solid, label="participants"];
12->44 [style = bold, label=""];
11->17 [style = solid, label="result"];
66->52 [style = bold, label=""];
10->24 [style = bold, label=""];
68->66 [style = bold, label=""];
1->31 [style = dotted, label="true"];
28->9 [style = bold, label=""];
27->38 [style = solid, label="n"];
33->73 [style = solid, label="clusterName"];
55->13 [style = bold, label=""];
47->37 [style = bold, label=""];
43->26 [style = bold, label=""];
61->59 [style = bold, label=""];
1->23 [style = bold, label=""];
64->42 [style = bold, label=""];
1->34 [style = dotted, label="true"];
5->34 [style = bold, label=""];
52->68 [style = bold, label=""];
19->1 [style = bold, label=""];
71->58 [style = bold, label=""];
33->13 [style = solid, label="clusterName"];
34->70 [style = solid, label="participants"];
37->60 [style = bold, label=""];
20->36 [style = solid, label="i"];
8->47 [style = bold, label=""];
45->42 [style = bold, label=""];
15->36 [style = solid, label="i"];
66->52 [style = solid, label="i"];
39->50 [style = dashed, label="0"];
60->65 [style = bold, label=""];
3->26 [style = solid, label="participants"];
61->59 [style = solid, label="result"];
32->72 [style = dashed, label="0"];
26->28 [style = bold, label=""];
51->11 [style = bold, label=""];
67->52 [style = bold, label=""];
55->49 [style = solid, label="r"];
43->70 [style = bold, label=""];
6->39 [style = solid, label="controller"];
9->7 [style = solid, label="controllerHandlerNb"];
57->54 [style = bold, label=""];
44->2 [style = bold, label=""];
27->48 [style = solid, label="n"];
24->0 [style = bold, label=""];
12->44 [style = solid, label="newSessionId"];
4->40 [style = solid, label="handlerNb"];
27->49 [style = solid, label="n"];
52->73 [style = bold, label=""];
34->31 [style = bold, label=""];
0->54 [style = dashed, label="0"];
56->57 [style = bold, label=""];
49->62 [style = bold, label=""];
52->68 [style = dotted, label="true"];
33->27 [style = bold, label=""];
32->10 [style = bold, label=""];
35->21 [style = bold, label=""];
40->60 [style = dashed, label="0"];
38->6 [style = bold, label=""];
2->61 [style = dashed, label="0"];
18->20 [style = bold, label=""];
26->70 [style = dashed, label="0"];
27->36 [style = solid, label="n"];
5->34 [style = solid, label="instanceName"];
11->60 [style = solid, label="particHandlerNb"];
58->51 [style = bold, label=""];
16->33 [style = bold, label=""];
6->7 [style = solid, label="controller"];
16->33 [style = solid, label="methodName"];
21->7 [style = bold, label=""];
11->17 [style = bold, label=""];
41->46 [style = bold, label=""];
10->56 [style = dashed, label="0"];
36->37 [style = bold, label=""];
27->29 [style = bold, label=""];
50->72 [style = bold, label=""];
21->7 [style = solid, label="handlerNb"];
35->15 [style = solid, label="result"];
24->57 [style = dashed, label="0"];
59->48 [style = bold, label=""];
9->46 [style = solid, label="controllerHandlerNb"];
39->46 [style = dashed, label="0"];
20->15 [style = solid, label="i"];
15->36 [style = bold, label=""];
71->58 [style = solid, label="result"];
8->15 [style = bold, label=""];
41->11 [style = dashed, label="0"];
34->26 [style = solid, label="participants"];
35->15 [style = bold, label=""];
44->53 [style = dashed, label="0"];
36->15 [style = dotted, label="true"];
33->37 [style = solid, label="clusterName"];
22->35 [style = solid, label="result"];
0->12 [style = bold, label=""];
57->53 [style = solid, label="oldSessionId"];
55->38 [style = solid, label="r"];
23->43 [style = bold, label=""];
6->46 [style = solid, label="controller"];
42->16 [style = bold, label=""];
26->32 [style = solid, label="participantManager"];
55->48 [style = solid, label="r"];
12->69 [style = dashed, label="0"];
27->11 [style = solid, label="n"];
7->4 [style = bold, label=""];
48->63 [style = solid, label="result"];
28->49 [style = dashed, label="0"];
1->19 [style = dotted, label="true"];
51->47 [style = solid, label="controllerHandlerNb"];
19->1 [style = solid, label="i"];
33->34 [style = solid, label="clusterName"];
72->56 [style = bold, label=""];
67->52 [style = solid, label="i"];
27->55 [style = bold, label=""];
33->61 [style = solid, label="clusterName"];
30->3 [style = bold, label=""];
49->62 [style = solid, label="result"];
39->32 [style = bold, label=""];
69->53 [style = bold, label=""];
26->40 [style = solid, label="participantManager"];
67->66 [style = solid, label="i"];
36->8 [style = bold, label=""];
25->42 [style = bold, label=""];
11->50 [style = bold, label=""];
6->30 [style = bold, label=""];
4->37 [style = dashed, label="0"];
41->40 [style = solid, label="particHandlerNb"];
22->35 [style = bold, label=""];
46->32 [style = bold, label=""];
31->19 [style = bold, label=""];
2->11 [style = bold, label=""];
20->36 [style = bold, label=""];
15->8 [style = bold, label=""];
33->38 [style = solid, label="clusterName"];
70->49 [style = bold, label=""];
27->1 [style = solid, label="n"];
7->47 [style = dashed, label="0"];
4->40 [style = bold, label=""];
53->61 [style = bold, label=""];
34->19 [style = solid, label="i"];
29->11 [style = solid, label="r"];
69->53 [style = solid, label="newSessionId"];
3->14 [style = bold, label=""];
54->69 [style = bold, label=""];
40->18 [style = bold, label=""];
24->44 [style = solid, label="oldSessionId"];
8->47 [style = solid, label="handlerNb"];
17->22 [style = bold, label=""];
29->55 [style = dashed, label="0"];
14->1 [style = bold, label=""];
9->41 [style = bold, label=""];
29->38 [style = solid, label="r"];
9->39 [style = solid, label="controllerHandlerNb"];
62->71 [style = bold, label=""];
19->5 [style = solid, label="i"];
52->66 [style = dotted, label="true"];
17->63 [style = dashed, label="0"];
14->1 [style = solid, label="i"];
27->52 [style = solid, label="n"];
11->72 [style = solid, label="particHandlerNb"];
27->46 [style = solid, label="n"];
48->63 [style = bold, label=""];
33->6 [style = solid, label="clusterName"];
41->32 [style = solid, label="particHandlerNb"];
42->33 [style = solid, label="className"];
13->38 [style = bold, label=""];
41->39 [style = bold, label=""];
51->50 [style = solid, label="controllerHandlerNb"];
1->5 [style = dotted, label="true"];
37->60 [style = solid, label="handlerNb"];
63->35 [style = bold, label=""];
29->13 [style = bold, label=""];
}
