digraph {
21 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(-1)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return expression@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val.replace(\"\"\",\"\\\"\")))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "rows == Integer.MAX_VALUE@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (FieldComparator sort : bucketSorts){if (0 != builder.length()) {builder.append(\",\")}builder.append(sort.toExpression(factory))}expression.addParameter(new StreamExpressionNamedParameter(\"bucketSorts\",builder.toString()))}@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"aliases\",sb.toString()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamExpression expression = new StreamExpression(\"search\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "sb.append(\"=\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (Bucket bucket : buckets){if (0 != builder.length()) {builder.append(\",\")}builder.append(bucket.toString())}expression.addParameter(new StreamExpressionNamedParameter(\"buckets\",builder.toString()))}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(bucketSizeLimit)))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"rows\",Integer.toString(rows)))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"method\",this.method))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "null != fieldMappings && 0 != fieldMappings.size()@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sb.append(mapping.getKey())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Entry<String,String> mapping@@@13@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(getClass()))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"overfetch\",Integer.toString(overfetch)))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Entry<String,String> mapping@@@13@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"offset\",Integer.toString(offset)))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "return expression@@@60@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"overfetch\",Integer.toString(-1)))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sb.append(mapping.getValue())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "bucketSizeLimit == Integer.MAX_VALUE@@@34@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expression.addParameter(metric.toExpression(factory))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"rows\",Integer.toString(-1)))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "overfetch == Integer.MAX_VALUE@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sb.length() > 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fieldMappings.entrySet()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sb.append(\",\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "serializeBucketSizeLimit@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "method != null@@@56@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35->29 [style = dotted, label="true"];
32->35 [style = bold, label=""];
16->15 [style = bold, label=""];
16->8 [style = dotted, label="true"];
23->25 [style = bold, label=""];
16->19 [style = dotted, label="true"];
16->0 [style = bold, label=""];
35->27 [style = bold, label=""];
16->9 [style = dotted, label="true"];
29->39 [style = dotted, label="false"];
16->2 [style = dotted, label="true"];
35->29 [style = bold, label=""];
33->20 [style = bold, label=""];
35->24 [style = dotted, label="false"];
25->34 [style = bold, label=""];
41->24 [style = bold, label=""];
16->13 [style = dotted, label="true"];
35->33 [style = dotted, label="false"];
7->10 [style = bold, label=""];
29->39 [style = bold, label=""];
27->40 [style = dotted, label="false"];
25->34 [style = dotted, label="true"];
25->30 [style = bold, label=""];
11->4 [style = bold, label=""];
28->7 [style = bold, label=""];
7->37 [style = bold, label=""];
36->28 [style = bold, label=""];
17->14 [style = dotted, label="true"];
0->11 [style = bold, label=""];
18->15 [style = solid, label="expression"];
26->38 [style = solid, label="factory"];
35->27 [style = dotted, label="false"];
27->41 [style = dotted, label="true"];
2->9 [style = bold, label=""];
3->12 [style = bold, label=""];
21->25 [style = bold, label=""];
26->32 [style = solid, label="factory"];
11->4 [style = dotted, label="true"];
20->25 [style = bold, label=""];
34->30 [style = bold, label=""];
12->7 [style = bold, label=""];
29->21 [style = bold, label=""];
33->23 [style = dotted, label="false"];
3->14 [style = dotted, label="true"];
14->26 [style = dashed, label="0"];
38->32 [style = bold, label=""];
33->20 [style = dotted, label="true"];
33->23 [style = bold, label=""];
24->33 [style = bold, label=""];
36->26 [style = dotted, label="true"];
22->38 [style = bold, label=""];
37->22 [style = bold, label=""];
16->0 [style = dotted, label="true"];
1->16 [style = bold, label=""];
9->15 [style = bold, label=""];
30->31 [style = bold, label=""];
12->28 [style = dashed, label="0"];
27->41 [style = bold, label=""];
16->5 [style = dotted, label="true"];
10->37 [style = dashed, label="0"];
11->8 [style = bold, label=""];
4->8 [style = bold, label=""];
40->24 [style = bold, label=""];
29->21 [style = dotted, label="true"];
27->40 [style = bold, label=""];
12->18 [style = dashed, label="0"];
39->25 [style = bold, label=""];
28->31 [style = solid, label="expression"];
18->7 [style = bold, label=""];
10->1 [style = bold, label=""];
16->11 [style = dotted, label="true"];
12->15 [style = solid, label="expression"];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
8->13 [style = bold, label=""];
16->6 [style = dotted, label="true"];
13->2 [style = bold, label=""];
}
