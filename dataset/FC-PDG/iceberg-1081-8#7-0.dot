digraph {
20 [style = filled, label = "this.mayContainNulls = Maps.newHashMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "rowGroup.getRowCount() <= 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "valueCounts.put(id,col.getValueCount())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "eval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int id = colType.getId().intValue()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PrimitiveType colType = fileSchema.getType(col.getPath().toArray()).asPrimitiveType()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "colType.getId() != null@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "stats.put(id,col.getStatistics())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "DictionaryPageReadStore dictionaries@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mayContainNulls.put(id,mayContainNull(meta))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "PrimitiveType colType = fileSchema.getType(meta.getPath().toArray()).asPrimitiveType()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MessageType fileSchema@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "this.isFallback = Maps.newHashMap()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "cols.put(id,desc)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.valueCounts = Maps.newHashMap()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "isFallback.put(id,hasNonDictionaryPages(meta))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "PrimitiveType colType = fileSchema.getType(desc.getPath()).asPrimitiveType()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "conversions.put(id,converterFromParquet(colType))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "conversions.put(id,converterFromParquet(colType))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int id = colType.getId().intValue()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return ExpressionVisitors.visitEvaluator(expr,this)@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "eval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.stats = Maps.newHashMap()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "colType.getId() != null@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "this.dictCache = Maps.newHashMap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "this.dictionaries = dictionaries@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "this.cols = Maps.newHashMap()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "conversions.put(id,ParquetConversions.converterFromParquet(colType))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "return ExpressionVisitors.visitEvaluator(expr,this)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "MessageType fileSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return ROWS_CANNOT_MATCH@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "this.conversions = Maps.newHashMap()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "eval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27->13 [style = bold, label=""];
13->16 [style = dotted, label="true"];
3->16 [style = solid, label="id"];
27->25 [style = solid, label="colType"];
24->32 [style = dotted, label="true"];
13->3 [style = dotted, label="true"];
13->12 [style = dotted, label="true"];
16->8 [style = bold, label=""];
13->25 [style = dotted, label="true"];
11->1 [style = bold, label=""];
12->16 [style = dashed, label="0"];
2->1 [style = bold, label=""];
25->30 [style = bold, label=""];
16->6 [style = bold, label=""];
18->19 [style = dotted, label="true"];
18->21 [style = dotted, label="true"];
6->12 [style = solid, label="colType"];
21->19 [style = solid, label="id"];
18->30 [style = bold, label=""];
29->25 [style = bold, label=""];
3->10 [style = solid, label="id"];
13->30 [style = bold, label=""];
33->5 [style = bold, label=""];
13->10 [style = dotted, label="true"];
24->28 [style = dotted, label="true"];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
30->18 [style = bold, label=""];
32->31 [style = solid, label="dictionaries"];
3->0 [style = bold, label=""];
20->33 [style = bold, label=""];
9->34 [style = dashed, label="0"];
2->11 [style = dotted, label="true"];
3->25 [style = solid, label="id"];
1->20 [style = dashed, label="0"];
25->27 [style = bold, label=""];
7->5 [style = bold, label=""];
0->10 [style = bold, label=""];
13->27 [style = bold, label=""];
17->15 [style = dotted, label="true"];
18->22 [style = bold, label=""];
3->29 [style = solid, label="id"];
5->6 [style = bold, label=""];
13->3 [style = bold, label=""];
10->16 [style = bold, label=""];
17->2 [style = bold, label=""];
31->35 [style = bold, label=""];
13->0 [style = dotted, label="true"];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
13->29 [style = dotted, label="true"];
19->30 [style = bold, label=""];
6->13 [style = bold, label=""];
24->34 [style = dotted, label="true"];
17->9 [style = dotted, label="true"];
23->19 [style = bold, label=""];
6->27 [style = dashed, label="0"];
0->29 [style = dashed, label="0"];
3->12 [style = solid, label="id"];
6->16 [style = solid, label="colType"];
3->0 [style = solid, label="id"];
14->2 [style = bold, label=""];
14->9 [style = dotted, label="true"];
5->27 [style = bold, label=""];
18->21 [style = bold, label=""];
13->6 [style = bold, label=""];
13->8 [style = bold, label=""];
7->33 [style = dashed, label="0"];
14->4 [style = dotted, label="true"];
19->22 [style = bold, label=""];
35->26 [style = bold, label=""];
2->11 [style = bold, label=""];
3->29 [style = bold, label=""];
26->20 [style = bold, label=""];
21->23 [style = solid, label="id"];
24->31 [style = bold, label=""];
21->23 [style = bold, label=""];
18->23 [style = dotted, label="true"];
}
