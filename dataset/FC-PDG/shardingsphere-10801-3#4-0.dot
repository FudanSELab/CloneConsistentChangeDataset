digraph {
3 [style = filled, label = "SQLParserEngine sqlParserEngine = new SQLParserEngine(\"H2\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "verify(sqlParserExecutor,times(1)).parse(SQL)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sqlParserEngine.parse(SQL,false)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(sqlParserExecutor.parse(SQL)).thenReturn(mock())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "modifiers.setAccessible(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "modifiersField2.setInt(parseTreeCacheField,sqlParserExecutorFiled.getModifiers() & ~Modifier.FINAL)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Field parseTreeCacheField = sqlParserEngine.getClass().getDeclaredField(\"parseTreeCache\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verify(sqlParserExecutor,times(2)).parse(SQL)@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "modifiersField.setInt(sqlParserExecutorFiled,sqlParserExecutorFiled.getModifiers() & ~Modifier.FINAL)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "cleanCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "modifiersField.setAccessible(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Field modifiersField = .getDeclaredField(\"modifiers\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Field field = .getDeclaredField(\"CACHED_SERVICES\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(sqlParserExecutor.parse(SQL)).thenReturn(mock())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "SQLParserEngine sqlParserEngine = new SQLParserEngine(\"H2\",false)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertParse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertParse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sqlParserEngine.parse(SQL,true)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sqlParserExecutorFiled.setAccessible(true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SQLParserExecutor sqlParserExecutor = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Field modifiers = .getDeclaredField(\"modifiers\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "field.setAccessible(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Field sqlParserExecutorFiled = sqlParserEngine.getClass().getDeclaredField(\"sqlParserExecutor\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "parseTreeCacheField.setAccessible(true)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "modifiers.setInt(field,field.getModifiers() & ~Modifier.FINAL)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "field.set(null,CacheBuilder.newBuilder().build())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "parseTreeCacheField.set(sqlParserEngine,parseTreeCache)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sqlParserExecutorFiled.set(sqlParserEngine,sqlParserExecutor)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "modifiersField2.setAccessible(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sqlParserEngine.parse(SQL,true)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LoadingCache<String,ParseContext> parseTreeCache = CacheBuilder.newBuilder().softValues().initialCapacity(128).maximumSize(1024).concurrencyLevel(4).build(new CacheLoader<String,ParseContext>(){@ParametersAreNonnullByDefault @Override public ParseContext load(final String sql){return sqlParserExecutor.parse(sql)}})@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "LoadingCache<String,ParseTree> parseTreeCache = CacheBuilder.newBuilder().softValues().initialCapacity(128).maximumSize(1024).concurrencyLevel(4).build(new CacheLoader<String,ParseTree>(){@ParametersAreNonnullByDefault @Override public ParseTree load(final String sql){return sqlParserExecutor.parse(sql)}})@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "verify(sqlParserExecutor,times(1)).parse(SQL)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Field modifiersField2 = .getDeclaredField(\"modifiers\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
11->16 [style = bold, label=""];
2->19 [style = bold, label=""];
7->17 [style = bold, label=""];
24->19 [style = bold, label=""];
3->26 [style = dashed, label="0"];
29->30 [style = solid, label="field"];
28->30 [style = bold, label=""];
10->14 [style = bold, label=""];
14->25 [style = dashed, label="0"];
15->21 [style = bold, label=""];
27->28 [style = bold, label=""];
19->10 [style = solid, label="sqlParserExecutor"];
1->3 [style = bold, label=""];
23->26 [style = bold, label=""];
4->31 [style = dashed, label="0"];
18->22 [style = solid, label="parseTreeCacheField"];
3->12 [style = bold, label=""];
9->7 [style = bold, label=""];
33->27 [style = bold, label=""];
14->15 [style = solid, label="parseTreeCache"];
20->10 [style = bold, label=""];
32->29 [style = bold, label=""];
12->13 [style = bold, label=""];
19->1 [style = bold, label=""];
26->12 [style = bold, label=""];
26->10 [style = solid, label="sqlParserEngine"];
29->33 [style = bold, label=""];
18->22 [style = bold, label=""];
22->0 [style = bold, label=""];
5->6 [style = bold, label=""];
21->11 [style = bold, label=""];
10->25 [style = bold, label=""];
3->15 [style = solid, label="sqlParserEngine"];
30->31 [style = bold, label=""];
19->23 [style = bold, label=""];
3->10 [style = solid, label="sqlParserEngine"];
6->8 [style = bold, label=""];
16->5 [style = bold, label=""];
25->15 [style = bold, label=""];
26->15 [style = solid, label="sqlParserEngine"];
0->20 [style = bold, label=""];
14->15 [style = bold, label=""];
12->9 [style = solid, label="sqlParserExecutorFiled"];
1->23 [style = dashed, label="0"];
17->18 [style = bold, label=""];
25->15 [style = solid, label="parseTreeCache"];
13->4 [style = bold, label=""];
}
