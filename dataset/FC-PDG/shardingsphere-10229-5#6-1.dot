digraph {
8 [style = filled, label = "throw new InvalidAlgorithmConfigurationException(\"encryptor\",notExistedEncryptors)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final AlterShardingTableRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "checkToBeAlteredKeyGenerators['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "checkToBeCreatedEncryptors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new InvalidKeyGeneratorsException(notExistedKeyGenerators)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final CreateEncryptRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "checkToBeCreatedEncryptors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new InvalidEncryptorsException(notExistedEncryptors)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Collection<String> notExistedEncryptors = encryptors.stream().filter(null).collect(Collectors.toList())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collection<String> notExistedKeyGenerators = getToBeAlteredKeyGenerators(sqlStatement).stream().distinct().filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "!notExistedEncryptors.isEmpty()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final CreateEncryptRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "!notExistedKeyGenerators.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sqlStatement.getRules().forEach(null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Collection<String> encryptors = new LinkedHashSet<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
6->8 [style = dashed, label="0"];
14->12 [style = dotted, label="true"];
0->6 [style = bold, label=""];
9->4 [style = bold, label=""];
2->7 [style = dashed, label="0"];
0->6 [style = dotted, label="true"];
5->6 [style = solid, label="notExistedEncryptors"];
0->8 [style = dotted, label="true"];
3->5 [style = bold, label=""];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
10->11 [style = dotted, label="true"];
13->12 [style = solid, label="notExistedKeyGenerators"];
14->12 [style = bold, label=""];
0->8 [style = bold, label=""];
2->11 [style = dashed, label="0"];
9->7 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
5->8 [style = solid, label="notExistedEncryptors"];
13->14 [style = bold, label=""];
}
