digraph {
11 [style = filled, label = "assertFalse(future.isCancelled())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "InterruptedException e@@@13@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final InterruptedException e@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "fail(\"This future had an execution exception\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "future.setException(new NullPointerException())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "future.setResult(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final ExecutionException ee@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(future.isDone())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(future.isDone())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(future.isDone())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "future.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertTrue(ee.getCause() instanceof NullPointerException)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fail(\"This future was not interrupted\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(future.isCancelled())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final MockAbstractIoFuture<Boolean> future = spy(new MockAbstractIoFuture<Boolean>())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertFalse(future.isCancelled())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ExecutionException ee@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
10->15 [style = dashed, label="0"];
4->9 [style = bold, label=""];
7->11 [style = bold, label=""];
7->20 [style = dashed, label="0"];
19->10 [style = bold, label=""];
1->14 [style = dotted, label="true"];
20->11 [style = bold, label=""];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
0->7 [style = bold, label=""];
18->6 [style = dotted, label="true"];
8->0 [style = bold, label=""];
6->4 [style = bold, label=""];
3->5 [style = bold, label=""];
10->8 [style = bold, label=""];
11->3 [style = bold, label=""];
18->6 [style = bold, label=""];
12->6 [style = dotted, label="true"];
1->16 [style = dashed, label="0"];
5->13 [style = bold, label=""];
16->14 [style = dotted, label="true"];
17->15 [style = bold, label=""];
16->14 [style = bold, label=""];
12->18 [style = dashed, label="0"];
0->20 [style = bold, label=""];
1->14 [style = bold, label=""];
15->8 [style = bold, label=""];
14->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
