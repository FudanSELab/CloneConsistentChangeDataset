digraph {
6 [style = filled, label = "context.deliverResponse(correlationId,otherNodeId,response)@@@12@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withElectedLeader(epoch,otherNodeId).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "context.pollUntilSend()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "int epoch = 5@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "pollUntilSend(client)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertSentFetchRequest(epoch,0L,0)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "context.assertElectedLeader(epoch,otherNodeId)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "FetchResponseData response = new FetchResponseData().setErrorCode(Errors.CLUSTER_AUTHORIZATION_FAILED.code())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "int correlationId = context.assertSentFetchRequest(epoch,0,0)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int otherNodeId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "deliverResponse(correlationId,otherNodeId,response)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "int localId = 0@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testClusterAuthorizationFailedInFetch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "quorumStateStore.writeElectionState(ElectionState.withElectedLeader(epoch,otherNodeId,voters))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThrows(,null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "int correlationId = assertSentFetchRequest(epoch,0,0)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testClusterAuthorizationFailedInFetch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(ElectionState.withElectedLeader(epoch,otherNodeId,voters),quorumStateStore.readElectionState())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThrows(,null)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testInitializeAsFollowerEmptyLog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->18 [style = dashed, label="0"];
0->6 [style = solid, label="otherNodeId"];
15->13 [style = bold, label=""];
10->20 [style = bold, label=""];
0->9 [style = solid, label="otherNodeId"];
8->6 [style = dashed, label="0"];
19->6 [style = solid, label="response"];
21->0 [style = bold, label=""];
6->18 [style = bold, label=""];
12->15 [style = bold, label=""];
5->9 [style = solid, label="voters"];
17->5 [style = solid, label="localId"];
3->8 [style = solid, label="correlationId"];
0->5 [style = solid, label="otherNodeId"];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
16->17 [style = bold, label=""];
6->8 [style = solid, label="response"];
19->6 [style = bold, label=""];
11->7 [style = solid, label="epoch"];
11->3 [style = solid, label="epoch"];
11->5 [style = bold, label=""];
17->0 [style = bold, label=""];
5->12 [style = bold, label=""];
11->14 [style = solid, label="epoch"];
5->7 [style = solid, label="voters"];
7->2 [style = bold, label=""];
0->8 [style = solid, label="otherNodeId"];
0->7 [style = solid, label="otherNodeId"];
3->20 [style = dashed, label="0"];
6->8 [style = bold, label=""];
14->6 [style = solid, label="correlationId"];
0->15 [style = solid, label="otherNodeId"];
7->12 [style = dashed, label="0"];
5->7 [style = bold, label=""];
5->2 [style = solid, label="voters"];
2->10 [style = solid, label="client"];
8->4 [style = bold, label=""];
11->9 [style = solid, label="epoch"];
13->14 [style = bold, label=""];
11->15 [style = solid, label="epoch"];
11->20 [style = solid, label="epoch"];
}
