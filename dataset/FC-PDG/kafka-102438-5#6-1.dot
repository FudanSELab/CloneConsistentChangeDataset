digraph {
9 [style = filled, label = "consumer.updateEndOffsets(Collections.singletonMap(t1p1,10L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "taskManager.handleRevocation(assignedPartitions)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThrows(,null)@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final StreamsMetricsImpl streamsMetrics = new StreamsMetricsImpl(metrics,CLIENT_ID,StreamsConfig.METRICS_LATEST)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "thread.setState(StreamThread.State.STARTING)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldThrowTaskMigratedExceptionHandlingTaskLost['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final StreamThread thread = new StreamThread(mockTime,config,null,consumer,consumer,null,null,taskManager,streamsMetrics,internalTopologyBuilder,CLIENT_ID,new LogContext(\"\"),new AtomicInteger(),new AtomicLong(Long.MAX_VALUE)).updateThreadMetadata(getSharedAdminClientId(CLIENT_ID))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "shouldThrowTaskMigratedExceptionHandlingRevocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Set<TopicPartition> assignedPartitions = Collections.singleton(t1p1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "consumer.schedulePollTask(null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final TaskManager taskManager = EasyMock.createNiceMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.replay(taskManager)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "taskManager.handleLostAll()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expectLastCall().andThrow(new TaskMigratedException(\"Task lost exception\",new RuntimeException()))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldThrowTaskMigratedExceptionHandlingTaskLost['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(t1p1,0L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<>(OffsetResetStrategy.LATEST)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final StreamThread thread = new StreamThread(mockTime,config,null,consumer,consumer,null,null,taskManager,streamsMetrics,internalTopologyBuilder,CLIENT_ID,new LogContext(\"\"),new AtomicInteger()).updateThreadMetadata(getSharedAdminClientId(CLIENT_ID))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "consumer.assign(assignedPartitions)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expectLastCall().andThrow(new TaskMigratedException(\"Revocation non fatal exception\",new RuntimeException()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
17->5 [style = bold, label=""];
15->13 [style = bold, label=""];
7->11 [style = bold, label=""];
16->11 [style = bold, label=""];
0->13 [style = bold, label=""];
11->14 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
7->16 [style = dashed, label="0"];
18->17 [style = bold, label=""];
14->10 [style = bold, label=""];
8->6 [style = bold, label=""];
3->12 [style = bold, label=""];
13->8 [style = solid, label="assignedPartitions"];
4->7 [style = bold, label=""];
1->17 [style = dashed, label="0"];
9->18 [style = bold, label=""];
19->13 [style = bold, label=""];
13->3 [style = bold, label=""];
12->8 [style = bold, label=""];
5->4 [style = bold, label=""];
2->18 [style = dashed, label="0"];
13->18 [style = solid, label="assignedPartitions"];
6->9 [style = bold, label=""];
3->5 [style = solid, label="taskManager"];
4->16 [style = bold, label=""];
}
