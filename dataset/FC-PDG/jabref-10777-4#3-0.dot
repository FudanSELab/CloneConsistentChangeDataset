digraph {
39 [style = filled, label = "assertEquals(\"\",al.getAsFirstLastNames(false,true))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(\"John Peter von Neumann\",al.getAsFirstLastNames(false,false))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "al = AuthorList.parse(\"\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\",al.getAsFirstLastNames(false,true))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(\"John Peter von Neumann\",al.getAsFirstLastNames(false,false))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertEquals(\"\",al.getAsFirstLastNames(false,true))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(\"J. Smith\",al.getAsFirstLastNames(true,true))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(\"J. Smith\",al.getAsFirstLastNames(true,true))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\",al.getAsFirstLastNames(false,true))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"John Smith and Peter Black Brown\",al.getAsFirstLastNames(false,false))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"John Smith and Peter Black Brown\",al.getAsFirstLastNames(false,false))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(\"John von Neumann, John Smith and Peter Black Brown\",al.getAsFirstLastNames(false,false))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"J. Smith and P. Black Brown\",al.getAsFirstLastNames(true,false))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\",al.getAsFirstLastNames(true,false))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"John Smith and Peter Black Brown\",al.getAsFirstLastNames(false,true))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(\"J. Smith\",al.getAsFirstLastNames(true,false))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(\"J. Smith and P. Black Brown\",al.getAsFirstLastNames(true,true))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "AuthorList al@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(\"J. P. von Neumann\",al.getAsFirstLastNames(true,true))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "al = AuthorList.parse(\"John Peter von Neumann\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(\"\",al.getAsFirstLastNames(true,true))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testGetAuthorsFirstFirst['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertEquals(\"John Smith\",al.getAsFirstLastNames(false,false))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(\"\",al.getAsFirstLastNames(true,false))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(\"\",al.getAsFirstLastNames(true,true))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\",al.getAsLastFirstNames(true,true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(\"J. Smith and P. Black Brown\",al.getAsFirstLastNames(true,false))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "al = AuthorList.parse(\"John Smith\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\",al.getAsFirstLastNames(true,true))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "Assert.assertEquals(\"Smith, John and Black Brown, Peter\",al.getAsLastFirstNames(false,true))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(\"John Peter von Neumann\",al.getAsFirstLastNames(false,true))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "al = AuthorList.parse(\"John Smith and Black Brown, Peter\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Assert.assertEquals(\"Smith, John\",al.getAsLastFirstNames(false,true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Assert.assertEquals(\"\",al.getAsLastFirstNames(true,true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\",al.getAsFirstLastNames(true,false))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(\"\",al.getAsFirstLastNames(false,false))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(\"John Peter von Neumann\",al.getAsFirstLastNames(false,true))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\",al.getAsLastFirstNames(false,true))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "al = AuthorList.parse(\"John von Neumann and John Smith and Black Brown, Peter\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"J. P. von Neumann\",al.getAsFirstLastNames(true,true))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(\"von Neumann, J. P.\",al.getAsLastFirstNames(true,true))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"John Smith\",al.getAsFirstLastNames(false,true))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "al = AuthorList.parse(\"John Peter von Neumann\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"\",al.getAsFirstLastNames(false,false))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"John Smith and Peter Black Brown\",al.getAsFirstLastNames(false,true))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(\"J. P. von Neumann\",al.getAsFirstLastNames(true,false))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"\",al.getAsFirstLastNames(true,false))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(\"J. P. von Neumann\",al.getAsFirstLastNames(true,false))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\",al.getAsFirstLastNames(true,true))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"John Smith\",al.getAsFirstLastNames(false,true))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(\"J. Smith\",al.getAsFirstLastNames(true,false))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"John Smith\",al.getAsFirstLastNames(false,false))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "Assert.assertEquals(\"\",al.getAsLastFirstNames(false,true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testGetAuthorsFirstFirst['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(\"J. Smith and P. Black Brown\",al.getAsFirstLastNames(true,true))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "Assert.assertEquals(\"Smith, J. and Black Brown, P.\",al.getAsLastFirstNames(true,true))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testGetAuthorsLastFirstOxfordComma['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Smith, J.\",al.getAsLastFirstNames(true,true))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"John von Neumann, John Smith and Peter Black Brown\",al.getAsFirstLastNames(false,false))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9->36 [style = dashed, label="0"];
1->42 [style = dashed, label="0"];
9->11 [style = bold, label=""];
15->25 [style = bold, label=""];
10->19 [style = bold, label=""];
1->20 [style = bold, label=""];
49->48 [style = bold, label=""];
18->46 [style = dashed, label="0"];
15->40 [style = dashed, label="0"];
54->19 [style = bold, label=""];
24->30 [style = bold, label=""];
1->59 [style = dashed, label="0"];
16->41 [style = bold, label=""];
58->17 [style = bold, label=""];
44->46 [style = bold, label=""];
34->24 [style = bold, label=""];
17->14 [style = bold, label=""];
14->58 [style = dashed, label="0"];
9->50 [style = dashed, label="0"];
30->40 [style = bold, label=""];
43->29 [style = bold, label=""];
2->41 [style = dashed, label="0"];
56->53 [style = bold, label=""];
12->22 [style = bold, label=""];
59->54 [style = bold, label=""];
23->34 [style = dashed, label="0"];
2->9 [style = bold, label=""];
47->39 [style = bold, label=""];
0->28 [style = dashed, label="0"];
26->13 [style = bold, label=""];
8->43 [style = dashed, label="0"];
12->27 [style = dashed, label="0"];
5->38 [style = dashed, label="0"];
14->8 [style = bold, label=""];
20->33 [style = dashed, label="0"];
27->47 [style = bold, label=""];
4->35 [style = dashed, label="0"];
13->0 [style = bold, label=""];
0->56 [style = dashed, label="0"];
35->42 [style = bold, label=""];
0->12 [style = bold, label=""];
57->26 [style = bold, label=""];
38->16 [style = bold, label=""];
25->18 [style = bold, label=""];
3->26 [style = bold, label=""];
19->50 [style = bold, label=""];
29->37 [style = bold, label=""];
51->52 [style = bold, label=""];
6->15 [style = bold, label=""];
21->39 [style = dashed, label="0"];
12->53 [style = dashed, label="0"];
6->52 [style = dashed, label="0"];
5->16 [style = bold, label=""];
31->26 [style = bold, label=""];
41->36 [style = bold, label=""];
14->32 [style = dashed, label="0"];
17->49 [style = bold, label=""];
39->17 [style = bold, label=""];
19->35 [style = bold, label=""];
8->17 [style = dashed, label="0"];
4->1 [style = bold, label=""];
4->48 [style = dashed, label="0"];
25->44 [style = dashed, label="0"];
40->44 [style = bold, label=""];
53->55 [style = bold, label=""];
48->59 [style = bold, label=""];
22->47 [style = dashed, label="0"];
7->10 [style = bold, label=""];
22->21 [style = bold, label=""];
42->33 [style = bold, label=""];
17->32 [style = bold, label=""];
32->43 [style = bold, label=""];
16->2 [style = bold, label=""];
8->7 [style = bold, label=""];
20->5 [style = bold, label=""];
23->24 [style = bold, label=""];
13->56 [style = bold, label=""];
50->51 [style = bold, label=""];
10->37 [style = dashed, label="0"];
33->38 [style = bold, label=""];
6->30 [style = dashed, label="0"];
7->29 [style = dashed, label="0"];
19->4 [style = bold, label=""];
28->27 [style = bold, label=""];
37->19 [style = bold, label=""];
36->45 [style = bold, label=""];
24->6 [style = bold, label=""];
11->23 [style = bold, label=""];
21->17 [style = bold, label=""];
45->34 [style = bold, label=""];
55->58 [style = bold, label=""];
13->28 [style = bold, label=""];
11->45 [style = dashed, label="0"];
}
