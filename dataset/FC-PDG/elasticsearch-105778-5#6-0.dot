digraph {
18 [style = filled, label = "assertIngestDocument(firstProcessorIngestDocument,this.ingestDocument)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(0),pipeline.getId(),ingestDocument)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testExecuteVerboseItem['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertVerboseResult(simulateDocumentVerboseResult.getProcessorResults().get(1),pipeline.getId(),ingestDocument)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),not(sameInstance(this.ingestDocument.getSourceAndMetadata())))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,false,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestProcessor processor = new TestProcessor(\"processor_0\",\"mock\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument().getSourceAndMetadata(),not(sameInstance(simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument().getSourceAndMetadata())))@@@25@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getProcessorTag(),equalTo(\"test-id\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(firstProcessorIngestDocument,not(sameInstance(this.ingestDocument)))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "IngestDocument firstProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(0).getIngestDocument()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Pipeline pipeline = new Pipeline(\"_id\",\"_description\",version,new CompoundProcessor(processor,processor))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SimulateDocumentVerboseResult simulateDocumentVerboseResult = (SimulateDocumentVerboseResult)actualItemResponse@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(0).getFailure(),nullValue())@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertIngestDocument(secondProcessorIngestDocument,this.ingestDocument)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertThat(firstProcessorIngestDocument.getSourceAndMetadata(),not(sameInstance(this.ingestDocument.getSourceAndMetadata())))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "AtomicReference<SimulateDocumentResult> holder = new AtomicReference<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "latch.await()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "IngestDocument secondProcessorIngestDocument = simulateDocumentVerboseResult.getProcessorResults().get(1).getIngestDocument()@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "SimulateDocumentBaseResult simulateDocumentBaseResult = (SimulateDocumentBaseResult)actualItemResponse@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getProcessorTag(),equalTo(\"test-id\"))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(),nullValue())@@@32@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(actualItemResponse,instanceOf())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestProcessor processor = new TestProcessor(\"test-id\",\"mock\",null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testExecuteItem['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "executionService.executeDocument(pipeline,ingestDocument,true,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(secondProcessorIngestDocument.getSourceAndMetadata(),not(sameInstance(firstProcessorIngestDocument.getSourceAndMetadata())))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "testExecuteVerboseItem['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().get(1).getFailure(),nullValue())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(simulateDocumentVerboseResult.getProcessorResults().size(),equalTo(2))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(processor.getInvokedCounter(),equalTo(2))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SimulateDocumentResult actualItemResponse = holder.getAcquire()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(secondProcessorIngestDocument,not(sameInstance(this.ingestDocument)))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertThat(simulateDocumentBaseResult.getIngestDocument(),equalTo(ingestDocument))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(simulateDocumentBaseResult.getFailure(),nullValue())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24->10 [style = bold, label=""];
32->35 [style = bold, label=""];
8->18 [style = solid, label="firstProcessorIngestDocument"];
33->9 [style = solid, label="processor"];
4->3 [style = bold, label=""];
16->0 [style = bold, label=""];
2->20 [style = bold, label=""];
2->19 [style = dashed, label="0"];
22->2 [style = bold, label=""];
23->5 [style = bold, label=""];
10->36 [style = dashed, label="0"];
3->33 [style = dashed, label="0"];
16->35 [style = dashed, label="0"];
27->28 [style = bold, label=""];
29->3 [style = bold, label=""];
14->22 [style = bold, label=""];
5->15 [style = bold, label=""];
30->32 [style = bold, label=""];
6->19 [style = bold, label=""];
9->10 [style = solid, label="pipeline"];
20->1 [style = bold, label=""];
15->30 [style = bold, label=""];
9->7 [style = bold, label=""];
33->9 [style = bold, label=""];
13->16 [style = bold, label=""];
22->2 [style = solid, label="secondProcessorIngestDocument"];
5->11 [style = solid, label="actualItemResponse"];
1->17 [style = bold, label=""];
13->32 [style = dashed, label="0"];
3->9 [style = solid, label="processor"];
3->9 [style = bold, label=""];
24->36 [style = bold, label=""];
26->27 [style = bold, label=""];
7->24 [style = bold, label=""];
5->32 [style = solid, label="actualItemResponse"];
8->12 [style = solid, label="firstProcessorIngestDocument"];
19->14 [style = bold, label=""];
15->11 [style = bold, label=""];
36->23 [style = bold, label=""];
22->28 [style = dashed, label="0"];
18->6 [style = bold, label=""];
0->25 [style = bold, label=""];
10->23 [style = bold, label=""];
31->33 [style = bold, label=""];
22->20 [style = solid, label="secondProcessorIngestDocument"];
11->13 [style = bold, label=""];
25->26 [style = bold, label=""];
0->8 [style = bold, label=""];
12->18 [style = bold, label=""];
28->19 [style = bold, label=""];
8->12 [style = bold, label=""];
5->13 [style = solid, label="actualItemResponse"];
9->36 [style = solid, label="pipeline"];
0->34 [style = dashed, label="0"];
8->25 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
35->34 [style = bold, label=""];
17->21 [style = bold, label=""];
5->30 [style = solid, label="actualItemResponse"];
}
