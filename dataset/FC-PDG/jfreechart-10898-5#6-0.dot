digraph {
12 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3,1.4,1.5)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "c2.addSeries(new XYIntervalSeries(\"Empty Series\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "XYIntervalSeries<String> s1 = new XYIntervalSeries<>(\"Series\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "XYIntervalSeries<String> s2 = new XYIntervalSeries<>(\"Series\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "XYIntervalSeriesCollection<String> c2 = new XYIntervalSeriesCollection<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "c2.addSeries(new XYIntervalSeries<>(\"Empty Series\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "XYIntervalSeriesCollection<String> c1 = new XYIntervalSeriesCollection<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "s2.add(1.0,1.1,1.2,1.3,1.4,1.5)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "c1.addSeries(new XYIntervalSeries(\"Empty Series\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "c1.addSeries(s1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "OHLCSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "c1.addSeries(new XYIntervalSeries<>(\"Empty Series\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "XYIntervalSeriesCollection c2 = new XYIntervalSeriesCollection()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "XYIntervalSeries s1 = new XYIntervalSeries(\"Series\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "XYIntervalSeries s2 = new XYIntervalSeries(\"Series\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "XYIntervalSeriesCollection c1 = new XYIntervalSeriesCollection()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "c2.addSeries(s2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23->31 [style = bold, label=""];
8->10 [style = bold, label=""];
24->12 [style = bold, label=""];
4->14 [style = bold, label=""];
15->13 [style = bold, label=""];
25->28 [style = bold, label=""];
4->16 [style = dashed, label="0"];
12->5 [style = bold, label=""];
0->12 [style = solid, label="s1"];
10->15 [style = solid, label="c2"];
2->6 [style = bold, label=""];
10->1 [style = solid, label="c2"];
21->7 [style = solid, label="c1"];
26->29 [style = bold, label=""];
27->30 [style = bold, label=""];
30->23 [style = bold, label=""];
18->7 [style = solid, label="c2"];
24->12 [style = solid, label="c2"];
0->11 [style = bold, label=""];
32->29 [style = solid, label="s1"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
7->20 [style = bold, label=""];
8->21 [style = dashed, label="0"];
13->19 [style = dashed, label="0"];
15->19 [style = bold, label=""];
0->20 [style = dashed, label="0"];
8->28 [style = dashed, label="0"];
10->7 [style = bold, label=""];
32->26 [style = bold, label=""];
21->18 [style = bold, label=""];
13->1 [style = bold, label=""];
20->12 [style = solid, label="s1"];
28->32 [style = bold, label=""];
1->22 [style = bold, label=""];
5->16 [style = bold, label=""];
16->9 [style = solid, label="s2"];
18->15 [style = solid, label="c2"];
19->1 [style = bold, label=""];
10->6 [style = solid, label="c2"];
18->5 [style = solid, label="c2"];
9->15 [style = bold, label=""];
3->8 [style = bold, label=""];
8->7 [style = solid, label="c1"];
5->4 [style = bold, label=""];
24->30 [style = solid, label="c2"];
10->5 [style = solid, label="c2"];
24->31 [style = solid, label="c2"];
16->14 [style = bold, label=""];
14->9 [style = bold, label=""];
18->6 [style = solid, label="c2"];
1->2 [style = bold, label=""];
28->12 [style = solid, label="c1"];
4->9 [style = solid, label="s2"];
18->7 [style = bold, label=""];
28->24 [style = solid, label="c1"];
29->24 [style = bold, label=""];
10->7 [style = solid, label="c2"];
2->22 [style = dashed, label="0"];
17->21 [style = bold, label=""];
12->27 [style = bold, label=""];
18->1 [style = solid, label="c2"];
10->18 [style = dashed, label="0"];
22->6 [style = bold, label=""];
20->11 [style = bold, label=""];
}
