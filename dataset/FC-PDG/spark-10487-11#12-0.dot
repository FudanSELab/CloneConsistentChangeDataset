digraph {
8 [style = filled, label = "double(( polyFeatures = ((Vector)r.get(0)).toArray()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a71566)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Word2VecModel model = word2Vec.fit(documentDF)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Dataset<Row> result = model.transform(documentDF)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Dataset<Row> documentDF = spark.createDataFrame(Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \")))),schema)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Word2Vec word2Vec = new Word2Vec().setInputCol(\"text\").setOutputCol(\"result\").setVectorSize(3).setMinCount(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaWord2VecExample\").getOrCreate()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String(( args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(polyFeatures.length,3)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "StructType schema = new StructType(new StructField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a714ae)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Word2VecModel model = word2Vec.fit(documentDF)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "System.out.println(r)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Dataset<Row> documentDF = spark.createDataFrame(data,schema)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testJavaWord2Vec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<Row> data = Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \"))))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testJavaWord2Vec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Dataset<Row> documentDF = sqlContext.createDataFrame(Arrays.asList(RowFactory.create(Arrays.asList(\"Hi I heard about Spark\".split(\" \"))),RowFactory.create(Arrays.asList(\"I wish Java could use case classes\".split(\" \"))),RowFactory.create(Arrays.asList(\"Logistic regression models are neat\".split(\" \")))),schema)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Word2Vec word2Vec = new Word2Vec().setInputCol(\"text\").setOutputCol(\"result\").setVectorSize(3).setMinCount(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "spark.stop()@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
19->18 [style = bold, label=""];
1->8 [style = bold, label=""];
16->11 [style = bold, label=""];
9->0 [style = bold, label=""];
5->9 [style = bold, label=""];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
3->6 [style = solid, label="documentDF"];
16->17 [style = dotted, label="true"];
12->15 [style = bold, label=""];
7->8 [style = dashed, label="0"];
5->3 [style = solid, label="schema"];
12->15 [style = solid, label="schema"];
1->7 [style = bold, label=""];
1->13 [style = bold, label=""];
15->7 [style = solid, label="documentDF"];
15->13 [style = solid, label="documentDF"];
3->0 [style = bold, label=""];
6->1 [style = bold, label=""];
10->5 [style = bold, label=""];
8->2 [style = bold, label=""];
3->9 [style = dashed, label="0"];
15->1 [style = bold, label=""];
7->2 [style = bold, label=""];
13->7 [style = bold, label=""];
5->9 [style = solid, label="schema"];
9->1 [style = solid, label="documentDF"];
14->12 [style = bold, label=""];
3->1 [style = solid, label="documentDF"];
2->7 [style = bold, label=""];
7->19 [style = bold, label=""];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
9->6 [style = solid, label="documentDF"];
14->15 [style = solid, label="data"];
}
