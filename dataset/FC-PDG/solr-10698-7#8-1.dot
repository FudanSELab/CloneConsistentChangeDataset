digraph {
42 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "++workersComplete@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "Exception e@@@87@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
159 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",).withFunctionName(\"parallel\",)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "Tuple tuple = tuples.get(0)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sParams.set(\"action\",\"list\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "testParallelDaemonUpdateStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "Exception e@@@42@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assert(count == 5)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "solrStream.open()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\",sParams)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "tuple = tuples.get(2)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@65@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\",\"s_multi\",\"aaaa\",\"s_multi\",\"bbbb\",\"i_multi\",\"4\",\"i_multi\",\"7\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\",\"s_multi\",\"aaaa1\",\"s_multi\",\"bbbb1\",\"i_multi\",\"44\",\"i_multi\",\"77\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"s_multi\",\"aaaa2\",\"s_multi\",\"bbbb2\",\"i_multi\",\"444\",\"i_multi\",\"777\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"s_multi\",\"aaaa3\",\"s_multi\",\"bbbb3\",\"i_multi\",\"4444\",\"i_multi\",\"7777\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\",\"s_multi\",\"aaaa4\",\"s_multi\",\"bbbb4\",\"i_multi\",\"44444\",\"i_multi\",\"77777\").commit(cluster.getSolrClient(),\"collection1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int iterations = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tupleResponse.EOF@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cluster.waitForActiveCollection(\"parallelDestinationCollection1\",2,2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "tuple = tuples.get(3)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
132 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Exception e@@@87@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "l > 0@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
140 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "StreamExpression expression@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "tuple = tuples.get(1)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "stream.setStreamContext(streamContext)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "++workersComplete@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "solrStream.close()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "tuple = tuples.get(4)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "long stopTime = 0@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"parallel\",).withFunctionName(\"daemon\",)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Tuple t@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "stopTime = tupleResponse.getLong(\"stopTime\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "iterations == 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "workersComplete = 0@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "Tuple tuple = tuples.get(0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assert(tuples.size() == 2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "sParams.set(\"action\",\"stop\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "{}@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sParams = new ModifiableSolrParams()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tuple = tuples.get(3)@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "solrStream.open()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(5,tuples.size())@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "count += tuple.getLong(\"batchIndexed\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "tuple = tuples.get(1)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "solrStream.close()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "assertEquals(5,tuples.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "sParams.set(\"id\",\"test\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "TupleStream parallelUpdateStream = factory.constructStream(\"parallel(collection1, \" + updateExpression + \", workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"batchNumber asc\")\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "iterations = (int)l@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "tupleResponse.EOF@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "solrStream.close()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "solrStream.close()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sParams = new ModifiableSolrParams()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection1\").process(cluster.getSolrClient())solrClientCache.close()}@@@136@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "solrStream.open()@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT,\"/stream\",\"action\",\"list\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tuples = getTuples(stream)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).setPerReplicaState(SolrCloudTestCase.USE_PER_REPLICA_STATE).process(cluster.getSolrClient())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "List<Tuple> tuples = getTuples(parallelUpdateStream)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "stream.setStreamContext(streamContext)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "{}@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testParallelDaemonUpdateStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "tuple = tuples.get(4)@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
154 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Exception e@@@42@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "cluster.waitForActiveCollection(\"parallelDestinationCollection\",2,2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "cluster.getSolrClient().commit(\"parallelDestinationCollection1\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "stopTime == 0@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "String updateExpression = \"commit(parallelDestinationCollection, batchSize=0, zkHost=\"\" + cluster.getZkServer().getZkAddress() + \"\", update(parallelDestinationCollection, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")))\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "tuple = tuples.get(2)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Thread.sleep(1000)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "solrStream.close()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "int workersComplete = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "stopTime > 0@@@80@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "long l = tupleResponse.getLong(\"iterations\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "parallelUpdateStream.setStreamContext(streamContext)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "Thread.sleep(1000)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String updateExpression = \"daemon(update(parallelDestinationCollection1, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")), runInterval=\"1000\", id=\"test\")\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "long count = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
136 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "TupleStream stream@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "testParallelCommitStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "tuples = getTuples(stream)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76->42 [style = bold, label=""];
69->102 [style = bold, label=""];
34->46 [style = bold, label=""];
30->70 [style = dotted, label="true"];
141->115 [style = solid, label="count"];
63->78 [style = solid, label="zkHost"];
50->22 [style = bold, label=""];
90->86 [style = bold, label=""];
47->100 [style = dotted, label="false"];
47->54 [style = dotted, label="false"];
65->84 [style = bold, label=""];
23->51 [style = solid, label="streamContext"];
45->21 [style = solid, label="stream"];
84->48 [style = bold, label=""];
101->25 [style = bold, label=""];
47->37 [style = bold, label=""];
22->94 [style = bold, label=""];
47->37 [style = dotted, label="true"];
103->27 [style = bold, label=""];
43->19 [style = bold, label=""];
146->156 [style = bold, label=""];
74->30 [style = solid, label="l"];
12->2 [style = bold, label=""];
47->74 [style = dotted, label="false"];
47->74 [style = bold, label=""];
117->120 [style = bold, label=""];
73->103 [style = bold, label=""];
54->67 [style = solid, label="iterations"];
37->104 [style = bold, label=""];
152->151 [style = bold, label=""];
107->99 [style = bold, label=""];
116->145 [style = bold, label=""];
89->140 [style = dashed, label="0"];
2->63 [style = bold, label=""];
115->144 [style = bold, label=""];
15->133 [style = dashed, label="0"];
74->30 [style = bold, label=""];
145->136 [style = bold, label=""];
9->5 [style = bold, label=""];
10->79 [style = bold, label=""];
77->93 [style = bold, label=""];
40->24 [style = bold, label=""];
25->10 [style = bold, label=""];
23->12 [style = bold, label=""];
63->159 [style = bold, label=""];
131->135 [style = bold, label=""];
20->44 [style = dotted, label="false"];
95->92 [style = bold, label=""];
30->8 [style = bold, label=""];
137->140 [style = bold, label=""];
32->11 [style = bold, label=""];
156->127 [style = bold, label=""];
144->117 [style = solid, label="expression"];
13->84 [style = bold, label=""];
94->34 [style = bold, label=""];
21->73 [style = bold, label=""];
28->55 [style = bold, label=""];
17->16 [style = bold, label=""];
30->70 [style = bold, label=""];
153->124 [style = bold, label=""];
60->23 [style = bold, label=""];
122->150 [style = bold, label=""];
6->32 [style = bold, label=""];
26->67 [style = bold, label=""];
78->0 [style = solid, label="parallelUpdateStream"];
88->97 [style = bold, label=""];
67->18 [style = bold, label=""];
6->38 [style = solid, label="sParams"];
23->106 [style = solid, label="streamContext"];
111->112 [style = bold, label=""];
108->110 [style = bold, label=""];
121->119 [style = bold, label=""];
134->114 [style = bold, label=""];
51->21 [style = bold, label=""];
148->141 [style = bold, label=""];
76->38 [style = bold, label=""];
151->146 [style = bold, label=""];
147->139 [style = bold, label=""];
76->55 [style = dotted, label="true"];
67->17 [style = dotted, label="true"];
33->76 [style = solid, label="stopTime"];
67->47 [style = dotted, label="true"];
67->26 [style = bold, label=""];
75->65 [style = bold, label=""];
130->118 [style = bold, label=""];
20->59 [style = dotted, label="false"];
9->84 [style = solid, label="sParams"];
62->39 [style = bold, label=""];
112->157 [style = bold, label=""];
123->129 [style = bold, label=""];
56->58 [style = bold, label=""];
67->85 [style = dotted, label="true"];
79->52 [style = bold, label=""];
70->54 [style = bold, label=""];
54->100 [style = bold, label=""];
83->33 [style = bold, label=""];
96->90 [style = bold, label=""];
36->78 [style = bold, label=""];
16->85 [style = bold, label=""];
118->134 [style = bold, label=""];
159->117 [style = solid, label="factory"];
98->101 [style = bold, label=""];
35->96 [style = bold, label=""];
102->80 [style = bold, label=""];
42->7 [style = bold, label=""];
135->149 [style = bold, label=""];
4->91 [style = bold, label=""];
124->155 [style = bold, label=""];
72->9 [style = bold, label=""];
24->3 [style = bold, label=""];
114->123 [style = bold, label=""];
92->13 [style = bold, label=""];
45->51 [style = bold, label=""];
36->78 [style = solid, label="updateExpression"];
36->113 [style = dashed, label="0"];
117->131 [style = solid, label="stream"];
63->57 [style = bold, label=""];
126->130 [style = bold, label=""];
58->18 [style = solid, label="sParams"];
91->59 [style = bold, label=""];
85->47 [style = bold, label=""];
19->59 [style = bold, label=""];
57->45 [style = solid, label="factory"];
38->106 [style = bold, label=""];
33->76 [style = bold, label=""];
76->33 [style = bold, label=""];
47->30 [style = dotted, label="false"];
53->62 [style = bold, label=""];
149->152 [style = bold, label=""];
23->17 [style = solid, label="streamContext"];
113->78 [style = solid, label="updateExpression"];
127->138 [style = bold, label=""];
136->158 [style = bold, label=""];
76->28 [style = dotted, label="true"];
120->131 [style = bold, label=""];
76->38 [style = dotted, label="true"];
11->83 [style = bold, label=""];
113->78 [style = bold, label=""];
15->77 [style = bold, label=""];
44->76 [style = solid, label="stopTime"];
29->42 [style = bold, label=""];
3->41 [style = bold, label=""];
46->82 [style = bold, label=""];
23->81 [style = solid, label="streamContext"];
52->50 [style = bold, label=""];
67->18 [style = dotted, label="true"];
30->8 [style = dotted, label="true"];
59->76 [style = bold, label=""];
76->106 [style = dotted, label="true"];
150->125 [style = bold, label=""];
82->40 [style = bold, label=""];
13->6 [style = bold, label=""];
157->121 [style = bold, label=""];
8->54 [style = bold, label=""];
26->67 [style = solid, label="iterations"];
20->43 [style = dotted, label="false"];
12->2 [style = solid, label="solrClientCache"];
66->98 [style = bold, label=""];
89->110 [style = dashed, label="0"];
71->66 [style = bold, label=""];
80->35 [style = bold, label=""];
44->43 [style = solid, label="stopTime"];
41->14 [style = bold, label=""];
159->113 [style = bold, label=""];
58->64 [style = bold, label=""];
78->81 [style = bold, label=""];
139->143 [style = bold, label=""];
132->147 [style = bold, label=""];
68->60 [style = bold, label=""];
104->72 [style = bold, label=""];
138->153 [style = bold, label=""];
83->42 [style = solid, label="workersComplete"];
5->75 [style = bold, label=""];
140->133 [style = bold, label=""];
14->49 [style = bold, label=""];
55->20 [style = bold, label=""];
20->29 [style = bold, label=""];
27->61 [style = bold, label=""];
39->71 [style = bold, label=""];
97->69 [style = bold, label=""];
110->15 [style = bold, label=""];
133->77 [style = bold, label=""];
154->116 [style = bold, label=""];
99->54 [style = bold, label=""];
144->117 [style = bold, label=""];
81->0 [style = bold, label=""];
100->67 [style = bold, label=""];
18->17 [style = bold, label=""];
158->126 [style = bold, label=""];
105->59 [style = bold, label=""];
129->142 [style = bold, label=""];
86->31 [style = bold, label=""];
128->154 [style = bold, label=""];
23->120 [style = solid, label="streamContext"];
23->48 [style = solid, label="streamContext"];
93->68 [style = bold, label=""];
20->44 [style = bold, label=""];
44->43 [style = bold, label=""];
76->20 [style = dotted, label="true"];
141->115 [style = bold, label=""];
119->128 [style = bold, label=""];
7->45 [style = bold, label=""];
64->26 [style = bold, label=""];
1->99 [style = bold, label=""];
61->53 [style = bold, label=""];
64->104 [style = solid, label="workersComplete"];
48->95 [style = bold, label=""];
106->28 [style = bold, label=""];
67->16 [style = dotted, label="true"];
155->111 [style = bold, label=""];
74->54 [style = solid, label="l"];
20->29 [style = dotted, label="true"];
0->56 [style = bold, label=""];
109->91 [style = bold, label=""];
57->36 [style = bold, label=""];
43->105 [style = bold, label=""];
87->89 [style = bold, label=""];
142->122 [style = bold, label=""];
43->105 [style = dotted, label="true"];
125->132 [style = bold, label=""];
7->45 [style = solid, label="expression"];
57->159 [style = dashed, label="0"];
43->19 [style = dotted, label="true"];
0->148 [style = bold, label=""];
89->15 [style = bold, label=""];
67->104 [style = bold, label=""];
49->88 [style = bold, label=""];
}
