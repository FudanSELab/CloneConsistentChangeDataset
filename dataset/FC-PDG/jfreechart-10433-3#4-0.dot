digraph {
12 [style = filled, label = "assertTrue(r1.equals(r2))@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StandardXYItemRenderer r1 = new StandardXYItemRenderer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "r1.setLegendLine(new Line2D.Double(1.0,2.0,3.0,4.0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "r2.setShapesFilled(false)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "r2.setLegendLine(new Line2D.Double(1.0,2.0,3.0,4.0))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(r1.equals(r2))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "r2.setDrawSeriesLineAsPath(true)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(r1.equals(r2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "r1.setBaseShapesFilled(false)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "TestRenderer r2 = new TestRenderer()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertFalse(r1.equals(r2))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StandardXYItemRenderer r2 = new StandardXYItemRenderer()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(r1.equals(r2))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(r1.equals(r2))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "r1.setPlotImages(true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(r1.equals(r2))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "r2.setGapThresholdType(UnitType.ABSOLUTE)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "r1.setGapThreshold(1.23)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "r1.setDrawSeriesLineAsPath(true)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(r1.equals(r2))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertTrue(r1.equals(r2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertTrue(r1.equals(r2))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(r1.equals(r2))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "TestRenderer r1 = new TestRenderer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertFalse(r1.equals(r2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(r1.equals(r2))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "r1.setSeriesShapesFilled(1,Boolean.TRUE)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertFalse(r1.equals(r2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "r1.setBaseShapesVisible(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "r1.setPlotDiscontinuous(true)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertFalse(r1.equals(r2))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "r2.setBaseShapesFilled(false)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "r1.setGapThresholdType(UnitType.ABSOLUTE)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "r1.setPlotLines(false)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertFalse(r1.equals(r2))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertFalse(r1.equals(r2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "r2.setPlotDiscontinuous(true)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "r2.setTreatLegendShapeAsLine(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "r2.setGapThreshold(1.23)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(r1.equals(r2))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(r1.equals(r2))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "r1.setTreatLegendShapeAsLine(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "r2.setBaseShapesVisible(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "r2.setSeriesShapesFilled(1,Boolean.TRUE)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testEquals2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(r1.equals(r2))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "r2.setPlotImages(true)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "r1.setShapesFilled(false)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertTrue(r1.equals(r2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertFalse(r1.equals(r2))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(r1.equals(r2))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "r2.setPlotLines(false)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(r1,r2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertFalse(r1.equals(r2))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54->55 [style = bold, label=""];
29->15 [style = bold, label=""];
1->55 [style = dashed, label="0"];
25->22 [style = bold, label=""];
10->24 [style = bold, label=""];
41->8 [style = bold, label=""];
27->44 [style = bold, label=""];
2->4 [style = solid, label="r2"];
49->51 [style = bold, label=""];
51->53 [style = bold, label=""];
2->23 [style = solid, label="r2"];
50->51 [style = solid, label="r2"];
9->16 [style = bold, label=""];
2->21 [style = solid, label="r2"];
21->28 [style = bold, label=""];
2->18 [style = solid, label="r2"];
42->3 [style = bold, label=""];
10->49 [style = dashed, label="0"];
16->14 [style = bold, label=""];
2->40 [style = solid, label="r2"];
44->47 [style = bold, label=""];
48->1 [style = bold, label=""];
2->11 [style = solid, label="r2"];
35->31 [style = bold, label=""];
25->47 [style = bold, label=""];
22->46 [style = bold, label=""];
2->19 [style = solid, label="r2"];
2->9 [style = solid, label="r2"];
40->0 [style = bold, label=""];
37->29 [style = bold, label=""];
26->43 [style = bold, label=""];
2->32 [style = solid, label="r2"];
2->50 [style = dashed, label="0"];
6->53 [style = dashed, label="0"];
19->37 [style = bold, label=""];
2->41 [style = solid, label="r2"];
30->19 [style = bold, label=""];
18->20 [style = bold, label=""];
43->12 [style = bold, label=""];
23->10 [style = bold, label=""];
5->11 [style = bold, label=""];
39->25 [style = bold, label=""];
11->30 [style = bold, label=""];
20->13 [style = bold, label=""];
4->17 [style = bold, label=""];
6->34 [style = bold, label=""];
2->34 [style = solid, label="r2"];
2->42 [style = solid, label="r2"];
47->40 [style = bold, label=""];
2->13 [style = solid, label="r2"];
45->36 [style = bold, label=""];
7->4 [style = bold, label=""];
38->1 [style = bold, label=""];
33->26 [style = bold, label=""];
2->12 [style = solid, label="r2"];
0->41 [style = bold, label=""];
2->46 [style = solid, label="r2"];
50->23 [style = solid, label="r2"];
28->23 [style = bold, label=""];
2->44 [style = solid, label="r2"];
3->21 [style = bold, label=""];
53->23 [style = bold, label=""];
32->39 [style = bold, label=""];
1->2 [style = bold, label=""];
55->50 [style = bold, label=""];
50->52 [style = solid, label="r2"];
2->31 [style = solid, label="r2"];
2->26 [style = solid, label="r2"];
1->42 [style = solid, label="r1"];
52->49 [style = bold, label=""];
34->5 [style = bold, label=""];
2->25 [style = solid, label="r2"];
2->24 [style = solid, label="r2"];
17->32 [style = bold, label=""];
15->18 [style = bold, label=""];
50->52 [style = bold, label=""];
14->33 [style = bold, label=""];
2->36 [style = solid, label="r2"];
2->29 [style = solid, label="r2"];
36->7 [style = bold, label=""];
46->27 [style = bold, label=""];
8->9 [style = bold, label=""];
24->6 [style = bold, label=""];
13->35 [style = bold, label=""];
31->45 [style = bold, label=""];
2->42 [style = bold, label=""];
2->14 [style = solid, label="r2"];
}
