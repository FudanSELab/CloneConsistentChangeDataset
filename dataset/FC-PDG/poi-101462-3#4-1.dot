digraph {
6 [style = filled, label = "CellValue result = fe.evaluate(cell)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "HSSFCell cell@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "int expectedResult@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "confirmDouble['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HSSFFormulaEvaluator fe@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(result.getCellType(),CellType.NUMERIC)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "confirmDouble['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "confirmResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String formulaText@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cell.setCellFormula(formulaText)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "HSSFCell cell@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HSSFFormulaEvaluator fe@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String formulaText@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fe.notifyUpdateCell(cell)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expectedResult,result.getNumberValue())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(CellType.NUMERIC,result.getCellType())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "double expectedResult@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "HSSFFormulaEvaluator fe@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "HSSFCell cell@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String formulaText@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(expectedResult,result.getNumberValue(),0.0)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
9->0 [style = bold, label=""];
4->6 [style = bold, label=""];
12->8 [style = dotted, label="true"];
20->17 [style = dotted, label="true"];
7->3 [style = solid, label="formulaText"];
5->1 [style = dotted, label="true"];
13->6 [style = solid, label="cell"];
17->3 [style = solid, label="formulaText"];
2->4 [style = solid, label="cell"];
19->4 [style = solid, label="cell"];
10->3 [style = solid, label="formulaText"];
20->3 [style = bold, label=""];
3->4 [style = bold, label=""];
12->11 [style = dotted, label="true"];
13->4 [style = solid, label="cell"];
6->14 [style = bold, label=""];
12->13 [style = dotted, label="true"];
9->18 [style = bold, label=""];
9->14 [style = dashed, label="0"];
15->18 [style = solid, label="expectedResult"];
14->0 [style = bold, label=""];
12->10 [style = dotted, label="true"];
5->7 [style = dotted, label="true"];
19->6 [style = solid, label="cell"];
0->18 [style = dashed, label="0"];
11->0 [style = solid, label="expectedResult"];
2->6 [style = solid, label="cell"];
12->3 [style = bold, label=""];
20->19 [style = dotted, label="true"];
6->9 [style = bold, label=""];
5->8 [style = dotted, label="true"];
8->0 [style = solid, label="expectedResult"];
20->15 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
5->2 [style = dotted, label="true"];
}
