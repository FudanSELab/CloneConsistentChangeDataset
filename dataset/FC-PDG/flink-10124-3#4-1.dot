digraph {
33 [style = filled, label = "Map<N,Map<K,S>> actualStates = readStateFromSnapshot(outputStream.toByteArray(),keySerializer,namespaceSerializer,stateSerializer)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "@Nonnull CopyOnWriteSkipListStateMapSnapshot<K,N,S> snapshot@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "@Nonnull CopyOnWriteSkipListStateMapSnapshot<K,N,S> snapshot@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verifySnapshotWithoutTransform['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(referenceStates,actualStates)@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TypeSerializer<K> keySerializer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "snapshot.writeState(keySerializer,namespaceSerializer,stateSerializer,outputView,null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "state != null@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ByteArrayOutputStreamWithPos outputStream = new ByteArrayOutputStreamWithPos()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "snapshot.writeState(keySerializer,namespaceSerializer,stateSerializer,outputView,transformer)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Iterator<StateEntry<K,N,S>> iterator = snapshot.getIterator(keySerializer,namespaceSerializer,stateSerializer,null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "@Nonnull Map<N,Map<K,S>> referenceStates@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "S state = transformer.filterOrTransform(keyEntry.getValue())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verificationMode == SnapshotVerificationMode.ITERATOR@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "SnapshotVerificationMode verificationMode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Map<N,Map<K,S>> actualStates = readStateFromSnapshot(outputStream.toByteArray(),keySerializer,namespaceSerializer,stateSerializer)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<N,Map<K,S>> referenceStates@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "snapshot.writeState(keySerializer,namespaceSerializer,stateSerializer,outputView,null)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Map<N,Map<K,S>> actualStates = readStateFromSnapshot(outputStream.toByteArray(),keySerializer,namespaceSerializer,stateSerializer)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "TypeSerializer<N> namespaceSerializer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TypeSerializer<K> keySerializer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TypeSerializer<S> stateSerializer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<N,Map<K,S>> transformedStates = new HashMap<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TypeSerializer<N> namespaceSerializer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "verifySnapshotWithoutTransform['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Map<N,Map<K,S>> referenceStates@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "transformedStates.computeIfAbsent(namespaceEntry.getKey(),null).put(keyEntry.getKey(),state)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TypeSerializer<S> stateSerializer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(null,containsInAnyOrder(toMatchers(referenceStates)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "TypeSerializer<N> namespaceSerializer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "DataOutputView outputView = new DataOutputViewStreamWrapper(outputStream)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(referenceStates,actualStates)@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(transformedStates,actualStates)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "verifySnapshotWithTransform['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TypeSerializer<S> stateSerializer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "StateSnapshotTransformer<S> transformer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TypeSerializer<K> keySerializer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "@Nonnull CopyOnWriteSkipListStateMapSnapshot<K,N,S> snapshot@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4->1 [style = dotted, label="true"];
28->35 [style = dotted, label="true"];
10->20 [style = solid, label="outputView"];
30->36 [style = bold, label=""];
36->33 [style = bold, label=""];
9->6 [style = bold, label=""];
11->22 [style = solid, label="stateSerializer"];
0->6 [style = solid, label="keySerializer"];
23->13 [style = bold, label=""];
19->11 [style = dotted, label="true"];
7->10 [style = solid, label="outputStream"];
33->31 [style = solid, label="actualStates"];
15->20 [style = solid, label="namespaceSerializer"];
27->33 [style = solid, label="keySerializer"];
14->20 [style = dotted, label="false"];
28->27 [style = dotted, label="true"];
14->20 [style = bold, label=""];
1->9 [style = solid, label="stateSerializer"];
8->6 [style = solid, label="namespaceSerializer"];
18->22 [style = solid, label="keySerializer"];
10->14 [style = bold, label=""];
19->17 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
0->9 [style = solid, label="keySerializer"];
19->21 [style = dotted, label="true"];
24->33 [style = solid, label="namespaceSerializer"];
28->24 [style = dotted, label="true"];
18->20 [style = solid, label="keySerializer"];
35->29 [style = solid, label="stateSerializer"];
35->33 [style = solid, label="stateSerializer"];
28->37 [style = dotted, label="true"];
16->14 [style = solid, label="verificationMode"];
28->34 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
1->6 [style = solid, label="stateSerializer"];
10->9 [style = solid, label="outputView"];
22->12 [style = solid, label="actualStates"];
30->33 [style = bold, label=""];
14->22 [style = dotted, label="false"];
19->18 [style = dotted, label="true"];
30->32 [style = bold, label=""];
14->23 [style = dotted, label="true"];
19->15 [style = dotted, label="true"];
32->30 [style = bold, label=""];
6->5 [style = solid, label="actualStates"];
18->23 [style = solid, label="keySerializer"];
4->7 [style = bold, label=""];
32->30 [style = solid, label="state"];
30->36 [style = dotted, label="true"];
6->5 [style = bold, label=""];
15->23 [style = solid, label="namespaceSerializer"];
4->3 [style = dotted, label="true"];
14->23 [style = bold, label=""];
21->12 [style = solid, label="referenceStates"];
5->31 [style = dashed, label="0"];
10->9 [style = bold, label=""];
27->29 [style = solid, label="keySerializer"];
25->31 [style = solid, label="transformedStates"];
11->20 [style = solid, label="stateSerializer"];
8->37 [style = dashed, label="0"];
7->10 [style = bold, label=""];
2->5 [style = solid, label="referenceStates"];
8->9 [style = solid, label="namespaceSerializer"];
25->32 [style = bold, label=""];
28->7 [style = bold, label=""];
4->8 [style = dotted, label="true"];
29->25 [style = bold, label=""];
36->32 [style = bold, label=""];
8->21 [style = dashed, label="0"];
10->29 [style = solid, label="outputView"];
14->13 [style = dotted, label="true"];
15->22 [style = solid, label="namespaceSerializer"];
21->13 [style = solid, label="referenceStates"];
20->22 [style = bold, label=""];
14->12 [style = dotted, label="false"];
11->23 [style = solid, label="stateSerializer"];
9->29 [style = dashed, label="0"];
10->29 [style = bold, label=""];
24->29 [style = solid, label="namespaceSerializer"];
22->12 [style = bold, label=""];
28->26 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
33->31 [style = bold, label=""];
37->29 [style = solid, label="transformer"];
32->36 [style = solid, label="state"];
19->7 [style = bold, label=""];
}
