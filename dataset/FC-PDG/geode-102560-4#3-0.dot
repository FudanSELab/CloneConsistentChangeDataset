digraph {
2 [style = filled, label = "TestSSLEngine testEngine = new TestSSLEngine()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteBuffer wrappedData = ByteBuffer.allocate(nioSslEngine.peerAppData.capacity())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "unwrappedBuffer.flip()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "wrappedData.put(netBytes)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "byte(( netBytes = new byte((((@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(unwrappedBuffer.remaining()).isEqualTo(0)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "unwrapWithBufferUnderflow['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "wrapFails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ByteBuffer wrappedData = ByteBuffer.allocate(inputSharing.getBuffer().capacity())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "spyNioSslEngine.engine = testEngine@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "unwrappedBuffer.flip()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Arrays.fill(netBytes,(byte)0x1F)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ByteBuffer appData = ByteBuffer.allocate(nioSslEngine.myNetData.capacity() + 100)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "byte(( netBytes = new byte((((@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "unwrapWithBufferUnderflow['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "byte(( appBytes = new byte((((@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Arrays.fill(appBytes,(byte)0x1F)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "spyNioSslEngine.engine = testEngine@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestSSLEngine testEngine = new TestSSLEngine()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(wrappedData.position()).isEqualTo(netBytes.length)@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testEngine.addReturnResult(new SSLEngineResult(CLOSED,NEED_TASK,appData.remaining(),appData.remaining()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ByteBuffer unwrappedBuffer = sharedBuffer.getBuffer()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(unwrappedBuffer.remaining()).isEqualTo(0)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "appData.flip()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "appData.put(appBytes)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThatThrownBy(null).isInstanceOf().hasMessageContaining(\"Error encrypting data\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
2->10 [style = solid, label="testEngine"];
22->20 [style = solid, label="appBytes"];
6->21 [style = dashed, label="0"];
1->4 [style = bold, label=""];
8->11 [style = solid, label="netBytes"];
24->2 [style = bold, label=""];
16->8 [style = bold, label=""];
8->20 [style = dashed, label="0"];
5->24 [style = dashed, label="0"];
2->18 [style = bold, label=""];
10->21 [style = bold, label=""];
7->8 [style = bold, label=""];
15->16 [style = bold, label=""];
20->25 [style = bold, label=""];
10->6 [style = bold, label=""];
3->19 [style = dashed, label="0"];
6->14 [style = bold, label=""];
3->6 [style = solid, label="wrappedData"];
6->1 [style = bold, label=""];
25->24 [style = bold, label=""];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
13->17 [style = bold, label=""];
22->25 [style = solid, label="appBytes"];
18->10 [style = bold, label=""];
22->20 [style = bold, label=""];
3->7 [style = bold, label=""];
0->6 [style = solid, label="testEngine"];
23->19 [style = bold, label=""];
11->25 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
14->9 [style = bold, label=""];
12->3 [style = bold, label=""];
7->8 [style = solid, label="netBytes"];
8->11 [style = bold, label=""];
19->22 [style = bold, label=""];
7->22 [style = dashed, label="0"];
9->13 [style = bold, label=""];
8->5 [style = solid, label="netBytes"];
7->11 [style = solid, label="netBytes"];
}
