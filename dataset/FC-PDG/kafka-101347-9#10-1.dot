digraph {
13 [style = filled, label = "buffer.evictWhile(null,null)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "shouldRestoreV2Format['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "shouldRestoreV1Format['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertThat(buffer.numRecords(),is(2))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(evicted,is(asList(new Eviction<>(\"zxcv\",new Change<>(\"next\",\"3o4im\"),getContext(3L)),new Eviction<>(\"asdf\",new Change<>(\"qwer\",null),getContext(1L)))))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String zxcvBinary1 = \"0000000000000002000000000000000000000005746F70696300000000FFFFFFFF000000140000000749474E4F52454400000005336F34696D0000000870726576696F75730000000000000001\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(buffer.bufferSize(),is(95L))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(buffer.priorValueForBuffered(\"todelete\"),is(Maybe.undefined()))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(buffer.bufferSize(),is(142L))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(buffer.numRecords(),is(3))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(buffer.minTimestamp(),is(0L))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RecordBatchingStateRestoreCallback stateRestoreCallback = (RecordBatchingStateRestoreCallback)context.stateRestoreCallback(testName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final TimeOrderedKeyValueBuffer<String,String> buffer = bufferSupplier.apply(testName)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final String zxcvBinary2 = \"0000000000000003000000000000000000000005746F70696300000000FFFFFFFF0000001100000005336F34696D000000046E6578740000000870726576696F75730000000000000001\"@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final String asdfBinary = \"00000000000000020000000000000001000000000000000000000005746F70696300000000FFFFFFFF0000000CFFFFFFFF0000000471776572\"@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cleanup(context,buffer)@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "stateRestoreCallback.restoreBatch(asList(new ConsumerRecord<>(\"changelog-topic\",0,0,999,TimestampType.CREATE_TIME,-1L,-1,-1,\"todelete\".getBytes(UTF_8),hexStringToByteArray(toDeleteBinary),v2FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,1,9999,TimestampType.CREATE_TIME,-1L,-1,-1,\"asdf\".getBytes(UTF_8),hexStringToByteArray(asdfBinary),v2FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,2,99,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),hexStringToByteArray(zxcvBinary1),v2FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,2,100,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),hexStringToByteArray(zxcvBinary2),v2FlagHeaders)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final String toDeleteBinary = \"00000000000000000000000000000000000000000000000000000005746F70696300000000FFFFFFFF0000000EFFFFFFFF00000006646F6F6D6564\"@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String zxcvBinary2 = \"00000000000000010000000000000003000000000000000000000005746F70696300000000FFFFFFFF0000001100000005336F34696D000000046E657874\"@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "buffer.init(context,buffer)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final MockInternalProcessorContext context = makeContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String zxcvBinary1 = \"00000000000000010000000000000002000000000000000000000005746F70696300000000FFFFFFFF000000150000000870726576696F757300000005336F34696D\"@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(buffer.priorValueForBuffered(\"zxcv\"),is(Maybe.defined(ValueAndTimestamp.make(\"previous\",-1))))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<Eviction<String,String>> evicted = new LinkedList<>()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final String toDeleteBinary = \"0000000000000000000000000000000000000005746F70696300000000FFFFFFFF0000000EFFFFFFFF00000006646F6F6D6564FFFFFFFF0000000000000000\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RecordHeaders v1FlagHeaders = new RecordHeaders(new Header((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bca264)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(buffer.priorValueForBuffered(\"asdf\"),is(Maybe.defined(null)))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "buffer.init((StateStoreContext)context,buffer)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "context.setRecordContext(new ProcessorRecordContext(0,0,0,\"\",null))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stateRestoreCallback.restoreBatch(asList(new ConsumerRecord<>(\"changelog-topic\",0,0,999,TimestampType.CREATE_TIME,-1L,-1,-1,\"todelete\".getBytes(UTF_8),hexStringToByteArray(toDeleteBinary),v1FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,1,9999,TimestampType.CREATE_TIME,-1L,-1,-1,\"asdf\".getBytes(UTF_8),hexStringToByteArray(asdfBinary),v1FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,2,99,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),hexStringToByteArray(zxcvBinary1),v1FlagHeaders),new ConsumerRecord<>(\"changelog-topic\",0,3,100,TimestampType.CREATE_TIME,-1L,-1,-1,\"zxcv\".getBytes(UTF_8),hexStringToByteArray(zxcvBinary2),v1FlagHeaders)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final RecordHeaders v2FlagHeaders = new RecordHeaders(new Header((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bca3d1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "stateRestoreCallback.restoreBatch(singletonList(new ConsumerRecord<>(\"changelog-topic\",0,3,3,TimestampType.CREATE_TIME,-1L,-1,-1,\"todelete\".getBytes(UTF_8),null)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String asdfBinary = \"0000000000000001000000000000000000000005746F70696300000000FFFFFFFF0000000CFFFFFFFF0000000471776572FFFFFFFF0000000000000002\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(buffer.minTimestamp(),is(1L))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldRestoreV1Format['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
28->29 [style = bold, label=""];
29->33 [style = solid, label="zxcvBinary2"];
8->10 [style = bold, label=""];
12->18 [style = solid, label="toDeleteBinary"];
32->22 [style = bold, label=""];
16->18 [style = solid, label="asdfBinary"];
34->33 [style = solid, label="asdfBinary"];
22->26 [style = solid, label="buffer"];
22->1 [style = solid, label="buffer"];
10->14 [style = bold, label=""];
11->1 [style = bold, label=""];
0->19 [style = bold, label=""];
1->26 [style = dashed, label="0"];
26->3 [style = bold, label=""];
16->6 [style = bold, label=""];
17->31 [style = bold, label=""];
22->23 [style = solid, label="buffer"];
33->4 [style = bold, label=""];
11->26 [style = solid, label="context"];
11->23 [style = solid, label="context"];
1->3 [style = bold, label=""];
9->20 [style = bold, label=""];
30->34 [style = bold, label=""];
12->16 [style = bold, label=""];
5->18 [style = bold, label=""];
15->18 [style = solid, label="v1FlagHeaders"];
12->30 [style = dashed, label="0"];
5->29 [style = dashed, label="0"];
7->8 [style = bold, label=""];
20->25 [style = bold, label=""];
27->22 [style = bold, label=""];
28->33 [style = solid, label="zxcvBinary1"];
4->7 [style = bold, label=""];
19->24 [style = bold, label=""];
34->28 [style = bold, label=""];
16->34 [style = dashed, label="0"];
6->28 [style = dashed, label="0"];
6->5 [style = bold, label=""];
29->33 [style = bold, label=""];
18->4 [style = bold, label=""];
11->1 [style = solid, label="context"];
31->30 [style = bold, label=""];
30->33 [style = solid, label="toDeleteBinary"];
17->15 [style = bold, label=""];
15->31 [style = dashed, label="0"];
5->18 [style = solid, label="zxcvBinary2"];
3->17 [style = bold, label=""];
14->9 [style = bold, label=""];
24->21 [style = solid, label="evicted"];
15->12 [style = bold, label=""];
31->33 [style = solid, label="v2FlagHeaders"];
2->22 [style = bold, label=""];
6->18 [style = solid, label="zxcvBinary1"];
13->21 [style = bold, label=""];
22->11 [style = bold, label=""];
18->33 [style = dashed, label="0"];
11->26 [style = bold, label=""];
24->13 [style = bold, label=""];
21->23 [style = bold, label=""];
}
