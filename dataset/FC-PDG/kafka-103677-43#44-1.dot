digraph {
38 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i <= 3@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ProduceResponse response = produceResponse(tp0,i,Errors.NONE,throttleTimeMs)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.send(request,time.milliseconds())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "FetchResponse response = fetchResponse(nextRecords,Errors.NONE,i,throttleTimeMs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(400,maxMetric.value(),EPSILON)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.poll(1,time.milliseconds())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "selector.clear()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int throttleTimeMs = 100 * i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "selector.clear()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<TopicPartition,PartitionData>())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,\"consumer\" + groupId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(metrics)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ProduceRequest.Builder builder = new ProduceRequest.Builder(RecordBatch.CURRENT_MAGIC_VALUE,(short)1,1000,Collections.emptyMap())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "buffer = response.serialize(ApiKeys.PRODUCE.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(250,avgMetric.value(),EPS)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(250,avgMetric.value(),EPSILON)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.close()@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(400,maxMetric.value(),EPS)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
42->23 [style = bold, label=""];
16->0 [style = bold, label=""];
18->35 [style = solid, label="i"];
12->5 [style = bold, label=""];
6->31 [style = dotted, label="true"];
37->27 [style = bold, label=""];
18->10 [style = solid, label="i"];
21->15 [style = bold, label=""];
27->28 [style = bold, label=""];
26->25 [style = solid, label="throttleTimeSensor"];
6->1 [style = dotted, label="true"];
2->15 [style = dotted, label="true"];
2->18 [style = dotted, label="true"];
3->18 [style = bold, label=""];
38->30 [style = bold, label=""];
34->24 [style = bold, label=""];
31->6 [style = bold, label=""];
23->13 [style = bold, label=""];
11->33 [style = bold, label=""];
9->41 [style = dashed, label="0"];
18->2 [style = solid, label="i"];
5->37 [style = bold, label=""];
2->8 [style = dotted, label="true"];
2->10 [style = dotted, label="true"];
2->20 [style = dotted, label="true"];
2->3 [style = dotted, label="true"];
13->25 [style = bold, label=""];
11->12 [style = solid, label="apiVersionsResponseVersion"];
10->14 [style = bold, label=""];
2->24 [style = dotted, label="true"];
10->35 [style = solid, label="throttleTimeMs"];
30->42 [style = bold, label=""];
30->26 [style = bold, label=""];
41->4 [style = bold, label=""];
11->12 [style = bold, label=""];
2->21 [style = dotted, label="true"];
36->8 [style = solid, label="buffer"];
15->36 [style = dashed, label="0"];
16->43 [style = dashed, label="0"];
8->17 [style = bold, label=""];
5->6 [style = bold, label=""];
10->34 [style = bold, label=""];
29->40 [style = bold, label=""];
39->41 [style = bold, label=""];
24->7 [style = bold, label=""];
15->8 [style = solid, label="buffer"];
42->25 [style = solid, label="throttleTimeSensor"];
12->33 [style = dashed, label="0"];
10->21 [style = solid, label="throttleTimeMs"];
28->35 [style = solid, label="i"];
22->16 [style = bold, label=""];
7->20 [style = bold, label=""];
33->5 [style = bold, label=""];
28->10 [style = solid, label="i"];
2->10 [style = bold, label=""];
32->30 [style = bold, label=""];
28->2 [style = solid, label="i"];
6->37 [style = bold, label=""];
30->25 [style = solid, label="selector"];
28->18 [style = solid, label="i"];
6->1 [style = bold, label=""];
6->27 [style = bold, label=""];
37->6 [style = dotted, label="true"];
1->6 [style = bold, label=""];
2->35 [style = dotted, label="true"];
17->3 [style = bold, label=""];
36->8 [style = bold, label=""];
2->14 [style = dotted, label="true"];
2->36 [style = dotted, label="true"];
21->35 [style = dashed, label="0"];
40->43 [style = bold, label=""];
12->5 [style = solid, label="buffer"];
11->33 [style = solid, label="apiVersionsResponseVersion"];
34->24 [style = solid, label="builder"];
43->39 [style = bold, label=""];
15->8 [style = bold, label=""];
0->9 [style = bold, label=""];
2->34 [style = dotted, label="true"];
22->40 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->17 [style = dotted, label="true"];
0->39 [style = dashed, label="0"];
18->2 [style = bold, label=""];
37->6 [style = bold, label=""];
20->21 [style = bold, label=""];
33->5 [style = solid, label="buffer"];
28->2 [style = bold, label=""];
28->21 [style = solid, label="i"];
6->31 [style = bold, label=""];
25->11 [style = bold, label=""];
24->7 [style = solid, label="request"];
2->7 [style = dotted, label="true"];
26->23 [style = bold, label=""];
18->21 [style = solid, label="i"];
14->24 [style = solid, label="builder"];
26->42 [style = dashed, label="0"];
20->35 [style = bold, label=""];
29->22 [style = bold, label=""];
35->36 [style = bold, label=""];
2->29 [style = bold, label=""];
19->30 [style = bold, label=""];
}
