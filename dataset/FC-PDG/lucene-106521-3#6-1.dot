digraph {
16 [style = filled, label = "int iter = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "++iter@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "byte(( encodedMin = new byte((((@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "LongPoint.encodeDimension(value,encoded,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Query q1 = LongPoint.newRangeQuery(\"idx\",min,max)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "doc.add(new NumericDocValuesField(\"dv\",value))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "doc.add(new LongPoint(\"idx\",value))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "doc.add(new LongPoint(\"idx\",value))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final Query q1 = LongPoint.newRangeQuery(\"idx\",min,max)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "iw.deleteDocuments(LongPoint.newRangeQuery(\"idx\",0L,10L))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final IndexSearcher searcher = newSearcher(reader,false)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "max--@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "boolean sortedSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "doTestDuelPointRangeSortedRangeQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final int iters = atLeast(10)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "sortedNumeric@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final int numValues = TestUtil.nextInt(random(),0,maxValuesPerDoc)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "boolean sortedNumeric@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Directory dir = newDirectory()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "sortedNumeric@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "long min = random().nextBoolean()? Long.MIN_VALUE: TestUtil.nextLong(random(),-100,10000)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "q2 = NumericDocValuesField.newRangeQuery(\"dv\",min,max)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "byte(( encoded = new byte((((@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "++j@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "doTestDuelPointRangeNumericRangeQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "iter < iters@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "random().nextBoolean()@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RandomIndexWriter iw = new RandomIndexWriter(random(),dir)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertSameMatches(searcher,q1,q2,false)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "sortedSet@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int i = 0@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Document doc = new Document()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "LongPoint.encodeDimension(max,encodedMax,0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "int maxValuesPerDoc@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "doTestDuelPointRangeNumericRangeQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "q2 = SortedDocValuesField.newRangeQuery(\"dv\",min == Long.MIN_VALUE && random().nextBoolean()? null: new BytesRef(encodedMin),max == Long.MAX_VALUE && random().nextBoolean()? null: new BytesRef(encodedMax),includeMin,includeMax)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final int numDocs = atLeast(100)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < numDocs@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final long value = TestUtil.nextLong(random(),-100,10000)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "int maxValuesPerDoc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "reader.close()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "random().nextBoolean()@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "iw.deleteDocuments(LongPoint.newRangeQuery(\"idx\",0L,10L))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "doc.add(new SortedSetDocValuesField(\"dv\",new BytesRef(encoded)))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "iw.addDocument(doc)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final IndexReader reader = iw.getReader()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "includeMin = false@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Query q2@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int maxValuesPerDoc@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"dv\",value))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "++i@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "boolean includeMin = true@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int j = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "LongPoint.encodeDimension(min,encodedMin,0)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "reader.close()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertSameMatches(searcher,q1,q2,false)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "includeMax = false@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "iw.close()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "q2 = SortedNumericDocValuesField.newRangeQuery(\"dv\",min,max)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "q2 = SortedSetDocValuesField.newRangeQuery(\"dv\",min == Long.MIN_VALUE && random().nextBoolean()? null: new BytesRef(encodedMin),max == Long.MAX_VALUE && random().nextBoolean()? null: new BytesRef(encodedMax),includeMin,includeMax)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final IndexSearcher searcher = newSearcher(reader,false)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < 100@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "j < numValues@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "dir.close()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "boolean includeMax = true@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "q2 = NumericDocValuesField.newSlowRangeQuery(\"dv\",min,max)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "sortedSet@@@58@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "++i@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "doc.add(new SortedDocValuesField(\"dv\",new BytesRef(encoded)))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "final Query q2@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "min++@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "dir.close()@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "random().nextBoolean()@@@52@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "long max = random().nextBoolean()? Long.MAX_VALUE: TestUtil.nextLong(random(),-100,10000)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "byte(( encodedMax = new byte((((@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "q2 = SortedNumericDocValuesField.newSlowRangeQuery(\"dv\",min,max)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->35 [style = bold, label=""];
33->3 [style = dotted, label="true"];
63->15 [style = bold, label=""];
69->76 [style = bold, label=""];
64->51 [style = bold, label=""];
39->0 [style = solid, label="numValues"];
66->56 [style = solid, label="includeMin"];
8->17 [style = solid, label="q1"];
28->21 [style = dotted, label="true"];
30->20 [style = bold, label=""];
41->39 [style = solid, label="maxValuesPerDoc"];
14->26 [style = dotted, label="true"];
10->44 [style = dotted, label="false"];
33->28 [style = dotted, label="true"];
9->17 [style = solid, label="q2"];
30->0 [style = dotted, label="true"];
11->69 [style = bold, label=""];
28->14 [style = dotted, label="true"];
53->58 [style = bold, label=""];
53->58 [style = dotted, label="true"];
33->14 [style = dotted, label="true"];
60->57 [style = solid, label="min"];
60->56 [style = solid, label="min"];
14->51 [style = dotted, label="true"];
28->14 [style = bold, label=""];
21->28 [style = bold, label=""];
43->17 [style = solid, label="q2"];
46->49 [style = solid, label="max"];
24->30 [style = bold, label=""];
29->18 [style = bold, label=""];
8->1 [style = bold, label=""];
67->72 [style = dotted, label="true"];
62->56 [style = solid, label="max"];
12->2 [style = bold, label=""];
14->47 [style = dotted, label="true"];
28->21 [style = bold, label=""];
36->0 [style = bold, label=""];
14->8 [style = solid, label="min"];
33->35 [style = dotted, label="true"];
10->51 [style = dashed, label="0"];
75->62 [style = dotted, label="true"];
37->38 [style = bold, label=""];
61->56 [style = solid, label="includeMax"];
0->34 [style = dotted, label="true"];
72->49 [style = solid, label="min"];
4->39 [style = solid, label="maxValuesPerDoc"];
33->2 [style = dotted, label="true"];
62->49 [style = bold, label=""];
52->74 [style = bold, label=""];
14->57 [style = dotted, label="true"];
45->42 [style = dotted, label="true"];
60->72 [style = solid, label="min"];
11->37 [style = solid, label="value"];
0->40 [style = bold, label=""];
48->39 [style = solid, label="maxValuesPerDoc"];
20->13 [style = dotted, label="true"];
30->39 [style = dotted, label="true"];
54->3 [style = bold, label=""];
0->11 [style = dotted, label="true"];
34->37 [style = dotted, label="true"];
17->21 [style = bold, label=""];
49->59 [style = solid, label="q1"];
7->28 [style = solid, label="i"];
51->68 [style = dotted, label="false"];
59->26 [style = bold, label=""];
66->68 [style = solid, label="includeMin"];
56->59 [style = solid, label="q2"];
0->38 [style = dotted, label="true"];
5->29 [style = bold, label=""];
49->64 [style = bold, label=""];
28->10 [style = dotted, label="true"];
28->5 [style = bold, label=""];
28->8 [style = dotted, label="true"];
47->68 [style = solid, label="includeMax"];
27->0 [style = bold, label=""];
22->43 [style = dashed, label="0"];
10->43 [style = dotted, label="true"];
14->9 [style = solid, label="min"];
14->59 [style = dotted, label="true"];
26->14 [style = bold, label=""];
30->19 [style = dotted, label="true"];
9->17 [style = bold, label=""];
12->2 [style = solid, label="dir"];
14->60 [style = bold, label=""];
71->56 [style = solid, label="encodedMax"];
44->17 [style = solid, label="q2"];
20->3 [style = bold, label=""];
69->58 [style = solid, label="encoded"];
34->25 [style = dotted, label="false"];
71->68 [style = solid, label="encodedMax"];
41->10 [style = solid, label="sortedNumeric"];
75->61 [style = bold, label=""];
28->17 [style = dotted, label="true"];
51->56 [style = dotted, label="true"];
44->17 [style = bold, label=""];
72->56 [style = solid, label="min"];
35->30 [style = solid, label="numDocs"];
3->23 [style = bold, label=""];
31->40 [style = solid, label="doc"];
10->44 [style = bold, label=""];
16->33 [style = bold, label=""];
33->18 [style = dotted, label="true"];
22->17 [style = bold, label=""];
14->52 [style = bold, label=""];
76->53 [style = bold, label=""];
0->20 [style = bold, label=""];
10->9 [style = dotted, label="false"];
14->64 [style = dotted, label="true"];
23->7 [style = bold, label=""];
57->65 [style = bold, label=""];
26->46 [style = dashed, label="0"];
20->19 [style = bold, label=""];
3->6 [style = solid, label="reader"];
14->71 [style = dotted, label="true"];
46->62 [style = solid, label="max"];
0->53 [style = dotted, label="true"];
25->38 [style = bold, label=""];
69->76 [style = solid, label="encoded"];
71->65 [style = solid, label="encodedMax"];
41->34 [style = solid, label="sortedNumeric"];
20->13 [style = bold, label=""];
67->75 [style = bold, label=""];
14->22 [style = solid, label="min"];
45->15 [style = bold, label=""];
10->43 [style = bold, label=""];
67->66 [style = bold, label=""];
33->6 [style = dotted, label="true"];
32->4 [style = dotted, label="true"];
33->52 [style = dotted, label="true"];
14->67 [style = dotted, label="true"];
72->75 [style = bold, label=""];
33->12 [style = dotted, label="true"];
6->23 [style = bold, label=""];
9->68 [style = dashed, label="0"];
46->56 [style = solid, label="max"];
26->43 [style = solid, label="max"];
55->56 [style = solid, label="encodedMin"];
16->33 [style = solid, label="iter"];
18->33 [style = bold, label=""];
55->71 [style = bold, label=""];
40->19 [style = bold, label=""];
55->68 [style = solid, label="encodedMin"];
72->68 [style = solid, label="min"];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
14->43 [style = solid, label="min"];
26->8 [style = bold, label=""];
26->22 [style = solid, label="max"];
7->59 [style = solid, label="searcher"];
60->68 [style = solid, label="min"];
33->12 [style = bold, label=""];
28->1 [style = dotted, label="true"];
45->41 [style = dotted, label="true"];
67->66 [style = dotted, label="true"];
41->73 [style = dashed, label="0"];
35->24 [style = bold, label=""];
53->50 [style = bold, label=""];
68->59 [style = solid, label="q2"];
43->17 [style = bold, label=""];
53->50 [style = dotted, label="false"];
14->60 [style = dotted, label="true"];
33->54 [style = dotted, label="true"];
33->21 [style = dotted, label="true"];
11->40 [style = solid, label="value"];
23->7 [style = solid, label="reader"];
7->28 [style = bold, label=""];
21->14 [style = solid, label="i"];
40->36 [style = bold, label=""];
9->44 [style = dashed, label="0"];
30->31 [style = bold, label=""];
30->20 [style = dotted, label="true"];
63->48 [style = dotted, label="true"];
14->75 [style = dotted, label="true"];
11->76 [style = solid, label="value"];
70->47 [style = bold, label=""];
22->56 [style = dashed, label="0"];
30->54 [style = bold, label=""];
33->29 [style = dotted, label="true"];
33->24 [style = dotted, label="true"];
10->9 [style = bold, label=""];
75->49 [style = bold, label=""];
31->39 [style = bold, label=""];
33->74 [style = dotted, label="true"];
14->65 [style = dotted, label="true"];
22->17 [style = solid, label="q2"];
14->49 [style = dotted, label="true"];
6->17 [style = solid, label="searcher"];
56->59 [style = bold, label=""];
25->50 [style = dashed, label="0"];
62->49 [style = solid, label="max"];
61->62 [style = bold, label=""];
54->23 [style = bold, label=""];
30->31 [style = dotted, label="true"];
21->14 [style = bold, label=""];
46->55 [style = bold, label=""];
33->7 [style = dotted, label="true"];
10->22 [style = bold, label=""];
0->40 [style = dotted, label="true"];
34->25 [style = bold, label=""];
32->41 [style = dotted, label="true"];
65->70 [style = bold, label=""];
0->76 [style = dotted, label="true"];
30->27 [style = dotted, label="true"];
73->51 [style = solid, label="sortedSet"];
46->65 [style = solid, label="max"];
27->0 [style = solid, label="j"];
51->68 [style = bold, label=""];
31->20 [style = solid, label="doc"];
73->53 [style = solid, label="sortedSet"];
47->56 [style = solid, label="includeMax"];
61->68 [style = solid, label="includeMax"];
38->36 [style = bold, label=""];
58->40 [style = bold, label=""];
51->56 [style = bold, label=""];
60->49 [style = solid, label="min"];
0->69 [style = dotted, label="true"];
39->27 [style = bold, label=""];
24->30 [style = solid, label="i"];
15->16 [style = bold, label=""];
42->34 [style = solid, label="sortedNumeric"];
54->3 [style = dotted, label="true"];
60->46 [style = bold, label=""];
33->30 [style = dotted, label="true"];
30->40 [style = dotted, label="true"];
63->73 [style = dotted, label="true"];
0->36 [style = dotted, label="true"];
33->20 [style = dotted, label="true"];
14->26 [style = bold, label=""];
14->60 [style = dashed, label="0"];
74->18 [style = bold, label=""];
71->57 [style = bold, label=""];
33->23 [style = dotted, label="true"];
15->33 [style = solid, label="iters"];
70->68 [style = solid, label="includeMin"];
11->34 [style = bold, label=""];
42->10 [style = solid, label="sortedNumeric"];
14->46 [style = dotted, label="true"];
13->3 [style = bold, label=""];
34->37 [style = bold, label=""];
75->61 [style = dotted, label="true"];
46->68 [style = solid, label="max"];
70->56 [style = solid, label="includeMin"];
14->44 [style = solid, label="min"];
28->26 [style = dotted, label="true"];
50->40 [style = bold, label=""];
33->5 [style = dotted, label="true"];
68->59 [style = bold, label=""];
14->55 [style = dotted, label="true"];
32->15 [style = bold, label=""];
26->9 [style = solid, label="max"];
66->72 [style = bold, label=""];
10->22 [style = dotted, label="true"];
47->67 [style = bold, label=""];
55->57 [style = solid, label="encodedMin"];
62->68 [style = solid, label="max"];
11->25 [style = solid, label="value"];
1->10 [style = bold, label=""];
26->44 [style = solid, label="max"];
11->38 [style = solid, label="value"];
26->8 [style = solid, label="max"];
69->50 [style = solid, label="encoded"];
19->30 [style = bold, label=""];
14->70 [style = dotted, label="true"];
}
