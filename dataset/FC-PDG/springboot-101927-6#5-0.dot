digraph {
17 [style = filled, label = "notIncludeTrace['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(attributes.get(\"message\")).isEqualTo(\"\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "extractBindingResultErrorsExcludeMessageAndErrors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> attributes = this.errorAttributes.getErrorAttributes(buildServerRequest(request,ex),ErrorAttributeOptions.defaults())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Method method = getClass().getDeclaredMethod(\"method\",)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MockServerHttpRequest request = MockServerHttpRequest.get(\"/test\").build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "extractBindingResultErrorsExcludeMessageAndErrors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "bindingResult.addError(new ObjectError(\"c\",\"d\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(attributes).doesNotContainKey(\"errors\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "RuntimeException ex = new RuntimeException(\"Test\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MockServerHttpRequest request = MockServerHttpRequest.get(\"/test\").build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(attributes.get(\"trace\")).isNull()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(attributes).containsEntry(\"message\",\"\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "BindingResult bindingResult = new MapBindingResult(Collections.singletonMap(\"a\",\"b\"),\"objectName\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MethodParameter stringParam = new MethodParameter(method,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,Object> attributes = this.errorAttributes.getErrorAttributes(buildServerRequest(request,ex),ErrorAttributeOptions.defaults())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Exception ex = new WebExchangeBindException(stringParam,bindingResult)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(attributes.containsKey(\"errors\")).isFalse()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->16 [style = bold, label=""];
6->3 [style = bold, label=""];
15->13 [style = bold, label=""];
3->1 [style = bold, label=""];
5->0 [style = solid, label="method"];
4->6 [style = bold, label=""];
12->11 [style = bold, label=""];
7->11 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
2->16 [style = dashed, label="0"];
0->8 [style = bold, label=""];
17->15 [style = bold, label=""];
1->12 [style = bold, label=""];
9->5 [style = bold, label=""];
1->2 [style = bold, label=""];
15->14 [style = solid, label="ex"];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
6->1 [style = solid, label="ex"];
8->6 [style = solid, label="bindingResult"];
13->14 [style = bold, label=""];
3->1 [style = solid, label="request"];
13->14 [style = solid, label="request"];
0->6 [style = solid, label="stringParam"];
}
