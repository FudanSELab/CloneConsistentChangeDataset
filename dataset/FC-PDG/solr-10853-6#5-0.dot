digraph {
45 [style = filled, label = "Exception e@@@64@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "commit()@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "commit()@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertOrder(tuples,0,2,1,3,4)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map paramsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testMergeStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultiComp(new StreamComparator(\"a_f\",ComparatorOrder.ASCENDING),new StreamComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "List<Tuple> tuples = getTuples(mstream)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "throw new Exception(\"Sorts did not match up and Exception was not not thrown.\")@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,\"collection1\",params)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tuples = getTuples(mstream)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "indexr(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assert(tuples.size() == 5)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "testUniqueStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "streamFactory.withCollectionZkHost(\"collection1\",zkHost)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Exception e@@@51@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assert(tuples.size() == 5)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tuples = getTuples(mstream)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "commit()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "indexr(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertOrder(tuples,2,0,1,3,4)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new StreamEqualitor(\"a_f\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "tuples = getTuples(mstream)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "indexr(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new StreamComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "!e.getMessage().equals(\"Invalid MergeStream - both substream comparators (sort) must be a superset of this stream's comparator.\")@@@65@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "assert(tuples.size() == 4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assert(tuples.size() == 5)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f desc,a_i desc\")@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "indexr(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "throw e@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "throw new Exception(\"Sorts did not match up and Exception was not not thrown.\")@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "del(\"*:*\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new StreamComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "Map paramsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "del(\"*:*\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultiComp(new StreamComparator(\"a_f\",ComparatorOrder.ASCENDING),new StreamComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "indexr(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertOrder(tuples,0,1,2,3,4)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "throw e@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assert(tuples.size() == 5)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertOrder(tuples,4,3,2,1,0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "!e.getMessage().equals(\"Invalid MergeStream - both substream comparators (sort) must be a superset of this stream's comparator.\")@@@52@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testMergeStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Map params = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String zkHost = zkServer.getZkAddress()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->42 [style = solid, label="streamA"];
66->69 [style = solid, label="stream"];
74->72 [style = bold, label=""];
3->13 [style = solid, label="zkHost"];
13->62 [style = solid, label="streamB"];
68->66 [style = bold, label=""];
30->9 [style = solid, label="tuples"];
18->46 [style = solid, label="streamA"];
71->67 [style = bold, label=""];
8->36 [style = bold, label=""];
3->52 [style = solid, label="zkHost"];
68->66 [style = solid, label="params"];
65->50 [style = bold, label=""];
45->43 [style = bold, label=""];
38->49 [style = bold, label=""];
17->14 [style = bold, label=""];
15->0 [style = bold, label=""];
3->7 [style = solid, label="zkHost"];
2->25 [style = solid, label="streamB"];
8->47 [style = bold, label=""];
47->64 [style = solid, label="paramsA"];
40->24 [style = bold, label=""];
3->11 [style = solid, label="zkHost"];
2->25 [style = bold, label=""];
45->43 [style = dotted, label="true"];
59->54 [style = bold, label=""];
0->3 [style = bold, label=""];
22->56 [style = solid, label="streamA"];
47->64 [style = bold, label=""];
49->12 [style = bold, label=""];
22->33 [style = bold, label=""];
25->28 [style = bold, label=""];
21->68 [style = dashed, label="0"];
13->42 [style = solid, label="streamB"];
38->29 [style = solid, label="streamB"];
36->41 [style = bold, label=""];
54->61 [style = solid, label="streamB"];
57->55 [style = bold, label=""];
62->30 [style = bold, label=""];
25->28 [style = solid, label="mstream"];
39->8 [style = bold, label=""];
52->58 [style = solid, label="streamB"];
29->12 [style = solid, label="mstream"];
66->69 [style = bold, label=""];
19->22 [style = solid, label="paramsA"];
3->66 [style = solid, label="zkHost"];
52->58 [style = bold, label=""];
18->20 [style = bold, label=""];
7->68 [style = bold, label=""];
3->7 [style = bold, label=""];
21->11 [style = bold, label=""];
14->23 [style = solid, label="mstream"];
28->10 [style = solid, label="tuples"];
3->18 [style = solid, label="zkHost"];
6->31 [style = solid, label="paramsA"];
56->23 [style = bold, label=""];
26->37 [style = bold, label=""];
50->53 [style = solid, label="paramsA"];
54->61 [style = bold, label=""];
27->18 [style = solid, label="paramsA"];
19->22 [style = bold, label=""];
59->54 [style = solid, label="paramsB"];
3->64 [style = solid, label="zkHost"];
42->62 [style = dashed, label="0"];
27->18 [style = bold, label=""];
64->44 [style = bold, label=""];
23->5 [style = bold, label=""];
13->42 [style = bold, label=""];
46->28 [style = bold, label=""];
14->56 [style = dashed, label="0"];
3->54 [style = solid, label="zkHost"];
13->62 [style = bold, label=""];
31->32 [style = bold, label=""];
63->26 [style = bold, label=""];
22->14 [style = solid, label="streamA"];
43->36 [style = bold, label=""];
69->71 [style = solid, label="ustream"];
10->6 [style = bold, label=""];
1->9 [style = bold, label=""];
31->49 [style = solid, label="streamA"];
42->30 [style = solid, label="mstream"];
14->23 [style = bold, label=""];
73->26 [style = bold, label=""];
43->48 [style = dotted, label="true"];
3->38 [style = solid, label="zkHost"];
5->4 [style = bold, label=""];
60->36 [style = bold, label=""];
20->2 [style = solid, label="paramsB"];
31->29 [style = solid, label="streamA"];
49->12 [style = solid, label="mstream"];
25->46 [style = dashed, label="0"];
9->19 [style = bold, label=""];
21->11 [style = solid, label="paramsA"];
64->58 [style = solid, label="streamA"];
55->50 [style = bold, label=""];
18->25 [style = solid, label="streamA"];
51->57 [style = bold, label=""];
12->39 [style = bold, label=""];
38->49 [style = solid, label="streamB"];
35->26 [style = bold, label=""];
58->65 [style = bold, label=""];
34->13 [style = solid, label="paramsB"];
44->52 [style = solid, label="paramsB"];
33->17 [style = bold, label=""];
24->15 [style = bold, label=""];
3->17 [style = solid, label="zkHost"];
2->46 [style = bold, label=""];
11->62 [style = solid, label="streamA"];
61->60 [style = bold, label=""];
56->23 [style = solid, label="mstream"];
30->1 [style = bold, label=""];
48->36 [style = bold, label=""];
57->50 [style = bold, label=""];
16->10 [style = bold, label=""];
72->70 [style = bold, label=""];
32->38 [style = solid, label="paramsB"];
38->29 [style = bold, label=""];
43->48 [style = bold, label=""];
34->13 [style = bold, label=""];
67->74 [style = bold, label=""];
3->31 [style = solid, label="zkHost"];
33->17 [style = solid, label="paramsB"];
71->74 [style = solid, label="tuples"];
28->16 [style = bold, label=""];
17->14 [style = solid, label="streamB"];
3->22 [style = solid, label="zkHost"];
23->4 [style = solid, label="tuples"];
20->2 [style = bold, label=""];
57->55 [style = dotted, label="true"];
2->46 [style = solid, label="streamB"];
32->38 [style = bold, label=""];
3->2 [style = solid, label="zkHost"];
62->30 [style = solid, label="mstream"];
29->12 [style = bold, label=""];
11->34 [style = bold, label=""];
6->31 [style = bold, label=""];
69->71 [style = bold, label=""];
53->59 [style = bold, label=""];
42->30 [style = bold, label=""];
12->8 [style = solid, label="tuples"];
4->27 [style = bold, label=""];
44->52 [style = bold, label=""];
7->21 [style = bold, label=""];
29->49 [style = dashed, label="0"];
53->61 [style = solid, label="streamA"];
17->56 [style = bold, label=""];
11->66 [style = dashed, label="0"];
3->53 [style = solid, label="zkHost"];
51->57 [style = dotted, label="true"];
46->28 [style = solid, label="mstream"];
50->53 [style = bold, label=""];
37->40 [style = bold, label=""];
17->56 [style = solid, label="streamB"];
}
