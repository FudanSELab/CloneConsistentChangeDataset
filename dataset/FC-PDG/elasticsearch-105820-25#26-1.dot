digraph {
23 [style = filled, label = "assertEquals(84,searchResponse.getHits().getAt(0).docId())@@@51@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(searchResponse)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(\"fetch\",phase.getName())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "queryResult.size(resultSetSize)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(ctx1,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "queryResult.setShardIndex(1)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SearchResponse searchResponse = mockSearchPhaseContext.searchResponse.get()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,ClusterState.EMPTY_STATE,null)@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(2,searchResponse.getHits().getTotalHits().value)@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.contextId().equals(ctx2)) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123c6d8,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{fail(\"requestID 123 should not be fetched but was\")}listener.onResponse(fetchResult)}}@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final SearchContextId ctx2 = new SearchContextId(UUIDs.randomBase64UUID(),312)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertEquals(42,searchResponse.getHits().getAt(1).docId())@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123c4e1),2.0F),new DocValueFormat(((()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,ClusterState.EMPTY_STATE,null)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "queryResult.setShardIndex(0)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(ctx1))@@@55@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "queryResult.size(resultSetSize)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "queryResult.setShardIndex(0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFetchTwoDocument['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ArraySearchPhaseResults<SearchPhaseResult> results = controller.newSearchPhaseResults(NOOP,mockSearchPhaseContext.getRequest(),2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@63@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "SearchContextId ctx2 = new SearchContextId(UUIDs.randomBase64UUID(),321)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "results.consumeResult(queryResult)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int resultSetSize = randomIntBetween(2,10)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(2,searchResponse.getHits().getTotalHits().value)@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123c696),2.0F),new DocValueFormat(((()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "results.consumeResult(queryResult,null)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "results.consumeResult(queryResult)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,searchResponse.getFailedShards())@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "testCleanupIrrelevantContexts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(84,searchResponse.getHits().getAt(0).docId())@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123c650),2.0F),new DocValueFormat(((()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,searchResponse.getFailedShards())@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNotNull(searchResponse)@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(ctx1,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "testFetchTwoDocument['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.contextId().equals(ctx2)) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123c56b,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{assertEquals(ctx1,request.contextId())fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@123c588,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0F))}listener.onResponse(fetchResult)}}@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "SearchContextId ctx1 = new SearchContextId(UUIDs.randomBase64UUID(),123)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SearchContextId ctx1 = new SearchContextId(UUIDs.randomBase64UUID(),123)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SearchPhaseController controller = new SearchPhaseController(writableRegistry(),null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "phase.run()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "int resultSetSize = 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "phase.run()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "queryResult.size(resultSetSize)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "ArraySearchPhaseResults<SearchPhaseResult> results = controller.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),NOOP,mockSearchPhaseContext.getRequest(),2,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(1,searchResponse.getHits().getHits().length)@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "results.consumeResult(queryResult,null)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "SearchResponse searchResponse = mockSearchPhaseContext.searchResponse.get()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "queryResult.setShardIndex(1)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "queryResult = new QuerySearchResult(ctx2,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
31->37 [style = bold, label=""];
53->9 [style = solid, label="resultSetSize"];
49->22 [style = solid, label="ctx2"];
15->10 [style = bold, label=""];
1->24 [style = solid, label="queryResult"];
6->22 [style = bold, label=""];
15->25 [style = bold, label=""];
39->9 [style = bold, label=""];
48->4 [style = bold, label=""];
51->1 [style = bold, label=""];
12->3 [style = solid, label="controller"];
12->7 [style = bold, label=""];
0->15 [style = bold, label=""];
28->14 [style = bold, label=""];
49->22 [style = bold, label=""];
51->1 [style = solid, label="ctx1"];
8->1 [style = bold, label=""];
24->49 [style = bold, label=""];
36->24 [style = bold, label=""];
19->9 [style = bold, label=""];
8->51 [style = dashed, label="0"];
12->47 [style = solid, label="controller"];
7->35 [style = dashed, label="0"];
27->17 [style = bold, label=""];
25->10 [style = bold, label=""];
49->18 [style = solid, label="ctx2"];
14->20 [style = bold, label=""];
7->29 [style = bold, label=""];
1->43 [style = solid, label="resultSetSize"];
45->41 [style = bold, label=""];
7->2 [style = solid, label="results"];
41->32 [style = bold, label=""];
29->9 [style = solid, label="resultSetSize"];
51->10 [style = solid, label="ctx1"];
1->24 [style = solid, label="resultSetSize"];
29->16 [style = solid, label="resultSetSize"];
54->46 [style = bold, label=""];
7->47 [style = solid, label="results"];
12->35 [style = bold, label=""];
8->18 [style = solid, label="ctx1"];
6->49 [style = dashed, label="0"];
20->23 [style = bold, label=""];
44->4 [style = bold, label=""];
47->54 [style = bold, label=""];
40->3 [style = bold, label=""];
39->9 [style = solid, label="ctx2"];
42->34 [style = solid, label="queryResult"];
33->30 [style = bold, label=""];
12->2 [style = solid, label="controller"];
24->34 [style = dashed, label="0"];
21->4 [style = bold, label=""];
5->40 [style = solid, label="ctx1"];
8->1 [style = solid, label="ctx1"];
5->42 [style = solid, label="ctx1"];
27->43 [style = bold, label=""];
6->34 [style = bold, label=""];
18->47 [style = bold, label=""];
22->19 [style = bold, label=""];
4->47 [style = solid, label="mockSearchPhaseContext"];
2->3 [style = bold, label=""];
35->3 [style = solid, label="results"];
26->15 [style = dashed, label="0"];
22->17 [style = solid, label="queryResult"];
11->24 [style = bold, label=""];
23->0 [style = bold, label=""];
53->16 [style = solid, label="resultSetSize"];
4->2 [style = solid, label="mockSearchPhaseContext"];
32->33 [style = bold, label=""];
9->27 [style = bold, label=""];
5->16 [style = bold, label=""];
3->28 [style = bold, label=""];
35->1 [style = bold, label=""];
10->13 [style = bold, label=""];
13->26 [style = bold, label=""];
34->39 [style = bold, label=""];
3->28 [style = solid, label="searchResponse"];
4->12 [style = bold, label=""];
50->15 [style = bold, label=""];
9->37 [style = solid, label="queryResult"];
20->23 [style = solid, label="searchResponse"];
29->53 [style = dashed, label="0"];
43->31 [style = bold, label=""];
29->8 [style = bold, label=""];
30->38 [style = bold, label=""];
16->11 [style = bold, label=""];
53->51 [style = bold, label=""];
39->40 [style = solid, label="ctx2"];
3->15 [style = bold, label=""];
42->36 [style = bold, label=""];
18->2 [style = bold, label=""];
46->52 [style = bold, label=""];
0->50 [style = bold, label=""];
4->3 [style = solid, label="mockSearchPhaseContext"];
13->26 [style = solid, label="searchResponse"];
17->18 [style = bold, label=""];
52->3 [style = bold, label=""];
26->45 [style = bold, label=""];
17->37 [style = dashed, label="0"];
5->42 [style = bold, label=""];
24->6 [style = bold, label=""];
6->18 [style = solid, label="ctx2"];
37->40 [style = bold, label=""];
6->22 [style = solid, label="ctx2"];
7->53 [style = bold, label=""];
}
