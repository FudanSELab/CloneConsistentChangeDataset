digraph {
37 [style = filled, label = "StreamStateHandle state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "throw new IllegalArgumentException()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "operatorStateStream = operatorStateHandles@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "taskStateManager.setJobManagerTaskStateSnapshotsByCheckpointId(Collections.singletonMap(taskRestore.getRestoreCheckpointId(),taskRestore.getTaskStateSnapshot()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b616e8,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),new TestTaskStateManager(),mock(),mock(),checkpointResponder,new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),TestingClassLoaderLease.newBuilder().build(),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b61897,VoidPermanentBlobService.INSTANCE),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),Executors.directExecutor())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "StreamConfig streamConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "JobManagerTaskRestore taskRestore = new JobManagerTaskRestore(1L,stateSnapshot)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int mode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new StateObjectCollection<>(operatorStateBackend),new StateObjectCollection<>(operatorStateStream),new StateObjectCollection<>(keyedStateFromBackend),new StateObjectCollection<>(keyedStateFromStream))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Configuration taskConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mode@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),ExternalResourceInfoProvider.NO_EXTERNAL_RESOURCES,taskStateManager,mock(),mock(),mock(),new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),TestingClassLoaderLease.newBuilder().build(),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b617f1,VoidPermanentBlobService.INSTANCE),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestTaskStateManager taskStateManager = new TestTaskStateManager()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "StateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ShuffleEnvironment<?,?> shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStreamStateHandle(operatorStateMetadata,state))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "taskStateManager.setReportedCheckpointId(taskRestore.getRestoreCheckpointId())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "ShuffleEnvironment<?,?> shuffleEnvironment = new NettyShuffleEnvironmentBuilder().build()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int mode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),shuffleEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),taskStateManager,mock(),mock(),mock(),new NoOpTaskOperatorEventGateway(),new TestGlobalAggregateManager(),TestingClassLoaderLease.newBuilder().build(),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b61695,VoidPermanentBlobService.INSTANCE),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),new NoOpResultPartitionConsumableNotifier(),mock(),mock())@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21->50 [style = dashed, label="0"];
2->19 [style = solid, label="operatorStateHandles"];
14->24 [style = bold, label=""];
29->15 [style = bold, label=""];
16->0 [style = bold, label=""];
22->29 [style = solid, label="metaInfo"];
39->36 [style = dotted, label="true"];
5->17 [style = solid, label="mode"];
11->14 [style = bold, label=""];
6->22 [style = bold, label=""];
28->21 [style = dotted, label="true"];
32->12 [style = bold, label=""];
25->35 [style = solid, label="taskInformation"];
7->35 [style = bold, label=""];
9->25 [style = solid, label="taskConfig"];
21->4 [style = solid, label="state"];
44->53 [style = bold, label=""];
27->23 [style = solid, label="jobInformation"];
47->49 [style = bold, label=""];
30->11 [style = bold, label=""];
1->33 [style = bold, label=""];
8->20 [style = bold, label=""];
13->12 [style = solid, label="keyedStateFromBackend"];
38->25 [style = solid, label="taskConfig"];
45->53 [style = solid, label="backend"];
17->34 [style = dotted, label="true"];
51->40 [style = solid, label="executionConfig"];
24->27 [style = bold, label=""];
27->25 [style = bold, label=""];
49->52 [style = solid, label="taskConfig"];
32->12 [style = solid, label="operatorStateBackend"];
19->12 [style = bold, label=""];
26->1 [style = bold, label=""];
23->35 [style = dashed, label="0"];
37->4 [style = solid, label="state"];
27->35 [style = solid, label="jobInformation"];
49->41 [style = solid, label="taskConfig"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
17->34 [style = bold, label=""];
13->12 [style = bold, label=""];
19->12 [style = solid, label="operatorStateStream"];
7->23 [style = bold, label=""];
28->9 [style = dotted, label="true"];
18->23 [style = solid, label="taskStateManager"];
4->13 [style = solid, label="keyedStateHandles"];
42->43 [style = solid, label="shuffleEnvironment"];
46->44 [style = bold, label=""];
18->35 [style = solid, label="taskStateManager"];
33->12 [style = solid, label="operatorStateStream"];
39->16 [style = bold, label=""];
47->48 [style = dotted, label="true"];
52->46 [style = bold, label=""];
4->17 [style = bold, label=""];
28->3 [style = dotted, label="true"];
25->18 [style = bold, label=""];
22->29 [style = bold, label=""];
12->14 [style = solid, label="operatorSubtaskState"];
2->32 [style = solid, label="operatorStateHandles"];
50->46 [style = solid, label="op"];
31->12 [style = bold, label=""];
31->12 [style = solid, label="keyedStateFromStream"];
51->40 [style = bold, label=""];
39->37 [style = dotted, label="true"];
6->2 [style = solid, label="operatorStateMetadata"];
8->25 [style = solid, label="jobVertexID"];
1->12 [style = solid, label="operatorStateBackend"];
18->10 [style = bold, label=""];
20->14 [style = solid, label="operatorID"];
40->43 [style = solid, label="jobInformation"];
12->8 [style = bold, label=""];
47->50 [style = dotted, label="true"];
21->17 [style = solid, label="mode"];
17->19 [style = dotted, label="true"];
16->23 [style = solid, label="shuffleEnvironment"];
17->13 [style = bold, label=""];
41->43 [style = solid, label="taskInformation"];
20->30 [style = solid, label="operatorID"];
39->21 [style = dotted, label="true"];
15->2 [style = bold, label=""];
42->43 [style = bold, label=""];
0->26 [style = bold, label=""];
53->51 [style = bold, label=""];
21->2 [style = solid, label="state"];
33->6 [style = bold, label=""];
17->31 [style = bold, label=""];
39->38 [style = dotted, label="true"];
15->4 [style = solid, label="keyGroupRangeOffsets"];
0->12 [style = solid, label="keyedStateFromBackend"];
47->45 [style = dotted, label="true"];
17->32 [style = bold, label=""];
34->12 [style = bold, label=""];
17->32 [style = dotted, label="true"];
28->16 [style = bold, label=""];
17->19 [style = bold, label=""];
26->12 [style = solid, label="keyedStateFromStream"];
17->31 [style = dotted, label="true"];
28->5 [style = dotted, label="true"];
25->23 [style = solid, label="taskInformation"];
4->31 [style = solid, label="keyedStateHandles"];
49->52 [style = bold, label=""];
8->20 [style = solid, label="jobVertexID"];
40->41 [style = bold, label=""];
16->35 [style = solid, label="shuffleEnvironment"];
11->24 [style = solid, label="stateSnapshot"];
20->30 [style = bold, label=""];
17->13 [style = dotted, label="true"];
37->2 [style = solid, label="state"];
48->43 [style = solid, label="checkpointResponder"];
41->42 [style = bold, label=""];
}
