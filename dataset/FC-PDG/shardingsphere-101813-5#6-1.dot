digraph {
15 [style = filled, label = "schemaRefresher.refresh(metaData,Collections.emptyList(),dropIndexStatement,new ConfigurationProperties(new Properties()))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"t_order_index\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "dropIndexStatement.getIndexes().add(new IndexSegment(2,3,new IdentifierValue(\"t_order_index\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "dropIndexStatement.getIndexes().add(new IndexSegment(3,4,new IdentifierValue(\"order_id_index\")))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "actualIndex.put(\"order_id_index\",new IndexMetaData(\"order_id_index\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SchemaRefresher<DropTableStatement> schemaRefresher = new DropTableStatementSchemaRefresher()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertRemoveIndexes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final DropIndexStatement dropIndexStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "schemaRefresher.refresh(schema,Collections.emptyList(),dropIndexStatement,mock())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ShardingSphereSchema schema = ShardingSphereSchemaBuildUtil.buildSchema()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "actualIndex.put(\"t_order_index\",new IndexMetaData(\"t_order_index\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertRemoveIndexes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "SchemaRefresher<DropIndexStatement> schemaRefresher = new DropIndexStatementSchemaRefresher()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(schema.containsTable(\"t_order\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ShardingSphereMetaData metaData = new ShardingSphereMetaData(\"\",mock(),mock(),schema)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "dropIndexStatement.getIndexes().add(new IndexSegment(1,2,new IdentifierValue(\"index\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,IndexMetaData> actualIndex = schema.get(\"t_order\").getIndexes()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "schemaRefresher.refresh(schema,Collections.emptyList(),dropTableStatement,mock())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"index\"))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "refresh['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "dropTableStatement.getTables().add(new SimpleTableSegment(new TableNameSegment(1,3,new IdentifierValue(\"t_order\"))))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(schema.get(\"t_order\").getIndexes().containsKey(\"order_id_index\"))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "final DropTableStatement dropTableStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
10->0 [style = solid, label="dropIndexStatement"];
4->9 [style = bold, label=""];
16->13 [style = bold, label=""];
7->11 [style = bold, label=""];
10->21 [style = dashed, label="0"];
1->10 [style = dotted, label="true"];
2->20 [style = dashed, label="0"];
15->7 [style = bold, label=""];
22->19 [style = bold, label=""];
23->21 [style = dotted, label="true"];
6->0 [style = bold, label=""];
10->15 [style = solid, label="dropIndexStatement"];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
12->6 [style = bold, label=""];
1->13 [style = bold, label=""];
16->10 [style = dotted, label="true"];
20->22 [style = bold, label=""];
6->14 [style = bold, label=""];
13->0 [style = solid, label="schema"];
14->15 [style = solid, label="metaData"];
5->2 [style = bold, label=""];
18->20 [style = bold, label=""];
13->22 [style = solid, label="schema"];
13->14 [style = solid, label="schema"];
3->7 [style = bold, label=""];
23->13 [style = bold, label=""];
13->5 [style = bold, label=""];
11->17 [style = bold, label=""];
14->15 [style = bold, label=""];
8->12 [style = bold, label=""];
21->22 [style = solid, label="dropTableStatement"];
13->18 [style = bold, label=""];
}
