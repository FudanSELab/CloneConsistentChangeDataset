digraph {
62 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "driver.flushState()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int i = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "i < 2@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "driver.flushState()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i++@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "doTestJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "driver.flushState()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "i++@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "driver.flushState()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "processor.checkAndClearProcessResult()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c3a0a2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.flushState()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "int i = 0@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "getter.init(driver.context())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i < 2@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "processor.checkAndClearProcessResult(\"0:null\",\"1:null\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+YY0\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "driver.setTime(0L)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "i < 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "processor.checkAndClearProcessResult()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "driver.flushState()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@61@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"1:XX1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "int i = 0@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "driver.flushState()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "joined.process(processor)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27->38 [style = dashed, label="0"];
16->0 [style = bold, label=""];
68->10 [style = bold, label=""];
55->59 [style = solid, label="expectedKeys"];
30->13 [style = bold, label=""];
11->20 [style = dashed, label="0"];
81->52 [style = bold, label=""];
74->82 [style = bold, label=""];
52->16 [style = solid, label="getter"];
16->17 [style = dotted, label="true"];
27->15 [style = solid, label="builder"];
10->53 [style = bold, label=""];
28->9 [style = bold, label=""];
23->22 [style = solid, label="i"];
61->82 [style = solid, label="i"];
74->82 [style = dotted, label="true"];
67->71 [style = bold, label=""];
17->8 [style = solid, label="i"];
5->28 [style = bold, label=""];
57->51 [style = dotted, label="true"];
2->8 [style = solid, label="i"];
9->6 [style = bold, label=""];
67->80 [style = dotted, label="true"];
55->82 [style = solid, label="expectedKeys"];
52->47 [style = bold, label=""];
21->33 [style = solid, label="stream2"];
52->46 [style = solid, label="getter"];
31->35 [style = bold, label=""];
45->43 [style = bold, label=""];
34->2 [style = bold, label=""];
53->65 [style = bold, label=""];
65->16 [style = bold, label=""];
52->66 [style = solid, label="getter"];
69->72 [style = bold, label=""];
20->37 [style = bold, label=""];
52->48 [style = solid, label="getter"];
26->61 [style = bold, label=""];
23->36 [style = bold, label=""];
5->28 [style = solid, label="i"];
13->31 [style = bold, label=""];
8->11 [style = dashed, label="0"];
50->54 [style = bold, label=""];
32->20 [style = bold, label=""];
73->60 [style = bold, label=""];
17->16 [style = bold, label=""];
10->11 [style = bold, label=""];
2->16 [style = bold, label=""];
23->62 [style = bold, label=""];
61->74 [style = bold, label=""];
6->36 [style = solid, label="i"];
19->18 [style = bold, label=""];
28->5 [style = bold, label=""];
64->11 [style = solid, label="i"];
33->3 [style = bold, label=""];
1->41 [style = bold, label=""];
66->78 [style = bold, label=""];
38->19 [style = solid, label="builder"];
52->23 [style = solid, label="getter"];
61->74 [style = solid, label="i"];
1->24 [style = solid, label="expectedKeys"];
54->66 [style = bold, label=""];
39->45 [style = bold, label=""];
57->63 [style = dotted, label="true"];
75->64 [style = bold, label=""];
22->23 [style = bold, label=""];
35->21 [style = bold, label=""];
44->38 [style = bold, label=""];
25->41 [style = dashed, label="0"];
24->5 [style = bold, label=""];
20->76 [style = dashed, label="0"];
49->73 [style = bold, label=""];
83->67 [style = solid, label="i"];
31->3 [style = solid, label="processor"];
61->4 [style = solid, label="i"];
8->17 [style = bold, label=""];
67->59 [style = dotted, label="true"];
30->45 [style = dashed, label="0"];
29->27 [style = bold, label=""];
10->68 [style = dotted, label="true"];
64->10 [style = bold, label=""];
28->24 [style = dotted, label="true"];
18->4 [style = bold, label=""];
40->3 [style = bold, label=""];
71->14 [style = bold, label=""];
21->40 [style = solid, label="stream2"];
28->24 [style = bold, label=""];
56->75 [style = bold, label=""];
5->24 [style = solid, label="i"];
46->20 [style = bold, label=""];
6->22 [style = solid, label="i"];
64->10 [style = solid, label="i"];
83->67 [style = bold, label=""];
2->17 [style = solid, label="i"];
82->4 [style = bold, label=""];
68->10 [style = solid, label="i"];
57->70 [style = bold, label=""];
4->74 [style = solid, label="i"];
12->39 [style = dashed, label="0"];
59->80 [style = bold, label=""];
16->8 [style = dotted, label="true"];
4->82 [style = solid, label="i"];
27->19 [style = solid, label="builder"];
13->43 [style = dashed, label="0"];
51->70 [style = solid, label="builder"];
15->14 [style = bold, label=""];
16->8 [style = bold, label=""];
52->75 [style = solid, label="getter"];
36->22 [style = dotted, label="true"];
57->77 [style = dotted, label="true"];
74->4 [style = dotted, label="true"];
78->79 [style = bold, label=""];
80->59 [style = solid, label="i"];
48->76 [style = bold, label=""];
4->74 [style = bold, label=""];
4->5 [style = solid, label="i"];
26->19 [style = bold, label=""];
3->42 [style = bold, label=""];
37->7 [style = bold, label=""];
38->1 [style = bold, label=""];
27->70 [style = dashed, label="0"];
42->14 [style = bold, label=""];
83->59 [style = solid, label="i"];
60->58 [style = bold, label=""];
52->79 [style = solid, label="getter"];
83->80 [style = solid, label="i"];
10->11 [style = dotted, label="true"];
5->24 [style = bold, label=""];
55->11 [style = solid, label="expectedKeys"];
64->68 [style = solid, label="i"];
80->67 [style = solid, label="i"];
80->67 [style = bold, label=""];
47->83 [style = bold, label=""];
8->50 [style = bold, label=""];
51->58 [style = solid, label="builder"];
74->28 [style = bold, label=""];
36->23 [style = dotted, label="true"];
62->69 [style = bold, label=""];
1->25 [style = bold, label=""];
70->49 [style = bold, label=""];
43->31 [style = bold, label=""];
27->1 [style = bold, label=""];
33->40 [style = dashed, label="0"];
6->23 [style = solid, label="i"];
72->46 [style = bold, label=""];
7->10 [style = bold, label=""];
21->33 [style = bold, label=""];
11->68 [style = bold, label=""];
36->32 [style = bold, label=""];
12->30 [style = bold, label=""];
1->22 [style = solid, label="expectedKeys"];
3->15 [style = bold, label=""];
76->6 [style = bold, label=""];
58->81 [style = bold, label=""];
6->36 [style = bold, label=""];
4->28 [style = solid, label="i"];
4->28 [style = bold, label=""];
1->8 [style = solid, label="expectedKeys"];
15->42 [style = dashed, label="0"];
4->24 [style = solid, label="i"];
57->55 [style = dotted, label="true"];
14->26 [style = bold, label=""];
28->5 [style = dotted, label="true"];
17->16 [style = solid, label="i"];
11->34 [style = bold, label=""];
36->23 [style = bold, label=""];
25->12 [style = bold, label=""];
38->42 [style = solid, label="builder"];
21->40 [style = bold, label=""];
41->39 [style = bold, label=""];
68->11 [style = solid, label="i"];
24->48 [style = bold, label=""];
2->16 [style = solid, label="i"];
23->36 [style = solid, label="i"];
67->59 [style = bold, label=""];
37->56 [style = bold, label=""];
36->22 [style = bold, label=""];
}
