digraph {
5 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(VarianceTestHelper.indexVarianceAggr).setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr)).setGranularity(QueryRunnerTestHelper.dayGran).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testGroupByVarianceOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"\")@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Row> expectedResults = builder.add(\"2011-04-01\",\"automotive\",0d,0d).add(\"2011-04-01\",\"business\",0d,0d).add(\"2011-04-01\",\"entertainment\",0d,0d).add(\"2011-04-01\",\"health\",0d,0d).add(\"2011-04-01\",\"mezzanine\",737.0179286322613d,543195.4271253889d).add(\"2011-04-01\",\"news\",0d,0d).add(\"2011-04-01\",\"premium\",726.6322593583996d,527994.4403402924d).add(\"2011-04-01\",\"technology\",0d,0d).add(\"2011-04-01\",\"travel\",0d,0d).add(\"2011-04-02\",\"automotive\",0d,0d).add(\"2011-04-02\",\"business\",0d,0d).add(\"2011-04-02\",\"entertainment\",0d,0d).add(\"2011-04-02\",\"health\",0d,0d).add(\"2011-04-02\",\"mezzanine\",611.3420766546617d,373739.13468843425d).add(\"2011-04-02\",\"news\",0d,0d).add(\"2011-04-02\",\"premium\",621.3898134843073d,386125.30030206224d).add(\"2011-04-02\",\"technology\",0d,0d).add(\"2011-04-02\",\"travel\",0d,0d).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Row> expectedResults = builder.add(\"2011-04-01\",\"automotive\",1L,135L,0d,0d).add(\"2011-04-01\",\"business\",1L,118L,0d,0d).add(\"2011-04-01\",\"entertainment\",1L,158L,0d,0d).add(\"2011-04-01\",\"health\",1L,120L,0d,0d).add(\"2011-04-01\",\"mezzanine\",3L,2870L,737.0179286322613d,543195.4271253889d).add(\"2011-04-01\",\"news\",1L,121L,0d,0d).add(\"2011-04-01\",\"premium\",3L,2900L,726.6322593583996d,527994.4403402924d).add(\"2011-04-01\",\"technology\",1L,78L,0d,0d).add(\"2011-04-01\",\"travel\",1L,119L,0d,0d).add(\"2011-04-02\",\"automotive\",1L,147L,0d,0d).add(\"2011-04-02\",\"business\",1L,112L,0d,0d).add(\"2011-04-02\",\"entertainment\",1L,166L,0d,0d).add(\"2011-04-02\",\"health\",1L,113L,0d,0d).add(\"2011-04-02\",\"mezzanine\",3L,2447L,611.3420766546617d,373739.13468843425d).add(\"2011-04-02\",\"news\",1L,114L,0d,0d).add(\"2011-04-02\",\"premium\",3L,2505L,621.3898134843073d,386125.30030206224d).add(\"2011-04-02\",\"technology\",1L,97L,0d,0d).add(\"2011-04-02\",\"travel\",1L,126L,0d,0d).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "VarianceTestHelper.RowBuilder builder = new VarianceTestHelper.RowBuilder(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9a89a5)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "GroupByQuery query = GroupByQuery.builder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,VarianceTestHelper.indexVarianceAggr,new LongSumAggregatorFactory(\"idx\",\"index\")).setPostAggregatorSpecs(Collections.singletonList(VarianceTestHelper.stddevOfIndexPostAggr)).setGranularity(QueryRunnerTestHelper.dayGran).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"variance\")@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testGroupBy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testGroupByVarianceOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
5->1 [style = solid, label="query"];
5->10 [style = dashed, label="0"];
2->9 [style = bold, label=""];
3->6 [style = solid, label="expectedResults"];
10->1 [style = solid, label="query"];
4->6 [style = dashed, label="0"];
3->4 [style = solid, label="expectedResults"];
0->5 [style = bold, label=""];
9->4 [style = solid, label="expectedResults"];
10->2 [style = bold, label=""];
1->6 [style = solid, label="results"];
9->1 [style = bold, label=""];
1->6 [style = bold, label=""];
8->10 [style = bold, label=""];
3->1 [style = bold, label=""];
1->4 [style = solid, label="results"];
1->4 [style = bold, label=""];
2->3 [style = bold, label=""];
}
