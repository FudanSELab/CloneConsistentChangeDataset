digraph {
37 [style = filled, label = "Long flowExecutionId = 1234L@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(jobStatus.getFlowGroup(),FLOW_GROUP)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(jobStatus.getJobName(),nextExpectedJobName)@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(jobStatus.getHighWatermark(),\"\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testGetJobStatusesForFlowExecution['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testGetJobStatusesForFlowExecution1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Iterator<JobStatus> jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId,MY_JOB_NAME_1,MY_JOB_GROUP)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "JobStatus jobStatus = jobStatusIterator.next()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String jobName = jobStatus.getJobName()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Iterator<JobStatus> jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId,MY_JOB_NAME_1,myJobGroup)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(jobStatus.getJobName(),JobStatusRetriever.NA_KEY)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(jobStatus.getProcessedCount(),0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testGetJobStatusesForFlowExecution1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(jobStatus.getJobName().equals(MY_JOB_NAME_1) || jobStatus.getJobName().equals(MY_JOB_NAME_2))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "addJobStatusToStateStore(flowExecutionId,JobStatusRetriever.NA_KEY,ExecutionStatus.COMPILED.name())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(jobStatus.getLowWatermark(),\"\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(jobStatus.getEventName(),ExecutionStatus.COMPILED.name())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(jobStatus.getJobGroup(),MY_JOB_GROUP)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "addJobStatusToStateStore(flowExecutionId,MY_JOB_NAME_2,ExecutionStatus.RUNNING.name())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(jobStatus.getJobName(),MY_JOB_NAME_1)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(jobStatus.getMessage(),MESSAGE)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(jobStatus.getFlowName(),FLOW_NAME)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Iterator<JobStatus> jobStatusIterator = this.jobStatusRetriever.getJobStatusesForFlowExecution(FLOW_NAME,FLOW_GROUP,flowExecutionId)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(jobStatus.getJobExecutionId(),JOB_EXECUTION_ID)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String nextExpectedJobName = (MY_JOB_NAME_1.equals(jobName))? MY_JOB_NAME_2: MY_JOB_NAME_1@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(jobStatus.getFlowExecutionId(),flowExecutionId)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(jobStatus.getJobGroup(),jobGroup)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(jobStatus.getJobGroup(),JobStatusRetriever.NA_KEY)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(jobStatus.getEventName(),ExecutionStatus.RUNNING.name())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(jobStatusIterator.hasNext())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "addJobStatusToStateStore(flowExecutionId,MY_JOB_NAME_1,ExecutionStatus.RUNNING.name(),JOB_START_TIME,JOB_START_TIME)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "long flowExecutionId = 1234L@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertFalse(jobStatusIterator.hasNext())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "jobStatus = jobStatusIterator.next()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
27->36 [style = bold, label=""];
37->30 [style = solid, label="flowExecutionId"];
31->23 [style = bold, label=""];
21->19 [style = bold, label=""];
25->33 [style = bold, label=""];
1->14 [style = dashed, label="0"];
11->14 [style = bold, label=""];
11->1 [style = bold, label=""];
3->33 [style = dashed, label="0"];
36->29 [style = bold, label=""];
0->2 [style = bold, label=""];
37->33 [style = solid, label="flowExecutionId"];
26->16 [style = solid, label="jobName"];
10->3 [style = bold, label=""];
11->1 [style = solid, label="flowExecutionId"];
28->26 [style = bold, label=""];
6->0 [style = bold, label=""];
37->40 [style = solid, label="flowExecutionId"];
9->10 [style = bold, label=""];
12->9 [style = bold, label=""];
17->37 [style = bold, label=""];
2->4 [style = bold, label=""];
16->18 [style = solid, label="nextExpectedJobName"];
13->11 [style = bold, label=""];
22->30 [style = bold, label=""];
2->12 [style = bold, label=""];
4->12 [style = dashed, label="0"];
23->28 [style = bold, label=""];
26->16 [style = bold, label=""];
35->40 [style = bold, label=""];
37->22 [style = bold, label=""];
29->20 [style = bold, label=""];
3->5 [style = bold, label=""];
11->14 [style = solid, label="flowExecutionId"];
1->6 [style = bold, label=""];
24->21 [style = bold, label=""];
39->35 [style = bold, label=""];
37->22 [style = solid, label="flowExecutionId"];
4->34 [style = dashed, label="0"];
37->25 [style = solid, label="flowExecutionId"];
20->39 [style = bold, label=""];
5->31 [style = dashed, label="0"];
37->24 [style = solid, label="flowExecutionId"];
2->27 [style = bold, label=""];
5->7 [style = bold, label=""];
40->24 [style = bold, label=""];
38->25 [style = bold, label=""];
33->31 [style = bold, label=""];
11->37 [style = dashed, label="0"];
30->0 [style = bold, label=""];
19->4 [style = bold, label=""];
34->38 [style = bold, label=""];
32->18 [style = bold, label=""];
15->32 [style = bold, label=""];
8->11 [style = bold, label=""];
9->38 [style = dashed, label="0"];
14->6 [style = bold, label=""];
4->34 [style = bold, label=""];
11->5 [style = solid, label="flowExecutionId"];
}
