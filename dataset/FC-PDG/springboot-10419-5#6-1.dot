digraph {
3 [style = filled, label = "ExposableServletEndpoint servletEndpoint = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(links).hasEntrySatisfying(\"alpha\",linkWithHref(\"https://api.example.com/actuator/alpha\"))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,Link> links = new EndpointLinksResolver(Collections.singletonList(servletEndpoint)).resolveLinks(requestUrl)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(links).hasSize(2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(links).hasEntrySatisfying(\"self\",linkWithHref(\"https://api.example.com/actuator\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "resolvedLinksContainsALinkForServletEndpoint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String requestUrl = \"https://api.example.com/actuator\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "given(servletEndpoint.isEnableByDefault()).willReturn(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "given(controllerEndpoint.getRootPath()).willReturn(\"alpha\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<String,Link> links = new EndpointLinksResolver(Collections.singletonList(controllerEndpoint)).resolveLinks(requestUrl)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ExposableControllerEndpoint controllerEndpoint = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "given(controllerEndpoint.getEndpointId()).willReturn(EndpointId.of(\"alpha\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "given(controllerEndpoint.isEnableByDefault()).willReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "given(servletEndpoint.getRootPath()).willReturn(\"alpha\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "given(servletEndpoint.getEndpointId()).willReturn(EndpointId.of(\"alpha\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "resolvedLinksContainsALinkForControllerEndpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "resolvedLinksContainsALinkForServletEndpoint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->7 [style = solid, label="requestUrl"];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
2->3 [style = bold, label=""];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
1->7 [style = bold, label=""];
13->1 [style = bold, label=""];
1->12 [style = solid, label="requestUrl"];
7->5 [style = bold, label=""];
15->11 [style = bold, label=""];
6->15 [style = dashed, label="0"];
11->13 [style = bold, label=""];
6->8 [style = bold, label=""];
1->12 [style = bold, label=""];
7->12 [style = dashed, label="0"];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
3->14 [style = dashed, label="0"];
8->11 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
}
