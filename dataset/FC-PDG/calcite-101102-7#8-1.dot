digraph {
55 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final List<ImmutableBitSet> groupSets0 = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "{}@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets1))@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet0,groupSets),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "groupSets.clear()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "groupSets.clear()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(2(\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<ImmutableBitSet> groupSets1 = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet0,groupSets))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(5, 4, 2, 1(\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "groupSets = new ArrayList<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "groupSets = new ArrayList<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@79@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(1, 2, 4, 5(\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "IllegalArgumentException ignore@@@71@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "groupSets.clear()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ImmutableBitSet groupSet0 = ImmutableBitSet.of(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "groupSets.add(ImmutableBitSet.of(5))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4,5))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "groupSets.clear()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testInduceGroupingType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "{}@@@71@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets),is(true))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "groupSets.clear()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "groupSets.add(ImmutableBitSet.of(2,4,5))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "testInduceGroupingType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "groupSets.add(groupSet0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "fail(\"expected error, got \" + x)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets0),is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "groupSets.clear()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "groupSets.clear()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "groupSets.clear()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "groupSets.clear()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "groupSets.clear()@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "groupSets.add(groupSet)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "testInduceGroupingType1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "groupSets = new ArrayList<>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(4, 5, 1, 2(\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->41 [style = solid, label="groupSets"];
27->38 [style = bold, label=""];
5->68 [style = solid, label="groupSets"];
80->83 [style = solid, label="groupSet"];
88->83 [style = solid, label="groupSets"];
5->13 [style = solid, label="groupSets"];
5->55 [style = solid, label="groupSets"];
69->15 [style = bold, label=""];
5->20 [style = solid, label="groupSets"];
80->87 [style = solid, label="groupSet"];
53->54 [style = bold, label=""];
65->14 [style = bold, label=""];
58->73 [style = bold, label=""];
0->15 [style = bold, label=""];
69->55 [style = bold, label=""];
84->89 [style = bold, label=""];
6->24 [style = solid, label="groupSet"];
5->18 [style = solid, label="groupSets"];
5->88 [style = dashed, label="0"];
88->69 [style = bold, label=""];
44->23 [style = bold, label=""];
52->60 [style = bold, label=""];
6->13 [style = solid, label="groupSet"];
42->44 [style = bold, label=""];
23->33 [style = bold, label=""];
34->24 [style = bold, label=""];
62->42 [style = bold, label=""];
6->66 [style = solid, label="groupSet"];
80->79 [style = solid, label="groupSet"];
26->28 [style = bold, label=""];
41->58 [style = bold, label=""];
3->30 [style = bold, label=""];
83->86 [style = bold, label=""];
6->18 [style = solid, label="groupSet"];
63->79 [style = dashed, label="0"];
60->51 [style = bold, label=""];
7->11 [style = bold, label=""];
24->72 [style = bold, label=""];
45->63 [style = bold, label=""];
21->19 [style = bold, label=""];
16->56 [style = bold, label=""];
79->84 [style = bold, label=""];
9->32 [style = bold, label=""];
64->74 [style = bold, label=""];
14->10 [style = bold, label=""];
4->18 [style = bold, label=""];
76->3 [style = bold, label=""];
80->69 [style = solid, label="groupSet"];
19->2 [style = bold, label=""];
78->84 [style = solid, label="groupSets"];
33->27 [style = bold, label=""];
39->4 [style = bold, label=""];
74->12 [style = bold, label=""];
5->8 [style = solid, label="groupSets"];
68->83 [style = dashed, label="0"];
66->48 [style = bold, label=""];
18->50 [style = bold, label=""];
59->37 [style = solid, label="groupSets0"];
36->46 [style = bold, label=""];
71->36 [style = bold, label=""];
40->3 [style = bold, label=""];
55->7 [style = bold, label=""];
57->6 [style = bold, label=""];
9->84 [style = dashed, label="0"];
80->88 [style = bold, label=""];
54->59 [style = bold, label=""];
3->30 [style = solid, label="groupSets1"];
70->22 [style = bold, label=""];
6->1 [style = solid, label="groupSet"];
6->51 [style = solid, label="groupSet"];
6->8 [style = solid, label="groupSet"];
1->62 [style = bold, label=""];
32->17 [style = bold, label=""];
77->6 [style = bold, label=""];
2->43 [style = bold, label=""];
67->35 [style = bold, label=""];
85->80 [style = bold, label=""];
45->78 [style = dashed, label="0"];
81->87 [style = bold, label=""];
5->22 [style = solid, label="groupSets"];
11->68 [style = solid, label="groupSet0"];
75->40 [style = bold, label=""];
25->41 [style = bold, label=""];
86->87 [style = solid, label="groupSets"];
78->79 [style = bold, label=""];
6->20 [style = solid, label="groupSet"];
59->37 [style = bold, label=""];
68->53 [style = bold, label=""];
49->61 [style = bold, label=""];
72->3 [style = bold, label=""];
5->24 [style = solid, label="groupSets"];
37->66 [style = bold, label=""];
59->66 [style = solid, label="groupSets0"];
15->68 [style = bold, label=""];
29->65 [style = bold, label=""];
5->1 [style = solid, label="groupSets"];
46->70 [style = bold, label=""];
12->49 [style = bold, label=""];
6->5 [style = bold, label=""];
61->34 [style = bold, label=""];
6->80 [style = dashed, label="0"];
56->45 [style = bold, label=""];
11->53 [style = solid, label="groupSet0"];
6->41 [style = solid, label="groupSet"];
51->64 [style = bold, label=""];
89->82 [style = solid, label="groupSets"];
5->51 [style = solid, label="groupSets"];
80->82 [style = solid, label="groupSet"];
17->13 [style = bold, label=""];
38->8 [style = bold, label=""];
22->1 [style = bold, label=""];
31->39 [style = bold, label=""];
89->82 [style = bold, label=""];
75->76 [style = bold, label=""];
32->89 [style = dashed, label="0"];
87->78 [style = bold, label=""];
6->30 [style = solid, label="groupSet"];
43->31 [style = bold, label=""];
50->26 [style = bold, label=""];
11->0 [style = solid, label="groupSet0"];
6->56 [style = solid, label="groupSet"];
35->16 [style = bold, label=""];
63->9 [style = bold, label=""];
86->81 [style = bold, label=""];
28->67 [style = bold, label=""];
6->69 [style = solid, label="groupSet"];
6->37 [style = solid, label="groupSet"];
6->22 [style = solid, label="groupSet"];
30->25 [style = bold, label=""];
73->20 [style = bold, label=""];
5->3 [style = solid, label="groupSets"];
10->52 [style = bold, label=""];
47->71 [style = bold, label=""];
5->53 [style = solid, label="groupSets"];
13->29 [style = bold, label=""];
11->0 [style = bold, label=""];
6->55 [style = solid, label="groupSet"];
48->47 [style = bold, label=""];
5->69 [style = bold, label=""];
15->83 [style = bold, label=""];
24->72 [style = solid, label="x"];
8->21 [style = bold, label=""];
5->56 [style = solid, label="groupSets"];
80->84 [style = solid, label="groupSet"];
}
