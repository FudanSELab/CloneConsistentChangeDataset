digraph {
37 [style = filled, label = "estream = new ExceptionStream(stream)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "t0 = tuples.get(0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assert(t.getException().contains(\"sort param field can't be found: blah\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ReducerStream rstream = new ReducerStream(stream,new FieldEqualitor(\"a_s\"),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),5))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "t2 = tuples.get(2)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "maps1 = t1.getMaps(\"group\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "stream = new CloudSolrStream(zkHost,COLLECTION,paramsA)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "t1 = tuples.get(1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Map> maps2 = t2.getMaps(\"group\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ExceptionStream estream = new ExceptionStream(stream)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertMaps(maps0,9,1,2,0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,paramsA)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testReducerStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assert(t.EXCEPTION)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assert(tuples.size() == 3)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "maps2 = t2.getMaps(\"group\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testReducerStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assert(t.EOF)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Map> maps0 = t0.getMaps(\"group\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testExceptionStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "rstream = new ReducerStream(stream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING),new GroupOperation(new FieldComparator(\"a_f\",ComparatorOrder.DESCENDING),5))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertMaps(maps2,6,4)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<Tuple> tuples = getTuples(rstream)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assert(t.getException().contains(\"undefined field:\"))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "stream = new CloudSolrStream(zkHost,COLLECTION,paramsA)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "maps0 = t0.getMaps(\"group\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assert(t.EOF)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Tuple t2 = tuples.get(2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Tuple t = getTuple(estream)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Tuple t0 = tuples.get(0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertMaps(maps0,0,2,1,9)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertMaps(maps1,8,7,5,3)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<Map> maps1 = t1.getMaps(\"group\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertMaps(maps2,4,6)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s, a_i, a_f\",\"sort\",\"a_s asc , a_f asc\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "t = getTuple(estream)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Tuple t1 = tuples.get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assert(tuples.size() == 3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Map paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f,blah\",\"sort\",\"blah asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tuples = getTuples(rstream)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assert(t.EXCEPTION)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "paramsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f,score\",\"sort\",\"a_s asc\",\"qt\",\"/export\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertMaps(maps1,3,5,7,8)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
40->35 [style = bold, label=""];
25->34 [style = dashed, label="0"];
23->27 [style = bold, label=""];
15->34 [style = bold, label=""];
41->19 [style = bold, label=""];
37->44 [style = solid, label="estream"];
42->45 [style = bold, label=""];
15->25 [style = bold, label=""];
14->48 [style = dashed, label="0"];
46->24 [style = bold, label=""];
26->1 [style = bold, label=""];
5->15 [style = solid, label="maps2"];
34->33 [style = bold, label=""];
16->7 [style = bold, label=""];
44->40 [style = bold, label=""];
26->33 [style = dashed, label="0"];
5->15 [style = bold, label=""];
17->20 [style = solid, label="rstream"];
30->32 [style = bold, label=""];
19->11 [style = bold, label=""];
20->14 [style = bold, label=""];
33->1 [style = bold, label=""];
24->38 [style = bold, label=""];
38->36 [style = bold, label=""];
2->9 [style = bold, label=""];
47->37 [style = bold, label=""];
3->16 [style = bold, label=""];
35->43 [style = bold, label=""];
21->22 [style = solid, label="maps1"];
11->24 [style = bold, label=""];
48->42 [style = bold, label=""];
38->36 [style = solid, label="estream"];
47->37 [style = solid, label="stream"];
29->18 [style = bold, label=""];
4->0 [style = bold, label=""];
24->32 [style = dashed, label="0"];
24->17 [style = solid, label="stream"];
28->2 [style = bold, label=""];
30->32 [style = solid, label="sParamsA"];
1->28 [style = bold, label=""];
13->19 [style = bold, label=""];
46->24 [style = solid, label="paramsA"];
39->47 [style = solid, label="paramsA"];
8->12 [style = solid, label="maps2"];
10->5 [style = bold, label=""];
18->4 [style = bold, label=""];
0->23 [style = bold, label=""];
1->28 [style = solid, label="rstream"];
29->18 [style = solid, label="maps0"];
24->38 [style = solid, label="stream"];
21->22 [style = bold, label=""];
20->36 [style = dashed, label="0"];
11->24 [style = solid, label="paramsA"];
28->44 [style = dashed, label="0"];
33->1 [style = solid, label="stream"];
3->16 [style = solid, label="maps0"];
32->17 [style = solid, label="stream"];
25->26 [style = bold, label=""];
24->17 [style = bold, label=""];
36->48 [style = bold, label=""];
22->10 [style = bold, label=""];
37->44 [style = bold, label=""];
26->1 [style = solid, label="stream"];
7->21 [style = bold, label=""];
19->46 [style = bold, label=""];
39->47 [style = bold, label=""];
11->46 [style = dashed, label="0"];
2->40 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
0->23 [style = solid, label="maps1"];
34->33 [style = solid, label="sParamsA"];
9->29 [style = bold, label=""];
25->26 [style = solid, label="paramsA"];
27->8 [style = bold, label=""];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
32->17 [style = bold, label=""];
31->19 [style = bold, label=""];
45->39 [style = bold, label=""];
17->20 [style = bold, label=""];
19->30 [style = bold, label=""];
}
