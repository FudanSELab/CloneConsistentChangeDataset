digraph {
68 [style = filled, label = "assertEquals(Optional.of(\"Max the Editor\"),entry.getField(\"title\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "entry = entries.get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Optional.of(\"2014\"),entry.getField(\"year\"))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assert.assertEquals(\"book\",entry.getType())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(\"article\",entry.getType())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assert.assertEquals(Optional.of(\"Test\"),entry.getField(\"address\"))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(\"inproceedings\",entry.getType())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "assertEquals(5,entries.size())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "worker.cleanup(entry)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(\"incollection\",entry.getType())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(Optional.of(\"Address\"),entry.getField(\"address\"))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertEquals(Optional.of(\"Editor\"),entry.getField(\"editor\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "assertEquals(\"inproceedings\",entry.getType())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Assert.assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"booktitle\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max\"),entry.getField(\"editor\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(Optional.of(\"Einleitung\"),entry.getField(\"chaptertitle\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(\"address\"))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(Optional.of(\"TestPublisher\"),entry.getField(\"publisher\"))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(Optional.of(\"Short abstract\"),entry.getField(\"abstract\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"Mustermann and Musterfrau\"),entry.getField(\"author\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "assertEquals(Optional.of(\"Test\"),entry.getField(\"title\"))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "entry.setField(\"year\",\"2011\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(Optional.of(\"Musterbuch\"),entry.getField(\"title\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(Optional.of(\"TestPublisher\"),entry.getField(\"publisher\"))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"58\"),entry.getField(\"pages\"))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "assertEquals(\"misc\",entry.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"editor\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"booktitle\"))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Assert.assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "BibEntry entry = new BibEntry()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(\"misc\",entry.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testImportEntries1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"April\"),entry.getField(\"month\"))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "assertEquals(Optional.of(\"2\"),entry.getField(\"issue\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "entry = entries.get(2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(Optional.of(\"103--106\"),entry.getField(\"pages\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "entry = entries.get(3)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(Optional.of(\"28\"),entry.getField(\"volume\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"article\",entry.getType())@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "Path file = Paths.get(.getResource(\"OvidImporterTest1.txt\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(Optional.of(\"Publisher\"),entry.getField(\"publisher\"))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(5,entries.size())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(Optional.of(\"Musterbuch\"),entry.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(Optional.of(\"2014\"),entry.getField(\"year\"))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(Optional.empty(),entry.getField(\"title\"))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(Optional.of(\"58\"),entry.getField(\"pages\"))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "entry = entries.get(4)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max the Editor\"),entry.getField(\"title\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(Optional.empty(),entry.getField(\"title\"))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "testImportEntries1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "Assert.assertEquals(Optional.of(\"2011\"),entry.getField(FieldName.YEAR))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "cleanupWithYearAlreadyPresentDoesNothing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "BibEntry entry = entries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(Optional.of(\"Very Long Title\"),entry.getField(\"journal\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(Optional.of(\"Editor\"),entry.getField(\"editor\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"Einleitung\"),entry.getField(\"chaptertitle\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"Short abstract\"),entry.getField(\"abstract\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(Optional.of(\"Test\"),entry.getField(\"title\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(\"incollection\",entry.getType())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "entry.setField(\"date\",\"2012\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(Optional.of(\"April\"),entry.getField(\"month\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
89 [style = filled, label = "Assert.assertEquals(Optional.of(\"2012\"),entry.getField(FieldName.DATE))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"Publisher\"),entry.getField(\"publisher\"))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assert.assertEquals(Optional.of(\"2015\"),entry.getField(\"year\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Optional.of(\"Address\"),entry.getField(\"address\"))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "assertEquals(Optional.of(\"Max\"),entry.getField(\"author\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31->79 [style = dashed, label="0"];
70->67 [style = bold, label=""];
21->66 [style = dashed, label="0"];
18->61 [style = dashed, label="0"];
24->34 [style = bold, label=""];
42->64 [style = dashed, label="0"];
57->58 [style = bold, label=""];
59->61 [style = bold, label=""];
86->83 [style = solid, label="entry"];
54->65 [style = bold, label=""];
49->22 [style = bold, label=""];
23->77 [style = bold, label=""];
17->36 [style = bold, label=""];
33->11 [style = bold, label=""];
7->74 [style = bold, label=""];
27->67 [style = dashed, label="0"];
23->13 [style = bold, label=""];
61->76 [style = bold, label=""];
4->72 [style = dashed, label="0"];
74->23 [style = bold, label=""];
79->50 [style = bold, label=""];
9->56 [style = dashed, label="0"];
36->18 [style = bold, label=""];
6->41 [style = bold, label=""];
26->35 [style = bold, label=""];
65->69 [style = bold, label=""];
2->49 [style = dashed, label="0"];
50->68 [style = bold, label=""];
22->71 [style = bold, label=""];
44->73 [style = dashed, label="0"];
31->20 [style = bold, label=""];
1->31 [style = bold, label=""];
36->59 [style = dashed, label="0"];
16->9 [style = bold, label=""];
88->83 [style = bold, label=""];
4->38 [style = bold, label=""];
12->28 [style = bold, label=""];
63->78 [style = bold, label=""];
33->81 [style = dashed, label="0"];
62->29 [style = bold, label=""];
26->47 [style = dashed, label="0"];
67->82 [style = bold, label=""];
1->79 [style = bold, label=""];
10->80 [style = dashed, label="0"];
13->77 [style = dashed, label="0"];
13->16 [style = bold, label=""];
34->58 [style = dashed, label="0"];
3->55 [style = dashed, label="0"];
66->48 [style = bold, label=""];
5->1 [style = bold, label=""];
76->49 [style = bold, label=""];
47->54 [style = bold, label=""];
48->80 [style = bold, label=""];
85->88 [style = bold, label=""];
19->26 [style = bold, label=""];
29->64 [style = bold, label=""];
56->75 [style = bold, label=""];
45->60 [style = bold, label=""];
22->14 [style = bold, label=""];
20->19 [style = bold, label=""];
24->57 [style = dashed, label="0"];
38->17 [style = bold, label=""];
35->54 [style = dashed, label="0"];
27->8 [style = bold, label=""];
55->66 [style = bold, label=""];
40->29 [style = bold, label=""];
40->62 [style = dashed, label="0"];
64->72 [style = bold, label=""];
46->56 [style = bold, label=""];
12->45 [style = dashed, label="0"];
41->27 [style = bold, label=""];
43->76 [style = dashed, label="0"];
69->81 [style = bold, label=""];
16->89 [style = dashed, label="0"];
78->59 [style = bold, label=""];
8->3 [style = bold, label=""];
80->62 [style = bold, label=""];
17->78 [style = dashed, label="0"];
43->2 [style = bold, label=""];
73->57 [style = bold, label=""];
81->11 [style = bold, label=""];
32->33 [style = bold, label=""];
37->7 [style = bold, label=""];
6->52 [style = dashed, label="0"];
35->25 [style = bold, label=""];
52->70 [style = bold, label=""];
42->4 [style = bold, label=""];
30->75 [style = dashed, label="0"];
32->69 [style = dashed, label="0"];
28->60 [style = dashed, label="0"];
71->73 [style = bold, label=""];
51->37 [style = bold, label=""];
72->63 [style = bold, label=""];
21->39 [style = bold, label=""];
38->63 [style = dashed, label="0"];
30->5 [style = bold, label=""];
41->70 [style = dashed, label="0"];
29->42 [style = bold, label=""];
10->40 [style = bold, label=""];
7->15 [style = bold, label=""];
3->21 [style = bold, label=""];
53->1 [style = bold, label=""];
82->55 [style = bold, label=""];
44->24 [style = bold, label=""];
15->23 [style = bold, label=""];
19->68 [style = dashed, label="0"];
0->37 [style = bold, label=""];
11->6 [style = bold, label=""];
25->32 [style = bold, label=""];
9->30 [style = bold, label=""];
8->82 [style = dashed, label="0"];
11->52 [style = bold, label=""];
14->71 [style = dashed, label="0"];
34->12 [style = bold, label=""];
84->86 [style = bold, label=""];
14->44 [style = bold, label=""];
5->53 [style = dashed, label="0"];
25->65 [style = dashed, label="0"];
77->46 [style = bold, label=""];
16->46 [style = dashed, label="0"];
20->50 [style = dashed, label="0"];
15->74 [style = dashed, label="0"];
86->85 [style = bold, label=""];
18->43 [style = bold, label=""];
39->48 [style = dashed, label="0"];
58->45 [style = bold, label=""];
39->10 [style = bold, label=""];
68->47 [style = bold, label=""];
87->89 [style = bold, label=""];
13->87 [style = dashed, label="0"];
2->22 [style = bold, label=""];
75->53 [style = bold, label=""];
83->87 [style = bold, label=""];
}
