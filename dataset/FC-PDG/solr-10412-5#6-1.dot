digraph {
12 [style = filled, label = "assertTrue(IOUtils.contentEquals(isr,r))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(IOUtils.contentEquals(fis2,s))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"text/html\",stream.getContentType())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ContentStreamBase stream = new ContentStreamBase.URLStream(new URL(file.toURI().toASCIIString()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(file.length(),stream.getSize().intValue())@@@21@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "File file = new File(createTempDir().toFile(),\"README.json.gzip\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testURLStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(IOUtils.contentEquals(isr,r))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File file = new File(createTempDir().toFile(),\"README\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(IOUtils.contentEquals(zis2,s))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ContentStreamBase stream = new ContentStreamBase.URLStream(new URL(file.toURI().toASCIIString()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(file.length(),stream.getSize().intValue())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IOUtils.copy(is,zos)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testURLStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "IOUtils.copy(is,os)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"application/json\",stream.getContentType())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testURLStreamJSONGZIPExtention['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
14->10 [style = bold, label=""];
16->14 [style = bold, label=""];
2->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
15->6 [style = bold, label=""];
5->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
10->13 [style = bold, label=""];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
0->8 [style = bold, label=""];
12->15 [style = bold, label=""];
}
