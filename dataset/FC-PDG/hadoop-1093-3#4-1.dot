digraph {
25 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",11264)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mrApp.waitForInternalState((TaskAttemptImpl)t.getAttempts().values().iterator().next(),TaskAttemptStateInternal.UNASSIGNED)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "rm.drainEvents()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mrApp.waitForInternalState((JobImpl)job,JobStateInternal.RUNNING)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "rm.drainEvents()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Job job = mrApp.getContext().getAllJobs().entrySet().iterator().next().getValue()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "allocator.schedule()@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Iterator<Task> it = job.getTasks().values().iterator()@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "mrApp.submit(conf)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "allocator.schedule()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(0.05f,job.getProgress(),0.001f)@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,1)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "t.getType() == TaskType.MAP@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rm.drainEvents()@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "rm.drainEvents()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "rm.drainEvents()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,4)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "final ApplicationAttemptId appAttemptId = rmApp.getCurrentAppAttempt().getAppAttemptId()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "rm.drainEvents()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(0.95f,rmApp.getProgress(),0.001f)@@@65@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,5)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "t.getType() == TaskType.REDUCE@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "allocator.schedule()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rm.drainEvents()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,2)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "allocator.schedule()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "allocator.schedule()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "mrApp.waitForInternalState((JobImpl)job,JobStateInternal.RUNNING)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "rm.drainEvents()@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "allocator.schedule()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "DrainDispatcher rmDispatcher = (DrainDispatcher)rm.getRMContext().getDispatcher()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "rm.drainEvents()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "mrApp.waitForState(t,TaskState.RUNNING)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertEquals(0.14f,job.getProgress(),0.001f)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "RMApp rmApp = MockRMAppSubmitter.submitWithMemory(1024,rm)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,7)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mrApp.waitForState(t,TaskState.RUNNING)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(0.41f,rmApp.getProgress(),0.001f)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(0.59f,job.getProgress(),0.001f)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(0.59f,rmApp.getProgress(),0.001f)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,2)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Assert.assertEquals(0.14f,rmApp.getProgress(),0.001f)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Assert.assertEquals(0.095f,rmApp.getProgress(),0.001f)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "rm.drainEvents()@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "amDispatcher.await()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "testReportedAppProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "DrainDispatcher amDispatcher = (DrainDispatcher)mrApp.getDispatcher()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(0.95f,job.getProgress(),0.001f)@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "allocator.schedule()@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testReportedAppProgressWithOnlyMaps['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(0.095f,job.getProgress(),0.001f)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(0.41f,job.getProgress(),0.001f)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testReportedAppProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "rm.drainEvents()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "LOG.info(\"Running testReportedAppProgressWithOnlyMaps\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(0.05f,rmApp.getProgress(),0.001f)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "RMApp rmApp = rm.submitApp(1024)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "rm.drainEvents()@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rm.drainEvents()@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "allocator.schedule()@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "t.getType() == TaskType.MAP@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "rm.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "MRApp mrApp = new MRApp(appAttemptId,ContainerId.newContainerId(appAttemptId,0),10,0,false,this.getClass().getName(),true,1){@Override protected Dispatcher createDispatcher(){return new DrainDispatcher()}protected ContainerAllocator createContainerAllocator(ClientService clientService,AppContext context){return new MyContainerAllocator(rm,appAttemptId,context)}}@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(0.0,rmApp.getProgress(),0.0)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "allocator.schedule()@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MyResourceManager rm = new MyResourceManager(conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MyContainerAllocator allocator = (MyContainerAllocator)mrApp.getContainerAllocator()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "LOG.info(\"Running testReportedAppProgress\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "amDispatcher.await()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "MRApp mrApp = new MRApp(appAttemptId,ContainerId.newContainerId(appAttemptId,0),10,10,false,this.getClass().getName(),true,1){@Override protected Dispatcher createDispatcher(){return new DrainDispatcher()}protected ContainerAllocator createContainerAllocator(ClientService clientService,AppContext context){return new MyContainerAllocator(rm,appAttemptId,context)}}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",21504)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "rm.drainEvents()@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "finishNextNTasks(rmDispatcher,amNodeManager,mrApp,it,8)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65->75 [style = solid, label="it"];
61->37 [style = bold, label=""];
6->35 [style = bold, label=""];
42->66 [style = solid, label="rmDispatcher"];
48->62 [style = solid, label="amNodeManager"];
48->76 [style = dashed, label="0"];
29->0 [style = bold, label=""];
73->70 [style = solid, label="mrApp"];
0->41 [style = solid, label="rm"];
47->10 [style = bold, label=""];
16->66 [style = bold, label=""];
9->7 [style = bold, label=""];
44->53 [style = bold, label=""];
65->14 [style = bold, label=""];
48->7 [style = solid, label="amNodeManager"];
65->37 [style = solid, label="it"];
9->70 [style = bold, label=""];
76->75 [style = solid, label="amNodeManager"];
29->0 [style = solid, label="conf"];
42->44 [style = bold, label=""];
57->41 [style = solid, label="appAttemptId"];
45->38 [style = bold, label=""];
41->7 [style = solid, label="mrApp"];
60->6 [style = bold, label=""];
42->67 [style = bold, label=""];
12->22 [style = bold, label=""];
59->26 [style = bold, label=""];
53->48 [style = bold, label=""];
2->31 [style = bold, label=""];
63->43 [style = bold, label=""];
42->37 [style = solid, label="rmDispatcher"];
41->66 [style = solid, label="mrApp"];
55->41 [style = bold, label=""];
22->72 [style = dashed, label="0"];
7->46 [style = bold, label=""];
54->60 [style = bold, label=""];
37->1 [style = bold, label=""];
66->8 [style = bold, label=""];
36->31 [style = bold, label=""];
72->77 [style = bold, label=""];
18->15 [style = bold, label=""];
77->75 [style = bold, label=""];
42->62 [style = solid, label="rmDispatcher"];
48->50 [style = bold, label=""];
73->17 [style = bold, label=""];
31->2 [style = bold, label=""];
23->3 [style = bold, label=""];
41->37 [style = solid, label="mrApp"];
67->53 [style = bold, label=""];
73->14 [style = solid, label="mrApp"];
5->25 [style = bold, label=""];
57->56 [style = solid, label="appAttemptId"];
25->27 [style = bold, label=""];
64->10 [style = bold, label=""];
17->39 [style = bold, label=""];
65->14 [style = solid, label="it"];
22->61 [style = bold, label=""];
65->7 [style = solid, label="it"];
62->28 [style = bold, label=""];
41->14 [style = solid, label="mrApp"];
48->37 [style = solid, label="amNodeManager"];
33->65 [style = bold, label=""];
76->50 [style = bold, label=""];
19->38 [style = bold, label=""];
27->20 [style = bold, label=""];
11->58 [style = bold, label=""];
44->67 [style = dashed, label="0"];
37->75 [style = dashed, label="0"];
13->18 [style = bold, label=""];
42->14 [style = solid, label="rmDispatcher"];
40->29 [style = bold, label=""];
50->34 [style = bold, label=""];
34->57 [style = bold, label=""];
11->18 [style = solid, label="job"];
61->77 [style = dashed, label="0"];
0->73 [style = solid, label="rm"];
51->12 [style = bold, label=""];
76->70 [style = solid, label="amNodeManager"];
13->74 [style = bold, label=""];
70->46 [style = bold, label=""];
68->40 [style = bold, label=""];
53->76 [style = bold, label=""];
15->19 [style = bold, label=""];
35->59 [style = bold, label=""];
41->73 [style = dashed, label="0"];
42->70 [style = solid, label="rmDispatcher"];
24->33 [style = bold, label=""];
26->52 [style = bold, label=""];
19->45 [style = bold, label=""];
28->64 [style = bold, label=""];
40->69 [style = dashed, label="0"];
48->66 [style = solid, label="amNodeManager"];
76->14 [style = solid, label="amNodeManager"];
0->49 [style = bold, label=""];
7->70 [style = dashed, label="0"];
45->19 [style = dotted, label="true"];
12->72 [style = bold, label=""];
31->2 [style = dotted, label="true"];
3->21 [style = bold, label=""];
10->9 [style = bold, label=""];
26->59 [style = bold, label=""];
43->54 [style = bold, label=""];
35->26 [style = bold, label=""];
46->23 [style = bold, label=""];
20->36 [style = bold, label=""];
74->15 [style = bold, label=""];
73->75 [style = solid, label="mrApp"];
58->13 [style = bold, label=""];
65->70 [style = solid, label="it"];
4->40 [style = bold, label=""];
49->42 [style = bold, label=""];
15->45 [style = bold, label=""];
42->7 [style = solid, label="rmDispatcher"];
18->74 [style = dashed, label="0"];
55->73 [style = bold, label=""];
65->62 [style = solid, label="it"];
48->14 [style = solid, label="amNodeManager"];
59->52 [style = bold, label=""];
14->51 [style = bold, label=""];
0->67 [style = solid, label="rm"];
39->11 [style = bold, label=""];
71->69 [style = bold, label=""];
47->30 [style = bold, label=""];
57->56 [style = bold, label=""];
41->62 [style = solid, label="mrApp"];
57->73 [style = solid, label="appAttemptId"];
41->17 [style = bold, label=""];
1->47 [style = bold, label=""];
75->1 [style = bold, label=""];
8->5 [style = bold, label=""];
52->32 [style = bold, label=""];
45->19 [style = bold, label=""];
59->26 [style = dotted, label="true"];
38->63 [style = bold, label=""];
65->66 [style = solid, label="it"];
42->75 [style = solid, label="rmDispatcher"];
11->74 [style = solid, label="job"];
30->16 [style = bold, label=""];
31->62 [style = bold, label=""];
32->24 [style = bold, label=""];
29->39 [style = solid, label="conf"];
69->29 [style = bold, label=""];
56->55 [style = bold, label=""];
2->62 [style = bold, label=""];
}
