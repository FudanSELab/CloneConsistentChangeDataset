digraph {
1 [style = filled, label = "ContextProperties cp = ContextProperties.create().build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "System.setProperty(\"A.f1.i\",\"1\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cp = ContextProperties.create().build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "System.setProperty(\"A.f1.ss\",\"('foo','bar'(\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertObject(cp.get(\"A.f1.ss\")).isNull()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "System.clearProperty(\"A.f1.i\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertObject(cp.get(\"A.f1.ss\")).asJson().is(\"('bar','foo'(\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testSetStringDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertOptional(cp.get(\"A.f1.i\")).isType().is(1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "System.setProperty(\"A.f1\",\"('foo','bar'(\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertObject(cp.get(\"A.f1.i\")).isNull()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "System.clearProperty(\"A.f1.ss\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertObject(cp.get(\"A.f1.i\")).isType().is(1)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertOptional(cp.get(\"A.f1.i\")).isNull()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertObject(cp.get(\"A.f1.i\")).isType().is(1)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "System.clearProperty(\"A.f1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "System.setProperty(\"A.f1\",\"1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertOptional(cp.get(\"A.f1.i\")).isType().is(1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testIntegerDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertObject(cp.get(\"A.f1.ss\")).asJson().is(\"('bar','foo'(\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testIntegerDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->18 [style = dashed, label="0"];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
9->10 [style = dashed, label="0"];
2->20 [style = dashed, label="0"];
5->9 [style = bold, label=""];
19->20 [style = bold, label=""];
8->3 [style = bold, label=""];
3->11 [style = bold, label=""];
5->14 [style = bold, label=""];
3->4 [style = bold, label=""];
0->7 [style = bold, label=""];
3->18 [style = bold, label=""];
6->2 [style = bold, label=""];
6->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
12->2 [style = bold, label=""];
1->6 [style = bold, label=""];
9->14 [style = dashed, label="0"];
13->7 [style = bold, label=""];
18->5 [style = bold, label=""];
6->19 [style = dashed, label="0"];
1->12 [style = bold, label=""];
17->3 [style = bold, label=""];
7->15 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
1->19 [style = bold, label=""];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
15->1 [style = bold, label=""];
}
