digraph {
8 [style = filled, label = "AbstractGraphTest.validateGraph(transpose.asGraph())@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isEqualTo(E21)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(transpose).isEqualTo(expectedTranspose)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectedTranspose.putEdgeValue(N4,N3,E34)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MutableValueGraph<Integer,String> directedGraph = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "directedGraph.putEdgeValue(N1,N2,E12)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(transpose(transpose)).isSameAs(directedGraph)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedTranspose.putEdgeValue(N3,N1,E13)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "undirectedGraph.putEdgeValue(N1,N1,E11)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N1,E11)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ValueGraph<Integer,String> transpose = transpose(directedGraph)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "directedGraph.putEdgeValue(N1,N3,E13)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MutableValueGraph<Integer,String> expectedTranspose = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MutableValueGraph<Integer,String> undirectedGraph = ValueGraphBuilder.undirected().allowsSelfLoops(true).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expectedTranspose.putEdgeValue(N2,N1,E12)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "transpose_directedValueGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buildUndirectedValueGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N3,E31)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isNull()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "undirectedGraph.putEdgeValue(N1,N2,E12)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "undirectedGraph.putEdgeValue(N2,N1,E21)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "directedGraph.putEdgeValue(N1,N1,E11)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AbstractGraphTest.validateGraph(transpose.asGraph())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "directedGraph.putEdgeValue(N3,N4,E34)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "directedGraph.putEdgeValue(N3,N1,E31)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "transpose_directedValueGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "return undirectedGraph@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ValueGraph<Integer,String> transpose = Graphs.transpose(directedGraph)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->10 [style = bold, label=""];
21->0 [style = bold, label=""];
9->24 [style = dashed, label="0"];
0->6 [style = bold, label=""];
20->21 [style = solid, label="directedGraph"];
3->27 [style = dashed, label="0"];
23->26 [style = bold, label=""];
20->6 [style = solid, label="directedGraph"];
2->9 [style = bold, label=""];
3->16 [style = bold, label=""];
15->3 [style = bold, label=""];
17->19 [style = bold, label=""];
19->0 [style = bold, label=""];
1->17 [style = bold, label=""];
7->14 [style = bold, label=""];
20->2 [style = bold, label=""];
25->27 [style = bold, label=""];
18->20 [style = bold, label=""];
15->25 [style = dashed, label="0"];
19->21 [style = dashed, label="0"];
22->20 [style = bold, label=""];
20->19 [style = solid, label="directedGraph"];
9->15 [style = bold, label=""];
12->8 [style = bold, label=""];
24->25 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
6->11 [style = bold, label=""];
2->28 [style = dashed, label="0"];
10->4 [style = bold, label=""];
16->5 [style = bold, label=""];
28->24 [style = bold, label=""];
5->0 [style = solid, label="expectedTranspose"];
26->27 [style = solid, label="undirectedGraph"];
4->1 [style = bold, label=""];
26->28 [style = bold, label=""];
17->21 [style = bold, label=""];
11->7 [style = bold, label=""];
20->26 [style = dashed, label="0"];
}
