digraph {
12 [style = filled, label = "getMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return UnsafeReaders.readMap(baseObject,baseOffset + offset,size)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return null@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int size = (int)(offsetAndSize & ((1L << 32) - 1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int ordinal@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Platform.copyMemory(baseObject,baseOffset + offset,bytes,Platform.BYTE_ARRAY_OFFSET,size)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "getBinary['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "return bytes@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PlatformDependent.copyMemory(baseObject,baseOffset + offset,bytes,PlatformDependent.BYTE_ARRAY_OFFSET,size)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "int ordinal@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getBinary['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "isNullAt(ordinal)@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final byte(( bytes = new byte((((@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
9->4 [style = solid, label="bytes"];
13->6 [style = solid, label="ordinal"];
3->9 [style = dotted, label="false"];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
3->4 [style = dotted, label="false"];
11->4 [style = bold, label=""];
7->11 [style = dashed, label="0"];
8->14 [style = bold, label=""];
3->7 [style = dotted, label="false"];
3->14 [style = dotted, label="false"];
3->6 [style = bold, label=""];
10->3 [style = bold, label=""];
5->0 [style = dotted, label="true"];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
2->7 [style = solid, label="offset"];
3->8 [style = dotted, label="false"];
0->6 [style = solid, label="ordinal"];
6->2 [style = bold, label=""];
9->11 [style = solid, label="bytes"];
3->6 [style = dotted, label="false"];
2->14 [style = solid, label="offset"];
8->7 [style = solid, label="size"];
12->13 [style = dotted, label="true"];
6->8 [style = solid, label="offsetAndSize"];
13->3 [style = solid, label="ordinal"];
3->11 [style = dotted, label="false"];
0->13 [style = dashed, label="0"];
8->9 [style = bold, label=""];
0->3 [style = solid, label="ordinal"];
6->2 [style = solid, label="offsetAndSize"];
2->11 [style = solid, label="offset"];
10->0 [style = dotted, label="true"];
12->3 [style = bold, label=""];
8->11 [style = solid, label="size"];
3->2 [style = dotted, label="false"];
9->7 [style = solid, label="bytes"];
3->1 [style = dotted, label="true"];
2->8 [style = bold, label=""];
8->14 [style = solid, label="size"];
}
