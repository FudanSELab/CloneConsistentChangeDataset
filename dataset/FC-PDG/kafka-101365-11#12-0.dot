digraph {
18 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(9)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(2)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verifyInEquality(SessionWindows.ofInactivityGapWithNoGrace(ofMillis(9)),SessionWindows.ofInactivityGapWithNoGrace(ofMillis(1)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(9),ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).grace(ofMillis(90)),JoinWindows.of(ofMillis(3)).grace(ofMillis(60)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(9)),JoinWindows.of(ofMillis(3)).before(ofMillis(2)))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(9)),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(9)).grace(ofMillis(3)),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(0)).grace(ofMillis(7)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(2)).grace(ofMillis(6)).grace(ofMillis(7)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).grace(ofMillis(9)),JoinWindows.of(ofMillis(3)).grace(ofMillis(2)))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "verifyInEquality(SessionWindows.ofInactivityGapAndGrace(ofMillis(9),ofMillis(9)),SessionWindows.ofInactivityGapAndGrace(ofMillis(1),ofMillis(9)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(9)),SessionWindows.with(ofMillis(1)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(9)),JoinWindows.of(ofMillis(3)))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(9)).after(ofMillis(2)).grace(ofMillis(3)),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).after(ofMillis(9)),JoinWindows.of(ofMillis(3)).after(ofMillis(2)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "verifyInEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(9)),SessionWindows.with(ofMillis(1)).grace(ofMillis(7)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).before(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).before(ofMillis(2)))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(9)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).after(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)).after(ofMillis(2)))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)).before(ofMillis(1)).after(ofMillis(2)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
18->24 [style = bold, label=""];
24->19 [style = bold, label=""];
4->6 [style = bold, label=""];
19->20 [style = bold, label=""];
3->18 [style = dashed, label="0"];
4->13 [style = bold, label=""];
25->18 [style = bold, label=""];
22->21 [style = bold, label=""];
11->12 [style = bold, label=""];
21->25 [style = bold, label=""];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
7->3 [style = bold, label=""];
8->22 [style = dashed, label="0"];
13->17 [style = bold, label=""];
23->22 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
10->0 [style = bold, label=""];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
16->14 [style = bold, label=""];
14->11 [style = bold, label=""];
17->16 [style = bold, label=""];
}
