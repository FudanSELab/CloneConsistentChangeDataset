digraph {
1 [style = filled, label = "builder = new KeyValueStoreBuilder<>(supplier,Serdes.String(),Serdes.String(),new MockTime())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(supplier.get()).andReturn(inner)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expect(supplier.name()).andReturn(\"name\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "builder = new WindowStoreBuilder<>(supplier,Serdes.String(),Serdes.String(),new MockTime())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.replay(supplier)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
1->7 [style = dashed, label="0"];
2->0 [style = bold, label=""];
0->4 [style = bold, label=""];
4->7 [style = bold, label=""];
6->2 [style = bold, label=""];
3->2 [style = bold, label=""];
4->1 [style = bold, label=""];
}
