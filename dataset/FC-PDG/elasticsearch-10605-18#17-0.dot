digraph {
32 [style = filled, label = "assertThat(IntPoint.decodeDimension(fields.get(0).binaryValue().bytes,12),equalTo(10))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PercolatorFieldMapper fieldMapper = (PercolatorFieldMapper)documentMapper.mappers().getMapper(fieldName)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(documentMapper,null,null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "document = parseContext.doc()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "fields = new ArrayList<>(Arrays.asList(document.getFields(fieldType.rangeField.name())))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "bq.add(rangeQuery2,Occur.MUST)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Query rangeQuery2 = mapperService.fieldType(\"number_field1\").rangeQuery(15,20,true,true,null,null,null,context)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "bq.add(rangeQuery1,Occur.MUST)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "addQueryFieldMappings()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "fields = new ArrayList<>(Arrays.asList(document.getFields(fieldType.minimumShouldMatchField.name())))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertThat(fields.size(),equalTo(1))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "bq.add(rangeQuery1,Occur.MUST)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(fields.size(),equalTo(2))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(IntPoint.decodeDimension(fields.get(0).binaryValue().bytes,28),equalTo(20))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "PercolatorFieldMapper fieldMapper = (PercolatorFieldMapper)documentMapper.mappers().getMapper(fieldName)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(LongPoint.decodeDimension(fields.get(1).binaryValue().bytes,24),equalTo(20L))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "fields = new ArrayList<>(Arrays.asList(document.getFields(fieldType.minimumShouldMatchField.name())))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,mapperService.documentMapperParser(),documentMapper,null,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "fields.sort(Comparator.comparing(null))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testExtractTermsAndRanges_failed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(IntPoint.decodeDimension(fields.get(0).binaryValue().bytes,12),equalTo(10))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ParseContext.Document document = parseContext.doc()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "IndexSettings settings = new IndexSettings(build,Settings.EMPTY)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(fields.get(0).numericValue(),equalTo(1L))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "rangeQuery2 = mapperService.fieldType(\"number_field2\").rangeQuery(15,20,true,true,null,null,null,context)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "List<IndexableField> fields = new ArrayList<>(Arrays.asList(document.getFields(fieldType.rangeField.name())))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "fieldMapper.processQuery(bq.build(),parseContext)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "IndexMetadata build = IndexMetadata.builder(\"\").settings(Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,Version.CURRENT)).numberOfShards(1).numberOfReplicas(0).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(fields.get(0).numericValue(),equalTo(2L))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DocumentMapper documentMapper = mapperService.documentMapper()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(fields.size(),equalTo(2))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DocumentMapper documentMapper = mapperService.documentMapper()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testExtractRanges['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "PercolatorFieldMapper.PercolatorFieldType fieldType = (PercolatorFieldMapper.PercolatorFieldType)fieldMapper.fieldType()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IndexSettings settings = new IndexSettings(build,Settings.EMPTY)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "BooleanQuery.Builder bq = new BooleanQuery.Builder()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(IntPoint.decodeDimension(fields.get(0).binaryValue().bytes,28),equalTo(20))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(document.getField(fieldType.extractionResultField.name()).stringValue(),equalTo(EXTRACTION_PARTIAL))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "fieldMapper.processQuery(bq.build(),parseContext)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertThat(fields.size(),equalTo(1))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "QueryShardContext context = createSearchContext(indexService).getQueryShardContext()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "addQueryFieldMappings()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(LongPoint.decodeDimension(fields.get(1).binaryValue().bytes,8),equalTo(15L))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Query rangeQuery1 = mapperService.fieldType(\"number_field1\").rangeQuery(10,20,true,true,null,null,null,context)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "parseContext = new ParseContext.InternalParseContext(settings,mapperService.documentMapperParser(),documentMapper,null,null)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "IndexMetadata build = IndexMetadata.builder(\"\").settings(Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,Version.CURRENT)).numberOfShards(1).numberOfReplicas(0).build()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(IntPoint.decodeDimension(fields.get(1).binaryValue().bytes,12),equalTo(15))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "bq = new BooleanQuery.Builder()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(document.getField(fieldType.extractionResultField.name()).stringValue(),equalTo(EXTRACTION_PARTIAL))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(IntPoint.decodeDimension(fields.get(1).binaryValue().bytes,28),equalTo(20))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testExtractTermsAndRanges_failed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "ParseContext.Document document = parseContext.doc()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "bq.add(rangeQuery2,Occur.MUST)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "fields.sort(Comparator.comparing(null))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ParseContext.InternalParseContext parseContext = new ParseContext.InternalParseContext(settings,mapperService.documentMapperParser(),documentMapper,null,null)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
14->3 [style = bold, label=""];
24->28 [style = bold, label=""];
10->15 [style = dashed, label="0"];
11->13 [style = solid, label="documentMapper"];
26->42 [style = bold, label=""];
23->16 [style = bold, label=""];
7->11 [style = bold, label=""];
33->35 [style = bold, label=""];
54->49 [style = bold, label=""];
35->18 [style = bold, label=""];
46->38 [style = bold, label=""];
13->10 [style = solid, label="parseContext"];
5->9 [style = bold, label=""];
8->15 [style = solid, label="build"];
29->30 [style = bold, label=""];
5->39 [style = bold, label=""];
7->47 [style = bold, label=""];
8->25 [style = solid, label="build"];
39->9 [style = bold, label=""];
25->23 [style = bold, label=""];
31->32 [style = bold, label=""];
19->20 [style = bold, label=""];
11->6 [style = bold, label=""];
16->29 [style = bold, label=""];
34->33 [style = bold, label=""];
5->28 [style = solid, label="settings"];
45->53 [style = solid, label="rangeQuery2"];
10->9 [style = solid, label="documentMapper"];
52->50 [style = solid, label="context"];
28->25 [style = solid, label="parseContext"];
45->53 [style = bold, label=""];
42->36 [style = bold, label=""];
30->37 [style = bold, label=""];
8->5 [style = solid, label="build"];
17->19 [style = bold, label=""];
47->50 [style = bold, label=""];
2->12 [style = bold, label=""];
41->52 [style = bold, label=""];
2->13 [style = bold, label=""];
1->2 [style = solid, label="build"];
48->54 [style = bold, label=""];
6->1 [style = bold, label=""];
21->45 [style = bold, label=""];
12->10 [style = solid, label="parseContext"];
5->9 [style = solid, label="settings"];
12->10 [style = bold, label=""];
51->48 [style = bold, label=""];
52->45 [style = solid, label="context"];
52->22 [style = solid, label="context"];
5->48 [style = dashed, label="0"];
8->5 [style = bold, label=""];
10->8 [style = bold, label=""];
3->7 [style = bold, label=""];
44->26 [style = bold, label=""];
49->31 [style = bold, label=""];
9->15 [style = bold, label=""];
37->34 [style = bold, label=""];
50->36 [style = solid, label="rangeQuery1"];
11->12 [style = solid, label="documentMapper"];
10->4 [style = bold, label=""];
2->12 [style = solid, label="settings"];
20->43 [style = bold, label=""];
28->25 [style = bold, label=""];
4->8 [style = bold, label=""];
18->46 [style = bold, label=""];
50->21 [style = solid, label="rangeQuery1"];
1->2 [style = bold, label=""];
52->7 [style = bold, label=""];
27->51 [style = bold, label=""];
12->13 [style = dashed, label="0"];
22->24 [style = bold, label=""];
9->15 [style = solid, label="parseContext"];
50->21 [style = bold, label=""];
38->40 [style = bold, label=""];
53->10 [style = bold, label=""];
15->27 [style = bold, label=""];
43->44 [style = bold, label=""];
10->28 [style = solid, label="documentMapper"];
32->17 [style = bold, label=""];
22->24 [style = solid, label="rangeQuery2"];
7->10 [style = solid, label="query"];
36->22 [style = bold, label=""];
}
