digraph {
35 [style = filled, label = "init.setPluginFactory(initPPF)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(true,config.getRecompileGroovySource())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(true,init.getRecompileGroovySource())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.POST_JDK5)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(CompilerConfiguration.POST_JDK5,init.getTargetBytecode())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(false,config.getRecompileGroovySource())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final File initTDFile = new File(\"A wandering path\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,config.getWarningLevel())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "init.setJointCompilationOptions(initJoint)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "init.setMinimumRecompilationInterval(975)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(initTDFile,init.getTargetDirectory())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final Map initJoint = new HashMap()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "init.setRecompileGroovySource(false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(initJoint,init.getJointCompilationOptions())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "init.setDefaultScriptExtension(\".jpp\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(\".jpp\",config.getDefaultScriptExtension())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(true,init.getDebug())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "init.setClasspath(\"File1\" + File.pathSeparator + \"Somewhere\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(\"Gutenberg\",config.getSourceEncoding())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "init.setTolerance(720)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testCopyConstructor1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(\"\",config.getScriptBaseClass())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(55,init.getTolerance())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.PRE_JDK5)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "initJoint.put(\"somekey\",\"somevalue\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "init.setClasspath(\"\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(\"LEAD-123\",config.getSourceEncoding())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "init.setSourceEncoding(\"LEAD-123\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(initTDFile,config.getTargetDirectory())@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(false,config.getDebug())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "init.setTargetDirectory(initTDFile)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(CompilerConfiguration.PRE_JDK5,config.getTargetBytecode())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "init.setParameters(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "testCopyConstructor2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "init.setWarningLevel(WarningMessage.POSSIBLE_ERRORS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(\"\",init.getScriptBaseClass())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "init.setScriptBaseClass(\"blarg.foo.WhatSit\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(975,init.getMinimumRecompilationInterval())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(true,config.getVerbose())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "init.setVerbose(false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "init.setTolerance(55)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "init.setParameters(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(234,config.getMinimumRecompilationInterval())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "init.setMinimumRecompilationInterval(234)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(initTDFile,config.getTargetDirectory())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(234,init.getMinimumRecompilationInterval())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(initPPF,init.getPluginFactory())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(initPPF,config.getPluginFactory())@@@60@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",init.getScriptBaseClass())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(\"Gutenberg\",init.getSourceEncoding())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(CompilerConfiguration.POST_JDK5,config.getTargetBytecode())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(false,init.getRecompileGroovySource())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "init.setScriptBaseClass(\"\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "init.setVerbose(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "init.setDebug(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(initJoint,config.getJointCompilationOptions())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,init.getWarningLevel())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(720,init.getTolerance())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(CompilerConfiguration.PRE_JDK5,init.getTargetBytecode())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(975,config.getMinimumRecompilationInterval())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final CompilerConfiguration config = new CompilerConfiguration(init)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(55,config.getTolerance())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(720,config.getTolerance())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "init.setSourceEncoding(\"Gutenberg\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(\"LEAD-123\",init.getSourceEncoding())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(true,config.getDebug())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(false,init.getVerbose())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(false,init.getDebug())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "init.setDebug(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",config.getScriptBaseClass())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "init.setRecompileGroovySource(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\".jpp\",init.getDefaultScriptExtension())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "{final List listCP = config.getClasspath()assertEquals(0,listCP.size())}@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(true,init.getVerbose())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testCopyConstructor1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "{final List listCP = init.getClasspath()assertNotNull(listCP)assertEquals(0,listCP.size())}@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(false,init.getParameters())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ParserPluginFactory initPPF = ParserPluginFactory.newInstance()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertEquals(true,init.getParameters())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(false,config.getVerbose())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final ParserPluginFactory initPPF = ParserPluginFactory.antlr4(init)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54->55 [style = bold, label=""];
13->55 [style = dashed, label="0"];
55->72 [style = bold, label=""];
14->25 [style = bold, label=""];
25->22 [style = bold, label=""];
78->61 [style = bold, label=""];
61->56 [style = bold, label=""];
42->45 [style = bold, label=""];
48->4 [style = bold, label=""];
10->35 [style = bold, label=""];
28->62 [style = bold, label=""];
26->9 [style = bold, label=""];
59->57 [style = bold, label=""];
23->62 [style = dashed, label="0"];
26->75 [style = dashed, label="0"];
38->64 [style = dashed, label="0"];
40->11 [style = bold, label=""];
73->80 [style = bold, label=""];
5->49 [style = bold, label=""];
10->51 [style = dashed, label="0"];
10->35 [style = solid, label="initPPF"];
70->68 [style = bold, label=""];
3->70 [style = dashed, label="0"];
68->78 [style = bold, label=""];
49->7 [style = solid, label="initJoint"];
27->51 [style = bold, label=""];
51->2 [style = solid, label="initPPF"];
53->75 [style = bold, label=""];
48->34 [style = bold, label=""];
42->68 [style = dashed, label="0"];
33->73 [style = dashed, label="0"];
43->16 [style = bold, label=""];
47->6 [style = bold, label=""];
50->43 [style = bold, label=""];
40->59 [style = dashed, label="0"];
34->19 [style = bold, label=""];
36->44 [style = bold, label=""];
29->72 [style = dashed, label="0"];
2->34 [style = bold, label=""];
22->50 [style = bold, label=""];
19->73 [style = bold, label=""];
47->80 [style = dashed, label="0"];
24->38 [style = bold, label=""];
20->3 [style = bold, label=""];
14->12 [style = solid, label="initTDFile"];
30->58 [style = bold, label=""];
6->53 [style = dashed, label="0"];
51->35 [style = bold, label=""];
74->79 [style = bold, label=""];
44->17 [style = bold, label=""];
11->18 [style = bold, label=""];
14->48 [style = solid, label="initTDFile"];
4->0 [style = bold, label=""];
14->25 [style = solid, label="initTDFile"];
60->77 [style = bold, label=""];
33->47 [style = bold, label=""];
39->7 [style = bold, label=""];
22->76 [style = bold, label=""];
67->30 [style = bold, label=""];
51->35 [style = solid, label="initPPF"];
49->41 [style = bold, label=""];
29->40 [style = bold, label=""];
64->14 [style = bold, label=""];
37->13 [style = bold, label=""];
16->20 [style = bold, label=""];
57->69 [style = bold, label=""];
44->56 [style = dashed, label="0"];
45->78 [style = dashed, label="0"];
52->15 [style = bold, label=""];
19->33 [style = bold, label=""];
20->79 [style = dashed, label="0"];
18->24 [style = bold, label=""];
6->26 [style = bold, label=""];
41->27 [style = bold, label=""];
45->36 [style = bold, label=""];
9->46 [style = bold, label=""];
71->15 [style = bold, label=""];
32->30 [style = bold, label=""];
72->59 [style = bold, label=""];
80->53 [style = bold, label=""];
76->66 [style = bold, label=""];
3->42 [style = bold, label=""];
50->76 [style = dashed, label="0"];
14->58 [style = solid, label="initTDFile"];
16->74 [style = dashed, label="0"];
30->12 [style = bold, label=""];
63->60 [style = bold, label=""];
9->63 [style = dashed, label="0"];
15->28 [style = bold, label=""];
15->51 [style = solid, label="init"];
28->23 [style = bold, label=""];
27->10 [style = bold, label=""];
46->8 [style = bold, label=""];
25->5 [style = bold, label=""];
77->67 [style = bold, label=""];
32->67 [style = dashed, label="0"];
43->66 [style = dashed, label="0"];
12->39 [style = bold, label=""];
62->81 [style = bold, label=""];
24->65 [style = dashed, label="0"];
1->37 [style = bold, label=""];
11->57 [style = dashed, label="0"];
1->81 [style = dashed, label="0"];
69->65 [style = bold, label=""];
15->34 [style = solid, label="init"];
46->60 [style = dashed, label="0"];
51->21 [style = solid, label="initPPF"];
8->32 [style = bold, label=""];
81->54 [style = bold, label=""];
35->22 [style = bold, label=""];
65->64 [style = bold, label=""];
0->2 [style = bold, label=""];
66->74 [style = bold, label=""];
18->69 [style = dashed, label="0"];
37->54 [style = dashed, label="0"];
31->15 [style = bold, label=""];
56->17 [style = bold, label=""];
38->14 [style = bold, label=""];
75->63 [style = bold, label=""];
79->70 [style = bold, label=""];
13->29 [style = bold, label=""];
49->0 [style = solid, label="initJoint"];
10->21 [style = solid, label="initPPF"];
49->27 [style = solid, label="initJoint"];
36->61 [style = dashed, label="0"];
17->48 [style = bold, label=""];
23->1 [style = bold, label=""];
7->21 [style = bold, label=""];
10->2 [style = solid, label="initPPF"];
8->77 [style = dashed, label="0"];
}
