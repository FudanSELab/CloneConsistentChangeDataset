digraph {
34 [style = filled, label = "checkExpType(\"trim('mustache' FROM 'beard')\",\"VARCHAR(5) NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "expr(\"substring('a' FROM 1 FOR 3)\").ok()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "sql(\"substring('10' FROM 1 FOR 2)\").charset(Charset.forName(\"latin1\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "expr(\"substring(cast(' 100 ' as CHAR(99)) FROM '1' FOR 'w')\").columnType(\"VARCHAR(99) NOT NULL\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "expr(\"substring(12345, '1')\").columnType(\"VARCHAR NOT NULL\")@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "checkExpType(\"substring('a', '1')\",\"VARCHAR(1) NOT NULL\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "expr(\"substring('1000' FROM '1' FOR 'w')\").columnType(\"VARCHAR(4) NOT NULL\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "checkExp(\"trim(both 'mustache' FROM 'beard')\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "checkExp(\"substring('a' FROM 1 FOR 3)\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "checkExp(\"substring(x'ff' FROM 1 FOR 2)\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "expr(\"substring('1000' FROM 2)\").columnType(\"VARCHAR(4) NOT NULL\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "TODO@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "checkExpType(\"substring(x'10456b' FROM 1 FOR 2)\",\"VARBINARY(3) NOT NULL\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "expr(\"substring('a' FROM 1)\").ok()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testSubstring['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "checkExp(\"trim('mustache' FROM 'beard')\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expr(\"substring(x'10456b' FROM 1 FOR 2)\").columnType(\"VARBINARY(3) NOT NULL\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "checkExpType(\"substring('1000' FROM '1' FOR 'w')\",\"VARCHAR(4) NOT NULL\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "checkExp(\"substring('a' FROM 1)\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "sql(\"substring(_UTF16'10' FROM 1 FOR 2)\").charset(Charset.forName(\"UTF-16LE\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "checkCollation(\"trim('mustache' FROM 'beard')\",\"CHAR(5)\",expectedCoercibility)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "checkExpType(\"trim('mustache' FROM cast(null as varchar(4)))\",\"VARCHAR(4)\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "checkExpType(\"substring('a', 1, '3')\",\"VARCHAR(1) NOT NULL\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "checkExpType(\"substring('10' FROM 1 FOR 2)\",\"VARCHAR(2) NOT NULL\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "checkExp(\"substring('a', 1)\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "expr(\"substring('a', 1, 3)\").ok()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "checkExp(\"substring('a' FROM 'reg' FOR '\')\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "expr(\"substring('a', 1)\").ok()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "expr(\"substring('a' FROM 'reg' FOR '\')\").ok()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "checkExpType(\"substring(cast(' 100 ' as CHAR(99)) FROM '1' FOR 'w')\",\"VARCHAR(99) NOT NULL\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "checkCharset(\"substring(_UTF16'10' FROM 1 FOR 2)\",Charset.forName(\"UTF-16LE\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "final SqlCollation.Coercibility expectedCoercibility = null@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSubstring['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "checkExp(\"trim(leading 'mustache' FROM 'beard')\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testTrim['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "checkCharset(\"substring('10' FROM 1 FOR 2)\",Charset.forName(\"latin1\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "expr(\"substring(x'ff' FROM 1 FOR 2)\").ok()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "checkExpType(\"trim('beard ')\",\"VARCHAR(7) NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expr(\"substring('a', '1')\").columnType(\"VARCHAR(1) NOT NULL\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "checkExp(\"substring('a', 1, 3)\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "expr(\"substring('a', 1, '3')\").columnType(\"VARCHAR(1) NOT NULL\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "checkExpType(\"substring(12345, '1')\",\"VARCHAR NOT NULL\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "checkExp(\"trim(trailing 'mustache' FROM 'beard')\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expr(\"substring('10' FROM 1 FOR 2)\").columnType(\"VARCHAR(2) NOT NULL\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "checkExpType(\"substring('1000' FROM 2)\",\"VARCHAR(4) NOT NULL\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39->37 [style = bold, label=""];
14->24 [style = dashed, label="0"];
4->10 [style = bold, label=""];
27->18 [style = bold, label=""];
44->42 [style = bold, label=""];
8->37 [style = dashed, label="0"];
22->33 [style = bold, label=""];
7->1 [style = bold, label=""];
33->20 [style = bold, label=""];
34->40 [style = bold, label=""];
5->26 [style = dashed, label="0"];
6->20 [style = dashed, label="0"];
11->33 [style = dashed, label="0"];
11->6 [style = bold, label=""];
1->34 [style = dashed, label="0"];
35->39 [style = bold, label=""];
18->17 [style = bold, label=""];
14->39 [style = dashed, label="0"];
38->36 [style = bold, label=""];
44->42 [style = solid, label="expectedCoercibility"];
20->31 [style = bold, label=""];
1->18 [style = dashed, label="0"];
15->19 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
16->43 [style = dashed, label="0"];
0->15 [style = bold, label=""];
12->21 [style = dashed, label="0"];
7->27 [style = dashed, label="0"];
32->29 [style = bold, label=""];
30->19 [style = bold, label=""];
26->27 [style = bold, label=""];
17->28 [style = bold, label=""];
28->21 [style = bold, label=""];
23->24 [style = bold, label=""];
8->5 [style = bold, label=""];
13->31 [style = dashed, label="0"];
24->25 [style = bold, label=""];
37->38 [style = bold, label=""];
6->13 [style = bold, label=""];
25->26 [style = bold, label=""];
21->32 [style = bold, label=""];
31->30 [style = bold, label=""];
0->30 [style = dashed, label="0"];
9->14 [style = bold, label=""];
5->7 [style = bold, label=""];
43->41 [style = bold, label=""];
8->25 [style = dashed, label="0"];
5->38 [style = dashed, label="0"];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
12->3 [style = bold, label=""];
41->42 [style = dotted, label="true"];
29->22 [style = bold, label=""];
40->43 [style = bold, label=""];
3->32 [style = dashed, label="0"];
4->29 [style = dashed, label="0"];
2->40 [style = dashed, label="0"];
16->28 [style = dashed, label="0"];
41->44 [style = bold, label=""];
16->12 [style = bold, label=""];
41->44 [style = dotted, label="true"];
7->36 [style = dashed, label="0"];
36->34 [style = bold, label=""];
13->0 [style = bold, label=""];
10->11 [style = bold, label=""];
2->16 [style = bold, label=""];
}
