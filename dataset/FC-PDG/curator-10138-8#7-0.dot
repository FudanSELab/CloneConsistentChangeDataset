digraph {
7 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),null,backgrounding.getContext(),null),null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return resultStat@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return result@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "path = client.fixForNamespace(path)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "resultStat = pathInForeground(path)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "List<ACL> aclList = acling.getAclList(fixedPath)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "String path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return resultStat@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "backgrounding.inBackground()@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "resultStat = pathInForeground(fixedPath,aclList)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String fixedPath = client.fixForNamespace(path)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "forPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<ACL> result = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Stat resultStat = null@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result = pathInForeground(path)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "forPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,fixedPath,backgrounding.getCallback(),null,backgrounding.getContext(),null),null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "client.getSchemaSet().getSchema(path).validateGeneral(path,null,aclList)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "forPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "backgrounding.inBackground()@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5->3 [style = solid, label="resultStat"];
2->9 [style = solid, label="path"];
0->16 [style = bold, label=""];
15->10 [style = bold, label=""];
13->14 [style = solid, label="resultStat"];
3->17 [style = dashed, label="0"];
7->17 [style = bold, label=""];
2->20 [style = dashed, label="0"];
11->14 [style = bold, label=""];
2->0 [style = solid, label="path"];
9->13 [style = solid, label="fixedPath"];
2->10 [style = solid, label="path"];
18->17 [style = solid, label="result"];
19->20 [style = dotted, label="true"];
8->13 [style = dotted, label="false"];
1->3 [style = solid, label="resultStat"];
12->2 [style = dotted, label="true"];
4->18 [style = dotted, label="false"];
1->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
0->7 [style = solid, label="path"];
18->17 [style = bold, label=""];
4->7 [style = dotted, label="true"];
4->18 [style = bold, label=""];
6->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
10->7 [style = bold, label=""];
20->0 [style = solid, label="path"];
4->7 [style = bold, label=""];
16->17 [style = solid, label="result"];
7->3 [style = bold, label=""];
19->0 [style = bold, label=""];
1->13 [style = dashed, label="0"];
7->14 [style = solid, label="resultStat"];
5->16 [style = dashed, label="0"];
15->10 [style = solid, label="aclList"];
6->2 [style = dotted, label="true"];
9->11 [style = solid, label="fixedPath"];
9->15 [style = bold, label=""];
5->4 [style = bold, label=""];
8->11 [style = dotted, label="true"];
15->13 [style = solid, label="aclList"];
4->1 [style = bold, label=""];
4->1 [style = dotted, label="false"];
0->9 [style = dashed, label="0"];
16->4 [style = bold, label=""];
0->1 [style = solid, label="path"];
9->15 [style = solid, label="fixedPath"];
0->18 [style = solid, label="path"];
8->11 [style = bold, label=""];
13->14 [style = bold, label=""];
8->13 [style = bold, label=""];
0->5 [style = bold, label=""];
}
