digraph {
1 [style = filled, label = "final CountDownLatch timeoutSetuped = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subscriber.assertFailureAndMessage(,timeoutMessage(1,TimeUnit.SECONDS))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldTimeoutIfSynchronizedObservableEmitFirstOnNextNotWithinTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "new Thread(new Runnable(){@Override public void run(){Observable.unsafeCreate(new ObservableSource<String>(){@Override public void subscribe(Observer<? super String> observer){observer.onSubscribe(Disposable.empty())try {timeoutSetuped.countDown()exit.await()}catch (InterruptedException e) observer.onNext(\"a\")observer.onComplete()}}).timeout(1,TimeUnit.SECONDS,testScheduler).subscribe(observer)}}).start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "timeoutSetuped.await()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldTimeoutIfSynchronizedFlowableEmitFirstOnNextNotWithinTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "exit.countDown()@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final TestSubscriberEx<String> subscriber = new TestSubscriberEx<String>()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testScheduler.advanceTimeBy(2,TimeUnit.SECONDS)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldTimeoutIfSynchronizedFlowableEmitFirstOnNextNotWithinTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final CountDownLatch exit = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "observer.assertFailureAndMessage(,timeoutMessage(1,TimeUnit.SECONDS))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final TestObserverEx<String> observer = new TestObserverEx<String>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final TestSubscriberEx<String> subscriber = new TestSubscriberEx<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
6->8 [style = bold, label=""];
10->0 [style = bold, label=""];
5->2 [style = bold, label=""];
12->2 [style = bold, label=""];
11->0 [style = bold, label=""];
3->10 [style = dashed, label="0"];
8->4 [style = bold, label=""];
3->11 [style = dashed, label="0"];
1->10 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
6->13 [style = bold, label=""];
3->0 [style = bold, label=""];
7->6 [style = bold, label=""];
1->11 [style = bold, label=""];
8->13 [style = dashed, label="0"];
0->7 [style = bold, label=""];
13->4 [style = bold, label=""];
}
