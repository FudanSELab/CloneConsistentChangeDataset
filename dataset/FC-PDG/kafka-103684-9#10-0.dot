digraph {
19 [style = filled, label = "testExpiredBatchDoesNotRetry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sender.runOnce()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setupWithTransactionState(null,false,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<TopicPartition,ProduceResponse.PartitionResponse> responseMap = new HashMap<>()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertTrue(request1.isDone())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,client.inFlightRequestCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sender.runOnce()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Future<RecordMetadata> request1 = appendToAccumulator(tp0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.respond(produceResponse(tp0,-1,Errors.NOT_LEADER_FOR_PARTITION,-1))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "sender.runOnce()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "time.sleep(deliverTimeoutMs)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "long deliverTimeoutMs = 1500L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "responseMap.put(tp0,new ProduceResponse.PartitionResponse(Errors.NONE,0L,0L,0L))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,sender.inFlightBatches(tp0).size())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,sender.inFlightBatches(tp0).size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,client.inFlightRequestCount())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sender.runOnce()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testExpiredBatchDoesNotRetry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(0,sender.inFlightBatches(tp0).size())@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(request2.isDone())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(0,client.inFlightRequestCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "client.respond(produceResponse(tp0,-1,Errors.MESSAGE_TOO_LARGE,-1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Future<RecordMetadata> request2 = appendToAccumulator(tp0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,client.inFlightRequestCount())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testExpiredBatchDoesNotSplitOnMessageTooLargeError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->1 [style = bold, label=""];
11->2 [style = solid, label="deliverTimeoutMs"];
21->15 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
14->22 [style = bold, label=""];
19->11 [style = bold, label=""];
5->17 [style = bold, label=""];
1->13 [style = bold, label=""];
13->16 [style = bold, label=""];
2->13 [style = bold, label=""];
2->16 [style = bold, label=""];
3->9 [style = bold, label=""];
11->5 [style = bold, label=""];
0->23 [style = bold, label=""];
18->10 [style = bold, label=""];
24->11 [style = bold, label=""];
15->0 [style = bold, label=""];
12->18 [style = bold, label=""];
17->15 [style = bold, label=""];
10->4 [style = bold, label=""];
16->14 [style = bold, label=""];
4->8 [style = bold, label=""];
11->17 [style = bold, label=""];
23->2 [style = bold, label=""];
2->7 [style = bold, label=""];
17->21 [style = bold, label=""];
14->6 [style = bold, label=""];
22->6 [style = bold, label=""];
20->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
