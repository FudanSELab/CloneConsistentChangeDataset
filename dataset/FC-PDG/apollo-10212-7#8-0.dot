digraph {
23 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new Properties()}})@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "String someKeyPrefix = \"someKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Set<String> propertyNames = defaultConfig.getPropertyNames()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "configUtil = new MockConfigUtil()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MockInjector.setInstance(,remoteConfigLongPollService)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < 10@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "someProperties = new Properties()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(pollResponse.getStatusCode()).thenReturn(HttpServletResponse.SC_NOT_MODIFIED)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MockInjector.setInstance(,configServiceLocator)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String someValuePrefix = \"someValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(configServiceLocator.getConfigServices()).thenReturn(Lists.newArrayList(serviceDTO))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MockInjector.setInstance(,configUtil)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "someNamespace = \"someName\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(10,propertyNames.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "i++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "someCluster = \"someCluster\"@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "someProperties.setProperty(someKeyPrefix + i,someValuePrefix + i)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "httpUtil = spy(new MockHttpUtil())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(serviceDTO.getHomepageUrl()).thenReturn(someServerUrl)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "remoteConfigLongPollService = new RemoteConfigLongPollService()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PropertiesFactory propertiesFactory = new DefaultPropertiesFactory()@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "someCluster = \"someCluster\"@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(someProperties.stringPropertyNames(),propertyNames)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ServiceDTO serviceDTO = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "someAppId = \"someAppId\"@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.setProperty(PropertiesFactory.APOLLO_PROPERTY_ORDER_ENABLE,\"true\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int i = 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testGetPropertyNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MockInjector.reset()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MockInjector.setInstance(,httpUtil)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "someServerUrl = \"http://someServer\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "someAppId = \"someAppId\"@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27->36 [style = solid, label="i"];
8->16 [style = bold, label=""];
4->3 [style = bold, label=""];
27->31 [style = solid, label="i"];
27->36 [style = bold, label=""];
12->5 [style = bold, label=""];
5->23 [style = dashed, label="0"];
10->19 [style = bold, label=""];
17->9 [style = bold, label=""];
37->25 [style = bold, label=""];
36->31 [style = bold, label=""];
17->9 [style = solid, label="propertiesFactory"];
28->32 [style = solid, label="someProperties"];
34->36 [style = solid, label="i"];
3->11 [style = bold, label=""];
36->32 [style = bold, label=""];
11->12 [style = bold, label=""];
6->16 [style = solid, label="serviceDTO"];
9->10 [style = bold, label=""];
16->2 [style = bold, label=""];
25->35 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
36->31 [style = dotted, label="true"];
32->33 [style = bold, label=""];
31->34 [style = bold, label=""];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
33->29 [style = bold, label=""];
29->26 [style = bold, label=""];
35->28 [style = bold, label=""];
26->30 [style = bold, label=""];
25->31 [style = solid, label="someKeyPrefix"];
1->8 [style = solid, label="someServerUrl"];
1->6 [style = bold, label=""];
23->22 [style = bold, label=""];
35->31 [style = solid, label="someValuePrefix"];
29->30 [style = solid, label="propertyNames"];
18->1 [style = bold, label=""];
22->20 [style = bold, label=""];
4->3 [style = solid, label="httpUtil"];
34->36 [style = bold, label=""];
6->8 [style = bold, label=""];
7->25 [style = dashed, label="0"];
15->18 [style = solid, label="configUtil"];
21->7 [style = bold, label=""];
12->23 [style = bold, label=""];
13->15 [style = bold, label=""];
28->27 [style = bold, label=""];
14->13 [style = bold, label=""];
20->24 [style = bold, label=""];
11->12 [style = solid, label="remoteConfigLongPollService"];
27->34 [style = solid, label="i"];
36->34 [style = dotted, label="true"];
34->31 [style = solid, label="i"];
}
