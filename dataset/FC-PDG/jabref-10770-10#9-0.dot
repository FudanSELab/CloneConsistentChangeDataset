digraph {
3 [style = filled, label = "String a = AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(\"J. von Neumann, J. Smith and P. Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,false),AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,false))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith and Black Brown, Peter\",true,false))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith and Black Brown, Peter\",false,false))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorLastNameFirstCommas(\"\",true,false))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"von Neumann, John, Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false,false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"J. von Neumann, J. Smith, and P. Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorFirstNameFirstCommas(\"\",false,true))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"J. Smith and P. Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith and Black Brown, Peter\",true,false))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testFixAuthorFirstNameFirstCommas['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"von Neumann, J., Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,false))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testFixAuthorLastNameFirstCommasNoComma['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(\"John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith and Black Brown, Peter\",false,true))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(\"J. Smith\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith\",true,false))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorFirstNameFirstCommas(\"\",true,false))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith and Black Brown, Peter\",false,false))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorFirstNameFirstCommas(\"\",false,false))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"John Smith\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith\",false,false))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(a,b)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorFirstNameFirstCommas(\"\",true,true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testFixAuthorLastNameFirstCommasNoComma['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"von Neumann, J. P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Peter von Neumann\",true,false))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorLastNameFirstCommas(\"\",false,false))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"J. P. von Neumann\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Peter von Neumann\",true,true))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(\"J. P. von Neumann\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Peter von Neumann\",true,false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(\"J. Smith\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith\",true,true))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(\"J. Smith and P. Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith and Black Brown, Peter\",true,true))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith\",false,false))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"John von Neumann, John Smith and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false,false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true),AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"John von Neumann, John Smith, and Peter Black Brown\",AuthorList.fixAuthorFirstNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false,true))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertSame(a,b)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"John Smith\",AuthorList.fixAuthorFirstNameFirstCommas(\"John Smith\",false,true))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(\"Smith, J.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith\",true,false))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String b = AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = dashed, label="0"];
4->12 [style = solid, label="b"];
16->15 [style = bold, label=""];
8->10 [style = bold, label=""];
30->24 [style = bold, label=""];
27->32 [style = bold, label=""];
7->1 [style = bold, label=""];
35->29 [style = bold, label=""];
12->5 [style = bold, label=""];
3->12 [style = solid, label="a"];
3->5 [style = solid, label="a"];
4->16 [style = dashed, label="0"];
13->35 [style = dashed, label="0"];
33->28 [style = bold, label=""];
9->28 [style = dashed, label="0"];
34->33 [style = bold, label=""];
0->32 [style = dashed, label="0"];
14->10 [style = bold, label=""];
0->11 [style = bold, label=""];
18->30 [style = bold, label=""];
10->33 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
31->21 [style = bold, label=""];
1->18 [style = dashed, label="0"];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
11->2 [style = bold, label=""];
9->6 [style = bold, label=""];
5->27 [style = dashed, label="0"];
23->22 [style = bold, label=""];
21->20 [style = bold, label=""];
20->23 [style = bold, label=""];
13->3 [style = bold, label=""];
5->0 [style = bold, label=""];
24->31 [style = bold, label=""];
19->26 [style = bold, label=""];
6->13 [style = bold, label=""];
32->25 [style = bold, label=""];
25->19 [style = bold, label=""];
12->15 [style = dashed, label="0"];
4->12 [style = bold, label=""];
28->17 [style = bold, label=""];
4->5 [style = solid, label="b"];
10->9 [style = bold, label=""];
2->7 [style = bold, label=""];
15->27 [style = bold, label=""];
29->16 [style = bold, label=""];
26->18 [style = bold, label=""];
17->35 [style = bold, label=""];
}
