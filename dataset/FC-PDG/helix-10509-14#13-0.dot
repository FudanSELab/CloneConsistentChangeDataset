digraph {
2 [style = filled, label = "accessor.removeProperty(keyBuild.workflowContext(jobQueueName))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertNull(_driver.getWorkflowConfig(jobQueueName))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IllegalArgumentException e@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PropertyKey.Builder keyBuild = accessor.keyBuilder()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertNull(_driver.getJobConfig(TaskUtil.getNamespacedJobName(jobQueueName,\"job1\")))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.fail(\"Delete must be rejected and throw a HelixException, but did not!\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testDeleteHangingJobs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "Thread.sleep(1000)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "_driver.delete(jobQueueName,true)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertNotNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName,\"job1\")))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(FORCE_DELETE_BACKOFF)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "HelixException e@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "_driver.deleteAndWaitForCompletion(jobQueueName,DELETE_DELAY)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertNotNull(_driver.getJobConfig(TaskUtil.getNamespacedJobName(jobQueueName,\"job1\")))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Exception e@@@37@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testDeleteHangingJobs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "accessor.removeProperty(keyBuild.resourceConfig(jobQueueName))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertNull(_driver.getWorkflowContext(jobQueueName))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JobConfig.Builder jobBuilder = JobConfig.Builder.fromMap(WorkflowGenerator.DEFAULT_JOB_CONFIG).setMaxAttemptsPerTask(1).setWorkflow(jobQueueName).setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"1000000\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(verifier.verifyByPolling())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNull(_driver.getJobConfig(TaskUtil.getNamespacedJobName(jobQueueName,\"job1\")))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.fail(\"Delete must time out and throw a HelixException with the Controller paused, but did not!\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "IllegalArgumentException e@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Assert.assertNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName,\"job1\")))@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "_driver.deleteJob(jobQueueName,\"job1\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "{}@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertNull(_driver.getWorkflowConfig(jobQueueName))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "HelixDataAccessor accessor = _manager.getHelixDataAccessor()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "accessor.removeProperty(keyBuild.workflowContext(jobQueueName))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Exception e@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertNull(_driver.getWorkflowContext(jobQueueName))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BestPossibleExternalViewVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).setZkClient(_gZkClient).build()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "_driver.getWorkflowConfig(jobQueueName) != null || _driver.getWorkflowContext(jobQueueName) != null@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String jobQueueName = TestHelper.getTestMethodName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "BestPossibleExternalViewVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkClient(_gZkClient).setWaitTillVerify(TestHelper.DEFAULT_REBALANCE_PROCESSING_WAIT_TIME).build()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testDeleteWorkflowForcefully['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "_driver.pollForJobState(jobQueueName,TaskUtil.getNamespacedJobName(jobQueueName,\"job1\"),TaskState.IN_PROGRESS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertNull(_driver.getJobContext(TaskUtil.getNamespacedJobName(jobQueueName,\"job1\")))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "jobQueue.enqueueJob(\"job1\",jobBuilder)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "{}@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "admin.enableCluster(CLUSTER_NAME,false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i < 3@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertNotNull(_driver.getWorkflowContext(jobQueueName))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "_driver.start(jobQueue.build())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "_driver.deleteJob(jobQueueName,\"job1\",true)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertNotNull(_driver.getWorkflowConfig(jobQueueName))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "accessor.removeProperty(keyBuild.resourceConfig(jobQueueName))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->22 [style = solid, label="i"];
32->22 [style = bold, label=""];
42->45 [style = bold, label=""];
1->7 [style = solid, label="jobBuilder"];
12->50 [style = solid, label="jobQueueName"];
12->39 [style = solid, label="jobQueueName"];
12->6 [style = solid, label="jobQueueName"];
48->39 [style = bold, label=""];
24->30 [style = bold, label=""];
47->49 [style = bold, label=""];
12->34 [style = solid, label="jobQueueName"];
28->21 [style = bold, label=""];
19->38 [style = dashed, label="0"];
30->28 [style = bold, label=""];
12->3 [style = solid, label="jobQueueName"];
0->8 [style = bold, label=""];
12->46 [style = solid, label="jobQueueName"];
12->15 [style = solid, label="jobQueueName"];
24->10 [style = bold, label=""];
22->29 [style = dotted, label="true"];
50->43 [style = bold, label=""];
26->32 [style = bold, label=""];
26->45 [style = dashed, label="0"];
22->9 [style = bold, label=""];
12->30 [style = solid, label="jobQueueName"];
12->31 [style = solid, label="jobQueueName"];
12->23 [style = solid, label="jobQueueName"];
21->25 [style = bold, label=""];
12->1 [style = bold, label=""];
46->41 [style = bold, label=""];
3->0 [style = bold, label=""];
12->21 [style = solid, label="jobQueueName"];
25->41 [style = dashed, label="0"];
8->17 [style = bold, label=""];
12->48 [style = solid, label="jobQueueName"];
12->4 [style = solid, label="jobQueueName"];
49->46 [style = bold, label=""];
10->2 [style = bold, label=""];
12->24 [style = solid, label="jobQueueName"];
27->29 [style = bold, label=""];
6->7 [style = bold, label=""];
38->33 [style = bold, label=""];
41->50 [style = bold, label=""];
4->23 [style = bold, label=""];
19->33 [style = bold, label=""];
21->46 [style = dashed, label="0"];
12->9 [style = solid, label="jobQueueName"];
12->10 [style = solid, label="jobQueueName"];
23->15 [style = bold, label=""];
9->20 [style = bold, label=""];
31->38 [style = bold, label=""];
5->18 [style = bold, label=""];
15->3 [style = bold, label=""];
37->12 [style = bold, label=""];
11->31 [style = bold, label=""];
40->12 [style = bold, label=""];
12->43 [style = solid, label="jobQueueName"];
1->6 [style = bold, label=""];
33->24 [style = bold, label=""];
22->27 [style = dotted, label="true"];
32->29 [style = solid, label="i"];
35->26 [style = bold, label=""];
31->19 [style = bold, label=""];
12->11 [style = solid, label="jobQueueName"];
7->13 [style = bold, label=""];
22->34 [style = dotted, label="true"];
39->44 [style = bold, label=""];
12->28 [style = solid, label="jobQueueName"];
43->48 [style = bold, label=""];
25->32 [style = bold, label=""];
12->0 [style = solid, label="jobQueueName"];
18->36 [style = bold, label=""];
17->11 [style = bold, label=""];
12->2 [style = solid, label="jobQueueName"];
14->26 [style = bold, label=""];
24->10 [style = dotted, label="true"];
0->47 [style = bold, label=""];
36->27 [style = bold, label=""];
12->44 [style = solid, label="jobQueueName"];
18->27 [style = bold, label=""];
45->50 [style = bold, label=""];
32->22 [style = solid, label="i"];
22->34 [style = bold, label=""];
24->2 [style = dotted, label="true"];
29->22 [style = bold, label=""];
2->30 [style = bold, label=""];
16->12 [style = bold, label=""];
12->20 [style = solid, label="jobQueueName"];
34->27 [style = bold, label=""];
13->4 [style = bold, label=""];
}
