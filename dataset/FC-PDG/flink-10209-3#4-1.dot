digraph {
12 [style = filled, label = "tEnv.executeSql(initialValues).await()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "KafkaTableTestUtils.waitingExpectedResults(\"MySink\",expected,Duration.ofSeconds(5))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String createSink = \"CREATE TABLE MySink(\" + \" `id` INT,\" + \" `cnt` BIGINT\" + \") WITH (\" + \" 'connector' = 'values'\" + \")\"@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KafkaTableTestUtils.waitingExpectedResults(\"MySink\",expected,Duration.ofSeconds(5))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String bootstraps = standardProps.getProperty(\"bootstrap.servers\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "isLegacyConnector@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tEnv.executeSql(createTable)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tableResult.getJobClient().ifPresent(null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "deleteTestTopic(topic)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final String createTable = String.format(\"CREATE TABLE kafka (\" + \" `partition_id` INT,\" + \" `value` INT,\" + \" `timestamp` TIMESTAMP(3),\" + \" WATERMARK FOR `timestamp` AS `timestamp`\" + \") WITH (\" + \" 'connector' = 'kafka',\" + \" 'topic' = '%s',\" + \" 'properties.bootstrap.servers' = '%s',\" + \" 'properties.group.id' = '%s',\" + \" 'scan.startup.mode' = 'earliest-offset',\" + \" 'sink.partitioner' = '%s',\" + \" 'format' = '%s'\" + \")\",topic,bootstraps,groupId,.getName(),format)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "TableResult tableResult = tEnv.executeSql(\"INSERT INTO MySink\" + \"SELECT `partition_id` as `id`, COUNT(`value`) as `cnt`\" + \"FROM kafka\" + \"GROUP BY `partition_id`, TUMBLE(`timestamp`, INTERVAL '1' HOUR) \")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tEnv.executeSql(createSink)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String groupId = getStandardProps().getProperty(\"group.id\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "env.setParallelism(1)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testPerPartitionWatermarkWithIdleSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String topic = \"per_partition_watermark_topic_\" + format@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tEnv.getConfig().getConfiguration().set(TABLE_EXEC_SOURCE_IDLE_TIMEOUT,Duration.ofMillis(100))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testPerPartitionWatermarkKafka['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createTestTopic(topic,4,1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tEnv.executeSql(initialValues).await()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final String topic = \"idle_partition_watermark_topic_\" + format@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String groupId = standardProps.getProperty(\"group.id\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String createTable = String.format(\"CREATE TABLE kafka (\" + \" `partition_id` INT,\" + \" `name` STRING,\" + \" `timestamp` TIMESTAMP(3),\" + \" WATERMARK FOR `timestamp` AS `timestamp`\" + \") WITH (\" + \" 'connector' = 'kafka',\" + \" 'topic' = '%s',\" + \" 'properties.bootstrap.servers' = '%s',\" + \" 'properties.group.id' = '%s',\" + \" 'scan.startup.mode' = 'earliest-offset',\" + \" 'sink.partitioner' = '%s',\" + \" 'format' = '%s'\" + \")\",topic,bootstraps,groupId,.getName(),format)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tEnv.executeSql(createSink)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final List<String> expected = Arrays.asList(\"+I(0, partition-0-name-0, 2020-03-08T13:12:11.123(\",\"+I(0, partition-0-name-1, 2020-03-08T14:12:12.223(\",\"+I(0, partition-0-name-2, 2020-03-08T15:12:13.323(\",\"+I(1, partition-1-name-0, 2020-03-09T13:13:11.123(\",\"+I(1, partition-1-name-1, 2020-03-09T15:13:11.133(\",\"+I(1, partition-1-name-2, 2020-03-09T16:13:11.143(\",\"+I(2, partition-2-name-0, 2020-03-10T13:12:14.123(\",\"+I(2, partition-2-name-1, 2020-03-10T14:12:14.123(\",\"+I(2, partition-2-name-2, 2020-03-10T14:13:14.123(\",\"+I(2, partition-2-name-3, 2020-03-10T14:14:14.123(\",\"+I(2, partition-2-name-4, 2020-03-10T14:15:14.123(\",\"+I(2, partition-2-name-5, 2020-03-10T14:16:14.123(\",\"+I(3, partition-3-name-0, 2020-03-11T17:12:11.123(\",\"+I(3, partition-3-name-1, 2020-03-11T18:12:11.123(\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final List<String> expected = Arrays.asList(\"+I(0, 2(\",\"+I(1, 2(\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testPerPartitionWatermarkKafka['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "String initialValues = \"INSERT INTO kafka\" + \"VALUES\" + \" (0, 0, TIMESTAMP '2020-03-08 13:12:11.123'),\" + \" (0, 1, TIMESTAMP '2020-03-08 13:15:12.223'),\" + \" (0, 2, TIMESTAMP '2020-03-08 16:12:13.323'),\" + \" (1, 3, TIMESTAMP '2020-03-08 13:13:11.123'),\" + \" (1, 4, TIMESTAMP '2020-03-08 13:19:11.133'),\" + \" (1, 5, TIMESTAMP '2020-03-08 16:13:11.143')\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String bootstraps = getBootstrapServers()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "tEnv.executeSql(createTable)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->0 [style = solid, label="expected"];
8->28 [style = bold, label=""];
5->14 [style = solid, label="groupId"];
28->10 [style = solid, label="createSink"];
28->10 [style = bold, label=""];
25->16 [style = solid, label="topic"];
21->19 [style = bold, label=""];
6->15 [style = solid, label="topic"];
14->4 [style = solid, label="createTable"];
1->14 [style = solid, label="bootstraps"];
3->25 [style = bold, label=""];
10->27 [style = bold, label=""];
26->3 [style = bold, label=""];
1->19 [style = dashed, label="0"];
29->0 [style = bold, label=""];
18->17 [style = bold, label=""];
5->23 [style = solid, label="groupId"];
3->6 [style = bold, label=""];
21->14 [style = solid, label="groupId"];
4->18 [style = bold, label=""];
20->3 [style = bold, label=""];
15->30 [style = bold, label=""];
3->9 [style = dotted, label="true"];
8->28 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
25->16 [style = bold, label=""];
0->15 [style = bold, label=""];
7->3 [style = bold, label=""];
6->14 [style = solid, label="topic"];
13->2 [style = solid, label="expected"];
9->6 [style = bold, label=""];
25->30 [style = solid, label="topic"];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
17->12 [style = bold, label=""];
2->0 [style = bold, label=""];
14->4 [style = bold, label=""];
18->22 [style = bold, label=""];
19->14 [style = bold, label=""];
8->11 [style = solid, label="createSink"];
19->14 [style = solid, label="bootstraps"];
10->13 [style = bold, label=""];
6->25 [style = dashed, label="0"];
6->16 [style = bold, label=""];
12->8 [style = bold, label=""];
11->10 [style = bold, label=""];
16->21 [style = bold, label=""];
9->25 [style = bold, label=""];
1->24 [style = bold, label=""];
22->12 [style = bold, label=""];
25->23 [style = solid, label="topic"];
23->18 [style = solid, label="createTable"];
16->5 [style = bold, label=""];
5->21 [style = dashed, label="0"];
1->14 [style = bold, label=""];
27->29 [style = bold, label=""];
1->23 [style = solid, label="bootstraps"];
8->11 [style = bold, label=""];
23->18 [style = bold, label=""];
13->2 [style = bold, label=""];
24->23 [style = bold, label=""];
6->16 [style = solid, label="topic"];
}
