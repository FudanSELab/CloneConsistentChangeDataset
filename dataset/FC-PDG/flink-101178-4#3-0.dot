digraph {
4 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(\"localhost\",cluster.getLeaderRPCPort())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "env.generateSequence(1,10).rebalance().map(new FailingMapper2<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRestart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "executeAndRunAssertions(env)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFailedRunThenSuccessfulRun['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long sum = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRestart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(\"localhost\",cluster.getLeaderRPCPort())env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.getConfig().disableSysoutLogging()env.generateSequence(1,10).rebalance().map(new FailingMapper1<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))try {JobExecutionResult res = env.execute()String msg = res == null? \"null result\": \"result in \" + res.getNetRuntime() + \" ms\"fail(\"The program should have failed, but returned \" + msg)}catch (ProgramInvocationException e) }@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Long> resultCollection = new ArrayList<Long>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.setParallelism(4)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(55,sum)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{ExecutionEnvironment env = ExecutionEnvironment.createRemoteEnvironment(\"localhost\",cluster.getLeaderRPCPort())env.setParallelism(4)env.setRestartStrategy(RestartStrategies.noRestart())env.getConfig().disableSysoutLogging()env.generateSequence(1,10).rebalance().map(new FailingMapper1<Long>()).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return value1 + value2}}).output(new LocalCollectionOutputFormat<Long>(resultCollection))executeAndRunAssertions(env)long sum = 0for (long l : resultCollection){sum += l}assertEquals(55,sum)}@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sum += l@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.getConfig().disableSysoutLogging()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->12 [style = solid, label="env"];
0->12 [style = solid, label="resultCollection"];
5->9 [style = bold, label=""];
0->11 [style = bold, label=""];
6->0 [style = bold, label=""];
4->9 [style = solid, label="env"];
8->1 [style = bold, label=""];
0->14 [style = bold, label=""];
0->14 [style = solid, label="resultCollection"];
3->7 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
0->5 [style = solid, label="resultCollection"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
11->8 [style = bold, label=""];
13->0 [style = bold, label=""];
7->2 [style = solid, label="sum"];
4->11 [style = dashed, label="0"];
11->9 [style = solid, label="env"];
}
