digraph {
1 [style = filled, label = "createIndex(\"CREATE INDEX ON %s(keys(categories))\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE categories CONTAINS ?\",\"foo\"),row(\"test\",5,map(\"lmn\",\"foo\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEmpty(execute(\"SELECT * FROM %s WHERE account = ? AND categories CONTAINS KEY ?\",\"xyz\",\"lmn\"))@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS KEY ? AND categories CONTAINS ?\",\"test\",5,\"lmn\",\"foo\")@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEmpty(execute(\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS KEY ? AND categories CONTAINS KEY ? ALLOW FILTERING\",\"test\",5,\"lmn\",\"notPresent\"))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertInvalidMessage(\"Unsupported null value for column categories\",\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS KEY ?\",\"test\",5,null)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ?\",\"test\",5,\"foo\"),row(\"test\",5,map(\"lmn\",\"foo\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS KEY ?\",\"test\",5,\"lmn\"),row(\"test\",5,map(\"lmn\",\"foo\")))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE account = ? AND categories CONTAINS KEY ?\",\"test\",\"lmn\"),row(\"test\",5,map(\"lmn\",\"foo\")))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testMapKeyContainsWithIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEmpty(execute(\"SELECT * FROM %s WHERE account = ? AND categories CONTAINS ?\",\"xyz\",\"foo\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testMapValueContainsWithIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertInvalidMessage(\"Unsupported unset value for column categories\",\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS KEY ?\",\"test\",5,unset())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertInvalidMessage(\"Unsupported unset value for column categories\",\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ?\",\"test\",5,unset())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ? AND categories CONTAINS ?\",\"test\",5,\"foo\",\"notPresent\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE account = ? AND categories CONTAINS ?\",\"test\",\"foo\"),row(\"test\",5,map(\"lmn\",\"foo\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testMapKeyContainsWithIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertRows(execute(\"SELECT * FROM %s WHERE categories CONTAINS KEY ?\",\"lmn\"),row(\"test\",5,map(\"lmn\",\"foo\")))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertInvalidMessage(StatementRestrictions.REQUIRES_ALLOW_FILTERING_MESSAGE,\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS KEY ? AND categories CONTAINS KEY ?\",\"test\",5,\"lmn\",\"notPresent\")@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "createIndex(\"CREATE INDEX ON %s(categories)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "execute(\"INSERT INTO %s (account, id , categories) VALUES (?, ?, ?)\",\"test\",5,map(\"lmn\",\"foo\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createTable(\"CREATE TABLE %s (account text, id int, categories map<text,text>, PRIMARY KEY (account, id))\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertInvalidMessage(\"Unsupported null value for column categories\",\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ?\",\"test\",5,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEmpty(execute(\"SELECT * FROM %s WHERE account = ? AND id = ? AND categories CONTAINS ? AND categories CONTAINS ? ALLOW FILTERING\",\"test\",5,\"foo\",\"notPresent\"))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "beforeAndAfterFlush(null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->3 [style = bold, label=""];
15->23 [style = bold, label=""];
1->4 [style = bold, label=""];
23->16 [style = bold, label=""];
2->19 [style = dashed, label="0"];
7->1 [style = bold, label=""];
22->15 [style = bold, label=""];
12->20 [style = dashed, label="0"];
11->16 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
4->13 [style = bold, label=""];
4->19 [style = bold, label=""];
3->11 [style = bold, label=""];
11->12 [style = bold, label=""];
1->21 [style = dashed, label="0"];
4->2 [style = bold, label=""];
10->22 [style = dashed, label="0"];
8->24 [style = dashed, label="0"];
2->10 [style = bold, label=""];
24->18 [style = bold, label=""];
10->6 [style = bold, label=""];
14->7 [style = bold, label=""];
0->7 [style = bold, label=""];
17->7 [style = bold, label=""];
3->23 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
12->8 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
7->21 [style = bold, label=""];
20->24 [style = bold, label=""];
16->20 [style = bold, label=""];
19->22 [style = bold, label=""];
21->4 [style = bold, label=""];
}
