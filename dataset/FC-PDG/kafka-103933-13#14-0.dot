digraph {
4 [style = filled, label = "buildFetcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(subscriptions.isFetchable(tp0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.prepareResponse(null,listOffsetResponse(Errors.NONE,1L,5L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "buildFetcher(OffsetResetStrategy.EARLIEST,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,isolationLevel)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(5,subscriptions.position(tp0).offset)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testUpdateFetchPositionResetToDefaultOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "client.prepareResponse(listOffsetRequestMatcher(ListOffsetRequest.EARLIEST_TIMESTAMP,Optional.of(validLeaderEpoch)),listOffsetResponse(Errors.NONE,1L,5L))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "client.prepareResponse(listOffsetRequestMatcher(ListOffsetRequest.EARLIEST_TIMESTAMP,validLeaderEpoch),listOffsetResponse(Errors.NONE,1L,5L))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testUpdateFetchPositionResetToDefaultOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IsolationLevel isolationLevel@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testListOffsetsSendsIsolationLevel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(subscriptions.isOffsetResetNeeded(tp0))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "subscriptions.requestOffsetReset(tp0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(subscriptions.isOffsetResetNeeded(tp0))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "subscriptions.requestOffsetReset(tp0,OffsetResetStrategy.LATEST)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fetcher.resetOffsetsIfNeeded()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "consumerClient.pollNoWakeup()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "consumerClient.pollNoWakeup()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(subscriptions.isFetchable(tp0))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fetcher.resetOffsetsIfNeeded()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
0->16 [style = bold, label=""];
15->13 [style = bold, label=""];
9->10 [style = dashed, label="0"];
11->4 [style = bold, label=""];
20->0 [style = bold, label=""];
7->4 [style = bold, label=""];
10->6 [style = bold, label=""];
17->19 [style = bold, label=""];
14->20 [style = solid, label="isolationLevel"];
18->14 [style = dotted, label="true"];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
8->17 [style = bold, label=""];
18->20 [style = bold, label=""];
3->2 [style = bold, label=""];
4->20 [style = dashed, label="0"];
12->8 [style = bold, label=""];
0->1 [style = bold, label=""];
1->16 [style = dashed, label="0"];
19->15 [style = bold, label=""];
1->10 [style = bold, label=""];
16->12 [style = bold, label=""];
2->5 [style = bold, label=""];
}
