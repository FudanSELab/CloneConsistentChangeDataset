digraph {
4 [style = filled, label = "ft.setIndexOptions(IndexOptions.DOCS)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "((CollationFieldType)ft).setCollator(collator)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "MappedFieldType ft = new CollationFieldType(\"field\",collator)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ft.setName(\"field\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collator collator = Collator.getInstance(ULocale.ROOT).freeze()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testTermsQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testTermsQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "List<BytesRef> terms = new ArrayList<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "terms.add(new BytesRef(\"foo\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ft.setIndexOptions(IndexOptions.NONE)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "terms.add(new BytesRef(\"bar\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testTermsQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<BytesRef> terms = new ArrayList<>()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "terms.add(new BytesRef(barKey.bytes,0,barKey.size))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@12@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "terms.add(new BytesRef(fooKey.bytes,0,fooKey.size))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MappedFieldType unsearchable = new CollationFieldType(\"field\",false,true,collator,Collections.emptyMap())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RawCollationKey fooKey = collator.getRawCollationKey(\"foo\",null)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "MappedFieldType ft = createDefaultFieldType()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Collator collator = DEFAULT_COLLATOR@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "RawCollationKey barKey = collator.getRawCollationKey(\"bar\",null)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(new TermInSetQuery(\"field\",terms),ft.termsQuery(Arrays.asList(\"foo\",\"bar\"),null))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->16 [style = dashed, label="0"];
16->18 [style = bold, label=""];
20->13 [style = bold, label=""];
0->11 [style = solid, label="collator"];
1->12 [style = solid, label="terms"];
9->4 [style = bold, label=""];
3->14 [style = bold, label=""];
18->15 [style = bold, label=""];
0->11 [style = bold, label=""];
10->22 [style = dashed, label="0"];
2->10 [style = bold, label=""];
17->19 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
19->16 [style = solid, label="collator"];
7->9 [style = bold, label=""];
20->1 [style = solid, label="terms"];
5->1 [style = bold, label=""];
2->21 [style = dashed, label="0"];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
1->21 [style = bold, label=""];
15->20 [style = bold, label=""];
22->12 [style = bold, label=""];
11->13 [style = bold, label=""];
14->10 [style = dashed, label="0"];
13->5 [style = bold, label=""];
19->2 [style = solid, label="collator"];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
14->8 [style = bold, label=""];
4->1 [style = bold, label=""];
23->7 [style = bold, label=""];
6->7 [style = bold, label=""];
}
