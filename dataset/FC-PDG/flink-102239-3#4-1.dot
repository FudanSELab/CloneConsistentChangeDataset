digraph {
15 [style = filled, label = "assertEquals(\"\",result.getField(1))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(format.reachedEnd())@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "format.setFieldDelimiter(\"|-\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotNull(result)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"abc\",result.getField(0))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "format.configure(new Configuration())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "readStringFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(\"def\",result.getField(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"abc\",result.getField(0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(result)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "result = format.nextRecord(result)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(result)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"ghijk\",result.getField(2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String fileContent = \"abc|def|ghijkabc||hhg|||\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FileInputSplit split = createTempFile(fileContent)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = format.nextRecord(result)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"hhg\",result.getField(2))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result = format.nextRecord(result)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,fieldTypes,\"\",\"|\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "TypeInformation(( fieldTypes = new TypeInformation((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b4520c@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,typeInfo,\"\",\"|\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RowTypeInfo typeInfo = new RowTypeInfo(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNotNull(result)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(format.reachedEnd())@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String fileContent = \"abc|-def|-ghijkabc|-|-hhg|-|-|-\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(\"\",result.getField(1))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Row result = new Row(3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "result = format.nextRecord(result)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "format.open(split)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNull(result)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "readStringFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "readStringFieldsWithTrailingDelimiters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"\",result.getField(2))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"\",result.getField(0))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->22 [style = bold, label=""];
12->26 [style = solid, label="result"];
27->13 [style = bold, label=""];
9->14 [style = solid, label="typeInfo"];
16->13 [style = bold, label=""];
33->20 [style = bold, label=""];
10->12 [style = solid, label="result"];
24->1 [style = solid, label="result"];
6->15 [style = solid, label="result"];
11->17 [style = solid, label="result"];
28->30 [style = bold, label=""];
3->25 [style = bold, label=""];
8->19 [style = bold, label=""];
8->6 [style = solid, label="result"];
2->6 [style = bold, label=""];
26->29 [style = bold, label=""];
7->17 [style = solid, label="split"];
17->18 [style = solid, label="result"];
0->21 [style = bold, label=""];
13->7 [style = solid, label="fileContent"];
24->0 [style = solid, label="result"];
12->26 [style = bold, label=""];
25->2 [style = bold, label=""];
31->7 [style = bold, label=""];
14->33 [style = bold, label=""];
6->15 [style = bold, label=""];
25->2 [style = solid, label="result"];
15->5 [style = bold, label=""];
4->0 [style = bold, label=""];
22->4 [style = bold, label=""];
21->12 [style = bold, label=""];
31->7 [style = solid, label="fileContent"];
7->9 [style = bold, label=""];
28->30 [style = solid, label="fieldTypes"];
30->11 [style = bold, label=""];
20->23 [style = bold, label=""];
18->8 [style = solid, label="result"];
7->28 [style = bold, label=""];
13->31 [style = dashed, label="0"];
10->22 [style = solid, label="result"];
13->7 [style = bold, label=""];
5->24 [style = bold, label=""];
17->18 [style = bold, label=""];
17->25 [style = solid, label="result"];
8->19 [style = solid, label="result"];
9->14 [style = bold, label=""];
11->17 [style = bold, label=""];
18->8 [style = bold, label=""];
25->24 [style = solid, label="result"];
0->21 [style = solid, label="result"];
24->1 [style = bold, label=""];
23->11 [style = bold, label=""];
1->10 [style = bold, label=""];
6->10 [style = solid, label="result"];
19->3 [style = bold, label=""];
32->31 [style = bold, label=""];
7->23 [style = solid, label="split"];
14->20 [style = bold, label=""];
}
