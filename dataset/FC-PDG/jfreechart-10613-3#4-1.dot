digraph {
13 [style = filled, label = "assertEquals(\"Center point on the axis should geometric mean of the \" + \"bounds.\",Math.sqrt(this.axis.getUpperBound() * this.axis.getLowerBound()),this.axis.java2DToValue(plotArea.getX() + (plotArea.getWidth() / 2),plotArea,edge),EPSILON)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"Center point on the axis should geometric mean of the bounds.\",plotArea.getX() + (plotArea.getWidth() / 2),this.axis.valueToJava2D(Math.sqrt(this.axis.getLowerBound() * this.axis.getUpperBound()),plotArea,edge),EPSILON)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"Right most point on the axis should be end of range.\",plotArea.getX() + plotArea.getWidth(),this.axis.valueToJava2D(this.axis.getUpperBound(),plotArea,edge),EPSILON)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "RectangleEdge edge@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Rectangle2D plotArea@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "checkPointsToValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "checkPointsToJava2D['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(plotArea.getX() + plotArea.getWidth(),this.axis.valueToJava2D(this.axis.getUpperBound(),plotArea,edge),EPSILON,\"Right most point on the axis should be end of range.\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Rectangle2D plotArea@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(plotArea.getX(),this.axis.valueToJava2D(this.axis.getLowerBound(),plotArea,edge),EPSILON,\"Left most point on the axis should be beginning of range.\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(\"Left most point on the axis should be beginning of \" + \"range.\",this.axis.getLowerBound(),this.axis.java2DToValue(plotArea.getX(),plotArea,edge),EPSILON)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"Right most point on the axis should be end of range.\",this.axis.getUpperBound(),this.axis.java2DToValue(plotArea.getX() + plotArea.getWidth(),plotArea,edge),EPSILON)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RectangleEdge edge@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"Left most point on the axis should be beginning of \" + \"range.\",plotArea.getX(),this.axis.valueToJava2D(this.axis.getLowerBound(),plotArea,edge),EPSILON)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(plotArea.getX() + (plotArea.getWidth() / 2),this.axis.valueToJava2D(Math.sqrt(this.axis.getLowerBound() * this.axis.getUpperBound()),plotArea,edge),EPSILON,\"Center point on the axis should geometric mean of the bounds.\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "checkPointsToJava2D['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RectangleEdge edge@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4->10 [style = solid, label="edge"];
16->14 [style = solid, label="edge"];
3->6 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
15->14 [style = bold, label=""];
8->9 [style = solid, label="plotArea"];
16->11 [style = solid, label="edge"];
8->6 [style = solid, label="plotArea"];
2->5 [style = solid, label="edge"];
1->3 [style = bold, label=""];
4->3 [style = solid, label="plotArea"];
1->4 [style = dotted, label="true"];
16->13 [style = solid, label="edge"];
15->16 [style = dotted, label="true"];
4->9 [style = solid, label="edge"];
12->14 [style = solid, label="plotArea"];
3->5 [style = bold, label=""];
2->3 [style = solid, label="edge"];
12->13 [style = solid, label="plotArea"];
5->0 [style = bold, label=""];
4->6 [style = solid, label="edge"];
5->10 [style = dashed, label="0"];
4->0 [style = solid, label="plotArea"];
6->10 [style = bold, label=""];
11->13 [style = bold, label=""];
7->6 [style = bold, label=""];
7->4 [style = dotted, label="true"];
0->13 [style = dashed, label="0"];
12->11 [style = solid, label="plotArea"];
15->12 [style = dotted, label="true"];
10->9 [style = bold, label=""];
0->9 [style = dashed, label="0"];
4->5 [style = solid, label="plotArea"];
1->2 [style = dotted, label="true"];
3->14 [style = dashed, label="0"];
7->8 [style = dotted, label="true"];
8->10 [style = solid, label="plotArea"];
14->11 [style = bold, label=""];
2->0 [style = solid, label="edge"];
}
