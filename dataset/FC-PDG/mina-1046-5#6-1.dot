digraph {
9 [style = filled, label = "testPositionBuffer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "bb1.flip()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ioBuffer.get()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ByteBuffer bb3 = ByteBuffer.allocate(4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IoBuffer ioBuffer = IoBuffer.wrap(bb1,bb2,bb3)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testPositionAboveValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ByteBuffer bb1 = ByteBuffer.allocate(4)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(i,ioBuffer.position())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testPositionBuffer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "bb2.put(\"3456\".getBytes())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "bb3.flip()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bb1.put(\"012\".getBytes())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "bb2.flip()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ByteBuffer bb2 = ByteBuffer.allocate(4)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "bb3.put(\"789\".getBytes())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IoBuffer ioBuffer = new IoBuffer(bb1,bb2,bb3)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < ioBuffer.limit()@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ioBuffer.position(11)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
12->16 [style = solid, label="bb3"];
1->6 [style = solid, label="i"];
10->14 [style = solid, label="bb1"];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
5->14 [style = bold, label=""];
9->10 [style = bold, label=""];
1->4 [style = solid, label="i"];
0->15 [style = bold, label=""];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
10->16 [style = solid, label="bb1"];
3->4 [style = solid, label="i"];
13->16 [style = solid, label="bb2"];
3->6 [style = solid, label="i"];
5->16 [style = bold, label=""];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
13->14 [style = solid, label="bb2"];
8->5 [style = bold, label=""];
18->10 [style = bold, label=""];
16->1 [style = bold, label=""];
6->4 [style = dotted, label="true"];
12->8 [style = bold, label=""];
11->13 [style = bold, label=""];
6->7 [style = dotted, label="true"];
10->2 [style = bold, label=""];
15->12 [style = bold, label=""];
14->16 [style = dashed, label="0"];
1->3 [style = solid, label="i"];
6->3 [style = dotted, label="true"];
12->14 [style = solid, label="bb3"];
2->11 [style = bold, label=""];
13->0 [style = bold, label=""];
}
