digraph {
4 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignmentActive))).andReturn(singleton(task00))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignmentActive = singletonMap(taskId00,taskId00Partitions)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectRestoreToBeCompleted(consumer,changeLogReader)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shouldNotCommitOnHandleAssignmentIfNoTaskClosed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "task00.setCommittableOffsetsAndMetadata(offsets00)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds(),null),is(true))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertThat(task10.commitPrepared,is(false))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldNotCommitOnHandleAssignmentIfNoTaskClosed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "taskManager.handleAssignment(assignmentActive,assignmentStandby)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(task00.commitNeeded,is(true))@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(taskManager.tryToCompleteRestoration(time.milliseconds()),is(true))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "task00.setCommitNeeded()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(task00.state(),is(Task.State.RUNNING))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "shouldNotCommitOnHandleAssignmentIfOnlyStandbyTaskClosed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "replay(activeTaskCreator,standbyTaskCreator,consumer,changeLogReader)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expect(standbyTaskCreator.createTasks(eq(assignmentStandby))).andReturn(singletonList(task10))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final StateMachineTask task10 = new StateMachineTask(taskId10,taskId10Partitions,false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(task10.state(),is(Task.State.RUNNING))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> offsets00 = singletonMap(t1p0,new OffsetAndMetadata(0L,null))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "taskManager.handleAssignment(assignmentActive,Collections.emptyMap())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignmentStandby = singletonMap(taskId10,taskId10Partitions)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final StateMachineTask task00 = new StateMachineTask(taskId00,taskId00Partitions,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "taskManager.handleAssignment(assignmentActive,assignmentStandby)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
15->2 [style = bold, label=""];
9->15 [style = solid, label="assignmentStandby"];
2->19 [style = dashed, label="0"];
1->6 [style = solid, label="assignmentActive"];
21->0 [style = bold, label=""];
11->1 [style = bold, label=""];
7->12 [style = bold, label=""];
20->0 [style = bold, label=""];
12->15 [style = bold, label=""];
3->11 [style = bold, label=""];
10->3 [style = bold, label=""];
14->17 [style = bold, label=""];
8->6 [style = bold, label=""];
15->19 [style = bold, label=""];
9->16 [style = bold, label=""];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
6->22 [style = dashed, label="0"];
8->22 [style = bold, label=""];
2->13 [style = bold, label=""];
1->22 [style = solid, label="assignmentActive"];
6->14 [style = bold, label=""];
19->13 [style = bold, label=""];
0->4 [style = solid, label="task00"];
9->6 [style = solid, label="assignmentStandby"];
5->10 [style = solid, label="offsets00"];
16->4 [style = bold, label=""];
13->8 [style = bold, label=""];
22->14 [style = bold, label=""];
18->0 [style = bold, label=""];
1->15 [style = solid, label="assignmentActive"];
11->7 [style = solid, label="task10"];
0->5 [style = bold, label=""];
}
