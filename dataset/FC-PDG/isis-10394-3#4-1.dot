digraph {
13 [style = filled, label = "final Class<?> correspondingClass@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "allowingObjectSpecHas(,mockEncodableFacet)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int value = 123@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertSame(mockObjectSpec,adapter.getSpecification())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Class<?> correspondingClass@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "whenReprIsDouble['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "whenReprIsInteger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "whenReprIsInteger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "representation = new JsonRepresentation(IntNode.valueOf(value))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final double value = 123.45@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "allowingObjectSpecCorrespondingClassAndSpecIdIs(correspondingClass)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "representation = new JsonRepresentation(DoubleNode.valueOf(value))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "val adapter = jsonValueEncoder.asAdapter(mockObjectSpec,representation,null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "context.checking(new Expectations(){})@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->2 [style = solid, label="correspondingClass"];
8->0 [style = solid, label="value"];
9->4 [style = bold, label=""];
1->3 [style = bold, label=""];
11->10 [style = solid, label="value"];
3->6 [style = bold, label=""];
4->2 [style = bold, label=""];
7->2 [style = solid, label="correspondingClass"];
0->10 [style = dashed, label="0"];
8->0 [style = bold, label=""];
0->3 [style = solid, label="representation"];
12->13 [style = dotted, label="true"];
12->4 [style = bold, label=""];
11->10 [style = bold, label=""];
5->7 [style = dotted, label="true"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
7->13 [style = dashed, label="0"];
9->7 [style = dotted, label="true"];
8->11 [style = dashed, label="0"];
10->1 [style = bold, label=""];
10->3 [style = solid, label="representation"];
2->11 [style = bold, label=""];
2->8 [style = bold, label=""];
}
