digraph {
1 [style = filled, label = "testTableModifyInsertWithSubQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "that.doWithConnection(new Function<CalciteConnection,Void>(){public Void apply(CalciteConnection connection){try {final String sql = \"UPDATE \"foodmart\".\"expense_fact\"\" + \" SET \"account_id\"=888\" + \" WHERE \"store_id\"=666\"final String explain = \"PLAN=JdbcToEnumerableConverter\" + \" JdbcTableModify(table=((foodmart, expense_fact((, operation=(UPDATE(, updateColumnList=((account_id((, sourceExpressionList=((888((, flattened=(false()\" + \" JdbcProject(store_id=($0(, account_id=($1(, exp_date=($2(, time_id=($3(, category_id=($4(, currency_id=($5(, amount=($6(, EXPR$0=(888()\" + \" JdbcFilter(condition=(=($0, 666)()\" + \" JdbcTableScan(table=((foodmart, expense_fact(()\"final String jdbcSql = \"UPDATE \"foodmart\".\"expense_fact\"\" + \" SET \"account_id\" = 888\" + \"WHERE \"store_id\" = 666\"that.query(sql).explainContains(explain).planUpdateHasSql(jdbcSql,1)return null}catch (SQLException e) }})@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final AssertThat that = CalciteAssert.model(JdbcTest.FOODMART_MODEL).enable(CalciteAssert.DB == DatabaseInstance.HSQLDB)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testTableModifyInsertWithSubQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testTableModifyUpdate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
3->2 [style = bold, label=""];
1->2 [style = bold, label=""];
}
