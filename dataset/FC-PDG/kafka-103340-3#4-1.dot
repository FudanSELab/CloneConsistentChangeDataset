digraph {
26 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,0L,compression,CREATE_TIME,firstBatchRecords))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSimpleBatchIteration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertNull(logInputStream.nextBatch())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SimpleRecord(( secondBatchRecords = new SimpleRecord((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b62a41@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertGenericRecordBatchData(firstBatch,0L,3241324L,firstBatchRecords)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNoProducerData(secondBatch)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "fileRecords.flush()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "FileLogInputStream logInputStream = new FileLogInputStream(fileRecords,0,fileRecords.sizeInBytes())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "SimpleRecord firstBatchRecord = new SimpleRecord(3241324L,\"a\".getBytes(),\"foo\".getBytes())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SimpleRecord(( firstBatchRecords = new SimpleRecord((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b62a28@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,0L,compression,CREATE_TIME,firstBatchRecord))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,1L,compression,CREATE_TIME,secondBatchRecords))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FileLogInputStream logInputStream = new FileLogInputStream(fileRecords.channel(),0,fileRecords.sizeInBytes())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FileChannelRecordBatch firstBatch = logInputStream.nextBatch()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "FileLogInputStream logInputStream = new FileLogInputStream(fileRecords.channel(),0,fileRecords.sizeInBytes())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "FileChannelRecordBatch secondBatch = logInputStream.nextBatch()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertNull(logInputStream.nextBatch())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "FileChannelRecordBatch firstBatch = logInputStream.nextBatch()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSimpleBatchIteration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertGenericRecordBatchData(firstBatch,0L,3241324L,firstBatchRecord)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNoProducerData(firstBatch)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testBatchIterationWithMultipleRecordsPerBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertGenericRecordBatchData(secondBatch,1L,238423489L,secondBatchRecords)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNoProducerData(firstBatch)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fileRecords.append(MemoryRecords.withRecords(magic,1L,compression,CREATE_TIME,secondBatchRecord))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SimpleRecord secondBatchRecord = new SimpleRecord(234280L,\"b\".getBytes(),\"bar\".getBytes())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fileRecords.flush()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "magic < MAGIC_VALUE_V2 && compression == CompressionType.NONE@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
23->25 [style = bold, label=""];
19->18 [style = bold, label=""];
5->14 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->4 [style = solid, label="firstBatchRecord"];
22->19 [style = bold, label=""];
10->14 [style = bold, label=""];
19->17 [style = dotted, label="true"];
1->11 [style = solid, label="firstBatch"];
6->12 [style = solid, label="secondBatch"];
16->24 [style = bold, label=""];
11->6 [style = bold, label=""];
20->28 [style = bold, label=""];
21->27 [style = solid, label="secondBatchRecords"];
6->13 [style = solid, label="secondBatch"];
13->25 [style = solid, label="firstBatch"];
20->28 [style = solid, label="secondBatch"];
19->17 [style = bold, label=""];
7->4 [style = bold, label=""];
28->16 [style = bold, label=""];
27->6 [style = bold, label=""];
13->23 [style = solid, label="firstBatch"];
14->1 [style = bold, label=""];
0->7 [style = bold, label=""];
20->16 [style = solid, label="secondBatch"];
7->12 [style = solid, label="secondBatchRecord"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
21->26 [style = bold, label=""];
26->27 [style = bold, label=""];
25->20 [style = bold, label=""];
21->16 [style = solid, label="secondBatchRecords"];
10->5 [style = bold, label=""];
13->3 [style = bold, label=""];
7->8 [style = solid, label="secondBatchRecord"];
0->2 [style = solid, label="firstBatchRecord"];
1->2 [style = solid, label="firstBatch"];
15->0 [style = bold, label=""];
13->23 [style = bold, label=""];
18->26 [style = solid, label="firstBatchRecords"];
0->18 [style = dashed, label="0"];
4->8 [style = bold, label=""];
1->2 [style = bold, label=""];
18->25 [style = solid, label="firstBatchRecords"];
18->21 [style = bold, label=""];
2->11 [style = bold, label=""];
17->18 [style = bold, label=""];
6->12 [style = bold, label=""];
}
