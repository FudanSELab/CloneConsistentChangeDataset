digraph {
10 [style = filled, label = "assertEquals(1,pendingCallbacks.size())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AbstractRegionMap arm = new TxPutIfAbsentTestableAbstractRegionMap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TXId txId = new TXId(mock(),1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "TXRmtEvent txRmtEvent = mock()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "txApplyPutOnPrimaryConstructsPendingCallbacksWhenPutIfAbsentReturnsExistingEntry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "arm.txApplyPut(Operation.UPDATE,KEY,newValue,false,txId,txRmtEvent,eventId,null,pendingCallbacks,null,null,null,null,1)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "AbstractRegionMap arm = new TxRegionEntryTestableAbstractRegionMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TXId txId = new TXId(arm._getOwner().getMyId(),1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "txApplyPutOnSecondaryConstructsPendingCallbacksWhenRegionEntryExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TXEntryState txEntryState = mock()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "verify(arm._getOwner(),times(1)).txApplyPutPart2(any(),any(),anyLong(),anyBoolean(),anyBoolean(),anyBoolean())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<EntryEventImpl> pendingCallbacks = new ArrayList<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(arm._getOwner(),never()).invokeTXCallbacks(EnumListenerEvent.AFTER_UPDATE,UPDATEEVENT,false)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "arm.txApplyPut(Operation.UPDATE,KEY,newValue,false,txId,null,eventId,null,pendingCallbacks,null,null,txEntryState,null,1)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "EventID eventId = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Object newValue = \"value\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->2 [style = solid, label="pendingCallbacks"];
4->6 [style = bold, label=""];
4->14 [style = dashed, label="0"];
0->4 [style = bold, label=""];
8->9 [style = bold, label=""];
3->16 [style = dashed, label="0"];
4->2 [style = solid, label="txId"];
9->2 [style = bold, label=""];
16->0 [style = bold, label=""];
11->9 [style = bold, label=""];
2->10 [style = bold, label=""];
4->8 [style = bold, label=""];
6->8 [style = bold, label=""];
11->12 [style = solid, label="txEntryState"];
8->11 [style = bold, label=""];
12->10 [style = bold, label=""];
8->2 [style = solid, label="eventId"];
1->3 [style = bold, label=""];
0->12 [style = solid, label="pendingCallbacks"];
9->12 [style = solid, label="newValue"];
9->2 [style = solid, label="newValue"];
8->12 [style = solid, label="eventId"];
3->0 [style = bold, label=""];
4->12 [style = solid, label="txId"];
15->16 [style = bold, label=""];
14->6 [style = bold, label=""];
6->2 [style = solid, label="txRmtEvent"];
13->3 [style = bold, label=""];
14->2 [style = solid, label="txId"];
0->14 [style = bold, label=""];
2->12 [style = dashed, label="0"];
10->5 [style = bold, label=""];
5->7 [style = bold, label=""];
9->12 [style = bold, label=""];
}
