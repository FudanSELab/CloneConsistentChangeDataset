digraph {
14 [style = filled, label = "streamTask.triggerCheckpointAsync(new CheckpointMetaData(42L,1L),CheckpointOptions.forCheckpointWithDefaultLocation())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "MockStreamTask streamTask = task.streamTask@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "streamTask.triggerCheckpointAsync(new CheckpointMetaData(42L,1L),CheckpointOptions.forCheckpointWithDefaultLocation(),false)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(uncaughtException,is(failingCause))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "RunningTask<MockStreamTask> task = runTask(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RuntimeException failingCause = new RuntimeException(\"Test exception\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "streamTask.finishInput()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testUncaughtExceptionInAsynchronousCheckpointingOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "OperatorSnapshotFutures operatorSnapshotResult = new OperatorSnapshotFutures(ExceptionallyDoneFuture.of(failingCause),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testUncaughtExceptionInAsynchronousCheckpointingOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "OperatorSnapshotFutures['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Throwable uncaughtException = uncaughtExceptionHandler.waitForUncaughtException()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "waitTaskIsRunning(streamTask,task.invocationFuture)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FailingDummyEnvironment failingDummyEnvironment = new FailingDummyEnvironment(failingCause)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final TestingUncaughtExceptionHandler uncaughtExceptionHandler = new TestingUncaughtExceptionHandler()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "this(DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "task.waitForTaskCompletion(false)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
14->3 [style = bold, label=""];
16->15 [style = bold, label=""];
8->3 [style = bold, label=""];
0->11 [style = bold, label=""];
6->0 [style = bold, label=""];
3->12 [style = solid, label="uncaughtException"];
3->12 [style = bold, label=""];
8->14 [style = dashed, label="0"];
9->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
0->12 [style = solid, label="failingCause"];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->7 [style = solid, label="failingCause"];
9->14 [style = bold, label=""];
0->11 [style = solid, label="failingCause"];
4->9 [style = solid, label="streamTask"];
1->10 [style = bold, label=""];
11->7 [style = bold, label=""];
13->0 [style = bold, label=""];
}
