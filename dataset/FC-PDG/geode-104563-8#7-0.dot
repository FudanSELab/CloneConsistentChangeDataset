digraph {
39 [style = filled, label = "final Portfolio p1 = new Portfolio(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "SelectResults results = (SelectResults)qs.newQuery(\"Select * from \" + SEPARATOR + \"exampleRegion r where r.status='active'\").execute()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "t1.start()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "int count = 0@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "results = (SelectResults)qs.newQuery(\"Select * from \" + SEPARATOR + \"exampleRegion r where r.status!='inactive'\").execute()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "MemoryIndexStore indexStore = (MemoryIndexStore)cindex.getIndexStorage()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Thread t1 = new Thread(new Runnable(){@Override public void run(){r.put(\"1\",p1)threadsDone.countDown()}})@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "p3.status = \"active\"@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Portfolio p3 = new Portfolio(3)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "r.put(\"3\",p3)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "iterator.hasNext()@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "QueryService qs = utils.getCache().getQueryService()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Portfolio p2 = new Portfolio(2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "iterator.next()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Portfolio p0 = new Portfolio(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testCompactRangeIndexMemoryIndexStoreMaintenance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"incorrect number of entries in collection\",1,count)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CompactRangeIndex cindex = (CompactRangeIndex)index@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "p2.status = \"active\"@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Portfolio p1 = new Portfolio(1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(1,results.size())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"incorrect number of entries in collection\",3,count)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final CountDownLatch threadsDone = new CountDownLatch(2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Thread t2 = new Thread(new Runnable(){@Override public void run(){r.put(\"2\",p2)threadsDone.countDown()}})@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "count++@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(3,results.size())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "index = utils.createIndex(\"compact range index\",\"p.status\",SEPARATOR + \"exampleRegion p\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "{DefaultQuery.testHook = null}@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final CountDownLatch threadsDone = new CountDownLatch(2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(3,results.size())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "r.put(\"0\",p0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{DefaultQuery.testHook = null}@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "DefaultQuery.testHook = new MemoryIndexStoreREToIndexElemTestHook()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Thread t0 = new Thread(new Runnable(){@Override public void run(){r.remove(\"0\")threadsDone.countDown()}})@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "threadsDone.await(90,TimeUnit.SECONDS)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Thread t0 = new Thread(new Runnable(){@Override public void run(){r.remove(\"0\")threadsDone.countDown()}})@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testMemoryIndexStoreMaintenanceTransitionFromElemArrayToTokenToConcurrentHashSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "count++@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CloseableIterator iterator = indexStore.get(\"active\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "r.put(\"1\",p1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "t2.start()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "t0.start()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Region r = utils.getCache().getRegion(SEPARATOR + \"exampleRegion\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testMemoryIndexStoreMaintenanceTransitionFromElemArrayToTokenToConcurrentHashSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(1,results.size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "p0.status = \"active\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "p1.status = \"active\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DefaultQuery.testHook = new MemoryIndexStoreIndexElemToTokenToConcurrentHashSetTestHook()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->36 [style = dashed, label="0"];
11->29 [style = bold, label=""];
29->45 [style = bold, label=""];
35->2 [style = bold, label=""];
33->15 [style = solid, label="count"];
2->26 [style = bold, label=""];
44->46 [style = bold, label=""];
45->40 [style = bold, label=""];
30->43 [style = dashed, label="0"];
36->43 [style = bold, label=""];
10->17 [style = bold, label=""];
24->23 [style = bold, label=""];
21->33 [style = bold, label=""];
6->7 [style = dotted, label="true"];
0->22 [style = bold, label=""];
40->36 [style = bold, label=""];
16->18 [style = bold, label=""];
25->24 [style = bold, label=""];
7->6 [style = bold, label=""];
19->15 [style = bold, label=""];
2->9 [style = solid, label="index"];
39->27 [style = bold, label=""];
15->8 [style = solid, label="count"];
1->27 [style = bold, label=""];
26->10 [style = bold, label=""];
37->2 [style = bold, label=""];
46->42 [style = bold, label=""];
6->20 [style = bold, label=""];
6->19 [style = bold, label=""];
6->8 [style = bold, label=""];
15->6 [style = bold, label=""];
34->38 [style = dashed, label="0"];
38->9 [style = bold, label=""];
27->29 [style = bold, label=""];
2->21 [style = solid, label="index"];
1->39 [style = dashed, label="0"];
6->8 [style = dotted, label="true"];
20->13 [style = bold, label=""];
14->30 [style = bold, label=""];
29->32 [style = bold, label=""];
33->7 [style = solid, label="count"];
3->12 [style = bold, label=""];
22->25 [style = bold, label=""];
20->7 [style = dashed, label="0"];
27->5 [style = bold, label=""];
15->20 [style = solid, label="count"];
10->29 [style = solid, label="p0"];
8->20 [style = solid, label="count"];
31->2 [style = bold, label=""];
19->15 [style = dotted, label="true"];
30->0 [style = bold, label=""];
12->16 [style = solid, label="p3"];
23->38 [style = bold, label=""];
4->14 [style = bold, label=""];
32->16 [style = bold, label=""];
33->19 [style = bold, label=""];
41->21 [style = bold, label=""];
8->7 [style = bold, label=""];
17->39 [style = bold, label=""];
12->11 [style = bold, label=""];
1->32 [style = solid, label="p1"];
23->28 [style = bold, label=""];
5->3 [style = bold, label=""];
39->36 [style = solid, label="p1"];
19->7 [style = bold, label=""];
15->7 [style = solid, label="count"];
19->6 [style = dotted, label="true"];
43->44 [style = bold, label=""];
34->21 [style = bold, label=""];
9->34 [style = bold, label=""];
5->14 [style = solid, label="p2"];
9->41 [style = bold, label=""];
7->47 [style = bold, label=""];
18->4 [style = bold, label=""];
28->9 [style = bold, label=""];
17->1 [style = bold, label=""];
42->22 [style = bold, label=""];
28->24 [style = dashed, label="0"];
}
