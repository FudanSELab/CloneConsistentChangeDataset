digraph {
3 [style = filled, label = "String function = expression.getFunctionName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "constructOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@7@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "classSupplier != null@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(function)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid operation expression %s - function '%s' is unknown (not mapped to a valid StreamOperation)\",expression,expression.getFunctionName()))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return (StreamOperation)createInstance(clazz,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e98694,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e98699)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid metric expression %s - function '%s' is unknown (not mapped to a valid Metric)\",expression,expression.getFunctionName()))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = ".isAssignableFrom(clazz)@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "constructMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "constructOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Class<? extends Expressible> clazz = classSupplier.get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return createInstance(clazz.asSubclass(),new Class<?>((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e986dd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e986e2)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "return (Metric)createInstance(clazz,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e9872b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@e98730)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
0->3 [style = bold, label=""];
16->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
11->7 [style = dotted, label="true"];
7->5 [style = solid, label="expression"];
1->8 [style = bold, label=""];
2->1 [style = solid, label="classSupplier"];
7->6 [style = solid, label="expression"];
8->4 [style = solid, label="clazz"];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
8->14 [style = bold, label=""];
8->13 [style = solid, label="clazz"];
1->4 [style = dotted, label="true"];
1->14 [style = dotted, label="true"];
9->10 [style = bold, label=""];
15->13 [style = solid, label="expression"];
7->10 [style = solid, label="expression"];
10->6 [style = bold, label=""];
14->13 [style = dotted, label="true"];
9->6 [style = bold, label=""];
15->12 [style = solid, label="expression"];
6->12 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
8->9 [style = solid, label="clazz"];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
11->3 [style = bold, label=""];
8->14 [style = solid, label="clazz"];
8->5 [style = solid, label="clazz"];
1->9 [style = dotted, label="true"];
14->12 [style = bold, label=""];
8->9 [style = bold, label=""];
1->12 [style = bold, label=""];
1->8 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
3->2 [style = solid, label="function"];
4->14 [style = dashed, label="0"];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
9->10 [style = dotted, label="true"];
4->5 [style = bold, label=""];
0->7 [style = dotted, label="true"];
16->15 [style = dotted, label="true"];
}
