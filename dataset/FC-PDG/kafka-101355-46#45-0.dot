digraph {
33 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(asList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@61@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "windowStore.flush()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "windowStore.flush()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Collections.singletonList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final long startTime = segmentInterval * 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Collections.singletonList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(Collections.singletonList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "windowStore.put(8,\"eight\")@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "windowStore.put(7,\"seven\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "setCurrentTime(startTime + increment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final long increment = segmentInterval / 2@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "windowStore.put(6,\"six\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "windowStore.put(1,\"one\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Collections.singletonList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
92 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
101 [style = filled, label = "assertEquals(asList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "windowStore.put(4,\"four\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "windowStore.flush()@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "windowStore.put(2,\"two\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "windowStore.put(5,\"five\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(asList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Collections.singletonList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(Collections.emptyList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "windowStore.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(asList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82->97 [style = bold, label=""];
8->45 [style = solid, label="startTime"];
4->22 [style = solid, label="increment"];
34->46 [style = bold, label=""];
8->64 [style = solid, label="startTime"];
4->58 [style = solid, label="increment"];
4->61 [style = solid, label="increment"];
8->21 [style = solid, label="startTime"];
4->91 [style = solid, label="startTime"];
29->30 [style = bold, label=""];
25->45 [style = bold, label=""];
4->60 [style = solid, label="increment"];
4->88 [style = solid, label="startTime"];
95->67 [style = bold, label=""];
96->3 [style = bold, label=""];
59->51 [style = bold, label=""];
4->11 [style = solid, label="increment"];
8->38 [style = solid, label="startTime"];
5->15 [style = bold, label=""];
5->98 [style = solid, label="increment"];
10->17 [style = bold, label=""];
65->56 [style = bold, label=""];
5->78 [style = solid, label="increment"];
19->47 [style = dashed, label="0"];
5->97 [style = solid, label="increment"];
4->43 [style = solid, label="startTime"];
52->59 [style = bold, label=""];
3->38 [style = bold, label=""];
4->37 [style = solid, label="increment"];
17->56 [style = dashed, label="0"];
30->10 [style = dashed, label="0"];
36->86 [style = bold, label=""];
71->101 [style = bold, label=""];
13->85 [style = bold, label=""];
4->1 [style = solid, label="increment"];
4->13 [style = solid, label="increment"];
4->25 [style = solid, label="increment"];
4->52 [style = solid, label="increment"];
4->98 [style = solid, label="startTime"];
45->63 [style = dashed, label="0"];
5->74 [style = solid, label="increment"];
33->18 [style = bold, label=""];
98->94 [style = bold, label=""];
4->41 [style = solid, label="increment"];
4->77 [style = solid, label="startTime"];
5->89 [style = solid, label="increment"];
66->64 [style = bold, label=""];
26->58 [style = dashed, label="0"];
8->32 [style = solid, label="startTime"];
8->52 [style = solid, label="startTime"];
9->50 [style = dashed, label="0"];
36->77 [style = dashed, label="0"];
101->69 [style = bold, label=""];
4->33 [style = solid, label="increment"];
4->17 [style = solid, label="increment"];
4->9 [style = solid, label="startTime"];
8->61 [style = solid, label="startTime"];
17->44 [style = bold, label=""];
84->18 [style = bold, label=""];
8->4 [style = bold, label=""];
42->21 [style = bold, label=""];
73->76 [style = bold, label=""];
1->31 [style = bold, label=""];
8->25 [style = solid, label="startTime"];
72->102 [style = bold, label=""];
4->38 [style = solid, label="increment"];
38->78 [style = bold, label=""];
4->78 [style = solid, label="startTime"];
5->101 [style = solid, label="increment"];
41->13 [style = bold, label=""];
70->12 [style = bold, label=""];
68->4 [style = bold, label=""];
45->10 [style = bold, label=""];
4->89 [style = solid, label="startTime"];
4->102 [style = solid, label="startTime"];
5->69 [style = solid, label="increment"];
5->95 [style = solid, label="increment"];
4->66 [style = solid, label="increment"];
44->61 [style = dashed, label="0"];
0->3 [style = bold, label=""];
57->54 [style = bold, label=""];
4->71 [style = solid, label="startTime"];
5->90 [style = solid, label="increment"];
13->32 [style = bold, label=""];
64->52 [style = bold, label=""];
4->94 [style = solid, label="startTime"];
46->49 [style = dashed, label="0"];
36->41 [style = bold, label=""];
5->23 [style = bold, label=""];
8->44 [style = solid, label="startTime"];
49->58 [style = bold, label=""];
90->77 [style = bold, label=""];
8->51 [style = solid, label="startTime"];
5->43 [style = solid, label="increment"];
8->1 [style = solid, label="startTime"];
22->9 [style = bold, label=""];
77->75 [style = bold, label=""];
12->11 [style = bold, label=""];
5->79 [style = solid, label="increment"];
27->26 [style = dashed, label="0"];
5->36 [style = solid, label="increment"];
5->86 [style = solid, label="increment"];
4->80 [style = solid, label="startTime"];
4->0 [style = solid, label="increment"];
5->87 [style = solid, label="increment"];
11->43 [style = bold, label=""];
27->59 [style = dashed, label="0"];
83->68 [style = bold, label=""];
85->91 [style = bold, label=""];
5->96 [style = solid, label="increment"];
80->90 [style = bold, label=""];
4->36 [style = solid, label="startTime"];
40->60 [style = dashed, label="0"];
19->25 [style = bold, label=""];
4->62 [style = solid, label="increment"];
38->6 [style = bold, label=""];
5->26 [style = solid, label="increment"];
35->40 [style = bold, label=""];
8->20 [style = solid, label="startTime"];
8->16 [style = solid, label="startTime"];
51->60 [style = bold, label=""];
4->16 [style = solid, label="increment"];
5->94 [style = solid, label="increment"];
89->81 [style = bold, label=""];
8->27 [style = solid, label="startTime"];
4->19 [style = solid, label="increment"];
4->35 [style = solid, label="increment"];
18->1 [style = bold, label=""];
39->7 [style = bold, label=""];
8->56 [style = solid, label="startTime"];
21->22 [style = bold, label=""];
8->49 [style = solid, label="startTime"];
4->86 [style = solid, label="startTime"];
5->67 [style = solid, label="increment"];
5->81 [style = solid, label="increment"];
21->57 [style = dashed, label="0"];
32->102 [style = dashed, label="0"];
5->25 [style = solid, label="increment"];
94->87 [style = bold, label=""];
16->71 [style = bold, label=""];
81->98 [style = bold, label=""];
79->9 [style = bold, label=""];
4->56 [style = solid, label="increment"];
5->88 [style = solid, label="increment"];
14->8 [style = bold, label=""];
8->13 [style = solid, label="startTime"];
8->66 [style = solid, label="startTime"];
4->12 [style = solid, label="startTime"];
4->81 [style = solid, label="startTime"];
61->29 [style = bold, label=""];
8->59 [style = solid, label="startTime"];
13->64 [style = dashed, label="0"];
13->72 [style = dashed, label="0"];
4->40 [style = solid, label="increment"];
36->55 [style = dashed, label="0"];
55->66 [style = bold, label=""];
4->65 [style = solid, label="increment"];
5->76 [style = solid, label="increment"];
8->37 [style = solid, label="startTime"];
88->84 [style = bold, label=""];
4->101 [style = solid, label="startTime"];
4->69 [style = solid, label="startTime"];
5->12 [style = solid, label="increment"];
22->54 [style = dashed, label="0"];
5->72 [style = solid, label="increment"];
69->74 [style = bold, label=""];
4->15 [style = solid, label="startTime"];
4->9 [style = solid, label="increment"];
63->65 [style = bold, label=""];
92->96 [style = bold, label=""];
102->26 [style = bold, label=""];
34->49 [style = bold, label=""];
44->29 [style = bold, label=""];
8->10 [style = solid, label="startTime"];
16->24 [style = bold, label=""];
8->9 [style = solid, label="startTime"];
4->59 [style = solid, label="increment"];
32->52 [style = dashed, label="0"];
43->20 [style = bold, label=""];
8->23 [style = solid, label="startTime"];
23->15 [style = bold, label=""];
8->0 [style = solid, label="startTime"];
8->46 [style = solid, label="startTime"];
8->63 [style = solid, label="startTime"];
4->25 [style = solid, label="startTime"];
32->27 [style = bold, label=""];
5->19 [style = solid, label="increment"];
5->102 [style = solid, label="increment"];
4->26 [style = solid, label="increment"];
78->6 [style = bold, label=""];
8->62 [style = solid, label="startTime"];
74->93 [style = bold, label=""];
27->35 [style = bold, label=""];
47->62 [style = bold, label=""];
37->12 [style = bold, label=""];
4->72 [style = solid, label="startTime"];
25->62 [style = dashed, label="0"];
24->33 [style = bold, label=""];
93->95 [style = bold, label=""];
4->36 [style = solid, label="increment"];
2->0 [style = bold, label=""];
4->84 [style = solid, label="startTime"];
7->28 [style = bold, label=""];
8->47 [style = solid, label="startTime"];
8->36 [style = solid, label="startTime"];
99->89 [style = bold, label=""];
42->57 [style = bold, label=""];
5->75 [style = solid, label="increment"];
5->77 [style = solid, label="increment"];
4->54 [style = solid, label="increment"];
4->10 [style = solid, label="increment"];
4->87 [style = solid, label="startTime"];
37->70 [style = bold, label=""];
8->17 [style = solid, label="startTime"];
35->36 [style = dashed, label="0"];
9->19 [style = bold, label=""];
53->8 [style = bold, label=""];
75->72 [style = bold, label=""];
8->33 [style = solid, label="startTime"];
31->39 [style = bold, label=""];
4->73 [style = solid, label="startTime"];
8->40 [style = solid, label="startTime"];
4->64 [style = solid, label="increment"];
8->26 [style = solid, label="startTime"];
5->9 [style = solid, label="increment"];
60->42 [style = bold, label=""];
15->37 [style = bold, label=""];
4->45 [style = solid, label="increment"];
4->5 [style = bold, label=""];
4->50 [style = solid, label="increment"];
4->44 [style = solid, label="increment"];
4->47 [style = solid, label="increment"];
4->19 [style = solid, label="startTime"];
4->99 [style = solid, label="startTime"];
4->75 [style = solid, label="startTime"];
97->73 [style = bold, label=""];
20->92 [style = bold, label=""];
8->19 [style = solid, label="startTime"];
4->55 [style = solid, label="increment"];
4->76 [style = solid, label="startTime"];
8->35 [style = solid, label="startTime"];
4->97 [style = solid, label="startTime"];
4->93 [style = solid, label="startTime"];
4->74 [style = solid, label="startTime"];
5->73 [style = solid, label="increment"];
28->34 [style = bold, label=""];
8->50 [style = solid, label="startTime"];
100->43 [style = bold, label=""];
1->80 [style = bold, label=""];
26->36 [style = bold, label=""];
62->63 [style = bold, label=""];
4->79 [style = solid, label="startTime"];
8->60 [style = solid, label="startTime"];
56->61 [style = bold, label=""];
58->55 [style = bold, label=""];
8->54 [style = solid, label="startTime"];
4->96 [style = solid, label="startTime"];
4->20 [style = solid, label="increment"];
4->32 [style = solid, label="increment"];
8->57 [style = solid, label="startTime"];
35->51 [style = dashed, label="0"];
4->95 [style = solid, label="startTime"];
10->65 [style = dashed, label="0"];
8->41 [style = solid, label="startTime"];
20->2 [style = bold, label=""];
54->50 [style = bold, label=""];
4->51 [style = solid, label="increment"];
4->26 [style = solid, label="startTime"];
11->100 [style = bold, label=""];
46->26 [style = bold, label=""];
8->65 [style = solid, label="startTime"];
5->82 [style = solid, label="increment"];
6->16 [style = bold, label=""];
50->47 [style = bold, label=""];
4->67 [style = solid, label="startTime"];
30->48 [style = dashed, label="0"];
87->88 [style = bold, label=""];
8->58 [style = solid, label="startTime"];
4->27 [style = solid, label="increment"];
8->55 [style = solid, label="startTime"];
5->93 [style = solid, label="increment"];
41->66 [style = dashed, label="0"];
91->82 [style = bold, label=""];
8->11 [style = solid, label="startTime"];
76->79 [style = bold, label=""];
5->84 [style = solid, label="increment"];
67->24 [style = bold, label=""];
86->13 [style = bold, label=""];
29->48 [style = bold, label=""];
4->82 [style = solid, label="startTime"];
4->63 [style = solid, label="increment"];
33->99 [style = bold, label=""];
40->42 [style = bold, label=""];
4->90 [style = solid, label="startTime"];
8->22 [style = solid, label="startTime"];
}
