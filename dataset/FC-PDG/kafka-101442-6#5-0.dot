digraph {
20 [style = filled, label = "final KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "driver.flushState()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "driver.flushState()@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "driver.flushState()@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.flushState()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "driver.flushState()@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "getter.init(driver.context())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < 2@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.setTime(0L)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "driver.flushState()@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "joined.toStream().process(supplier)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "driver.setUp(builder,stateDir)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "shouldRequireCopartitionedStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "driver.flushState()@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(streamTopic,tableTopic)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cba51f@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@18@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54->13 [style = solid, label="getter"];
29->5 [style = bold, label=""];
70->64 [style = bold, label=""];
54->23 [style = solid, label="getter"];
22->37 [style = bold, label=""];
46->15 [style = bold, label=""];
49->26 [style = solid, label="processor"];
42->45 [style = solid, label="i"];
29->5 [style = dotted, label="true"];
29->5 [style = solid, label="i"];
50->2 [style = bold, label=""];
37->1 [style = dotted, label="true"];
59->71 [style = bold, label=""];
38->31 [style = bold, label=""];
71->38 [style = bold, label=""];
5->28 [style = bold, label=""];
73->75 [style = bold, label=""];
46->48 [style = bold, label=""];
65->14 [style = bold, label=""];
36->33 [style = bold, label=""];
22->65 [style = bold, label=""];
54->2 [style = solid, label="getter"];
21->18 [style = bold, label=""];
22->1 [style = solid, label="i"];
69->57 [style = solid, label="supplier"];
61->6 [style = solid, label="getter"];
24->49 [style = bold, label=""];
0->66 [style = bold, label=""];
57->63 [style = bold, label=""];
54->16 [style = bold, label=""];
23->52 [style = bold, label=""];
33->46 [style = bold, label=""];
67->4 [style = bold, label=""];
72->73 [style = bold, label=""];
43->8 [style = bold, label=""];
54->42 [style = solid, label="getter"];
28->25 [style = bold, label=""];
66->60 [style = bold, label=""];
9->38 [style = bold, label=""];
25->28 [style = solid, label="i"];
41->13 [style = bold, label=""];
60->17 [style = bold, label=""];
61->35 [style = solid, label="getter"];
62->56 [style = bold, label=""];
64->27 [style = bold, label=""];
63->43 [style = bold, label=""];
5->29 [style = bold, label=""];
54->34 [style = solid, label="getter"];
16->36 [style = solid, label="i"];
12->21 [style = bold, label=""];
61->47 [style = solid, label="getter"];
11->44 [style = bold, label=""];
37->1 [style = bold, label=""];
25->5 [style = solid, label="i"];
4->19 [style = bold, label=""];
46->36 [style = bold, label=""];
26->43 [style = bold, label=""];
75->74 [style = bold, label=""];
61->0 [style = solid, label="getter"];
13->40 [style = bold, label=""];
46->33 [style = dotted, label="true"];
61->41 [style = solid, label="getter"];
7->74 [style = dashed, label="0"];
3->61 [style = bold, label=""];
37->45 [style = dotted, label="true"];
56->10 [style = bold, label=""];
11->44 [style = solid, label="table2"];
3->54 [style = bold, label=""];
16->46 [style = solid, label="i"];
18->20 [style = bold, label=""];
36->46 [style = bold, label=""];
33->46 [style = solid, label="i"];
54->51 [style = solid, label="getter"];
46->36 [style = solid, label="i"];
0->23 [style = bold, label=""];
19->41 [style = bold, label=""];
5->25 [style = dotted, label="true"];
18->28 [style = solid, label="expectedKeys"];
5->29 [style = solid, label="i"];
5->25 [style = solid, label="i"];
42->22 [style = bold, label=""];
35->34 [style = bold, label=""];
1->45 [style = bold, label=""];
42->22 [style = solid, label="i"];
41->70 [style = bold, label=""];
15->33 [style = bold, label=""];
36->46 [style = dotted, label="true"];
34->29 [style = bold, label=""];
16->36 [style = bold, label=""];
22->45 [style = bold, label=""];
47->42 [style = bold, label=""];
45->37 [style = solid, label="i"];
61->31 [style = solid, label="getter"];
31->32 [style = bold, label=""];
51->9 [style = bold, label=""];
6->51 [style = bold, label=""];
36->46 [style = solid, label="i"];
18->33 [style = solid, label="expectedKeys"];
22->37 [style = dotted, label="true"];
21->43 [style = solid, label="builder"];
45->1 [style = solid, label="i"];
39->53 [style = bold, label=""];
55->10 [style = bold, label=""];
68->48 [style = bold, label=""];
18->25 [style = solid, label="expectedKeys"];
37->22 [style = bold, label=""];
44->69 [style = bold, label=""];
17->50 [style = bold, label=""];
30->35 [style = bold, label=""];
22->45 [style = solid, label="i"];
21->63 [style = solid, label="builder"];
7->39 [style = bold, label=""];
40->27 [style = bold, label=""];
21->53 [style = solid, label="builder"];
34->29 [style = solid, label="i"];
5->4 [style = bold, label=""];
25->5 [style = bold, label=""];
54->32 [style = solid, label="getter"];
61->50 [style = solid, label="getter"];
61->54 [style = bold, label=""];
44->24 [style = bold, label=""];
48->30 [style = bold, label=""];
6->59 [style = bold, label=""];
16->33 [style = solid, label="i"];
33->15 [style = solid, label="i"];
29->28 [style = solid, label="i"];
36->33 [style = solid, label="i"];
5->28 [style = dotted, label="true"];
22->37 [style = solid, label="i"];
29->25 [style = dotted, label="true"];
36->15 [style = solid, label="i"];
34->25 [style = solid, label="i"];
20->11 [style = bold, label=""];
36->33 [style = dotted, label="true"];
24->69 [style = dashed, label="0"];
29->67 [style = bold, label=""];
53->3 [style = bold, label=""];
29->25 [style = solid, label="i"];
37->45 [style = solid, label="i"];
69->57 [style = bold, label=""];
29->25 [style = bold, label=""];
52->17 [style = bold, label=""];
22->45 [style = dotted, label="true"];
27->6 [style = bold, label=""];
8->7 [style = bold, label=""];
18->15 [style = solid, label="expectedKeys"];
37->14 [style = bold, label=""];
36->68 [style = bold, label=""];
37->22 [style = solid, label="i"];
32->55 [style = bold, label=""];
14->0 [style = bold, label=""];
10->47 [style = bold, label=""];
21->39 [style = solid, label="builder"];
18->45 [style = solid, label="expectedKeys"];
58->21 [style = bold, label=""];
18->1 [style = solid, label="expectedKeys"];
45->37 [style = bold, label=""];
49->26 [style = bold, label=""];
34->5 [style = solid, label="i"];
31->62 [style = bold, label=""];
46->15 [style = dotted, label="true"];
46->33 [style = solid, label="i"];
42->37 [style = solid, label="i"];
}
