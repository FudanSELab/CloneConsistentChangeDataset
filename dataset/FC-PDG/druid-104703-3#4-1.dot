digraph {
4 [style = filled, label = "strategy = workerConfig.getSelectStrategy()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assignedWorker != null@@@34@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "return true@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "findWorkerToRunTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "runningTasks.containsKey(task.getId()) || findWorkerRunningTask(task.getId()) != null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return strategy.findWorkerForTask(config,ImmutableMap.copyOf(Maps.transformEntries(Maps.filterEntries(workers,new Predicate<Map.Entry<String,WorkerHolder>>(){@Override public boolean apply(Map.Entry<String,WorkerHolder> input){return !lazyWorkers.containsKey(input.getKey()) && !workersWithUnacknowledgedTask.containsKey(input.getKey()) && !blackListedWorkers.containsKey(input.getKey())}}),new Maps.EntryTransformer<String,WorkerHolder,ImmutableWorkerInfo>(){@Override public ImmutableWorkerInfo transformEntry(String key,WorkerHolder value){return value.toImmutable()}})),task)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "immutableZkWorker != null && workersWithUnacknowledgedTask.putIfAbsent(immutableZkWorker.getWorker().getHost(),task.getId()) == null@@@30@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return false@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Task task@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "strategy = WorkerBehaviorConfig.DEFAULT_STRATEGY@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "log.debug(\"No worker selection strategy set. Using default of (%s(\",strategy.getClass().getSimpleName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "immutableZkWorker = strategy.findWorkerForTask(config,ImmutableMap.copyOf(Maps.transformEntries(Maps.filterEntries(zkWorkers,new Predicate<Map.Entry<String,ZkWorker>>(){@Override public boolean apply(Map.Entry<String,ZkWorker> input){return !lazyWorkers.containsKey(input.getKey()) && !workersWithUnacknowledgedTask.containsKey(input.getKey()) && !blackListedWorkers.contains(input.getValue())}}),null)),task)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ZkWorker assignedWorker = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return announceTask(task,assignedWorker,taskRunnerWorkItem)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assignedWorker = zkWorkers.get(immutableZkWorker.getWorker().getHost())@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "log.debug(\"No worker selection strategy set. Using default of (%s(\",strategy.getClass().getSimpleName())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "strategy = WorkerBehaviorConfig.DEFAULT_STRATEGY@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Preconditions.checkNotNull(taskRunnerWorkItem,\"taskRunnerWorkItem\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{if (assignedWorker != null) {workersWithUnacknowledgedTask.remove(assignedWorker.getWorker().getHost())runPendingTasks()}}@@@42@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "log.debug(\"Unsuccessful task-assign attempt for task (%s( on workers (%s(. Workers to ack tasks are (%s(.\",task.getId(),zkWorkers.values(),workersWithUnacknowledgedTask)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final Task task@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return false@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tryAssignTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Preconditions.checkArgument(task.getId().equals(taskRunnerWorkItem.getTaskId()),\"task id != workItem id\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "workerConfig == null || workerConfig.getSelectStrategy() == null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "WorkerBehaviorConfig workerConfig = workerConfigRef.get()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Preconditions.checkNotNull(task,\"task\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "workersWithUnacknowledgedTask@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tryAssignTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assignedWorker != null@@@39@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "log.info(\"Task(%s( already running.\",task.getId())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assignedWorker = zkWorkers.get(immutableZkWorker.getWorker().getHost())@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "WorkerBehaviorConfig workerConfig = workerConfigRef.get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "log.debug(\"Unsuccessful task-assign attempt for task (%s( on workers (%s(. Workers to ack tasks are (%s(.\",task.getId(),zkWorkers.values(),workersWithUnacknowledgedTask)@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final ImmutableWorkerInfo immutableZkWorker@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final RemoteTaskRunnerWorkItem taskRunnerWorkItem@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "workerConfig == null || workerConfig.getSelectStrategy() == null@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "WorkerSelectStrategy strategy@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{if (assignedWorker != null) {workersWithUnacknowledgedTask.remove(assignedWorker.getWorker().getHost())runPendingTasks()}}@@@47@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "strategy = workerConfig.getSelectStrategy()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Task task@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
15->25 [style = bold, label=""];
19->7 [style = dotted, label="false"];
26->9 [style = bold, label=""];
10->17 [style = bold, label=""];
15->21 [style = dotted, label="true"];
40->38 [style = bold, label=""];
36->33 [style = bold, label=""];
10->19 [style = solid, label="assignedWorker"];
29->6 [style = bold, label=""];
15->17 [style = dotted, label="false"];
15->8 [style = dotted, label="true"];
36->39 [style = dotted, label="true"];
5->22 [style = dotted, label="true"];
26->30 [style = dotted, label="true"];
15->29 [style = dotted, label="true"];
39->23 [style = bold, label=""];
15->20 [style = dotted, label="false"];
10->6 [style = solid, label="assignedWorker"];
1->9 [style = solid, label="task"];
15->23 [style = dotted, label="false"];
28->27 [style = dotted, label="true"];
2->24 [style = bold, label=""];
17->5 [style = bold, label=""];
21->0 [style = bold, label=""];
9->2 [style = bold, label=""];
6->13 [style = dotted, label="true"];
27->32 [style = solid, label="assignedWorker"];
5->6 [style = dotted, label="true"];
20->14 [style = bold, label=""];
15->16 [style = dotted, label="true"];
30->6 [style = solid, label="taskRunnerWorkItem"];
22->28 [style = solid, label="immutableZkWorker"];
12->20 [style = solid, label="workerConfig"];
33->23 [style = bold, label=""];
11->8 [style = solid, label="taskRunnerWorkItem"];
3->10 [style = bold, label=""];
35->40 [style = bold, label=""];
18->11 [style = dotted, label="true"];
15->12 [style = dotted, label="false"];
18->9 [style = bold, label=""];
20->3 [style = dotted, label="true"];
15->12 [style = bold, label=""];
36->37 [style = bold, label=""];
27->29 [style = bold, label=""];
5->22 [style = bold, label=""];
22->6 [style = solid, label="immutableZkWorker"];
22->6 [style = bold, label=""];
10->0 [style = solid, label="assignedWorker"];
15->5 [style = dotted, label="true"];
4->10 [style = bold, label=""];
28->29 [style = bold, label=""];
29->6 [style = dotted, label="true"];
23->20 [style = bold, label=""];
27->29 [style = solid, label="assignedWorker"];
18->1 [style = dotted, label="true"];
20->14 [style = dotted, label="true"];
11->9 [style = solid, label="task"];
22->28 [style = bold, label=""];
10->8 [style = solid, label="assignedWorker"];
29->31 [style = dotted, label="false"];
25->16 [style = bold, label=""];
13->0 [style = solid, label="assignedWorker"];
10->32 [style = solid, label="assignedWorker"];
19->8 [style = dotted, label="true"];
36->37 [style = dotted, label="true"];
13->19 [style = bold, label=""];
20->4 [style = dotted, label="false"];
11->6 [style = solid, label="task"];
6->13 [style = bold, label=""];
36->33 [style = dotted, label="false"];
1->22 [style = solid, label="task"];
26->11 [style = dotted, label="true"];
15->25 [style = dotted, label="true"];
13->19 [style = solid, label="assignedWorker"];
31->8 [style = bold, label=""];
5->28 [style = dotted, label="true"];
37->39 [style = bold, label=""];
10->23 [style = dashed, label="0"];
24->15 [style = bold, label=""];
1->8 [style = solid, label="task"];
8->32 [style = bold, label=""];
11->22 [style = solid, label="task"];
30->2 [style = solid, label="taskRunnerWorkItem"];
29->31 [style = bold, label=""];
38->36 [style = bold, label=""];
6->19 [style = bold, label=""];
19->8 [style = bold, label=""];
20->4 [style = bold, label=""];
40->36 [style = solid, label="workerConfig"];
15->19 [style = dotted, label="true"];
11->2 [style = solid, label="taskRunnerWorkItem"];
6->8 [style = bold, label=""];
8->21 [style = bold, label=""];
7->21 [style = bold, label=""];
35->34 [style = dotted, label="true"];
13->8 [style = solid, label="assignedWorker"];
12->23 [style = bold, label=""];
34->23 [style = solid, label="task"];
28->27 [style = bold, label=""];
10->29 [style = solid, label="assignedWorker"];
19->7 [style = bold, label=""];
15->10 [style = dotted, label="false"];
27->6 [style = solid, label="assignedWorker"];
}
