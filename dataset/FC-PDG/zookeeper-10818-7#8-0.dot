digraph {
31 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "createNremoveMelementTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "final int numClients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Thread.sleep(1000)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "offerThread.start()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "takeThread.join()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "offerThread.join()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "queueHandles(1(.remove()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Thread offerThread = new Thread(null)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "i < m@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int m@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createNremoveMelementTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < clients.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertNotNull(takeResult(0()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(new String(queueHandles(1(.element()),testString + m)@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "i < n@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Thread takeThread = new Thread(null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testTakeWait1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "final byte(((( takeResult = new byte((((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i++@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "takeThread.start()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final int numClients = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->12 [style = dotted, label="true"];
39->11 [style = solid, label="i"];
16->20 [style = dotted, label="true"];
11->12 [style = bold, label=""];
9->16 [style = solid, label="i"];
19->22 [style = bold, label=""];
17->14 [style = bold, label=""];
41->36 [style = bold, label=""];
35->36 [style = solid, label="testString"];
26->23 [style = dotted, label="true"];
0->21 [style = dotted, label="true"];
21->18 [style = bold, label=""];
3->9 [style = bold, label=""];
37->28 [style = bold, label=""];
0->21 [style = bold, label=""];
20->17 [style = bold, label=""];
23->0 [style = solid, label="m"];
7->19 [style = bold, label=""];
10->38 [style = bold, label=""];
31->33 [style = bold, label=""];
28->39 [style = solid, label="dir"];
23->24 [style = solid, label="m"];
40->32 [style = bold, label=""];
11->8 [style = solid, label="i"];
8->11 [style = dotted, label="true"];
12->39 [style = bold, label=""];
9->14 [style = solid, label="i"];
15->13 [style = dotted, label="true"];
35->30 [style = bold, label=""];
12->8 [style = solid, label="i"];
9->20 [style = solid, label="i"];
9->16 [style = bold, label=""];
7->30 [style = dashed, label="0"];
16->14 [style = dotted, label="true"];
2->0 [style = solid, label="i"];
26->4 [style = bold, label=""];
42->34 [style = bold, label=""];
15->6 [style = dotted, label="true"];
4->1 [style = bold, label=""];
8->3 [style = bold, label=""];
30->31 [style = bold, label=""];
16->2 [style = bold, label=""];
8->39 [style = dotted, label="true"];
10->24 [style = dashed, label="0"];
40->41 [style = solid, label="takeResult"];
3->8 [style = bold, label=""];
3->11 [style = dotted, label="true"];
29->10 [style = bold, label=""];
0->18 [style = dotted, label="true"];
14->20 [style = solid, label="i"];
32->29 [style = bold, label=""];
39->11 [style = bold, label=""];
14->16 [style = solid, label="i"];
40->36 [style = solid, label="takeResult"];
14->16 [style = bold, label=""];
4->28 [style = dashed, label="0"];
15->4 [style = bold, label=""];
3->8 [style = solid, label="i"];
26->13 [style = dotted, label="true"];
27->42 [style = bold, label=""];
8->3 [style = solid, label="i"];
6->10 [style = solid, label="m"];
0->24 [style = bold, label=""];
15->5 [style = dotted, label="true"];
16->32 [style = dashed, label="0"];
5->12 [style = solid, label="dir"];
11->8 [style = bold, label=""];
34->41 [style = bold, label=""];
4->10 [style = solid, label="testString"];
2->0 [style = bold, label=""];
8->40 [style = bold, label=""];
1->7 [style = bold, label=""];
16->17 [style = dotted, label="true"];
12->8 [style = bold, label=""];
3->11 [style = bold, label=""];
28->35 [style = bold, label=""];
12->39 [style = solid, label="clients"];
8->12 [style = bold, label=""];
6->0 [style = solid, label="m"];
11->12 [style = solid, label="clients"];
26->25 [style = dotted, label="true"];
22->3 [style = bold, label=""];
3->8 [style = dotted, label="true"];
25->12 [style = solid, label="dir"];
18->0 [style = solid, label="i"];
4->20 [style = solid, label="testString"];
13->16 [style = solid, label="n"];
22->3 [style = solid, label="i"];
4->24 [style = solid, label="testString"];
0->10 [style = bold, label=""];
33->3 [style = bold, label=""];
16->20 [style = bold, label=""];
2->18 [style = solid, label="i"];
1->35 [style = dashed, label="0"];
38->27 [style = bold, label=""];
8->12 [style = dotted, label="true"];
18->0 [style = bold, label=""];
}
