digraph {
7 [style = filled, label = "putEdge(N4,N1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(graph.adjacentNodes(N2)).isEmpty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(graph.nodes()).containsExactly(N2,N4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(graph.removeNode(N1)).isTrue()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "putEdge(N1,N2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "removeNode_existingNode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(graphAsMutableGraph.removeNode(N1)).isFalse()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "removeNode_existingNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assume().that(graphIsMutable()).isTrue()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "removeNode_existingNode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(graph.adjacentNodes(N4)).isEmpty()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(graph.removeNode(N1)).isFalse()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(graphAsMutableGraph.removeNode(N1)).isTrue()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
7->9 [style = bold, label=""];
10->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->2 [style = bold, label=""];
9->10 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = bold, label=""];
3->1 [style = bold, label=""];
8->11 [style = bold, label=""];
4->6 [style = bold, label=""];
12->6 [style = bold, label=""];
0->10 [style = dashed, label="0"];
11->6 [style = bold, label=""];
}
