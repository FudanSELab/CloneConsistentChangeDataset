digraph {
8 [style = filled, label = "YamlShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToYamlConfiguration(shardingRuleConfig)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ShardingRuleConfiguration shardingRuleConfig = new ShardingRuleConfiguration()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "shardingRuleConfig.setDefaultShardingColumn(\"user_id\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "shardingRuleConfig.getBroadcastTables().add(\"dict\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shardingRuleConfig.setDefaultDatabaseShardingStrategy(mock())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(actual.getTables().size(),is(1))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(actual.getDefaultTableStrategy())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shardingRuleConfig.setDefaultKeyGenerateStrategy(mock())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "yamlConfig.setDefaultTableStrategy(mock())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(actual.getBindingTables().size(),is(1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "YamlShardingRuleConfiguration yamlConfig = new YamlShardingRuleConfiguration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertNotNull(actual.getDefaultTableShardingStrategy())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(actual.getBindingTableGroups().size(),is(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertSwapToYamlWithMaxProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "shardingRuleConfig.setDefaultTableShardingStrategy(mock())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertSwapToYamlWithMaxProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertSwapToObjectWithMaxProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "yamlConfig.setDefaultDatabaseStrategy(mock())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertNotNull(actual.getDefaultDatabaseStrategy())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "yamlConfig.getBindingTables().add(\"tbl, sub_tbl\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNotNull(actual.getDefaultDatabaseShardingStrategy())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shardingRuleConfig.getTables().add(mock())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "ShardingRuleConfiguration actual = shardingRuleConfigurationYamlSwapper.swapToObject(yamlConfig)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(actual.getBroadcastTables().iterator().next(),is(\"dict\"))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(actual.getBindingTables().iterator().next(),is(\"tbl, sub_tbl\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(actual.getBindingTableGroups().iterator().next(),is(\"tbl, sub_tbl\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(actual.getBroadcastTables().size(),is(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shardingRuleConfig.getBindingTableGroups().add(\"tbl, sub_tbl\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNotNull(actual.getDefaultKeyGenerateStrategy())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "yamlConfig.getTables().put(\"tbl\",mock())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "yamlConfig.setDefaultKeyGenerateStrategy(mock())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "yamlConfig.getBroadcastTables().add(\"dict\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(actual.getDefaultShardingColumn(),is(\"user_id\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
17->8 [style = bold, label=""];
14->24 [style = dashed, label="0"];
16->20 [style = dashed, label="0"];
25->28 [style = bold, label=""];
28->5 [style = bold, label=""];
32->23 [style = bold, label=""];
4->17 [style = bold, label=""];
23->30 [style = bold, label=""];
7->12 [style = bold, label=""];
9->2 [style = bold, label=""];
16->10 [style = bold, label=""];
7->8 [style = solid, label="shardingRuleConfig"];
31->0 [style = bold, label=""];
6->32 [style = dashed, label="0"];
1->29 [style = dashed, label="0"];
22->29 [style = bold, label=""];
10->31 [style = dashed, label="0"];
30->9 [style = bold, label=""];
21->24 [style = bold, label=""];
20->31 [style = bold, label=""];
3->16 [style = bold, label=""];
24->22 [style = bold, label=""];
26->30 [style = solid, label="yamlConfig"];
12->21 [style = dashed, label="0"];
15->22 [style = dashed, label="0"];
26->21 [style = bold, label=""];
11->28 [style = dashed, label="0"];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
3->20 [style = bold, label=""];
1->6 [style = bold, label=""];
27->26 [style = bold, label=""];
13->7 [style = bold, label=""];
29->32 [style = bold, label=""];
9->25 [style = bold, label=""];
10->0 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
2->25 [style = dashed, label="0"];
4->8 [style = bold, label=""];
0->18 [style = bold, label=""];
14->15 [style = bold, label=""];
8->30 [style = dashed, label="0"];
7->26 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
19->7 [style = bold, label=""];
2->11 [style = bold, label=""];
15->1 [style = bold, label=""];
}
