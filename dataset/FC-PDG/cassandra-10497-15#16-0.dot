digraph {
14 [style = filled, label = "cf.addColumn(column(\"col5\",\"val5\",1L))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "cf.addColumn(column(\"col9\",\"val9\",1L))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertRowsInResult(cfs,command)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,null,5,true),2)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertRowsInResult(cfs,command)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "cf.addColumn(column(\"col4\",\"val4\",1L))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rm.applyUnsafe()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testGetSliceFromBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(tableName)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ColumnFamily cf = ArrayBackedSortedColumns.factory.create(KEYSPACE1,\"Standard1\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,95,null,false),2)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "cf.addColumn(column(\"col1\",\"val1\",1L))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,null,null,true),2)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,4,null,false),2)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "rm.applyUnsafe()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ClusteringIndexSliceFilter filter = slices(cfs,5,null,false)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "reTest(keyspace.getColumnFamilyStore(\"Standard1\"),verify)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i == 6 || i == 8@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "i < 10@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Runnable verify = new WrappedRunnable(){public void runMayThrow(){ColumnFamily cfcf = cfStore.getColumnFamily(ROW,Composites.EMPTY,Composites.EMPTY,false,2,System.currentTimeMillis())assertColumns(cf,\"col1\",\"col2\")assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE),\"col1\")cf = cfStore.getColumnFamily(ROW,cellname(\"col2\"),Composites.EMPTY,false,1,System.currentTimeMillis())assertColumns(cf,\"col2\")assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE))}}@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,null,6,true),2)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final ColumnFamilyStore cfStore = keyspace.getColumnFamilyStore(\"Standard1\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertRowsInResult(cfs,command,9,7)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "cfs.forceBlockingFlush()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertRowsInResult(cfs,command,5,3)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "round < 2@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "execute(\"INSERT INTO %s (a, b, c) VALUES (?, ?, ?)\",\"0\",i,i)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "round++@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "reTest(keyspace.getColumnFamilyStore(\"Standard1\"),verify)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "cf.addColumn(column(\"col7\",\"val7\",1L))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertRowsInResult(cfs,command,5,3)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "rm = new Mutation(KEYSPACE1,ROW.getKey())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertRowsInResult(cfs,command,5,7)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,null,6,true),2)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "cf.addColumn(column(\"col3\",\"val3\",1L))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "cf.addColumn(expiringColumn(\"col2\",\"val2\",1L,60))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final DecoratedKey ROW = Util.dk(\"row1\")@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testGetSliceWithExpiration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 1@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "final DecoratedKey ROW = Util.dk(\"row5\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "rm.delete(\"Standard1\",cellname(\"col4\"),2L)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final Keyspace keyspace = Keyspace.open(KEYSPACE1)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "SinglePartitionSliceCommand command = singlePartitionSlice(cfs,\"0\",filter,2)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "command = singlePartitionSlice(cfs,\"0\",slices(cfs,null,0,true),2)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testGetSliceFromBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "String tableName = createTable(\"CREATE TABLE %s (a text, b int, c int, PRIMARY KEY (a, b))\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Mutation rm = new Mutation(KEYSPACE1,ROW.getKey(),cf)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertRowsInResult(cfs,command,5,3)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "round == 0@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "execute(\"DELETE FROM %s WHERE a = ? AND b = ?\",\"0\",4)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "i++@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertRowsInResult(cfs,command,5,7)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "int round = 0@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->0 [style = bold, label=""];
18->31 [style = solid, label="command"];
20->48 [style = solid, label="cfs"];
44->42 [style = solid, label="round"];
42->47 [style = dotted, label="true"];
20->35 [style = solid, label="cfs"];
4->15 [style = bold, label=""];
20->30 [style = solid, label="cfs"];
12->9 [style = bold, label=""];
37->25 [style = solid, label="round"];
44->25 [style = solid, label="round"];
43->23 [style = bold, label=""];
20->18 [style = solid, label="cfs"];
25->44 [style = bold, label=""];
45->35 [style = solid, label="command"];
7->14 [style = bold, label=""];
39->18 [style = bold, label=""];
50->5 [style = bold, label=""];
49->10 [style = bold, label=""];
15->52 [style = bold, label=""];
42->48 [style = dotted, label="true"];
1->12 [style = bold, label=""];
31->40 [style = bold, label=""];
40->26 [style = bold, label=""];
42->23 [style = dotted, label="true"];
42->22 [style = dotted, label="true"];
45->35 [style = bold, label=""];
20->34 [style = solid, label="cfs"];
42->32 [style = dotted, label="true"];
10->11 [style = bold, label=""];
14->16 [style = bold, label=""];
18->31 [style = bold, label=""];
19->29 [style = solid, label="i"];
42->26 [style = dotted, label="true"];
22->46 [style = bold, label=""];
47->48 [style = bold, label=""];
47->48 [style = solid, label="command"];
0->17 [style = bold, label=""];
20->45 [style = solid, label="cfs"];
26->43 [style = bold, label=""];
20->32 [style = solid, label="cfs"];
30->34 [style = bold, label=""];
46->39 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
42->24 [style = dotted, label="true"];
6->2 [style = bold, label=""];
29->27 [style = bold, label=""];
21->37 [style = bold, label=""];
20->22 [style = solid, label="cfs"];
20->47 [style = solid, label="cfs"];
42->43 [style = dotted, label="true"];
20->23 [style = solid, label="cfs"];
19->36 [style = solid, label="i"];
42->32 [style = bold, label=""];
13->49 [style = dashed, label="0"];
49->15 [style = solid, label="ROW"];
5->7 [style = bold, label=""];
36->38 [style = solid, label="i"];
29->38 [style = bold, label=""];
42->30 [style = dotted, label="true"];
10->15 [style = solid, label="cf"];
20->24 [style = solid, label="cfs"];
20->19 [style = bold, label=""];
42->45 [style = dotted, label="true"];
19->38 [style = bold, label=""];
33->20 [style = solid, label="tableName"];
42->39 [style = dotted, label="true"];
13->10 [style = bold, label=""];
44->42 [style = bold, label=""];
24->22 [style = solid, label="command"];
42->44 [style = dotted, label="true"];
38->27 [style = dotted, label="true"];
25->41 [style = bold, label=""];
51->12 [style = bold, label=""];
15->8 [style = solid, label="verify"];
36->27 [style = solid, label="i"];
3->6 [style = bold, label=""];
20->40 [style = solid, label="cfs"];
32->30 [style = bold, label=""];
42->40 [style = dotted, label="true"];
35->24 [style = bold, label=""];
11->5 [style = bold, label=""];
43->23 [style = solid, label="command"];
42->18 [style = dotted, label="true"];
37->42 [style = solid, label="round"];
23->47 [style = bold, label=""];
17->3 [style = bold, label=""];
32->30 [style = solid, label="filter"];
11->50 [style = bold, label=""];
20->26 [style = solid, label="cfs"];
9->49 [style = bold, label=""];
15->52 [style = solid, label="verify"];
20->31 [style = solid, label="cfs"];
19->38 [style = solid, label="i"];
15->8 [style = bold, label=""];
38->36 [style = dotted, label="true"];
37->42 [style = bold, label=""];
42->34 [style = dotted, label="true"];
46->39 [style = solid, label="command"];
9->20 [style = dashed, label="0"];
19->27 [style = solid, label="i"];
27->36 [style = bold, label=""];
33->20 [style = bold, label=""];
20->43 [style = solid, label="cfs"];
38->29 [style = bold, label=""];
34->45 [style = bold, label=""];
42->31 [style = dotted, label="true"];
3->15 [style = bold, label=""];
25->41 [style = dotted, label="true"];
20->46 [style = solid, label="cfs"];
24->22 [style = bold, label=""];
40->26 [style = solid, label="command"];
13->15 [style = solid, label="ROW"];
28->33 [style = bold, label=""];
30->34 [style = solid, label="command"];
20->39 [style = solid, label="cfs"];
36->29 [style = solid, label="i"];
48->25 [style = bold, label=""];
38->21 [style = bold, label=""];
42->35 [style = dotted, label="true"];
42->25 [style = dotted, label="true"];
36->38 [style = bold, label=""];
38->29 [style = dotted, label="true"];
10->17 [style = solid, label="cf"];
42->46 [style = dotted, label="true"];
41->44 [style = bold, label=""];
37->44 [style = solid, label="round"];
9->13 [style = bold, label=""];
}
