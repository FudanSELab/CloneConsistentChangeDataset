digraph {
6 [style = filled, label = "assertFalse(actual.getDataSources().get(\"ds\").isQueryConsistent())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertSwapToYamlWithoutLoadBalanceAlgorithm['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertSwapToYamlWithLoadBalanceAlgorithm['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\",\"\",\"write\",Collections.singletonList(\"read\"),null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNull(actual.getDataSources().get(\"ds\").getLoadBalancerName())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(actual.getDataSources().get(\"ds\").getReadDataSourceNames(),is(Collections.singletonList(\"read\")))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\",\"\",\"write\",Collections.singletonList(\"read\"),\"roundRobin\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(new ReadwriteSplittingRuleConfiguration(Collections.singleton(dataSourceConfig),ImmutableMap.of(\"roundRobin\",new ShardingSphereAlgorithmConfiguration(\"ROUND_ROBIN\",new Properties()))))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "YamlReadwriteSplittingRuleConfiguration actual = getReadwriteSplittingRuleConfigurationYamlSwapper().swapToYamlConfiguration(new ReadwriteSplittingRuleConfiguration(Collections.singleton(dataSourceConfig),Collections.emptyMap()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(actual.getDataSources().get(\"ds\").getWriteDataSourceName(),is(\"write\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertSwapToYamlWithLoadBalanceAlgorithm['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "ReadwriteSplittingDataSourceRuleConfiguration dataSourceConfig = new ReadwriteSplittingDataSourceRuleConfiguration(\"ds\",\"\",\"write\",Collections.singletonList(\"read\"),\"roundRobin\",false)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(actual.getDataSources().get(\"ds\").getLoadBalancerName(),is(\"roundRobin\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
5->3 [style = bold, label=""];
3->6 [style = bold, label=""];
1->4 [style = bold, label=""];
10->9 [style = bold, label=""];
2->5 [style = bold, label=""];
5->11 [style = bold, label=""];
12->10 [style = bold, label=""];
4->8 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
10->9 [style = solid, label="dataSourceConfig"];
7->8 [style = bold, label=""];
9->2 [style = bold, label=""];
4->0 [style = solid, label="dataSourceConfig"];
3->11 [style = dashed, label="0"];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
8->0 [style = solid, label="dataSourceConfig"];
}
