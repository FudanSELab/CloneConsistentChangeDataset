digraph {
6 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "v2.setValue(\"V1\",new Integer(44))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DefaultKeyedValue<String> v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertTrue(v1 != v2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DefaultKeyedValue v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(v1.equals(v2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DefaultKeyedValues v1 = new DefaultKeyedValues()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "v1.addValue(\"V1\",new Integer(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "v1.addValue(\"V3\",new Integer(3))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",45.5)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "v1.addValue(\"V2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "DefaultKeyedValues v2 = (DefaultKeyedValues)v1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(v1.equals(v2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
7->11 [style = bold, label=""];
10->7 [style = solid, label="v2"];
10->6 [style = solid, label="v2"];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
3->2 [style = solid, label="v2"];
18->12 [style = bold, label=""];
3->6 [style = bold, label=""];
5->9 [style = dashed, label="0"];
15->1 [style = solid, label="v1"];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
16->19 [style = bold, label=""];
12->1 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
12->19 [style = solid, label="v2"];
15->17 [style = bold, label=""];
10->2 [style = solid, label="v2"];
3->6 [style = solid, label="v2"];
17->14 [style = bold, label=""];
5->6 [style = solid, label="v1"];
12->1 [style = solid, label="v2"];
12->11 [style = solid, label="v2"];
1->16 [style = dashed, label="0"];
8->9 [style = bold, label=""];
14->18 [style = bold, label=""];
3->10 [style = dashed, label="0"];
13->15 [style = bold, label=""];
5->15 [style = dashed, label="0"];
9->6 [style = solid, label="v1"];
4->5 [style = bold, label=""];
3->7 [style = solid, label="v2"];
}
