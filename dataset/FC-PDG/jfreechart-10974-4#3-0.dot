digraph {
15 [style = filled, label = "assertTrue(d1 != d2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "d2.add(3.0,3.3,\"Series 1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d2.equals(d1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d1.setIntervalWidth(1.23)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d2.setIntervalPositionFactor(0.33)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(d1.equals(d2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "d1.add(2.0,2.2,\"Series 1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "d2.add(1.0,1.1,\"Series 1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CategoryTableXYDataset d2 = CloneUtils.clone(d1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "d1.add(3.0,3.3,\"Series 1\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CategoryTableXYDataset d1 = new CategoryTableXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(d1.equals(d2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(d1.equals(d2))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "d1.setIntervalPositionFactor(0.33)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(d1.equals(d2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)d1.clone()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "d1.add(1.0,1.1,\"Series 1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(d1.equals(d2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "d2.add(2.0,2.2,\"Series 1\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "CategoryTableXYDataset d2 = new CategoryTableXYDataset()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertTrue(d1.equals(d2))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17->4 [style = solid, label="d2"];
11->20 [style = bold, label=""];
8->10 [style = bold, label=""];
17->2 [style = solid, label="d2"];
9->2 [style = solid, label="d2"];
9->7 [style = solid, label="d2"];
11->14 [style = bold, label=""];
6->17 [style = solid, label="d1"];
20->0 [style = solid, label="d2"];
16->6 [style = bold, label=""];
6->12 [style = solid, label="d1"];
9->15 [style = solid, label="d2"];
14->17 [style = bold, label=""];
21->24 [style = bold, label=""];
9->4 [style = solid, label="d2"];
3->12 [style = bold, label=""];
15->3 [style = bold, label=""];
20->23 [style = solid, label="d2"];
6->15 [style = solid, label="d1"];
1->11 [style = bold, label=""];
0->7 [style = bold, label=""];
20->21 [style = bold, label=""];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
9->12 [style = solid, label="d2"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
20->13 [style = solid, label="d2"];
19->13 [style = bold, label=""];
17->15 [style = solid, label="d2"];
18->6 [style = bold, label=""];
9->15 [style = bold, label=""];
17->7 [style = solid, label="d2"];
9->17 [style = dashed, label="0"];
5->4 [style = bold, label=""];
17->10 [style = solid, label="d2"];
17->15 [style = bold, label=""];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
23->12 [style = bold, label=""];
17->12 [style = solid, label="d2"];
12->19 [style = bold, label=""];
22->6 [style = bold, label=""];
13->2 [style = bold, label=""];
24->23 [style = bold, label=""];
9->10 [style = solid, label="d2"];
}
