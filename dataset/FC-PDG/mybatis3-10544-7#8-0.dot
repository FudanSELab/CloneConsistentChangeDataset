digraph {
19 [style = filled, label = "Assert.assertEquals(3,user.getGroups().size())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "User user = iterator.next()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "user = iterator.next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assertions.assertEquals(1,user.getRoles().size())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(usersCursor.isConsumed())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Assertions.assertEquals(3,user.getGroups().size())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assertions.assertEquals(2,user.getRoles().size())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(1,user.getRoles().size())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testCursorClosedOnSessionClose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(1,user.getGroups().size())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "shouldGetAllUser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "Assert.assertEquals(\"User1\",user.getName())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assertions.assertTrue(usersCursor.isConsumed())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(2,user.getRoles().size())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "shouldGetAllUser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "user = iterator.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "user = iterator.next()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assertions.assertEquals(1,user.getGroups().size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->42 [style = dashed, label="0"];
5->10 [style = bold, label=""];
1->37 [style = dashed, label="0"];
30->24 [style = bold, label=""];
23->16 [style = bold, label=""];
0->9 [style = bold, label=""];
16->18 [style = bold, label=""];
20->17 [style = bold, label=""];
39->16 [style = bold, label=""];
37->28 [style = bold, label=""];
12->45 [style = dashed, label="0"];
15->7 [style = bold, label=""];
24->2 [style = bold, label=""];
17->1 [style = bold, label=""];
19->12 [style = bold, label=""];
45->3 [style = bold, label=""];
47->48 [style = bold, label=""];
3->25 [style = bold, label=""];
3->31 [style = bold, label=""];
44->29 [style = bold, label=""];
29->41 [style = bold, label=""];
46->49 [style = bold, label=""];
28->38 [style = bold, label=""];
17->35 [style = dashed, label="0"];
22->29 [style = dashed, label="0"];
10->46 [style = bold, label=""];
8->34 [style = dashed, label="0"];
15->32 [style = dashed, label="0"];
32->7 [style = bold, label=""];
21->38 [style = dashed, label="0"];
41->10 [style = bold, label=""];
25->6 [style = bold, label=""];
11->24 [style = bold, label=""];
8->46 [style = dashed, label="0"];
4->33 [style = dashed, label="0"];
22->5 [style = bold, label=""];
1->13 [style = bold, label=""];
34->30 [style = bold, label=""];
49->50 [style = bold, label=""];
11->49 [style = dashed, label="0"];
13->28 [style = dashed, label="0"];
6->4 [style = bold, label=""];
18->44 [style = dashed, label="0"];
26->0 [style = bold, label=""];
48->51 [style = bold, label=""];
18->22 [style = bold, label=""];
52->0 [style = bold, label=""];
10->34 [style = bold, label=""];
14->23 [style = bold, label=""];
10->8 [style = bold, label=""];
31->27 [style = bold, label=""];
35->37 [style = bold, label=""];
16->44 [style = bold, label=""];
6->27 [style = dashed, label="0"];
50->47 [style = bold, label=""];
20->36 [style = dashed, label="0"];
23->39 [style = dashed, label="0"];
33->36 [style = bold, label=""];
2->15 [style = bold, label=""];
4->20 [style = bold, label=""];
9->14 [style = bold, label=""];
25->31 [style = dashed, label="0"];
42->32 [style = bold, label=""];
43->0 [style = bold, label=""];
12->3 [style = bold, label=""];
40->45 [style = bold, label=""];
27->33 [style = bold, label=""];
36->35 [style = bold, label=""];
11->30 [style = dashed, label="0"];
13->21 [style = bold, label=""];
14->39 [style = bold, label=""];
8->11 [style = bold, label=""];
7->19 [style = bold, label=""];
5->41 [style = dashed, label="0"];
19->40 [style = dashed, label="0"];
7->40 [style = bold, label=""];
24->42 [style = bold, label=""];
}
