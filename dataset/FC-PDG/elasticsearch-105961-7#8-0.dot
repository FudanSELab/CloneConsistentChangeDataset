digraph {
36 [style = filled, label = "request.text(\"the quick brown fox\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(0).getTerm())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "request.analyzer(\"standard\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"brown\",tokens.get(2).getTerm())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "request.tokenizer(\"standard\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "request.addTokenFilter(Map.of(\"type\",\"mock\",\"stopword\",\"brown\"))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(1,tokens.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "tokens = analyze.getTokens()@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(4,tokens.size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "request.tokenizer(\"standard\")@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "request = new AnalyzeAction.Request()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,null,maxTokenCount)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,environment,randomBoolean()? mockIndexService(): null,maxTokenCount)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "request.text(\"ABc\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(\"foxbar\",tokens.get(3).getTerm())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "request.addCharFilter(\"append\")@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "tokens = analyze.getTokens()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(4,tokens.size())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"brown\",tokens.get(1).getTerm())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testNoIndexAnalyzers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tokens = analyze.getTokens()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testNoIndexAnalyzers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "request.addTokenFilter(\"mock\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "request.tokenizer(\"standard\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<AnalyzeAction.AnalyzeToken> tokens = analyze.getTokens()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,null,maxTokenCount)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "request.addCharFilter(\"append_foo\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"fox\",tokens.get(2).getTerm())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "request.addCharFilter(\"append\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"foxfoo\",tokens.get(3).getTerm())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,environment,randomBoolean()? mockIndexService(): null,maxTokenCount)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(3,tokens.size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"brown\",tokens.get(2).getTerm())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AnalyzeAction.Request request = new AnalyzeAction.Request()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "request.text(\"the qu1ck brown fox\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "request.normalizer(\"my_normalizer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "AnalyzeAction.Response analyze = TransportAnalyzeAction.analyze(request,registry,null,maxTokenCount)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "request = new AnalyzeAction.Request()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"foxbar\",tokens.get(2).getTerm())@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "AnalyzeAction.Request request = new AnalyzeAction.Request(\"index\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,null,maxTokenCount)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "request = new AnalyzeAction.Request()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "request.tokenizer(\"standard\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,environment,randomBoolean()? mockIndexService(): null,maxTokenCount)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "tokens = analyze.getTokens()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "analyze = TransportAnalyzeAction.analyze(request,registry,null,maxTokenCount)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(3,tokens.size())@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(\"abc\",tokens.get(0).getTerm())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"the\",tokens.get(0).getTerm())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "AnalyzeAction.Response analyze = TransportAnalyzeAction.analyze(request,registry,environment,mockIndexService(),maxTokenCount)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testNormalizerWithIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(4,tokens.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"qu1ck\",tokens.get(1).getTerm())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "request = new AnalyzeAction.Request()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
57->62 [style = bold, label=""];
55->49 [style = bold, label=""];
27->9 [style = bold, label=""];
50->47 [style = solid, label="analyze"];
21->30 [style = bold, label=""];
53->54 [style = bold, label=""];
0->59 [style = dashed, label="0"];
33->47 [style = dashed, label="0"];
7->14 [style = bold, label=""];
3->36 [style = bold, label=""];
36->0 [style = bold, label=""];
34->2 [style = bold, label=""];
0->25 [style = bold, label=""];
43->53 [style = bold, label=""];
8->47 [style = solid, label="request"];
45->35 [style = bold, label=""];
19->3 [style = bold, label=""];
24->27 [style = bold, label=""];
16->58 [style = dashed, label="0"];
31->45 [style = solid, label="request"];
3->25 [style = solid, label="request"];
34->52 [style = bold, label=""];
62->60 [style = bold, label=""];
48->44 [style = bold, label=""];
54->41 [style = bold, label=""];
10->7 [style = bold, label=""];
42->40 [style = bold, label=""];
25->33 [style = solid, label="analyze"];
5->45 [style = dashed, label="0"];
22->17 [style = bold, label=""];
56->48 [style = bold, label=""];
15->12 [style = bold, label=""];
1->45 [style = bold, label=""];
25->38 [style = bold, label=""];
44->42 [style = bold, label=""];
58->61 [style = bold, label=""];
23->20 [style = bold, label=""];
18->24 [style = bold, label=""];
59->25 [style = bold, label=""];
16->8 [style = bold, label=""];
35->15 [style = bold, label=""];
31->32 [style = bold, label=""];
28->31 [style = bold, label=""];
47->45 [style = solid, label="analyze"];
38->16 [style = bold, label=""];
45->52 [style = solid, label="analyze"];
2->10 [style = bold, label=""];
18->2 [style = solid, label="request"];
3->62 [style = dashed, label="0"];
33->5 [style = solid, label="analyze"];
14->23 [style = bold, label=""];
13->26 [style = bold, label=""];
6->13 [style = bold, label=""];
31->5 [style = solid, label="request"];
8->33 [style = solid, label="request"];
39->1 [style = bold, label=""];
32->39 [style = bold, label=""];
11->55 [style = bold, label=""];
47->21 [style = bold, label=""];
5->35 [style = bold, label=""];
25->50 [style = dashed, label="0"];
46->3 [style = bold, label=""];
20->11 [style = bold, label=""];
18->52 [style = solid, label="request"];
3->50 [style = solid, label="request"];
38->58 [style = bold, label=""];
17->47 [style = bold, label=""];
62->25 [style = solid, label="request"];
51->56 [style = bold, label=""];
17->33 [style = bold, label=""];
52->10 [style = bold, label=""];
30->37 [style = bold, label=""];
2->52 [style = dashed, label="0"];
60->59 [style = bold, label=""];
12->6 [style = bold, label=""];
49->43 [style = bold, label=""];
4->28 [style = bold, label=""];
37->4 [style = bold, label=""];
0->50 [style = bold, label=""];
55->51 [style = solid, label="request"];
5->2 [style = solid, label="analyze"];
50->38 [style = bold, label=""];
41->51 [style = bold, label=""];
52->51 [style = solid, label="analyze"];
36->60 [style = dashed, label="0"];
29->22 [style = bold, label=""];
33->21 [style = bold, label=""];
8->29 [style = bold, label=""];
26->18 [style = bold, label=""];
9->34 [style = bold, label=""];
}
