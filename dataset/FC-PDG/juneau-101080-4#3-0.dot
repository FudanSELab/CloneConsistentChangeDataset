digraph {
2 [style = filled, label = "c.get().header(of(MediaType.JSON)).run().assertBody().is(\"application/json\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(\"application/json\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "c.get().header(contentType(VALUE)).run().assertBody().is(VALUE)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "c.get().header(new ContentType(VALUE)).run().assertBody().is(VALUE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "c.get().header(contentType((Supplier<?>)null)).run().assertBody().isEmpty()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "c.get().header(of(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c.get().header(contentType(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "c.get().header(contentType(null)).run().assertBody().is(VALUE)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "c.get().header(contentType(MediaType.JSON)).run().assertBody().is(\"application/json\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "c.get().header(contentType((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "c.get().header(contentType(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "c.get().header(contentType((MediaType)null)).run().assertBody().isEmpty()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "c.get().header(contentType(null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "c.get().header(contentType((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "c.get().header(of((MediaType)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "c.get().header(contentType(null)).run().assertBody().is(\"application/json\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "c.get().header(new CacheControl(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "c.get().header(of(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
14->16 [style = bold, label=""];
25->0 [style = bold, label=""];
5->8 [style = bold, label=""];
11->20 [style = dashed, label="0"];
9->11 [style = bold, label=""];
27->0 [style = bold, label=""];
9->24 [style = dashed, label="0"];
0->6 [style = bold, label=""];
0->17 [style = bold, label=""];
1->3 [style = bold, label=""];
11->12 [style = bold, label=""];
6->17 [style = dashed, label="0"];
2->10 [style = bold, label=""];
22->23 [style = bold, label=""];
13->15 [style = dashed, label="0"];
21->18 [style = bold, label=""];
1->22 [style = dashed, label="0"];
4->0 [style = bold, label=""];
24->20 [style = bold, label=""];
12->26 [style = dashed, label="0"];
3->23 [style = dashed, label="0"];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
18->22 [style = bold, label=""];
2->14 [style = dashed, label="0"];
3->7 [style = bold, label=""];
7->19 [style = dashed, label="0"];
15->24 [style = bold, label=""];
23->19 [style = bold, label=""];
20->12 [style = bold, label=""];
12->14 [style = bold, label=""];
5->21 [style = dashed, label="0"];
8->18 [style = dashed, label="0"];
13->9 [style = bold, label=""];
10->16 [style = dashed, label="0"];
19->15 [style = bold, label=""];
17->21 [style = bold, label=""];
11->26 [style = bold, label=""];
}
