digraph {
36 [style = filled, label = "IdealState idealState = _setupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,testDb)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verifyAssignmentInIdealStateWithPersistDisabled(idealState,excludedInstances)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "_setupTool.addResourceToCluster(CLUSTER_NAME,testDb,5,BuiltInStateModelDefinitions.LeaderStandby.name(),rebalanceMode.name())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Set<String> liveInstances = new HashSet<String>(_instanceNames)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "IdealState idealState = _setupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,testDb)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verifyAssignmentInIdealStateWithPersistEnabled(idealState,new HashSet<String>())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "enablePersistBestPossibleAssignment(_gZkClient,CLUSTER_NAME,true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Thread.sleep(2000)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(verifierBuilder.build().verify())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "String testDb = \"TestDB1-\" + rebalanceMode.name()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "BestPossibleExternalViewVerifier.Builder verifierBuilder = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).setResources(new HashSet<String>(Collections.singleton(testDb)))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "_participants(0(.syncStop()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "_participants(0(.syncStart()@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "RebalanceMode rebalanceMode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Boolean result = ClusterStateVerifier.verifyByZkCallback(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,CLUSTER_NAME))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "_setupTool.getClusterManagementTool().dropResource(CLUSTER_NAME,testDb)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "idealState = _setupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,testDb)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RebalanceMode rebalanceMode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(verifier.verify())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testEnablePersist['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "_setupTool.rebalanceStorageCluster(CLUSTER_NAME,testDb,3)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String testDb = \"TestDB2-\" + rebalanceMode.name()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "_participants(0(.syncStart()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Set<String> excludedInstances = new HashSet<String>()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(verifierBuilder.build().verify())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "verifierBuilder.setExpectLiveInstances(liveInstances)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "_setupTool.getClusterManagementTool().dropResource(CLUSTER_NAME,testDb)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "excludedInstances.add(_participants(0(.getInstanceName())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Thread.sleep(500)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testEnablePersist['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "testDisablePersist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(result)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "excludedInstances.add(_participants(0(.getInstanceName())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "_participants(0( = new MockParticipantManager(ZK_ADDR,CLUSTER_NAME,_participants(0(.getInstanceName())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "liveInstances.remove(_participants(0(.getInstanceName())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "HelixClusterVerifier verifier = new BestPossibleExternalViewVerifier.Builder(CLUSTER_NAME).setZkAddr(ZK_ADDR).setResources(new HashSet<String>(Collections.singleton(testDb))).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "_participants(0( = new MockParticipantManager(ZK_ADDR,CLUSTER_NAME,_participants(0(.getInstanceName())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "Set<String> excludedInstances = new HashSet<String>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->21 [style = bold, label=""];
11->34 [style = bold, label=""];
17->19 [style = dotted, label="true"];
7->23 [style = bold, label=""];
21->11 [style = bold, label=""];
13->26 [style = dashed, label="0"];
23->28 [style = solid, label="liveInstances"];
16->1 [style = solid, label="excludedInstances"];
25->15 [style = bold, label=""];
13->7 [style = bold, label=""];
36->37 [style = bold, label=""];
10->6 [style = bold, label=""];
15->11 [style = solid, label="testDb"];
15->18 [style = bold, label=""];
3->2 [style = bold, label=""];
23->24 [style = bold, label=""];
38->4 [style = bold, label=""];
9->5 [style = solid, label="idealState"];
11->1 [style = solid, label="idealState"];
29->35 [style = bold, label=""];
6->11 [style = bold, label=""];
15->0 [style = solid, label="testDb"];
12->1 [style = bold, label=""];
10->16 [style = solid, label="idealState"];
2->10 [style = bold, label=""];
0->8 [style = bold, label=""];
11->16 [style = bold, label=""];
22->20 [style = bold, label=""];
26->9 [style = bold, label=""];
1->14 [style = bold, label=""];
15->4 [style = solid, label="testDb"];
8->27 [style = dashed, label="0"];
19->31 [style = dashed, label="0"];
33->13 [style = bold, label=""];
7->3 [style = bold, label=""];
7->36 [style = bold, label=""];
16->12 [style = bold, label=""];
32->1 [style = bold, label=""];
0->27 [style = bold, label=""];
35->4 [style = solid, label="testDb"];
15->14 [style = solid, label="testDb"];
35->36 [style = solid, label="testDb"];
36->11 [style = solid, label="idealState"];
35->34 [style = solid, label="testDb"];
37->30 [style = bold, label=""];
17->15 [style = bold, label=""];
30->6 [style = bold, label=""];
15->9 [style = solid, label="testDb"];
37->11 [style = solid, label="excludedInstances"];
25->19 [style = dotted, label="true"];
35->38 [style = bold, label=""];
27->26 [style = bold, label=""];
8->13 [style = bold, label=""];
29->31 [style = dotted, label="true"];
15->10 [style = solid, label="testDb"];
15->12 [style = solid, label="testDb"];
13->9 [style = bold, label=""];
24->28 [style = bold, label=""];
8->33 [style = bold, label=""];
9->5 [style = bold, label=""];
3->2 [style = solid, label="result"];
35->38 [style = solid, label="testDb"];
15->27 [style = solid, label="testDb"];
5->7 [style = bold, label=""];
4->0 [style = bold, label=""];
18->4 [style = bold, label=""];
15->35 [style = dashed, label="0"];
34->32 [style = bold, label=""];
14->22 [style = bold, label=""];
6->16 [style = solid, label="excludedInstances"];
}
