digraph {
110 [style = filled, label = "assertThat(tagsAggResult.getProfiledChildren().size(),equalTo(2))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Map<String,ProfileShardResult> profileResults = response.getProfileResults()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@140@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertThat(tagsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "maxBreakdown = maxAggResult.getTimeBreakdown()@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
134 [style = filled, label = "assertThat(avgBreakdown,notNullValue())@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Map<String,Long> tagsBreakdown = tagsAggResult.getTimeBreakdown()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertThat(avgBreakdown.get(COLLECT),greaterThan(0L))@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertThat(maxAggResult.getQueryName(),equalTo(\"MaxAggregator\"))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(tagsAggResult.getDebugInfo(),equalTo(Map.of(WRAPPED,true)))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "assertThat(avgAggResult.getDebugInfo(),equalTo(Map.of()))@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertThat(stringsBreakdown.get(INITIALIZE),greaterThan(0L))@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertThat(maxBreakdown.get(REDUCE),equalTo(0L))@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
175 [style = filled, label = "ProfileResult avgAggResult = termsAggResult.getProfiledChildren().get(0)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(maxBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@147@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(tagsAggResult,notNullValue())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "assertThat(termsAggResult.getTime(),greaterThan(0L))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "assertThat(tagsBreakdown.get(INITIALIZE),greaterThan(0L))@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
170 [style = filled, label = "assertThat(termsBreakdown.get(REDUCE),equalTo(0L))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(avgBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "assertThat(stringsAggResult.getTime(),greaterThan(0L))@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(avgBreakdown.get(COLLECT),greaterThan(0L))@@@136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "Map<String,Long> histoBreakdown = histoAggResult.getTimeBreakdown()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(stringsBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "assertThat(histoAggResult.getProfiledChildren().size(),equalTo(1))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(aggProfileResultsList.size(),equalTo(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "assertThat(tagsAggResult.getProfiledChildren().size(),equalTo(2))@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "assertThat(stringsAggResult.getDebugInfo(),equalTo(Map.of(WRAPPED,true)))@@@84@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "assertThat(histoAggResult.getTime(),greaterThan(0L))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertThat(maxAggResult.getDebugInfo(),equalTo(Map.of()))@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertThat(tagsBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(maxBreakdown,notNullValue())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertSearchResponse(response)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(avgBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "Map<String,Long> maxBreakdown = maxAggResult.getTimeBreakdown()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
169 [style = filled, label = "assertThat(avgAggResult.getTime(),greaterThan(0L))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "avgBreakdown = avgAggResult.getTimeBreakdown()@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ProfileResult avgAggResult = tagsAggResultSubAggregations.get(\"avg\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,ProfileResult> stringsAggResultSubAggregations = stringsAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(avgAggResult.getTime(),greaterThan(0L))@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(maxAggResult.getQueryName(),equalTo(\"MaxAggregator\"))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertThat(histoDebugInfo,notNullValue())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "assertThat(maxBreakdown.get(COLLECT),greaterThan(0L))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertThat(histoAggResult.getLuceneDescription(),equalTo(\"histo\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "assertThat(histoAggResult,notNullValue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "tagsBreakdown = tagsAggResult.getTimeBreakdown()@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "maxBreakdown = maxAggResult.getTimeBreakdown()@@@145@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "ProfileResult maxAggResult = tagsAggResultSubAggregations.get(\"max\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "assertThat(aggProfileResults,notNullValue())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "Map<String,Long> termsBreakdown = termsAggResult.getTimeBreakdown()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "Map<String,Long> avgBreakdown = termsAggResult.getTimeBreakdown()@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertThat(avgBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@137@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(tagsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "assertThat(termsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "assertThat(aggProfileResultsList,notNullValue())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertThat(tagsAggResult.getTime(),greaterThan(0L))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(tagsBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assertThat(histoBreakdown.get(REDUCE),equalTo(0L))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(avgBreakdown.get(REDUCE),equalTo(0L))@@@138@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "assertThat(termsBreakdown.get(INITIALIZE),greaterThan(0L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(maxBreakdown.get(REDUCE),equalTo(0L))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "assertThat(histoBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
168 [style = filled, label = "assertThat(termsBreakdown,notNullValue())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@59@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SearchResponse response = client().prepareSearch(\"idx\").setProfile(true).addAggregation(histogram(\"histo\").field(NUMBER_FIELD).interval(1L).subAggregation(terms(\"tags\").field(TAG_FIELD).subAggregation(avg(\"avg\").field(NUMBER_FIELD)).subAggregation(max(\"max\").field(NUMBER_FIELD))).subAggregation(terms(\"strings\").field(STRING_FIELD).subAggregation(avg(\"avg\").field(NUMBER_FIELD)).subAggregation(max(\"max\").field(NUMBER_FIELD)).subAggregation(terms(\"tags\").field(TAG_FIELD).subAggregation(avg(\"avg\").field(NUMBER_FIELD)).subAggregation(max(\"max\").field(NUMBER_FIELD))))).get()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "Map<String,Long> stringsBreakdown = stringsAggResult.getTimeBreakdown()@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "assertThat(maxAggResult.getQueryName(),equalTo(\"MaxAggregator\"))@@@143@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "ProfileResult tagsAggResult = histoAggResultSubAggregations.get(\"tags\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(maxAggResult.getProfiledChildren().size(),equalTo(0))@@@153@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "assertThat(termsBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "Map<String,Object> histoDebugInfo = histoAggResult.getDebugInfo()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "assertThat(histoBreakdown.get(COLLECT),greaterThan(0L))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertThat(avgBreakdown.get(INITIALIZE),greaterThan(0L))@@@135@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "assertThat(avgBreakdown,notNullValue())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "assertThat(termsAggResult.getLuceneDescription(),equalTo(\"terms\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(maxAggResult.getProfiledChildren().size(),equalTo(0))@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertThat(tagsBreakdown.get(INITIALIZE),greaterThan(0L))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "List<ProfileResult> aggProfileResultsList = aggProfileResults.getProfileResults()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(profileShardResult,notNullValue())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "assertThat(avgBreakdown.get(INITIALIZE),greaterThan(0L))@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "assertThat(termsAggResult,notNullValue())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(tagsBreakdown.get(COLLECT),greaterThan(0L))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "assertThat(maxBreakdown,notNullValue())@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(avgBreakdown.get(COLLECT),greaterThan(0L))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(avgBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertThat(stringsAggResult.getProfiledChildren().size(),equalTo(3))@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "assertThat(tagsAggResult.getTime(),greaterThan(0L))@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertThat(tagsBreakdown,notNullValue())@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(histoAggResult.getQueryName(),equalTo(\"NumericHistogramAggregator\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "assertThat(tagsBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "assertThat(maxBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertThat(histoBreakdown,notNullValue())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(tagsAggResult.getDebugInfo(),equalTo(Map.of(WRAPPED,true)))@@@125@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(((Number)histoDebugInfo.get(TOTAL_BUCKETS)).longValue(),greaterThan(0L))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "assertThat(avgBreakdown.get(REDUCE),equalTo(0L))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
174 [style = filled, label = "testMultiLevelProfile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testComplexProfile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertThat(avgBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "assertRemapTermsDebugInfo(stringsAggResult)@@@84@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "assertThat(tagsAggResult.getLuceneDescription(),equalTo(\"tags\"))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "avgBreakdown = avgAggResult.getTimeBreakdown()@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "tagsAggResult = stringsAggResultSubAggregations.get(\"tags\")@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(avgAggResult.getDebugInfo(),equalTo(Map.of()))@@@139@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ProfileResult histoAggResult = aggProfileResultsList.get(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "assertThat(maxAggResult.getTime(),greaterThan(0L))@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "assertThat(maxBreakdown.get(REDUCE),equalTo(0L))@@@151@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertThat(maxBreakdown.get(INITIALIZE),greaterThan(0L))@@@148@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertThat(profileResults.size(),equalTo(getNumShards(\"idx\").numPrimaries))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(tagsBreakdown.get(REDUCE),equalTo(0L))@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "assertThat(termsAggResult.getProfiledChildren().size(),equalTo(1))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertThat(stringsBreakdown.get(REDUCE),equalTo(0L))@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertThat(stringsBreakdown,notNullValue())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "assertThat(avgAggResult.getProfiledChildren().size(),equalTo(0))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
157 [style = filled, label = "assertThat(termsBreakdown.get(COLLECT),greaterThan(0L))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "SearchResponse response = client().prepareSearch(\"idx\").setProfile(true).addAggregation(histogram(\"histo\").field(NUMBER_FIELD).interval(1L).subAggregation(terms(\"terms\").field(TAG_FIELD).order(BucketOrder.aggregation(\"avg\",false)).subAggregation(avg(\"avg\").field(NUMBER_FIELD)))).get()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "assertThat(maxBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertThat(stringsBreakdown.get(COLLECT),greaterThan(0L))@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(avgAggResult.getLuceneDescription(),equalTo(\"avg\"))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "Map<String,Long> avgBreakdown = avgAggResult.getTimeBreakdown()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "assertThat(maxAggResult,notNullValue())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,ProfileResult> tagsAggResultSubAggregations = tagsAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(tagsAggResult,notNullValue())@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "avgAggResult = stringsAggResultSubAggregations.get(\"avg\")@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "maxAggResult = tagsAggResultSubAggregations.get(\"max\")@@@141@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(maxAggResult,notNullValue())@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(tagsBreakdown.get(COLLECT),greaterThan(0L))@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assertThat(avgAggResult.getTime(),greaterThan(0L))@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertThat(maxBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(maxBreakdown.get(COLLECT),greaterThan(0L))@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertThat(tagsBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "assertRemapTermsDebugInfo(tagsAggResult)@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "AggregationProfileShardResult aggProfileResults = profileShardResult.getAggregationProfileResults()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertThat(avgBreakdown.get(REDUCE),equalTo(0L))@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertThat(maxAggResult.getTime(),greaterThan(0L))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "ProfileResult termsAggResult = histoAggResult.getProfiledChildren().get(0)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
166 [style = filled, label = "assertThat(termsAggResult.getDebugInfo(),equalTo(Map.of(WRAPPED,true)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
144 [style = filled, label = "assertThat(maxBreakdown.get(INITIALIZE),greaterThan(0L))@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "assertThat(maxAggResult,notNullValue())@@@142@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(maxAggResult.getDebugInfo(),equalTo(Map.of()))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(maxBreakdown,notNullValue())@@@146@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "avgAggResult = tagsAggResultSubAggregations.get(\"avg\")@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "maxAggResult = stringsAggResultSubAggregations.get(\"max\")@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "assertThat(avgAggResult.getDebugInfo(),equalTo(Map.of()))@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "assertThat(termsBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(maxBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
173 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(maxAggResult.getDebugInfo(),equalTo(Map.of()))@@@152@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertThat(maxAggResult.getProfiledChildren().size(),equalTo(0))@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(maxBreakdown.get(INITIALIZE),greaterThan(0L))@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertThat(histoBreakdown.get(INITIALIZE),greaterThan(0L))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(stringsAggResult.getQueryName(),equalTo(.getSimpleName()))@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
167 [style = filled, label = "assertThat(avgBreakdown,notNullValue())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(avgAggResult.getQueryName(),equalTo(\"AvgAggregator\"))@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tagsAggResultSubAggregations = tagsAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "assertRemapTermsDebugInfo(tagsAggResult)@@@125@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
143 [style = filled, label = "Map<String,ProfileResult> histoAggResultSubAggregations = histoAggResult.getProfiledChildren().stream().collect(Collectors.toMap(null,null))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(maxBreakdown.get(BUILD_AGGREGATION),greaterThan(0L))@@@150@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(histoAggResult.getProfiledChildren().size(),equalTo(2))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "assertThat(stringsBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(maxAggResult.getTime(),greaterThan(0L))@@@144@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertThat(histoBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertThat(stringsAggResult,notNullValue())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assertThat(avgAggResult,notNullValue())@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(avgBreakdown.get(INITIALIZE),greaterThan(0L))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(tagsBreakdown,notNullValue())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "assertThat(tagsBreakdown.get(REDUCE),equalTo(0L))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "testComplexProfile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "ProfileResult stringsAggResult = histoAggResultSubAggregations.get(\"strings\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "assertThat(maxBreakdown.get(COLLECT),greaterThan(0L))@@@149@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(avgBreakdown.keySet(),equalTo(BREAKDOWN_KEYS))@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(profileResults,notNullValue())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(histoDebugInfo.keySet(),equalTo(Set.of(TOTAL_BUCKETS)))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68->110 [style = bold, label=""];
145->45 [style = bold, label=""];
175->173 [style = solid, label="avgAggResult"];
102->31 [style = bold, label=""];
68->166 [style = dashed, label="0"];
19->150 [style = bold, label=""];
128->84 [style = bold, label=""];
25->137 [style = bold, label=""];
69->131 [style = bold, label=""];
27->28 [style = bold, label=""];
46->134 [style = solid, label="avgBreakdown"];
20->0 [style = bold, label=""];
36->172 [style = dashed, label="0"];
163->171 [style = bold, label=""];
93->49 [style = bold, label=""];
146->94 [style = bold, label=""];
52->162 [style = dashed, label="0"];
22->81 [style = bold, label=""];
15->87 [style = bold, label=""];
101->25 [style = bold, label=""];
138->2 [style = bold, label=""];
7->139 [style = solid, label="aggProfileResults"];
121->57 [style = solid, label="avgBreakdown"];
166->156 [style = bold, label=""];
84->93 [style = bold, label=""];
48->122 [style = bold, label=""];
87->158 [style = dashed, label="0"];
14->7 [style = bold, label=""];
76->167 [style = bold, label=""];
153->110 [style = bold, label=""];
136->69 [style = bold, label=""];
143->164 [style = dashed, label="0"];
106->62 [style = bold, label=""];
71->127 [style = bold, label=""];
89->113 [style = bold, label=""];
9->99 [style = bold, label=""];
7->139 [style = bold, label=""];
54->118 [style = bold, label=""];
118->48 [style = bold, label=""];
169->76 [style = bold, label=""];
82->52 [style = bold, label=""];
116->12 [style = bold, label=""];
62->18 [style = bold, label=""];
162->157 [style = bold, label=""];
47->60 [style = bold, label=""];
114->13 [style = bold, label=""];
8->169 [style = bold, label=""];
44->107 [style = bold, label=""];
91->36 [style = bold, label=""];
69->131 [style = solid, label="maxAggResult"];
164->161 [style = solid, label="termsAggResult"];
60->51 [style = bold, label=""];
175->173 [style = bold, label=""];
30->148 [style = bold, label=""];
80->47 [style = bold, label=""];
70->124 [style = bold, label=""];
88->90 [style = bold, label=""];
45->136 [style = bold, label=""];
113->151 [style = dashed, label="0"];
55->59 [style = bold, label=""];
31->119 [style = bold, label=""];
130->97 [style = bold, label=""];
4->80 [style = bold, label=""];
120->153 [style = bold, label=""];
28->73 [style = bold, label=""];
24->44 [style = bold, label=""];
121->76 [style = dashed, label="0"];
127->77 [style = bold, label=""];
73->35 [style = bold, label=""];
123->16 [style = bold, label=""];
122->70 [style = bold, label=""];
22->81 [style = solid, label="response"];
104->32 [style = bold, label=""];
99->109 [style = bold, label=""];
170->166 [style = bold, label=""];
131->78 [style = bold, label=""];
95->41 [style = bold, label=""];
120->170 [style = dashed, label="0"];
32->26 [style = bold, label=""];
18->168 [style = dashed, label="0"];
57->24 [style = bold, label=""];
15->157 [style = dashed, label="0"];
164->161 [style = bold, label=""];
113->114 [style = bold, label=""];
108->115 [style = bold, label=""];
105->133 [style = bold, label=""];
45->14 [style = bold, label=""];
119->30 [style = bold, label=""];
133->142 [style = bold, label=""];
132->145 [style = bold, label=""];
16->111 [style = bold, label=""];
168->155 [style = bold, label=""];
40->92 [style = bold, label=""];
100->85 [style = bold, label=""];
70->124 [style = solid, label="avgBreakdown"];
34->89 [style = bold, label=""];
0->141 [style = bold, label=""];
173->50 [style = bold, label=""];
90->129 [style = bold, label=""];
35->151 [style = solid, label="stringsAggResult"];
121->57 [style = bold, label=""];
86->126 [style = bold, label=""];
92->71 [style = bold, label=""];
8->76 [style = bold, label=""];
91->36 [style = solid, label="tagsAggResult"];
82->155 [style = dashed, label="0"];
26->20 [style = bold, label=""];
94->86 [style = bold, label=""];
52->15 [style = bold, label=""];
144->75 [style = bold, label=""];
43->144 [style = bold, label=""];
72->55 [style = bold, label=""];
172->160 [style = bold, label=""];
53->50 [style = solid, label="avgAggResult"];
154->22 [style = bold, label=""];
89->151 [style = bold, label=""];
78->103 [style = bold, label=""];
75->100 [style = bold, label=""];
13->54 [style = bold, label=""];
155->162 [style = bold, label=""];
156->175 [style = bold, label=""];
39->88 [style = bold, label=""];
38->9 [style = bold, label=""];
129->72 [style = bold, label=""];
137->152 [style = solid, label="tagsAggResult"];
41->146 [style = bold, label=""];
148->98 [style = bold, label=""];
63->116 [style = solid, label="aggProfileResultsList"];
115->138 [style = bold, label=""];
29->143 [style = bold, label=""];
150->39 [style = bold, label=""];
62->18 [style = solid, label="tagsBreakdown"];
20->152 [style = bold, label=""];
74->34 [style = bold, label=""];
105->133 [style = solid, label="maxAggResult"];
171->168 [style = solid, label="termsBreakdown"];
42->14 [style = bold, label=""];
108->115 [style = solid, label="avgAggResult"];
23->42 [style = bold, label=""];
53->50 [style = bold, label=""];
167->57 [style = bold, label=""];
161->172 [style = bold, label=""];
6->1 [style = bold, label=""];
125->112 [style = bold, label=""];
160->163 [style = bold, label=""];
51->37 [style = bold, label=""];
63->116 [style = bold, label=""];
77->79 [style = solid, label="tagsBreakdown"];
67->105 [style = bold, label=""];
151->114 [style = bold, label=""];
117->38 [style = solid, label="maxBreakdown"];
159->81 [style = solid, label="response"];
110->11 [style = bold, label=""];
5->117 [style = bold, label=""];
165->164 [style = bold, label=""];
61->23 [style = bold, label=""];
158->170 [style = bold, label=""];
147->65 [style = bold, label=""];
35->95 [style = solid, label="stringsAggResult"];
124->64 [style = bold, label=""];
98->27 [style = bold, label=""];
171->168 [style = bold, label=""];
111->43 [style = bold, label=""];
76->167 [style = solid, label="avgBreakdown"];
112->128 [style = bold, label=""];
59->135 [style = bold, label=""];
129->72 [style = solid, label="histoBreakdown"];
17->149 [style = bold, label=""];
79->140 [style = bold, label=""];
37->67 [style = bold, label=""];
49->29 [style = bold, label=""];
174->159 [style = bold, label=""];
62->171 [style = dashed, label="0"];
10->22 [style = bold, label=""];
94->86 [style = solid, label="stringsBreakdown"];
36->56 [style = bold, label=""];
102->31 [style = solid, label="maxBreakdown"];
2->46 [style = bold, label=""];
143->91 [style = bold, label=""];
65->3 [style = bold, label=""];
33->66 [style = bold, label=""];
106->163 [style = dashed, label="0"];
76->121 [style = bold, label=""];
141->21 [style = bold, label=""];
159->81 [style = bold, label=""];
137->40 [style = bold, label=""];
3->96 [style = bold, label=""];
152->141 [style = bold, label=""];
142->5 [style = bold, label=""];
137->40 [style = solid, label="tagsAggResult"];
107->132 [style = bold, label=""];
97->58 [style = bold, label=""];
16->111 [style = solid, label="maxBreakdown"];
109->17 [style = bold, label=""];
61->23 [style = solid, label="profileResults"];
120->68 [style = bold, label=""];
103->102 [style = bold, label=""];
54->118 [style = solid, label="avgAggResult"];
35->95 [style = bold, label=""];
134->4 [style = bold, label=""];
56->106 [style = bold, label=""];
77->79 [style = bold, label=""];
49->165 [style = bold, label=""];
21->108 [style = bold, label=""];
11->53 [style = bold, label=""];
87->120 [style = bold, label=""];
135->125 [style = bold, label=""];
1->123 [style = bold, label=""];
110->156 [style = dashed, label="0"];
64->147 [style = bold, label=""];
83->74 [style = bold, label=""];
46->134 [style = bold, label=""];
157->158 [style = bold, label=""];
140->104 [style = bold, label=""];
58->6 [style = solid, label="maxAggResult"];
50->8 [style = bold, label=""];
81->61 [style = bold, label=""];
149->33 [style = bold, label=""];
18->82 [style = bold, label=""];
96->130 [style = bold, label=""];
58->6 [style = bold, label=""];
19->150 [style = solid, label="histoAggResult"];
117->38 [style = bold, label=""];
126->83 [style = bold, label=""];
85->101 [style = bold, label=""];
139->63 [style = bold, label=""];
12->19 [style = bold, label=""];
66->14 [style = bold, label=""];
29->165 [style = dashed, label="0"];
128->84 [style = solid, label="histoDebugInfo"];
91->153 [style = solid, label="tagsAggResult"];
}
