digraph {
7 [style = filled, label = "taskRunner.registerListener(anyObject(),anyObject())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Capture<DataSourceMetadata> captureDataSourceMetadata = EasyMock.newCapture()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "NullPointerException npe@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expect(taskStorage.getActiveTasks()).andReturn(ImmutableList.of()).anyTimes()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KafkaDataSourceMetadata kafkaDataSourceMetadata = new KafkaDataSourceMetadata(new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,1000L,1,1000L,2,1000L)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expect(taskMaster.getTaskQueue()).andReturn(Optional.of(taskQueue)).anyTimes()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.reset(indexerMetadataStorageCoordinator)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verifyAll()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KafkaDataSourceMetadata resetMetadata = new KafkaDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(topic,ImmutableMap.of(1,1000L,2,1000L),ImmutableSet.of()))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertTrue(npe.getCause() == null)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "supervisor.resetInternal(resetMetadata)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testResetDataSourceMetadata['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "supervisor.runInternal()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "supervisor = getSupervisor(1,1,true,\"PT1H\",null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expect(indexerMetadataStorageCoordinator.resetDataSourceMetadata(capture(captureDataSource),capture(captureDataSourceMetadata))).andReturn(true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "expect(indexerMetadataStorageCoordinator.getDataSourceMetadata(DATASOURCE)).andReturn(kafkaDataSourceMetadata)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expect(taskMaster.getTaskRunner()).andReturn(Optional.of(taskRunner)).anyTimes()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "supervisor.start()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testResetNoDataSourceMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Capture<String> captureDataSource = EasyMock.newCapture()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "replay(indexerMetadataStorageCoordinator)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "KafkaDataSourceMetadata resetMetadata = new KafkaDataSourceMetadata(new SeekableStreamPartitions<>(topic,ImmutableMap.of(1,1000L,2,1000L)))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testResetNoDataSourceMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "replayAll()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(captureDataSource.getValue(),DATASOURCE)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KafkaDataSourceMetadata expectedMetadata = new KafkaDataSourceMetadata(new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,1000L)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(captureDataSourceMetadata.getValue(),expectedMetadata)@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyAll()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "replay(indexerMetadataStorageCoordinator)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expect(taskRunner.getRunningTasks()).andReturn(Collections.EMPTY_LIST).anyTimes()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
29->27 [style = bold, label=""];
13->7 [style = bold, label=""];
19->9 [style = bold, label=""];
26->28 [style = dotted, label="true"];
20->10 [style = bold, label=""];
8->0 [style = bold, label=""];
11->2 [style = solid, label="resetMetadata"];
9->16 [style = bold, label=""];
5->1 [style = bold, label=""];
21->30 [style = bold, label=""];
16->15 [style = bold, label=""];
11->9 [style = bold, label=""];
23->11 [style = bold, label=""];
11->17 [style = dashed, label="0"];
0->11 [style = bold, label=""];
15->6 [style = bold, label=""];
6->2 [style = bold, label=""];
24->22 [style = bold, label=""];
10->12 [style = bold, label=""];
19->25 [style = solid, label="expectedMetadata"];
12->5 [style = bold, label=""];
28->24 [style = bold, label=""];
7->4 [style = bold, label=""];
22->25 [style = bold, label=""];
30->23 [style = bold, label=""];
18->10 [style = bold, label=""];
11->19 [style = bold, label=""];
17->9 [style = bold, label=""];
0->21 [style = bold, label=""];
14->8 [style = bold, label=""];
0->17 [style = bold, label=""];
26->28 [style = bold, label=""];
4->14 [style = bold, label=""];
2->24 [style = bold, label=""];
9->29 [style = bold, label=""];
27->6 [style = bold, label=""];
23->29 [style = solid, label="kafkaDataSourceMetadata"];
16->29 [style = dashed, label="0"];
17->6 [style = solid, label="resetMetadata"];
1->13 [style = bold, label=""];
11->6 [style = solid, label="resetMetadata"];
}
