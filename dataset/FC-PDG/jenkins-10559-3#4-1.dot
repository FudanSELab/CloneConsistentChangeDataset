digraph {
9 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(newProjectName,project.getDisplayName())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCopyJobWithDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "project.setDisplayName(oldDisplayName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String oldDisplayName = \"oldDisplayName\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(projectName,project.getDisplayName())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getDisplayName())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "project.renameTo(newProjectName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testRenameJobWithNoDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(oldDisplayName,project.getDisplayName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "FreeStyleProject project = createFreeStyleProject(projectName)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testRenameJobWithNoDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
10->15 [style = bold, label=""];
0->6 [style = solid, label="projectName"];
6->7 [style = dashed, label="0"];
0->7 [style = solid, label="projectName"];
12->11 [style = bold, label=""];
1->3 [style = solid, label="newProjectName"];
1->9 [style = solid, label="newProjectName"];
1->7 [style = bold, label=""];
4->0 [style = bold, label=""];
8->0 [style = bold, label=""];
1->12 [style = solid, label="newProjectName"];
6->5 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
3->2 [style = bold, label=""];
6->9 [style = solid, label="project"];
5->10 [style = dashed, label="0"];
1->11 [style = solid, label="newProjectName"];
15->9 [style = bold, label=""];
1->2 [style = solid, label="newProjectName"];
0->1 [style = bold, label=""];
14->15 [style = solid, label="oldDisplayName"];
6->10 [style = bold, label=""];
2->9 [style = dashed, label="0"];
14->10 [style = solid, label="oldDisplayName"];
3->15 [style = dashed, label="0"];
1->14 [style = bold, label=""];
9->12 [style = bold, label=""];
0->5 [style = solid, label="projectName"];
14->6 [style = bold, label=""];
13->0 [style = bold, label=""];
}
