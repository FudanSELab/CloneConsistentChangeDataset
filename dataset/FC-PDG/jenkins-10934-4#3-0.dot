digraph {
9 [style = filled, label = "itemList.addAll(newRuns(1,10))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "test_newerThan_lt_oldest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasDownPage)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,0L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(0,historyPageFilter.runs.size())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(5),historyPageFilter.newestOnPage)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "test_olderThan_lt_oldest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasUpPage)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(1,historyPageFilter.oldestOnPage)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "test_newerThan_lt_oldest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "List<ModelObject> itemList = new ArrayList<ModelObject>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,0L,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "historyPageFilter.add(itemList)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.newestOnPage)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->0 [style = bold, label=""];
3->13 [style = bold, label=""];
4->10 [style = dashed, label="0"];
7->14 [style = dashed, label="0"];
1->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
5->9 [style = bold, label=""];
6->7 [style = bold, label=""];
15->14 [style = bold, label=""];
0->4 [style = bold, label=""];
8->11 [style = bold, label=""];
11->10 [style = bold, label=""];
5->1 [style = solid, label="itemList"];
3->8 [style = bold, label=""];
12->7 [style = bold, label=""];
2->3 [style = bold, label=""];
8->13 [style = dashed, label="0"];
14->5 [style = bold, label=""];
}
