digraph {
42 [style = filled, label = "fetcher = createFetcher(subscriptions,metrics,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "subscriptions.seek(tp0,0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "v++@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int v = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(197,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "v++@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(50,recordsFetchLagMax.value(),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "subscriptions.unsubscribe()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(100,(Double)partitionLag.metricValue(),EPSILON)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "subscriptions.unsubscribe()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,recordsFetchLagMax.value(),EPSILON)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Double.NEGATIVE_INFINITY,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(50,partitionLag.value(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(147,partitionLag.value(),EPSILON)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(100,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "v < 3@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(100,partitionLag.value(),EPSILON)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,150L,0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testReadCommittedLagMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testFetcherMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int v = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(147,recordsFetchLagMax.value(),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(197,partitionLag.value(),EPSILON)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "testFetcherMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "Metrics metrics = new Metrics()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,50L,0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(197,(Double)partitionLag.metricValue(),EPSILON)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
6->3 [style = bold, label=""];
29->15 [style = bold, label=""];
15->10 [style = bold, label=""];
28->6 [style = bold, label=""];
16->37 [style = bold, label=""];
9->11 [style = bold, label=""];
17->35 [style = dashed, label="0"];
19->9 [style = solid, label="tags"];
31->21 [style = bold, label=""];
5->28 [style = bold, label=""];
1->13 [style = bold, label=""];
30->29 [style = bold, label=""];
14->7 [style = bold, label=""];
13->1 [style = solid, label="v"];
24->38 [style = solid, label="partitionLagMetric"];
24->23 [style = solid, label="partitionLagMetric"];
8->1 [style = bold, label=""];
23->33 [style = bold, label=""];
8->20 [style = bold, label=""];
9->10 [style = solid, label="partitionLagMetric"];
7->24 [style = solid, label="maxLagMetric"];
0->8 [style = bold, label=""];
20->32 [style = dashed, label="0"];
16->28 [style = dashed, label="0"];
36->42 [style = solid, label="metrics"];
17->20 [style = bold, label=""];
36->2 [style = solid, label="metrics"];
4->5 [style = solid, label="maxLagMetric"];
3->33 [style = dashed, label="0"];
16->6 [style = bold, label=""];
22->9 [style = bold, label=""];
0->1 [style = solid, label="v"];
35->40 [style = bold, label=""];
3->23 [style = bold, label=""];
16->41 [style = dashed, label="0"];
34->36 [style = bold, label=""];
20->39 [style = bold, label=""];
42->7 [style = bold, label=""];
33->8 [style = bold, label=""];
4->22 [style = bold, label=""];
27->8 [style = bold, label=""];
0->8 [style = solid, label="v"];
36->42 [style = bold, label=""];
5->37 [style = dashed, label="0"];
6->26 [style = bold, label=""];
3->26 [style = dashed, label="0"];
20->17 [style = dotted, label="true"];
37->41 [style = bold, label=""];
0->27 [style = solid, label="v"];
11->24 [style = bold, label=""];
20->39 [style = dotted, label="true"];
23->0 [style = bold, label=""];
22->24 [style = solid, label="tags"];
5->16 [style = bold, label=""];
27->8 [style = solid, label="v"];
17->12 [style = bold, label=""];
13->27 [style = bold, label=""];
13->17 [style = solid, label="v"];
43->38 [style = bold, label=""];
39->17 [style = bold, label=""];
24->25 [style = bold, label=""];
2->25 [style = dashed, label="0"];
25->5 [style = bold, label=""];
8->13 [style = dotted, label="true"];
18->21 [style = bold, label=""];
40->43 [style = bold, label=""];
7->19 [style = bold, label=""];
17->39 [style = solid, label="v"];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
21->14 [style = bold, label=""];
9->6 [style = solid, label="partitionLagMetric"];
20->17 [style = bold, label=""];
24->2 [style = bold, label=""];
0->13 [style = solid, label="v"];
12->15 [style = bold, label=""];
20->32 [style = bold, label=""];
13->20 [style = solid, label="v"];
27->13 [style = solid, label="v"];
17->20 [style = solid, label="v"];
8->1 [style = dotted, label="true"];
12->40 [style = dashed, label="0"];
13->8 [style = solid, label="v"];
26->23 [style = bold, label=""];
12->29 [style = dashed, label="0"];
13->39 [style = solid, label="v"];
19->4 [style = bold, label=""];
13->8 [style = bold, label=""];
8->27 [style = dotted, label="true"];
20->30 [style = bold, label=""];
41->23 [style = bold, label=""];
17->30 [style = dashed, label="0"];
13->20 [style = bold, label=""];
}
