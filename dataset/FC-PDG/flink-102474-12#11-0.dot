digraph {
8 [style = filled, label = "final Throwable uncaughtException = uncaughtExceptionHandler.waitForUncaughtException()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testUncaughtExceptionInAsynchronousCheckpointingOperation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testAsyncCheckpointException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertNull(environment.getCause())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "streamTask.triggerCheckpointAsync(new CheckpointMetaData(42L,1L),CheckpointOptions.forCheckpointWithDefaultLocation(),false)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "runnable.run()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "streamTask.triggerCheckpointAsync(new CheckpointMetaData(42L,1L),CheckpointOptions.forCheckpointWithDefaultLocation())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "OperatorSnapshotFutures operatorSnapshotResult = new OperatorSnapshotFutures(ExceptionallyDoneFuture.of(failingCause),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FailingDummyEnvironment failingDummyEnvironment = new FailingDummyEnvironment(failingCause)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final AsyncCheckpointRunnable runnable = createAsyncRunnable(snapshotsInProgress,environment,isTaskRunning)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "snapshotsInProgress.put(new OperatorID(),new OperatorSnapshotFutures(ExceptionallyDoneFuture.of(new RuntimeException(\"Async Checkpoint Exception\")),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty())))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean isTaskRunning@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MockStreamTask streamTask = task.streamTask@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testUncaughtExceptionInAsynchronousCheckpointingOperation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "waitTaskIsRunning(streamTask,task.invocationFuture)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final TestingUncaughtExceptionHandler uncaughtExceptionHandler = new TestingUncaughtExceptionHandler()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "streamTask.finishInput()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RunningTask<MockStreamTask> task = runTask(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertSame(environment.getCause().getCheckpointFailureReason(),CheckpointFailureReason.CHECKPOINT_ASYNC_EXCEPTION)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final Map<OperatorID,OperatorSnapshotFutures> snapshotsInProgress = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RuntimeException failingCause = new RuntimeException(\"Test exception\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "isTaskRunning@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final TestEnvironment environment = new TestEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "task.waitForTaskCompletion(false)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(uncaughtException,is(failingCause))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->23 [style = solid, label="environment"];
21->20 [style = solid, label="isTaskRunning"];
13->10 [style = bold, label=""];
19->18 [style = bold, label=""];
12->5 [style = bold, label=""];
1->0 [style = solid, label="streamTask"];
20->16 [style = dotted, label="false"];
18->17 [style = bold, label=""];
0->11 [style = bold, label=""];
19->21 [style = dotted, label="true"];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
17->22 [style = bold, label=""];
18->23 [style = solid, label="snapshotsInProgress"];
10->6 [style = bold, label=""];
22->23 [style = bold, label=""];
24->20 [style = bold, label=""];
21->23 [style = solid, label="isTaskRunning"];
3->10 [style = bold, label=""];
10->7 [style = solid, label="failingCause"];
0->14 [style = bold, label=""];
23->24 [style = bold, label=""];
20->16 [style = bold, label=""];
10->6 [style = solid, label="failingCause"];
7->2 [style = bold, label=""];
11->14 [style = dashed, label="0"];
8->4 [style = solid, label="uncaughtException"];
10->4 [style = solid, label="failingCause"];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
14->8 [style = bold, label=""];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
20->15 [style = bold, label=""];
20->15 [style = dotted, label="true"];
}
