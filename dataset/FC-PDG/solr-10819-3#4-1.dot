digraph {
11 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "values.put(\"c\",4.12345678)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "values.put(\"b\",4.12345678)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Assert.assertEquals(6 * 4.12345678,result)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "values.put(\"d\",5.223456789123456)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "values.put(\"c\",3)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "values.put(\"c\",-3.1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "values.put(\"d\",4.12345678)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "values.put(\"c\",3.1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(3.323456789123456,result)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(14.623456789123456,result)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(14.6D,result)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "values.put(\"a\",4.123456789123456)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(4 * 123456789123456789L,result)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "values.put(\"a\",1.1)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "values.put(\"b\",-4.123456789123456)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "values.put(\"c\",-4.123456789123456)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(14.2D,result)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "values.put(\"d\",-4.123456789123456)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "values.put(\"c\",4.123456789123456)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "values.clear()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "addManyFieldsWithManySubAdds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "values.put(\"c\",-3)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "values.put(\"b\",4.123456789123456)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "addManyFieldsWithManySubAddsWithNegative['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "values.clear()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(14L,result)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "values.put(\"b\",-123456789123456789L)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "values.put(\"c\",-3.1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "values.put(\"a\",-4.123456789123456)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(2.2D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(6 * 123456789123456789L,result)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "values.put(\"a\",-1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(6 * 4.123456789123456,result)@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "Assert.assertEquals(6 * -4.123456789123456,result)@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "addManyFieldsWithManySubAdds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(add(a,b),add(c,d),add(c,a))\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "values.put(\"b\",2.1)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.clear()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "values.put(\"a\",1.1)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(2.2D,result)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "values.put(\"a\",4.12345678)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38->64 [style = bold, label=""];
49->16 [style = bold, label=""];
20->52 [style = dashed, label="0"];
71->44 [style = bold, label=""];
49->24 [style = solid, label="result"];
65->57 [style = bold, label=""];
17->22 [style = solid, label="result"];
57->8 [style = bold, label=""];
8->72 [style = solid, label="result"];
24->34 [style = bold, label=""];
73->21 [style = bold, label=""];
8->6 [style = bold, label=""];
53->54 [style = bold, label=""];
42->0 [style = solid, label="result"];
45->48 [style = bold, label=""];
16->69 [style = bold, label=""];
12->58 [style = dashed, label="0"];
22->4 [style = bold, label=""];
61->3 [style = bold, label=""];
23->33 [style = bold, label=""];
2->49 [style = bold, label=""];
35->65 [style = dashed, label="0"];
45->62 [style = bold, label=""];
42->67 [style = solid, label="result"];
17->4 [style = solid, label="result"];
60->65 [style = bold, label=""];
27->19 [style = bold, label=""];
26->13 [style = solid, label="result"];
41->58 [style = bold, label=""];
33->71 [style = bold, label=""];
9->10 [style = solid, label="result"];
9->29 [style = bold, label=""];
64->60 [style = bold, label=""];
1->38 [style = bold, label=""];
67->38 [style = bold, label=""];
13->59 [style = dashed, label="0"];
10->61 [style = dashed, label="0"];
26->31 [style = solid, label="result"];
49->69 [style = solid, label="result"];
17->66 [style = solid, label="result"];
62->5 [style = bold, label=""];
28->73 [style = bold, label=""];
12->11 [style = bold, label=""];
36->57 [style = dashed, label="0"];
38->53 [style = bold, label=""];
44->50 [style = bold, label=""];
43->45 [style = bold, label=""];
19->37 [style = bold, label=""];
58->63 [style = bold, label=""];
21->9 [style = bold, label=""];
42->1 [style = solid, label="result"];
4->66 [style = dashed, label="0"];
3->7 [style = bold, label=""];
39->35 [style = bold, label=""];
33->30 [style = bold, label=""];
38->25 [style = bold, label=""];
11->17 [style = bold, label=""];
39->60 [style = dashed, label="0"];
48->5 [style = bold, label=""];
13->15 [style = bold, label=""];
56->18 [style = bold, label=""];
36->55 [style = dashed, label="0"];
4->23 [style = bold, label=""];
30->44 [style = bold, label=""];
1->67 [style = dashed, label="0"];
29->61 [style = bold, label=""];
31->59 [style = bold, label=""];
25->39 [style = bold, label=""];
34->40 [style = bold, label=""];
8->6 [style = solid, label="result"];
16->24 [style = bold, label=""];
28->47 [style = bold, label=""];
31->13 [style = bold, label=""];
25->53 [style = dashed, label="0"];
9->29 [style = solid, label="result"];
19->68 [style = bold, label=""];
32->14 [style = bold, label=""];
46->18 [style = bold, label=""];
42->0 [style = bold, label=""];
5->32 [style = bold, label=""];
6->20 [style = bold, label=""];
26->31 [style = bold, label=""];
22->66 [style = bold, label=""];
20->72 [style = dashed, label="0"];
50->42 [style = bold, label=""];
63->17 [style = bold, label=""];
0->1 [style = bold, label=""];
36->8 [style = bold, label=""];
29->10 [style = bold, label=""];
37->2 [style = bold, label=""];
7->41 [style = bold, label=""];
26->59 [style = solid, label="result"];
41->12 [style = bold, label=""];
47->21 [style = bold, label=""];
30->71 [style = dashed, label="0"];
8->20 [style = solid, label="result"];
54->51 [style = bold, label=""];
66->23 [style = bold, label=""];
39->54 [style = dashed, label="0"];
37->68 [style = dashed, label="0"];
24->69 [style = dashed, label="0"];
25->64 [style = dashed, label="0"];
59->15 [style = bold, label=""];
49->16 [style = solid, label="result"];
47->73 [style = dashed, label="0"];
10->3 [style = bold, label=""];
40->28 [style = bold, label=""];
0->67 [style = bold, label=""];
17->22 [style = bold, label=""];
48->62 [style = dashed, label="0"];
9->61 [style = solid, label="result"];
35->51 [style = dashed, label="0"];
6->52 [style = bold, label=""];
11->63 [style = dashed, label="0"];
8->52 [style = solid, label="result"];
14->26 [style = bold, label=""];
6->72 [style = bold, label=""];
18->43 [style = bold, label=""];
51->55 [style = bold, label=""];
68->2 [style = bold, label=""];
35->36 [style = bold, label=""];
70->18 [style = bold, label=""];
15->27 [style = bold, label=""];
55->8 [style = bold, label=""];
69->34 [style = bold, label=""];
}
