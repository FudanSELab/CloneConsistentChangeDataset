digraph {
14 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "lookupMap.put(\"testMockForCloseIsCalledAfterStopping\",container)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "EasyMock.replay(config)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "lookupReferencesManager.start()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.close()).andReturn(true).once()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "lookupMap.put(\"testMockForRemoveNonExisting\",container)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FullResponseHolder responseHolder = new FullResponseHolder(HttpResponseStatus.OK,EasyMock.createNiceMock(),new StringBuilder().append(strResult))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "lookupReferencesManager.stop()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testRemoveNonExisting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCloseIsCalledAfterStopping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCloseIsCalledAfterStopping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->12 [style = solid, label="lookupExtractorFactory"];
11->16 [style = bold, label=""];
22->25 [style = bold, label=""];
20->17 [style = bold, label=""];
3->21 [style = dashed, label="0"];
10->14 [style = bold, label=""];
7->10 [style = bold, label=""];
0->17 [style = bold, label=""];
9->7 [style = solid, label="lookupMap"];
2->3 [style = bold, label=""];
3->11 [style = bold, label=""];
6->3 [style = dashed, label="0"];
21->11 [style = solid, label="responseHolder"];
16->19 [style = bold, label=""];
9->8 [style = bold, label=""];
19->6 [style = bold, label=""];
26->24 [style = bold, label=""];
27->22 [style = bold, label=""];
1->13 [style = bold, label=""];
3->11 [style = solid, label="responseHolder"];
6->15 [style = bold, label=""];
8->7 [style = bold, label=""];
9->23 [style = bold, label=""];
7->21 [style = solid, label="strResult"];
5->2 [style = bold, label=""];
7->3 [style = solid, label="strResult"];
18->1 [style = bold, label=""];
21->11 [style = bold, label=""];
2->21 [style = bold, label=""];
24->7 [style = solid, label="request"];
22->26 [style = solid, label="lookupMap"];
25->26 [style = bold, label=""];
15->4 [style = bold, label=""];
26->10 [style = solid, label="strResult"];
17->6 [style = solid, label="lookupExtractorFactory"];
4->12 [style = bold, label=""];
8->25 [style = dashed, label="0"];
23->7 [style = bold, label=""];
13->9 [style = bold, label=""];
17->13 [style = solid, label="lookupExtractorFactory"];
10->2 [style = solid, label="request"];
10->14 [style = solid, label="responseHolder"];
17->18 [style = bold, label=""];
24->9 [style = bold, label=""];
14->5 [style = bold, label=""];
}
