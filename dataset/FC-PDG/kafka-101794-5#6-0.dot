digraph {
3 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Harness<String,Long> harness = new Harness<>(untilTimeLimit(Duration.ofDays(100),maxRecords(1)),String(),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,null,timestamp)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Harness<String,Long> harness = new Harness<>(untilTimeLimit(ofMillis(0),maxRecords(0)),String(),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "suppressShouldNotDropTombstonesForKTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final KTableSuppressProcessor<String,Long> processor = harness.processor@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String key = \"hey\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "suppressShouldNotDropTombstonesForKTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processor.process(key,value)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "context.setRecordMetadata(\"\",0,1L,null,timestamp + 1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "processor.process(\"dummyKey\",value)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final long timestamp = 100L@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "suppressShouldEmitWhenOverRecordCapacity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->12 [style = solid, label="value"];
1->4 [style = solid, label="key"];
15->9 [style = bold, label=""];
10->9 [style = bold, label=""];
12->2 [style = bold, label=""];
11->1 [style = bold, label=""];
4->8 [style = bold, label=""];
9->0 [style = bold, label=""];
0->11 [style = bold, label=""];
10->15 [style = dashed, label="0"];
5->13 [style = bold, label=""];
2->3 [style = bold, label=""];
6->10 [style = bold, label=""];
16->2 [style = bold, label=""];
5->4 [style = solid, label="value"];
5->13 [style = solid, label="value"];
17->15 [style = bold, label=""];
1->12 [style = solid, label="key"];
7->0 [style = bold, label=""];
18->16 [style = bold, label=""];
12->18 [style = bold, label=""];
12->13 [style = dashed, label="0"];
0->8 [style = solid, label="timestamp"];
5->12 [style = bold, label=""];
0->11 [style = solid, label="timestamp"];
0->18 [style = solid, label="timestamp"];
5->16 [style = solid, label="value"];
13->2 [style = bold, label=""];
14->10 [style = bold, label=""];
1->13 [style = solid, label="key"];
3->4 [style = bold, label=""];
1->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
