digraph {
24 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.getAndAdd(bytes)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "markCoordinatingOperationStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "long totalBytesWithoutOperation = totalBytes - bytes@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "markCoordinatingOperationStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "currentCoordinatingBytes.getAndAdd(bytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long bytesWithoutOperation = combinedBytes - bytes@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of coordinating operation (\" + \"coordinating_and_primary_bytes=\" + bytesWithoutOperation + \", \" + \"replica_bytes=\" + replicaWriteBytes + \", \" + \"all_bytes=\" + totalBytesWithoutOperation + \", \" + \"coordinating_operation_bytes=\" + bytes + \", \" + \"max_coordinating_and_primary_bytes=\" + primaryAndCoordinatingLimits + \"(\",false)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "long combinedBytes = this.currentCombinedCoordinatingAndPrimaryBytes.addAndGet(bytes)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "long replicaBytesWithoutOperation = replicaWriteBytes - bytes@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.currentCombinedCoordinatingAndPrimaryBytes.getAndAdd(-bytes)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long bytes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "throw new EsRejectedExecutionException(\"rejected execution of replica operation (\" + \"replica_bytes=\" + replicaBytesWithoutOperation + \", \" + \"replica_operation_bytes=\" + bytes + \", \" + \"max_replica_bytes=\" + replicaLimits + \"(\",false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "totalReplicaBytes.getAndAdd(bytes)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "long bytes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "totalBytes > primaryAndCoordinatingLimits@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "totalCombinedCoordinatingAndPrimaryBytes.getAndAdd(bytes)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "this.currentReplicaBytes.getAndAdd(-bytes)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long replicaWriteBytes = this.currentReplicaBytes.get()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "boolean forceExecution@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "forceExecution == false && replicaWriteBytes > replicaLimits@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "long totalBytes = combinedBytes + replicaWriteBytes@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "markReplicaOperationStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return null@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return null@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "this.replicaRejections.getAndIncrement()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "totalCoordinatingBytes.getAndAdd(bytes)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.coordinatingRejections.getAndIncrement()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->16 [style = solid, label="replicaWriteBytes"];
18->24 [style = solid, label="bytes"];
11->7 [style = dotted, label="true"];
6->21 [style = dashed, label="0"];
0->16 [style = bold, label=""];
19->25 [style = dotted, label="true"];
24->19 [style = bold, label=""];
1->11 [style = solid, label="totalBytes"];
6->13 [style = solid, label="bytes"];
3->1 [style = bold, label=""];
9->24 [style = dashed, label="0"];
5->26 [style = dashed, label="0"];
19->17 [style = dotted, label="true"];
11->10 [style = dotted, label="true"];
19->20 [style = dotted, label="true"];
1->5 [style = solid, label="totalBytes"];
11->4 [style = bold, label=""];
6->16 [style = solid, label="bytes"];
5->16 [style = solid, label="totalBytesWithoutOperation"];
7->0 [style = bold, label=""];
11->5 [style = dotted, label="true"];
19->17 [style = bold, label=""];
27->21 [style = dotted, label="true"];
20->25 [style = bold, label=""];
6->9 [style = solid, label="bytes"];
2->10 [style = solid, label="bytesWithoutOperation"];
3->1 [style = solid, label="replicaWriteBytes"];
11->2 [style = bold, label=""];
5->10 [style = solid, label="totalBytesWithoutOperation"];
3->10 [style = solid, label="replicaWriteBytes"];
9->1 [style = solid, label="combinedBytes"];
17->26 [style = solid, label="replicaBytesWithoutOperation"];
1->11 [style = bold, label=""];
3->19 [style = dashed, label="0"];
12->13 [style = bold, label=""];
0->10 [style = bold, label=""];
6->5 [style = solid, label="bytes"];
9->2 [style = solid, label="combinedBytes"];
6->12 [style = solid, label="bytes"];
24->19 [style = solid, label="replicaWriteBytes"];
18->26 [style = solid, label="bytes"];
23->22 [style = bold, label=""];
11->2 [style = dotted, label="true"];
8->6 [style = dotted, label="true"];
1->17 [style = dashed, label="0"];
24->17 [style = solid, label="replicaWriteBytes"];
15->9 [style = bold, label=""];
19->23 [style = bold, label=""];
11->0 [style = dotted, label="true"];
6->2 [style = solid, label="bytes"];
26->23 [style = bold, label=""];
18->23 [style = solid, label="bytes"];
21->19 [style = solid, label="forceExecution"];
25->26 [style = bold, label=""];
8->9 [style = bold, label=""];
15->6 [style = dotted, label="true"];
10->4 [style = bold, label=""];
12->22 [style = dashed, label="0"];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
2->16 [style = solid, label="bytesWithoutOperation"];
11->16 [style = dotted, label="true"];
27->24 [style = bold, label=""];
10->16 [style = dashed, label="0"];
16->4 [style = bold, label=""];
27->18 [style = dotted, label="true"];
4->23 [style = dashed, label="0"];
18->17 [style = solid, label="bytes"];
13->14 [style = bold, label=""];
6->4 [style = solid, label="bytes"];
19->26 [style = dotted, label="true"];
2->5 [style = bold, label=""];
17->20 [style = bold, label=""];
6->10 [style = solid, label="bytes"];
}
