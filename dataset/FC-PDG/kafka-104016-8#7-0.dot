digraph {
13 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testUnexpectedErrorOnSyncGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(subscriptions.partitionAssignmentNeeded())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "client.prepareResponse(syncGroupResponse(Arrays.asList(tp),Errors.NONE.code()))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testUnknownMemberIdOnSyncGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "subscriptions.subscribe(Arrays.asList(topicName),rebalanceListener)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.needReassignment()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "client.prepareResponse(syncGroupResponse(Collections.emptyList(),Errors.UNKNOWN.code()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "coordinator.poll(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,consumerId,\"leader\",Errors.NONE.code()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String consumerId = \"consumer\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "subscriptions.subscribe(singleton(topicName),rebalanceListener)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(Collections.singleton(tp),subscriptions.assignedPartitions())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(ClientRequest request){JoinGroupRequest joinRequest = new JoinGroupRequest(request.request().body())return joinRequest.memberId().equals(JoinGroupRequest.UNKNOWN_MEMBER_ID)}},joinGroupFollowerResponse(2,consumerId,\"leader\",Errors.NONE.code()))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(coordinator.needRejoin())@@@18@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testUnknownMemberIdOnSyncGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(ClientRequest request){JoinGroupRequest joinRequest = new JoinGroupRequest(request.request().body())return joinRequest.memberId().equals(JoinGroupRequest.UNKNOWN_MEMBER_ID)}},joinGroupFollowerResponse(2,consumerId,\"leader\",Errors.NONE.code()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(singleton(tp),subscriptions.assignedPartitions())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "coordinator.poll(time.milliseconds())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
15->13 [style = bold, label=""];
8->15 [style = bold, label=""];
16->8 [style = bold, label=""];
5->20 [style = bold, label=""];
2->6 [style = bold, label=""];
8->5 [style = solid, label="consumerId"];
3->14 [style = bold, label=""];
7->0 [style = bold, label=""];
8->10 [style = solid, label="consumerId"];
6->17 [style = dashed, label="0"];
9->8 [style = bold, label=""];
12->1 [style = bold, label=""];
19->8 [style = bold, label=""];
1->17 [style = bold, label=""];
20->21 [style = bold, label=""];
3->10 [style = bold, label=""];
12->14 [style = dashed, label="0"];
18->1 [style = bold, label=""];
10->12 [style = bold, label=""];
13->7 [style = bold, label=""];
4->15 [style = dashed, label="0"];
3->20 [style = dashed, label="0"];
14->18 [style = bold, label=""];
1->2 [style = bold, label=""];
2->1 [style = dashed, label="0"];
8->4 [style = bold, label=""];
8->3 [style = solid, label="consumerId"];
4->11 [style = bold, label=""];
8->0 [style = solid, label="consumerId"];
11->7 [style = bold, label=""];
0->5 [style = bold, label=""];
}
