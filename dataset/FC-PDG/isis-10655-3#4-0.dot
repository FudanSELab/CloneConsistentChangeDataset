digraph {
2 [style = filled, label = "assertThat(parentPackageId.getType(),is(ApplicationFeatureType.PACKAGE))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final ApplicationFeatureId parentPackageId = applicationFeatureId.getParentPackageId()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertThat(parentPackageId.getPackageName(),is(\"com\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(parentPackageId.getSort(),is(ApplicationFeatureSort.NAMESPACE))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final ApplicationFeatureId applicationFeatureId = new ApplicationFeatureId(ApplicationFeatureType.PACKAGE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ApplicationFeatureType.PACKAGE.init(applicationFeatureId,\"com.mycompany\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final ApplicationFeatureId applicationFeatureId = ApplicationFeatureId.newPackage(\"com.mycompany\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "val parentPackageId = applicationFeatureId.getParentNamespaceFeatureId()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "givenPackageWhenParentIsNotRoot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "val applicationFeatureId = ApplicationFeatureId.newNamespace(\"com.mycompany\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(parentPackageId.getNamespace(),is(\"com\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "givenPackage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(applicationFeatureId.getMemberName(),is(nullValue()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(applicationFeatureId.getClassName(),is(nullValue()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(applicationFeatureId.getPackageName(),is(\"com.mycompany\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(parentPackageId.getTypeSimpleName(),is(nullValue()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(parentPackageId.getClassName(),is(nullValue()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "givenPackageWhenParentIsNotRoot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(parentPackageId.getMemberName(),is(nullValue()))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16->18 [style = bold, label=""];
9->11 [style = bold, label=""];
1->15 [style = dashed, label="0"];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
0->2 [style = bold, label=""];
0->16 [style = dashed, label="0"];
1->0 [style = bold, label=""];
15->16 [style = solid, label="applicationFeatureId"];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
15->16 [style = bold, label=""];
10->7 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
13->17 [style = bold, label=""];
3->5 [style = bold, label=""];
5->17 [style = dashed, label="0"];
5->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
18->13 [style = bold, label=""];
2->18 [style = dashed, label="0"];
0->8 [style = dashed, label="0"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
1->7 [style = dashed, label="0"];
8->12 [style = bold, label=""];
}
