digraph {
8 [style = filled, label = "DataSet<Tuple2<Long,Long>> edges = env.fromCollection(edgesInput)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(expectedResult,result)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration = initialSolutionSet.iterateDelta(initialSolutionSet,10,0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final long convergence_threshold = 3@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String UPDATED_ELEMENTS = \"updated.elements.aggr\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Tuple2<Long,Long>> result = iteration.closeWith(updatedComponentId).collect()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration.getSolutionSet()).where(0).equalTo(0).flatMap(new MinimumIdFilter(UPDATED_ELEMENTS))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Collections.sort(result,new TestBaseUtils.TupleComparator<Tuple2<Long,Long>>())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "List<Tuple2<Long,Long>> result = iteration.closeWith(updatedComponentId,updatedComponentId).collect()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testConnectedComponentsWithParametrizableConvergence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Collections.sort(result,new JavaProgramTestBase.TupleComparator<Tuple2<Long,Long>>())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataSet<Tuple2<Long,Long>> initialSolutionSet = env.fromCollection(verticesInput)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IterativeDataSet<Tuple2<Long,Long>> iteration = initialSolutionSet.iterate(10)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration).where(0).equalTo(0).flatMap(new MinimumIdFilter(UPDATED_ELEMENTS))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testConnectedComponentsWithParametrizableConvergence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "iteration.registerAggregationConvergenceCriterion(UPDATED_ELEMENTS,new LongSumAggregator(),new UpdatedElementsConvergenceCriterion(convergence_threshold))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testDeltaConnectedComponentsWithParametrizableConvergence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithNewComponents = iteration.getWorkset().join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).groupBy(0).min(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithNewComponents = iteration.join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).groupBy(0).min(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
8->16 [style = bold, label=""];
8->10 [style = bold, label=""];
4->18 [style = dashed, label="0"];
4->14 [style = bold, label=""];
15->2 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->17 [style = solid, label="UPDATED_ELEMENTS"];
11->4 [style = bold, label=""];
10->3 [style = bold, label=""];
3->6 [style = bold, label=""];
19->17 [style = bold, label=""];
11->17 [style = dashed, label="0"];
9->8 [style = bold, label=""];
0->7 [style = bold, label=""];
18->12 [style = solid, label="result"];
7->9 [style = bold, label=""];
4->1 [style = solid, label="result"];
18->1 [style = solid, label="result"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
3->19 [style = bold, label=""];
18->1 [style = bold, label=""];
2->3 [style = solid, label="UPDATED_ELEMENTS"];
4->12 [style = solid, label="result"];
4->14 [style = solid, label="result"];
6->11 [style = bold, label=""];
14->12 [style = bold, label=""];
6->19 [style = dashed, label="0"];
9->16 [style = solid, label="initialSolutionSet"];
1->12 [style = bold, label=""];
4->1 [style = bold, label=""];
10->16 [style = dashed, label="0"];
2->11 [style = solid, label="UPDATED_ELEMENTS"];
0->3 [style = solid, label="convergence_threshold"];
17->18 [style = bold, label=""];
13->2 [style = bold, label=""];
}
