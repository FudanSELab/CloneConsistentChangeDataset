digraph {
9 [style = filled, label = "testPathElementMove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String output = buildRule.getProject().getProperty(\"output\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(!new File(output,\"A/1\").exists())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "buildRule.executeTarget(\"testPathElementMove\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(new File(output,\"E\").exists())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDirectoryRetaining['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(new File(output,\"E/1\").exists())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDirectoryRetaining['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertTrue(new File(output,\"A\").exists())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "buildRule.executeTarget(\"testDirectoryRetaining\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
5->1 [style = bold, label=""];
1->8 [style = dashed, label="0"];
7->1 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
4->6 [style = bold, label=""];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
}
