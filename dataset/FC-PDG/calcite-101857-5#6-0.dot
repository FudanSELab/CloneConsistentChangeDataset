digraph {
10 [style = filled, label = "boolean allRows@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "navigationInDefine['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "!isRunningOrFinal(op0.getKind()) || !allRows && op0.getKind() == SqlKind.RUNNING@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return node@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Set<String> prefix = node.accept(new PatternValidator(false))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SqlNode node@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "SqlNode node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final SqlNode op0 = ops.get(0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SqlNode newNode = defaultOp.createCall(SqlParserPos.ZERO,op0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "node = new NavigationExpander().go(node)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "node = new NavigationExpander().go(node)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return node@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "node = new NavigationReplacer(alpha).go(node)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Util.discard(prefix)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "node = SqlStdOperatorTable.AS.createCall(SqlParserPos.ZERO,newNode,ops.get(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String alpha@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final SqlOperator defaultOp = allRows? SqlStdOperatorTable.RUNNING: SqlStdOperatorTable.FINAL@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Set<String> prefix = node.accept(new PatternValidator(true))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<SqlNode> ops = ((SqlCall)node).getOperandList()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "navigationInMeasure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "navigationInMeasure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean allRows@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17->19 [style = dotted, label="true"];
11->4 [style = bold, label=""];
18->20 [style = bold, label=""];
18->20 [style = solid, label="node"];
6->7 [style = solid, label="prefix"];
7->18 [style = bold, label=""];
20->15 [style = solid, label="node"];
10->3 [style = solid, label="node"];
4->5 [style = bold, label=""];
20->15 [style = bold, label=""];
9->3 [style = bold, label=""];
9->13 [style = bold, label=""];
10->21 [style = dashed, label="0"];
0->8 [style = bold, label=""];
5->9 [style = bold, label=""];
16->7 [style = solid, label="prefix"];
14->12 [style = dotted, label="true"];
2->10 [style = dotted, label="true"];
10->8 [style = solid, label="allRows"];
9->3 [style = solid, label="node"];
8->11 [style = bold, label=""];
2->1 [style = dotted, label="true"];
9->13 [style = solid, label="node"];
13->3 [style = solid, label="node"];
7->0 [style = bold, label=""];
1->8 [style = solid, label="allRows"];
6->16 [style = dashed, label="0"];
14->10 [style = dotted, label="true"];
14->6 [style = bold, label=""];
19->18 [style = solid, label="node"];
2->6 [style = bold, label=""];
13->3 [style = bold, label=""];
4->13 [style = bold, label=""];
16->7 [style = bold, label=""];
4->5 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
17->21 [style = dotted, label="true"];
6->7 [style = bold, label=""];
12->13 [style = solid, label="node"];
11->5 [style = solid, label="op0"];
5->9 [style = solid, label="newNode"];
17->16 [style = bold, label=""];
4->3 [style = bold, label=""];
}
