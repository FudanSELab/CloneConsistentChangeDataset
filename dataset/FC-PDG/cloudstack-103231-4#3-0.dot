digraph {
27 [style = filled, label = "verify(libvirtComputingResource,times(1)).getLibvirtUtilitiesHelper()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "when(libvirtComputingResource.getInterfaces(conn,dhcpName)).thenReturn(ifaces)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String op = \"delete\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final URI uri = URI.create(\"http://localhost\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(libvirtComputingResource.getTimeout()).thenReturn(Duration.ZERO)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testPvlanSetupCommandDhcpDelete['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final InterfaceDef nic = Mockito.mock()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(answer.getResult())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String op = \"add\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Connect conn = Mockito.mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final LibvirtRequestWrapper wrapper = LibvirtRequestWrapper.getInstance()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final PvlanSetupCommand command = PvlanSetupCommand.createDhcpSetup(op,uri,networkTag,dhcpName,dhcpMac,dhcpIp)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(libvirtUtilitiesHelper.getConnectionByVmName(dhcpName)).thenReturn(conn)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testPvlanSetupCommandDhcpAdd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(libvirtComputingResource.getOvsPvlanDhcpHostPath()).thenReturn(ovsPvlanDhcpHostPath)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String networkTag = \"/105\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(libvirtComputingResource.getLibvirtUtilitiesHelper()).thenReturn(libvirtUtilitiesHelper)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ifaces.add(nic)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String ovsPvlanDhcpHostPath = \"/pvlan\"@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final LibvirtException e@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String dhcpName = \"dhcp\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(wrapper)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(libvirtComputingResource.getGuestBridgeName()).thenReturn(guestBridgeName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final LibvirtUtilitiesHelper libvirtUtilitiesHelper = Mockito.mock()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String dhcpMac = \"00:00:00:00\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testPvlanSetupCommandDhcpDelete['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final String guestBridgeName = \"br0\"@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final List<InterfaceDef> ifaces = new ArrayList<InterfaceDef>()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "fail(e.getMessage())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final URI uri = URI.create(\"pvlan://200-p200\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final String dhcpIp = \"127.0.0.1\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "verify(libvirtUtilitiesHelper,times(1)).getConnectionByVmName(dhcpName)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Answer answer = wrapper.execute(command,libvirtComputingResource)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
5->14 [style = bold, label=""];
12->27 [style = bold, label=""];
11->4 [style = bold, label=""];
28->11 [style = solid, label="op"];
5->14 [style = solid, label="ovsPvlanDhcpHostPath"];
16->4 [style = bold, label=""];
20->7 [style = bold, label=""];
31->10 [style = bold, label=""];
21->29 [style = solid, label="nic"];
3->2 [style = bold, label=""];
7->11 [style = solid, label="op"];
24->26 [style = dotted, label="true"];
7->28 [style = dashed, label="0"];
2->5 [style = bold, label=""];
16->15 [style = solid, label="libvirtUtilitiesHelper"];
10->8 [style = bold, label=""];
10->8 [style = solid, label="wrapper"];
27->32 [style = bold, label=""];
1->18 [style = bold, label=""];
6->17 [style = bold, label=""];
15->22 [style = bold, label=""];
11->16 [style = bold, label=""];
26->10 [style = bold, label=""];
18->11 [style = solid, label="networkTag"];
21->29 [style = bold, label=""];
0->32 [style = solid, label="dhcpName"];
29->23 [style = bold, label=""];
23->31 [style = bold, label=""];
17->11 [style = solid, label="dhcpIp"];
1->19 [style = dashed, label="0"];
13->12 [style = bold, label=""];
25->28 [style = bold, label=""];
28->1 [style = bold, label=""];
22->31 [style = solid, label="ifaces"];
4->3 [style = solid, label="guestBridgeName"];
8->13 [style = bold, label=""];
30->4 [style = bold, label=""];
17->11 [style = bold, label=""];
1->11 [style = solid, label="uri"];
30->23 [style = solid, label="conn"];
22->21 [style = bold, label=""];
7->1 [style = bold, label=""];
7->19 [style = bold, label=""];
16->30 [style = bold, label=""];
11->13 [style = solid, label="command"];
6->11 [style = solid, label="dhcpMac"];
14->10 [style = bold, label=""];
14->15 [style = bold, label=""];
19->18 [style = bold, label=""];
4->3 [style = bold, label=""];
15->10 [style = bold, label=""];
24->26 [style = bold, label=""];
0->11 [style = solid, label="dhcpName"];
19->11 [style = solid, label="uri"];
18->0 [style = bold, label=""];
9->7 [style = bold, label=""];
}
