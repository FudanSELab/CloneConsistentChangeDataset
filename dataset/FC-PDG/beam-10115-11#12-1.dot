digraph {
15 [style = filled, label = "verifyNoMoreInteractions(collector)@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "WindowedValue<Integer> three = WindowedValue.valueInGlobalWindow(3)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "outputsAreTaggedCorrectly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SparkExecutableStageFunction<Integer,?> function = getFunction(outputTagMap)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "function.reduce(Collections.emptyList(),collector)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Iterator<RawUnionValue> iterator = function.call(Collections.emptyIterator())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(collector).collect(new RawUnionValue(3,five))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "WindowedValue<Integer> four = WindowedValue.valueInGlobalWindow(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "WindowedValue<Integer> five = WindowedValue.valueInGlobalWindow(5)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "outputsAreTaggedCorrectly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "function.open(new Configuration())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Integer> outputTagMap = ImmutableMap.of(\"one\",1,\"two\",2,\"three\",3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(iterable,contains(new RawUnionValue(1,three),new RawUnionValue(2,four),new RawUnionValue(3,five)))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "function.mapPartition(Collections.emptyList(),collector)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verify(collector).collect(new RawUnionValue(1,three))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(stageContext.getStageBundleFactory(any())).thenReturn(stageBundleFactory)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Iterable<RawUnionValue> iterable = null@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "outputsAreTaggedCorrectly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "isStateful@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verify(collector).collect(new RawUnionValue(2,four))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FlinkExecutableStageFunction<Integer> function = getFunction(outputTagMap)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StageBundleFactory stageBundleFactory = new StageBundleFactory(){@Override public RemoteBundle getBundle(OutputReceiverFactory receiverFactory,StateRequestHandler stateRequestHandler,BundleProgressHandler progressHandler){return new RemoteBundle(){@Override public String getId(){return \"bundle-id\"}@Override public Map<String,FnDataReceiver> getInputReceivers(){return ImmutableMap.of(\"input\",null)}@Override public void split(double fractionOfRemainder){throw new UnsupportedOperationException()}@Override public void close(){if (once) {return}receiverFactory.create(\"one\").accept(three)receiverFactory.create(\"two\").accept(four)receiverFactory.create(\"three\").accept(five)once = true}}}@Override public ProcessBundleDescriptors.ExecutableProcessBundleDescriptor getProcessBundleDescriptor(){return processBundleDescriptor}@Override public void close(){}}@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
5->8 [style = bold, label=""];
10->3 [style = solid, label="three"];
1->12 [style = solid, label="outputTagMap"];
10->6 [style = solid, label="three"];
0->6 [style = solid, label="five"];
12->17 [style = bold, label=""];
8->3 [style = bold, label=""];
0->3 [style = solid, label="five"];
8->3 [style = solid, label="iterable"];
20->14 [style = bold, label=""];
4->19 [style = solid, label="four"];
20->21 [style = dotted, label="true"];
9->10 [style = bold, label=""];
10->13 [style = solid, label="three"];
2->12 [style = bold, label=""];
6->2 [style = solid, label="stageBundleFactory"];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
6->2 [style = bold, label=""];
20->21 [style = bold, label=""];
7->5 [style = bold, label=""];
13->19 [style = bold, label=""];
1->6 [style = bold, label=""];
1->7 [style = solid, label="outputTagMap"];
0->16 [style = solid, label="five"];
18->10 [style = bold, label=""];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
4->3 [style = solid, label="four"];
10->4 [style = bold, label=""];
7->12 [style = dashed, label="0"];
4->6 [style = solid, label="four"];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
20->14 [style = dotted, label="false"];
21->13 [style = bold, label=""];
17->20 [style = bold, label=""];
}
