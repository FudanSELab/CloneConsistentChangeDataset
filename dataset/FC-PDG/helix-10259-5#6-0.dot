digraph {
65 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
120 [style = filled, label = "Message relayMessage = message.getRelayMessage(newMasterInstance)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "p2pMessageEnabled@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@90@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "pipeline.handle(event)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@90@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Pipeline pipeline = createPipeline()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
108 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),cache)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "Assert.assertEquals(message.getRelayMessages().entrySet().size(),1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "Boolean p2pMessageEnabled@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "pipeline.handle(event)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "testP2PMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "pipeline.handle(event)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(message.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "pipeline.handle(event)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Assert.assertEquals(message.getTgtName(),masterInstance)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "pipeline.handle(event)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "pipeline.handle(event)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(message.getRelayMessages().entrySet().isEmpty())@@@43@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "ClusterConfig clusterConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "CurrentStateOutput currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "pipeline = createPipeline()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "preSetup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@102@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
113 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "Assert.assertEquals(message.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "pipeline.handle(event)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Message message = messages.get(0)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ClusterDataCache cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "BestPossibleStateOutput bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@102@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68f7e2,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->88 [style = solid, label="masterInstance"];
93->39 [style = bold, label=""];
14->101 [style = bold, label=""];
96->126 [style = bold, label=""];
56->34 [style = bold, label=""];
50->103 [style = bold, label=""];
39->9 [style = bold, label=""];
67->48 [style = bold, label=""];
115->108 [style = dotted, label="true"];
101->25 [style = bold, label=""];
69->96 [style = bold, label=""];
98->29 [style = bold, label=""];
115->58 [style = dotted, label="true"];
115->4 [style = dotted, label="false"];
13->78 [style = solid, label="masterInstance"];
42->87 [style = solid, label="newMasterInstance"];
11->60 [style = bold, label=""];
43->24 [style = solid, label="p"];
82->86 [style = solid, label="masterInstance"];
57->111 [style = dashed, label="0"];
92->53 [style = bold, label=""];
23->88 [style = bold, label=""];
43->87 [style = solid, label="p"];
95->105 [style = solid, label="currentStateOutput"];
7->74 [style = bold, label=""];
26->12 [style = bold, label=""];
18->44 [style = bold, label=""];
43->82 [style = solid, label="p"];
91->20 [style = bold, label=""];
77->6 [style = solid, label="cache"];
74->70 [style = bold, label=""];
125->8 [style = bold, label=""];
64->92 [style = bold, label=""];
96->76 [style = bold, label=""];
123->117 [style = solid, label="resourceMap"];
75->77 [style = bold, label=""];
108->66 [style = solid, label="relayMessage"];
43->30 [style = solid, label="p"];
44->95 [style = solid, label="bestPossibleStateOutput"];
53->75 [style = bold, label=""];
124->120 [style = solid, label="newMasterInstance"];
76->43 [style = dashed, label="0"];
99->88 [style = dashed, label="0"];
66->45 [style = bold, label=""];
11->90 [style = solid, label="currentStateOutput"];
108->9 [style = solid, label="relayMessage"];
42->108 [style = bold, label=""];
13->33 [style = solid, label="masterInstance"];
108->120 [style = dashed, label="0"];
49->23 [style = dashed, label="0"];
122->114 [style = dotted, label="true"];
30->41 [style = bold, label=""];
72->2 [style = bold, label=""];
43->100 [style = solid, label="p"];
75->18 [style = solid, label="resourceMap"];
82->60 [style = solid, label="masterInstance"];
35->124 [style = solid, label="p"];
115->45 [style = dotted, label="true"];
48->94 [style = bold, label=""];
0->19 [style = bold, label=""];
51->112 [style = bold, label=""];
8->18 [style = bold, label=""];
127->124 [style = bold, label=""];
118->113 [style = bold, label=""];
79->84 [style = bold, label=""];
110->26 [style = bold, label=""];
115->127 [style = bold, label=""];
43->60 [style = solid, label="p"];
82->99 [style = solid, label="masterInstance"];
85->63 [style = bold, label=""];
11->17 [style = solid, label="currentStateOutput"];
115->120 [style = dotted, label="true"];
82->96 [style = solid, label="masterInstance"];
11->85 [style = solid, label="currentStateOutput"];
81->49 [style = bold, label=""];
84->57 [style = bold, label=""];
24->40 [style = bold, label=""];
120->118 [style = solid, label="relayMessage"];
105->35 [style = bold, label=""];
113->108 [style = bold, label=""];
102->91 [style = bold, label=""];
120->118 [style = bold, label=""];
43->2 [style = solid, label="p"];
41->59 [style = bold, label=""];
58->56 [style = bold, label=""];
64->53 [style = solid, label="clusterConfig"];
35->74 [style = solid, label="p"];
94->85 [style = bold, label=""];
77->15 [style = bold, label=""];
3->54 [style = bold, label=""];
61->55 [style = bold, label=""];
38->98 [style = bold, label=""];
23->54 [style = solid, label="bestPossibleStateOutput"];
21->11 [style = bold, label=""];
119->125 [style = bold, label=""];
121->45 [style = bold, label=""];
126->7 [style = bold, label=""];
123->75 [style = solid, label="resourceMap"];
52->107 [style = bold, label=""];
1->72 [style = bold, label=""];
83->89 [style = solid, label="slaveInstance"];
115->127 [style = dotted, label="true"];
108->121 [style = bold, label=""];
23->11 [style = solid, label="bestPossibleStateOutput"];
99->50 [style = bold, label=""];
82->9 [style = solid, label="masterInstance"];
108->66 [style = bold, label=""];
78->62 [style = solid, label="currentStateOutput"];
81->115 [style = bold, label=""];
117->75 [style = bold, label=""];
55->86 [style = bold, label=""];
108->94 [style = solid, label="relayMessage"];
109->37 [style = bold, label=""];
122->116 [style = dotted, label="true"];
22->42 [style = bold, label=""];
2->17 [style = bold, label=""];
19->67 [style = bold, label=""];
122->123 [style = bold, label=""];
83->46 [style = solid, label="slaveInstance"];
75->119 [style = bold, label=""];
50->10 [style = dashed, label="0"];
71->79 [style = solid, label="currentStateOutput"];
90->106 [style = bold, label=""];
114->115 [style = solid, label="p2pMessageEnabled"];
89->79 [style = bold, label=""];
43->89 [style = solid, label="p"];
65->31 [style = bold, label=""];
44->95 [style = bold, label=""];
82->2 [style = solid, label="masterInstance"];
42->108 [style = solid, label="newMasterInstance"];
16->61 [style = bold, label=""];
43->67 [style = solid, label="p"];
86->1 [style = bold, label=""];
51->52 [style = bold, label=""];
104->36 [style = bold, label=""];
24->3 [style = solid, label="instanceStateMap"];
84->111 [style = bold, label=""];
73->32 [style = bold, label=""];
43->42 [style = solid, label="p"];
95->105 [style = bold, label=""];
100->90 [style = bold, label=""];
5->16 [style = bold, label=""];
115->118 [style = dotted, label="true"];
45->58 [style = bold, label=""];
64->75 [style = solid, label="clusterConfig"];
43->3 [style = solid, label="p"];
31->26 [style = bold, label=""];
82->93 [style = solid, label="masterInstance"];
42->94 [style = solid, label="newMasterInstance"];
23->104 [style = solid, label="bestPossibleStateOutput"];
13->78 [style = solid, label="bestPossibleStateOutput"];
43->82 [style = bold, label=""];
82->56 [style = solid, label="masterInstance"];
75->8 [style = solid, label="resourceMap"];
83->24 [style = bold, label=""];
43->39 [style = solid, label="p"];
49->39 [style = solid, label="toSlaveMessage"];
33->43 [style = bold, label=""];
37->64 [style = bold, label=""];
124->108 [style = solid, label="newMasterInstance"];
115->121 [style = dotted, label="true"];
43->16 [style = solid, label="p"];
42->58 [style = solid, label="newMasterInstance"];
88->10 [style = bold, label=""];
115->124 [style = dotted, label="true"];
103->22 [style = bold, label=""];
49->99 [style = bold, label=""];
62->47 [style = bold, label=""];
43->93 [style = solid, label="p"];
10->81 [style = bold, label=""];
54->28 [style = bold, label=""];
42->38 [style = solid, label="newMasterInstance"];
31->110 [style = dashed, label="0"];
4->93 [style = bold, label=""];
25->71 [style = bold, label=""];
46->3 [style = bold, label=""];
43->101 [style = solid, label="p"];
115->113 [style = dotted, label="true"];
106->5 [style = bold, label=""];
112->107 [style = bold, label=""];
116->123 [style = solid, label="clusterConfig"];
32->21 [style = bold, label=""];
63->104 [style = bold, label=""];
78->33 [style = bold, label=""];
80->14 [style = bold, label=""];
12->80 [style = bold, label=""];
42->40 [style = solid, label="newMasterInstance"];
47->73 [style = bold, label=""];
43->94 [style = solid, label="p"];
108->100 [style = solid, label="relayMessage"];
43->83 [style = solid, label="p"];
97->0 [style = bold, label=""];
35->13 [style = solid, label="p"];
13->78 [style = bold, label=""];
115->4 [style = bold, label=""];
59->38 [style = bold, label=""];
15->6 [style = bold, label=""];
9->62 [style = bold, label=""];
68->37 [style = bold, label=""];
65->110 [style = bold, label=""];
82->39 [style = solid, label="masterInstance"];
28->51 [style = bold, label=""];
43->10 [style = solid, label="p"];
27->102 [style = bold, label=""];
71->87 [style = bold, label=""];
82->69 [style = solid, label="masterInstance"];
13->121 [style = solid, label="masterInstance"];
111->27 [style = bold, label=""];
124->120 [style = bold, label=""];
40->46 [style = bold, label=""];
103->81 [style = dashed, label="0"];
23->71 [style = solid, label="bestPossibleStateOutput"];
57->27 [style = bold, label=""];
76->7 [style = bold, label=""];
70->23 [style = bold, label=""];
107->97 [style = bold, label=""];
82->69 [style = bold, label=""];
60->100 [style = bold, label=""];
6->8 [style = bold, label=""];
78->33 [style = solid, label="currentStateOutput"];
123->117 [style = bold, label=""];
34->4 [style = bold, label=""];
17->83 [style = bold, label=""];
87->89 [style = bold, label=""];
42->100 [style = solid, label="newMasterInstance"];
35->13 [style = bold, label=""];
20->30 [style = bold, label=""];
36->65 [style = bold, label=""];
23->63 [style = solid, label="bestPossibleStateOutput"];
52->112 [style = dashed, label="0"];
43->32 [style = solid, label="p"];
43->9 [style = solid, label="p"];
}
