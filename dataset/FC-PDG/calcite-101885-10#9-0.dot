digraph {
5 [style = filled, label = "!ruleSet.remove(rule)@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assert added@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "removeRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "return true@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mapRuleDescription(rule)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "addRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RelOptRule rule@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "classOperands.put(subClass,operand)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "ruleNames.put(ruleName,rule) != null@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return false@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ruleSet.contains(rule)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "!super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1131e95rule@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rule instanceof ConverterRule@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ruleNames.remove(rule.toString())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "classOperands.values().removeIf(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "unmapRuleDescription(rule)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "ruleTraitDef.registerConverterRule(this,converterRule)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final boolean added = ruleSet.add(rule)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ruleTraitDef.deregisterConverterRule(this,converterRule)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RelOptRule rule@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "locked@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final String ruleName = rule.toString()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return true@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "removeRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "rule instanceof ConverterRule@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "throw new RuntimeException(\"Rule description '\" + ruleName + \"' is not unique. \")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
22->34 [style = dotted, label="true"];
5->10 [style = bold, label=""];
23->20 [style = bold, label=""];
18->24 [style = bold, label=""];
22->33 [style = bold, label=""];
2->0 [style = dotted, label="true"];
32->23 [style = bold, label=""];
5->14 [style = dashed, label="0"];
0->13 [style = bold, label=""];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
31->19 [style = solid, label="ruleName"];
23->22 [style = dotted, label="true"];
4->6 [style = bold, label=""];
7->12 [style = bold, label=""];
29->30 [style = bold, label=""];
11->3 [style = solid, label="rule"];
26->17 [style = bold, label=""];
25->30 [style = bold, label=""];
2->3 [style = bold, label=""];
11->4 [style = solid, label="rule"];
1->34 [style = dashed, label="0"];
34->33 [style = bold, label=""];
21->27 [style = dotted, label="true"];
28->9 [style = bold, label=""];
26->19 [style = dotted, label="true"];
19->17 [style = bold, label=""];
9->10 [style = bold, label=""];
25->29 [style = dotted, label="true"];
25->29 [style = bold, label=""];
26->19 [style = bold, label=""];
17->32 [style = bold, label=""];
24->22 [style = bold, label=""];
12->0 [style = bold, label=""];
1->13 [style = bold, label=""];
21->28 [style = bold, label=""];
9->6 [style = bold, label=""];
2->13 [style = bold, label=""];
6->2 [style = bold, label=""];
27->17 [style = solid, label="rule"];
20->18 [style = bold, label=""];
31->26 [style = bold, label=""];
23->20 [style = dotted, label="true"];
23->33 [style = bold, label=""];
20->34 [style = solid, label="converterRule"];
22->34 [style = bold, label=""];
23->18 [style = dotted, label="true"];
8->5 [style = bold, label=""];
3->7 [style = bold, label=""];
12->0 [style = solid, label="ruleTraitDef"];
0->1 [style = bold, label=""];
27->25 [style = solid, label="rule"];
2->7 [style = dotted, label="true"];
11->2 [style = solid, label="rule"];
27->26 [style = solid, label="rule"];
9->25 [style = bold, label=""];
16->31 [style = bold, label=""];
28->9 [style = dotted, label="true"];
3->1 [style = solid, label="converterRule"];
15->11 [style = dotted, label="true"];
2->12 [style = dotted, label="true"];
10->4 [style = bold, label=""];
8->11 [style = dotted, label="true"];
5->9 [style = dotted, label="true"];
28->25 [style = bold, label=""];
14->9 [style = bold, label=""];
27->20 [style = solid, label="rule"];
27->23 [style = solid, label="rule"];
14->9 [style = dotted, label="true"];
11->27 [style = dashed, label="0"];
27->30 [style = solid, label="rule"];
30->16 [style = bold, label=""];
31->26 [style = solid, label="ruleName"];
23->24 [style = dotted, label="true"];
14->6 [style = bold, label=""];
24->22 [style = solid, label="ruleTraitDef"];
0->1 [style = dotted, label="true"];
}
