digraph {
39 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "{}@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "commit()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "commit()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertReplicaValue(client,1,\"inplace_updatable_float\",(newinplace_updatable_float + 2.0f),\"inplace_updatable_float didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "threadpool.shutdown()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Replica rep@@@33@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "log.info(\"RTG with DBQs are not working in tlog replicas\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "numActiveReplicas++@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "threadpool.submit(task)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "clearIndex()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@29@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "log.info(\"reorderedDBQsUsingUpdatedValueFromADroppedUpdate: This test passed fine...\")@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,6000)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<UpdateRequest> updates = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "{clearIndex()commit()shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().unsetDelay()updates.add(regularDeleteRequest(1))shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,5999)shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",4,5998)threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))for (UpdateRequest update : updates){AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())threadpool.submit(task)Thread.sleep(100)}threadpool.shutdown()assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))commit()try {for (int i = 0 i < 100 i++){Thread.sleep(10)cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)ClusterState state = cloudClient.getZkStateReader().getClusterState()int numActiveReplicas = 0for (Replica rep : state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()){assertTrue(zkShardTerms.canBecomeLeader(rep.getName()))if (rep.getState().equals(Replica.State.ACTIVE)) numActiveReplicas++}assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)}}for (SolrClient client : new SolrClient((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ed4d6f){SolrDocument doc = client.getById(String.valueOf(1),params(\"distrib\",\"false\"))assertNull(\"This doc was supposed to have been deleted, but was: \" + doc,doc)}}@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "float inplace_updatable_float = 1F@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ClusterState state = cloudClient.getZkStateReader().getClusterState()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int numActiveReplicas = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNull(client.getById(\"1\",params(\"distrib\",\"false\")))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "float newinplace_updatable_float = 100F@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"id_i\",1,\"inplace_updatable_float\",12,\"title_s\",\"mytitle\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Thread.sleep(100)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Replica rep@@@33@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ClusterState state = cloudClient.getZkStateReader().getClusterState()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "log.info(\"Testing client (Fetch missing test): \" + ((HttpSolrClient)client).getBaseURL())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 12 secs\",threadpool.awaitTermination(12,TimeUnit.SECONDS))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "timeout.waitFor(\"Timeout\",null)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new SolrNamedThreadFactory(getTestName()))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "i < 100@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertReplicaValue(client,1,\"title_s\",\"title1_new\",\"Title didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "onlyLeaderIndexes@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "updates.add(regularDeleteByQueryRequest(\"inplace_updatable_float:14\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "delayedReorderingFetchesMissingUpdateFromLeaderTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Thread.sleep(10)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",2,8000)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"title_s\",\"title1_new\",\"id_i\",1,\"inplace_updatable_float\",newinplace_updatable_float))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "numActiveReplicas++@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@33@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "i++@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "TimeoutException e@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TimeOut timeout = new TimeOut(30,TimeUnit.SECONDS,TimeSource.NANO_TIME)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@33@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "buildRandomIndex(inplace_updatable_float,Collections.singletonList(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "numActiveReplicas++@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "log.info(\"delayedReorderingFetchesMissingUpdateFromLeaderTest: This test passed fine...\")@@@95@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Replica rep@@@29@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "log.info(\"Testing client (testDBQUsingUpdatedFieldFromDroppedUpdate): \" + ((HttpSolrClient)client).getBaseURL())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
0->30 [style = bold, label=""];
55->17 [style = bold, label=""];
58->50 [style = bold, label=""];
52->64 [style = bold, label=""];
43->60 [style = bold, label=""];
25->53 [style = solid, label="newinplace_updatable_float"];
26->10 [style = bold, label=""];
8->55 [style = solid, label="i"];
55->49 [style = bold, label=""];
35->10 [style = dotted, label="true"];
53->63 [style = bold, label=""];
39->24 [style = bold, label=""];
10->17 [style = bold, label=""];
44->53 [style = bold, label=""];
45->57 [style = bold, label=""];
11->35 [style = solid, label="i"];
19->5 [style = bold, label=""];
16->11 [style = solid, label="i"];
3->19 [style = bold, label=""];
46->54 [style = bold, label=""];
36->2 [style = bold, label=""];
12->18 [style = bold, label=""];
27->17 [style = bold, label=""];
9->14 [style = bold, label=""];
20->37 [style = bold, label=""];
21->16 [style = bold, label=""];
28->25 [style = bold, label=""];
7->2 [style = dashed, label="0"];
41->33 [style = dotted, label="true"];
35->22 [style = dotted, label="true"];
32->20 [style = bold, label=""];
55->48 [style = dotted, label="true"];
10->11 [style = bold, label=""];
61->1 [style = bold, label=""];
17->41 [style = bold, label=""];
25->3 [style = bold, label=""];
2->34 [style = bold, label=""];
35->0 [style = solid, label="numActiveReplicas"];
35->38 [style = dotted, label="true"];
33->41 [style = bold, label=""];
34->8 [style = bold, label=""];
35->42 [style = solid, label="numActiveReplicas"];
35->33 [style = dotted, label="true"];
26->13 [style = bold, label=""];
55->21 [style = dotted, label="true"];
56->58 [style = bold, label=""];
5->1 [style = bold, label=""];
35->0 [style = bold, label=""];
33->10 [style = solid, label="numActiveReplicas"];
62->43 [style = bold, label=""];
18->4 [style = bold, label=""];
64->25 [style = bold, label=""];
30->7 [style = bold, label=""];
54->2 [style = bold, label=""];
5->61 [style = bold, label=""];
6->19 [style = dashed, label="0"];
14->45 [style = solid, label="task"];
1->59 [style = bold, label=""];
46->14 [style = bold, label=""];
8->45 [style = solid, label="i"];
8->55 [style = bold, label=""];
30->55 [style = solid, label="i"];
16->35 [style = solid, label="i"];
63->45 [style = bold, label=""];
3->45 [style = solid, label="updates"];
10->60 [style = bold, label=""];
60->44 [style = bold, label=""];
13->10 [style = bold, label=""];
17->10 [style = bold, label=""];
35->40 [style = dotted, label="true"];
55->49 [style = dotted, label="true"];
30->45 [style = solid, label="i"];
17->26 [style = solid, label="numActiveReplicas"];
35->45 [style = solid, label="numActiveReplicas"];
55->16 [style = dotted, label="true"];
13->26 [style = dotted, label="true"];
31->24 [style = bold, label=""];
42->45 [style = solid, label="numActiveReplicas"];
41->10 [style = bold, label=""];
55->35 [style = dotted, label="true"];
55->30 [style = dotted, label="true"];
42->0 [style = bold, label=""];
8->30 [style = solid, label="i"];
55->0 [style = dotted, label="true"];
43->17 [style = bold, label=""];
1->6 [style = bold, label=""];
63->60 [style = bold, label=""];
8->2 [style = bold, label=""];
55->11 [style = dotted, label="true"];
15->28 [style = bold, label=""];
13->26 [style = bold, label=""];
42->11 [style = bold, label=""];
24->25 [style = bold, label=""];
35->13 [style = dotted, label="true"];
36->37 [style = dashed, label="0"];
35->41 [style = dotted, label="true"];
14->47 [style = bold, label=""];
4->12 [style = bold, label=""];
26->10 [style = solid, label="numActiveReplicas"];
37->2 [style = bold, label=""];
17->13 [style = bold, label=""];
35->0 [style = dotted, label="true"];
41->33 [style = bold, label=""];
14->32 [style = bold, label=""];
35->23 [style = dotted, label="true"];
59->14 [style = bold, label=""];
20->36 [style = bold, label=""];
24->15 [style = bold, label=""];
17->33 [style = solid, label="numActiveReplicas"];
14->47 [style = solid, label="task"];
47->46 [style = bold, label=""];
33->10 [style = bold, label=""];
11->42 [style = bold, label=""];
24->28 [style = dotted, label="true"];
17->10 [style = solid, label="numActiveReplicas"];
35->11 [style = dotted, label="true"];
35->4 [style = bold, label=""];
11->42 [style = dotted, label="true"];
11->35 [style = bold, label=""];
50->52 [style = bold, label=""];
49->21 [style = bold, label=""];
30->55 [style = bold, label=""];
42->0 [style = solid, label="numActiveReplicas"];
19->5 [style = solid, label="inplace_updatable_float"];
18->29 [style = bold, label=""];
35->27 [style = dotted, label="true"];
11->0 [style = bold, label=""];
52->64 [style = solid, label="inplace_updatable_float"];
2->34 [style = solid, label="task"];
22->27 [style = bold, label=""];
0->22 [style = bold, label=""];
24->15 [style = dotted, label="true"];
55->51 [style = dotted, label="true"];
7->21 [style = bold, label=""];
25->19 [style = solid, label="newinplace_updatable_float"];
35->17 [style = dotted, label="true"];
16->35 [style = bold, label=""];
6->9 [style = bold, label=""];
35->11 [style = bold, label=""];
}
