digraph {
30 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricsCreator)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "when(metricsCreator.createCounter(any(),any(),any(),any())).thenReturn(new CounterMetrics(){@Override public void inc(){}@Override public void inc(double value){}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String testWorkerId = \"mock-worker\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "remoteData.addDataStrings(\"test1\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "before['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "before['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "remoteMessage.setNextWorkerName(testWorkerId)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "workerInstancesService.put(nextWorkerName,worker,)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "ModuleManagerTesting moduleManager = new ModuleManagerTesting()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "callTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MetricsCreator metricsCreator = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "remoteData.addDataLongs(20)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "remoteData.addDataLongs(10)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "RemoteServiceGrpc.RemoteServiceStub remoteServiceStub = RemoteServiceGrpc.newStub(gRPCCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final int streamDataClassId = 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "gRPCCleanup.register(InProcessServerBuilder.forName(serverName).directExecutor().addService(new RemoteServiceHandler(moduleManager)).build().start())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "StreamObserver<RemoteMessage> streamObserver = remoteServiceStub.call(new StreamObserver<Empty>(){@Override public void onNext(Empty empty){}@Override public void onError(Throwable throwable){}@Override public void onCompleted(){}})@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "remoteData.addDataStrings(\"test2\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestWorker worker = new TestWorker(moduleManager)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "streamObserver.onCompleted()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "moduleManager = new ModuleManagerTesting()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "streamObserver.onNext(remoteMessage.build())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String serverName = InProcessServerBuilder.generateName()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "remoteMessage.setRemoteData(remoteData)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "when(metricsCreator.createHistogramMetric(any(),any(),any(),any(),any())).thenReturn(new HistogramMetrics(){@Override public void observe(double value){}})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->24 [style = bold, label=""];
28->16 [style = bold, label=""];
19->28 [style = bold, label=""];
8->0 [style = bold, label=""];
12->15 [style = bold, label=""];
13->22 [style = bold, label=""];
15->31 [style = bold, label=""];
3->5 [style = solid, label="workerInstancesService"];
31->18 [style = bold, label=""];
23->11 [style = bold, label=""];
33->32 [style = bold, label=""];
17->3 [style = bold, label=""];
30->10 [style = bold, label=""];
10->29 [style = bold, label=""];
1->6 [style = bold, label=""];
23->11 [style = solid, label="telemetryModuleDefine"];
0->2 [style = solid, label="moduleManager"];
0->1 [style = bold, label=""];
3->5 [style = bold, label=""];
32->21 [style = bold, label=""];
16->22 [style = solid, label="testWorkerId"];
11->30 [style = bold, label=""];
21->25 [style = bold, label=""];
15->30 [style = solid, label="metricsCreator"];
2->9 [style = bold, label=""];
20->13 [style = bold, label=""];
22->26 [style = bold, label=""];
3->7 [style = solid, label="workerInstancesService"];
6->3 [style = bold, label=""];
2->9 [style = solid, label="worker"];
14->33 [style = bold, label=""];
5->12 [style = bold, label=""];
16->17 [style = bold, label=""];
1->6 [style = solid, label="moduleDefine"];
24->14 [style = bold, label=""];
25->27 [style = bold, label=""];
3->5 [style = solid, label="moduleDefine"];
5->7 [style = bold, label=""];
4->0 [style = bold, label=""];
18->23 [style = bold, label=""];
29->20 [style = bold, label=""];
26->21 [style = solid, label="remoteData"];
7->2 [style = bold, label=""];
}
