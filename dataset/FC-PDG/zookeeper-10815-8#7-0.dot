digraph {
32 [style = filled, label = "byte(( data = null@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < m@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertNotNull(data)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String dir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "int m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queueHandles(1(.remove()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(new String(queueHandles(1(.element()),testString + m)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final int numClients = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createNremoveMelementTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "createNremoveMtest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "createNremoveMelementTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->21 [style = dotted, label="true"];
33->16 [style = bold, label=""];
2->19 [style = bold, label=""];
16->7 [style = solid, label="testString"];
27->29 [style = solid, label="data"];
20->7 [style = solid, label="m"];
28->2 [style = solid, label="n"];
16->26 [style = solid, label="testString"];
4->14 [style = solid, label="i"];
19->10 [style = solid, label="i"];
0->17 [style = bold, label=""];
5->2 [style = solid, label="i"];
16->6 [style = bold, label=""];
12->22 [style = solid, label="i"];
10->27 [style = bold, label=""];
19->3 [style = solid, label="i"];
27->3 [style = bold, label=""];
22->0 [style = dotted, label="true"];
33->28 [style = dotted, label="true"];
20->31 [style = dashed, label="0"];
31->17 [style = solid, label="dir"];
5->14 [style = solid, label="i"];
23->26 [style = solid, label="m"];
32->29 [style = solid, label="data"];
19->10 [style = bold, label=""];
11->12 [style = bold, label=""];
10->26 [style = bold, label=""];
1->2 [style = solid, label="n"];
4->2 [style = bold, label=""];
10->3 [style = dotted, label="true"];
32->19 [style = bold, label=""];
4->5 [style = solid, label="i"];
29->34 [style = bold, label=""];
25->16 [style = bold, label=""];
30->10 [style = solid, label="m"];
10->7 [style = bold, label=""];
2->18 [style = dotted, label="true"];
33->30 [style = dotted, label="true"];
9->16 [style = bold, label=""];
17->21 [style = solid, label="i"];
4->2 [style = solid, label="i"];
22->4 [style = bold, label=""];
16->34 [style = solid, label="testString"];
32->34 [style = solid, label="data"];
3->10 [style = solid, label="i"];
3->10 [style = bold, label=""];
25->24 [style = dotted, label="true"];
5->2 [style = bold, label=""];
16->14 [style = solid, label="testString"];
0->17 [style = solid, label="clients"];
22->0 [style = bold, label=""];
13->27 [style = dashed, label="0"];
13->3 [style = bold, label=""];
10->13 [style = bold, label=""];
10->29 [style = bold, label=""];
10->13 [style = dotted, label="true"];
21->22 [style = bold, label=""];
18->5 [style = bold, label=""];
2->14 [style = bold, label=""];
6->8 [style = bold, label=""];
23->10 [style = solid, label="m"];
9->20 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
20->10 [style = solid, label="m"];
25->20 [style = dotted, label="true"];
15->17 [style = solid, label="dir"];
2->14 [style = dotted, label="true"];
14->18 [style = bold, label=""];
22->17 [style = dotted, label="true"];
9->15 [style = dotted, label="true"];
10->27 [style = dotted, label="true"];
2->32 [style = bold, label=""];
27->34 [style = solid, label="data"];
25->23 [style = dotted, label="true"];
21->22 [style = solid, label="i"];
2->5 [style = dotted, label="true"];
7->26 [style = dashed, label="0"];
30->34 [style = solid, label="m"];
8->11 [style = bold, label=""];
17->21 [style = bold, label=""];
24->17 [style = solid, label="dir"];
12->22 [style = bold, label=""];
20->2 [style = solid, label="n"];
33->31 [style = dotted, label="true"];
}
