digraph {
10 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i <= 3@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ByteBuffer buffer = RequestTestUtils.serializeResponseWithHeader(ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE),ApiKeys.API_VERSIONS.latestVersion(),0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int throttleTimeMs = 100 * i@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(250,(Double)avgMetric.metricValue(),EPSILON)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "client.close()@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(400,(Double)maxMetric.metricValue(),EPSILON)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(250,(Double)avgMetric.metricValue(),EPS)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "selector.clear()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "FetchResponse<MemoryRecords> response = fullFetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(this.senderMetricsRegistry)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "buffer = RequestTestUtils.serializeResponseWithHeader(response,ApiKeys.PRODUCE.latestVersion(),request.correlationId())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ApiVersionsResponse apiVersionsResponse = ApiVersionsResponse.defaultApiVersionsResponse(400,ApiMessageType.ListenerType.ZK_BROKER)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "client.close()@@@36@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeAvg)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,10 * 1000,127 * 1000,ClientDnsLookup.USE_ALL_DNS_IPS,time,true,new ApiVersions(),throttleTimeSensor,logContext)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.poll(1,time.milliseconds())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "client.poll(1,time.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeMax)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ByteBuffer buffer = RequestTestUtils.serializeResponseWithHeader(apiVersionsResponse,ApiKeys.API_VERSIONS.latestVersion(),0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ByteBuffer buffer = RequestTestUtils.serializeResponseWithHeader(ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE),ApiKeys.API_VERSIONS.latestVersion(),0)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int throttleTimeMs = 100 * i@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.send(request,time.milliseconds())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<>())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "buffer = RequestTestUtils.serializeResponseWithHeader(response,ApiKeys.FETCH.latestVersion(),request.correlationId())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int i = 1@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "builder.rackId(\"\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ProduceRequest.Builder builder = ProduceRequest.forCurrentMagic(new ProduceRequestData().setTopicData(new ProduceRequestData.TopicProduceDataCollection()).setAcks((short)1).setTimeoutMs(1000))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "selector.clear()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,10 * 1000,127 * 1000,ClientDnsLookup.USE_ALL_DNS_IPS,time,true,new ApiVersions(),throttleTimeSensor,new LogContext())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Node node = cluster.nodes().get(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(400,(Double)maxMetric.metricValue(),EPS)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ProduceResponse response = produceResponse(tp0,i,Errors.NONE,throttleTimeMs)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "selector.clear()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "buildFetcher()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43->0 [style = solid, label="builder"];
52->44 [style = bold, label=""];
29->5 [style = bold, label=""];
22->15 [style = bold, label=""];
30->20 [style = bold, label=""];
10->19 [style = bold, label=""];
17->9 [style = bold, label=""];
51->9 [style = solid, label="buffer"];
29->5 [style = dotted, label="true"];
30->0 [style = dotted, label="true"];
25->6 [style = bold, label=""];
30->6 [style = bold, label=""];
10->41 [style = bold, label=""];
1->13 [style = bold, label=""];
36->20 [style = bold, label=""];
30->7 [style = solid, label="i"];
6->42 [style = solid, label="i"];
30->2 [style = dotted, label="true"];
1->49 [style = dashed, label="0"];
7->2 [style = solid, label="builder"];
35->37 [style = bold, label=""];
49->13 [style = bold, label=""];
50->10 [style = bold, label=""];
45->38 [style = bold, label=""];
24->17 [style = bold, label=""];
9->21 [style = bold, label=""];
7->24 [style = solid, label="throttleTimeMs"];
20->43 [style = bold, label=""];
4->8 [style = bold, label=""];
12->46 [style = dashed, label="0"];
30->43 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
6->11 [style = dotted, label="true"];
30->39 [style = dotted, label="true"];
20->24 [style = solid, label="i"];
6->3 [style = dotted, label="true"];
8->27 [style = bold, label=""];
1->13 [style = solid, label="buffer"];
30->6 [style = solid, label="i"];
42->51 [style = solid, label="response"];
0->3 [style = bold, label=""];
25->47 [style = bold, label=""];
40->50 [style = bold, label=""];
47->6 [style = bold, label=""];
16->25 [style = solid, label="node"];
15->34 [style = bold, label=""];
30->7 [style = dotted, label="true"];
25->36 [style = bold, label=""];
10->12 [style = solid, label="selector"];
30->6 [style = dotted, label="true"];
3->11 [style = bold, label=""];
24->51 [style = dashed, label="0"];
14->10 [style = bold, label=""];
31->4 [style = bold, label=""];
12->35 [style = bold, label=""];
21->25 [style = bold, label=""];
12->1 [style = bold, label=""];
27->22 [style = bold, label=""];
18->28 [style = bold, label=""];
6->20 [style = dotted, label="true"];
29->26 [style = bold, label=""];
17->9 [style = solid, label="buffer"];
6->4 [style = bold, label=""];
49->13 [style = solid, label="buffer"];
30->51 [style = dotted, label="true"];
7->2 [style = bold, label=""];
24->17 [style = solid, label="response"];
41->46 [style = solid, label="throttleTimeSensor"];
30->3 [style = dotted, label="true"];
6->25 [style = dotted, label="true"];
6->7 [style = dotted, label="true"];
30->9 [style = dotted, label="true"];
4->52 [style = dashed, label="0"];
18->5 [style = dotted, label="true"];
11->42 [style = dashed, label="0"];
20->7 [style = bold, label=""];
6->7 [style = bold, label=""];
26->11 [style = solid, label="i"];
30->24 [style = solid, label="i"];
29->32 [style = dotted, label="true"];
16->21 [style = solid, label="node"];
13->18 [style = bold, label=""];
18->29 [style = dotted, label="true"];
6->24 [style = dotted, label="true"];
30->42 [style = dotted, label="true"];
6->20 [style = solid, label="i"];
20->7 [style = solid, label="i"];
2->0 [style = solid, label="request"];
35->37 [style = solid, label="apiVersionsResponse"];
22->45 [style = dashed, label="0"];
51->9 [style = bold, label=""];
26->20 [style = solid, label="i"];
2->0 [style = solid, label="builder"];
28->26 [style = bold, label=""];
5->18 [style = bold, label=""];
11->24 [style = bold, label=""];
10->46 [style = solid, label="selector"];
30->20 [style = solid, label="i"];
42->51 [style = bold, label=""];
19->41 [style = dashed, label="0"];
16->5 [style = solid, label="node"];
5->32 [style = bold, label=""];
2->0 [style = bold, label=""];
6->2 [style = dotted, label="true"];
30->25 [style = dotted, label="true"];
26->6 [style = solid, label="i"];
6->9 [style = dotted, label="true"];
30->31 [style = bold, label=""];
16->32 [style = solid, label="node"];
30->20 [style = dotted, label="true"];
0->3 [style = solid, label="request"];
30->17 [style = dotted, label="true"];
8->44 [style = dashed, label="0"];
6->21 [style = dotted, label="true"];
30->11 [style = dotted, label="true"];
43->39 [style = bold, label=""];
27->48 [style = dashed, label="0"];
37->18 [style = solid, label="buffer"];
20->6 [style = solid, label="i"];
16->46 [style = bold, label=""];
23->16 [style = bold, label=""];
6->36 [style = dotted, label="true"];
30->24 [style = dotted, label="true"];
46->49 [style = bold, label=""];
30->47 [style = dotted, label="true"];
33->10 [style = bold, label=""];
20->6 [style = bold, label=""];
11->42 [style = bold, label=""];
30->21 [style = dotted, label="true"];
6->17 [style = dotted, label="true"];
26->30 [style = bold, label=""];
32->29 [style = bold, label=""];
18->29 [style = bold, label=""];
20->11 [style = solid, label="throttleTimeMs"];
48->45 [style = bold, label=""];
39->0 [style = bold, label=""];
4->52 [style = bold, label=""];
6->11 [style = solid, label="i"];
6->30 [style = solid, label="i"];
30->4 [style = bold, label=""];
44->48 [style = bold, label=""];
19->23 [style = bold, label=""];
26->42 [style = solid, label="i"];
24->17 [style = solid, label="buffer"];
37->18 [style = bold, label=""];
26->30 [style = solid, label="i"];
20->42 [style = solid, label="throttleTimeMs"];
41->23 [style = bold, label=""];
16->12 [style = bold, label=""];
11->24 [style = solid, label="response"];
19->12 [style = solid, label="throttleTimeSensor"];
6->30 [style = bold, label=""];
}
