digraph {
19 [style = filled, label = "constantIntTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(24,val.getInt())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(24.0,val.getDouble(),.00001)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(24F,val.getFloat(),.00001)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "val.streamObjects(null)@@@48@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(24L,val.getLong())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"24\",val.getString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "val.streamFloats(null)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "counter.setValue(0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ConstantDoubleValue val = new ConstantDoubleValue(24.0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "val.streamStrings(null)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "val.streamInts(null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(new Double(24.0),val.getObject())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "counter.setValue(0)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "counter.setValue(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "constantDoubleTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ConstantIntValue val = new ConstantIntValue(24)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(24.0,val.getObject())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "counter.setValue(0)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "counter.setValue(0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "counter.setValue(0)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(new Integer(24),val.getObject())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestIntValue counter = new TestIntValue()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "constantDoubleTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(val.exists())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "val.streamDoubles(null)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"24.0\",val.getString())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "val.streamLongs(null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->3 [style = bold, label=""];
19->18 [style = bold, label=""];
7->11 [style = bold, label=""];
6->26 [style = bold, label=""];
5->9 [style = bold, label=""];
21->27 [style = bold, label=""];
4->6 [style = bold, label=""];
3->25 [style = bold, label=""];
8->23 [style = dashed, label="0"];
17->4 [style = bold, label=""];
12->17 [style = dashed, label="0"];
9->10 [style = bold, label=""];
16->22 [style = bold, label=""];
25->16 [style = bold, label=""];
27->15 [style = bold, label=""];
3->0 [style = bold, label=""];
26->21 [style = bold, label=""];
6->2 [style = bold, label=""];
24->20 [style = bold, label=""];
20->2 [style = bold, label=""];
0->23 [style = bold, label=""];
22->0 [style = bold, label=""];
12->4 [style = bold, label=""];
11->3 [style = bold, label=""];
11->18 [style = dashed, label="0"];
15->24 [style = bold, label=""];
0->8 [style = bold, label=""];
23->17 [style = bold, label=""];
12->13 [style = dashed, label="0"];
10->1 [style = bold, label=""];
14->11 [style = bold, label=""];
8->12 [style = bold, label=""];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
