digraph {
0 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertNotNull(stat)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String root = String.format(\"/%s/%s\",clusterName,PropertyType.PROPERTYSTORE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String fallbackRoot = String.format(\"/%s/%s\",clusterName,\"HELIX_PROPERTYSTORE\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "deleteCluster(clusterName)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Stat stat = store.getStat(path,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i < 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String path = String.format(\"%s/%d\",fallbackRoot,i)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertTrue(exist)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertTrue(succeed)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ZNRecord record = new ZNRecord(\"new0\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String path = String.format(\"/%d\",0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(record)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ZNRecord record = store.get(path,null,0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testSingleSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertNotNull(record)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testSingleSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location after get\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(record.getId(),\"new0\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<>(_gZkClient)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "boolean exist = store.exists(path,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "boolean succeed = store.set(path,record,AccessOption.PERSISTENT)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNotNull(record)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testSingleGetOnFallbackPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<ZNRecord>(baseAccessor,root,fallbackRoot)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<>(baseAccessor,root,fallbackRoot)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
28->6 [style = bold, label=""];
26->10 [style = bold, label=""];
18->30 [style = dashed, label="0"];
2->6 [style = bold, label=""];
21->15 [style = bold, label=""];
12->34 [style = solid, label="path"];
16->7 [style = bold, label=""];
23->21 [style = solid, label="succeed"];
14->37 [style = solid, label="clusterName"];
4->14 [style = solid, label="className"];
25->9 [style = solid, label="path"];
3->4 [style = bold, label=""];
24->22 [style = solid, label="i"];
22->30 [style = bold, label=""];
14->26 [style = solid, label="clusterName"];
8->15 [style = solid, label="fallbackRoot"];
7->9 [style = solid, label="i"];
5->19 [style = solid, label="record"];
15->11 [style = solid, label="record"];
0->14 [style = bold, label=""];
8->30 [style = solid, label="fallbackRoot"];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
11->13 [style = bold, label=""];
2->28 [style = bold, label=""];
9->24 [style = bold, label=""];
35->31 [style = bold, label=""];
22->25 [style = bold, label=""];
34->13 [style = solid, label="record"];
5->33 [style = bold, label=""];
12->15 [style = solid, label="path"];
36->4 [style = bold, label=""];
0->14 [style = solid, label="methodName"];
18->12 [style = bold, label=""];
7->24 [style = solid, label="i"];
19->2 [style = bold, label=""];
22->24 [style = dotted, label="true"];
8->25 [style = solid, label="fallbackRoot"];
8->1 [style = solid, label="fallbackRoot"];
1->17 [style = bold, label=""];
4->0 [style = bold, label=""];
10->5 [style = solid, label="root"];
12->1 [style = solid, label="path"];
22->18 [style = bold, label=""];
10->20 [style = solid, label="root"];
12->33 [style = solid, label="path"];
10->18 [style = solid, label="root"];
35->31 [style = solid, label="stat"];
5->33 [style = dashed, label="0"];
13->5 [style = bold, label=""];
1->32 [style = bold, label=""];
22->9 [style = dotted, label="true"];
38->35 [style = bold, label=""];
32->38 [style = solid, label="exist"];
12->23 [style = solid, label="path"];
25->9 [style = bold, label=""];
22->25 [style = dotted, label="true"];
12->20 [style = bold, label=""];
20->1 [style = bold, label=""];
17->23 [style = bold, label=""];
29->30 [style = solid, label="baseAccessor"];
31->34 [style = bold, label=""];
5->19 [style = bold, label=""];
7->22 [style = bold, label=""];
30->12 [style = bold, label=""];
12->35 [style = solid, label="path"];
33->37 [style = bold, label=""];
14->8 [style = solid, label="clusterName"];
10->33 [style = solid, label="root"];
14->6 [style = solid, label="clusterName"];
17->23 [style = solid, label="record"];
7->22 [style = solid, label="i"];
10->30 [style = solid, label="root"];
34->13 [style = bold, label=""];
12->32 [style = solid, label="path"];
12->5 [style = solid, label="path"];
24->22 [style = bold, label=""];
14->28 [style = solid, label="clusterName"];
7->25 [style = solid, label="i"];
14->26 [style = bold, label=""];
32->38 [style = bold, label=""];
27->4 [style = bold, label=""];
12->20 [style = solid, label="path"];
14->10 [style = solid, label="clusterName"];
23->21 [style = bold, label=""];
8->18 [style = solid, label="fallbackRoot"];
16->29 [style = dashed, label="0"];
29->7 [style = bold, label=""];
24->25 [style = solid, label="i"];
8->29 [style = bold, label=""];
16->18 [style = solid, label="baseAccessor"];
24->9 [style = solid, label="i"];
}
