digraph {
14 [style = filled, label = "when(curator.getRetryPolicy()).thenReturn(retryPolicy)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RetryLoop retryLoop = new RetryLoop(retryPolicy,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final Stat fakeStat = mock()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ensurePath.ensure(curator)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CuratorZookeeperClient curator = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ensurePath.ensure(curator)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "when(client.exists(Mockito.any(),anyBoolean())).thenAnswer(new Answer<Stat>(){@Override public Stat answer(InvocationOnMock invocation){semaphore.acquire()return fakeStat}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ExecutorService service = Executors.newCachedThreadPool()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Stat fakeStat = mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(startedLatch.await(10,TimeUnit.SECONDS))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyNoMoreInteractions(client)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "verifyNoMoreInteractions(client)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final CountDownLatch finishedLatch = new CountDownLatch(2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(curator.getConnectionHandlingPolicy()).thenReturn(new ClassicConnectionHandlingPolicy())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(client,times(3)).exists(Mockito.any(),anyBoolean())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final CuratorZookeeperClient curator = mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "ZooKeeper client = mock(,Mockito.RETURNS_MOCKS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(client,times(3)).exists(Mockito.any(),anyBoolean())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifyNoMoreInteractions(client)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RetryPolicy retryPolicy = new RetryOneTime(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(finishedLatch.await(10,TimeUnit.SECONDS))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ensurePath.ensure(curator)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "when(curator.getConnectionHandlingPolicy()).thenReturn(new StandardConnectionHandlingPolicy())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final EnsurePath ensurePath = new EnsurePath(\"/one/two/three\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "++i@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testSimultaneous['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "service.submit(new Callable<Void>(){@Override public Void call(){startedLatch.countDown()ensurePath.ensure(curator)finishedLatch.countDown()return null}})@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ensurePath.ensure(curator)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ensurePath.ensure(curator)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(client.exists(Mockito.any(),anyBoolean())).thenReturn(fakeStat)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(curator.newRetryLoop()).thenReturn(retryLoop)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < 2@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "semaphore.release(3)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(curator.getZooKeeper()).thenReturn(client)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verifyNoMoreInteractions(client)@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EnsurePath ensurePath = new EnsurePath(\"/one/two/three\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final CountDownLatch startedLatch = new CountDownLatch(2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
28->40 [style = solid, label="fakeStat"];
17->8 [style = bold, label=""];
11->28 [style = bold, label=""];
22->26 [style = bold, label=""];
16->0 [style = bold, label=""];
32->21 [style = bold, label=""];
31->22 [style = bold, label=""];
33->20 [style = bold, label=""];
22->31 [style = dotted, label="true"];
28->34 [style = bold, label=""];
29->30 [style = bold, label=""];
11->1 [style = bold, label=""];
6->17 [style = solid, label="curator"];
10->19 [style = bold, label=""];
16->6 [style = bold, label=""];
0->10 [style = solid, label="retryPolicy"];
16->35 [style = solid, label="client"];
27->31 [style = bold, label=""];
38->36 [style = bold, label=""];
6->0 [style = bold, label=""];
30->37 [style = bold, label=""];
1->28 [style = dashed, label="0"];
6->9 [style = solid, label="curator"];
15->16 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
25->7 [style = bold, label=""];
16->38 [style = solid, label="client"];
16->13 [style = solid, label="client"];
16->5 [style = solid, label="client"];
3->9 [style = bold, label=""];
24->16 [style = bold, label=""];
37->22 [style = bold, label=""];
0->10 [style = bold, label=""];
6->12 [style = solid, label="curator"];
0->14 [style = solid, label="retryPolicy"];
10->11 [style = solid, label="retryLoop"];
25->39 [style = solid, label="curator"];
37->22 [style = solid, label="i"];
19->13 [style = bold, label=""];
20->23 [style = bold, label=""];
22->27 [style = bold, label=""];
10->25 [style = bold, label=""];
7->19 [style = dashed, label="0"];
25->27 [style = solid, label="curator"];
1->2 [style = solid, label="fakeStat"];
22->27 [style = dotted, label="true"];
25->36 [style = solid, label="curator"];
23->39 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
21->40 [style = bold, label=""];
39->38 [style = bold, label=""];
34->32 [style = bold, label=""];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
36->35 [style = bold, label=""];
16->8 [style = solid, label="client"];
26->33 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
40->29 [style = bold, label=""];
18->16 [style = bold, label=""];
}
