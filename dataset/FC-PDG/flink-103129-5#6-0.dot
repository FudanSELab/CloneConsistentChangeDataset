digraph {
3 [style = filled, label = "harness.getCheckpointLock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNotNull(mockEnvironment.getFailExternallyCause())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "OneInputStreamOperatorTestHarness<Integer,Integer> harness = new OneInputStreamOperatorTestHarness<>(asyncWaitOperator,IntSerializer.INSTANCE,mockEnvironment)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final MockEnvironment mockEnvironment = createMockEnvironment()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "long timeout = 2000L@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "AsyncWaitOperator<Integer,Integer> asyncWaitOperator = new AsyncWaitOperator<>(asyncFunction,timeout,2,outputMode)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "harness.getCheckpointLock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "harness.processElement(1,1L)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "harness.setProcessingTime(10L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "AsyncDataStream.OutputMode outputMode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(harness.getEnvironment().getActualExternalFailureCause().isPresent())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testUserExceptionHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testUserExceptionHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testTimeoutExceptionHandling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "AsyncDataStream.OutputMode outputMode@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long timeout = 10L@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "harness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "AsyncFunction<Integer,Integer> asyncFunction = new NoOpAsyncFunction<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "harness.close()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mockEnvironment.setExpectedExternalFailureCause()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "AsyncWaitOperator<Integer,Integer> asyncWaitOperator = new AsyncWaitOperator<>(asyncWaitFunction,TIMEOUT,2,outputMode)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(harness.getEnvironment().getFailExternallyCause())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "UserExceptionAsyncFunction asyncWaitFunction = new UserExceptionAsyncFunction()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
1->4 [style = bold, label=""];
12->5 [style = solid, label="outputMode"];
19->18 [style = bold, label=""];
2->19 [style = dashed, label="0"];
12->20 [style = dashed, label="0"];
22->16 [style = bold, label=""];
0->2 [style = bold, label=""];
3->10 [style = dotted, label="true"];
7->0 [style = bold, label=""];
10->17 [style = bold, label=""];
11->17 [style = dashed, label="0"];
16->19 [style = bold, label=""];
21->3 [style = bold, label=""];
19->18 [style = solid, label="timeout"];
5->18 [style = dashed, label="0"];
7->12 [style = dotted, label="true"];
6->14 [style = bold, label=""];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
6->8 [style = solid, label="mockEnvironment"];
18->8 [style = solid, label="asyncWaitOperator"];
11->13 [style = dashed, label="0"];
22->20 [style = dotted, label="true"];
5->6 [style = bold, label=""];
10->13 [style = bold, label=""];
18->6 [style = bold, label=""];
5->8 [style = solid, label="asyncWaitOperator"];
15->0 [style = bold, label=""];
6->8 [style = bold, label=""];
9->21 [style = bold, label=""];
16->18 [style = solid, label="asyncFunction"];
0->5 [style = solid, label="asyncWaitFunction"];
20->18 [style = solid, label="outputMode"];
9->3 [style = bold, label=""];
15->12 [style = dotted, label="true"];
14->8 [style = bold, label=""];
4->9 [style = dotted, label="true"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
