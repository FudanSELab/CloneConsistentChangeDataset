digraph {
15 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "JDBCSession session@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "MySQLPlanNodePlain node = new MySQLPlanNodePlain(null,dbResult)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "super((MySQLDataSource)session.getDataSource(),query)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "dbResult.next()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SQLDialect dialect = SQLUtils.getDialectFromObject(dataSource)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "JDBCSession session@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "rootNodes = nodes@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CommonUtils.isEmpty(rootNode.getNested()) && rootNode.getProperty(\"message\") != null@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<MySQLPlanNodePlain> nodes = new ArrayList<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "rootNodes = nodes@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "MySQLPlanClassic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String jsonPlan = dbResult.getString(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "dbResult.next()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "rootNodes = nodes@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "nodes.add(node)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "!\"SELECT\".equalsIgnoreCase(SQLUtils.getFirstKeyword(dialect,plainQuery))@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!plainQuery.startsWith(\"SELECT\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "JsonObject planObject = gson.fromJson(jsonPlan,)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JDBCSession session@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "throw new DBCException(\"Can't explain plan: \" + rootNode.getProperty(\"message\"))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String plainQuery = SQLUtils.stripComments(SQLUtils.getDialectFromObject(dataSource),query).toUpperCase()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "MySQLPlanJSON['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "nodes.add(rootNode)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "!SQLUtils.getFirstKeyword(SQLUtils.getDialectFromObject(dataSource),query).toUpperCase().equals(\"SELECT\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "String query@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "MySQLPlanNodeJSON rootNode = new MySQLPlanNodeJSON(null,\"select\",queryBlock)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String plainQuery = SQLUtils.stripComments(dialect,query).toUpperCase()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<MySQLPlanNodeJSON> nodes = new ArrayList<>()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "throw new DBCException(\"Can't explain plan: \" + rootNode.getProperty(\"message\"))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "throw new DBCException(\"Only SELECT statements could produce execution plan\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "JsonObject queryBlock = planObject.getAsJsonObject(\"query_block\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MySQLPlanJSON['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32->5 [style = bold, label=""];
16->8 [style = dotted, label="true"];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
10->15 [style = bold, label=""];
23->30 [style = bold, label=""];
15->7 [style = bold, label=""];
32->34 [style = dotted, label="true"];
16->8 [style = bold, label=""];
28->30 [style = bold, label=""];
4->1 [style = dotted, label="true"];
7->12 [style = bold, label=""];
25->23 [style = bold, label=""];
34->5 [style = solid, label="query"];
11->34 [style = dashed, label="0"];
23->28 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
12->0 [style = solid, label="jsonPlan"];
4->11 [style = dotted, label="true"];
8->14 [style = bold, label=""];
27->31 [style = bold, label=""];
31->29 [style = bold, label=""];
22->11 [style = dotted, label="true"];
12->31 [style = dashed, label="0"];
16->17 [style = bold, label=""];
3->16 [style = bold, label=""];
0->9 [style = solid, label="jsonPlan"];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
22->5 [style = bold, label=""];
9->13 [style = solid, label="queryBlock"];
7->2 [style = solid, label="nodes"];
23->28 [style = bold, label=""];
10->15 [style = dotted, label="true"];
5->19 [style = bold, label=""];
29->27 [style = bold, label=""];
22->20 [style = dotted, label="true"];
5->6 [style = bold, label=""];
13->3 [style = bold, label=""];
17->14 [style = bold, label=""];
30->31 [style = bold, label=""];
6->24 [style = dashed, label="0"];
24->25 [style = bold, label=""];
5->24 [style = bold, label=""];
6->10 [style = bold, label=""];
31->33 [style = bold, label=""];
7->30 [style = dashed, label="0"];
13->17 [style = solid, label="rootNode"];
31->27 [style = dotted, label="true"];
6->19 [style = dashed, label="0"];
0->29 [style = dashed, label="0"];
11->5 [style = solid, label="query"];
21->7 [style = bold, label=""];
16->14 [style = bold, label=""];
3->17 [style = bold, label=""];
32->26 [style = dotted, label="true"];
14->2 [style = bold, label=""];
18->21 [style = bold, label=""];
29->27 [style = solid, label="node"];
31->29 [style = dotted, label="true"];
3->14 [style = solid, label="rootNode"];
30->33 [style = solid, label="nodes"];
4->5 [style = bold, label=""];
10->25 [style = dashed, label="0"];
3->16 [style = dotted, label="true"];
13->3 [style = solid, label="queryBlock"];
21->14 [style = solid, label="nodes"];
9->13 [style = bold, label=""];
19->21 [style = bold, label=""];
}
