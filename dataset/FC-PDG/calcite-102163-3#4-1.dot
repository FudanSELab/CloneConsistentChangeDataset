digraph {
9 [style = filled, label = "return@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "map.put(parameterType,new SqlRexConvertlet(){public RexNode convertCall(SqlRexContext cx,SqlCall call){try {return (RexNode)method.invoke(this,cx,call)}catch (IllegalAccessException|InvocationTargetException e) }})@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final Class parameterType = parameterTypes(1(@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "parameterTypes(0( != @@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "registerNodeTypeMethod['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "parameterTypes.length != 2@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "!.isAssignableFrom(opClass)@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "map.put(parameterType,new SqlRexConvertlet(){public RexNode convertCall(SqlRexContext cx,SqlCall call){try {return (RexNode)method.invoke(this,cx,call)}catch (IllegalAccessException e) catch (InvocationTargetException e) }})@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "!Modifier.isPublic(method.getModifiers())@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "registerOpTypeMethod['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "!.isAssignableFrom(parameterType)@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Class parameterType = parameterTypes(2(@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Class(( parameterTypes = method.getParameterTypes()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final Class opClass = parameterTypes(1(@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "parameterTypes.length != 3@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!.isAssignableFrom(method.getReturnType())@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!method.getName().startsWith(\"convert\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Method method@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "map.put(opClass,new SqlRexConvertlet(){public RexNode convertCall(SqlRexContext cx,SqlCall call){try {return (RexNode)method.invoke(this,cx,call.getOperator(),call)}catch (IllegalAccessException e) catch (InvocationTargetException e) }})@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "registerNodeTypeMethod['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "!.isAssignableFrom(parameterType)@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Method method@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
16->15 [style = bold, label=""];
10->17 [style = solid, label="parameterType"];
15->10 [style = bold, label=""];
12->20 [style = dashed, label="0"];
5->25 [style = solid, label="parameterTypes"];
20->11 [style = dotted, label="true"];
5->23 [style = bold, label=""];
21->19 [style = bold, label=""];
3->27 [style = dashed, label="0"];
4->13 [style = bold, label=""];
12->17 [style = bold, label=""];
12->11 [style = bold, label=""];
23->15 [style = bold, label=""];
19->26 [style = bold, label=""];
10->2 [style = solid, label="parameterType"];
6->24 [style = bold, label=""];
7->0 [style = bold, label=""];
15->6 [style = bold, label=""];
16->23 [style = dashed, label="0"];
13->7 [style = dotted, label="true"];
5->24 [style = solid, label="parameterTypes"];
2->17 [style = dashed, label="0"];
20->25 [style = bold, label=""];
11->2 [style = bold, label=""];
1->9 [style = bold, label=""];
5->15 [style = solid, label="parameterTypes"];
12->11 [style = dotted, label="true"];
23->14 [style = bold, label=""];
0->8 [style = dotted, label="true"];
5->16 [style = bold, label=""];
8->1 [style = bold, label=""];
24->20 [style = bold, label=""];
23->14 [style = dotted, label="true"];
12->2 [style = bold, label=""];
21->26 [style = bold, label=""];
4->3 [style = dotted, label="true"];
10->12 [style = bold, label=""];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
15->6 [style = dotted, label="true"];
1->9 [style = dotted, label="true"];
21->19 [style = dotted, label="true"];
22->27 [style = dotted, label="true"];
18->3 [style = dotted, label="true"];
16->14 [style = dotted, label="true"];
0->8 [style = bold, label=""];
6->10 [style = bold, label=""];
18->13 [style = bold, label=""];
15->24 [style = bold, label=""];
9->5 [style = bold, label=""];
2->25 [style = dashed, label="0"];
16->14 [style = bold, label=""];
11->17 [style = bold, label=""];
14->15 [style = bold, label=""];
24->26 [style = solid, label="opClass"];
10->24 [style = dashed, label="0"];
25->21 [style = bold, label=""];
22->13 [style = bold, label=""];
5->10 [style = solid, label="parameterTypes"];
11->25 [style = bold, label=""];
13->0 [style = bold, label=""];
20->11 [style = bold, label=""];
}
