digraph {
34 [style = filled, label = "Map<String,String> origProps = new HashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "expectTaskHeaderConverter(ClassLoaderUsage.CURRENT_CLASSLOADER,null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "connProps.put(ConnectorConfig.KEY_CONVERTER_CLASS_CONFIG,.getName())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,executorService,noneConnectorClientConfigOverridePolicy)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PowerMock.verifyAll()@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TaskConfig taskConfig = new TaskConfig(origProps)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testConverterOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "worker.stopAndAwaitTask(TASK_ID)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertNotNull(taskKeyConverter)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "EasyMock.expect(workerTask.loader()).andReturn(pluginLoader)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andStubReturn(true)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "connProps.put(\"key.converter.extra.config\",\"foo\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertStatistics(worker,0,1)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Capture<TestConverter> keyConverter = EasyMock.newCapture()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "PowerMock.verifyAll()@@@60@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertStatistics(worker,0,0)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "workerTask.initialize(taskConfig)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expectTaskHeaderConverter(ClassLoaderUsage.PLUGINS,taskHeaderConverter)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertStatistics(worker,0,0)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.expect(delegatingLoader.connectorLoader(.getName())).andReturn(pluginLoader)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectFileConfigProvider()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectTaskValueConverters(ClassLoaderUsage.CURRENT_CLASSLOADER,null)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expectStopStorage()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expectLastCall().andReturn()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "connProps.put(\"value.converter.extra.config\",\"bar\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Capture<TestConfigurableConverter> valueConverter = EasyMock.newCapture()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(pluginLoader)).andReturn(delegatingLoader).times(2)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "PowerMock.replayAll()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),anyObject(),EasyMock.eq(TargetState.STARTED),anyObject(),anyObject(),anyObject(),EasyMock.eq(new TransformationChain<>(Collections.emptyList(),NOOP_OPERATOR)),anyObject(),anyObject(),anyObject(),anyObject(),anyObject(),anyObject(),EasyMock.eq(pluginLoader),anyObject(),anyObject(),anyObject()).andReturn(workerTask)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.expectLastCall()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.expect(workerTask.id()).andStubReturn(TASK_ID)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "plugins.connectorClass(.getName())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Map<String,String> connProps = anyConnectorConfigMap()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "connProps.put(ConnectorConfig.VALUE_CONVERTER_CLASS_CONFIG,.getName())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "origProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertNotNull(taskValueConverter)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "worker.startTask(TASK_ID,ClusterConfigState.EMPTY,connProps,origProps,taskStatusListener,TargetState.STARTED)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Capture<HeaderConverter> headerConverter = EasyMock.newCapture()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "worker.startTask(TASK_ID,ClusterConfigState.EMPTY,anyConnectorConfigMap(),origProps,taskStatusListener,TargetState.STARTED)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EasyMock.expect(plugins.delegatingLoader()).andReturn(delegatingLoader)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "worker.herder = herder@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Collections.emptySet(),worker.taskIds())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "EasyMock.expect(task.version()).andReturn(\"1.0\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectTaskValueConverters(ClassLoaderUsage.PLUGINS,taskValueConverter)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertStatistics(worker,0,0)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expectTaskKeyConverters(ClassLoaderUsage.CURRENT_CLASSLOADER,null)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "worker.start()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testCleanupTasksOnStop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertStatistics(worker,0,0)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expectTaskKeyConverters(ClassLoaderUsage.PLUGINS,taskKeyConverter)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "expectNewWorkerTask()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "worker.stop()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNotNull(taskHeaderConverter)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expectLastCall()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "EasyMock.expect(plugins.newTask()).andReturn(task)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "PowerMock.expectNew(,EasyMock.eq(TASK_ID),EasyMock.eq(task),anyObject(),EasyMock.eq(TargetState.STARTED),EasyMock.capture(keyConverter),EasyMock.capture(valueConverter),EasyMock.capture(headerConverter),EasyMock.eq(new TransformationChain<>(Collections.emptyList(),NOOP_OPERATOR)),anyObject(),anyObject(),anyObject(),anyObject(),anyObject(),anyObject(),EasyMock.eq(pluginLoader),anyObject(),anyObject(),anyObject()).andReturn(workerTask)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(TASK_ID)),worker.taskIds())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "EasyMock.expect(executorService.submit(workerTask)).andReturn(null)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EasyMock.expect(workerTask.awaitStop(EasyMock.anyLong())).andReturn(true)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertStatistics(worker,0,1)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "worker.stop()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workerTask.stop()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testCleanupTasksOnStop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30->68 [style = dashed, label="0"];
21->22 [style = bold, label=""];
9->57 [style = solid, label="worker"];
45->32 [style = bold, label=""];
19->23 [style = bold, label=""];
57->66 [style = bold, label=""];
37->0 [style = bold, label=""];
41->4 [style = bold, label=""];
18->41 [style = bold, label=""];
50->53 [style = bold, label=""];
2->68 [style = bold, label=""];
1->17 [style = bold, label=""];
48->34 [style = bold, label=""];
5->28 [style = bold, label=""];
47->34 [style = bold, label=""];
52->59 [style = bold, label=""];
62->55 [style = bold, label=""];
29->21 [style = bold, label=""];
65->50 [style = solid, label="connProps"];
13->39 [style = bold, label=""];
63->61 [style = bold, label=""];
64->62 [style = bold, label=""];
61->60 [style = bold, label=""];
9->53 [style = solid, label="worker"];
35->37 [style = solid, label="taskConfig"];
68->5 [style = bold, label=""];
9->63 [style = solid, label="worker"];
8->2 [style = bold, label=""];
38->7 [style = bold, label=""];
60->57 [style = bold, label=""];
42->40 [style = bold, label=""];
12->67 [style = bold, label=""];
12->19 [style = bold, label=""];
21->48 [style = bold, label=""];
17->11 [style = bold, label=""];
39->15 [style = bold, label=""];
49->58 [style = bold, label=""];
34->19 [style = solid, label="origProps"];
34->50 [style = solid, label="origProps"];
54->50 [style = bold, label=""];
31->14 [style = bold, label=""];
9->10 [style = bold, label=""];
22->48 [style = dashed, label="0"];
56->49 [style = bold, label=""];
29->56 [style = bold, label=""];
7->8 [style = bold, label=""];
4->16 [style = bold, label=""];
9->12 [style = solid, label="worker"];
34->6 [style = bold, label=""];
67->65 [style = bold, label=""];
35->43 [style = bold, label=""];
9->23 [style = solid, label="worker"];
26->33 [style = bold, label=""];
40->18 [style = bold, label=""];
10->44 [style = bold, label=""];
21->47 [style = bold, label=""];
58->21 [style = bold, label=""];
43->36 [style = bold, label=""];
24->9 [style = bold, label=""];
34->35 [style = solid, label="origProps"];
51->26 [style = bold, label=""];
23->3 [style = bold, label=""];
44->12 [style = bold, label=""];
14->38 [style = bold, label=""];
25->29 [style = bold, label=""];
36->37 [style = bold, label=""];
46->26 [style = bold, label=""];
65->64 [style = bold, label=""];
0->13 [style = bold, label=""];
59->63 [style = bold, label=""];
15->27 [style = bold, label=""];
9->45 [style = solid, label="worker"];
28->24 [style = bold, label=""];
22->34 [style = bold, label=""];
27->1 [style = bold, label=""];
11->42 [style = bold, label=""];
30->5 [style = bold, label=""];
2->30 [style = bold, label=""];
16->31 [style = bold, label=""];
3->45 [style = bold, label=""];
6->35 [style = bold, label=""];
33->25 [style = bold, label=""];
20->26 [style = bold, label=""];
55->54 [style = bold, label=""];
53->52 [style = bold, label=""];
}
