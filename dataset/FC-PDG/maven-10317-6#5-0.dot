digraph {
10 [style = filled, label = "assertEquals(\"bar two\",request.getSystemProperties().getProperty(\"foo2\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cli.properties(request)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testMVNConfigurationFunkyArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testMVNConfigurationFunkyArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "System.setProperty(MavenCli.MULTIMODULE_PROJECT_DIRECTORY,new File(\"src/test/projects/mavenConfigProperties\").getCanonicalPath())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"&x=y<>\",request.getSystemProperties().getProperty(\"test.prop\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "CliRequest request = new CliRequest(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@194a321,null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"8.2.0\",revision)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testMVNConfigurationThreadCanBeOverwrittenViaCommandLine['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String revision = System.getProperty(\"revision\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cli.initialize(request)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"bar \",request.getSystemProperties().getProperty(\"foo\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cli.cli(request)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"-Dpom.xml\",request.getCommandLine().getOptionValue(CLIManager.ALTERNATE_POM_FILE))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"5\",request.commandLine.getOptionValue(CLIManager.THREADS))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
14->9 [style = bold, label=""];
4->3 [style = solid, label="request"];
7->5 [style = bold, label=""];
4->0 [style = solid, label="request"];
4->2 [style = solid, label="request"];
6->7 [style = bold, label=""];
0->13 [style = bold, label=""];
10->1 [style = bold, label=""];
12->9 [style = bold, label=""];
6->7 [style = solid, label="revision"];
2->13 [style = dashed, label="0"];
2->6 [style = bold, label=""];
3->0 [style = bold, label=""];
9->4 [style = bold, label=""];
1->11 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
10->11 [style = bold, label=""];
}
