digraph {
38 [style = filled, label = "Socket secureClientSocket = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "serverThread.start()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "{forceClose(socket)serverThread.shutdown(TIMEOUT)}@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "handshakeCompletedLock@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "serverThread.start()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Socket socket = connectWithoutSSL()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "socket.getOutputStream().flush()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(handshakeCompleted)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testTLSDetectionNonBlockingStrictServerIdleClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Thread.sleep(TIMEOUT / 2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT,0,2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "socket.getOutputStream().flush()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "testConnectWithoutSSLToNonStrictServerPartialWrite['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Socket badClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int bytesRead = socket.getInputStream().read(buf,0,buf.length)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "!handshakeCompleted@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "socket.getOutputStream().flush()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT,2,DATA_FROM_CLIENT.length - 2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "serverThread.start()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testConnectWithoutSSLToNonStrictServerPartialWrite['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "{forceClose(badClientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->4 [style = solid, label="buf"];
28->31 [style = dotted, label="true"];
4->14 [style = bold, label=""];
27->38 [style = bold, label=""];
32->37 [style = bold, label=""];
0->4 [style = solid, label="buf"];
10->39 [style = dashed, label="0"];
15->21 [style = bold, label=""];
37->30 [style = bold, label=""];
12->3 [style = solid, label="buf"];
15->24 [style = dotted, label="true"];
2->20 [style = solid, label="socket"];
7->1 [style = solid, label="socket"];
37->26 [style = solid, label="secureClientSocket"];
4->14 [style = solid, label="bytesRead"];
1->20 [style = bold, label=""];
36->32 [style = bold, label=""];
34->31 [style = bold, label=""];
14->28 [style = bold, label=""];
31->29 [style = bold, label=""];
24->21 [style = solid, label="paramIndex"];
3->0 [style = solid, label="bytesRead"];
19->2 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
25->14 [style = bold, label=""];
15->16 [style = dotted, label="true"];
15->22 [style = dotted, label="true"];
10->6 [style = bold, label=""];
14->1 [style = bold, label=""];
3->0 [style = bold, label=""];
39->33 [style = bold, label=""];
28->41 [style = bold, label=""];
29->26 [style = bold, label=""];
32->26 [style = solid, label="badClientSocket"];
33->14 [style = solid, label="buf"];
17->7 [style = bold, label=""];
33->0 [style = bold, label=""];
0->18 [style = solid, label="buf"];
41->34 [style = dotted, label="true"];
18->1 [style = bold, label=""];
0->4 [style = bold, label=""];
0->25 [style = bold, label=""];
7->2 [style = bold, label=""];
13->7 [style = bold, label=""];
40->27 [style = bold, label=""];
16->21 [style = solid, label="certKeyType"];
11->13 [style = bold, label=""];
33->0 [style = solid, label="buf"];
8->9 [style = bold, label=""];
0->25 [style = solid, label="bytesRead"];
30->39 [style = bold, label=""];
14->18 [style = bold, label=""];
41->31 [style = bold, label=""];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
35->36 [style = bold, label=""];
15->23 [style = dotted, label="true"];
3->0 [style = dashed, label="0"];
38->35 [style = bold, label=""];
7->19 [style = bold, label=""];
21->17 [style = bold, label=""];
41->34 [style = bold, label=""];
23->21 [style = solid, label="caKeyType"];
22->21 [style = solid, label="hostnameVerification"];
28->41 [style = dotted, label="true"];
2->8 [style = bold, label=""];
6->12 [style = bold, label=""];
}
