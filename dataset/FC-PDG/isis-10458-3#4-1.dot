digraph {
5 [style = filled, label = "when_null['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assert.assertThat(x.size(),is(0))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when_none['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<String> x = isisInteractionFilter.lookupAndParsePassThru(mockFilterConfig)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "when_null['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<String> x = isisSessionFilter.lookupAndParsePassThru(mockFilterConfig)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.checking(new Expectations(){})@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = dashed, label="0"];
5->2 [style = bold, label=""];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
2->4 [style = bold, label=""];
2->1 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
}
