digraph {
15 [style = filled, label = "files++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 25000000@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "SSTableDeletingTask.waitForDeletions()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 2500000@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "SSTableReader s = writeFile(cfs,400)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SSTableRewriter.overrideOpenInterval(10000000)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "validateCFS(cfs)@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cfs.truncateBlocking()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(cfs.getSSTables().size(),files)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cfs.disableAutoCompaction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(files,sstables.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<SSTableReader> sstables@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sstables = rewriter.finish()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "SSTableDeletingTask.waitForDeletions()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SSTableRewriter.overrideOpenInterval(1000000)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "int files = 1@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testNumberOfFiles_truncate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testSmallFiles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "scanner.hasNext()@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sstables = rewriter.finish()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rewriter.append(new LazilyCompactedRow(controller,Arrays.asList(scanner.next())))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "validateCFS(cfs)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSmallFiles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cfs.addSSTable(s)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFileCounts(s.descriptor.directory.list(),0,0)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->12 [style = dotted, label="true"];
7->32 [style = bold, label=""];
1->5 [style = solid, label="files"];
28->13 [style = solid, label="s"];
11->17 [style = solid, label="cfs"];
32->21 [style = bold, label=""];
3->28 [style = dashed, label="0"];
10->28 [style = bold, label=""];
32->15 [style = dotted, label="true"];
9->11 [style = bold, label=""];
1->16 [style = solid, label="files"];
12->23 [style = dotted, label="true"];
21->27 [style = bold, label=""];
7->12 [style = bold, label=""];
1->8 [style = solid, label="files"];
12->21 [style = bold, label=""];
2->1 [style = bold, label=""];
12->8 [style = dotted, label="true"];
24->9 [style = bold, label=""];
12->32 [style = dashed, label="0"];
0->2 [style = bold, label=""];
29->9 [style = bold, label=""];
1->23 [style = solid, label="files"];
23->15 [style = bold, label=""];
15->8 [style = solid, label="files"];
22->21 [style = bold, label=""];
12->15 [style = dotted, label="true"];
20->31 [style = dashed, label="0"];
10->3 [style = bold, label=""];
19->10 [style = bold, label=""];
14->17 [style = bold, label=""];
28->13 [style = bold, label=""];
31->2 [style = bold, label=""];
8->23 [style = solid, label="files"];
11->28 [style = solid, label="cfs"];
11->25 [style = solid, label="cfs"];
21->32 [style = dotted, label="true"];
11->19 [style = bold, label=""];
26->6 [style = bold, label=""];
32->30 [style = bold, label=""];
3->13 [style = solid, label="s"];
14->33 [style = bold, label=""];
11->3 [style = solid, label="cfs"];
1->22 [style = bold, label=""];
20->2 [style = bold, label=""];
6->14 [style = bold, label=""];
11->22 [style = solid, label="cfs"];
1->15 [style = solid, label="files"];
8->16 [style = solid, label="files"];
32->8 [style = dotted, label="true"];
5->6 [style = bold, label=""];
3->0 [style = solid, label="s"];
33->25 [style = bold, label=""];
21->7 [style = dotted, label="true"];
32->30 [style = dotted, label="true"];
18->9 [style = bold, label=""];
30->15 [style = bold, label=""];
3->13 [style = bold, label=""];
8->21 [style = bold, label=""];
21->7 [style = bold, label=""];
16->5 [style = bold, label=""];
0->20 [style = bold, label=""];
28->0 [style = solid, label="s"];
12->23 [style = bold, label=""];
11->15 [style = solid, label="cfs"];
8->5 [style = solid, label="files"];
11->19 [style = solid, label="cfs"];
15->8 [style = bold, label=""];
11->30 [style = solid, label="cfs"];
4->16 [style = bold, label=""];
0->31 [style = bold, label=""];
13->0 [style = bold, label=""];
21->4 [style = bold, label=""];
27->26 [style = bold, label=""];
}
