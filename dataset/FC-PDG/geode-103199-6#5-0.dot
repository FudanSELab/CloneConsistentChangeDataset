digraph {
31 [style = filled, label = "asyncEventQueue = new ParallelAsyncEventQueueImpl(cache,statsFactory,statisticsClock,attrs)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "cache = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "attrs.setId(\"sender\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "LocalRegion region = mock()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(cache.getInternalDistributedSystem()).thenReturn(system)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(region.get(any())).thenReturn(1)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "attrs = new GatewaySenderAttributes()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DistributedLockService distributedLockService = mock()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "when(distributionManager.getDistributedSystemId()).thenReturn(-1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(cache.getGatewaySenderLockService()).thenReturn(distributedLockService)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(system.getDistributionManager()).thenReturn(distributionManager)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "when(cache.getCancelCriterion()).thenReturn(cancelCriterion)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "when(distributedLockService.lock(any(),anyLong(),anyLong())).thenReturn(true)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Statistics stats = mock()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "attrs.setParallel(true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TypeRegistry pdxRegistryMock = mock()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "when(region.containsKey(any())).thenReturn(true)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(cache.getPdxRegistry()).thenReturn(pdxRegistryMock)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(system.createAtomicStatistics(any(),any())).thenReturn(stats)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "when(cache.getDistributedSystem()).thenReturn(system)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "CancelCriterion cancelCriterion = mock()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "gatewaysender = new ParallelGatewaySenderImpl(cache,statisticsClock,attrs)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "statsFactory = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "attrs.setId(\"AsyncEventQueue_\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "when(cancelCriterion.isCancelInProgress()).thenReturn(false)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "InternalDistributedSystem system = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(cache.getRegion(any())).thenReturn(region)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ClusterDistributionManager distributionManager = mock()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "statisticsClock = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
22->26 [style = bold, label=""];
18->31 [style = bold, label=""];
11->8 [style = solid, label="distributionManager"];
3->6 [style = solid, label="region"];
7->15 [style = solid, label="distributedLockService"];
24->19 [style = bold, label=""];
0->5 [style = solid, label="statisticsClock"];
4->25 [style = bold, label=""];
26->5 [style = solid, label="cache"];
28->31 [style = solid, label="statsFactory"];
2->21 [style = solid, label="system"];
0->31 [style = solid, label="statisticsClock"];
1->20 [style = bold, label=""];
3->6 [style = bold, label=""];
19->11 [style = bold, label=""];
21->24 [style = bold, label=""];
26->31 [style = solid, label="cache"];
16->17 [style = bold, label=""];
15->3 [style = bold, label=""];
25->2 [style = bold, label=""];
13->16 [style = bold, label=""];
28->14 [style = bold, label=""];
2->13 [style = bold, label=""];
29->26 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
26->0 [style = bold, label=""];
0->14 [style = bold, label=""];
8->20 [style = bold, label=""];
4->30 [style = bold, label=""];
21->11 [style = bold, label=""];
10->23 [style = bold, label=""];
9->15 [style = bold, label=""];
25->30 [style = dashed, label="0"];
18->5 [style = bold, label=""];
6->10 [style = bold, label=""];
14->31 [style = solid, label="attrs"];
12->18 [style = bold, label=""];
12->18 [style = solid, label="pdxRegistryMock"];
5->31 [style = dashed, label="0"];
11->8 [style = bold, label=""];
2->17 [style = solid, label="system"];
23->12 [style = bold, label=""];
16->1 [style = solid, label="stats"];
14->5 [style = solid, label="attrs"];
20->7 [style = bold, label=""];
30->2 [style = bold, label=""];
13->24 [style = solid, label="cancelCriterion"];
17->21 [style = bold, label=""];
0->28 [style = bold, label=""];
14->4 [style = bold, label=""];
27->26 [style = bold, label=""];
}
