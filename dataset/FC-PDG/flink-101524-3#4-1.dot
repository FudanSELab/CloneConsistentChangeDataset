digraph {
3 [style = filled, label = "final DataStream<String> srcTwo = env.fromCollection(expected.values()).assignTimestampsAndWatermarks(new CustomWmEmitter<String>(){@Override public long extractTimestamp(String element,long previousElementTimestamp){return Long.parseLong(element.split(\":\")(1()}})@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expected.put(3L,\"test:3\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final BroadcastStream<String> broadcast = srcTwo.broadcast(utterDescriptor)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expected.put(1L,\"test:1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testBroadcastTranslation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expected.put(2L,\"test:2\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected.put(0L,\"test:0\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final DataStream<Long> srcOne = env.generateSequence(0L,5L).assignTimestampsAndWatermarks(new CustomWmEmitter<Long>(){@Override public long extractTimestamp(Long element,long previousElementTimestamp){return element}})@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "env.execute()@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final DataStream<String> output = srcOne.connect(broadcast).process(new TestBroadcastProcessFunction())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Map<Long,String> expected = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testKeyedWithBroadcastTranslation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "expected.put(4L,\"test:4\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "output.addSink(new TestSink(expected.size())).setParallelism(1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "output.addSink(new TestSink(0)).setParallelism(1)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final MapStateDescriptor<Long,String> utterDescriptor = new MapStateDescriptor<>(\"broadcast-state\",BasicTypeInfo.LONG_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final DataStream<String> output = srcOne.connect(broadcast).process(new TestKeyedBroadcastProcessFunction(100000L,expected))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testKeyedWithBroadcastTranslation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expected.put(5L,\"test:5\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = solid, label="utterDescriptor"];
6->14 [style = solid, label="expected"];
16->11 [style = bold, label=""];
8->15 [style = bold, label=""];
0->13 [style = bold, label=""];
4->6 [style = bold, label=""];
2->1 [style = bold, label=""];
19->20 [style = bold, label=""];
8->20 [style = dashed, label="0"];
11->12 [style = bold, label=""];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
6->2 [style = bold, label=""];
3->9 [style = bold, label=""];
12->13 [style = bold, label=""];
18->4 [style = bold, label=""];
13->3 [style = bold, label=""];
5->4 [style = bold, label=""];
7->16 [style = bold, label=""];
9->14 [style = bold, label=""];
9->19 [style = bold, label=""];
14->19 [style = dashed, label="0"];
14->8 [style = bold, label=""];
1->10 [style = bold, label=""];
20->15 [style = bold, label=""];
17->4 [style = bold, label=""];
}
