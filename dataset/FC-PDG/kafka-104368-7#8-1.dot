digraph {
3 [style = filled, label = "Record record = records.next()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RecordBatch batch = batches.next()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(numberOfBatches,countBatches)@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testBatchWriteReadSnapshot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "snapshot.append(records)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testBufferWriteReadSnapshot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "batches.hasNext()@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(batches * batchSize,countRecords)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "int countBatches = 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(batches,countBatches)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testBatchWriteReadSnapshot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int batches = 10@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int batchSize = 3@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "countBatches += 1@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Iterator<Record> records = batch.streamingIterator(new GrowableBufferSupplier())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "snapshot.append(buildRecords(buffers))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "snapshot.freeze()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "OffsetAndEpoch offsetAndEpoch = new OffsetAndEpoch(10L,3)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(record.hasValue())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(bufferSize,record.value().remaining())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "int numberOfBatches = 10@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(numberOfBatches * batchSize,countRecords)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "int bufferSize = 256@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(record.hasKey())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < numberOfBatches@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Iterator<RecordBatch> batches = Utils.covariantCast(snapshot.records().batchIterator())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int countBatches = 0@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(bufferSize,record.value().remaining())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "int expectedSize = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Iterator<Record> records = batch.streamingIterator(new GrowableBufferSupplier())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(batches * batchSize,countRecords)@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i < batches@@@10@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(record.hasValue())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertTrue(Files.exists(Snapshots.snapshotPath(tempDir,offsetAndEpoch)))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "expectedSize += records.sizeInBytes()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(expectedSize,Files.size(Snapshots.snapshotPath(tempDir,offsetAndEpoch)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(batches,countBatches)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "countRecords += 1@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int countRecords = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ByteBuffer(( buffers = IntStream.range(0,batchSize).mapToObj(null).toArray(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "records.hasNext()@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "snapshot.freeze()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "UnalignedMemoryRecords records = buildRecords(buffers)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int countRecords = 0@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(expectedSize,snapshot.sizeInBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
33->44 [style = solid, label="records"];
25->1 [style = bold, label=""];
9->21 [style = solid, label="batches"];
29->2 [style = dotted, label="true"];
1->28 [style = solid, label="countBatches"];
5->19 [style = dotted, label="true"];
20->0 [style = dotted, label="true"];
12->36 [style = solid, label="offsetAndEpoch"];
9->42 [style = solid, label="batches"];
9->35 [style = bold, label=""];
1->3 [style = dotted, label="true"];
37->5 [style = bold, label=""];
19->1 [style = bold, label=""];
9->39 [style = solid, label="batches"];
12->10 [style = bold, label=""];
29->2 [style = bold, label=""];
29->13 [style = dotted, label="true"];
26->32 [style = solid, label="numberOfBatches"];
20->43 [style = dotted, label="true"];
15->20 [style = bold, label=""];
26->15 [style = bold, label=""];
43->0 [style = bold, label=""];
20->13 [style = dotted, label="true"];
23->12 [style = bold, label=""];
33->44 [style = bold, label=""];
16->9 [style = bold, label=""];
40->37 [style = bold, label=""];
45->41 [style = bold, label=""];
31->25 [style = dotted, label="true"];
22->32 [style = solid, label="countRecords"];
5->39 [style = bold, label=""];
26->29 [style = solid, label="numberOfBatches"];
27->30 [style = bold, label=""];
43->38 [style = solid, label="expectedSize"];
16->26 [style = bold, label=""];
31->5 [style = dotted, label="true"];
0->29 [style = bold, label=""];
20->38 [style = bold, label=""];
5->3 [style = dotted, label="true"];
8->28 [style = dashed, label="0"];
2->13 [style = solid, label="buffers"];
15->29 [style = solid, label="i"];
16->21 [style = solid, label="batchSize"];
20->29 [style = dashed, label="0"];
21->32 [style = dashed, label="0"];
1->18 [style = dotted, label="true"];
5->1 [style = bold, label=""];
9->8 [style = solid, label="batches"];
3->7 [style = bold, label=""];
2->33 [style = solid, label="buffers"];
5->7 [style = dotted, label="true"];
43->45 [style = solid, label="expectedSize"];
34->36 [style = bold, label=""];
2->33 [style = bold, label=""];
13->33 [style = dashed, label="0"];
0->20 [style = bold, label=""];
5->30 [style = dotted, label="true"];
31->28 [style = bold, label=""];
22->14 [style = bold, label=""];
39->42 [style = bold, label=""];
15->29 [style = bold, label=""];
13->0 [style = bold, label=""];
14->4 [style = bold, label=""];
29->0 [style = dotted, label="true"];
29->17 [style = bold, label=""];
31->25 [style = bold, label=""];
1->8 [style = bold, label=""];
10->30 [style = solid, label="bufferSize"];
35->15 [style = bold, label=""];
0->20 [style = solid, label="i"];
10->19 [style = solid, label="bufferSize"];
14->42 [style = solid, label="countRecords"];
35->38 [style = solid, label="expectedSize"];
1->19 [style = dotted, label="true"];
31->18 [style = dotted, label="true"];
28->32 [style = bold, label=""];
20->44 [style = dotted, label="true"];
20->33 [style = dotted, label="true"];
10->16 [style = bold, label=""];
24->31 [style = bold, label=""];
30->5 [style = bold, label=""];
31->1 [style = dotted, label="true"];
9->26 [style = dashed, label="0"];
5->27 [style = dotted, label="true"];
38->34 [style = bold, label=""];
11->22 [style = bold, label=""];
4->1 [style = bold, label=""];
16->42 [style = solid, label="batchSize"];
19->40 [style = bold, label=""];
15->20 [style = solid, label="i"];
7->19 [style = bold, label=""];
1->39 [style = solid, label="countBatches"];
14->8 [style = solid, label="countBatches"];
41->14 [style = bold, label=""];
5->37 [style = dotted, label="true"];
9->20 [style = solid, label="batches"];
12->45 [style = solid, label="offsetAndEpoch"];
6->12 [style = bold, label=""];
16->32 [style = solid, label="batchSize"];
20->17 [style = bold, label=""];
5->40 [style = dotted, label="true"];
46->12 [style = bold, label=""];
26->28 [style = solid, label="numberOfBatches"];
7->42 [style = solid, label="countRecords"];
1->18 [style = bold, label=""];
15->0 [style = solid, label="i"];
11->28 [style = solid, label="countBatches"];
44->43 [style = bold, label=""];
14->1 [style = bold, label=""];
2->13 [style = bold, label=""];
20->2 [style = bold, label=""];
1->7 [style = dotted, label="true"];
0->29 [style = solid, label="i"];
5->21 [style = solid, label="countRecords"];
22->21 [style = solid, label="countRecords"];
5->31 [style = bold, label=""];
9->15 [style = bold, label=""];
18->5 [style = bold, label=""];
19->27 [style = bold, label=""];
8->21 [style = bold, label=""];
20->2 [style = dotted, label="true"];
1->14 [style = bold, label=""];
22->24 [style = bold, label=""];
36->45 [style = bold, label=""];
7->32 [style = solid, label="countRecords"];
10->37 [style = solid, label="bufferSize"];
1->5 [style = dotted, label="true"];
35->45 [style = solid, label="expectedSize"];
17->11 [style = bold, label=""];
}
