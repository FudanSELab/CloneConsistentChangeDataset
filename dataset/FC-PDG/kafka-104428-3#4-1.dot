digraph {
16 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).withUnknownLeader(epoch).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "quorumStateStore.writeElectionState(ElectionState.withElectedLeader(epoch,electedLeaderId,voters))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "deliverRequest(voteRequest(epoch,otherNodeId,epoch - 1,1))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "quorumStateStore.writeElectionState(ElectionState.withUnknownLeader(epoch,voters))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "int electedLeaderId = 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "context.client.poll()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "context.assertVotedCandidate(epoch,otherNodeId)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testHandleVoteRequestAsFollowerWithElectedLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "KafkaRaftClient client = buildClient(voters)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(ElectionState.withVotedCandidate(epoch,otherNodeId,voters),quorumStateStore.readElectionState())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId,electedLeaderId)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHandleValidVoteRequestAsFollower['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHandleValidVoteRequestAsFollower['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "client.poll()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int epoch = 2@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertSentVoteResponse(Errors.NONE,epoch,OptionalInt.of(electedLeaderId),false)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(ElectionState.withElectedLeader(epoch,electedLeaderId,voters),quorumStateStore.readElectionState())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int localId = 0@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "context.assertSentVoteResponse(Errors.NONE,epoch,OptionalInt.empty(),true)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "context.deliverRequest(context.voteRequest(epoch,otherNodeId,epoch - 1,1))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2->17 [style = bold, label=""];
13->10 [style = bold, label=""];
1->4 [style = bold, label=""];
17->18 [style = solid, label="electedLeaderId"];
0->20 [style = solid, label="epoch"];
5->6 [style = solid, label="voters"];
15->14 [style = bold, label=""];
3->21 [style = dashed, label="0"];
2->5 [style = solid, label="otherNodeId"];
2->11 [style = solid, label="otherNodeId"];
2->6 [style = solid, label="otherNodeId"];
18->22 [style = solid, label="voters"];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
3->6 [style = bold, label=""];
7->0 [style = bold, label=""];
0->1 [style = solid, label="epoch"];
0->12 [style = solid, label="epoch"];
0->9 [style = solid, label="epoch"];
0->8 [style = solid, label="epoch"];
17->21 [style = solid, label="electedLeaderId"];
0->3 [style = solid, label="epoch"];
6->22 [style = dashed, label="0"];
5->1 [style = solid, label="voters"];
19->0 [style = bold, label=""];
17->20 [style = solid, label="electedLeaderId"];
2->12 [style = solid, label="otherNodeId"];
5->16 [style = bold, label=""];
0->6 [style = solid, label="epoch"];
5->4 [style = solid, label="voters"];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
20->8 [style = bold, label=""];
9->14 [style = dashed, label="0"];
2->9 [style = solid, label="otherNodeId"];
18->20 [style = solid, label="voters"];
21->22 [style = bold, label=""];
0->14 [style = solid, label="epoch"];
10->5 [style = solid, label="localId"];
1->16 [style = dashed, label="0"];
10->0 [style = bold, label=""];
8->9 [style = bold, label=""];
2->18 [style = solid, label="otherNodeId"];
0->21 [style = solid, label="epoch"];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
3->21 [style = bold, label=""];
17->22 [style = solid, label="electedLeaderId"];
0->11 [style = solid, label="epoch"];
2->8 [style = solid, label="otherNodeId"];
14->11 [style = bold, label=""];
16->12 [style = bold, label=""];
18->8 [style = solid, label="voters"];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
0->22 [style = solid, label="epoch"];
}
