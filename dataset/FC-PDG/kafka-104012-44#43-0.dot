digraph {
8 [style = filled, label = "assertEquals(getRevoked(assigned,assigned),rebalanceListener.revoked)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<TopicPartition> owned = Collections.emptyList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(getRevoked(oldAssigned,newAssigned),rebalanceListener.revoked)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(getAdded(oldAssigned,newAssigned),rebalanceListener.assigned)@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Collection<TopicPartition> added = getAdded(assigned,assigned)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(getAdded(assigned,assigned),rebalanceListener.assigned)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topic1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "rebalanceListener.revoked = null@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssigned))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "joinAsFollowerAndReceiveAssignment(\"consumer\",coordinator,assigned)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(getAdded(owned,oldAssigned),rebalanceListener.assigned)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(getAdded(owned,assigned),rebalanceListener.assigned)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(toSet(newAssigned),subscriptions.assignedPartitions())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(revoked.isEmpty()? 0: 1,rebalanceListener.revokedCount)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "client.prepareResponse(syncGroupResponse(assigned,Errors.NONE))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "client.prepareResponse(syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topic1,otherTopic)),rebalanceListener)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(oldAssigned,Errors.NONE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final List<TopicPartition> oldAssigned = Arrays.asList(t1p)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testRejoinGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(toSet(updatedSubscription),subscriptions.subscription())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(assigned,assigned)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(getRevoked(owned,oldAssigned),rebalanceListener.revoked)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "List<TopicPartition> newAssigned = Arrays.asList(t1p,t2p)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "coordinator.joinGroupIfNeeded(time.timer(Long.MAX_VALUE))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<TopicPartition> assigned = Arrays.asList(t1p)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "subscriptions.subscribe(singleton(topic1),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rebalanceListener.assigned = null@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topic1,topic2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(getRevoked(owned,assigned),rebalanceListener.revoked)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testRejoinGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "coordinator.maybeUpdateSubscriptionMetadata()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->42 [style = dashed, label="0"];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
9->11 [style = bold, label=""];
25->22 [style = bold, label=""];
38->44 [style = bold, label=""];
17->50 [style = dashed, label="0"];
49->48 [style = bold, label=""];
59->31 [style = bold, label=""];
10->17 [style = bold, label=""];
29->34 [style = bold, label=""];
40->38 [style = bold, label=""];
7->14 [style = solid, label="assigned"];
11->36 [style = bold, label=""];
13->1 [style = bold, label=""];
7->17 [style = solid, label="assigned"];
3->18 [style = bold, label=""];
28->21 [style = bold, label=""];
11->1 [style = solid, label="owned"];
39->51 [style = bold, label=""];
36->41 [style = solid, label="oldAssigned"];
36->29 [style = solid, label="oldAssigned"];
2->60 [style = dashed, label="0"];
16->14 [style = bold, label=""];
58->59 [style = bold, label=""];
11->29 [style = solid, label="owned"];
17->22 [style = dashed, label="0"];
62->46 [style = bold, label=""];
34->30 [style = solid, label="newAssigned"];
11->42 [style = solid, label="owned"];
57->54 [style = solid, label="consumerId"];
60->62 [style = bold, label=""];
34->54 [style = bold, label=""];
7->0 [style = bold, label=""];
41->49 [style = bold, label=""];
36->39 [style = solid, label="oldAssigned"];
21->25 [style = bold, label=""];
7->24 [style = solid, label="assigned"];
26->6 [style = bold, label=""];
16->43 [style = dashed, label="0"];
36->42 [style = solid, label="oldAssigned"];
35->57 [style = bold, label=""];
24->20 [style = bold, label=""];
19->13 [style = bold, label=""];
48->55 [style = bold, label=""];
57->58 [style = solid, label="consumerId"];
31->41 [style = bold, label=""];
53->33 [style = bold, label=""];
45->56 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
51->42 [style = bold, label=""];
18->7 [style = bold, label=""];
44->45 [style = bold, label=""];
32->50 [style = bold, label=""];
27->26 [style = bold, label=""];
4->9 [style = bold, label=""];
0->16 [style = bold, label=""];
33->52 [style = bold, label=""];
52->61 [style = bold, label=""];
30->43 [style = bold, label=""];
1->26 [style = dashed, label="0"];
42->47 [style = bold, label=""];
20->22 [style = solid, label="added"];
34->45 [style = solid, label="newAssigned"];
55->39 [style = bold, label=""];
7->8 [style = solid, label="assigned"];
5->19 [style = solid, label="assigned"];
61->31 [style = solid, label="initialSubscription"];
57->11 [style = bold, label=""];
47->29 [style = bold, label=""];
11->5 [style = bold, label=""];
1->6 [style = bold, label=""];
13->27 [style = dashed, label="0"];
8->63 [style = dashed, label="0"];
63->32 [style = bold, label=""];
36->63 [style = solid, label="oldAssigned"];
12->8 [style = bold, label=""];
36->60 [style = bold, label=""];
36->50 [style = solid, label="oldAssigned"];
56->63 [style = bold, label=""];
57->30 [style = solid, label="consumerId"];
3->29 [style = dashed, label="0"];
2->19 [style = bold, label=""];
57->43 [style = solid, label="consumerId"];
7->22 [style = solid, label="assigned"];
20->28 [style = bold, label=""];
46->53 [style = bold, label=""];
7->20 [style = solid, label="assigned"];
34->63 [style = solid, label="newAssigned"];
8->20 [style = dashed, label="0"];
9->57 [style = dashed, label="0"];
54->30 [style = bold, label=""];
57->31 [style = solid, label="consumerId"];
43->37 [style = bold, label=""];
61->58 [style = bold, label=""];
36->58 [style = solid, label="oldAssigned"];
5->36 [style = dashed, label="0"];
18->8 [style = solid, label="revoked"];
59->44 [style = solid, label="updatedSubscription"];
5->1 [style = solid, label="assigned"];
5->2 [style = bold, label=""];
5->3 [style = solid, label="assigned"];
34->50 [style = solid, label="newAssigned"];
11->3 [style = solid, label="owned"];
19->27 [style = bold, label=""];
15->24 [style = bold, label=""];
24->21 [style = solid, label="revoked"];
54->43 [style = solid, label="updatedSubscriptions"];
9->0 [style = solid, label="otherTopic"];
57->61 [style = solid, label="consumerId"];
34->37 [style = solid, label="newAssigned"];
23->9 [style = bold, label=""];
37->40 [style = bold, label=""];
}
