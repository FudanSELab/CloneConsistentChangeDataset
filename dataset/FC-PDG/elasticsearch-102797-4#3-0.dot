digraph {
10 [style = filled, label = "mapper = mapperService.merge(\"type\",new CompressedXContent(mapping2),MergeReason.MAPPING_UPDATE)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(mapping2,mapper.mappingSource().toString())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testDateFormatters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(mapping,mapper.mappingSource().toString())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDateDetection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "mapper = mapperService.merge(\"type\",new CompressedXContent(mapping3),MergeReason.MAPPING_UPDATE)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String mapping2 = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").field(\"dynamic_date_formats\",Arrays.asList(\"yyyy-MM-dd\")).endObject().endObject())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "String mapping2 = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").field(\"date_detection\",false).endObject().endObject())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").field(\"dynamic_date_formats\",Arrays.asList(\"YYYY-MM-dd\")).endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testDateFormatters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(mapping3,mapper.mappingSource().toString())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").field(\"date_detection\",true).endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(mapping2,mapper.mappingSource().toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DocumentMapper mapper = mapperService.merge(\"type\",new CompressedXContent(mapping),MergeReason.MAPPING_UPDATE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(mapping,mapper.mappingSource().toString())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MapperService mapperService = createIndex(\"test\").mapperService()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String mapping3 = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String mapping3 = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").field(\"dynamic_date_formats\",Arrays.asList()).endObject().endObject())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
10->18 [style = bold, label=""];
6->7 [style = solid, label="mapping"];
13->16 [style = solid, label="mapping2"];
6->8 [style = solid, label="mapping"];
13->10 [style = solid, label="mapping2"];
2->3 [style = bold, label=""];
12->7 [style = solid, label="mapping"];
0->16 [style = dashed, label="0"];
11->12 [style = bold, label=""];
3->13 [style = dashed, label="0"];
9->0 [style = solid, label="mapping3"];
4->7 [style = bold, label=""];
13->18 [style = solid, label="mapping2"];
15->7 [style = solid, label="mapping"];
2->13 [style = bold, label=""];
12->8 [style = solid, label="mapping"];
6->12 [style = dashed, label="0"];
5->16 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
1->6 [style = bold, label=""];
9->14 [style = dashed, label="0"];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
12->4 [style = bold, label=""];
6->15 [style = dashed, label="0"];
7->2 [style = bold, label=""];
14->5 [style = solid, label="mapping3"];
15->4 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
15->2 [style = solid, label="mapping"];
9->5 [style = bold, label=""];
8->18 [style = dashed, label="0"];
12->2 [style = solid, label="mapping"];
3->10 [style = solid, label="mapping2"];
6->2 [style = solid, label="mapping"];
9->5 [style = solid, label="mapping3"];
18->14 [style = bold, label=""];
14->5 [style = bold, label=""];
}
