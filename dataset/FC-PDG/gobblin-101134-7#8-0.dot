digraph {
42 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_DESTINATION_IDENTIFIER_KEY,TEST_SINK_NAME)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "flowProperties.put(\"param1\",\"value1\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "this.gitForPush = Git.cloneRepository().setURI(GIT_REMOTE_REPO_DIR).setDirectory(new File(GIT_CLONE_DIR)).call()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.SERVICE_DB_PASSWORD,mysql.getPassword())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_FLOWCOMPILER_CLASS_KEY,.getCanonicalName())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY,TEST_SOURCE_NAME)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".description\",\"StandaloneTestExecutor\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cleanUpDir(SERVICE_WORK_DIR)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY,\"testPassword\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".version\",FlowSpec.Builder.DEFAULT_VERSION)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.TOPOLOGYSPEC_STORE_DIR_KEY,TOPOLOGY_SPEC_STORE_DIR)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "serviceCoreProperties.put(\"zookeeper.connect\",testingServer.getConnectString())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "RepositoryCache.FileKey fileKey = RepositoryCache.FileKey.exact(new File(GIT_REMOTE_REPO_DIR),FS.DETECTED)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cleanUpDir(SPEC_STORE_PARENT_DIR)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "this.flowConfigClient = new FlowConfigV2Client(String.format(\"http://127.0.0.1:%s/\",this.gobblinServiceManager.getRestLiServerListeningURI().getPort()),transportClientProperties)@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "serviceCoreProperties.put(GitConfigMonitor.GIT_CONFIG_MONITOR_PREFIX + \".\" + ConfigurationKeys.GIT_MONITOR_REPO_DIR,GIT_LOCAL_REPO_DIR)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "serviceCoreProperties.put(GitConfigMonitor.GIT_CONFIG_MONITOR_PREFIX + \".\" + ConfigurationKeys.GIT_MONITOR_REPO_URI,GIT_REMOTE_REPO_DIR)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".specExecInstance.capabilities\",TEST_SOURCE_NAME + \":\" + TEST_SINK_NAME)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".specExecutorInstance\",\"org.apache.gobblin.service.InMemorySpecExecutor\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".uri\",\"gobblinExecutor\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "this.gobblinServiceManager = GobblinServiceManager.create(\"CoreService\",\"1\",ConfigUtils.propertiesToConfig(serviceCoreProperties),new Path(SERVICE_WORK_DIR))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "serviceReboot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "this.gobblinServiceManager.start()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "this.gobblinServiceManager.start()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ITestMetastoreDatabase testMetastoreDatabase = TestMetastoreDatabaseFactory.get()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "transportClientProperties.put(HttpClientFactory.HTTP_REQUEST_TIMEOUT,\"10000\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.gitForPush.push().setRemote(\"origin\").setRefSpecs(new RefSpec(\"master\")).call()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_FACTORY_CLASS_KEY,.getName())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "mysql = new MySQLContainer(\"mysql:\" + TestServiceDatabaseConfig.MysqlVersion)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "fileKey.open(false).create(true)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "serviceCoreProperties.put(FlowCatalog.FLOWSPEC_STORE_DIR_KEY,FLOW_SPEC_STORE_DIR)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_TOPOLOGY_NAMES_KEY,TEST_GOBBLIN_EXECUTOR_NAME)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_USER_KEY,\"testUser\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "this.flowConfigClient = new FlowConfigV2Client(String.format(\"http://127.0.0.1:%s/\",this.gobblinServiceManager.getRestLiServerListeningURI().getPort()),transportClientProperties)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "this.gobblinServiceManager.stop()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "serviceCoreProperties.put(GitConfigMonitor.GIT_CONFIG_MONITOR_PREFIX + \".\" + ConfigurationKeys.GIT_MONITOR_POLLING_INTERVAL,5)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_STATUS_MONITOR_ENABLED_KEY,false)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.SERVICE_DB_URL_KEY,mysql.getJdbcUrl())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_GIT_CONFIG_MONITOR_ENABLED_KEY,true)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.SERVICE_DB_USERNAME,mysql.getUsername())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "serviceCoreProperties.put(FsJobStatusRetriever.CONF_PREFIX + \".\" + ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY,JOB_STATUS_STATE_STORE_DIR)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "mysql.start()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testingServer = new TestingServer(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "this.gobblinServiceManager = GobblinServiceManager.create(\"CoreService\",\"1\",ConfigUtils.propertiesToConfig(serviceCoreProperties),new Path(SERVICE_WORK_DIR))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.gitForPush.commit().setMessage(\"First commit\").call()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_URL_KEY,testMetastoreDatabase.getJdbcUrl())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->19 [style = bold, label=""];
35->3 [style = bold, label=""];
47->43 [style = bold, label=""];
34->15 [style = bold, label=""];
26->21 [style = bold, label=""];
46->47 [style = bold, label=""];
13->0 [style = bold, label=""];
17->38 [style = bold, label=""];
7->16 [style = bold, label=""];
30->13 [style = bold, label=""];
38->37 [style = bold, label=""];
44->45 [style = bold, label=""];
16->36 [style = bold, label=""];
1->14 [style = bold, label=""];
31->32 [style = bold, label=""];
12->24 [style = bold, label=""];
19->34 [style = bold, label=""];
36->23 [style = bold, label=""];
21->2 [style = bold, label=""];
27->35 [style = bold, label=""];
11->7 [style = bold, label=""];
45->46 [style = bold, label=""];
37->39 [style = bold, label=""];
41->29 [style = bold, label=""];
40->41 [style = bold, label=""];
5->30 [style = bold, label=""];
9->17 [style = bold, label=""];
15->26 [style = bold, label=""];
29->31 [style = bold, label=""];
4->12 [style = bold, label=""];
6->5 [style = bold, label=""];
32->6 [style = bold, label=""];
2->27 [style = bold, label=""];
42->9 [style = bold, label=""];
25->8 [style = bold, label=""];
39->40 [style = bold, label=""];
24->25 [style = bold, label=""];
20->9 [style = bold, label=""];
28->11 [style = bold, label=""];
10->33 [style = bold, label=""];
3->28 [style = bold, label=""];
0->18 [style = bold, label=""];
17->29 [style = bold, label=""];
8->10 [style = bold, label=""];
18->4 [style = bold, label=""];
14->22 [style = bold, label=""];
33->1 [style = bold, label=""];
}
