digraph {
5 [style = filled, label = "assertEquals(\"(Bill works in Marketing, \" + \"Cedric works in null, \" + \"Eric works in Sales, \" + \"Fred works in Sales, \" + \"Janet works in Sales(\",s)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String s = Linq4j.asEnumerable(emps).concat(Linq4j.asEnumerable(badEmps)).join(Linq4j.asEnumerable(depts),EMP_DEPTNO_SELECTOR,DEPT_DEPTNO_SELECTOR,null).orderBy(Functions.identitySelector()).toList().toString()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "String s = Linq4j.asEnumerable(emps).concat(Linq4j.asEnumerable(badEmps)).join(Linq4j.asEnumerable(depts),EMP_DEPTNO_SELECTOR,DEPT_DEPTNO_SELECTOR,null,null,false,true).orderBy(Functions.identitySelector()).toList().toString()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testLeftJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"(Bill works in Marketing, \" + \"Eric works in Sales, \" + \"Fred works in Sales, \" + \"Janet works in Sales(\",s)@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String s = Linq4j.asEnumerable(emps).concat(Linq4j.asEnumerable(badEmps)).hashJoin(Linq4j.asEnumerable(depts),EMP_DEPTNO_SELECTOR,DEPT_DEPTNO_SELECTOR,null).orderBy(Functions.identitySelector()).toList().toString()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->3 [style = bold, label=""];
0->1 [style = solid, label="s"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
3->1 [style = solid, label="s"];
0->3 [style = dashed, label="0"];
1->5 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->1 [style = bold, label=""];
0->7 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->5 [style = solid, label="s"];
}
