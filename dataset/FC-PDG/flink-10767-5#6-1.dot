digraph {
19 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family2 ROW<col1 BYTES, col2 BYTES>,\" + \" rowkey INT\" + \") WITH (\" + \" 'connector' = 'hbase-1.4',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "TableEnvironment tEnv = TableEnvironment.create(batchSettings)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Table table = tEnv.sqlQuery(\"SELECT \" + \" toUTF8(h.family2.col1), \" + \" toLong(h.family2.col2) \" + \"FROM hTable AS h\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "testTableSourceReadAsByteArray['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tEnv.registerFunction(\"toUTF8\",new ToUTF8())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestBaseUtils.compareResultAsText(results,expected)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "TableEnvironment tEnv = createBatchTableEnv()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String expected = \"+I(Hello-1, 100(\" + \"+I(Hello-2, 200(\" + \"+I(Hello-3, 300(\" + \"+I(null, 400(\" + \"+I(Hello-5, 500(\" + \"+I(Hello-6, 600(\" + \"+I(Hello-7, 700(\" + \"+I(null, 800(\"@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(table.execute().collect())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family2 ROW<col1 BYTES, col2 BYTES>,\" + \" rowkey INT\" + \") WITH (\" + \" 'connector' = 'hbase-2.2',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testTableSourceReadAsByteArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testTableSourceReadAsByteArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "hbaseTable.setRowKey(ROW_KEY,)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tEnv.registerFunction(\"toUTF8\",new ToUTF8())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "isLegacyConnector@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tEnv.registerFunction(\"toLong\",new ToLong())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String expected = \"+I(Hello-1, 100(\" + \"+I(Hello-2, 200(\" + \"+I(Hello-3, 300(\" + \"+I(null, 400(\" + \"+I(Hello-5, 500(\" + \"+I(Hello-6, 600(\" + \"+I(Hello-7, 700(\" + \"+I(null, 800(\"@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Table table = tEnv.sqlQuery(\"SELECT \" + \" toUTF8(h.family2.col1), \" + \" toLong(h.family2.col2) \" + \"FROM hTable AS h\")@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family2 ROW<col1 BYTES, col2 BYTES>,\" + \" rowkey INT\" + \") WITH (\" + \" 'connector' = 'hbase-1.4',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "HBaseTableSource hbaseTable = new HBaseTableSource(getConf(),TEST_TABLE_1)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tEnv.registerFunction(\"toLong\",new ToLong())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestBaseUtils.compareResultAsText(results,expected)@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "((TableEnvironmentInternal)tEnv).registerTableSourceInternal(\"hTable\",hbaseTable)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(table.execute().collect())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "hbaseTable.addColumn(FAMILY2,F2COL2,)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "hbaseTable.addColumn(FAMILY2,F2COL1,)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->17 [style = bold, label=""];
25->1 [style = bold, label=""];
9->11 [style = bold, label=""];
3->1 [style = bold, label=""];
14->6 [style = solid, label="hbaseTable"];
2->3 [style = bold, label=""];
2->3 [style = dotted, label="false"];
18->19 [style = bold, label=""];
24->13 [style = bold, label=""];
1->0 [style = bold, label=""];
16->22 [style = bold, label=""];
15->16 [style = bold, label=""];
2->25 [style = dotted, label="false"];
2->11 [style = dotted, label="true"];
6->1 [style = bold, label=""];
5->12 [style = solid, label="expected"];
2->9 [style = dotted, label="true"];
8->12 [style = solid, label="results"];
8->5 [style = bold, label=""];
10->13 [style = bold, label=""];
5->12 [style = bold, label=""];
22->20 [style = bold, label=""];
0->4 [style = bold, label=""];
2->6 [style = dotted, label="true"];
17->21 [style = solid, label="expected"];
2->7 [style = dotted, label="true"];
2->14 [style = bold, label=""];
7->6 [style = bold, label=""];
20->21 [style = solid, label="results"];
4->8 [style = bold, label=""];
2->14 [style = dotted, label="true"];
14->9 [style = bold, label=""];
13->18 [style = dashed, label="0"];
19->15 [style = bold, label=""];
2->25 [style = bold, label=""];
17->21 [style = bold, label=""];
23->18 [style = bold, label=""];
11->7 [style = bold, label=""];
13->2 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
