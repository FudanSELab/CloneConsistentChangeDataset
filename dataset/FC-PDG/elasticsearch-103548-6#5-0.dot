digraph {
14 [style = filled, label = "runActionUnderBlockTest(indexService,null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final IndicesStatsResponse stats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().contains(ReplicationTracker.getPeerRecoveryRetentionLeaseId(stats.getShards()(0(.getShardRouting())))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertNotNull(stats.getShards()(0(.getRetentionLeaseStats())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testRemoveAction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotNull(stats.getShards())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ensureGreen(\"index\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(stats.getShards(),arrayWithSize(1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String source = randomAlphaOfLength(8)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "runActionUnderBlockTest(indexService,null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testRemoveUnderBlock['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertThat(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().contains(ReplicationTracker.getPeerRecoveryRetentionLeaseId(stats.getShards()(0(.getShardRouting())))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final IndexService indexService = createIndex(\"index\",settings)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testRemoveUnderBlock['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(stats.getShards()(0(.getRetentionLeaseStats())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client().execute(RetentionLeaseActions.Remove.INSTANCE,new RetentionLeaseActions.RemoveRequest(indexService.getShard(0).shardId(),id)).actionGet()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(stats.getShards()(0(.getRetentionLeaseStats().retentionLeases().leases(),hasSize(1))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Settings settings = Settings.builder().put(\"index.number_of_shards\",1).put(\"index.number_of_replicas\",0).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final long retainingSequenceNumber = randomBoolean()? RETAIN_ALL: randomNonNegativeLong()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client().execute(RetentionLeaseActions.Add.INSTANCE,new RetentionLeaseActions.AddRequest(indexService.getShard(0).shardId(),id,retainingSequenceNumber,source)).actionGet()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNotNull(stats.getShards())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String id = randomAlphaOfLength(8)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(stats.getShards(),arrayWithSize(1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final IndicesStatsResponse stats = client().execute(IndicesStatsAction.INSTANCE,new IndicesStatsRequest().indices(\"index\")).actionGet()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->6 [style = solid, label="settings"];
7->13 [style = bold, label=""];
16->3 [style = bold, label=""];
1->4 [style = bold, label=""];
23->20 [style = bold, label=""];
3->6 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
6->15 [style = solid, label="indexService"];
14->15 [style = dashed, label="0"];
21->18 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
17->24 [style = bold, label=""];
18->22 [style = bold, label=""];
10->5 [style = bold, label=""];
8->2 [style = bold, label=""];
6->14 [style = solid, label="indexService"];
22->17 [style = bold, label=""];
14->21 [style = dashed, label="0"];
14->8 [style = bold, label=""];
5->11 [style = bold, label=""];
12->3 [style = bold, label=""];
13->15 [style = bold, label=""];
13->21 [style = bold, label=""];
13->14 [style = bold, label=""];
19->3 [style = bold, label=""];
15->8 [style = bold, label=""];
24->23 [style = bold, label=""];
}
