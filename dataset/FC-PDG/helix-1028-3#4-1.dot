digraph {
11 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "baseAccessor.create(path,new ZNRecord(Integer.toString(i)),AccessOption.PERSISTENT)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "boolean exist = store.exists(path,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertNotNull(record.getSimpleField(\"key\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNotNull(record)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "path = String.format(\"%s/%d\",fallbackRoot,i)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean succeed = store.update(path,new MyDataUpdater(\"0\"),AccessOption.PERSISTENT)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "baseAccessor.create(path,new ZNRecord(\"new\" + i),AccessOption.PERSISTENT)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertNotNull(record)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String root = String.format(\"/%s/%s\",clusterName,PropertyType.PROPERTYSTORE.name())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(exist)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<>(baseAccessor,root,fallbackRoot)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "ZNRecord record = store.get(path,null,0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testSingleUpdateUsingNewPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Stat stat = store.getStat(path,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertNotNull(stat)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<>(_gZkClient)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testSingleGetOnFallbackPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "deleteCluster(clusterName)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "String path = String.format(\"%s/%d\",fallbackRoot,i)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AutoFallbackPropertyStore<ZNRecord> store = new AutoFallbackPropertyStore<ZNRecord>(baseAccessor,root,fallbackRoot)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String path = String.format(\"%s/%d\",root,i)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertFalse(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should not exist under new location after get\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testSingleUpdateUsingNewPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "Assert.assertNotNull(record)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(record.getId(),\"new0\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String path = String.format(\"/%d\",0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",fallbackRoot,path),0),\"Should exist under fallback location\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(record.getId(),\"0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String fallbackRoot = String.format(\"/%s/%s\",clusterName,\"HELIX_PROPERTYSTORE\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ZNRecord record = baseAccessor.get(String.format(\"%s%s\",fallbackRoot,path),null,0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(succeed)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(record.getSimpleField(\"key\"),\"value\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(baseAccessor.exists(String.format(\"%s%s\",root,path),0),\"Should exist under new location\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->22 [style = bold, label=""];
26->36 [style = solid, label="i"];
10->6 [style = solid, label="clusterName"];
20->26 [style = bold, label=""];
12->8 [style = dotted, label="true"];
27->28 [style = bold, label=""];
12->15 [style = dotted, label="true"];
11->26 [style = solid, label="i"];
43->2 [style = solid, label="path"];
31->1 [style = bold, label=""];
11->20 [style = solid, label="i"];
9->2 [style = solid, label="fallbackRoot"];
9->29 [style = solid, label="fallbackRoot"];
3->38 [style = bold, label=""];
43->39 [style = solid, label="path"];
9->16 [style = bold, label=""];
28->14 [style = bold, label=""];
12->35 [style = dotted, label="true"];
26->15 [style = solid, label="i"];
3->27 [style = bold, label=""];
16->2 [style = solid, label="baseAccessor"];
11->35 [style = solid, label="i"];
19->1 [style = bold, label=""];
12->2 [style = bold, label=""];
26->12 [style = bold, label=""];
33->11 [style = bold, label=""];
23->20 [style = solid, label="root"];
43->38 [style = solid, label="path"];
12->20 [style = dotted, label="true"];
9->34 [style = solid, label="fallbackRoot"];
20->43 [style = bold, label=""];
25->10 [style = bold, label=""];
16->33 [style = dashed, label="0"];
10->23 [style = solid, label="clusterName"];
40->37 [style = bold, label=""];
22->25 [style = bold, label=""];
43->5 [style = solid, label="path"];
26->24 [style = solid, label="i"];
38->28 [style = solid, label="exist"];
9->33 [style = bold, label=""];
38->28 [style = bold, label=""];
4->19 [style = bold, label=""];
36->35 [style = solid, label="path"];
11->12 [style = bold, label=""];
27->2 [style = dashed, label="0"];
14->13 [style = solid, label="succeed"];
3->28 [style = solid, label="path"];
22->10 [style = solid, label="className"];
11->24 [style = solid, label="i"];
3->14 [style = solid, label="path"];
24->20 [style = bold, label=""];
13->28 [style = dashed, label="0"];
5->6 [style = bold, label=""];
18->4 [style = bold, label=""];
11->12 [style = solid, label="i"];
21->22 [style = bold, label=""];
11->8 [style = solid, label="i"];
23->8 [style = solid, label="root"];
29->17 [style = solid, label="record"];
39->41 [style = bold, label=""];
39->41 [style = solid, label="stat"];
16->20 [style = solid, label="baseAccessor"];
42->22 [style = bold, label=""];
36->35 [style = bold, label=""];
6->7 [style = bold, label=""];
23->6 [style = solid, label="root"];
3->27 [style = solid, label="path"];
3->6 [style = solid, label="path"];
29->17 [style = bold, label=""];
10->9 [style = solid, label="clusterName"];
23->27 [style = solid, label="root"];
8->15 [style = bold, label=""];
3->29 [style = solid, label="path"];
28->39 [style = bold, label=""];
2->3 [style = bold, label=""];
26->20 [style = solid, label="i"];
12->36 [style = dotted, label="true"];
12->36 [style = bold, label=""];
12->20 [style = bold, label=""];
43->2 [style = bold, label=""];
9->24 [style = solid, label="fallbackRoot"];
8->36 [style = dashed, label="0"];
24->20 [style = solid, label="path"];
33->34 [style = solid, label="baseAccessor"];
25->10 [style = solid, label="methodName"];
23->2 [style = solid, label="root"];
9->20 [style = solid, label="fallbackRoot"];
12->26 [style = dotted, label="true"];
17->0 [style = bold, label=""];
8->15 [style = solid, label="path"];
41->40 [style = bold, label=""];
12->8 [style = bold, label=""];
26->35 [style = solid, label="i"];
37->44 [style = bold, label=""];
12->24 [style = dotted, label="true"];
7->18 [style = bold, label=""];
26->12 [style = solid, label="i"];
14->13 [style = bold, label=""];
43->40 [style = solid, label="path"];
9->28 [style = solid, label="fallbackRoot"];
44->5 [style = bold, label=""];
35->26 [style = bold, label=""];
10->30 [style = bold, label=""];
0->5 [style = bold, label=""];
23->34 [style = solid, label="root"];
16->11 [style = bold, label=""];
40->37 [style = solid, label="record"];
19->31 [style = bold, label=""];
9->3 [style = solid, label="fallbackRoot"];
10->30 [style = solid, label="clusterName"];
30->23 [style = bold, label=""];
12->34 [style = bold, label=""];
11->15 [style = solid, label="i"];
11->36 [style = solid, label="i"];
13->29 [style = bold, label=""];
23->5 [style = solid, label="root"];
10->1 [style = solid, label="clusterName"];
43->3 [style = solid, label="path"];
10->31 [style = solid, label="clusterName"];
6->7 [style = solid, label="record"];
34->3 [style = bold, label=""];
9->36 [style = solid, label="fallbackRoot"];
15->24 [style = bold, label=""];
26->8 [style = solid, label="i"];
2->34 [style = dashed, label="0"];
23->9 [style = bold, label=""];
}
