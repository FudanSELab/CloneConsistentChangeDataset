digraph {
4 [style = filled, label = "parameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "parameters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return Arrays.asList(new Object((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@15137d3)@@@3@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "parameters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "return Stream.of(Arguments.of(new HammingDistance(),\"Sam I am.\",\"Ham I am.\",1),Arguments.of(new HammingDistance(),\"Japtheth, Ham, Shem\",\"Japtheth, HAM, Shem\",2),Arguments.of(new HammingDistance(),\"Hamming\",\"Hamming\",0),Arguments.of(new LevenshteinDistance(),\"Apache\",\"a patchy\",4),Arguments.of(new LevenshteinDistance(),\"go\",\"no go\",3),Arguments.of(new LevenshteinDistance(),\"go\",\"go\",0),Arguments.of(new LevenshteinDistance(4),\"Apache\",\"a patchy\",4),Arguments.of(new LevenshteinDistance(4),\"go\",\"no go\",3),Arguments.of(new LevenshteinDistance(0),\"go\",\"go\",0),Arguments.of(new EditDistance<Boolean>(){@Override public Boolean apply(final CharSequence left,final CharSequence right){return left == right || (left != null && left.equals(right))}},\"Bob's your uncle.\",\"Every good boy does fine.\",false))@@@3@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
4->0 [style = bold, label=""];
0->2 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
}
