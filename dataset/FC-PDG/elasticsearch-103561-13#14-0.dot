digraph {
15 [style = filled, label = "action.dispatchedShardOperationOnPrimary(request,indexShard,ActionTestUtils.assertNoFailureListener(null))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "action.shardOperationOnPrimary(request,indexShard,ActionTestUtils.assertNoFailureListener(null))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final IndexService indexService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new WriteMemoryLimits())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final RetentionLeaseSyncAction.Request request = new RetentionLeaseSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testRetentionLeaseSyncActionOnPrimary['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testRetentionLeaseBackgroundSyncActionOnPrimary['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final IndicesService indicesService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final IndexShard indexShard = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Index index = new Index(\"index\",\"uuid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "action.shardOperationOnPrimary(request,indexShard,new LatchedActionListener<>(ActionTestUtils.assertNoFailureListener(null),latch))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final RetentionLeaseBackgroundSyncAction.Request request = new RetentionLeaseBackgroundSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "latch.await()@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(indicesService.indexServiceSafe(index)).thenReturn(indexService)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final RetentionLeaseBackgroundSyncAction action = new RetentionLeaseBackgroundSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ShardId shardId = new ShardId(index,id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRetentionLeaseSyncActionOnPrimary['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int id = randomIntBetween(0,4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(indexService.getShard(id)).thenReturn(indexShard)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RetentionLeases retentionLeases = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
6->21 [style = dashed, label="0"];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
11->1 [style = solid, label="indexShard"];
7->20 [style = solid, label="retentionLeases"];
12->5 [style = bold, label=""];
16->8 [style = bold, label=""];
11->1 [style = bold, label=""];
12->3 [style = solid, label="shardId"];
9->10 [style = solid, label="indexService"];
3->13 [style = solid, label="request"];
0->12 [style = solid, label="index"];
8->21 [style = solid, label="indicesService"];
3->15 [style = bold, label=""];
7->20 [style = bold, label=""];
9->10 [style = bold, label=""];
5->14 [style = bold, label=""];
6->14 [style = dashed, label="0"];
11->15 [style = solid, label="indexShard"];
13->15 [style = dashed, label="0"];
7->3 [style = bold, label=""];
20->18 [style = solid, label="request"];
14->7 [style = bold, label=""];
12->20 [style = solid, label="shardId"];
8->0 [style = bold, label=""];
5->21 [style = bold, label=""];
11->13 [style = solid, label="indexShard"];
18->22 [style = bold, label=""];
5->6 [style = bold, label=""];
7->3 [style = solid, label="retentionLeases"];
3->20 [style = dashed, label="0"];
1->12 [style = bold, label=""];
3->13 [style = bold, label=""];
21->7 [style = bold, label=""];
4->8 [style = bold, label=""];
19->18 [style = solid, label="latch"];
10->2 [style = bold, label=""];
8->6 [style = solid, label="indicesService"];
2->12 [style = solid, label="id"];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
12->5 [style = solid, label="shardId"];
2->11 [style = bold, label=""];
8->14 [style = solid, label="indicesService"];
11->18 [style = solid, label="indexShard"];
3->15 [style = solid, label="request"];
}
