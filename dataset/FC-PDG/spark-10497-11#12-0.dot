digraph {
45 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> precision = metrics.precisionByThreshold().toJavaRDD()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "System.out.println(\"Confusion matrix: \" + confusion)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "System.out.println(\"F2 Score by threshold: \" + f2Score.collect())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sc.stop()@@@44@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "JavaPairRDD<Object,Object> predictionAndLabels = test.mapToPair(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(3).run(training.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "System.out.format(\"Weighted F1 score = %f\",metrics.weightedFMeasure())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f1Score = metrics.fMeasureByThreshold().toJavaRDD()@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "System.out.format(\"Weighted recall = %f\",metrics.weightedRecall())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(sc,path).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "MulticlassMetrics metrics = new MulticlassMetrics(predictionAndLabels.rdd())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "System.out.println(\"Recall by threshold: \" + recall.collect())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "System.out.println(\"ROC curve: \" + roc.collect())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "System.out.println(\"F1 Score by threshold: \" + f1Score.collect())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(\"Precision-recall curve: \" + prc.collect())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "JavaRDD<?> f2Score = metrics.fMeasureByThreshold(2.0).toJavaRDD()@@@22@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "System.out.println(\"Area under precision-recall curve = \" + metrics.areaUnderPR())@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "System.out.println(\"Area under ROC = \" + metrics.areaUnderROC())@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "System.out.format(\"Class %f precision = %f\",metrics.labels()(i(,metrics.precision(metrics.labels()(i())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "sc.stop()@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "JavaRDD<?> f1Score = metrics.fMeasureByThreshold().toJavaRDD()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "JavaRDD<LabeledPoint> training = splits(0(.cache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> prc = metrics.pr().toJavaRDD()@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "i < metrics.labels().length@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String path = \"data/mllib/sample_binary_classification_data.txt\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training.rdd())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "System.out.format(\"Weighted false positive rate = %f\",metrics.weightedFalsePositiveRate())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "System.out.println(\"Area under precision-recall curve = \" + metrics.areaUnderPR())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "i++@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "System.out.format(\"Class %f recall = %f\",metrics.labels()(i(,metrics.recall(metrics.labels()(i())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Matrix confusion = metrics.confusionMatrix()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "sc.stop()@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Java Binary Classification Metrics Example\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f2Score = metrics.fMeasureByThreshold(2.0).toJavaRDD()@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "System.out.println(\"Precision by threshold: \" + precision.collect())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Multi class Classification Metrics Example\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "System.out.println(\"Area under ROC = \" + metrics.areaUnderROC())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "JavaRDD<?> prc = metrics.pr().toJavaRDD()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "JavaRDD<Double> thresholds = precision.map(null)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> recall = metrics.recallByThreshold().toJavaRDD()@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training.rdd())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "System.out.format(\"Weighted precision = %f\",metrics.weightedPrecision())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "JavaRDD<LabeledPoint> test = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "model.clearThreshold()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "System.out.println(\"Accuracy = \" + metrics.accuracy())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "JavaRDD<?> roc = metrics.roc().toJavaRDD()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "System.out.println(\"ROC curve: \" + roc.collect())@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "BinaryClassificationMetrics metrics = new BinaryClassificationMetrics(predictionAndLabels.rdd())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7f717,11L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){@Override public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> roc = metrics.roc().toJavaRDD()@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "int i = 0@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "String path = \"data/mllib/sample_multiclass_classification_data.txt\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "JavaRDD<?> recall = metrics.recallByThreshold().toJavaRDD()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "System.out.format(\"Class %f F1 score = %f\",metrics.labels()(i(,metrics.fMeasure(metrics.labels()(i())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "JavaRDD<Double> thresholds = precision.map(new Function<Tuple2<Object,Object>,Double>(){@Override public Double call(Tuple2<Object,Object> t){return new Double(t._1().toString())}})@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "SparkContext sc = new SparkContext(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->48 [style = solid, label="i"];
21->66 [style = dashed, label="0"];
67->65 [style = solid, label="i"];
29->0 [style = bold, label=""];
64->24 [style = solid, label="conf"];
39->14 [style = bold, label=""];
65->48 [style = bold, label=""];
50->65 [style = solid, label="i"];
43->26 [style = bold, label=""];
9->10 [style = bold, label=""];
57->66 [style = solid, label="confusion"];
7->8 [style = bold, label=""];
1->44 [style = dashed, label="0"];
26->11 [style = bold, label=""];
61->64 [style = bold, label=""];
62->67 [style = bold, label=""];
21->38 [style = bold, label=""];
50->65 [style = bold, label=""];
3->18 [style = bold, label=""];
65->62 [style = dotted, label="true"];
24->22 [style = solid, label="sc"];
65->49 [style = dotted, label="true"];
19->34 [style = dashed, label="0"];
1->28 [style = bold, label=""];
28->43 [style = bold, label=""];
17->53 [style = dashed, label="0"];
61->27 [style = dotted, label="true"];
28->25 [style = bold, label=""];
9->41 [style = dashed, label="0"];
56->7 [style = bold, label=""];
20->39 [style = dashed, label="0"];
19->15 [style = bold, label=""];
20->47 [style = dashed, label="0"];
33->27 [style = dotted, label="true"];
67->62 [style = solid, label="i"];
15->13 [style = bold, label=""];
48->49 [style = bold, label=""];
59->60 [style = bold, label=""];
35->44 [style = bold, label=""];
24->36 [style = solid, label="sc"];
24->4 [style = solid, label="sc"];
2->56 [style = dashed, label="0"];
20->14 [style = bold, label=""];
42->31 [style = bold, label=""];
49->62 [style = bold, label=""];
24->60 [style = solid, label="sc"];
5->17 [style = bold, label=""];
44->17 [style = bold, label=""];
66->54 [style = bold, label=""];
18->20 [style = bold, label=""];
21->9 [style = bold, label=""];
10->34 [style = bold, label=""];
30->24 [style = solid, label="conf"];
65->67 [style = dotted, label="true"];
25->26 [style = bold, label=""];
67->48 [style = solid, label="i"];
33->30 [style = bold, label=""];
26->37 [style = bold, label=""];
52->51 [style = bold, label=""];
10->1 [style = bold, label=""];
65->46 [style = bold, label=""];
51->63 [style = bold, label=""];
50->67 [style = solid, label="i"];
50->49 [style = solid, label="i"];
24->56 [style = bold, label=""];
30->24 [style = bold, label=""];
0->16 [style = bold, label=""];
18->47 [style = bold, label=""];
22->19 [style = bold, label=""];
63->59 [style = bold, label=""];
57->66 [style = bold, label=""];
8->3 [style = bold, label=""];
14->42 [style = bold, label=""];
5->42 [style = dashed, label="0"];
24->16 [style = solid, label="sc"];
17->23 [style = bold, label=""];
34->28 [style = bold, label=""];
60->58 [style = bold, label=""];
37->22 [style = bold, label=""];
18->39 [style = bold, label=""];
11->22 [style = bold, label=""];
4->12 [style = bold, label=""];
13->63 [style = dashed, label="0"];
6->27 [style = dotted, label="true"];
16->4 [style = bold, label=""];
25->23 [style = dashed, label="0"];
45->40 [style = bold, label=""];
14->5 [style = bold, label=""];
41->35 [style = bold, label=""];
8->18 [style = solid, label="splits"];
30->64 [style = dashed, label="0"];
24->2 [style = bold, label=""];
38->10 [style = bold, label=""];
53->57 [style = bold, label=""];
36->32 [style = bold, label=""];
64->24 [style = bold, label=""];
67->65 [style = bold, label=""];
46->52 [style = bold, label=""];
24->59 [style = solid, label="sc"];
54->50 [style = bold, label=""];
11->38 [style = dashed, label="0"];
13->29 [style = bold, label=""];
47->55 [style = bold, label=""];
23->21 [style = bold, label=""];
4->60 [style = dashed, label="0"];
50->62 [style = solid, label="i"];
22->36 [style = bold, label=""];
55->53 [style = bold, label=""];
40->41 [style = bold, label=""];
65->48 [style = dotted, label="true"];
2->7 [style = bold, label=""];
31->45 [style = bold, label=""];
67->49 [style = solid, label="i"];
6->30 [style = bold, label=""];
}
