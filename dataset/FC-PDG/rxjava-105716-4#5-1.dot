digraph {
25 [style = filled, label = "to.assertNoErrors()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Set<Integer> actual = new HashSet<Integer>(ts.values())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "expected.add(j)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "j++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Flowable.merge(sourceList,i).subscribe(ts)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(expected,actual)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "simpleAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Observable.merge(sourceList,i).subscribe(to)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "to.awaitDone(1,TimeUnit.SECONDS)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Set<Integer> actual = new HashSet<>(ts.values())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "simpleAsync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int j = 1@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sourceList.add(Flowable.just(j).subscribeOn(Schedulers.io()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "j <= i@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Set<Integer> expected = new HashSet<Integer>(i)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ts.awaitDone(1,TimeUnit.SECONDS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Set<Integer> actual = new HashSet<Integer>(to.values())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "simpleAsync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Set<Integer> expected = new HashSet<>(i)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "sourceList.add(Observable.just(j).subscribeOn(Schedulers.io()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < 50@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Flowable<Integer>> sourceList = new ArrayList<Flowable<Integer>>(i)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "List<Observable<Integer>> sourceList = new ArrayList<Observable<Integer>>(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ts.assertNoErrors()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "List<Flowable<Integer>> sourceList = new ArrayList<>(i)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->12 [style = dotted, label="true"];
0->5 [style = dotted, label="true"];
14->17 [style = solid, label="i"];
0->19 [style = dotted, label="true"];
1->27 [style = dashed, label="0"];
11->17 [style = solid, label="i"];
11->1 [style = solid, label="i"];
14->11 [style = solid, label="i"];
18->13 [style = solid, label="expected"];
21->10 [style = solid, label="ts"];
0->25 [style = dotted, label="true"];
11->16 [style = solid, label="i"];
27->15 [style = bold, label=""];
28->14 [style = bold, label=""];
12->21 [style = dashed, label="0"];
16->7 [style = dotted, label="true"];
14->27 [style = solid, label="i"];
0->21 [style = dotted, label="true"];
0->24 [style = dotted, label="true"];
24->13 [style = solid, label="actual"];
9->14 [style = bold, label=""];
8->25 [style = dashed, label="0"];
0->3 [style = dotted, label="true"];
11->0 [style = solid, label="i"];
0->11 [style = dotted, label="true"];
4->16 [style = bold, label=""];
2->16 [style = bold, label=""];
23->25 [style = bold, label=""];
0->10 [style = dotted, label="true"];
5->23 [style = dashed, label="0"];
16->6 [style = bold, label=""];
3->24 [style = dashed, label="0"];
16->26 [style = bold, label=""];
0->29 [style = bold, label=""];
20->14 [style = bold, label=""];
0->21 [style = bold, label=""];
12->1 [style = bold, label=""];
13->11 [style = bold, label=""];
22->7 [style = bold, label=""];
6->22 [style = dashed, label="0"];
0->8 [style = dotted, label="true"];
3->13 [style = solid, label="actual"];
29->27 [style = bold, label=""];
25->24 [style = bold, label=""];
18->4 [style = bold, label=""];
19->13 [style = bold, label=""];
7->2 [style = bold, label=""];
4->7 [style = solid, label="j"];
6->7 [style = bold, label=""];
0->26 [style = dotted, label="true"];
2->16 [style = solid, label="j"];
4->16 [style = solid, label="j"];
24->13 [style = bold, label=""];
29->26 [style = solid, label="to"];
0->18 [style = dotted, label="true"];
0->12 [style = bold, label=""];
0->4 [style = dotted, label="true"];
8->3 [style = bold, label=""];
14->16 [style = solid, label="i"];
2->7 [style = solid, label="j"];
10->5 [style = bold, label=""];
0->23 [style = dotted, label="true"];
0->16 [style = dotted, label="true"];
11->27 [style = solid, label="i"];
19->13 [style = solid, label="actual"];
0->1 [style = dotted, label="true"];
4->2 [style = solid, label="j"];
5->8 [style = bold, label=""];
16->2 [style = dotted, label="true"];
0->13 [style = dotted, label="true"];
16->10 [style = bold, label=""];
8->19 [style = bold, label=""];
0->15 [style = dotted, label="true"];
1->15 [style = bold, label=""];
15->18 [style = dashed, label="0"];
14->18 [style = solid, label="i"];
16->22 [style = dotted, label="true"];
16->22 [style = bold, label=""];
11->15 [style = solid, label="i"];
3->19 [style = dashed, label="0"];
0->29 [style = dotted, label="true"];
11->0 [style = bold, label=""];
12->10 [style = solid, label="ts"];
1->17 [style = dashed, label="0"];
10->26 [style = dashed, label="0"];
14->0 [style = bold, label=""];
26->23 [style = bold, label=""];
14->1 [style = solid, label="i"];
15->13 [style = solid, label="expected"];
15->4 [style = bold, label=""];
12->29 [style = dashed, label="0"];
14->0 [style = solid, label="i"];
3->13 [style = bold, label=""];
0->17 [style = dotted, label="true"];
14->15 [style = solid, label="i"];
0->27 [style = dotted, label="true"];
21->17 [style = bold, label=""];
17->18 [style = bold, label=""];
11->18 [style = solid, label="i"];
16->6 [style = dotted, label="true"];
}
