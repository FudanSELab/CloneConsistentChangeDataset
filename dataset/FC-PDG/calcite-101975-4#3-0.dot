digraph {
28 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.aggregateCall(SqlStdOperatorTable.COUNT,false,false,null,\"ck\",builder.fields()))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "builder.as(\"dt\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "return builder.literal(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "builder.filter(conditions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "b = null@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "operands.add(builder.or(keyIsNulls),builder.literal(null))@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "allLiterals@@@76@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return builder.literal(true)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "variablesSet.isEmpty()@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "allLiterals@@@62@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "logic@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "rewriteExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "int refOffset = offset@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),builder.literal(false)),builder.literal(b))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "allLiterals@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),builder.literal(false))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.distinct()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),builder.literal(true))@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.aggregateCall(SqlStdOperatorTable.COUNT,builder.fields()).as(\"ck\"))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "variablesSet.isEmpty()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "rewriteIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "builder.project(fields)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "!allLiterals@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "logic@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.call(SqlStdOperatorTable.DESC,builder.field(\"cs\"))))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "builder.as(\"dt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "logic@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expressionOperands.clear()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<RexNode> isNullOpperands = fields.stream().map(null).collect(Collectors.toList())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "logic@@@53@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "isNullOpperands.addAll(keyIsNulls)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOpperands)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@88@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.push(e.rel)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Boolean b = true@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "builder.as(\"ct\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fields.add(builder.alias(builder.literal(true),\"i\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "builder.distinct()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "operands.add(builder.literal(false))@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "builder.as(\"dt\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),builder.literal(false))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "rewriteIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),builder.literal(true))@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),builder.literal(b))@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "fields.clear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "RelBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.distinct()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "builder.distinct()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RexSubQuery e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "logic@@@83@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "offset += 2@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"cs\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!variablesSet.isEmpty()@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int offset@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "int offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "RelBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "!keyIsNulls.isEmpty()@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
83->84 [style = bold, label=""];
49->56 [style = solid, label="variablesSet"];
62->3 [style = bold, label=""];
51->21 [style = dotted, label="true"];
33->55 [style = solid, label="offset"];
49->12 [style = solid, label="logic"];
80->82 [style = dotted, label="true"];
74->72 [style = bold, label=""];
36->2 [style = solid, label="variablesSet"];
11->12 [style = dotted, label="false"];
12->8 [style = dotted, label="true"];
5->32 [style = dotted, label="true"];
51->36 [style = dotted, label="true"];
30->35 [style = solid, label="b"];
8->63 [style = bold, label=""];
59->8 [style = solid, label="fields"];
61->53 [style = dotted, label="false"];
69->23 [style = solid, label="builder"];
13->48 [style = solid, label="keyIsNulls"];
65->48 [style = bold, label=""];
37->79 [style = bold, label=""];
3->16 [style = bold, label=""];
41->20 [style = bold, label=""];
3->4 [style = bold, label=""];
83->74 [style = dotted, label="true"];
3->27 [style = dotted, label="true"];
2->23 [style = bold, label=""];
63->55 [style = bold, label=""];
17->63 [style = bold, label=""];
80->77 [style = dotted, label="true"];
3->41 [style = dotted, label="true"];
68->3 [style = solid, label="logic"];
53->65 [style = bold, label=""];
13->22 [style = solid, label="keyIsNulls"];
16->18 [style = solid, label="isNullOpperands"];
11->43 [style = dotted, label="true"];
59->54 [style = solid, label="fields"];
12->54 [style = dotted, label="true"];
25->19 [style = bold, label=""];
31->34 [style = dotted, label="true"];
20->43 [style = bold, label=""];
30->40 [style = bold, label=""];
49->38 [style = solid, label="logic"];
73->76 [style = bold, label=""];
51->15 [style = dotted, label="true"];
3->16 [style = dotted, label="true"];
12->33 [style = dotted, label="true"];
59->28 [style = solid, label="fields"];
57->46 [style = bold, label=""];
49->82 [style = dashed, label="0"];
33->7 [style = bold, label=""];
40->61 [style = bold, label=""];
79->83 [style = bold, label=""];
46->42 [style = bold, label=""];
36->25 [style = solid, label="variablesSet"];
12->17 [style = dotted, label="true"];
46->38 [style = bold, label=""];
12->28 [style = bold, label=""];
23->30 [style = bold, label=""];
49->40 [style = solid, label="logic"];
6->54 [style = bold, label=""];
27->52 [style = solid, label="project"];
45->2 [style = solid, label="conditions"];
26->1 [style = bold, label=""];
54->17 [style = bold, label=""];
14->35 [style = solid, label="b"];
11->12 [style = bold, label=""];
49->39 [style = solid, label="variablesSet"];
19->2 [style = bold, label=""];
59->57 [style = solid, label="fields"];
68->40 [style = solid, label="logic"];
68->38 [style = solid, label="logic"];
13->11 [style = bold, label=""];
29->20 [style = bold, label=""];
60->25 [style = dotted, label="true"];
22->18 [style = bold, label=""];
68->60 [style = solid, label="logic"];
21->23 [style = solid, label="builder"];
10->44 [style = bold, label=""];
12->6 [style = dotted, label="true"];
85->3 [style = bold, label=""];
3->18 [style = dotted, label="true"];
32->58 [style = bold, label=""];
7->6 [style = bold, label=""];
28->71 [style = dashed, label="0"];
49->60 [style = solid, label="logic"];
59->10 [style = bold, label=""];
14->61 [style = bold, label=""];
31->47 [style = bold, label=""];
1->56 [style = bold, label=""];
3->75 [style = bold, label=""];
45->60 [style = bold, label=""];
11->62 [style = bold, label=""];
1->39 [style = dotted, label="false"];
31->29 [style = dotted, label="true"];
38->35 [style = bold, label=""];
56->33 [style = bold, label=""];
12->7 [style = dotted, label="true"];
64->57 [style = dotted, label="false"];
64->57 [style = bold, label=""];
1->39 [style = bold, label=""];
4->9 [style = bold, label=""];
12->71 [style = dotted, label="true"];
34->29 [style = bold, label=""];
64->50 [style = dotted, label="true"];
35->42 [style = bold, label=""];
83->85 [style = dotted, label="true"];
77->72 [style = solid, label="variablesSet"];
48->64 [style = bold, label=""];
51->49 [style = dotted, label="true"];
10->64 [style = solid, label="allLiterals"];
28->26 [style = bold, label=""];
83->3 [style = bold, label=""];
49->3 [style = solid, label="logic"];
3->9 [style = dotted, label="true"];
84->74 [style = bold, label=""];
42->24 [style = bold, label=""];
51->0 [style = dotted, label="true"];
80->37 [style = bold, label=""];
67->66 [style = dotted, label="true"];
31->34 [style = bold, label=""];
39->33 [style = bold, label=""];
27->52 [style = bold, label=""];
10->61 [style = solid, label="allLiterals"];
60->25 [style = bold, label=""];
12->26 [style = dotted, label="true"];
5->32 [style = bold, label=""];
40->14 [style = dotted, label="true"];
72->85 [style = bold, label=""];
11->20 [style = dotted, label="true"];
61->58 [style = dotted, label="true"];
80->78 [style = dotted, label="true"];
68->12 [style = solid, label="logic"];
66->55 [style = solid, label="offset"];
51->37 [style = bold, label=""];
12->8 [style = bold, label=""];
30->58 [style = solid, label="b"];
60->19 [style = dotted, label="true"];
4->84 [style = dashed, label="0"];
75->73 [style = bold, label=""];
83->84 [style = dotted, label="true"];
40->14 [style = bold, label=""];
43->63 [style = bold, label=""];
67->69 [style = dotted, label="true"];
5->58 [style = bold, label=""];
80->81 [style = dotted, label="true"];
36->39 [style = solid, label="variablesSet"];
46->38 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
58->65 [style = bold, label=""];
14->58 [style = solid, label="b"];
77->73 [style = solid, label="variablesSet"];
1->56 [style = dotted, label="true"];
36->56 [style = solid, label="variablesSet"];
49->25 [style = solid, label="variablesSet"];
67->70 [style = dotted, label="true"];
67->49 [style = dotted, label="true"];
71->26 [style = bold, label=""];
61->5 [style = bold, label=""];
10->11 [style = solid, label="allLiterals"];
62->4 [style = solid, label="conditions"];
45->25 [style = solid, label="conditions"];
50->46 [style = bold, label=""];
65->64 [style = bold, label=""];
12->1 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
16->22 [style = bold, label=""];
62->18 [style = solid, label="conditions"];
12->6 [style = bold, label=""];
12->28 [style = dotted, label="true"];
0->55 [style = solid, label="offset"];
9->41 [style = bold, label=""];
61->53 [style = bold, label=""];
11->62 [style = dotted, label="true"];
18->27 [style = bold, label=""];
49->2 [style = solid, label="variablesSet"];
38->35 [style = dotted, label="true"];
83->72 [style = dotted, label="true"];
37->59 [style = bold, label=""];
81->83 [style = solid, label="logic"];
47->20 [style = bold, label=""];
3->22 [style = dotted, label="true"];
52->31 [style = bold, label=""];
65->48 [style = dotted, label="true"];
83->3 [style = dotted, label="true"];
3->31 [style = dotted, label="true"];
12->71 [style = bold, label=""];
44->13 [style = bold, label=""];
67->37 [style = bold, label=""];
64->50 [style = bold, label=""];
3->52 [style = dotted, label="true"];
61->5 [style = dotted, label="true"];
55->45 [style = bold, label=""];
31->47 [style = dotted, label="false"];
67->68 [style = dotted, label="true"];
40->61 [style = dotted, label="true"];
}
