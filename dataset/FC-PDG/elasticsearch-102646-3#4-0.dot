digraph {
8 [style = filled, label = "final AtomicInteger outerCount = new AtomicInteger()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final AtomicBoolean closeCalled = new AtomicBoolean(false)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(1,wrap.getIndexReader().getRefCount())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "wrap.close()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(0,cache.size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"_na_\",1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,iwc)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(open)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,cache.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final AtomicInteger count = new AtomicInteger()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(\"wrapped reader is closed\",wrap.reader().tryIncRef())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "ElasticsearchDirectoryReader.addReaderCloseListener(wrap.getDirectoryReader(),null)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "cache.put(wrap.reader().getReaderCacheHelper().getKey(),search)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertFalse(\"wrapped reader is closed\",wrap.getIndexReader().tryIncRef())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(0,wrap.searcher().search(new TermQuery(new Term(\"field\",\"doc\")),1).totalHits.value)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final AtomicInteger closeCalls = new AtomicInteger(0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,closeCalls.get())@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,searcher.search(new TermQuery(new Term(\"field\",\"doc\")),1).totalHits.value)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testIsCacheable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(1,closeCalls.get())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "IOUtils.close(open,writer,dir)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(0,open.getRefCount())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,closeCalls.get())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final ConcurrentHashMap<Object,TopDocs> cache = new ConcurrentHashMap<>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1,wrap.reader().getRefCount())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "IndexWriterConfig iwc = newIndexWriterConfig()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,wrap.search(new TermQuery(new Term(\"field\",\"doc\")),1).totalHits.value)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testReaderCloseListenerIsCalled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertTrue(closeCalled.get())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "doc.add(new StringField(\"id\",\"1\",random().nextBoolean()? Field.Store.YES: Field.Store.NO))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testReaderCloseListenerIsCalled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TopDocs search = wrap.searcher().search(new TermQuery(new Term(\"field\",\"doc\")),1)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,count.get())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CheckedFunction<DirectoryReader,DirectoryReader,IOException> wrapper = null@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doc.add(new TextField(\"field\",\"doc\",random().nextBoolean()? Field.Store.YES: Field.Store.NO))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "IOUtils.close(open,writer,dir)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Engine.Searcher wrap = IndexShard.wrapSearcher(new Engine.Searcher(\"foo\",open,IndexSearcher.getDefaultSimilarity(),IndexSearcher.getDefaultQueryCache(),IndexSearcher.getDefaultQueryCachingPolicy(),null),wrapper)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(1,closeCalls.get())@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1,outerCount.get())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Engine.Searcher wrap = IndexShard.wrapSearcher(new Engine.Searcher(\"foo\",searcher,null),wrapper)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "AtomicBoolean closeCalled = new AtomicBoolean(false)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(sourceRefCount,open.getRefCount())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "writer.addDocument(doc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int sourceRefCount = open.getRefCount()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ElasticsearchDirectoryReader.addReaderCloseListener(wrap.getDirectoryReader(),null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "searcher.setSimilarity(iwc.getSimilarity())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Document doc = new Document()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
22->26 [style = bold, label=""];
44->6 [style = bold, label=""];
42->43 [style = bold, label=""];
5->1 [style = solid, label="open"];
45->18 [style = bold, label=""];
15->14 [style = bold, label=""];
25->22 [style = bold, label=""];
15->7 [style = solid, label="sourceRefCount"];
31->16 [style = bold, label=""];
0->46 [style = bold, label=""];
22->19 [style = solid, label="doc"];
24->33 [style = dashed, label="0"];
2->35 [style = dashed, label="0"];
16->24 [style = bold, label=""];
18->11 [style = bold, label=""];
30->27 [style = bold, label=""];
41->37 [style = bold, label=""];
34->18 [style = bold, label=""];
18->25 [style = solid, label="dir"];
20->32 [style = bold, label=""];
10->35 [style = bold, label=""];
26->9 [style = bold, label=""];
18->28 [style = solid, label="dir"];
24->38 [style = dashed, label="0"];
4->18 [style = bold, label=""];
6->0 [style = bold, label=""];
33->10 [style = bold, label=""];
27->16 [style = bold, label=""];
25->37 [style = solid, label="writer"];
38->42 [style = bold, label=""];
27->31 [style = dashed, label="0"];
10->42 [style = dashed, label="0"];
30->32 [style = dashed, label="0"];
0->15 [style = bold, label=""];
5->37 [style = solid, label="open"];
18->37 [style = solid, label="dir"];
17->47 [style = dashed, label="0"];
25->28 [style = solid, label="writer"];
1->30 [style = solid, label="searcher"];
19->5 [style = bold, label=""];
5->1 [style = bold, label=""];
29->6 [style = bold, label=""];
5->28 [style = solid, label="open"];
17->12 [style = bold, label=""];
8->20 [style = bold, label=""];
40->36 [style = bold, label=""];
23->13 [style = bold, label=""];
16->33 [style = bold, label=""];
7->23 [style = bold, label=""];
38->42 [style = solid, label="search"];
11->25 [style = solid, label="iwc"];
9->19 [style = bold, label=""];
28->17 [style = bold, label=""];
29->44 [style = bold, label=""];
3->21 [style = bold, label=""];
39->41 [style = bold, label=""];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
12->3 [style = bold, label=""];
0->30 [style = solid, label="wrapper"];
36->38 [style = bold, label=""];
2->7 [style = bold, label=""];
46->40 [style = bold, label=""];
1->29 [style = bold, label=""];
25->5 [style = solid, label="writer"];
20->30 [style = bold, label=""];
47->23 [style = bold, label=""];
43->39 [style = bold, label=""];
35->7 [style = bold, label=""];
32->31 [style = bold, label=""];
5->32 [style = solid, label="open"];
0->32 [style = solid, label="wrapper"];
14->40 [style = dashed, label="0"];
11->25 [style = bold, label=""];
13->28 [style = bold, label=""];
37->47 [style = bold, label=""];
}
