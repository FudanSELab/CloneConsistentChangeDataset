digraph {
1 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_minActiveReplica,NUM_NODE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Thread.sleep(delay + DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "setDelayTimeInCluster(_gZkClient,CLUSTER_NAME,delay)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "enablePersistBestPossibleAssignment(_gZkClient,CLUSTER_NAME,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testPartitionMovementAfterDelayTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "validateNoPartitionMove(is,externalViewsBefore.get(db),ev,_participants.get(0).getInstanceName(),true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,ExternalView> externalViewsBefore = createTestDBs(-1)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "long delay = 10000@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "enableInstance(_participants.get(0).getInstanceName(),false)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "validateNoPartitionMove(is,externalViewsBefore.get(db),ev,_participants.get(0).getInstanceName(),true)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "long delay = 4000@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "testPartitionMovementAfterDelayTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testPartitionMovementAfterDelayTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Thread.sleep(delay + DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Map<String,ExternalView> externalViewsBefore = createTestDBs(delay)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Thread.sleep(100)@@@7@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Thread.sleep(delay + 500)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "validateDelayedMovements(externalViewsBefore)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Thread.sleep(DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2->17 [style = bold, label=""];
26->28 [style = solid, label="is"];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
6->3 [style = bold, label=""];
18->3 [style = bold, label=""];
5->17 [style = solid, label="delay"];
19->18 [style = bold, label=""];
13->6 [style = solid, label="is"];
27->10 [style = solid, label="delay"];
20->9 [style = bold, label=""];
7->17 [style = dashed, label="0"];
31->28 [style = solid, label="ev"];
28->31 [style = bold, label=""];
29->31 [style = bold, label=""];
11->4 [style = bold, label=""];
25->9 [style = bold, label=""];
8->15 [style = dashed, label="0"];
23->15 [style = bold, label=""];
8->14 [style = bold, label=""];
18->3 [style = solid, label="is"];
5->21 [style = solid, label="delay"];
12->9 [style = bold, label=""];
32->30 [style = bold, label=""];
5->7 [style = solid, label="delay"];
17->19 [style = bold, label=""];
0->15 [style = bold, label=""];
30->29 [style = bold, label=""];
27->30 [style = solid, label="delay"];
15->22 [style = bold, label=""];
24->2 [style = solid, label="ev"];
9->27 [style = bold, label=""];
5->21 [style = bold, label=""];
31->26 [style = bold, label=""];
5->27 [style = dashed, label="0"];
24->4 [style = bold, label=""];
4->2 [style = solid, label="ev"];
3->19 [style = bold, label=""];
4->11 [style = solid, label="ev"];
3->6 [style = solid, label="ev"];
4->2 [style = solid, label="is"];
24->1 [style = solid, label="ev"];
27->10 [style = bold, label=""];
10->0 [style = bold, label=""];
7->16 [style = bold, label=""];
0->32 [style = solid, label="externalViewsBefore"];
9->5 [style = bold, label=""];
3->13 [style = bold, label=""];
19->3 [style = solid, label="ev"];
4->1 [style = solid, label="is"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
1->2 [style = solid, label="is"];
26->28 [style = bold, label=""];
22->24 [style = bold, label=""];
13->6 [style = bold, label=""];
2->24 [style = bold, label=""];
0->32 [style = bold, label=""];
5->10 [style = solid, label="delay"];
1->11 [style = solid, label="is"];
15->8 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
14->4 [style = bold, label=""];
21->23 [style = bold, label=""];
}
