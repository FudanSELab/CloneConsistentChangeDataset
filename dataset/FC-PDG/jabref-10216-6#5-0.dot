digraph {
43 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestMedline.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(\"edition\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(StandardField.TITLE))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"Estrogen therapy selectively enhances prefrontal cognitive processes: a randomized, double-blind, placebo-controlled study with functional magnetic resonance imaging in perimenopausal and recently postmenopausal women.\"),second.getField(\"title\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(Optional.empty(),first.getField(\"month\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(StandardField.PUBLISHER))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(\"address\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"411--22\"),second.getField(\"pages\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(StandardEntryType.Book,entry.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"Curr Pharm Des\"),first.getField(\"journal\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"Effects of modafinil on cognitive performance and alertness during sleep deprivation.\"),first.getField(\"title\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"#may#\"),second.getField(\"month\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(StandardField.EDITION))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"3\"),second.getField(\"number\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(StandardField.YEAR))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(\"title\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(\"publisher\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "testImportEntriesMedline['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(\"keywords\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(StandardField.PAGES))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(Optional.of(\"Joffe, Hadine and Hall, Janet E. and Gruber, Staci and Sarmiento, Ingrid A. and Cohen, Lee S. and Yurgelun-Todd, Deborah and Martin, Kathryn A.\"),second.getField(\"author\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(StandardField.ADDRESS))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(StandardField.URL))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"20\"),first.getField(\"number\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testImportEntriesBookExample['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(StandardField.KEYWORDS))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(\"year\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Optional.of(\"Wesensten, Nancy J.\"),first.getField(\"author\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(\"article\",first.getType())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"2006\"),second.getField(\"year\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"12\"),first.getField(\"volume\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(\"pages\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(StandardField.AUTHOR))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testImportEntriesBookExample['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"2457--71\"),first.getField(\"pages\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(\"author\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertEquals(Optional.of(\"13\"),second.getField(\"volume\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(\"url\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45->41 [style = bold, label=""];
44->30 [style = bold, label=""];
5->10 [style = bold, label=""];
23->16 [style = bold, label=""];
26->32 [style = bold, label=""];
9->0 [style = bold, label=""];
0->13 [style = bold, label=""];
46->28 [style = bold, label=""];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
10->36 [style = dashed, label="0"];
35->42 [style = bold, label=""];
3->37 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
28->38 [style = bold, label=""];
18->17 [style = bold, label=""];
14->39 [style = dashed, label="0"];
4->27 [style = dashed, label="0"];
10->3 [style = bold, label=""];
11->23 [style = dashed, label="0"];
39->45 [style = bold, label=""];
0->26 [style = dashed, label="0"];
42->31 [style = bold, label=""];
43->26 [style = bold, label=""];
2->9 [style = bold, label=""];
21->25 [style = bold, label=""];
47->39 [style = bold, label=""];
16->22 [style = bold, label=""];
4->21 [style = dashed, label="0"];
24->18 [style = bold, label=""];
17->19 [style = bold, label=""];
13->1 [style = bold, label=""];
1->23 [style = bold, label=""];
1->11 [style = bold, label=""];
14->7 [style = bold, label=""];
5->20 [style = dashed, label="0"];
9->43 [style = dashed, label="0"];
32->29 [style = bold, label=""];
13->32 [style = dashed, label="0"];
6->46 [style = dashed, label="0"];
7->5 [style = bold, label=""];
41->36 [style = bold, label=""];
27->46 [style = bold, label=""];
11->47 [style = dashed, label="0"];
30->35 [style = bold, label=""];
12->19 [style = dashed, label="0"];
6->25 [style = dashed, label="0"];
12->4 [style = bold, label=""];
22->20 [style = bold, label=""];
15->9 [style = bold, label=""];
7->45 [style = dashed, label="0"];
3->8 [style = bold, label=""];
37->48 [style = bold, label=""];
33->43 [style = bold, label=""];
8->17 [style = dashed, label="0"];
36->37 [style = bold, label=""];
14->16 [style = dashed, label="0"];
20->24 [style = bold, label=""];
29->47 [style = bold, label=""];
38->40 [style = bold, label=""];
48->34 [style = bold, label=""];
12->34 [style = dashed, label="0"];
7->22 [style = dashed, label="0"];
10->24 [style = dashed, label="0"];
8->12 [style = bold, label=""];
5->41 [style = dashed, label="0"];
40->44 [style = bold, label=""];
8->48 [style = dashed, label="0"];
34->27 [style = bold, label=""];
19->21 [style = bold, label=""];
}
