digraph {
19 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_TRUE,t2),RexUnknownAs.UNKNOWN)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "simplifyAndTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "terms.set(i,t2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Predicate.of(t) != null@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexNode t2 = simplify.simplify(t,RexUnknownAs.UNKNOWN)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "terms.set(i,simplify.simplify(t,RexUnknownAs.UNKNOWN))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "simplifyOrTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "simplifyOrTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Predicate.of(t) == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Predicate.of(t) != null@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.NOT,t2),RexUnknownAs.UNKNOWN)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "i < terms.size()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RexNode t = terms.get(i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->11 [style = dotted, label="true"];
14->5 [style = solid, label="t"];
6->3 [style = bold, label=""];
20->9 [style = bold, label=""];
0->19 [style = dotted, label="true"];
11->17 [style = solid, label="i"];
4->15 [style = bold, label=""];
11->26 [style = solid, label="i"];
3->15 [style = solid, label="i"];
21->24 [style = bold, label=""];
17->8 [style = solid, label="i"];
0->6 [style = dotted, label="true"];
26->11 [style = bold, label=""];
12->27 [style = solid, label="i"];
16->7 [style = dotted, label="true"];
10->6 [style = solid, label="newPredicates"];
0->21 [style = dotted, label="true"];
1->21 [style = bold, label=""];
0->24 [style = dotted, label="true"];
7->25 [style = dashed, label="0"];
9->21 [style = solid, label="simplify"];
0->3 [style = dotted, label="true"];
12->18 [style = solid, label="i"];
6->19 [style = solid, label="simplify"];
9->19 [style = solid, label="simplify"];
16->9 [style = bold, label=""];
12->24 [style = solid, label="i"];
11->28 [style = bold, label=""];
1->4 [style = bold, label=""];
15->13 [style = bold, label=""];
18->1 [style = solid, label="t"];
28->8 [style = dotted, label="true"];
6->26 [style = solid, label="i"];
0->10 [style = dotted, label="true"];
5->26 [style = dashed, label="0"];
4->19 [style = solid, label="t2"];
8->17 [style = dotted, label="true"];
3->21 [style = solid, label="i"];
13->10 [style = solid, label="inverse"];
1->0 [style = bold, label=""];
6->5 [style = solid, label="simplify"];
24->22 [style = solid, label="newPredicates"];
28->17 [style = dotted, label="true"];
11->5 [style = solid, label="i"];
5->17 [style = bold, label=""];
3->0 [style = bold, label=""];
4->13 [style = solid, label="t2"];
6->4 [style = solid, label="simplify"];
27->1 [style = solid, label="t"];
17->5 [style = solid, label="i"];
8->17 [style = bold, label=""];
27->21 [style = solid, label="t"];
18->1 [style = bold, label=""];
11->8 [style = solid, label="i"];
8->14 [style = dotted, label="true"];
18->4 [style = solid, label="t"];
11->8 [style = bold, label=""];
11->28 [style = solid, label="i"];
13->10 [style = bold, label=""];
17->8 [style = bold, label=""];
3->24 [style = solid, label="i"];
0->18 [style = dotted, label="true"];
6->28 [style = solid, label="i"];
8->2 [style = dotted, label="true"];
12->15 [style = solid, label="i"];
9->4 [style = solid, label="simplify"];
6->13 [style = solid, label="simplify"];
18->27 [style = dashed, label="0"];
0->4 [style = dotted, label="true"];
15->24 [style = dashed, label="0"];
8->14 [style = bold, label=""];
0->11 [style = bold, label=""];
9->5 [style = solid, label="simplify"];
19->10 [style = bold, label=""];
17->14 [style = solid, label="i"];
20->7 [style = dotted, label="true"];
15->19 [style = bold, label=""];
4->21 [style = dashed, label="0"];
10->6 [style = bold, label=""];
3->18 [style = solid, label="i"];
28->8 [style = bold, label=""];
11->14 [style = solid, label="i"];
8->17 [style = solid, label="t"];
4->15 [style = solid, label="t2"];
0->18 [style = bold, label=""];
14->2 [style = bold, label=""];
9->12 [style = bold, label=""];
23->25 [style = dotted, label="true"];
14->8 [style = dashed, label="0"];
2->5 [style = bold, label=""];
0->1 [style = dotted, label="true"];
9->26 [style = solid, label="simplify"];
27->1 [style = bold, label=""];
17->26 [style = bold, label=""];
0->13 [style = dotted, label="true"];
12->0 [style = solid, label="i"];
0->6 [style = bold, label=""];
3->27 [style = solid, label="i"];
0->27 [style = bold, label=""];
0->15 [style = dotted, label="true"];
22->21 [style = solid, label="simplify"];
22->26 [style = solid, label="simplify"];
13->19 [style = dashed, label="0"];
24->22 [style = bold, label=""];
12->0 [style = bold, label=""];
6->8 [style = solid, label="i"];
0->22 [style = dotted, label="true"];
3->0 [style = solid, label="i"];
8->26 [style = solid, label="t"];
22->3 [style = bold, label=""];
17->28 [style = bold, label=""];
6->11 [style = solid, label="i"];
8->5 [style = dotted, label="true"];
28->26 [style = dotted, label="true"];
9->13 [style = solid, label="simplify"];
12->21 [style = solid, label="i"];
14->2 [style = solid, label="t"];
19->10 [style = solid, label="inverse"];
12->3 [style = solid, label="i"];
0->27 [style = dotted, label="true"];
23->9 [style = bold, label=""];
2->8 [style = bold, label=""];
6->28 [style = bold, label=""];
}
