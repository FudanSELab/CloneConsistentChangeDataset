digraph {
22 [style = filled, label = "final Method method = (aggregation == MIN? BuiltInMethod.LESSER: BuiltInMethod.GREATER).method@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SqlAggFunction aggregation = info.aggregation()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Expression acc = add.accumulator().get(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "implementNotNullAdd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Method method = builtInMethod.method@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "AggAddContext add@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final BuiltInMethod builtInMethod@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "implementNotNullAdd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Expression arg = add.arguments().get(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Method method = (aggregation == BIT_AND? BuiltInMethod.BIT_AND: BuiltInMethod.BIT_OR).method@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Expression next = Expressions.call(method.getDeclaringClass(),method.getName(),acc,Expressions.unbox(arg))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AggContext info@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "accAdvance(add,acc,next)@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Expression next = Expressions.call(method.getDeclaringClass(),method.getName(),acc,Expressions.unbox(arg))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "AggContext info@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "throw new IllegalArgumentException(\"Unknown \" + aggregation.getName() + \". Only support bit_and, bit_or and bit_xor for bit aggregation function\")@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "AggAddContext add@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "aggregation.kind@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "builtInMethod = BuiltInMethod.BIT_AND@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "accAdvance(add,acc,next)@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builtInMethod = BuiltInMethod.BIT_OR@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "implementNotNullAdd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "builtInMethod = BuiltInMethod.BIT_XOR@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17->19 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
14->17 [style = bold, label=""];
8->10 [style = solid, label="acc"];
2->4 [style = bold, label=""];
9->11 [style = bold, label=""];
17->16 [style = dotted, label="true"];
6->0 [style = solid, label="add"];
12->10 [style = solid, label="add"];
17->18 [style = bold, label=""];
17->19 [style = bold, label=""];
21->8 [style = bold, label=""];
21->20 [style = dotted, label="true"];
15->6 [style = dotted, label="true"];
4->1 [style = bold, label=""];
17->9 [style = dotted, label="true"];
2->22 [style = solid, label="aggregation"];
8->1 [style = solid, label="acc"];
1->0 [style = solid, label="next"];
7->13 [style = solid, label="arg"];
7->1 [style = solid, label="arg"];
19->11 [style = bold, label=""];
2->4 [style = solid, label="aggregation"];
8->0 [style = solid, label="acc"];
2->22 [style = bold, label=""];
17->9 [style = bold, label=""];
3->6 [style = dotted, label="true"];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
8->13 [style = solid, label="acc"];
21->6 [style = dotted, label="true"];
8->7 [style = bold, label=""];
13->10 [style = solid, label="next"];
2->14 [style = bold, label=""];
13->10 [style = bold, label=""];
22->1 [style = bold, label=""];
17->16 [style = bold, label=""];
20->0 [style = solid, label="add"];
16->11 [style = bold, label=""];
15->8 [style = bold, label=""];
3->5 [style = dotted, label="true"];
18->11 [style = bold, label=""];
4->22 [style = dashed, label="0"];
15->12 [style = dotted, label="true"];
1->0 [style = bold, label=""];
7->2 [style = bold, label=""];
}
