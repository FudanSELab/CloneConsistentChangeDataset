digraph {
40 [style = filled, label = "++i@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"PT1h/2011-04-04T02\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(13 * COUNT,announceCount.get())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "segmentLoadDropHandler.stop()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"PT1h/2011-04-04T03\")))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(0,infoDir.listFiles().length)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"P1d/2011-04-02\")))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Set<DataSegment> segments = new HashSet<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(11L,segmentManager.getDataSourceCounts().get(\"test\" + i).longValue())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testLoadCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(2L,segmentManager.getDataSourceCounts().get(\"test_two\" + i).longValue())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"P1d/2011-04-02\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i < COUNT@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"PT1h/2011-04-04T01\")))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "deleteSegmentFromCache(segment)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i < COUNT@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < COUNT@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"1\",Intervals.of(\"P1d/2011-04-02\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"1\",Intervals.of(\"P1d/2011-04-05\")))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SegmentLoadDropHandler handler = new SegmentLoadDropHandler(jsonMapper,new SegmentLoaderConfig(){@Override public File getInfoDir(){return infoDir}@Override public int getNumLoadingThreads(){return 5}@Override public List<StorageLocationConfig> getLocations(){return locations}@Override public int getAnnounceIntervalMillis(){return 50}},announcer,EasyMock.createNiceMock(),segmentManager,new ServerTypeConfig(ServerType.HISTORICAL))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"1\",Intervals.of(\"P1d/2011-04-04\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"1\",Intervals.of(\"P1d/2011-04-02\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "++i@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "++i@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testStartStop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(infoDir.delete())@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(0,infoDir.listFiles().length)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testStartStop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "handler.stop()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int i = 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"1\",Intervals.of(\"P1d/2011-04-01\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "segmentLoadDropHandler.start()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"1\",Intervals.of(\"P1d/2011-04-03\")))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "segments.add(makeSegment(\"test_two\" + i,\"1\",Intervals.of(\"P1d/2011-04-02\")))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertTrue(segmentManager.getDataSourceCounts().isEmpty())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"PT1h/2011-04-04T06\")))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(5 * COUNT,announceCount.get())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "segments.add(makeSegment(\"test\" + i,\"2\",Intervals.of(\"PT1h/2011-04-04T05\")))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(3L,segmentManager.getDataSourceCounts().get(\"test\" + i).longValue())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkCache(segments)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "segments.add(makeSegment(\"test_two\" + i,\"1\",Intervals.of(\"P1d/2011-04-01\")))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(!segmentManager.getDataSourceCounts().isEmpty())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "handler.start()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "writeSegmentToCache(segment)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "checkCache(segments)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(2L,segmentManager.getDataSourceCounts().get(\"test_two\" + i).longValue())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(infoDir.delete())@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "deleteSegmentFromCache(segment)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->10 [style = dotted, label="true"];
35->38 [style = dotted, label="true"];
36->42 [style = bold, label=""];
18->3 [style = dotted, label="true"];
18->20 [style = bold, label=""];
11->12 [style = bold, label=""];
23->30 [style = dashed, label="0"];
35->20 [style = dotted, label="true"];
30->21 [style = bold, label=""];
28->6 [style = dotted, label="true"];
29->47 [style = solid, label="i"];
45->48 [style = bold, label=""];
1->18 [style = bold, label=""];
35->32 [style = dotted, label="true"];
19->23 [style = bold, label=""];
29->37 [style = solid, label="i"];
18->14 [style = dotted, label="true"];
3->9 [style = bold, label=""];
35->18 [style = dotted, label="true"];
29->38 [style = solid, label="i"];
13->1 [style = bold, label=""];
1->14 [style = solid, label="i"];
40->35 [style = bold, label=""];
47->37 [style = bold, label=""];
3->40 [style = bold, label=""];
29->43 [style = solid, label="i"];
12->0 [style = bold, label=""];
0->16 [style = dotted, label="true"];
31->43 [style = bold, label=""];
18->20 [style = dotted, label="true"];
1->18 [style = solid, label="i"];
28->39 [style = dotted, label="true"];
35->46 [style = dotted, label="true"];
29->46 [style = solid, label="i"];
14->39 [style = bold, label=""];
1->9 [style = solid, label="i"];
20->18 [style = bold, label=""];
35->31 [style = dotted, label="true"];
0->19 [style = bold, label=""];
48->33 [style = bold, label=""];
26->4 [style = bold, label=""];
42->28 [style = solid, label="i"];
25->21 [style = bold, label=""];
6->14 [style = bold, label=""];
0->16 [style = bold, label=""];
29->35 [style = solid, label="i"];
35->3 [style = dotted, label="true"];
29->13 [style = solid, label="i"];
28->14 [style = bold, label=""];
27->45 [style = bold, label=""];
22->10 [style = bold, label=""];
18->9 [style = dotted, label="true"];
41->45 [style = solid, label="segments"];
21->11 [style = bold, label=""];
35->44 [style = dotted, label="true"];
20->3 [style = bold, label=""];
29->1 [style = solid, label="i"];
29->31 [style = solid, label="i"];
35->37 [style = dotted, label="true"];
21->15 [style = bold, label=""];
6->28 [style = bold, label=""];
42->28 [style = bold, label=""];
0->22 [style = dotted, label="true"];
39->6 [style = bold, label=""];
19->7 [style = dashed, label="0"];
12->0 [style = solid, label="i"];
29->35 [style = bold, label=""];
24->4 [style = bold, label=""];
35->13 [style = dotted, label="true"];
16->22 [style = bold, label=""];
35->1 [style = dotted, label="true"];
38->13 [style = bold, label=""];
35->27 [style = bold, label=""];
18->6 [style = dotted, label="true"];
1->3 [style = solid, label="i"];
35->44 [style = bold, label=""];
15->11 [style = bold, label=""];
44->47 [style = bold, label=""];
35->40 [style = dotted, label="true"];
34->41 [style = bold, label=""];
29->3 [style = solid, label="i"];
7->25 [style = bold, label=""];
13->25 [style = solid, label="segments"];
2->6 [style = bold, label=""];
4->13 [style = bold, label=""];
28->14 [style = dotted, label="true"];
18->2 [style = dotted, label="true"];
37->46 [style = bold, label=""];
35->47 [style = dotted, label="true"];
1->6 [style = solid, label="i"];
35->43 [style = dotted, label="true"];
10->0 [style = bold, label=""];
15->33 [style = dashed, label="0"];
18->7 [style = bold, label=""];
18->3 [style = bold, label=""];
28->7 [style = bold, label=""];
46->32 [style = bold, label=""];
9->2 [style = bold, label=""];
8->17 [style = bold, label=""];
1->2 [style = solid, label="i"];
41->29 [style = bold, label=""];
32->31 [style = bold, label=""];
23->8 [style = bold, label=""];
29->18 [style = solid, label="i"];
16->14 [style = dashed, label="0"];
29->44 [style = solid, label="i"];
29->20 [style = solid, label="i"];
43->38 [style = bold, label=""];
33->36 [style = bold, label=""];
17->5 [style = bold, label=""];
14->20 [style = bold, label=""];
7->30 [style = bold, label=""];
29->32 [style = solid, label="i"];
}
