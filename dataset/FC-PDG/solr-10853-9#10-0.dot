digraph {
13 [style = filled, label = "commit()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testMergeStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assert(tuples.size() == 5)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "streamFactory.withCollectionZkHost(\"collection1\",zkHost)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexr(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,params)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Map params = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "tuples = getTuples(mstream)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Map paramsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assert(tuples.size() == 5)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assert(tuples.size() == 5)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testUniqueStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "del(\"*:*\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new FieldEqualitor(\"a_f\"))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,\"collection1\",params)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new FieldEqualitor(\"a_f\"))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "indexr(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map paramsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(4,tuples.size())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assert(tuples.size() == 4)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "commit()@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "indexr(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Map params = mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "del(\"*:*\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertOrder(tuples,0,2,1,3,4)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String zkHost = zkServer.getZkAddress()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<Tuple> tuples = getTuples(mstream)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assert(tuples.size() == 5)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "commit()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,\"collection1\",paramsA)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertOrder(tuples,2,0,1,3,4)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertOrder(tuples,0,1,2,3,4)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "tuples = getTuples(mstream)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,\"collection1\",paramsB)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "paramsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "tuples = getTuples(mstream)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "paramsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "indexr(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertOrder(tuples,4,3,2,1,0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testUniqueStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "indexr(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56->29 [style = bold, label=""];
16->0 [style = bold, label=""];
11->20 [style = dashed, label="0"];
5->9 [style = bold, label=""];
17->23 [style = solid, label="ustream"];
2->6 [style = bold, label=""];
2->49 [style = solid, label="zkHost"];
7->5 [style = solid, label="tuples"];
51->43 [style = solid, label="paramsA"];
7->8 [style = bold, label=""];
38->39 [style = bold, label=""];
12->7 [style = bold, label=""];
0->15 [style = bold, label=""];
2->53 [style = solid, label="zkHost"];
39->49 [style = bold, label=""];
30->34 [style = solid, label="paramsA"];
35->45 [style = bold, label=""];
34->41 [style = solid, label="streamA"];
49->40 [style = bold, label=""];
4->16 [style = bold, label=""];
2->38 [style = solid, label="zkHost"];
10->11 [style = bold, label=""];
46->42 [style = bold, label=""];
1->4 [style = bold, label=""];
21->19 [style = bold, label=""];
28->30 [style = bold, label=""];
34->48 [style = bold, label=""];
19->20 [style = bold, label=""];
36->31 [style = bold, label=""];
41->37 [style = bold, label=""];
40->33 [style = solid, label="mstream"];
59->4 [style = bold, label=""];
11->12 [style = bold, label=""];
30->34 [style = bold, label=""];
2->34 [style = solid, label="zkHost"];
56->29 [style = solid, label="mstream"];
33->50 [style = bold, label=""];
32->26 [style = bold, label=""];
26->27 [style = bold, label=""];
5->33 [style = dashed, label="0"];
2->42 [style = solid, label="zkHost"];
53->56 [style = bold, label=""];
20->17 [style = solid, label="stream"];
53->56 [style = solid, label="streamB"];
29->57 [style = bold, label=""];
6->47 [style = bold, label=""];
49->40 [style = solid, label="streamB"];
44->54 [style = bold, label=""];
19->20 [style = solid, label="params"];
52->46 [style = bold, label=""];
32->26 [style = solid, label="mstream"];
15->14 [style = bold, label=""];
25->41 [style = solid, label="streamB"];
55->53 [style = solid, label="paramsB"];
25->41 [style = bold, label=""];
31->32 [style = bold, label=""];
43->36 [style = bold, label=""];
12->7 [style = solid, label="ustream"];
39->49 [style = solid, label="paramsB"];
41->37 [style = solid, label="mstream"];
38->40 [style = solid, label="streamA"];
2->11 [style = solid, label="zkHost"];
42->55 [style = bold, label=""];
4->21 [style = dashed, label="0"];
17->23 [style = bold, label=""];
27->35 [style = bold, label=""];
45->58 [style = bold, label=""];
2->6 [style = solid, label="zkHost"];
40->33 [style = bold, label=""];
36->31 [style = solid, label="paramsB"];
46->42 [style = solid, label="paramsA"];
6->10 [style = bold, label=""];
37->44 [style = bold, label=""];
9->3 [style = bold, label=""];
51->43 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
13->2 [style = bold, label=""];
54->51 [style = bold, label=""];
20->17 [style = bold, label=""];
57->28 [style = bold, label=""];
29->28 [style = solid, label="tuples"];
31->32 [style = solid, label="streamB"];
47->38 [style = solid, label="paramsA"];
8->24 [style = dashed, label="0"];
42->56 [style = solid, label="streamA"];
24->22 [style = bold, label=""];
47->38 [style = bold, label=""];
50->52 [style = bold, label=""];
11->38 [style = dashed, label="0"];
23->24 [style = bold, label=""];
2->25 [style = solid, label="zkHost"];
8->5 [style = bold, label=""];
23->22 [style = solid, label="tuples"];
10->11 [style = solid, label="params"];
26->35 [style = solid, label="tuples"];
11->12 [style = solid, label="stream"];
55->53 [style = bold, label=""];
2->43 [style = solid, label="zkHost"];
48->25 [style = bold, label=""];
48->25 [style = solid, label="paramsB"];
33->52 [style = solid, label="tuples"];
43->32 [style = solid, label="streamA"];
2->31 [style = solid, label="zkHost"];
10->47 [style = dashed, label="0"];
37->54 [style = solid, label="tuples"];
}
