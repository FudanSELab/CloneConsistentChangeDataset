digraph {
22 [style = filled, label = "isOptionSchemaWithNonNullFirstOption(newSchema)@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "copyField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "copy.addProp(AvroSchemaUtil.FIELD_ID_PROP,fieldId)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "String newName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Schema.Field field@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Preconditions.checkArgument(existingFieldId == fieldId,\"Existing field does match with that fetched from name mapping\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "return copy@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "newSchemaReordered = newSchema@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Schema.Field field@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Preconditions.checkArgument(existingFieldId == fieldId,\"Existing field does match with that fetched from name mapping\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Integer fieldId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Schema.Field copy = new Schema.Field(field.name(),newSchema,field.doc(),field.defaultVal(),field.order())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int existingFieldId = AvroSchemaUtil.getFieldId(field)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "newSchemaReordered = AvroSchemaUtil.toOption(AvroSchemaUtil.fromOption(newSchema))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Schema.Field copy = new Schema.Field(newName,newSchema,field.doc(),field.defaultVal(),field.order())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Schema newSchema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "AvroSchemaUtil.hasFieldId(field)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "copy.addProp(prop.getKey(),prop.getValue())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Schema newSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return copy@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "!newName.equals(field.name())@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Schema.Field copy = new Schema.Field(field.name(),newSchemaReordered,field.doc(),AvroSchemaUtil.isOptionSchema(newSchemaReordered)? JsonProperties.NULL_VALUE: null,field.order())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Schema newSchemaReordered@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "int existingFieldId = AvroSchemaUtil.getFieldId(field)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Integer fieldId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Schema newSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "copyField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "copy.addAlias(field.name())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "copy.addProp(prop.getKey(),prop.getValue())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AvroSchemaUtil.hasFieldId(field)@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "copyField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22->19 [style = bold, label=""];
2->0 [style = solid, label="copy"];
19->14 [style = solid, label="newSchemaReordered"];
29->27 [style = bold, label=""];
10->1 [style = dotted, label="true"];
10->2 [style = bold, label=""];
14->3 [style = bold, label=""];
6->4 [style = bold, label=""];
11->21 [style = bold, label=""];
16->21 [style = solid, label="fieldId"];
8->0 [style = bold, label=""];
12->19 [style = solid, label="newSchema"];
2->7 [style = bold, label=""];
27->28 [style = bold, label=""];
26->25 [style = dotted, label="true"];
9->6 [style = solid, label="field"];
13->22 [style = bold, label=""];
29->28 [style = bold, label=""];
0->17 [style = dotted, label="false"];
7->6 [style = bold, label=""];
9->4 [style = solid, label="field"];
9->11 [style = solid, label="field"];
4->8 [style = bold, label=""];
6->3 [style = dotted, label="false"];
17->20 [style = bold, label=""];
0->11 [style = bold, label=""];
15->12 [style = dotted, label="true"];
16->17 [style = solid, label="fieldId"];
26->23 [style = dotted, label="true"];
0->21 [style = dotted, label="true"];
6->4 [style = dotted, label="true"];
14->20 [style = solid, label="copy"];
6->8 [style = dotted, label="true"];
21->20 [style = bold, label=""];
5->8 [style = solid, label="fieldId"];
22->19 [style = dotted, label="false"];
26->24 [style = dotted, label="true"];
29->27 [style = dotted, label="true"];
30->7 [style = bold, label=""];
9->25 [style = dashed, label="0"];
9->0 [style = solid, label="field"];
3->0 [style = bold, label=""];
2->30 [style = dashed, label="0"];
30->28 [style = solid, label="copy"];
6->3 [style = bold, label=""];
12->22 [style = solid, label="newSchema"];
7->29 [style = bold, label=""];
15->13 [style = bold, label=""];
22->18 [style = bold, label=""];
0->17 [style = bold, label=""];
4->8 [style = solid, label="existingFieldId"];
0->11 [style = dotted, label="true"];
12->18 [style = solid, label="newSchema"];
25->30 [style = solid, label="newName"];
15->16 [style = dotted, label="true"];
15->9 [style = dotted, label="true"];
19->14 [style = bold, label=""];
11->21 [style = solid, label="existingFieldId"];
1->2 [style = solid, label="newSchema"];
18->14 [style = bold, label=""];
26->30 [style = bold, label=""];
22->18 [style = dotted, label="true"];
24->30 [style = solid, label="newSchema"];
10->9 [style = dotted, label="true"];
5->3 [style = solid, label="fieldId"];
10->5 [style = dotted, label="true"];
18->14 [style = solid, label="newSchemaReordered"];
}
