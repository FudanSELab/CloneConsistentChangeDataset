digraph {
18 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(recordCount,20)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EmbeddedGobblin embeddedGobblin_2 = createEmbeddedGobblin(\"Recompaction-Second\",basePath)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinCompactionJob(\"Recompaction-First\",basePath)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "writeFileWithContent(jobDir,\"file2\",r1,22)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File jobDir = new File(basePath,\"Identity/MemberAccount/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "FileSystem fs = getFileSystem()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "GenericRecord r1 = createRandomRecord()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "writeFileWithContent(jobDir,\"file1\",r1,20)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "embeddedGobblin_2.setConfiguration(ConfigurationKeys.RECOMPACTION_WRITE_TO_NEW_FOLDER,\"true\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "JobExecutionResult result = embeddedGobblin.run()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testAvroRecompactionWriteToNewPath['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10/compaction_2\")))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10/compaction_1\")))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String basePath = \"/tmp/testRecompaction\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "embeddedGobblin.setConfiguration(ConfigurationKeys.RECOMPACTION_WRITE_TO_NEW_FOLDER,\"true\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(result.isSuccessful())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(recordCount,42)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String basePath = \"/tmp/testRecompactionWriteToNewPath\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "EmbeddedGobblin embeddedGobblin_2 = createEmbeddedGobblinCompactionJob(\"Recompaction-Second\",basePath)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testAvroRecompaction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testAvroRecompaction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "recordCount = InputRecordCountHelper.readRecordCount(fs,(new Path(basePath,new Path(\"Identity/MemberAccount/hourly/2017/04/03/10\"))))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"Recompaction-First\",basePath)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(fs.exists(new Path(basePath,\"Identity/MemberAccount/hourly/2017/04/03/10\")))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "embeddedGobblin_2.run()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "fs.delete(new Path(basePath),true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->14 [style = solid, label="basePath"];
13->10 [style = bold, label=""];
8->16 [style = bold, label=""];
10->18 [style = bold, label=""];
15->23 [style = bold, label=""];
17->25 [style = bold, label=""];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
6->7 [style = solid, label="basePath"];
6->22 [style = solid, label="basePath"];
28->15 [style = bold, label=""];
11->20 [style = dashed, label="0"];
23->10 [style = solid, label="basePath"];
14->17 [style = solid, label="recordCount"];
23->16 [style = solid, label="basePath"];
23->25 [style = solid, label="basePath"];
4->8 [style = solid, label="r1"];
19->20 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
3->14 [style = bold, label=""];
21->15 [style = bold, label=""];
16->24 [style = bold, label=""];
6->14 [style = solid, label="basePath"];
5->15 [style = bold, label=""];
23->26 [style = solid, label="basePath"];
14->17 [style = bold, label=""];
19->11 [style = bold, label=""];
15->6 [style = bold, label=""];
7->0 [style = bold, label=""];
6->16 [style = solid, label="basePath"];
23->11 [style = solid, label="basePath"];
11->2 [style = bold, label=""];
8->22 [style = bold, label=""];
6->10 [style = solid, label="basePath"];
20->2 [style = bold, label=""];
17->12 [style = bold, label=""];
6->20 [style = solid, label="basePath"];
12->25 [style = dashed, label="0"];
15->10 [style = solid, label="fs"];
18->1 [style = bold, label=""];
6->12 [style = solid, label="basePath"];
6->23 [style = dashed, label="0"];
25->26 [style = bold, label=""];
11->27 [style = bold, label=""];
4->19 [style = solid, label="r1"];
4->8 [style = bold, label=""];
23->0 [style = solid, label="basePath"];
23->7 [style = bold, label=""];
6->0 [style = solid, label="basePath"];
0->8 [style = solid, label="jobDir"];
23->7 [style = solid, label="basePath"];
6->7 [style = bold, label=""];
1->19 [style = bold, label=""];
15->14 [style = solid, label="fs"];
6->11 [style = solid, label="basePath"];
10->1 [style = solid, label="recordCount"];
0->19 [style = solid, label="jobDir"];
27->2 [style = bold, label=""];
22->13 [style = bold, label=""];
16->22 [style = dashed, label="0"];
24->13 [style = bold, label=""];
}
