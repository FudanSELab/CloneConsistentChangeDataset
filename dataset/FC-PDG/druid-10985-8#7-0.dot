digraph {
38 [style = filled, label = "Assert.assertEquals(testContainer,lookupReferencesManager.get(\"test\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Thread.sleep(100)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "lookupMap.put(\"testMockForAddGetRemove\",container)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "lookupReferencesManager.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.replay(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!Optional.of(testContainer).equals(lookupReferencesManager.get(\"test\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "lookupReferencesManager.get(\"test\").isPresent()@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testRealModeWithMainThread['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"test\",\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testAddGetRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testRealModeWithMainThread['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39->37 [style = bold, label=""];
36->6 [style = bold, label=""];
21->14 [style = solid, label="request"];
31->25 [style = dotted, label="true"];
31->25 [style = bold, label=""];
16->11 [style = bold, label=""];
28->10 [style = bold, label=""];
9->42 [style = bold, label=""];
8->32 [style = bold, label=""];
41->24 [style = bold, label=""];
27->25 [style = dotted, label="true"];
13->36 [style = dashed, label="0"];
9->33 [style = bold, label=""];
42->45 [style = bold, label=""];
0->17 [style = bold, label=""];
6->21 [style = bold, label=""];
26->32 [style = dashed, label="0"];
32->0 [style = bold, label=""];
37->41 [style = bold, label=""];
0->17 [style = solid, label="testContainer"];
4->19 [style = bold, label=""];
44->41 [style = solid, label="lookupExtractorFactory"];
23->4 [style = bold, label=""];
44->9 [style = solid, label="lookupExtractorFactory"];
17->33 [style = bold, label=""];
5->18 [style = bold, label=""];
7->31 [style = bold, label=""];
20->6 [style = bold, label=""];
5->18 [style = solid, label="responseHolder"];
27->16 [style = bold, label=""];
9->42 [style = solid, label="testContainer"];
33->9 [style = dotted, label="true"];
33->9 [style = bold, label=""];
44->39 [style = bold, label=""];
27->31 [style = dashed, label="0"];
22->23 [style = bold, label=""];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
2->5 [style = solid, label="strResult"];
15->22 [style = bold, label=""];
25->31 [style = bold, label=""];
33->29 [style = bold, label=""];
24->20 [style = bold, label=""];
23->8 [style = solid, label="lookupExtractorFactory"];
25->27 [style = bold, label=""];
21->5 [style = bold, label=""];
3->10 [style = bold, label=""];
24->36 [style = bold, label=""];
26->0 [style = bold, label=""];
24->21 [style = solid, label="request"];
19->45 [style = dashed, label="0"];
1->2 [style = solid, label="lookupMap"];
19->9 [style = bold, label=""];
12->8 [style = bold, label=""];
45->38 [style = bold, label=""];
19->9 [style = dotted, label="true"];
31->30 [style = bold, label=""];
24->6 [style = solid, label="lookupMap"];
7->27 [style = bold, label=""];
4->12 [style = bold, label=""];
9->19 [style = bold, label=""];
29->7 [style = bold, label=""];
6->15 [style = solid, label="strResult"];
14->15 [style = bold, label=""];
15->22 [style = solid, label="responseHolder"];
2->24 [style = bold, label=""];
35->34 [style = bold, label=""];
38->35 [style = bold, label=""];
10->1 [style = bold, label=""];
30->16 [style = bold, label=""];
34->43 [style = bold, label=""];
19->33 [style = dashed, label="0"];
19->7 [style = bold, label=""];
18->14 [style = bold, label=""];
27->25 [style = bold, label=""];
27->34 [style = dashed, label="0"];
23->0 [style = solid, label="lookupExtractorFactory"];
40->44 [style = bold, label=""];
13->2 [style = bold, label=""];
8->26 [style = bold, label=""];
9->38 [style = solid, label="testContainer"];
}
