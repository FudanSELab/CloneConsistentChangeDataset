digraph {
6 [style = filled, label = "testGreaterThanOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tester.checkBoolean(\"1>2\",Boolean.FALSE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkBoolean(\"1.1e2>1.1e2\",Boolean.FALSE)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tester.checkBoolean(\"2>1\",Boolean.TRUE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkBoolean(\"false>true\",Boolean.FALSE)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tester.checkBoolean(\"1.1>1.2\",Boolean.FALSE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "tester.checkBoolean(\"1.1e1>1.2e1\",Boolean.FALSE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "tester.checkBoolean(\"cast(null as boolean) is not true\",Boolean.TRUE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "tester.checkBoolean(\"x'0A000130'>x'0A0001B0'\",Boolean.FALSE)@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testIsNotTrueOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkBoolean(\"true>false\",Boolean.TRUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.checkBoolean(\"cast(1 as SMALLINT)>cast(1 as SMALLINT)\",Boolean.FALSE)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkBoolean(\"DATE '2013-02-23' > DATE '1945-02-24'\",Boolean.TRUE)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkBoolean(\"1.1>1.1\",Boolean.FALSE)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "tester.checkBoolean(\"true is not true\",Boolean.FALSE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.setFor(SqlStdOperatorTable.GREATER_THAN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tester.checkBoolean(\"false is not true\",Boolean.TRUE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tester.checkBoolean(\"cast(1.2e0 as real)>1\",Boolean.TRUE)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tester.checkBoolean(\"cast(-1.1 as real) > cast(-1.2 as real)\",Boolean.TRUE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tester.checkNull(\"3.0>cast(null as double)\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testGreaterThanOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "tester.checkBoolean(\"cast(-1 as TINYINT)>cast(1 as TINYINT)\",Boolean.FALSE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkBoolean(\"1.2>1\",Boolean.TRUE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tester.setFor(SqlStdOperatorTable.IS_NOT_TRUE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "tester.checkFails(\"select ^'a string' is not true^ from (values (1))\",\"(?s)Cannot apply 'IS NOT TRUE' to arguments of type '<CHAR\(8\)> IS NOT TRUE'. Supported form\(s\): '<BOOLEAN> IS NOT TRUE'.*\",false)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "tester.checkBoolean(\"1.2e0>1\",Boolean.TRUE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkBoolean(\"true>true\",Boolean.FALSE)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkBoolean(\"-1.1>-1.2\",Boolean.TRUE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tester.checkBoolean(\"false>false\",Boolean.FALSE)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkBoolean(\"DATE '2013-02-23' > CAST(NULL AS DATE)\",null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->3 [style = bold, label=""];
25->29 [style = bold, label=""];
11->12 [style = bold, label=""];
11->26 [style = dashed, label="0"];
7->28 [style = dashed, label="0"];
8->24 [style = dashed, label="0"];
15->22 [style = bold, label=""];
7->21 [style = bold, label=""];
6->8 [style = bold, label=""];
13->18 [style = bold, label=""];
10->19 [style = bold, label=""];
12->16 [style = bold, label=""];
14->1 [style = bold, label=""];
0->20 [style = bold, label=""];
27->24 [style = bold, label=""];
21->25 [style = dashed, label="0"];
5->11 [style = bold, label=""];
9->17 [style = bold, label=""];
17->13 [style = bold, label=""];
23->8 [style = bold, label=""];
16->14 [style = bold, label=""];
18->10 [style = bold, label=""];
21->5 [style = bold, label=""];
8->7 [style = bold, label=""];
2->0 [style = bold, label=""];
20->9 [style = bold, label=""];
24->28 [style = bold, label=""];
4->15 [style = bold, label=""];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
28->25 [style = bold, label=""];
5->29 [style = dashed, label="0"];
29->26 [style = bold, label=""];
}
