digraph {
11 [style = filled, label = "ensureNoShardData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new IllegalStateException(message)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ensureNoIndexMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Files.isDirectory(indicesPath)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Path indexPath@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Files.isDirectory(indexPath)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "indexStream@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String message = String.format(Locale.ROOT,\"node does not have the %s and %s roles but has index metadata: %s. Use 'elasticsearch-node repurpose' tool to clean up\",DiscoveryNodeRole.DATA_ROLE.roleName(),DiscoveryNodeRole.MASTER_ROLE.roleName(),indexMetadataPaths)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "indexMetadataPaths.isEmpty() == false@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false, but has shard data: \" + shardDataPaths)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Path indicesPath = nodePath.indicesPath@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "shardDataPaths.isEmpty() == false@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shardStream.filter(null).map(null).forEach(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false and \" + Node.NODE_MASTER_SETTING.getKey() + \"=false, but has index metadata: \" + indexMetadataPaths + \". Use 'elasticsearch-node repurpose' tool to clean up\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "List<Path> shardDataPaths = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ensureNoIndexMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
15->14 [style = bold, label=""];
4->6 [style = bold, label=""];
8->18 [style = bold, label=""];
4->0 [style = dotted, label="true"];
0->6 [style = dashed, label="0"];
1->3 [style = bold, label=""];
6->7 [style = solid, label="message"];
8->14 [style = bold, label=""];
4->7 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
10->17 [style = bold, label=""];
12->18 [style = dotted, label="true"];
18->8 [style = dotted, label="true"];
15->17 [style = solid, label="shardDataPaths"];
3->4 [style = bold, label=""];
11->15 [style = bold, label=""];
4->0 [style = bold, label=""];
10->17 [style = dotted, label="true"];
12->10 [style = bold, label=""];
12->13 [style = dotted, label="true"];
2->3 [style = solid, label="nodePaths"];
18->10 [style = bold, label=""];
12->16 [style = dotted, label="true"];
3->0 [style = solid, label="indexMetadataPaths"];
14->12 [style = solid, label="indicesPath"];
2->9 [style = dashed, label="0"];
14->12 [style = bold, label=""];
12->18 [style = bold, label=""];
12->14 [style = bold, label=""];
3->6 [style = solid, label="indexMetadataPaths"];
3->15 [style = dashed, label="0"];
18->8 [style = bold, label=""];
6->7 [style = bold, label=""];
1->2 [style = dotted, label="true"];
18->14 [style = bold, label=""];
5->2 [style = dotted, label="true"];
}
