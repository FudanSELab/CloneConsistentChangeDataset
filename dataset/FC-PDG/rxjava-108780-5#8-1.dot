digraph {
11 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(0L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ts.request(3)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "producerRequestThroughTake['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "requestThroughTakeThatReducesRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "producerRequestThroughTake['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(3,requested.get())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(3)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "final AtomicLong requested = new AtomicLong()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final AtomicLong requested = new AtomicLong()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Flowable.unsafeCreate(new Publisher<Integer>(){@Override public void subscribe(Subscriber<? super Integer> s){s.onSubscribe(new Subscription(){@Override public void request(long n){requested.set(n)}@Override public void cancel(){}})}}).take(2).subscribe(ts)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>(3)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(2,requested.get())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
0->11 [style = dashed, label="0"];
9->11 [style = bold, label=""];
1->7 [style = dashed, label="0"];
0->5 [style = dashed, label="0"];
10->1 [style = bold, label=""];
7->8 [style = bold, label=""];
11->10 [style = bold, label=""];
1->7 [style = bold, label=""];
0->1 [style = solid, label="ts"];
2->1 [style = bold, label=""];
5->1 [style = solid, label="ts"];
11->7 [style = solid, label="ts"];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
}
