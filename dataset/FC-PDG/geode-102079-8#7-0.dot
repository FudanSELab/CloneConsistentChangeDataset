digraph {
6 [style = filled, label = "assertThatThrownBy(null).isInstanceOf()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(arm._getOwner(),times(1)).invokeInvalidateCallbacks(any(),any(),anyBoolean())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(arm._getOwner().isInitialized()).thenReturn(false)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "verify(arm._getOwner(),never()).basicInvalidatePart2(any(),any(),anyBoolean(),anyBoolean())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestableAbstractRegionMap arm = new TestableAbstractRegionMap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AbstractRegionMap.FORCE_INVALIDATE_EVENT = true@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThatThrownBy(null).isInstanceOf()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "invalidateOfNonExistentRegionThrowsEntryNotFoundWithForce['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "invalidateOfAlreadyInvalidEntryReturnsFalseWithForce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "EntryEventImpl event = createEventForInvalidate(arm._getOwner())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(arm._getOwner().isInitialized()).thenReturn(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "invalidateOfAlreadyInvalidEntryReturnsFalseWithForce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(arm.invalidate(event,true,false,false))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->0 [style = bold, label=""];
4->5 [style = bold, label=""];
1->8 [style = bold, label=""];
3->10 [style = bold, label=""];
8->2 [style = bold, label=""];
4->11 [style = dashed, label="0"];
9->8 [style = bold, label=""];
5->7 [style = bold, label=""];
0->4 [style = bold, label=""];
10->6 [style = bold, label=""];
3->0 [style = bold, label=""];
12->8 [style = bold, label=""];
0->11 [style = bold, label=""];
2->3 [style = bold, label=""];
11->5 [style = bold, label=""];
3->4 [style = solid, label="event"];
3->6 [style = bold, label=""];
}
