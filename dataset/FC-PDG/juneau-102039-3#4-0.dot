digraph {
0 [style = filled, label = "assertString(cm).replaceAll(\"\r?\n\",\"|\").is(\"(S1(|k1 = v1c|\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testMergeWithOverwriteNoSignal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1c)'(\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1j)'(\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "contents.add(\"(S1(k1 = v1c\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "cm.commit()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1c)(\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1k)'(\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1f)'(\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "LatchedListener l = new LatchedListener(latch){@Override public void check(ConfigEvents events){assertObject(events).asJson().is(eventList.poll())}}@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "cm.register(l)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(10)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertNull(l.error)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThrown(null).is(\"Unable to store contents of config to store.\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "contents.add(\"(S1(k1 = v1b\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1g)'(\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testMergeWithConstantlyUpdatingFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1e)'(\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertString(cm).replaceAll(\"\r?\n\",\"|\").is(\"(S1(|k1 = v1c|\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "eventList.add(\"(SET(S1/k1 = v1b)(\")@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1d)'(\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "contents.add(\"(S1(k1 = v1c\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNull(l.error)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ConfigMemoryStore s = new ConfigMemoryStore(null){@Override public synchronized String read(String name){return contents.poll()}}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1h)'(\")@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ConfigMap cm = s.getMap(\"Foo.cfg\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cm.unregister(l)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "cm.setEntry(\"S1\",\"k1\",\"v1c\",null,null,null)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "contents.add(\"(S1(k1 = v1a\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final Queue<String> eventList = new ConcurrentLinkedQueue<>()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{s.close()}@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Queue<String> contents = new ConcurrentLinkedQueue<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testMergeWithOverwriteNoSignal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "ConfigMemoryStore s = new ConfigMemoryStore(null){@Override public synchronized String read(String name){return \"(S1(k1 = v1\" + (c++)}}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "wait(latch)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "LatchedListener l = new LatchedListener(latch){@Override public void check(ConfigEvents events){assertObject(events).asString().is(eventList.poll())}}@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{s.close()}@@@38@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1b)'(\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "eventList.add(\"('SET(S1/k1 = v1i)'(\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "cm.unregister(l)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->30 [style = bold, label=""];
9->19 [style = bold, label=""];
14->17 [style = bold, label=""];
9->16 [style = solid, label="l"];
15->22 [style = dashed, label="0"];
27->25 [style = bold, label=""];
13->21 [style = dashed, label="0"];
25->36 [style = bold, label=""];
38->16 [style = solid, label="l"];
12->14 [style = bold, label=""];
37->35 [style = bold, label=""];
20->18 [style = bold, label=""];
11->0 [style = bold, label=""];
4->5 [style = bold, label=""];
28->32 [style = bold, label=""];
7->6 [style = bold, label=""];
5->10 [style = bold, label=""];
14->34 [style = dashed, label="0"];
35->28 [style = bold, label=""];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
16->12 [style = bold, label=""];
38->24 [style = solid, label="l"];
10->22 [style = bold, label=""];
30->33 [style = bold, label=""];
9->11 [style = solid, label="l"];
12->17 [style = bold, label=""];
39->24 [style = bold, label=""];
32->10 [style = bold, label=""];
26->34 [style = bold, label=""];
34->31 [style = bold, label=""];
6->3 [style = bold, label=""];
13->29 [style = bold, label=""];
40->37 [style = bold, label=""];
15->13 [style = bold, label=""];
33->38 [style = bold, label=""];
23->18 [style = bold, label=""];
8->7 [style = bold, label=""];
10->15 [style = bold, label=""];
22->21 [style = bold, label=""];
13->9 [style = bold, label=""];
18->8 [style = bold, label=""];
0->2 [style = bold, label=""];
21->9 [style = bold, label=""];
5->9 [style = solid, label="latch"];
5->36 [style = dashed, label="0"];
36->40 [style = bold, label=""];
24->26 [style = bold, label=""];
36->31 [style = solid, label="latch"];
3->4 [style = bold, label=""];
31->19 [style = bold, label=""];
5->17 [style = solid, label="latch"];
36->38 [style = solid, label="latch"];
17->1 [style = bold, label=""];
38->39 [style = bold, label=""];
}
