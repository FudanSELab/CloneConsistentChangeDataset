digraph {
19 [style = filled, label = "Assert.assertTrue(comparator.compare(ir3,ir2) < 0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(0,comparator.compare(ir3,ir3))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(comparator.compare(ir5,ir6) > 0)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "IncrementalIndex.IncrementalIndexRowResult tndResult = index.toIncrementalIndexRow(toMapRow(time + 1,\"billy\",\"A\",\"joe\",Arrays.asList(\"A\",\"B\")))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(comparator.compare(ir6,ir1) > 0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "IncrementalIndexRow ir5 = index.toIncrementalIndexRow(toMapRow(time + 1,\"billy\",\"A\",\"joe\",Arrays.asList(\"A\",\"B\"))).getIncrementalIndexRow()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testBasic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(182,td1.estimateBytesInMemory())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IncrementalIndexRow ir2 = index.toIncrementalIndexRow(toMapRow(time,\"billy\",\"A\",\"joe\",\"A\")).getIncrementalIndexRow()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(comparator.compare(ir2,ir3) > 0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "IncrementalIndexRow ir4 = index.toIncrementalIndexRow(toMapRow(time + 1,\"billy\",\"A\",\"joe\",\"B\")).getIncrementalIndexRow()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "IncrementalIndexRow td1 = tndResult.getIncrementalIndexRow()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(comparator.compare(ir4,ir6) > 0)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "IncrementalIndex index = new IncrementalIndex.Builder().setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\")).setMaxRowCount(10000).setMaxBytesInMemory(1000).buildOnheap()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Comparator<IncrementalIndexRow> comparator = index.dimsComparator()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(comparator.compare(ir1,ir2) > 0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long time = System.currentTimeMillis()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(comparator.compare(ir2,ir1) < 0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testIncrementalIndexRowSizeArr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IncrementalIndex<?> index = new IncrementalIndex.Builder().setSimpleTestingIndexSchema(new CountAggregatorFactory(\"cnt\")).setMaxRowCount(1000).buildOnheap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertTrue(comparator.compare(ir1,ir3) > 0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(0,comparator.compare(ir2,ir2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertTrue(comparator.compare(ir3,ir1) < 0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(comparator.compare(ir5,ir4) < 0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "IncrementalIndexRow ir3 = index.toIncrementalIndexRow(toMapRow(time,\"billy\",\"A\")).getIncrementalIndexRow()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "IncrementalIndexRow ir1 = index.toIncrementalIndexRow(toMapRow(time,\"billy\",\"A\",\"joe\",\"B\")).getIncrementalIndexRow()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(comparator.compare(ir6,ir2) > 0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertTrue(comparator.compare(ir4,ir5) > 0)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(0,comparator.compare(ir1,ir1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IncrementalIndex<?> index = indexCreator.createIndex()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "IncrementalIndexRow ir6 = index.toIncrementalIndexRow(toMapRow(time + 1)).getIncrementalIndexRow()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testIncrementalIndexRowSizeArr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Assert.assertTrue(comparator.compare(ir6,ir3) > 0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->30 [style = bold, label=""];
2->4 [style = solid, label="time"];
15->19 [style = solid, label="ir2"];
12->25 [style = bold, label=""];
9->19 [style = bold, label=""];
23->14 [style = solid, label="ir4"];
30->31 [style = solid, label="ir5"];
29->27 [style = bold, label=""];
15->9 [style = solid, label="ir2"];
24->9 [style = solid, label="ir3"];
22->8 [style = bold, label=""];
2->4 [style = bold, label=""];
10->2 [style = bold, label=""];
11->12 [style = bold, label=""];
24->19 [style = solid, label="ir3"];
21->15 [style = bold, label=""];
26->13 [style = bold, label=""];
24->27 [style = solid, label="ir3"];
28->16 [style = solid, label="ir6"];
24->23 [style = bold, label=""];
28->18 [style = solid, label="ir6"];
18->22 [style = bold, label=""];
4->21 [style = dashed, label="0"];
30->17 [style = solid, label="ir5"];
16->18 [style = bold, label=""];
28->22 [style = solid, label="ir6"];
24->29 [style = solid, label="ir3"];
23->8 [style = solid, label="ir4"];
4->5 [style = bold, label=""];
25->26 [style = bold, label=""];
21->16 [style = solid, label="ir1"];
17->14 [style = bold, label=""];
21->20 [style = solid, label="ir1"];
15->24 [style = bold, label=""];
21->29 [style = solid, label="ir1"];
28->17 [style = solid, label="ir6"];
8->17 [style = bold, label=""];
15->25 [style = solid, label="ir2"];
0->1 [style = bold, label=""];
27->16 [style = bold, label=""];
30->14 [style = solid, label="ir5"];
15->13 [style = solid, label="ir2"];
24->26 [style = solid, label="ir3"];
14->31 [style = bold, label=""];
28->8 [style = solid, label="ir6"];
19->29 [style = bold, label=""];
21->27 [style = solid, label="ir1"];
32->10 [style = bold, label=""];
15->18 [style = solid, label="ir2"];
1->10 [style = dashed, label="0"];
30->28 [style = bold, label=""];
24->22 [style = solid, label="ir3"];
15->20 [style = solid, label="ir2"];
5->3 [style = bold, label=""];
20->9 [style = bold, label=""];
23->31 [style = solid, label="ir4"];
13->20 [style = bold, label=""];
6->7 [style = bold, label=""];
28->11 [style = bold, label=""];
21->13 [style = solid, label="ir1"];
1->2 [style = bold, label=""];
5->15 [style = dashed, label="0"];
2->21 [style = bold, label=""];
21->12 [style = solid, label="ir1"];
7->2 [style = bold, label=""];
}
