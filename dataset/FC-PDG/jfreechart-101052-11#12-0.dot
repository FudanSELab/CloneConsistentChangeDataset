digraph {
4 [style = filled, label = "assertEquals(v1,v2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "v1.addValue(\"Key 3\",new Double(42))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "v1.addValue(\"Key 3\",42)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(v1.equals(v2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test 2\",45.5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertTrue(v2.equals(v1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "v1.addValue(\"Key 2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "DefaultKeyedValues<String> v1 = new DefaultKeyedValues<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test 1\",45.5)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test\",45.6)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DefaultKeyedValues<String> v2 = (DefaultKeyedValues)TestUtils.serialised(v1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "v1.addValue(\"Key 1\",23)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DefaultKeyedValue<String> v2 = new DefaultKeyedValue<>(\"Test\",45.5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "v1.addValue(\"Key 1\",new Double(23))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3->4 [style = solid, label="v2"];
6->3 [style = bold, label=""];
6->8 [style = dashed, label="0"];
10->20 [style = bold, label=""];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
5->3 [style = solid, label="v1"];
2->1 [style = bold, label=""];
16->17 [style = solid, label="v2"];
8->3 [style = bold, label=""];
18->15 [style = bold, label=""];
19->10 [style = bold, label=""];
11->12 [style = bold, label=""];
12->16 [style = bold, label=""];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
18->15 [style = solid, label="v2"];
2->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
5->2 [style = bold, label=""];
1->6 [style = bold, label=""];
20->11 [style = solid, label="v2"];
9->5 [style = bold, label=""];
14->19 [style = solid, label="v1"];
5->7 [style = bold, label=""];
14->18 [style = bold, label=""];
3->10 [style = dashed, label="0"];
5->4 [style = solid, label="v1"];
13->14 [style = bold, label=""];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
