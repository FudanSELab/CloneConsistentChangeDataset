digraph {
33 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(6),TASK_CONFIG_STRUCTS.get(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<ConsumerRecord<String,byte((>> existingRecords = Arrays.asList(new ConsumerRecord<>(TOPIC,0,0,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0)),new ConsumerRecord<>(TOPIC,0,1,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(1)),new ConsumerRecord<>(TOPIC,0,2,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(2)),new ConsumerRecord<>(TOPIC,0,3,0L,TimestampType.CREATE_TIME,0L,0,0,COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(3)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectConfigure()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(0)))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(1)))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectStart(existingRecords,deserialized)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(0),CONNECTOR_CONFIG_STRUCTS.get(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(2),configState.connectorConfig(CONNECTOR_IDS.get(0)))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(7,configState.offset())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "LinkedHashMap<byte((,Struct> deserialized = new LinkedHashMap()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectStop()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "configStorage.stop()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(5),CONNECTOR_CONFIG_STRUCTS.get(2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PowerMock.replayAll()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PowerMock.replayAll()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectRead(TARGET_STATE_KEYS.get(0),CONFIGS_SERIALIZED.get(0),TARGET_STATE_PAUSED)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "logOffset = 7@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(2),TASK_CONFIG_STRUCTS.get(0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "configUpdateListener.onConnectorTargetStateChange(CONNECTOR_IDS.get(0))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(4),TASKS_COMMIT_STRUCT_TWO_TASK_CONNECTOR)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testBackgroundUpdateTargetState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testBackgroundUpdateTargetState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(3),CONNECTOR_CONFIG_STRUCTS.get(1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Arrays.asList(CONNECTOR_IDS.get(0)),new ArrayList<>(configState.connectors()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expectStart(existingRecords,deserialized)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(3),TASKS_COMMIT_STRUCT_TWO_TASK_CONNECTOR)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectStop()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "PowerMock.verifyAll()@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Collections.EMPTY_SET,configState.inconsistentConnectors())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(TargetState.STARTED,configState.targetState(CONNECTOR_IDS.get(0)))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "configStorage.start()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "logOffset = 5@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(1),TASK_CONFIG_STRUCTS.get(0))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)),configState.tasks(CONNECTOR_IDS.get(0)))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "LinkedHashMap<byte((,Struct> deserialized = new LinkedHashMap<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<ConsumerRecord<String,byte((>> existingRecords = Arrays.asList(new ConsumerRecord<>(TOPIC,0,0,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0)),new ConsumerRecord<>(TOPIC,0,1,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(1)),new ConsumerRecord<>(TOPIC,0,2,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(2)),new ConsumerRecord<>(TOPIC,0,3,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(3)),new ConsumerRecord<>(TOPIC,0,4,0L,TimestampType.CREATE_TIME,0L,0,0,COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(4)),new ConsumerRecord<>(TOPIC,0,5,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(5)),new ConsumerRecord<>(TOPIC,0,6,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(6)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ClusterConfigState configState = configStorage.snapshot()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
11->16 [style = bold, label=""];
28->29 [style = bold, label=""];
17->26 [style = bold, label=""];
2->6 [style = solid, label="deserialized"];
0->37 [style = dashed, label="0"];
9->0 [style = bold, label=""];
29->30 [style = bold, label=""];
31->11 [style = solid, label="existingRecords"];
0->17 [style = bold, label=""];
25->36 [style = bold, label=""];
12->15 [style = bold, label=""];
3->11 [style = bold, label=""];
30->25 [style = bold, label=""];
31->2 [style = bold, label=""];
18->2 [style = bold, label=""];
16->19 [style = bold, label=""];
15->16 [style = bold, label=""];
2->11 [style = solid, label="deserialized"];
2->4 [style = bold, label=""];
10->6 [style = bold, label=""];
7->3 [style = bold, label=""];
39->33 [style = bold, label=""];
38->14 [style = bold, label=""];
20->10 [style = bold, label=""];
22->4 [style = bold, label=""];
23->14 [style = bold, label=""];
5->21 [style = bold, label=""];
20->35 [style = dashed, label="0"];
26->27 [style = bold, label=""];
18->22 [style = bold, label=""];
13->12 [style = bold, label=""];
21->20 [style = bold, label=""];
19->9 [style = bold, label=""];
24->11 [style = bold, label=""];
33->24 [style = bold, label=""];
11->13 [style = bold, label=""];
34->39 [style = bold, label=""];
14->31 [style = bold, label=""];
22->6 [style = solid, label="deserialized"];
37->32 [style = bold, label=""];
14->18 [style = bold, label=""];
1->14 [style = bold, label=""];
8->37 [style = bold, label=""];
18->6 [style = solid, label="existingRecords"];
21->35 [style = bold, label=""];
6->7 [style = bold, label=""];
35->34 [style = bold, label=""];
2->22 [style = dashed, label="0"];
32->28 [style = bold, label=""];
4->5 [style = bold, label=""];
27->8 [style = bold, label=""];
18->31 [style = dashed, label="0"];
}
