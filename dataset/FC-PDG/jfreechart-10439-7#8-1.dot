digraph {
3 [style = filled, label = "r.setAutoPopulateSeriesFillPaint(false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Color.WHITE,r.lookupSeriesFillPaint(0))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Color.GRAY,r.getDefaultOutlinePaint())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(DefaultDrawingSupplier.DEFAULT_FILL_PAINT_SEQUENCE(0(,r.lookupSeriesFillPaint(0))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNull(r.getSeriesOutlinePaint(0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testOutlinePaintLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNull(r.getSeriesFillPaint(0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "r.setAutoPopulateSeriesOutlinePaint(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertNotNull(r.getSeriesOutlinePaint(0))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "new CategoryPlot(null,new CategoryAxis(\"Category\"),new NumberAxis(\"Value\"),r)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Color.GRAY,r.lookupSeriesOutlinePaint(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertNotNull(r.getSeriesFillPaint(0))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "r.setAutoPopulateSeriesOutlinePaint(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CategoryPlot<String,String> plot = new CategoryPlot<>(null,new CategoryAxis(\"Category\"),new NumberAxis(\"Value\"),r)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(DefaultDrawingSupplier.DEFAULT_OUTLINE_PAINT_SEQUENCE(0(,r.lookupSeriesOutlinePaint(0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testFillPaintLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testFillPaintLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "r.setAutoPopulateSeriesFillPaint(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BarRenderer r = new BarRenderer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Color.WHITE,r.getDefaultFillPaint())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->7 [style = solid, label="r"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
4->18 [style = dashed, label="0"];
5->14 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->19 [style = dashed, label="0"];
2->10 [style = solid, label="r"];
2->18 [style = bold, label=""];
8->12 [style = dashed, label="0"];
8->6 [style = bold, label=""];
15->19 [style = bold, label=""];
2->4 [style = bold, label=""];
11->2 [style = bold, label=""];
14->7 [style = bold, label=""];
7->9 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
6->13 [style = dashed, label="0"];
17->2 [style = bold, label=""];
3->8 [style = bold, label=""];
5->7 [style = bold, label=""];
7->15 [style = bold, label=""];
7->10 [style = dashed, label="0"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
16->12 [style = bold, label=""];
13->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
9->15 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
