digraph {
11 [style = filled, label = "c.get().header(age((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "c.get().header(of((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "c.get().header(of((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "c.get().header(age(null)).run().assertBody().isEmpty()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "c.get().header(age(VALUE)).run().assertBody().is(VALUE.toString())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE.toString())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE.toString())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "c.get().header(new Range(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "c.get().header(age((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "c.get().header(of(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "c.get().header(new Age(VALUE.toString())).run().assertBody().is(VALUE.toString())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "c.get().header(age(null)).run().assertBody().is(VALUE.toString())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "c.get().header(of((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "c.get().header(age((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "c.get().header(of(null)).run().assertBody().is(VALUE.toString())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "c.get().header(of(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "c.get().header(age(VALUE)).run().assertBody().is(VALUE.toString())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "c.get().header(of(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
8->19 [style = dashed, label="0"];
19->18 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
9->22 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
5->20 [style = dashed, label="0"];
6->10 [style = dashed, label="0"];
0->7 [style = bold, label=""];
15->17 [style = bold, label=""];
17->12 [style = bold, label=""];
23->22 [style = bold, label=""];
10->16 [style = bold, label=""];
22->20 [style = bold, label=""];
12->8 [style = bold, label=""];
9->17 [style = dashed, label="0"];
7->23 [style = bold, label=""];
9->5 [style = bold, label=""];
14->15 [style = bold, label=""];
20->19 [style = bold, label=""];
1->23 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
21->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
