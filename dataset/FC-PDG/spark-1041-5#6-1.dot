digraph {
3 [style = filled, label = "Random rand = new Random()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int size = 64000@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "hashcodes.add(hasher.hashUnsafeWords(bytes,Platform.BYTE_ARRAY_OFFSET,byteArrSize))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "byte(( strBytes = String.valueOf(i).getBytes(StandardCharsets.UTF_8)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(hashcodes.size() > size * 0.95d)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "i < size@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "randomizedStressTestBytes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "int size = 65536@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MemoryBlock mb = ByteArrayMemoryBlock.fromArray(bytes)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "hashcodes.add(hasher.hashUnsafeWordsBlock(mb))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "randomizedStressTestBytes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int byteArrSize = 8@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(hashcodes.size() > size * 0.95d)@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int byteArrSize = rand.nextInt(100) * 8@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MemoryBlock mb = ByteArrayMemoryBlock.fromArray(paddedBytes)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(hasher.hashUnsafeWordsBlock(mb),hasher.hashUnsafeWordsBlock(mb))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(hasher.hashUnsafeWordsBlock(mb),hasher.hashUnsafeWordsBlock(mb))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(hasher.hashUnsafeWords(bytes,Platform.BYTE_ARRAY_OFFSET,byteArrSize),hasher.hashUnsafeWords(bytes,Platform.BYTE_ARRAY_OFFSET,byteArrSize))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "byte(( bytes = new byte((((@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.arraycopy(strBytes,0,paddedBytes,0,strBytes.length)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Set<Long> hashcodes = new HashSet<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "byte(( paddedBytes = new byte((((@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "randomizedStressTestPaddedStrings['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "rand.nextBytes(bytes)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
6->17 [style = bold, label=""];
24->22 [style = solid, label="paddedBytes"];
11->7 [style = dotted, label="true"];
4->11 [style = solid, label="i"];
0->17 [style = solid, label="byteArrSize"];
23->20 [style = bold, label=""];
18->24 [style = bold, label=""];
5->9 [style = solid, label="i"];
9->11 [style = bold, label=""];
5->9 [style = bold, label=""];
25->22 [style = bold, label=""];
2->6 [style = bold, label=""];
11->10 [style = dotted, label="true"];
7->14 [style = dashed, label="0"];
9->4 [style = bold, label=""];
22->13 [style = solid, label="mb"];
0->2 [style = bold, label=""];
10->7 [style = solid, label="mb"];
9->11 [style = dotted, label="true"];
11->14 [style = dotted, label="true"];
1->3 [style = bold, label=""];
22->21 [style = bold, label=""];
11->17 [style = dotted, label="true"];
11->9 [style = solid, label="i"];
11->12 [style = bold, label=""];
4->18 [style = bold, label=""];
0->4 [style = dashed, label="0"];
5->11 [style = solid, label="i"];
11->4 [style = dotted, label="true"];
11->13 [style = dotted, label="true"];
9->21 [style = dotted, label="true"];
11->9 [style = bold, label=""];
10->13 [style = solid, label="mb"];
10->7 [style = bold, label=""];
13->11 [style = bold, label=""];
1->15 [style = solid, label="size"];
11->15 [style = bold, label=""];
18->25 [style = solid, label="strBytes"];
9->25 [style = dotted, label="true"];
20->5 [style = bold, label=""];
0->14 [style = solid, label="byteArrSize"];
9->11 [style = solid, label="i"];
2->17 [style = solid, label="bytes"];
8->1 [style = bold, label=""];
23->9 [style = solid, label="size"];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
1->12 [style = solid, label="size"];
24->25 [style = solid, label="paddedBytes"];
11->2 [style = dotted, label="true"];
9->24 [style = dotted, label="true"];
16->1 [style = bold, label=""];
17->14 [style = bold, label=""];
11->6 [style = dotted, label="true"];
24->25 [style = bold, label=""];
19->23 [style = bold, label=""];
6->10 [style = bold, label=""];
11->0 [style = dotted, label="true"];
9->13 [style = dotted, label="true"];
6->24 [style = dashed, label="0"];
2->6 [style = solid, label="bytes"];
2->18 [style = dashed, label="0"];
1->11 [style = solid, label="size"];
22->21 [style = solid, label="mb"];
9->4 [style = dotted, label="true"];
2->10 [style = solid, label="bytes"];
9->18 [style = dotted, label="true"];
9->12 [style = bold, label=""];
23->12 [style = solid, label="size"];
9->4 [style = solid, label="i"];
4->11 [style = bold, label=""];
9->22 [style = dotted, label="true"];
1->23 [style = dashed, label="0"];
2->14 [style = solid, label="bytes"];
21->13 [style = bold, label=""];
14->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
