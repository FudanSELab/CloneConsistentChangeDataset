digraph {
37 [style = filled, label = "int mode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "when(network.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "when(network.createKvStateTaskRegistry(any(),any())).thenReturn(mockKvRegistry)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "StreamStateHandle state@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Collection<OperatorStateHandle> operatorStateHandles = Collections.singletonList(new OperatorStateHandle(operatorStateMetadata,state))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(jobVertexID,\"test task name\",1,1,.getName(),taskConfig)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "operatorStateBackend = operatorStateHandles@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "when(networkEnvironment.createKvStateTaskRegistry(any(),any())).thenReturn(mock())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"test task name\",1,11,.getName(),taskConfig)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "StreamConfig cfg = new StreamConfig(taskConfig)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "cfg.setStateBackend(backend)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "streamConfig.setOperatorID(operatorID)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Configuration taskConfig = new Configuration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "operatorStateMetadata.put(DefaultOperatorStateBackend.DEFAULT_OPERATOR_STATE_NAME,metaInfo)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<KeyedStateHandle> keyedStateHandles = Collections.singletonList(new KeyGroupsStateHandle(keyGroupRangeOffsets,state))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mode@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,null,mock(),mock(),network,mock(),mock(),mock(),checkpointResponder,blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b61c16),new TestingTaskManagerRuntimeInfo(),new UnregisteredTaskMetricsGroup(),mock(),mock(),Executors.directExecutor())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "cfg.setStreamOperator(op)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "keyedStateFromStream = keyedStateHandles@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "NetworkEnvironment network = mock()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"test job name\",new SerializedValue<>(executionConfig),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Configuration taskConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "throw new IllegalArgumentException()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Configuration taskConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "when(networkEnvironment.getTaskEventDispatcher()).thenReturn(taskEventDispatcher)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StreamStateHandle state@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "StreamOperator<?> op@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "AbstractStateBackend backend@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "executionConfig.setFailTaskOnCheckpointError(failOnCheckpointErrors)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "NetworkEnvironment networkEnvironment = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TaskEventDispatcher taskEventDispatcher = new TaskEventDispatcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TaskStateSnapshot stateSnapshot = new TaskStateSnapshot()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "KeyGroupRangeOffsets keyGroupRangeOffsets = new KeyGroupRangeOffsets(new KeyGroupRange(0,0))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(operatorStateBackend,operatorStateStream,keyedStateFromBackend,keyedStateFromStream)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Collection<OperatorStateHandle> operatorStateStream = Collections.emptyList()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "keyedStateFromBackend = keyedStateHandles@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "boolean failOnCheckpointErrors@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "OperatorStateHandle.StateMetaInfo metaInfo = new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b61a5c,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "CheckpointResponder checkpointResponder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "JobVertexID jobVertexID = new JobVertexID()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "operatorStateStream = operatorStateHandles@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StreamConfig streamConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "stateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "TaskKvStateRegistry mockKvRegistry = mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromBackend = Collections.emptyList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,OperatorStateHandle.StateMetaInfo> operatorStateMetadata = new HashMap<>(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Collection<OperatorStateHandle> operatorStateBackend = Collections.emptyList()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "cfg.setOperatorID(new OperatorID())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "OperatorID operatorID = OperatorID.fromJobVertexID(jobVertexID)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Collection<KeyedStateHandle> keyedStateFromStream = Collections.emptyList()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int mode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,stateSnapshot,mock(),mock(),networkEnvironment,mock(),mock(),mock(),mock(),blobService,new BlobLibraryCacheManager(blobService.getPermanentBlobService(),FlinkUserCodeClassLoaders.ResolveOrder.CHILD_FIRST,new String((((),new FileCache(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b61b40),new TestingTaskManagerRuntimeInfo(),UnregisteredMetricGroups.createUnregisteredTaskMetricGroup(),mock(),mock(),mock())@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27->7 [style = solid, label="keyedStateFromStream"];
18->3 [style = bold, label=""];
31->3 [style = solid, label="keyedStateHandles"];
9->11 [style = bold, label=""];
52->45 [style = solid, label="executionConfig"];
20->26 [style = bold, label=""];
14->9 [style = solid, label="jobVertexID"];
10->25 [style = solid, label="taskInformation"];
52->59 [style = bold, label=""];
14->10 [style = solid, label="jobVertexID"];
7->14 [style = bold, label=""];
19->1 [style = bold, label=""];
48->51 [style = bold, label=""];
18->22 [style = bold, label=""];
34->56 [style = dashed, label="0"];
1->30 [style = solid, label="taskEventDispatcher"];
18->3 [style = dotted, label="true"];
18->32 [style = bold, label=""];
28->25 [style = bold, label=""];
23->31 [style = solid, label="state"];
14->9 [style = bold, label=""];
5->18 [style = solid, label="mode"];
35->37 [style = dotted, label="true"];
13->22 [style = solid, label="operatorStateHandles"];
13->31 [style = bold, label=""];
3->7 [style = solid, label="keyedStateFromStream"];
29->13 [style = solid, label="state"];
23->13 [style = solid, label="state"];
13->24 [style = solid, label="operatorStateHandles"];
8->7 [style = solid, label="keyedStateFromBackend"];
0->17 [style = bold, label=""];
2->34 [style = bold, label=""];
4->25 [style = solid, label="jobInformation"];
35->38 [style = dotted, label="true"];
50->43 [style = dotted, label="true"];
18->8 [style = dotted, label="true"];
32->7 [style = bold, label=""];
26->6 [style = bold, label=""];
29->31 [style = solid, label="state"];
53->41 [style = solid, label="network"];
22->7 [style = bold, label=""];
46->41 [style = bold, label=""];
25->41 [style = dashed, label="0"];
54->49 [style = solid, label="op"];
44->55 [style = bold, label=""];
19->29 [style = dotted, label="true"];
7->17 [style = solid, label="operatorSubtaskState"];
3->7 [style = bold, label=""];
26->7 [style = solid, label="operatorStateStream"];
24->7 [style = solid, label="operatorStateBackend"];
37->18 [style = solid, label="mode"];
53->56 [style = bold, label=""];
6->13 [style = solid, label="operatorStateMetadata"];
24->7 [style = bold, label=""];
56->40 [style = bold, label=""];
27->20 [style = bold, label=""];
12->31 [style = solid, label="keyGroupRangeOffsets"];
30->15 [style = bold, label=""];
0->25 [style = solid, label="stateSnapshot"];
35->29 [style = dotted, label="true"];
4->10 [style = bold, label=""];
18->24 [style = bold, label=""];
16->10 [style = solid, label="taskConfig"];
9->17 [style = solid, label="operatorID"];
22->7 [style = solid, label="operatorStateStream"];
50->54 [style = dotted, label="true"];
45->41 [style = solid, label="jobInformation"];
6->21 [style = bold, label=""];
59->45 [style = bold, label=""];
18->24 [style = dotted, label="true"];
57->58 [style = solid, label="backend"];
43->41 [style = solid, label="checkpointResponder"];
33->12 [style = bold, label=""];
50->48 [style = bold, label=""];
39->41 [style = solid, label="taskInformation"];
48->39 [style = solid, label="taskConfig"];
12->13 [style = bold, label=""];
50->57 [style = dotted, label="true"];
47->59 [style = solid, label="failOnCheckpointErrors"];
38->10 [style = solid, label="taskConfig"];
42->58 [style = bold, label=""];
35->1 [style = bold, label=""];
21->33 [style = solid, label="metaInfo"];
19->5 [style = dotted, label="true"];
1->2 [style = bold, label=""];
18->8 [style = bold, label=""];
17->4 [style = bold, label=""];
45->39 [style = bold, label=""];
18->22 [style = dotted, label="true"];
49->42 [style = bold, label=""];
55->40 [style = solid, label="taskEventDispatcher"];
29->57 [style = dashed, label="0"];
30->40 [style = dashed, label="0"];
48->51 [style = solid, label="taskConfig"];
10->28 [style = bold, label=""];
39->44 [style = bold, label=""];
35->36 [style = dotted, label="true"];
21->33 [style = bold, label=""];
19->23 [style = dotted, label="true"];
2->25 [style = solid, label="networkEnvironment"];
28->25 [style = solid, label="blobService"];
31->18 [style = bold, label=""];
51->49 [style = bold, label=""];
15->7 [style = solid, label="keyedStateFromBackend"];
50->47 [style = dotted, label="true"];
18->32 [style = dotted, label="true"];
34->30 [style = bold, label=""];
8->7 [style = bold, label=""];
46->41 [style = solid, label="blobService"];
40->46 [style = bold, label=""];
2->53 [style = dashed, label="0"];
44->56 [style = solid, label="mockKvRegistry"];
11->0 [style = bold, label=""];
9->11 [style = solid, label="operatorID"];
55->53 [style = bold, label=""];
19->16 [style = dotted, label="true"];
20->7 [style = solid, label="operatorStateBackend"];
31->8 [style = solid, label="keyedStateHandles"];
58->52 [style = bold, label=""];
15->27 [style = bold, label=""];
}
