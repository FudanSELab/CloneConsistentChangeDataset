digraph {
1 [style = filled, label = "check(\"true\",x.isAutoCloseStreams())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "check(\"UTF-8\",x.getStreamCharset())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "check(\"false\",x.isAutoCloseStreams())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "check(\"1\",x.getDebugOutputLines())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "check(\"false\",x.isStrict())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "check(Charset.defaultCharset().toString(),x.getFileCharset())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "check(\"US-ASCII\",x.getStreamCharset())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "check(\"false\",x.isTrimStrings())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "check(\"true\",x.isTrimStrings())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "check(\"true\",x.isUnbuffered())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "basicReaderParser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "JsonParserSession x = JsonParser.create().apply(al).build().createSession()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "JsonParserSession x = JsonParser.create().applyAnnotations(al,sr).build().createSession()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "basicReaderParser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AnnotationList al = c.getAnnotationList()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "check(\"US-ASCII\",x.getFileCharset())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "check(\"true\",x.isStrict())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "check(\"5\",x.getDebugOutputLines())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "noAnnotationReaderParser['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "check(\"AA\",x.getListener())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "check(null,x.getListener())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "AnnotationList al = a.getAnnotationList()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "check(\"false\",x.isUnbuffered())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<AnnotationWork> al = a.getAnnotationList().getWork(sr)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->13 [style = dashed, label="0"];
10->15 [style = dashed, label="0"];
9->16 [style = dashed, label="0"];
7->21 [style = dashed, label="0"];
23->5 [style = bold, label=""];
18->23 [style = bold, label=""];
9->2 [style = bold, label=""];
7->10 [style = bold, label=""];
4->6 [style = bold, label=""];
21->15 [style = bold, label=""];
2->3 [style = bold, label=""];
1->19 [style = dashed, label="0"];
11->12 [style = bold, label=""];
17->22 [style = bold, label=""];
0->22 [style = dashed, label="0"];
13->1 [style = bold, label=""];
1->9 [style = bold, label=""];
19->16 [style = bold, label=""];
6->12 [style = dashed, label="0"];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
5->19 [style = bold, label=""];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
2->14 [style = dashed, label="0"];
10->8 [style = bold, label=""];
3->7 [style = bold, label=""];
3->20 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
6->23 [style = dashed, label="0"];
14->20 [style = bold, label=""];
}
