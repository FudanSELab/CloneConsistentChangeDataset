digraph {
14 [style = filled, label = "makeVectorObjectSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return new ExpressionVectorObjectSelector(processor,bindings)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return ConstantVectorSelectors.vectorObjectSelector(factory.getVectorSizeInspector(),plan.getExpression().eval(ExprUtils.nilBindings()).value())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Preconditions.checkArgument(plan.is(ExpressionPlan.Trait.VECTORIZABLE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "makeVectorValueSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return ConstantVectorSelectors.vectorValueSelector(factory.getVectorSizeInspector(),(Number)plan.getExpression().eval(ExprUtils.nilBindings()).value())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Expr expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return ConstantVectorSelectors.vectorValueSelector(factory.getReadableVectorInspector(),(Number)plan.getExpression().eval(ExprUtils.nilBindings()).value())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "return new ExpressionVectorValueSelector(processor,bindings)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ExprVectorProcessor<?> processor = plan.getExpression().buildVectorized(bindings)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Expr expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Expr.VectorInputBinding bindings = createVectorBindings(plan.getAnalysis(),factory)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "makeVectorValueSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ExpressionPlan plan = ExpressionPlanner.plan(factory,expression)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "VectorColumnSelectorFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "plan.isConstant()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4->6 [style = dotted, label="true"];
17->9 [style = solid, label="factory"];
4->9 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->10 [style = dotted, label="true"];
8->10 [style = dashed, label="0"];
7->10 [style = bold, label=""];
1->15 [style = dashed, label="0"];
0->1 [style = solid, label="processor"];
11->9 [style = solid, label="factory"];
6->17 [style = dashed, label="0"];
6->9 [style = solid, label="expression"];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
13->9 [style = solid, label="expression"];
0->15 [style = bold, label=""];
14->13 [style = dotted, label="true"];
12->11 [style = dotted, label="true"];
2->5 [style = solid, label="factory"];
14->17 [style = dotted, label="true"];
7->5 [style = bold, label=""];
10->5 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
17->5 [style = solid, label="factory"];
3->7 [style = bold, label=""];
12->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
7->16 [style = bold, label=""];
7->16 [style = dotted, label="true"];
16->5 [style = bold, label=""];
9->3 [style = bold, label=""];
14->9 [style = bold, label=""];
2->9 [style = solid, label="factory"];
5->0 [style = solid, label="bindings"];
5->1 [style = solid, label="bindings"];
11->5 [style = solid, label="factory"];
7->8 [style = dotted, label="true"];
0->15 [style = solid, label="processor"];
4->2 [style = dotted, label="true"];
5->15 [style = solid, label="bindings"];
}
