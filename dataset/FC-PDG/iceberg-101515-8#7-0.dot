digraph {
20 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return ROWS_MIGHT_MATCH@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return ROWS_MUST_MATCH@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return ROWS_MUST_MATCH@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return ROWS_CANNOT_MATCH@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "gtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Literal<T> lit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "containsNullsOnly(id)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return ROWS_CANNOT_MATCH@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "containsNullsOnly(id) || containsNaNsOnly(id)@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return ROWS_MUST_MATCH@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "notEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "cmp > 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Literal<T> lit@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "cmp < 0@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "gtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->21 [style = bold, label=""];
14->5 [style = bold, label=""];
12->7 [style = bold, label=""];
6->16 [style = dotted, label="true"];
3->26 [style = dotted, label="true"];
7->14 [style = solid, label="id"];
10->6 [style = bold, label=""];
10->23 [style = bold, label=""];
21->15 [style = bold, label=""];
7->23 [style = solid, label="id"];
14->5 [style = dotted, label="true"];
3->2 [style = bold, label=""];
7->10 [style = bold, label=""];
18->22 [style = bold, label=""];
23->24 [style = bold, label=""];
3->26 [style = bold, label=""];
3->1 [style = dotted, label="true"];
7->6 [style = solid, label="id"];
7->18 [style = bold, label=""];
12->11 [style = dotted, label="true"];
10->14 [style = dashed, label="0"];
7->10 [style = solid, label="id"];
6->0 [style = bold, label=""];
9->11 [style = dotted, label="true"];
11->25 [style = dashed, label="0"];
16->8 [style = bold, label=""];
12->13 [style = dotted, label="true"];
2->27 [style = dashed, label="0"];
23->24 [style = dotted, label="true"];
0->8 [style = bold, label=""];
5->19 [style = dashed, label="0"];
19->23 [style = bold, label=""];
18->22 [style = solid, label="field"];
26->27 [style = bold, label=""];
3->27 [style = bold, label=""];
15->6 [style = bold, label=""];
21->15 [style = dotted, label="true"];
6->2 [style = bold, label=""];
8->3 [style = bold, label=""];
3->1 [style = bold, label=""];
7->14 [style = bold, label=""];
10->19 [style = bold, label=""];
6->27 [style = bold, label=""];
6->16 [style = bold, label=""];
6->0 [style = dotted, label="true"];
7->18 [style = solid, label="id"];
0->16 [style = dashed, label="0"];
24->28 [style = solid, label="lower"];
16->8 [style = solid, label="upper"];
6->8 [style = dotted, label="true"];
23->6 [style = bold, label=""];
7->0 [style = solid, label="id"];
23->21 [style = dotted, label="true"];
17->25 [style = dotted, label="true"];
17->20 [style = dotted, label="true"];
1->26 [style = dashed, label="0"];
9->4 [style = dotted, label="true"];
8->3 [style = solid, label="cmp"];
14->6 [style = bold, label=""];
6->3 [style = dotted, label="true"];
0->8 [style = solid, label="upper"];
7->24 [style = solid, label="id"];
23->28 [style = dotted, label="true"];
10->19 [style = dotted, label="true"];
17->7 [style = bold, label=""];
7->16 [style = solid, label="id"];
24->28 [style = bold, label=""];
7->22 [style = solid, label="id"];
21->6 [style = bold, label=""];
22->10 [style = bold, label=""];
1->2 [style = bold, label=""];
10->5 [style = bold, label=""];
28->21 [style = solid, label="cmp"];
5->6 [style = bold, label=""];
10->5 [style = dotted, label="true"];
9->7 [style = bold, label=""];
}
