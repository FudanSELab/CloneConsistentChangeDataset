digraph {
26 [style = filled, label = "assertEquals(\"payload missmatch\",i,Integer.parseInt(next.getSource().source.utf8ToString()))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Checkpoint read = Checkpoint.read(ckp)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Path ckp = config.getTranslogPath().resolve(Translog.CHECKPOINT_FILE_NAME)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Files.copy(ckp,config.getTranslogPath().resolve(Translog.getCommitCheckpointFileName(read.generation)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < 1@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final TranslogDeletionPolicy deletionPolicy = translog.getDeletionPolicy()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(ex.getMessage(),\"failed to create new translog file\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(ex.getMessage(),\"failed to create new translog file\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i++@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "translog.add(new Translog.Index(\"test\",\"\" + 0,0,primaryTerm.get(),Integer.toString(0).getBytes(Charset.forName(\"UTF-8\"))))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TranslogException ex = expectThrows(,null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TranslogConfig config = translog.getConfig()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String translogUUID = translog.getTranslogUUID()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tlog.add(new Translog.Index(\"test\",\"\" + 1,1,primaryTerm.get(),Integer.toString(1).getBytes(Charset.forName(\"UTF-8\"))))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "translog.add(new Translog.Index(\"\" + 0,0,primaryTerm.get(),Integer.toString(0).getBytes(Charset.forName(\"UTF-8\"))))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testRecoverWithUnbackedNextGenInIllegalState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testRecoverWithUnbackedNextGenAndFutureFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Files.createFile(config.getTranslogPath().resolve(\"translog-\" + (read.generation + 1) + \".tlog\"))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNotNull(\"operation \" + i + \" must be non-null\",next)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testRecoverWithUnbackedNextGenInIllegalState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TranslogException ex = expectThrows(,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(ex.getCause().getClass(),)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "translog.close()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(tlog.syncNeeded())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Files.createFile(config.getTranslogPath().resolve(\"translog-\" + (read.generation + 2) + \".tlog\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Translog.Operation next = snapshot.next()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
24->21 [style = bold, label=""];
0->4 [style = bold, label=""];
18->20 [style = bold, label=""];
15->19 [style = solid, label="i"];
17->19 [style = solid, label="next"];
20->6 [style = bold, label=""];
21->15 [style = bold, label=""];
25->16 [style = solid, label="i"];
7->9 [style = bold, label=""];
16->18 [style = bold, label=""];
17->19 [style = bold, label=""];
4->5 [style = bold, label=""];
4->10 [style = dashed, label="0"];
1->8 [style = bold, label=""];
1->23 [style = bold, label=""];
15->25 [style = solid, label="i"];
3->1 [style = bold, label=""];
12->13 [style = bold, label=""];
9->6 [style = bold, label=""];
2->3 [style = bold, label=""];
3->23 [style = solid, label="ckp"];
26->25 [style = bold, label=""];
15->26 [style = solid, label="i"];
11->10 [style = bold, label=""];
25->16 [style = bold, label=""];
6->14 [style = bold, label=""];
25->26 [style = solid, label="i"];
23->8 [style = bold, label=""];
19->26 [style = bold, label=""];
15->16 [style = bold, label=""];
22->4 [style = bold, label=""];
3->1 [style = solid, label="ckp"];
13->3 [style = bold, label=""];
8->7 [style = bold, label=""];
16->25 [style = dotted, label="true"];
25->19 [style = solid, label="i"];
16->17 [style = bold, label=""];
8->24 [style = bold, label=""];
16->26 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
15->16 [style = solid, label="i"];
10->5 [style = bold, label=""];
2->12 [style = bold, label=""];
16->19 [style = dotted, label="true"];
}
