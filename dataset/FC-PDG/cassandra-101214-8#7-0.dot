digraph {
24 [style = filled, label = "ByteBuffer buffer = bufferPool.get(sizes(i(,BufferType.OFF_HEAP)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "buffers.add(buffer)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(buffer.capacity() >= sizes(i()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < sizes.length@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "BufferPool.put(buffer)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<ByteBuffer> buffers = new ArrayList<>(sizes.length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,chunk.free())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "BufferPool.put(buffers.get(i))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "sum += buffer.capacity()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNotNull(buffer)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(0,chunk.free())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(null,BufferPool.unsafeCurrentChunk())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Arrays.fill(sizes,size)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testDifferentSizeBuffersOnOneChunk['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i < sizes.length@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BufferPool.Chunk chunk = BufferPool.unsafeCurrentChunk()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "BufferPool.put(buffers.remove(0))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int(( sizes = new int((((@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int index = rnd.nextInt(buffers.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ByteBuffer buffer = buffers.remove(index)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "rnd.setSeed(298347529L)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int size = BufferPool.NORMAL_CHUNK_SIZE / 64@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testChunkExhausted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "BufferPool.Chunk chunk = bufferPool.unsafeCurrentChunk()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Random rnd = new Random()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int(( sizes = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@33e99b@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "sum += BufferPool.unsafeCurrentChunk().roundUp(buffer.capacity())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(sum <= BufferPool.GlobalPool.MACRO_CHUNK_SIZE)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ByteBuffer buffer = BufferPool.get(sizes(i(,BufferType.OFF_HEAP)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "buffers.size() > 1@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(null,bufferPool.unsafeCurrentChunk())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertNotNull(chunk)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int sum = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "bufferPool.put(buffers.get(i))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testChunkExhausted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(null,BufferPool.unsafeCurrentChunk())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12->5 [style = bold, label=""];
14->5 [style = solid, label="size"];
13->22 [style = solid, label="i"];
12->1 [style = solid, label="sizes"];
6->1 [style = dotted, label="true"];
32->34 [style = bold, label=""];
19->6 [style = solid, label="i"];
38->39 [style = bold, label=""];
27->15 [style = bold, label=""];
16->26 [style = dashed, label="0"];
19->24 [style = solid, label="i"];
11->13 [style = bold, label=""];
2->14 [style = bold, label=""];
13->22 [style = bold, label=""];
35->38 [style = bold, label=""];
6->0 [style = dotted, label="true"];
12->5 [style = solid, label="sizes"];
35->31 [style = bold, label=""];
13->3 [style = solid, label="i"];
1->4 [style = bold, label=""];
28->36 [style = bold, label=""];
21->19 [style = bold, label=""];
3->38 [style = dashed, label="0"];
10->8 [style = solid, label="sum"];
37->29 [style = bold, label=""];
35->38 [style = dotted, label="true"];
35->33 [style = dotted, label="true"];
19->6 [style = bold, label=""];
24->4 [style = solid, label="buffer"];
6->20 [style = dotted, label="true"];
24->20 [style = bold, label=""];
23->14 [style = bold, label=""];
8->17 [style = bold, label=""];
15->27 [style = solid, label="i"];
13->15 [style = solid, label="i"];
10->0 [style = bold, label=""];
5->7 [style = bold, label=""];
12->24 [style = solid, label="sizes"];
34->35 [style = bold, label=""];
31->28 [style = bold, label=""];
17->11 [style = solid, label="chunk"];
19->9 [style = solid, label="i"];
0->6 [style = solid, label="i"];
4->10 [style = bold, label=""];
22->26 [style = bold, label=""];
6->24 [style = dotted, label="true"];
16->18 [style = bold, label=""];
29->1 [style = solid, label="sizes"];
22->16 [style = bold, label=""];
0->1 [style = solid, label="i"];
3->27 [style = dashed, label="0"];
12->9 [style = solid, label="sizes"];
9->20 [style = bold, label=""];
6->24 [style = bold, label=""];
11->32 [style = bold, label=""];
20->1 [style = bold, label=""];
24->20 [style = solid, label="buffer"];
39->33 [style = solid, label="buffer"];
17->25 [style = dashed, label="0"];
39->33 [style = bold, label=""];
15->22 [style = bold, label=""];
15->35 [style = dashed, label="0"];
6->10 [style = dotted, label="true"];
19->1 [style = solid, label="i"];
10->30 [style = dashed, label="0"];
6->9 [style = dotted, label="true"];
9->4 [style = solid, label="buffer"];
13->27 [style = solid, label="i"];
25->11 [style = solid, label="chunk"];
22->27 [style = dotted, label="true"];
22->3 [style = dotted, label="true"];
30->0 [style = bold, label=""];
22->15 [style = dotted, label="true"];
35->39 [style = dotted, label="true"];
0->9 [style = solid, label="i"];
6->30 [style = dotted, label="true"];
33->35 [style = bold, label=""];
9->24 [style = dashed, label="0"];
0->6 [style = bold, label=""];
38->39 [style = solid, label="index"];
30->8 [style = solid, label="sum"];
3->15 [style = bold, label=""];
29->9 [style = solid, label="sizes"];
15->3 [style = solid, label="i"];
9->20 [style = solid, label="buffer"];
22->3 [style = bold, label=""];
4->30 [style = bold, label=""];
6->4 [style = dotted, label="true"];
22->27 [style = bold, label=""];
25->11 [style = bold, label=""];
15->22 [style = solid, label="i"];
14->12 [style = bold, label=""];
6->8 [style = bold, label=""];
0->24 [style = solid, label="i"];
7->21 [style = bold, label=""];
29->7 [style = bold, label=""];
7->8 [style = solid, label="sum"];
6->9 [style = bold, label=""];
19->0 [style = solid, label="i"];
8->25 [style = bold, label=""];
26->18 [style = bold, label=""];
17->11 [style = bold, label=""];
}
