digraph {
23 [style = filled, label = "when(schema.getAllTableNames()).thenReturn(Sets.newHashSet(\"t_order\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(Collections.emptyList())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(((IndexAvailable)sqlStatementContext).getIndexes()).thenReturn(Collections.singletonList(segment))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DropIndexStatement dropIndexStatement = mock(,RETURNS_DEEP_STUBS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertRouteForDropIndexStatementDoNotFoundTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertRouteForDropIndexStatementDoNotFoundTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_0\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ShardingSphereSchema schema = mock(,RETURNS_DEEP_STUBS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order_1\")@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertRouteForDropIndexStatement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_1\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order_0\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(segment.getIdentifier().getValue()).thenReturn(\"t_order\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(((TableAvailable)sqlStatementContext).getAllTables()).thenReturn(Collections.emptyList())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SQLStatementContext<DropIndexStatement> sqlStatementContext = mock(,RETURNS_DEEP_STUBS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
19->3 [style = bold, label=""];
3->2 [style = solid, label="routeContext"];
23->22 [style = bold, label=""];
5->8 [style = bold, label=""];
8->9 [style = bold, label=""];
14->16 [style = bold, label=""];
7->3 [style = solid, label="sqlStatementContext"];
7->10 [style = bold, label=""];
22->0 [style = bold, label=""];
9->0 [style = bold, label=""];
0->19 [style = solid, label="segment"];
2->15 [style = dashed, label="0"];
3->1 [style = bold, label=""];
5->3 [style = solid, label="schema"];
20->21 [style = bold, label=""];
4->19 [style = bold, label=""];
0->12 [style = bold, label=""];
1->2 [style = solid, label="routeContext"];
15->14 [style = bold, label=""];
10->4 [style = bold, label=""];
5->23 [style = bold, label=""];
21->18 [style = bold, label=""];
11->5 [style = bold, label=""];
16->20 [style = bold, label=""];
3->1 [style = solid, label="routeContext"];
6->7 [style = bold, label=""];
6->4 [style = solid, label="sqlStatementContext"];
4->3 [style = bold, label=""];
1->2 [style = bold, label=""];
2->15 [style = bold, label=""];
13->5 [style = bold, label=""];
17->5 [style = bold, label=""];
12->6 [style = bold, label=""];
5->4 [style = solid, label="schema"];
}
