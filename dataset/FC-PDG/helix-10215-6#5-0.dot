digraph {
32 [style = filled, label = "final int n = _disconnectThreshold@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ZkClient client = controller.getZkClient()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String newSessionId = ZkTestHelper.getSessionId(client)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final ZkClient client = participant.getZkClient()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())return leader == null}},5 * 1000)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "{System.clearProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD)}@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertNotNull(leader,\"Leader should exist after \" + n + \" disconnects\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))return liveInstance == null}},3 * 1000)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.subscribeStateChanges(listener)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String oldSessionId = ZkTestHelper.getSessionId(client)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertNotNull(liveInstance,\"Live-instance should exist after \" + n + \" disconnects\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "System.setProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD,Integer.toString(_disconnectThreshold))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final AtomicInteger expectDisconnectCnt = new AtomicInteger(0)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int n = ZKHelixManager.MAX_DISCONNECT_THRESHOLD@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testControllerFlapping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertTrue(success,\"Live-instance should be gone after \" + (n + 1) + \" disconnects\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < n@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "controller.syncStart()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@56@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String newSessionId = ZkTestHelper.getSessionId(client)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,1,1,\"MasterSlave\",false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "ZkTestHelper.simulateZkStateDisconnected(client)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectDisconnectCnt.incrementAndGet()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "client.unsubscribeStateChanges(listener)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testParticipantFlapping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "MockParticipantManager participant = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "participant.syncStart()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ZkStateCountListener listener = new ZkStateCountListener()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final String instanceName = \"localhost_12918\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final ZkStateCountListener listener = new ZkStateCountListener()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<ZNRecord>(_gZkClient))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testControllerFlapping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(success,\"Leader should be gone after \" + (n + 1) + \" disconnects\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46->49 [style = solid, label="instanceName"];
21->10 [style = bold, label=""];
52->44 [style = bold, label=""];
29->5 [style = bold, label=""];
32->9 [style = solid, label="n"];
22->31 [style = dotted, label="true"];
25->34 [style = bold, label=""];
37->11 [style = bold, label=""];
23->45 [style = bold, label=""];
14->17 [style = solid, label="i"];
32->0 [style = bold, label=""];
16->7 [style = bold, label=""];
17->14 [style = dotted, label="true"];
14->17 [style = bold, label=""];
25->29 [style = bold, label=""];
22->14 [style = dotted, label="true"];
17->22 [style = solid, label="i"];
44->51 [style = bold, label=""];
30->11 [style = bold, label=""];
49->39 [style = bold, label=""];
29->46 [style = bold, label=""];
51->47 [style = bold, label=""];
22->16 [style = dotted, label="true"];
4->5 [style = solid, label="clusterName"];
16->33 [style = dashed, label="0"];
0->44 [style = solid, label="n"];
17->16 [style = bold, label=""];
28->41 [style = solid, label="newSessionId"];
33->7 [style = bold, label=""];
14->16 [style = bold, label=""];
13->25 [style = bold, label=""];
48->49 [style = bold, label=""];
22->23 [style = dotted, label="true"];
32->22 [style = solid, label="n"];
38->11 [style = bold, label=""];
6->32 [style = dashed, label="0"];
22->7 [style = dotted, label="true"];
18->15 [style = bold, label=""];
22->33 [style = dotted, label="true"];
20->3 [style = bold, label=""];
4->2 [style = bold, label=""];
12->1 [style = bold, label=""];
21->10 [style = solid, label="leader"];
15->35 [style = bold, label=""];
17->23 [style = dotted, label="true"];
17->16 [style = dotted, label="true"];
19->14 [style = solid, label="client"];
0->17 [style = solid, label="i"];
3->9 [style = solid, label="success"];
16->41 [style = solid, label="oldSessionId"];
52->44 [style = solid, label="success"];
4->2 [style = solid, label="clusterName"];
4->50 [style = solid, label="clusterName"];
7->23 [style = bold, label=""];
8->12 [style = solid, label="listener"];
32->10 [style = solid, label="n"];
12->48 [style = solid, label="listener"];
1->32 [style = bold, label=""];
22->17 [style = bold, label=""];
19->20 [style = solid, label="client"];
22->14 [style = solid, label="i"];
31->28 [style = bold, label=""];
46->40 [style = bold, label=""];
22->14 [style = bold, label=""];
32->15 [style = solid, label="n"];
6->9 [style = solid, label="n"];
49->51 [style = solid, label="liveInstance"];
23->31 [style = bold, label=""];
34->29 [style = bold, label=""];
6->15 [style = solid, label="n"];
40->53 [style = bold, label=""];
0->39 [style = solid, label="n"];
6->10 [style = solid, label="n"];
53->42 [style = bold, label=""];
5->26 [style = bold, label=""];
6->22 [style = solid, label="n"];
17->45 [style = dotted, label="true"];
11->4 [style = solid, label="className"];
26->19 [style = bold, label=""];
11->24 [style = bold, label=""];
0->22 [style = solid, label="i"];
47->50 [style = bold, label=""];
28->41 [style = bold, label=""];
46->51 [style = solid, label="instanceName"];
3->9 [style = bold, label=""];
24->4 [style = solid, label="methodName"];
1->6 [style = bold, label=""];
9->18 [style = bold, label=""];
42->43 [style = solid, label="client"];
17->28 [style = dotted, label="true"];
28->17 [style = bold, label=""];
0->47 [style = solid, label="n"];
14->28 [style = solid, label="oldSessionId"];
8->12 [style = bold, label=""];
46->40 [style = solid, label="instanceName"];
41->14 [style = bold, label=""];
4->40 [style = solid, label="clusterName"];
22->17 [style = solid, label="i"];
19->36 [style = solid, label="client"];
17->41 [style = dotted, label="true"];
35->27 [style = bold, label=""];
10->20 [style = bold, label=""];
51->47 [style = solid, label="success"];
42->7 [style = solid, label="client"];
42->28 [style = solid, label="client"];
15->47 [style = dashed, label="0"];
4->27 [style = solid, label="clusterName"];
39->43 [style = bold, label=""];
0->17 [style = solid, label="n"];
22->21 [style = bold, label=""];
22->28 [style = dotted, label="true"];
19->16 [style = solid, label="client"];
6->0 [style = bold, label=""];
42->12 [style = bold, label=""];
45->28 [style = bold, label=""];
43->52 [style = bold, label=""];
17->22 [style = bold, label=""];
19->8 [style = bold, label=""];
14->33 [style = bold, label=""];
10->36 [style = bold, label=""];
2->13 [style = bold, label=""];
4->25 [style = solid, label="clusterName"];
18->15 [style = solid, label="success"];
24->4 [style = bold, label=""];
20->36 [style = dashed, label="0"];
4->29 [style = solid, label="clusterName"];
0->22 [style = bold, label=""];
49->39 [style = solid, label="liveInstance"];
17->48 [style = bold, label=""];
19->31 [style = solid, label="client"];
21->18 [style = solid, label="leader"];
12->1 [style = solid, label="listener"];
22->17 [style = dotted, label="true"];
17->7 [style = dotted, label="true"];
19->33 [style = solid, label="client"];
31->28 [style = solid, label="newSessionId"];
42->16 [style = solid, label="client"];
15->27 [style = bold, label=""];
36->3 [style = bold, label=""];
}
