digraph {
9 [style = filled, label = "Map<TopicPartition,ProduceResponse.PartitionResponse> responseMap = new HashMap<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sender.runOnce()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testExpiredBatchDoesNotSplitOnMessageTooLargeError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "time.sleep(deliverTimeoutMs)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,sender.inFlightBatches(tp0).size())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "setupWithTransactionState(null,false,null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "sender.runOnce()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.respond(produceResponse(tp0,-1,Errors.NOT_LEADER_FOR_PARTITION,-1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sender.runOnce()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(request1.isDone())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Future<RecordMetadata> request1 = accumulator.append(tp0,time.milliseconds(),\"key\".getBytes(),\"value\".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,client.inFlightRequestCount())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sender.runOnce()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Future<RecordMetadata> request1 = accumulator.append(tp0,time.milliseconds(),\"key1\".getBytes(),\"value1\".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(0,client.inFlightRequestCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long deliverTimeoutMs = 1500L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Future<RecordMetadata> request2 = accumulator.append(tp0,time.milliseconds(),\"key2\".getBytes(),\"value2\".getBytes(),null,null,MAX_BLOCK_TIMEOUT).future@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "client.respond(produceResponse(tp0,-1,Errors.MESSAGE_TOO_LARGE,-1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testExpiredBatchDoesNotRetry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(0,sender.inFlightBatches(tp0).size())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(request2.isDone())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(0,client.inFlightRequestCount())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(0,sender.inFlightBatches(tp0).size())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "responseMap.put(tp0,new ProduceResponse.PartitionResponse(Errors.NONE,0L,0L,0L))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testExpiredBatchDoesNotRetry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,client.inFlightRequestCount())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Future<RecordMetadata> request1 = accumulator.append(tp0,time.milliseconds(),\"key\".getBytes(),\"value\".getBytes(),null,null,MAX_BLOCK_TIMEOUT,false).future@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25->0 [style = bold, label=""];
0->3 [style = bold, label=""];
7->10 [style = bold, label=""];
8->19 [style = bold, label=""];
10->24 [style = bold, label=""];
11->22 [style = dashed, label="0"];
4->26 [style = bold, label=""];
3->6 [style = bold, label=""];
11->12 [style = bold, label=""];
26->8 [style = bold, label=""];
10->8 [style = solid, label="deliverTimeoutMs"];
19->2 [style = bold, label=""];
16->17 [style = bold, label=""];
24->22 [style = bold, label=""];
17->19 [style = bold, label=""];
9->16 [style = bold, label=""];
6->15 [style = bold, label=""];
20->10 [style = bold, label=""];
21->12 [style = bold, label=""];
5->21 [style = bold, label=""];
2->0 [style = bold, label=""];
10->5 [style = bold, label=""];
12->4 [style = bold, label=""];
22->12 [style = bold, label=""];
8->9 [style = bold, label=""];
23->10 [style = bold, label=""];
4->8 [style = bold, label=""];
1->14 [style = bold, label=""];
5->11 [style = bold, label=""];
14->13 [style = bold, label=""];
2->25 [style = bold, label=""];
13->18 [style = bold, label=""];
15->1 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
