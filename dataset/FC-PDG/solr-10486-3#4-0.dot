digraph {
30 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION2,\"conf\",2,1).process(cluster.getSolrClient())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CollectionAdminRequest.createAlias(\"testalias2\",COLLECTION2).process(cluster.getSolrClient())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(2,client.query(null,paramsWithMixedCollectionAndAlias).getResults().getNumFound())@@@33@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION,\"conf\",2,1).setPerReplicaState(USE_PER_REPLICA_STATE).process(cluster.getSolrClient())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testAliasHandling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<String,String> aliases = new CollectionAdminRequest.ListAliases().process(cluster.getSolrClient()).getAliases()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CloudSolrClient client = getRandomClient()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.commit(COLLECTION)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.commit(COLLECTION2)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION,\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "CollectionAdminRequest.createAlias(\"testaliascombined\",COLLECTION + \",\" + COLLECTION2).process(cluster.getSolrClient())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(COLLECTION,aliases.get(\"testalias\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ModifiableSolrParams paramsWithBothAliases = params(\"q\",\"*:*\",\"collection\",\"testalias,testalias2\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.add(COLLECTION,doc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testAliasHandling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ModifiableSolrParams paramsWithCombinedAlias = params(\"q\",\"*:*\",\"collection\",\"testaliascombined\")@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,client.query(COLLECTION2,params(\"q\",\"*:*\")).getResults().getNumFound())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,client.query(\"testalias\",params(\"q\",\"*:*\")).getResults().getNumFound())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,client.query(\"testalias2\",params(\"q\",\"*:*\")).getResults().getNumFound())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CollectionAdminRequest.createAlias(\"testalias\",COLLECTION).process(cluster.getSolrClient())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ModifiableSolrParams paramsWithBothCollections = params(\"q\",\"*:*\",\"collection\",COLLECTION + \",\" + COLLECTION2)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "CloudHttp2SolrClient client = getRandomClient()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(2,client.query(null,paramsWithBothAliases).getResults().getNumFound())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cluster.waitForActiveCollection(COLLECTION,2,2)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,client.query(COLLECTION,params(\"q\",\"*:*\")).getResults().getNumFound())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(2,client.query(null,paramsWithBothCollections).getResults().getNumFound())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(COLLECTION + \",\" + COLLECTION2,aliases.get(\"testaliascombined\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(COLLECTION2,aliases.get(\"testalias2\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION2,\"conf\",2,1).setPerReplicaState(USE_PER_REPLICA_STATE).process(cluster.getSolrClient())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "cluster.waitForActiveCollection(COLLECTION2,2,2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SolrInputDocument doc2 = new SolrInputDocument(\"id\",\"2\",\"title_s\",\"my doc too\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,client.query(null,paramsWithCombinedAlias).getResults().getNumFound())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(2,client.query(\"testaliascombined\",params(\"q\",\"*:*\")).getResults().getNumFound())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testAliasHandling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ModifiableSolrParams paramsWithMixedCollectionAndAlias = params(\"q\",\"*:*\",\"collection\",\"testalias,\" + COLLECTION2)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client.add(COLLECTION2,doc2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SolrInputDocument doc = new SolrInputDocument(\"id\",\"1\",\"title_s\",\"my doc\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->18 [style = bold, label=""];
28->31 [style = bold, label=""];
12->27 [style = bold, label=""];
21->14 [style = bold, label=""];
6->28 [style = bold, label=""];
32->5 [style = bold, label=""];
4->25 [style = bold, label=""];
29->35 [style = bold, label=""];
24->4 [style = bold, label=""];
10->8 [style = bold, label=""];
27->9 [style = bold, label=""];
5->34 [style = bold, label=""];
14->24 [style = bold, label=""];
33->32 [style = bold, label=""];
30->34 [style = dashed, label="0"];
1->6 [style = bold, label=""];
11->2 [style = bold, label=""];
23->32 [style = dashed, label="0"];
25->1 [style = bold, label=""];
36->23 [style = bold, label=""];
26->35 [style = dashed, label="0"];
26->19 [style = bold, label=""];
7->3 [style = bold, label=""];
19->21 [style = bold, label=""];
0->20 [style = bold, label=""];
13->12 [style = bold, label=""];
20->13 [style = bold, label=""];
31->17 [style = bold, label=""];
16->23 [style = bold, label=""];
15->11 [style = bold, label=""];
5->30 [style = bold, label=""];
17->15 [style = bold, label=""];
23->5 [style = bold, label=""];
2->0 [style = bold, label=""];
3->22 [style = bold, label=""];
34->29 [style = bold, label=""];
35->19 [style = bold, label=""];
22->10 [style = bold, label=""];
4->25 [style = solid, label="doc2"];
30->29 [style = bold, label=""];
19->21 [style = solid, label="doc"];
29->26 [style = bold, label=""];
18->7 [style = bold, label=""];
}
