digraph {
9 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "metaClient.getActiveTimeline().saveAsComplete(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMMIT_ACTION,\"00000000000001\"),Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String file4P1C4 = partitionAndFileId005.get(p1)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertFalse(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "String file4P0C3 = partitionAndFileId004.get(p0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,String> partitionAndFileId004 = testTable.forReplaceCommit(\"00000000000004\").getFileIdsWithBaseFilesInPartitions(p0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFive = runCleaner(config,2)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertTrue(hoodieCleanStatsOne.isEmpty(),\"HoodieCleanStats should be empty for a table with empty partitionPaths\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Map<String,String> partitionAndFileId003 = testTable.forReplaceCommit(\"00000000000003\").getFileIdsWithBaseFilesInPartitions(p1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "HoodieCommitMetadata commitMetadata = generateCommitMetadata(Collections.unmodifiableMap(new HashMap<String,List<String>>(){}))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testTable.addInflightCommit(\"00000000000001\").withBaseFilesInPartition(p0,file1P0C0).withBaseFilesInPartition(p1,file1P1C0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String file3P1C2 = partitionAndFileId003.get(p1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFour = runCleaner(config)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "HoodieTestTable.of(metaClient).addCommit(\"000\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String file1P1C0 = UUID.randomUUID().toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p1,file1P1C0,file3P1C2)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,String> partitionAndFileId005 = testTable.forReplaceCommit(\"00000000000005\").getFileIdsWithBaseFilesInPartitions(p1)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String p1 = \"2020/01/02\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String file1P0C0 = UUID.randomUUID().toString()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "testCleanWithReplaceCommits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String file2P0C1 = partitionAndFileId002.get(p0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file2P0C1,file4P0C3)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file3P1C2,file4P1C4)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",Option.of(replaceMetadata.getKey()),Option.empty(),replaceMetadata.getValue())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Pair<HoodieRequestedReplaceMetadata,HoodieReplaceCommitMetadata> replaceMetadata = generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(0,hoodieCleanStatsTwo.size(),\"Must not scan any partitions and clean any files\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(0,hoodieCleanStatsOne.size(),\"Must not scan any partitions and clean any files\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testCleaningWithZeroPartitionPaths['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String p0 = \"2020/01/01\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testCleanWithReplaceCommits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Map<String,String> partitionAndFileId002 = testTable.forReplaceCommit(\"00000000000002\").getFileIdsWithBaseFilesInPartitions(p0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->33 [style = solid, label="file3P1C2"];
35->48 [style = bold, label=""];
39->19 [style = bold, label=""];
13->47 [style = bold, label=""];
27->32 [style = bold, label=""];
17->54 [style = bold, label=""];
7->34 [style = solid, label="p0"];
34->43 [style = solid, label="file2P0C1"];
34->23 [style = solid, label="file2P0C1"];
15->54 [style = dashed, label="0"];
7->31 [style = solid, label="p0"];
12->50 [style = solid, label="config"];
61->59 [style = bold, label=""];
28->49 [style = solid, label="p1"];
23->57 [style = bold, label=""];
12->14 [style = solid, label="config"];
7->43 [style = solid, label="p0"];
28->4 [style = solid, label="p1"];
12->60 [style = solid, label="config"];
28->0 [style = bold, label=""];
7->42 [style = solid, label="p0"];
4->35 [style = solid, label="file3P1C2"];
2->53 [style = bold, label=""];
34->6 [style = solid, label="file2P0C1"];
23->52 [style = bold, label=""];
51->39 [style = bold, label=""];
1->41 [style = solid, label="file1P1C0"];
29->44 [style = bold, label=""];
7->8 [style = solid, label="p0"];
28->27 [style = solid, label="p1"];
51->10 [style = solid, label="file4P0C3"];
54->38 [style = bold, label=""];
48->58 [style = dashed, label="0"];
5->37 [style = bold, label=""];
55->12 [style = bold, label=""];
4->29 [style = solid, label="file3P1C2"];
4->17 [style = solid, label="file3P1C2"];
51->22 [style = solid, label="file4P0C3"];
15->38 [style = bold, label=""];
1->41 [style = bold, label=""];
48->2 [style = bold, label=""];
59->60 [style = bold, label=""];
7->17 [style = solid, label="p0"];
0->42 [style = solid, label="file1P0C0"];
1->25 [style = solid, label="file1P1C0"];
32->49 [style = bold, label=""];
44->3 [style = bold, label=""];
7->45 [style = solid, label="p0"];
36->4 [style = bold, label=""];
14->22 [style = bold, label=""];
60->62 [style = bold, label=""];
1->44 [style = solid, label="file1P1C0"];
58->2 [style = bold, label=""];
12->2 [style = solid, label="config"];
16->17 [style = bold, label=""];
21->25 [style = bold, label=""];
28->41 [style = solid, label="p1"];
3->51 [style = bold, label=""];
7->23 [style = solid, label="p0"];
45->29 [style = bold, label=""];
43->45 [style = bold, label=""];
12->38 [style = solid, label="config"];
52->5 [style = bold, label=""];
7->32 [style = solid, label="p0"];
22->20 [style = bold, label=""];
7->6 [style = solid, label="p0"];
30->7 [style = bold, label=""];
0->21 [style = solid, label="file1P0C0"];
57->5 [style = bold, label=""];
17->15 [style = bold, label=""];
11->8 [style = bold, label=""];
56->14 [style = bold, label=""];
53->43 [style = bold, label=""];
7->22 [style = solid, label="p0"];
28->9 [style = solid, label="p1"];
24->13 [style = bold, label=""];
28->35 [style = solid, label="p1"];
34->20 [style = solid, label="file2P0C1"];
28->36 [style = solid, label="p1"];
28->44 [style = solid, label="p1"];
28->29 [style = solid, label="p1"];
9->31 [style = bold, label=""];
34->39 [style = solid, label="file2P0C1"];
0->23 [style = solid, label="file1P0C0"];
6->42 [style = bold, label=""];
25->18 [style = bold, label=""];
52->57 [style = dashed, label="0"];
7->51 [style = solid, label="p0"];
28->26 [style = solid, label="p1"];
28->25 [style = solid, label="p1"];
30->61 [style = dashed, label="0"];
47->50 [style = bold, label=""];
31->34 [style = bold, label=""];
11->62 [style = dashed, label="0"];
63->12 [style = bold, label=""];
28->33 [style = solid, label="p1"];
0->32 [style = solid, label="file1P0C0"];
19->14 [style = bold, label=""];
7->28 [style = bold, label=""];
40->27 [style = bold, label=""];
0->1 [style = bold, label=""];
1->49 [style = solid, label="file1P1C0"];
35->58 [style = bold, label=""];
10->40 [style = bold, label=""];
34->23 [style = bold, label=""];
4->27 [style = solid, label="file3P1C2"];
7->39 [style = solid, label="p0"];
18->16 [style = bold, label=""];
42->26 [style = bold, label=""];
4->35 [style = bold, label=""];
19->56 [style = dashed, label="0"];
7->3 [style = solid, label="p0"];
46->12 [style = bold, label=""];
41->24 [style = bold, label=""];
51->39 [style = solid, label="file4P0C3"];
28->18 [style = solid, label="p1"];
38->10 [style = bold, label=""];
26->36 [style = bold, label=""];
7->20 [style = solid, label="p0"];
34->40 [style = solid, label="file2P0C1"];
12->30 [style = bold, label=""];
1->9 [style = solid, label="file1P1C0"];
37->6 [style = bold, label=""];
7->21 [style = solid, label="p0"];
0->8 [style = solid, label="file1P0C0"];
0->45 [style = solid, label="file1P0C0"];
20->33 [style = bold, label=""];
12->61 [style = bold, label=""];
28->16 [style = solid, label="p1"];
1->26 [style = solid, label="file1P1C0"];
16->17 [style = solid, label="file4P1C4"];
50->11 [style = bold, label=""];
7->40 [style = solid, label="p0"];
1->35 [style = solid, label="file1P1C0"];
39->56 [style = bold, label=""];
8->9 [style = bold, label=""];
33->21 [style = bold, label=""];
7->10 [style = solid, label="p0"];
12->5 [style = solid, label="config"];
}
