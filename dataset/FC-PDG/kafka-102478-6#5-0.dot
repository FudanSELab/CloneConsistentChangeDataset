digraph {
4 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(10L).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MockAdminClient adminClient = new MockAdminClient(){@Override public ListOffsetsResult listOffsets(final Map<TopicPartition,OffsetSpec> topicPartitionOffsets,final ListOffsetsOptions options){throw kaboom}}@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "EasyMock.replay(activeStateManager,storeMetadata,store)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(kaboom,thrown.getCause())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(kaboom,thrown.getCause())@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "shouldThrowIfEndOffsetsFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final StreamsException thrown = assertThrows(,null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldThrowIfPositionFail['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,0L))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "changelogReader.register(tp,activeStateManager)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,consumer,callback)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldThrowIfEndOffsetsFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<byte((,byte((>(OffsetResetStrategy.EARLIEST){@Override public long position(final TopicPartition partition){throw kaboom}@Override public Map<TopicPartition,Long> endOffsets(final Collection<TopicPartition> partitions){return partitions.stream().collect(Collectors.toMap(Function.identity(),null))}}@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->8 [style = bold, label=""];
5->0 [style = bold, label=""];
11->4 [style = bold, label=""];
6->12 [style = bold, label=""];
0->3 [style = bold, label=""];
7->4 [style = bold, label=""];
13->4 [style = bold, label=""];
5->0 [style = solid, label="consumer"];
9->1 [style = bold, label=""];
1->6 [style = bold, label=""];
8->9 [style = solid, label="adminClient"];
8->10 [style = bold, label=""];
10->9 [style = bold, label=""];
3->1 [style = bold, label=""];
4->2 [style = bold, label=""];
2->5 [style = bold, label=""];
}
