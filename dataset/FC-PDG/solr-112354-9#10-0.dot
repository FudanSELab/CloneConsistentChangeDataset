digraph {
3 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectorPositions())? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation(): '-')@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IndexableField f@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectors())? FieldFlag.TERM_VECTOR_STORED.getAbbreviation(): '-')@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "getFieldFlags['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "flags.append((f != null && f.fieldType().stored())? FieldFlag.STORED.getAbbreviation(): '-')@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "flags.append((t != null && t.isTokenized())? FieldFlag.TOKENIZED.getAbbreviation(): '-')@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "FieldType t = (f == null)? null: f.getType()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "flags.append((false)? FieldFlag.SORT_MISSING_LAST.getAbbreviation(): '-')@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "flags.append((f != null && DOCS_AND_FREQS_AND_POSITIONS_AND_OFFSETS == opts)? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation(): '-')@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "flags.append((f != null && f.indexed())? FieldFlag.INDEXED.getAbbreviation(): '-')@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "flags.append((f != null && f.getClass().getSimpleName().equals(\"LazyField\"))? FieldFlag.LAZY.getAbbreviation(): '-')@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "flags.append((lazy)? FieldFlag.LAZY.getAbbreviation(): '-')@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "flags.append((f != null && f.storeTermPositions())? FieldFlag.TERM_VECTOR_POSITION.getAbbreviation(): '-')@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "flags.append((f != null && f.multiValued())? FieldFlag.MULTI_VALUED.getAbbreviation(): '-')@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "flags.append((f != null && f.omitNorms())? FieldFlag.OMIT_NORMS.getAbbreviation(): '-')@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "flags.append((f != null && f.omitPositions())? FieldFlag.OMIT_POSITIONS.getAbbreviation(): '-')@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "flags.append((f != null && f.fieldType().omitNorms())? FieldFlag.OMIT_NORMS.getAbbreviation(): '-')@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "flags.append((f != null && f.hasDocValues())? FieldFlag.DOC_VALUES.getAbbreviation(): \"-\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "flags.append((f != null && f.fieldType().indexOptions() != IndexOptions.NONE)? FieldFlag.INDEXED.getAbbreviation(): '-')@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "flags.append((binary)? FieldFlag.BINARY.getAbbreviation(): '-')@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "flags.append((f != null && f.storeOffsetsWithPositions())? FieldFlag.STORE_OFFSETS_WITH_POSITIONS.getAbbreviation(): '-')@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "SchemaField f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "getFieldFlags['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "boolean binary = false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "flags.append((f != null && f.storeTermOffsets())? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation(): '-')@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "flags.append((f != null && f.fieldType().docValuesType() != DocValuesType.NONE)? FieldFlag.DOC_VALUES.getAbbreviation(): \"-\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "flags.append((f != null && f.sortMissingFirst())? FieldFlag.SORT_MISSING_FIRST.getAbbreviation(): '-')@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "flags.append((false)? FieldFlag.UNINVERTIBLE.getAbbreviation(): '-')@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "return flags.toString()@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "flags.append((f != null && f.sortMissingLast())? FieldFlag.SORT_MISSING_LAST.getAbbreviation(): '-')@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "flags.append((f != null && DOCS_AND_FREQS == opts)? FieldFlag.OMIT_POSITIONS.getAbbreviation(): '-')@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "IndexOptions opts = (f == null)? null: f.fieldType().indexOptions()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "flags.append((f != null && f.storeTermPayloads())? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation(): '-')@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "flags.append((f != null && f.omitTermFreqAndPositions())? FieldFlag.OMIT_TF.getAbbreviation(): '-')@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectorPayloads())? FieldFlag.TERM_VECTOR_PAYLOADS.getAbbreviation(): '-')@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "StringBuilder flags = new StringBuilder()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "flags.append((f != null && f.stored())? FieldFlag.STORED.getAbbreviation(): '-')@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return flags.toString()@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "flags.append((false)? FieldFlag.MULTI_VALUED.getAbbreviation(): '-')@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "getFieldFlags['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "flags.append((f != null && f.fieldType().storeTermVectorOffsets())? FieldFlag.TERM_VECTOR_OFFSET.getAbbreviation(): '-')@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "flags.append((f != null && f.binaryValue() != null)? FieldFlag.BINARY.getAbbreviation(): '-')@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "flags.append((false)? FieldFlag.SORT_MISSING_FIRST.getAbbreviation(): '-')@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "flags.append((f != null && DOCS == opts)? FieldFlag.OMIT_TF.getAbbreviation(): '-')@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "boolean lazy = false@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "flags.append((f != null && f.storeTermVector())? FieldFlag.TERM_VECTOR_STORED.getAbbreviation(): '-')@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StringBuilder flags = new StringBuilder()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = solid, label="opts"];
35->41 [style = solid, label="lazy"];
8->14 [style = bold, label=""];
4->29 [style = dashed, label="0"];
15->1 [style = bold, label=""];
43->32 [style = dotted, label="true"];
20->6 [style = bold, label=""];
4->26 [style = bold, label=""];
18->13 [style = bold, label=""];
11->0 [style = solid, label="f"];
22->11 [style = dotted, label="true"];
11->12 [style = solid, label="f"];
1->23 [style = bold, label=""];
46->40 [style = bold, label=""];
12->16 [style = bold, label=""];
44->37 [style = bold, label=""];
17->4 [style = bold, label=""];
15->38 [style = dashed, label="0"];
5->44 [style = dashed, label="0"];
32->27 [style = solid, label="f"];
27->30 [style = bold, label=""];
5->18 [style = bold, label=""];
16->5 [style = bold, label=""];
29->38 [style = bold, label=""];
13->9 [style = bold, label=""];
21->36 [style = dashed, label="0"];
10->11 [style = dotted, label="true"];
11->5 [style = solid, label="f"];
31->34 [style = bold, label=""];
41->46 [style = bold, label=""];
11->16 [style = solid, label="f"];
32->31 [style = solid, label="f"];
14->17 [style = bold, label=""];
32->26 [style = solid, label="f"];
16->34 [style = dashed, label="0"];
39->46 [style = solid, label="binary"];
13->41 [style = dashed, label="0"];
8->33 [style = dashed, label="0"];
32->45 [style = solid, label="f"];
7->20 [style = bold, label=""];
24->45 [style = bold, label=""];
19->30 [style = dashed, label="0"];
32->24 [style = solid, label="f"];
33->35 [style = bold, label=""];
45->28 [style = bold, label=""];
2->24 [style = dashed, label="0"];
1->27 [style = dashed, label="0"];
9->46 [style = dashed, label="0"];
34->44 [style = bold, label=""];
32->36 [style = solid, label="f"];
11->4 [style = solid, label="f"];
19->2 [style = bold, label=""];
43->33 [style = bold, label=""];
32->37 [style = solid, label="f"];
37->41 [style = bold, label=""];
40->42 [style = bold, label=""];
11->13 [style = solid, label="f"];
17->26 [style = dashed, label="0"];
3->21 [style = bold, label=""];
10->8 [style = bold, label=""];
11->21 [style = solid, label="f"];
0->3 [style = bold, label=""];
32->40 [style = solid, label="f"];
8->5 [style = solid, label="opts"];
11->9 [style = solid, label="f"];
32->38 [style = solid, label="f"];
11->18 [style = solid, label="f"];
3->28 [style = dashed, label="0"];
32->44 [style = solid, label="f"];
8->18 [style = solid, label="opts"];
12->31 [style = dashed, label="0"];
2->0 [style = bold, label=""];
11->1 [style = solid, label="f"];
39->4 [style = bold, label=""];
11->17 [style = solid, label="f"];
26->29 [style = bold, label=""];
7->40 [style = dashed, label="0"];
33->29 [style = solid, label="t"];
11->32 [style = dashed, label="0"];
22->8 [style = bold, label=""];
23->19 [style = bold, label=""];
32->28 [style = solid, label="f"];
11->2 [style = solid, label="f"];
35->39 [style = bold, label=""];
21->12 [style = bold, label=""];
32->34 [style = solid, label="f"];
18->37 [style = dashed, label="0"];
28->36 [style = bold, label=""];
36->31 [style = bold, label=""];
0->45 [style = dashed, label="0"];
11->15 [style = solid, label="f"];
11->3 [style = solid, label="f"];
1->19 [style = bold, label=""];
32->30 [style = solid, label="f"];
11->8 [style = solid, label="f"];
20->42 [style = dashed, label="0"];
32->33 [style = solid, label="f"];
4->15 [style = bold, label=""];
42->25 [style = bold, label=""];
38->27 [style = bold, label=""];
30->24 [style = bold, label=""];
32->42 [style = solid, label="f"];
9->7 [style = bold, label=""];
}
