digraph {
21 [style = filled, label = "ProcessInstance processInstance = new ProcessInstance()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "taskInstance.setName(\"test_task_instance\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TaskInstance taskInstance = new TaskInstance()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "processInstance.setStartTime(new Date())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Map<String,Object> taskNullRes = processDefinitionService.viewTree(46,10)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<String,Object> processDefinitionNullRes = processDefinitionService.viewTree(46,10)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Mockito.when(processService.genDagGraph(processDefinition)).thenReturn(new DAG<>())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Mockito.when(processDefineMapper.selectById(46)).thenReturn(processDefinition)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "taskInstance.setHost(\"192.168.xx.xx\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "processInstance.setName(\"test_instance\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processInstance.setState(ExecutionStatus.RUNNING_EXECUTION)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testSubProcessViewTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,taskNullRes.get(Constants.STATUS))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "taskInstance.setTaskType(TaskType.SHELL.getDesc())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<String,Object> taskNotNuLLRes = processDefinitionService.viewTree(46,10)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "taskInstance.setStartTime(new Date())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testViewTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "processInstance.setId(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "taskInstance.setEndTime(new Date())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Mockito.when(processDefinitionMapper.selectById(46)).thenReturn(processDefinition)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "processDefinition.setProcessDefinitionJson(SHELL_JSON)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "processInstance.setEndTime(new Date())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "taskInstance.setTaskType(TaskType.SUB_PROCESS.getDesc())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ProcessDefinition processDefinition = getProcessDefinition()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processInstanceList.add(processInstance)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Mockito.when(processDefineMapper.selectById(46)).thenReturn(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<ProcessInstance> processInstanceList = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "taskInstance.setState(ExecutionStatus.RUNNING_EXECUTION)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processInstance.setHost(\"192.168.xx.xx\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(Status.SUCCESS,taskNotNuLLRes.get(Constants.STATUS))@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(Status.PROCESS_DEFINE_NOT_EXIST,processDefinitionNullRes.get(Constants.STATUS))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "taskInstance.setTaskParams(\"\"processDefinitionId\": \"222\",\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testSubProcessViewTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "taskInstance.setId(1)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = bold, label=""];
14->7 [style = bold, label=""];
22->8 [style = bold, label=""];
10->28 [style = dashed, label="0"];
15->18 [style = bold, label=""];
6->15 [style = bold, label=""];
25->2 [style = bold, label=""];
28->20 [style = bold, label=""];
21->5 [style = solid, label="processInstance"];
16->19 [style = bold, label=""];
11->25 [style = dashed, label="0"];
20->22 [style = bold, label=""];
30->13 [style = bold, label=""];
27->32 [style = bold, label=""];
31->12 [style = bold, label=""];
3->13 [style = bold, label=""];
11->2 [style = bold, label=""];
18->28 [style = bold, label=""];
12->25 [style = solid, label="processDefinition"];
1->11 [style = bold, label=""];
0->24 [style = bold, label=""];
8->1 [style = bold, label=""];
33->30 [style = bold, label=""];
7->4 [style = bold, label=""];
12->3 [style = bold, label=""];
18->10 [style = bold, label=""];
1->17 [style = bold, label=""];
17->11 [style = bold, label=""];
2->27 [style = bold, label=""];
23->14 [style = bold, label=""];
32->16 [style = bold, label=""];
26->12 [style = bold, label=""];
2->16 [style = bold, label=""];
12->11 [style = solid, label="processDefinition"];
4->0 [style = bold, label=""];
21->23 [style = bold, label=""];
24->5 [style = bold, label=""];
29->33 [style = bold, label=""];
5->6 [style = bold, label=""];
17->25 [style = bold, label=""];
9->12 [style = bold, label=""];
13->21 [style = bold, label=""];
10->20 [style = bold, label=""];
}
