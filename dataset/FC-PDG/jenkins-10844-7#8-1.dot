digraph {
20 [style = filled, label = "when(view.getOwner()).thenReturn(parent)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../../..\"),createAncestor(parent,\"../..\"),createAncestor(view,\".\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\",\"parent/job/i/\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "when(parent.getItemGroup()).thenReturn(parent)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(parent.getShortUrl()).thenReturn(\"parent/\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testGetRelativeLinkTo_JobContainedInViewWithinItemGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(view.getItems()).thenReturn(Collections.singletonList(i))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createMockAncestors(req,createAncestor(view,\".\"),createAncestor(j,\"../..\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"job/i/\",result)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGetRelativeLinkTo_JobContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TopLevelItemAndItemGroup parent = mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String contextPath = \"/jenkins\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mockStatic()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(j.getItemGroup()).thenReturn(j)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "View view = mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
11->16 [style = bold, label=""];
4->18 [style = dashed, label="0"];
2->5 [style = bold, label=""];
7->1 [style = bold, label=""];
19->12 [style = bold, label=""];
3->21 [style = dashed, label="0"];
1->21 [style = solid, label="view"];
13->14 [style = solid, label="req"];
18->17 [style = bold, label=""];
1->20 [style = bold, label=""];
10->3 [style = bold, label=""];
23->21 [style = bold, label=""];
13->3 [style = solid, label="req"];
18->22 [style = solid, label="parent"];
12->4 [style = solid, label="j"];
22->5 [style = solid, label="i"];
22->5 [style = bold, label=""];
12->21 [style = solid, label="j"];
14->7 [style = bold, label=""];
1->20 [style = dashed, label="0"];
8->22 [style = dashed, label="0"];
0->14 [style = bold, label=""];
20->23 [style = bold, label=""];
12->3 [style = solid, label="j"];
12->4 [style = bold, label=""];
9->13 [style = solid, label="contextPath"];
11->16 [style = solid, label="result"];
8->2 [style = bold, label=""];
0->21 [style = solid, label="req"];
8->5 [style = solid, label="i"];
7->3 [style = solid, label="view"];
18->23 [style = solid, label="parent"];
18->20 [style = solid, label="parent"];
3->8 [style = bold, label=""];
21->22 [style = bold, label=""];
13->0 [style = solid, label="contextPath"];
12->18 [style = bold, label=""];
12->1 [style = solid, label="j"];
4->8 [style = solid, label="parent"];
22->11 [style = solid, label="i"];
0->7 [style = solid, label="req"];
12->10 [style = solid, label="j"];
5->11 [style = bold, label=""];
15->12 [style = bold, label=""];
5->11 [style = solid, label="result"];
17->13 [style = bold, label=""];
18->21 [style = solid, label="parent"];
1->10 [style = bold, label=""];
10->23 [style = dashed, label="0"];
8->2 [style = solid, label="i"];
13->0 [style = bold, label=""];
9->13 [style = bold, label=""];
6->12 [style = bold, label=""];
}
