digraph {
37 [style = filled, label = "routingTable = RoutingTable.builder(routingTable).add(newIndexRoutingTable).build()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testCanAllocatePrimaryExistingInRestoreInProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "final ObjectCursor<IndexShardRoutingTable> shardEntry@@@22@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "UnassignedInfo currentInfo = primary.unassignedInfo()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ShardRouting shardRouting@@@24@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(ShardRoutingState.UNASSIGNED,primary.state())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Decision.Type.NO,decision.type())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "indexRoutingTable.getShards().values()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Decision decision = executeAllocation(clusterState,primary)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ImmutableOpenMap.Builder<ShardId,RestoreInProgress.ShardRestoreStatus> shards = ImmutableOpenMap.builder()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shardState == RestoreInProgress.State.FAILURE@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "randomBoolean()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IndexRoutingTable.Builder newIndexRoutingTable = IndexRoutingTable.builder(indexRoutingTable.getIndex())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"shard is currently being restored\",decision.getExplanation())@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(RecoverySource.Type.SNAPSHOT,primary.recoverySource().getType())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Decision decision = executeAllocation(clusterState,primary)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "RestoreInProgress.State restoreState = RestoreInProgress.State.STARTED@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "clusterState = ClusterState.builder(clusterState).putCustom(RestoreInProgress.TYPE,new RestoreInProgress.Builder().add(restore).build()).routingTable(routingTable).build()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RestoreInProgress.Entry restore = new RestoreInProgress.Entry(recoverySource.restoreUUID(),snapshot,restoreState,singletonList(\"test\"),shards.build())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(decision.getExplanation(),startsWith(\"shard has failed to be restored from the snapshot \" + \"(_repository:_existing/_uuid( - manually close or delete the index \" + \"(test( in order to retry to restore the snapshot again or use the reroute API to force the allocation of \" + \"an empty primary shard. Details: (restore_source(_repository/_existing(, failure java.io.IOException: i/o failure\"))@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "RoutingTable routingTable = RoutingTable.builder(clusterState.getRoutingTable()).addAsRestore(clusterState.getMetaData().index(\"test\"),createSnapshotRecoverySource(\"_missing\")).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "clusterState = ClusterState.builder(clusterState).routingTable(routingTable).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "shardRoutingTable.getShards()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ShardRouting shardRouting@@@24@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "routingTable = clusterState.routingTable()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final IndexShardRoutingTable shardRoutingTable = shardEntry.value@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Decision.Type.NO,decision.type())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "shards.put(primary.shardId(),new RestoreInProgress.ShardRestoreStatus(clusterState.getNodes().getLocalNodeId(),shardState))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "newIndexRoutingTable.addShard(primary)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RestoreInProgress.State shardState@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "IndexRoutingTable indexRoutingTable = routingTable.index(\"test\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "shardState = randomFrom(RestoreInProgress.State.STARTED,RestoreInProgress.State.INIT)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ObjectCursor<IndexShardRoutingTable> shardEntry@@@22@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "primary = primary.updateUnassigned(newInfo,primary.recoverySource())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RoutingTable routingTable = RoutingTable.builder(clusterState.getRoutingTable()).addAsRestore(clusterState.getMetaData().index(\"test\"),recoverySource).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RecoverySource.SnapshotRecoverySource recoverySource = createSnapshotRecoverySource(\"_existing\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "shardState = RestoreInProgress.State.FAILURE@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "newIndexRoutingTable.addShard(shardRouting)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "UnassignedInfo newInfo = new UnassignedInfo(currentInfo.getReason(),currentInfo.getMessage(),new IOException(\"i/o failure\"),currentInfo.getNumFailedAllocations(),currentInfo.getUnassignedTimeInNanos(),currentInfo.getUnassignedTimeInMillis(),currentInfo.isDelayed(),currentInfo.getLastAllocationStatus(),currentInfo.getFailedNodeIds())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Snapshot snapshot = recoverySource.snapshot()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ShardRouting primary = clusterState.getRoutingTable().shardRoutingTable(\"test\",0).primaryShard()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCanAllocatePrimaryExistingInRestoreInProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "UnassignedInfo newInfo = new UnassignedInfo(currentInfo.getReason(),currentInfo.getMessage(),new IOException(\"i/o failure\"),currentInfo.getNumFailedAllocations(),currentInfo.getUnassignedTimeInNanos(),currentInfo.getUnassignedTimeInMillis(),currentInfo.isDelayed(),currentInfo.getLastAllocationStatus())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Decision.Type.YES,decision.type())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shardRouting.primary()@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(decision.getExplanation(),equalTo(\"shard has failed to be restored from the snapshot \" + \"(_repository:_missing/_uuid( - manually close or delete the index (test( in order to retry to restore the snapshot again \" + \"or use the reroute API to force the allocation of an empty primary shard. Details: (restore_source(_repository/_missing((\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "ClusterState clusterState = createInitialClusterState()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testCannotAllocatePrimaryMissingInRestoreInProgress['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25->13 [style = solid, label="newInfo"];
32->22 [style = bold, label=""];
23->39 [style = dotted, label="false"];
14->18 [style = dotted, label="false"];
21->13 [style = solid, label="recoverySource"];
3->16 [style = bold, label=""];
24->38 [style = solid, label="primary"];
40->13 [style = bold, label=""];
6->35 [style = dashed, label="0"];
3->27 [style = bold, label=""];
37->9 [style = bold, label=""];
14->7 [style = bold, label=""];
22->8 [style = bold, label=""];
11->32 [style = solid, label="primary"];
23->33 [style = bold, label=""];
13->38 [style = solid, label="primary"];
43->35 [style = bold, label=""];
23->0 [style = dotted, label="false"];
6->11 [style = bold, label=""];
14->7 [style = dotted, label="true"];
35->45 [style = bold, label=""];
23->33 [style = dotted, label="false"];
23->36 [style = bold, label=""];
21->35 [style = bold, label=""];
1->31 [style = bold, label=""];
23->17 [style = dotted, label="true"];
16->3 [style = bold, label=""];
36->9 [style = bold, label=""];
8->23 [style = bold, label=""];
12->21 [style = bold, label=""];
41->21 [style = bold, label=""];
16->29 [style = bold, label=""];
31->4 [style = solid, label="snapshot"];
14->10 [style = bold, label=""];
25->40 [style = dashed, label="0"];
47->43 [style = bold, label=""];
23->13 [style = dotted, label="false"];
20->38 [style = bold, label=""];
27->16 [style = bold, label=""];
23->42 [style = dotted, label="true"];
33->1 [style = solid, label="shardState"];
19->25 [style = bold, label=""];
24->5 [style = bold, label=""];
36->1 [style = solid, label="shardState"];
45->11 [style = bold, label=""];
20->38 [style = solid, label="clusterState"];
29->27 [style = bold, label=""];
23->25 [style = dotted, label="false"];
45->32 [style = solid, label="clusterState"];
23->27 [style = dotted, label="true"];
2->27 [style = bold, label=""];
13->3 [style = solid, label="primary"];
6->22 [style = solid, label="routingTable"];
9->1 [style = bold, label=""];
29->16 [style = bold, label=""];
23->2 [style = dotted, label="false"];
46->44 [style = bold, label=""];
23->16 [style = dotted, label="true"];
10->18 [style = bold, label=""];
16->29 [style = dotted, label="false"];
23->37 [style = dotted, label="false"];
32->46 [style = bold, label=""];
3->37 [style = bold, label=""];
23->28 [style = dotted, label="true"];
34->4 [style = solid, label="restoreState"];
29->37 [style = bold, label=""];
11->24 [style = bold, label=""];
31->34 [style = bold, label=""];
5->32 [style = bold, label=""];
40->13 [style = solid, label="newInfo"];
33->14 [style = solid, label="shardState"];
4->20 [style = bold, label=""];
7->15 [style = bold, label=""];
23->36 [style = dotted, label="true"];
33->19 [style = bold, label=""];
19->40 [style = bold, label=""];
14->10 [style = dotted, label="false"];
35->6 [style = bold, label=""];
25->13 [style = bold, label=""];
23->40 [style = dotted, label="false"];
22->32 [style = dashed, label="0"];
13->30 [style = bold, label=""];
23->26 [style = dotted, label="false"];
16->3 [style = dotted, label="true"];
23->30 [style = dotted, label="false"];
13->16 [style = solid, label="primary"];
38->14 [style = bold, label=""];
23->19 [style = dotted, label="false"];
14->15 [style = dotted, label="true"];
36->14 [style = solid, label="shardState"];
34->4 [style = bold, label=""];
30->2 [style = bold, label=""];
}
