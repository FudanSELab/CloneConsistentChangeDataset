digraph {
3 [style = filled, label = "assertU(commit())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "loadLocal(\"extraction/simple.html\",\"literal.id\",\"simple3\",\"uprefix\",\"t_\",\"lowernames\",\"true\",\"captureAttr\",\"true\",\"fmap.a\",\"t_href\",\"commit\",\"true\",\"boost.t_href\",\"100.0\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertU(commit())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertU(commit())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertQ(req(\"+id:simple2 +t_abcxyz:(* TO *(\"),\"//*(@numFound='1'(\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertQ(req(\"t_href:http\"),\"//*(@numFound='2'(\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "loadLocal(\"extraction/version_control.xml\",\"fmap.created\",\"extractedDate\",\"fmap.producer\",\"extractedProducer\",\"fmap.creator\",\"extractedCreator\",\"fmap.Keywords\",\"extractedKeywords\",\"fmap.Author\",\"extractedAuthor\",\"literal.id\",\"three\",\"uprefix\",\"ignored_\",\"fmap.content\",\"extractedContent\",\"fmap.language\",\"extractedLanguage\",\"fmap.Last-Modified\",\"extractedDate\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertQ(req(\"title:\"Word 2003 Title\"\"),\"//*(@numFound='1'(\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "loadLocal(\"extraction/simple.html\",\"fmap.created\",\"extractedDate\",\"fmap.producer\",\"extractedProducer\",\"fmap.creator\",\"extractedCreator\",\"fmap.Keywords\",\"extractedKeywords\",\"fmap.Author\",\"extractedAuthor\",\"fmap.language\",\"extractedLanguage\",\"literal.id\",\"two\",\"uprefix\",\"ignored_\",\"fmap.content\",\"extractedContent\",\"fmap.Last-Modified\",\"extractedDate\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertQ(req(\"stream_name:version_control.xml\"),\"//*(@numFound='1'(\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(\"handler is null and it shouldn't be\",handler != null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testExtraction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "loadLocal(\"extraction/arabic.pdf\",\"fmap.created\",\"extractedDate\",\"fmap.producer\",\"extractedProducer\",\"fmap.creator\",\"extractedCreator\",\"fmap.Keywords\",\"extractedKeywords\",\"fmap.Creation-Date\",\"extractedDate\",\"fmap.Author\",\"extractedAuthor\",\"uprefix\",\"ignored_\",\"fmap.content\",\"wdf_nocase\",\"literal.id\",\"one\",\"fmap.Last-Modified\",\"extractedDate\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertU(commit())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertQ(req(\"extractedContent:\"This is a test of PDF and Word extraction in Solr, it is only a test\"\"),\"//*(@numFound='1'(\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertQ(req(\"title:Welcome\"),\"//*(@numFound='1'(\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "loadLocal(\"extraction/simple.html\",\"literal.id\",\"simple4\",\"uprefix\",\"t_\",\"capture\",\"p\",\"commit\",\"true\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertQ(req(\"+id:simple4 +t_content:Solr\"),\"//*(@numFound='1'(\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertQ(req(\"+id:simple2 +t_href:(* TO *(\"),\"//*(@numFound='1'(\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testExtraction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertQ(req(\"stream_name:version_control.xml\"),\"//*(@numFound='0'(\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertQ(req(\"+id:simple4 +t_p:\"here is some text\"\"),\"//*(@numFound='1'(\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertQ(req(\"t_href:http\"),\"//doc(1(/str(.='simple3'(\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "loadLocal(\"extraction/simple.html\",\"literal.id\",\"simple2\",\"uprefix\",\"t_\",\"lowernames\",\"true\",\"captureAttr\",\"true\",\"fmap.a\",\"t_href\",\"fmap.content_type\",\"abcxyz\",\"commit\",\"true\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertQ(req(\"extractedContent:\"This is a test of PDF and Word extraction in Solr, it is only a test\"\"),\"//*(@numFound='2'(\")@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertQ(req(\"wdf_nocase:鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申\"),\"//result(@numFound=0(\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "loadLocal(\"extraction/solr-word.pdf\",\"fmap.created\",\"extractedDate\",\"fmap.producer\",\"extractedProducer\",\"fmap.creator\",\"extractedCreator\",\"fmap.Keywords\",\"extractedKeywords\",\"fmap.Creation-Date\",\"extractedDate\",\"uprefix\",\"ignored_\",\"fmap.Author\",\"extractedAuthor\",\"fmap.content\",\"extractedContent\",\"literal.id\",\"one\",\"fmap.Last-Modified\",\"extractedDate\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertQ(req(\"title:\"Word 2003 Title\"\"),\"//*(@numFound='0'(\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertQ(req(\"wdf_nocase:鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申鐃緒申\"),\"//result(@numFound=1(\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertQ(req(\"title:Welcome\"),\"//*(@numFound='0'(\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertQ(req(\"+id:simple3 +t_content_type:(* TO *(\"),\"//*(@numFound='1'(\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertQ(req(\"extractedContent:\"distinct words\"\"),\"//*(@numFound='1'(\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "loadLocal(\"extraction/word2003.doc\",\"fmap.created\",\"extractedDate\",\"fmap.producer\",\"extractedProducer\",\"fmap.creator\",\"extractedCreator\",\"fmap.Keywords\",\"extractedKeywords\",\"fmap.Author\",\"extractedAuthor\",\"literal.id\",\"four\",\"uprefix\",\"ignored_\",\"fmap.content\",\"extractedContent\",\"fmap.language\",\"extractedLanguage\",\"fmap.Last-Modified\",\"extractedDate\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertQ(req(\"extractedContent:distinctwords\"),\"//*(@numFound='0'(\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "ExtractingRequestHandler handler = (ExtractingRequestHandler)h.getCore().getRequestHandler(\"/update/extract\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertQ(req(\"title:solr-word\"),\"//*(@numFound='1'(\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testArabicPDF['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertQ(req(\"title:solr-word\"),\"//*(@numFound='0'(\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertQ(req(\"extractedContent:distinct\"),\"//*(@numFound='1'(\")@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertQ(req(\"extractedContent:words\"),\"//*(@numFound='2'(\")@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14->39 [style = dashed, label="0"];
9->19 [style = bold, label=""];
16->4 [style = bold, label=""];
10->23 [style = bold, label=""];
21->32 [style = bold, label=""];
6->0 [style = bold, label=""];
18->5 [style = bold, label=""];
28->8 [style = bold, label=""];
14->12 [style = bold, label=""];
34->33 [style = bold, label=""];
8->6 [style = bold, label=""];
7->20 [style = bold, label=""];
0->13 [style = bold, label=""];
5->26 [style = bold, label=""];
3->27 [style = bold, label=""];
30->39 [style = bold, label=""];
38->30 [style = bold, label=""];
11->38 [style = dashed, label="0"];
11->30 [style = bold, label=""];
9->36 [style = bold, label=""];
32->35 [style = bold, label=""];
2->18 [style = bold, label=""];
19->11 [style = bold, label=""];
27->17 [style = bold, label=""];
17->24 [style = bold, label=""];
24->16 [style = bold, label=""];
26->28 [style = bold, label=""];
12->29 [style = bold, label=""];
25->9 [style = bold, label=""];
25->9 [style = solid, label="handler"];
13->3 [style = bold, label=""];
29->22 [style = bold, label=""];
4->10 [style = bold, label=""];
19->36 [style = dashed, label="0"];
21->1 [style = bold, label=""];
22->21 [style = bold, label=""];
20->2 [style = bold, label=""];
36->38 [style = bold, label=""];
1->7 [style = bold, label=""];
30->14 [style = bold, label=""];
15->25 [style = bold, label=""];
35->34 [style = bold, label=""];
37->25 [style = bold, label=""];
31->25 [style = bold, label=""];
33->1 [style = bold, label=""];
}
