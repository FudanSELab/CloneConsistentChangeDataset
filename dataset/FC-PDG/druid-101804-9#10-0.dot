digraph {
0 [style = filled, label = "testQuery(\"SELECT CONCAt(dim1, CONCAt(dim2,'x'), m2, 9999, dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",concat(\"dim2\",'x'),\"m2\",9999,\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1fbb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1fbf,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1fc8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1fcc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1fd0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1fd4))@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testQuery(\"SELECT CONCAt(dim1, '-', dim1, '_', dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",'-',\"dim1\",'_',\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1ed5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1ed9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1edd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1ee1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1ee5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1ee9))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testTextcat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testQuery(\"SELECT CONCAT(dim1, '-', dim1, '_', dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",'-',\"dim1\",'_',\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1f73,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1f77,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1f7b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1f7f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1f83,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d1f87))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "testConcat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testQuery(\"SELECT textcat(dim1, dim1) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",\"dim1\")\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2011,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2015,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2019,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d201d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2021,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2025))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testConcat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testQuery(\"SELECT textcat(dim1, CAST(m2 as VARCHAR)) as dimX FROM foo\",ImmutableList.of(newScanQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).virtualColumns(expressionVirtualColumn(\"v0\",\"concat(\"dim1\",CAST(\"m2\", 'STRING'))\",ValueType.STRING)).columns(\"v0\").resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_COMPACTED_LIST).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2059,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d205d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2061,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2065,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d2069,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9d206d))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->4 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->4 [style = bold, label=""];
2->1 [style = bold, label=""];
4->0 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
