digraph {
7 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SOURCE_LOAD_PATH)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_src_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon_src-%d\"),druidCoordinatorConfig)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "coordinatorRuntimeParams = EasyMock.createNiceMock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "objectMapper = new DefaultObjectMapper()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "curator.blockUntilConnected()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "setupServerAndCurator()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "loadQueuePeon = new CuratorLoadQueuePeon(curator,LOADPATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon-%d\"),druidCoordinatorConfig)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "segmentsMetadata = EasyMock.createNiceMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sourceLoadQueuePeon = new CuratorLoadQueuePeon(curator,SOURCE_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorCompactionConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorCompactionConfig.empty())).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(SEGPATH)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "setUp['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "dataSourcesSnapshot = EasyMock.createNiceMock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "loadQueuePeon.start()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "curator.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "scheduledExecutorFactory = new ScheduledExecutorFactory(){@Override public ScheduledExecutorService create(int corePoolSize,final String nameFormat){return Executors.newSingleThreadScheduledExecutor()}}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "scheduledExecutorFactory = null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "loadManagementPeons = new ConcurrentHashMap<>()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "druidCoordinatorConfig = new TestDruidCoordinatorConfig(new Duration(COORDINATOR_START_DELAY),new Duration(COORDINATOR_PERIOD),null,null,new Duration(COORDINATOR_PERIOD),null,10,null,new Duration(\"PT0s\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "druidNode = new DruidNode(\"hey\",\"what\",false,1234,null,true,false)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "pathChildrenCache = new PathChildrenCache(curator,LOADPATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache-%d\"))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "serverInventoryView = EasyMock.createMock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "configManager = EasyMock.createNiceMock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "leaderAnnouncerLatch = new CountDownLatch(1)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "sourceLoadQueueChildrenCache = new PathChildrenCache(curator,SOURCE_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_src-%d\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadata,baseView,metadataRuleManager,curator,new NoopServiceEmitter(),scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(DESTINATION_LOAD_PATH)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.replay(configManager)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "coordinator = new DruidCoordinator(druidCoordinatorConfig,new ZkPathsConfig(){@Override public String getBase(){return \"druid\"}},configManager,segmentsMetadata,serverInventoryView,metadataRuleManager,curator,serviceEmitter,scheduledExecutorFactory,null,null,new NoopServiceAnnouncer(){@Override public void announce(DruidNode node){leaderAnnouncerLatch.countDown()}@Override public void unannounce(DruidNode node){leaderUnannouncerLatch.countDown()}},druidNode,loadManagementPeons,null,new CostBalancerStrategyFactory(),EasyMock.createNiceMock(),new TestDruidLeaderSelector())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "curator.create().creatingParentsIfNeeded().forPath(LOADPATH)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,Execs.scheduledSingleThreaded(\"coordinator_test_load_queue_peon_dest_scheduled-%d\"),Execs.singleThreaded(\"coordinator_test_load_queue_peon_dest-%d\"),druidCoordinatorConfig)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "metadataRuleManager = EasyMock.createNiceMock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "JacksonConfigManager configManager = EasyMock.createNiceMock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "destinationLoadQueueChildrenCache = new PathChildrenCache(curator,DESTINATION_LOAD_PATH,true,true,Execs.singleThreaded(\"coordinator_test_path_children_cache_dest-%d\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "leaderUnannouncerLatch = new CountDownLatch(1)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "druidServer = EasyMock.createMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "EasyMock.expect(configManager.watch(EasyMock.eq(CoordinatorDynamicConfig.CONFIG_KEY),EasyMock.anyObject(),EasyMock.anyObject())).andReturn(new AtomicReference<>(CoordinatorDynamicConfig.builder().build())).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "destinationLoadQueuePeon = new CuratorLoadQueuePeon(curator,DESTINATION_LOAD_PATH,objectMapper,peonExec,callbackExec,druidCoordinatorConfig)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43->4 [style = solid, label="druidCoordinatorConfig"];
26->4 [style = dashed, label="0"];
30->38 [style = bold, label=""];
44->42 [style = bold, label=""];
16->40 [style = bold, label=""];
4->20 [style = solid, label="druidCoordinatorConfig"];
23->5 [style = bold, label=""];
23->34 [style = dashed, label="0"];
24->2 [style = bold, label=""];
11->20 [style = solid, label="objectMapper"];
18->11 [style = dashed, label="0"];
10->36 [style = dashed, label="0"];
7->12 [style = bold, label=""];
34->5 [style = bold, label=""];
37->30 [style = bold, label=""];
21->15 [style = bold, label=""];
10->13 [style = solid, label="configManager"];
11->4 [style = bold, label=""];
18->26 [style = bold, label=""];
12->11 [style = bold, label=""];
14->22 [style = bold, label=""];
39->43 [style = bold, label=""];
20->28 [style = dashed, label="0"];
25->40 [style = dashed, label="0"];
35->32 [style = bold, label=""];
42->33 [style = solid, label="loadManagementPeons"];
16->25 [style = bold, label=""];
4->18 [style = bold, label=""];
20->14 [style = bold, label=""];
21->33 [style = solid, label="segmentsMetadata"];
6->19 [style = bold, label=""];
4->28 [style = solid, label="druidCoordinatorConfig"];
2->33 [style = solid, label="metadataRuleManager"];
2->10 [style = bold, label=""];
25->7 [style = bold, label=""];
27->22 [style = bold, label=""];
21->13 [style = solid, label="segmentsMetadata"];
11->14 [style = solid, label="objectMapper"];
38->33 [style = solid, label="serverInventoryView"];
29->21 [style = bold, label=""];
43->33 [style = solid, label="druidCoordinatorConfig"];
3->0 [style = bold, label=""];
14->27 [style = dashed, label="0"];
19->16 [style = bold, label=""];
42->35 [style = bold, label=""];
43->11 [style = bold, label=""];
36->33 [style = solid, label="configManager"];
22->3 [style = bold, label=""];
8->17 [style = bold, label=""];
4->31 [style = bold, label=""];
5->1 [style = bold, label=""];
10->1 [style = solid, label="configManager"];
3->13 [style = solid, label="loadManagementPeons"];
35->33 [style = solid, label="scheduledExecutorFactory"];
1->6 [style = bold, label=""];
40->39 [style = bold, label=""];
0->13 [style = solid, label="scheduledExecutorFactory"];
31->44 [style = bold, label=""];
11->27 [style = solid, label="objectMapper"];
10->23 [style = bold, label=""];
4->13 [style = solid, label="druidCoordinatorConfig"];
39->4 [style = solid, label="objectMapper"];
15->24 [style = bold, label=""];
2->36 [style = bold, label=""];
0->8 [style = bold, label=""];
9->21 [style = bold, label=""];
38->21 [style = bold, label=""];
11->28 [style = solid, label="objectMapper"];
32->41 [style = bold, label=""];
17->13 [style = bold, label=""];
36->1 [style = solid, label="configManager"];
26->28 [style = bold, label=""];
28->27 [style = bold, label=""];
41->33 [style = bold, label=""];
2->13 [style = solid, label="metadataRuleManager"];
4->27 [style = solid, label="druidCoordinatorConfig"];
22->13 [style = solid, label="druidNode"];
0->35 [style = dashed, label="0"];
36->34 [style = bold, label=""];
26->20 [style = bold, label=""];
44->33 [style = solid, label="druidNode"];
4->14 [style = solid, label="druidCoordinatorConfig"];
}
