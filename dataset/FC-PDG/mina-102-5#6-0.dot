digraph {
1 [style = filled, label = "ByteBuffer buffer = encoder.encode(value)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(value,decoder.decode(buffer).intValue())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "int i = 1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(i,extendedBuffer.remaining())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ProtocolDecoderException e@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testExtendedValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSizedValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "extendedBuffer.put(buffer.slice())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSizedValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "ByteBuffer extendedBuffer = ByteBuffer.allocate(size)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "decoder.decode(extendedBuffer)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(value,decoder.decode(IoBuffer.wrap(buffer)).intValue())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "extendedBuffer.position(start)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int start = extendedBuffer.position()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ProtocolDecoderException e@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < 5@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "fail(\"Should not throw exception\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "extendedBuffer.limit(start + size)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int size = buffer.remaining() + i@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
16->15 [style = bold, label=""];
1->4 [style = bold, label=""];
15->14 [style = bold, label=""];
12->19 [style = solid, label="i"];
11->1 [style = bold, label=""];
8->9 [style = solid, label="start"];
19->14 [style = solid, label="i"];
2->1 [style = bold, label=""];
8->18 [style = bold, label=""];
19->17 [style = solid, label="i"];
12->11 [style = bold, label=""];
11->14 [style = dotted, label="true"];
11->17 [style = dotted, label="true"];
17->13 [style = solid, label="size"];
14->19 [style = bold, label=""];
19->11 [style = bold, label=""];
11->9 [style = dotted, label="true"];
11->13 [style = dotted, label="true"];
11->18 [style = dotted, label="true"];
9->16 [style = bold, label=""];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
5->1 [style = bold, label=""];
12->14 [style = solid, label="i"];
12->17 [style = solid, label="i"];
0->1 [style = bold, label=""];
4->15 [style = dashed, label="0"];
13->15 [style = solid, label="extendedBuffer"];
18->9 [style = bold, label=""];
1->12 [style = bold, label=""];
3->0 [style = dotted, label="true"];
17->16 [style = solid, label="size"];
11->16 [style = dotted, label="true"];
4->5 [style = dashed, label="0"];
11->17 [style = bold, label=""];
11->8 [style = dotted, label="true"];
12->11 [style = solid, label="i"];
4->1 [style = bold, label=""];
17->13 [style = bold, label=""];
11->19 [style = dotted, label="true"];
19->11 [style = solid, label="i"];
13->8 [style = bold, label=""];
11->15 [style = dotted, label="true"];
10->1 [style = bold, label=""];
7->19 [style = bold, label=""];
0->7 [style = dotted, label="true"];
8->16 [style = solid, label="start"];
}
