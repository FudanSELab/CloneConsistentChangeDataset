digraph {
8 [style = filled, label = "QueryRunner<ResultRow> mergeRunner = factory.getToolchest().mergeResults(runner)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "GroupByQuery.Builder builder = makeQueryBuilder().setDataSource(QueryRunnerTestHelper.dataSource).setInterval(\"2011-04-02/2011-04-04\").setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).addOrderByColumn(\"rows\").addOrderByColumn(\"alias\",OrderByColumnSpec.Direction.DESCENDING).setGranularity(new PeriodGranularity(new Period(\"P1M\"),null,null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TestHelper.assertExpectedObjects(Iterables.limit(expectedResults,5),mergeRunner.run(QueryPlus.wrap(builder.setLimit(5).build()),context),\"limited\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "QueryRunner<Row> mergeRunner = factory.getToolchest().mergeResults(runner)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestHelper.assertExpectedObjects(Iterables.limit(expectedResults,5),mergeRunner.run(QueryPlus.wrap(builder.setLimit(5).build()),context),\"limited\")@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "expectedResults = GroupByQueryRunnerTestHelper.createExpectedRows(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9b6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9bd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9c4,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9cb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9d2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9d9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9e0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9e7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9ee,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a9f5)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "GroupByQuery.Builder builder = makeQueryBuilder().setDataSource(QueryRunnerTestHelper.dataSource).setInterval(\"2011-04-02/2011-04-04\").setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new DoubleSumAggregatorFactory(\"idx\",\"index\")).addOrderByColumn(\"idx\",OrderByColumnSpec.Direction.DESCENDING).addOrderByColumn(\"alias\",OrderByColumnSpec.Direction.DESCENDING).setGranularity(new PeriodGranularity(new Period(\"P1M\"),null,null))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestHelper.assertExpectedObjects(Iterables.limit(expectedResults,5),mergeRunner.run(QueryPlus.wrap(builder.setLimit(5).build())),\"limited\")@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,mergeRunner.run(QueryPlus.wrap(query),context),\"no-limit\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testGroupByWithOrderLimit3['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "builder.setLimit(Integer.MAX_VALUE).setAggregatorSpecs(aggregatorSpecs)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testGroupByOrderLimit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ResponseContext context = ResponseContext.createEmpty()@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<Row> expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"travel\",\"rows\",2L,\"idx\",243L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"technology\",\"rows\",2L,\"idx\",177L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"news\",\"rows\",2L,\"idx\",221L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"health\",\"rows\",2L,\"idx\",216L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"entertainment\",\"rows\",2L,\"idx\",319L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"business\",\"rows\",2L,\"idx\",217L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"automotive\",\"rows\",2L,\"idx\",269L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"premium\",\"rows\",6L,\"idx\",4416L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"mezzanine\",\"rows\",6L,\"idx\",4420L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<AggregatorFactory> aggregatorSpecs2 = Arrays.asList(QueryRunnerTestHelper.rowsCount,new DoubleSumAggregatorFactory(\"idx\",\"expr\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "List<AggregatorFactory> aggregatorSpecs = Arrays.asList(QueryRunnerTestHelper.rowsCount,new DoubleSumAggregatorFactory(\"idx\",null,\"index / 2 + indexMin\",TestExprMacroTable.INSTANCE))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testGroupByWithOrderLimit3['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ExpressionVirtualColumn expressionVirtualColumn = new ExpressionVirtualColumn(\"expr\",\"index / 2 + indexMin\",ValueType.FLOAT,TestExprMacroTable.INSTANCE)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<Row> expectedResults = GroupByQueryRunnerTestHelper.createExpectedRows(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a786,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a78d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a794,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a79b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a7a2,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a7a9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a7b0,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a7b7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a7be,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a7c5)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,mergeRunner.run(QueryPlus.wrap(builder.build()),context),\"no-limit\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TestHelper.assertExpectedObjects(Iterables.limit(expectedResults,5),mergeRunner.run(QueryPlus.wrap(builder.setLimit(5).build()),context),\"limited\")@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "cannotVectorize()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,mergeRunner.run(QueryPlus.wrap(builder.build()),context),\"no-limit\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "builder.setLimit(Integer.MAX_VALUE).setVirtualColumns(expressionVirtualColumn).setAggregatorSpecs(aggregatorSpecs2)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,mergeRunner.run(QueryPlus.wrap(query),context),\"no-limit\")@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "ResponseContext context = ResponseContext.createEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<ResultRow> expectedResults = makeRows(query,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a84a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a851,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a858,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a85f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a866,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a86d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a874,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a87b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a882,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a3a889)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,mergeRunner.run(QueryPlus.wrap(query)),\"no-limit\")@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "TestHelper.assertExpectedObjects(Iterables.limit(expectedResults,5),mergeRunner.run(QueryPlus.wrap(builder.setLimit(5).build()),context),\"limited\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "GroupByQuery query = builder.build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final GroupByQuery query = builder.build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "QueryRunner<Row> mergeRunner = factory.getToolchest().mergeResults(runner)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = solid, label="expectedResults"];
6->3 [style = bold, label=""];
22->25 [style = bold, label=""];
14->24 [style = bold, label=""];
22->13 [style = solid, label="expectedResults"];
20->19 [style = solid, label="expectedResults"];
4->6 [style = bold, label=""];
25->13 [style = solid, label="context"];
25->14 [style = solid, label="context"];
1->31 [style = dashed, label="0"];
28->31 [style = bold, label=""];
30->26 [style = bold, label=""];
6->9 [style = dashed, label="0"];
7->0 [style = bold, label=""];
5->6 [style = solid, label="context"];
29->23 [style = bold, label=""];
25->29 [style = bold, label=""];
25->18 [style = solid, label="context"];
17->22 [style = bold, label=""];
12->9 [style = bold, label=""];
1->6 [style = solid, label="query"];
27->15 [style = solid, label="aggregatorSpecs"];
25->26 [style = solid, label="context"];
11->12 [style = solid, label="expectedResults"];
27->15 [style = bold, label=""];
21->28 [style = bold, label=""];
1->11 [style = bold, label=""];
25->23 [style = solid, label="context"];
1->12 [style = solid, label="query"];
24->16 [style = bold, label=""];
13->27 [style = bold, label=""];
19->14 [style = bold, label=""];
5->3 [style = solid, label="context"];
23->13 [style = bold, label=""];
16->30 [style = solid, label="aggregatorSpecs2"];
20->14 [style = solid, label="expectedResults"];
0->1 [style = bold, label=""];
15->20 [style = bold, label=""];
22->23 [style = solid, label="expectedResults"];
16->30 [style = bold, label=""];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
1->11 [style = solid, label="query"];
25->19 [style = solid, label="context"];
20->18 [style = solid, label="expectedResults"];
17->23 [style = solid, label="query"];
11->8 [style = bold, label=""];
11->9 [style = solid, label="expectedResults"];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->6 [style = solid, label="expectedResults"];
31->17 [style = bold, label=""];
20->19 [style = bold, label=""];
8->12 [style = bold, label=""];
20->26 [style = solid, label="expectedResults"];
2->5 [style = bold, label=""];
26->18 [style = bold, label=""];
}
