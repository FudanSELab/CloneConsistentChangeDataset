digraph {
2 [style = filled, label = "rf = new ReturnFields(req(\"fl\",\"newId:id newName:name newTest:test newSubject:subject score\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(rf.wantsField(\"newSubject\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testAliases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(rf.wantsField(\"name\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(rf.wantsField(\"newTest\"))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(rf.getTransformer() instanceof RenameFieldsTransformer)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(rf.wantsField(\"newTest\"))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertFalse(rf.wantsAllFields())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(rf.wantsField(\"id$test\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(rf.wantsField(\"test\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(rf.wantsField(\"id\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ReturnFields rf = new ReturnFields(req(\"fl\",\"id$test\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testTrailingDollarInFieldName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(rf.wantsField(\"id\"))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(rf.wantsField(\"newSubject\"))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertFalse(rf.wantsField(\"xxx\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(rf.getTransformer() instanceof DocTransformers)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(rf.wantsField(\"name\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(rf.wantsField(\"test\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(rf.wantsField(\"newId\"))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ReturnFields rf = new ReturnFields(req(\"fl\",\"newId:id newName:name newTest:test newSubject:subject\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,((DocTransformers)rf.getTransformer()).size())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testAliases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertFalse(rf.wantsScore())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(rf.wantsField(\"subject\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(rf.wantsField(\"newId\"))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertTrue(rf.wantsField(\"subject\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(rf.wantsField(\"newName\"))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertTrue(rf.wantsField(\"newName\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5->2 [style = bold, label=""];
10->16 [style = bold, label=""];
28->31 [style = bold, label=""];
23->22 [style = bold, label=""];
29->30 [style = bold, label=""];
11->4 [style = bold, label=""];
7->8 [style = bold, label=""];
24->18 [style = bold, label=""];
27->28 [style = bold, label=""];
22->6 [style = bold, label=""];
13->0 [style = bold, label=""];
7->28 [style = dashed, label="0"];
32->27 [style = bold, label=""];
13->24 [style = bold, label=""];
8->17 [style = bold, label=""];
18->26 [style = bold, label=""];
0->1 [style = bold, label=""];
3->6 [style = bold, label=""];
12->9 [style = bold, label=""];
19->21 [style = bold, label=""];
26->25 [style = bold, label=""];
6->14 [style = bold, label=""];
15->11 [style = bold, label=""];
17->13 [style = bold, label=""];
3->19 [style = bold, label=""];
8->31 [style = dashed, label="0"];
25->0 [style = bold, label=""];
20->9 [style = bold, label=""];
31->29 [style = bold, label=""];
14->10 [style = bold, label=""];
21->23 [style = bold, label=""];
4->3 [style = bold, label=""];
2->15 [style = bold, label=""];
9->27 [style = dashed, label="0"];
1->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
