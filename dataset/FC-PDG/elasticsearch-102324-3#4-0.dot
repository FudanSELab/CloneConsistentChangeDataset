digraph {
11 [style = filled, label = "Join v1 = cs1.handleStartJoin(startJoinRequest1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cs1.setInitialState(state1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ClusterState state2 = clusterState(startJoinRequest1.getTerm(),2L,node1,initialConfig,initialConfig,42L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(cs1.electionWon())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "VotingConfiguration initialConfig = new VotingConfiguration(Collections.singleton(node1.getId()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ClusterState state1 = clusterState(0L,0L,node1,initialConfig,initialConfig,42L)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ClusterState state2 = clusterState(startJoinRequest1.getTerm(),1L,node1,initialConfig,initialConfig,42L)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(expectThrows(,null).getMessage(),containsString(\"lower or equal to last published version\"))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "StartJoinRequest startJoinRequest1 = new StartJoinRequest(node1,randomLongBetween(1,5))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cs1.handleClientValue(state2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ClusterState state3 = clusterState(startJoinRequest1.getTerm(),3L,node1,initialConfig,initialConfig,42L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testHandleClientValueDuringOngoingPublication['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ClusterState state1 = clusterState(0L,1L,node1,initialConfig,initialConfig,42L)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(cs1.handleJoin(v1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHandleClientValueDuringOngoingPublication['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "testHandleClientValueWithOldVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(expectThrows(,null).getMessage(),containsString(\"cannot start publishing next value before accepting previous one\"))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
0->12 [style = solid, label="initialConfig"];
10->6 [style = bold, label=""];
14->16 [style = bold, label=""];
8->0 [style = bold, label=""];
13->0 [style = bold, label=""];
0->14 [style = solid, label="initialConfig"];
11->9 [style = bold, label=""];
5->4 [style = bold, label=""];
3->1 [style = bold, label=""];
1->11 [style = bold, label=""];
2->3 [style = bold, label=""];
4->10 [style = solid, label="state2"];
10->16 [style = dashed, label="0"];
15->0 [style = bold, label=""];
1->11 [style = solid, label="startJoinRequest1"];
12->3 [style = solid, label="state1"];
11->9 [style = solid, label="v1"];
0->12 [style = bold, label=""];
12->3 [style = bold, label=""];
4->10 [style = bold, label=""];
0->4 [style = solid, label="initialConfig"];
2->3 [style = solid, label="state1"];
0->2 [style = bold, label=""];
6->7 [style = bold, label=""];
9->5 [style = bold, label=""];
0->6 [style = solid, label="initialConfig"];
0->2 [style = solid, label="initialConfig"];
2->12 [style = dashed, label="0"];
}
