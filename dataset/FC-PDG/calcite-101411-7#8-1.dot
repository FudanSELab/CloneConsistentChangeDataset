digraph {
26 [style = filled, label = "assertThat(SqlFunctions.divideAny(5L,2.0D),is((Object)new BigDecimal(\"2.5\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(2L,1.0D),is((Object)new BigDecimal(2)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testMultiplyAny['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(SqlFunctions.divideAny(null,null),nullValue())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SqlFunctions.multiplyAny(\"2\",2L)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(1,null),nullValue())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(null,1),nullValue())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(SqlFunctions.divideAny(5,2.0D),is((Object)new BigDecimal(\"2.5\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "SqlFunctions.divideAny(\"5\",2L)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(SqlFunctions.divideAny(1,null),nullValue())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(2,1.0D),is((Object)new BigDecimal(2)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testDivideAny['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(new BigDecimal(2L),1.0D),is((Object)new BigDecimal(2)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),new BigDecimal(2.0D)),is((Object)new BigDecimal(2.5)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testMultiplyAny['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(new BigDecimal(2L),1L),is((Object)new BigDecimal(2)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fail(\"'multiply' on non-numeric type is not possible\")@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2L),is((Object)new BigDecimal(2.5)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(null,null),nullValue())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2.0D),is((Object)new BigDecimal(2.5)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "fail(\"'divide' on non-numeric type is not possible\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(2,1L),is((Object)new BigDecimal(2)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(new BigDecimal(2L),new BigDecimal(1.0D)),is((Object)new BigDecimal(2)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(SqlFunctions.multiplyAny(new BigDecimal(2L),1),is((Object)new BigDecimal(2)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(SqlFunctions.divideAny(new BigDecimal(5L),2),is((Object)new BigDecimal(2.5)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(SqlFunctions.divideAny(null,1),nullValue())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(SqlFunctions.divideAny(5,2L),is((Object)new BigDecimal(\"2.5\")))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
22->26 [style = bold, label=""];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
12->23 [style = dashed, label="0"];
5->9 [style = bold, label=""];
21->19 [style = bold, label=""];
9->24 [style = dashed, label="0"];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
3->16 [style = dashed, label="0"];
11->12 [style = bold, label=""];
20->14 [style = bold, label=""];
6->17 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
4->22 [style = dashed, label="0"];
8->14 [style = dashed, label="0"];
0->20 [style = dashed, label="0"];
12->6 [style = bold, label=""];
25->16 [style = bold, label=""];
13->11 [style = bold, label=""];
6->1 [style = bold, label=""];
10->26 [style = dashed, label="0"];
18->22 [style = bold, label=""];
8->5 [style = bold, label=""];
11->19 [style = dashed, label="0"];
24->25 [style = bold, label=""];
19->23 [style = bold, label=""];
15->24 [style = bold, label=""];
10->0 [style = bold, label=""];
0->8 [style = bold, label=""];
2->25 [style = dashed, label="0"];
23->17 [style = bold, label=""];
14->15 [style = bold, label=""];
5->15 [style = dashed, label="0"];
17->18 [style = bold, label=""];
26->20 [style = bold, label=""];
}
