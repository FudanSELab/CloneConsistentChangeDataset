digraph {
0 [style = filled, label = "limit = validateSizeString(limitStr)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String namespace = validateNamespace(params)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "run['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "getTopics().setBacklogQuota(persistentTopic,new BacklogQuota(limit,limitTime,policy))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "throw new ParameterException(String.format(\"Invalid retention policy type '%s'. Valid options are: %s\",policyStr,Arrays.toString(BacklogQuota.RetentionPolicy.values())))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "getAdmin().namespaces().setBacklogQuota(namespace,BacklogQuota.builder().limitSize(limit).limitTime(limitTime).retentionPolicy(policy).build())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "getAdmin().namespaces().setBacklogQuota(namespace,new BacklogQuota(limit,limitTime,policy))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "run['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "policy = BacklogQuota.RetentionPolicy.valueOf(policyStr)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "run['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "BacklogQuota.RetentionPolicy policy@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "IllegalArgumentException e@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long limit@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String persistentTopic = validatePersistentTopic(params)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->11 [style = solid, label="limit"];
6->3 [style = bold, label=""];
8->10 [style = dashed, label="0"];
0->8 [style = solid, label="limit"];
3->8 [style = solid, label="policy"];
7->10 [style = bold, label=""];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
0->12 [style = bold, label=""];
12->11 [style = bold, label=""];
7->8 [style = bold, label=""];
3->0 [style = bold, label=""];
5->4 [style = dotted, label="true"];
7->10 [style = solid, label="namespace"];
3->11 [style = solid, label="policy"];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
12->11 [style = solid, label="persistentTopic"];
7->8 [style = solid, label="namespace"];
5->4 [style = bold, label=""];
7->12 [style = dashed, label="0"];
1->2 [style = bold, label=""];
8->11 [style = dashed, label="0"];
13->2 [style = bold, label=""];
}
