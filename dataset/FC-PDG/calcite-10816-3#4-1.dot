digraph {
10 [style = filled, label = "tester.checkType(\"min(1)\",\"INTEGER\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkFails(\"max(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tester.checkType(\"max(DISTINCT 1.5)\",\"DECIMAL(2, 1)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "tester.checkAgg(\"max(DISTINCT x)\",values,\"2\",0d)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testMinFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "tester.checkAgg(\"min(CASE x WHEN 0 THEN NULL ELSE -1 END)\",values,\"-1\",0d)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.checkAgg(\"min(DISTINCT x)\",values,\"0\",0d)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tester.setFor(SqlStdOperatorTable.MAX,VM_EXPAND)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "!enable@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkAgg(\"max(CASE x WHEN 0 THEN NULL ELSE -1 END)\",values,\"-1\",0d)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "tester.checkAgg(\"min(x)\",values,\"0\",0d)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "tester.checkFails(\"min(^*^)\",\"Unknown identifier '\*'\",false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkAgg(\"max(x)\",values,\"2\",0d)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tester.checkFails(\"^min(1, 2)^\",\"Invalid number of arguments to function 'MIN'. Was expecting 1 arguments\",false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkType(\"max(1.2)\",\"DECIMAL(2, 1)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkType(\"min(DISTINCT 1.5)\",\"DECIMAL(2, 1)\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.setFor(SqlStdOperatorTable.MIN,VM_EXPAND)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "tester.checkType(\"min(1.2)\",\"DECIMAL(2, 1)\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tester.checkType(\"max(1)\",\"INTEGER\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "tester.checkAgg(\"max(DISTINCT CASE x WHEN 0 THEN NULL ELSE -1 END)\",values,\"-1\",0d)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testMinFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.checkFails(\"^min()^\",\"Invalid number of arguments to function 'MIN'. Was expecting 1 arguments\",false)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String(( values = {\"0\",\"CAST(null AS INTEGER)\",\"2\",\"2\"}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tester.checkFails(\"^max(1, 2)^\",\"Invalid number of arguments to function 'MAX'. Was expecting 1 arguments\",false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tester.checkFails(\"^max()^\",\"Invalid number of arguments to function 'MAX'. Was expecting 1 arguments\",false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testMaxFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkAgg(\"min(DISTINCT CASE x WHEN 0 THEN NULL ELSE -1 END)\",values,\"-1\",0d)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->19 [style = solid, label="values"];
4->18 [style = dashed, label="0"];
4->3 [style = bold, label=""];
11->20 [style = dashed, label="0"];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
8->18 [style = bold, label=""];
1->3 [style = solid, label="values"];
26->1 [style = bold, label=""];
23->26 [style = bold, label=""];
18->19 [style = bold, label=""];
2->27 [style = dashed, label="0"];
5->25 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->12 [style = bold, label=""];
21->25 [style = bold, label=""];
10->22 [style = dashed, label="0"];
15->5 [style = bold, label=""];
14->1 [style = bold, label=""];
14->26 [style = dashed, label="0"];
20->22 [style = bold, label=""];
19->24 [style = bold, label=""];
3->19 [style = dashed, label="0"];
6->14 [style = bold, label=""];
1->16 [style = solid, label="values"];
0->8 [style = dotted, label="true"];
12->13 [style = bold, label=""];
24->16 [style = bold, label=""];
1->18 [style = solid, label="values"];
25->20 [style = bold, label=""];
7->5 [style = bold, label=""];
1->4 [style = solid, label="values"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
9->17 [style = dashed, label="0"];
12->24 [style = dashed, label="0"];
0->8 [style = bold, label=""];
1->13 [style = solid, label="values"];
1->12 [style = solid, label="values"];
22->17 [style = bold, label=""];
0->18 [style = bold, label=""];
27->23 [style = bold, label=""];
10->9 [style = bold, label=""];
5->11 [style = bold, label=""];
8->4 [style = bold, label=""];
17->27 [style = bold, label=""];
6->23 [style = dashed, label="0"];
1->24 [style = solid, label="values"];
13->16 [style = dashed, label="0"];
}
