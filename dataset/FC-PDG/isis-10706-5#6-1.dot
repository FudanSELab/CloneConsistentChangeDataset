digraph {
9 [style = filled, label = "final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "titleThrowsException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String title = facet.title(mockObjectAdapter)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testTitle['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "context.checking(new Expectations(){})@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testTitle['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String title = facet.title(mockObjectAdapter,null)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final List<TitleComponent> components = Lists.transform(evaluators,TitleComponent.FROM_EVALUATORS)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Sequence sequence = context.sequence(\"in-title-element-order\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.checking(new Expectations(){})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(title,is(\"Normal Domain Object\"))@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components,mockFacetHolder,mockAdapterManager)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<Annotations.Evaluator<Title>> evaluators = Annotations.getEvaluators(,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final List<TitleComponent> components = Lists.transform(evaluatorList,TitleComponent.FROM_EVALUATORS)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final NormalDomainObject normalPojo = new NormalDomainObject()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<Annotations.Evaluator<Title>> evaluatorList = Annotations.getEvaluators(,)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(title,is(\"Failed Title\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TitleAnnotationFacetFactory.sort(evaluatorList)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String title = facet.title(mockObjectAdapter,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
17->12 [style = solid, label="title"];
0->8 [style = solid, label="evaluatorList"];
16->18 [style = bold, label=""];
0->3 [style = solid, label="evaluatorList"];
18->14 [style = solid, label="components"];
3->18 [style = dashed, label="0"];
0->16 [style = dashed, label="0"];
8->9 [style = solid, label="components"];
7->11 [style = dashed, label="0"];
16->18 [style = solid, label="evaluators"];
7->2 [style = solid, label="title"];
13->16 [style = bold, label=""];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
6->4 [style = bold, label=""];
2->12 [style = dashed, label="0"];
15->17 [style = bold, label=""];
17->12 [style = bold, label=""];
1->6 [style = bold, label=""];
5->0 [style = bold, label=""];
7->2 [style = bold, label=""];
9->15 [style = bold, label=""];
3->8 [style = bold, label=""];
10->0 [style = bold, label=""];
8->9 [style = bold, label=""];
14->9 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
18->14 [style = bold, label=""];
11->2 [style = solid, label="title"];
}
