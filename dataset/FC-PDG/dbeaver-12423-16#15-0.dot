digraph {
4 [style = filled, label = "dropTarget.addDropListener(new DropTargetAdapter(){@Override public void dragEnter(DropTargetEvent event){handleDragEvent(event)}@Override public void dragLeave(DropTargetEvent event){handleDragEvent(event)}@Override public void dragOperationChanged(DropTargetEvent event){handleDragEvent(event)}@Override public void dragOver(DropTargetEvent event){handleDragEvent(event)}@Override public void drop(DropTargetEvent event){handleDragEvent(event)if (event.detail == DND.DROP_MOVE || event.detail == DND.DROP_COPY) {dropColumns(event)}}@Override public void dropAccept(DropTargetEvent event){handleDragEvent(event)}private void handleDragEvent(DropTargetEvent event){if (!isDropSupported(event)) {event.detail = DND.DROP_NONE}{if (event.detail == DND.DROP_NONE) {event.detail = DND.DROP_MOVE}}event.feedback = DND.FEEDBACK_SELECT}private boolean isDropSupported(DropTargetEvent event){return true}@SuppressWarnings(\"unchecked\") private void dropColumns(DropTargetEvent event){if (!(event.data instanceof List)) {return}List<Object> dropElements = (List<Object>)event.dataList<String> newBindings = new ArrayList<>()List<DBDAttributeBinding> movedBindings = new ArrayList<>()for (Object element : dropElements){if (element instanceof DBDAttributeBinding) {DBDAttributeBinding binding = (DBDAttributeBinding)elementString attrName = getAttributeBindingName(binding)if (ArrayUtils.contains(container.getResultSetController().getModel().getAttributes(),binding)) {if (container.getGroupAttributes().contains(attrName)) {movedBindings.add(binding)}}{newBindings.add(attrName)}}}if (movedBindings.isEmpty() && newBindings.isEmpty()) {return}if (!movedBindings.isEmpty()) {if (gridDropListeners != null) {}List<String> curAttributes = new ArrayList<>(container.getGroupAttributes())if (!(presentation.getControl() instanceof Spreadsheet)) {return}int overColumnIndex = ((Spreadsheet)presentationControl).getColumnIndex(event.x,event.y)if (overColumnIndex < 0) {return}if (overColumnIndex >= curAttributes.size()) {overColumnIndex = curAttributes.size() - 1}for (DBDAttributeBinding mb : movedBindings){String attrName = getAttributeBindingName(mb)curAttributes.remove(attrName)curAttributes.add(overColumnIndex,attrName)}container.clearGroupingAttributes()container.addGroupingAttributes(curAttributes)}if (!newBindings.isEmpty()) {container.addGroupingAttributes(newBindings)}UIUtils.asyncExec(null)}})@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Object oldDropTarget = presentationControl.getData(DND.DROP_TARGET_KEY)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "registerDragAndDrop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "registerDragAndDrop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "@NotNull IResultSetPresentation presentation@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Control presentationControl = presentation.getControl()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "dropTarget.setTransfer(LightGrid.GridColumnTransfer.INSTANCE,TextTransfer.getInstance())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DropTarget dropTarget = new DropTarget(presentation.getControl(),DND.DROP_MOVE | DND.DROP_COPY)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "DropTarget dropTarget = new DropTarget(presentationControl,DND.DROP_MOVE | DND.DROP_COPY)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "gridDropListeners = ((DropTarget)oldDropTarget).getDropListeners()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "oldDropTarget instanceof DropTarget@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "gridDropListeners = null@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "GroupingConfigDialog dialog = new GroupingConfigDialog(groupingResultsContainer.getResultSetController().getControl().getShell(),groupingResultsContainer)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "groupingResultsContainer.rebuildGrouping()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "run['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Object oldDropTarget = presentation.getControl().getData(DND.DROP_TARGET_KEY)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "((DropTarget)oldDropTarget).dispose()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "dialog.open() == IDialogConstants.OK_ID@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final DropTargetListener(( gridDropListeners@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
0->9 [style = bold, label=""];
8->4 [style = solid, label="gridDropListeners"];
12->5 [style = bold, label=""];
1->6 [style = solid, label="oldDropTarget"];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
3->10 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
7->0 [style = bold, label=""];
12->13 [style = solid, label="presentationControl"];
16->17 [style = bold, label=""];
15->18 [style = bold, label=""];
14->10 [style = dotted, label="true"];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
6->2 [style = dotted, label="true"];
6->8 [style = dotted, label="false"];
1->11 [style = dashed, label="0"];
14->12 [style = bold, label=""];
0->13 [style = dashed, label="0"];
6->8 [style = bold, label=""];
11->6 [style = solid, label="oldDropTarget"];
17->15 [style = bold, label=""];
6->7 [style = dotted, label="true"];
5->11 [style = bold, label=""];
13->9 [style = bold, label=""];
2->7 [style = bold, label=""];
2->4 [style = solid, label="gridDropListeners"];
8->13 [style = bold, label=""];
}
