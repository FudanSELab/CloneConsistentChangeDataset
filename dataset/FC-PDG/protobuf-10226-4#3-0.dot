digraph {
9 [style = filled, label = "testGetDefaultValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,outer.getInner().getNum())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(outer.hasOneofNum())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(42,outer.getOneofInner().getNumWithDefault())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "LazyMessageLite outer = LazyMessageLite.getDefaultInstance()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testGetDefaultValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(3,outer.getInner().getNested().getNum())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(1,outer.getNum())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(42,outer.getOneofInner().getNumWithDefault())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(3,outer.getOneofInner().getNested().getNum())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(42,outer.getInner().getNumWithDefault())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(4,outer.getOneofInner().getNested().getNumWithDefault())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LazyMessageLite outer = LazyMessageLite.newBuilder().build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "LazyInnerMessageLite inner = LazyInnerMessageLite.newBuilder().setNum(2).setNested(nested).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(0,outer.getNum())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(outer.hasOneofInner())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(4,outer.getInner().getNested().getNumWithDefault())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(421,outer.getNumWithDefault())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(0,outer.getOneofNum())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(4,outer.getOneofInner().getNested().getNumWithDefault())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2,outer.getOneofInner().getNum())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testSetValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "LazyNestedInnerMessageLite nested = LazyNestedInnerMessageLite.newBuilder().setNum(3).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(2,outer.getInner().getNum())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(0,outer.getInner().getNested().getNum())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,outer.getOneofInner().getNested().getNum())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LazyMessageLite outer = LazyMessageLite.newBuilder().setNum(1).setInner(inner).setOneofNum(123).setOneofInner(inner).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(421,outer.getNumWithDefault())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
10->22 [style = bold, label=""];
27->18 [style = bold, label=""];
15->10 [style = bold, label=""];
4->16 [style = dashed, label="0"];
22->19 [style = bold, label=""];
1->14 [style = dashed, label="0"];
10->19 [style = dashed, label="0"];
8->23 [style = dashed, label="0"];
5->15 [style = bold, label=""];
12->16 [style = bold, label=""];
3->22 [style = dashed, label="0"];
10->6 [style = bold, label=""];
19->25 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->10 [style = bold, label=""];
18->20 [style = bold, label=""];
12->2 [style = bold, label=""];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
1->17 [style = dashed, label="0"];
0->4 [style = bold, label=""];
26->23 [style = bold, label=""];
6->8 [style = bold, label=""];
20->12 [style = bold, label=""];
25->26 [style = bold, label=""];
16->5 [style = bold, label=""];
4->12 [style = bold, label=""];
17->27 [style = bold, label=""];
9->1 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
21->17 [style = bold, label=""];
2->5 [style = bold, label=""];
}
