digraph {
23 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "unionExp == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "intersectExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "unionExp = childExp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "unionExp = all? Expressions.call(unionExp,BuiltInMethod.CONCAT.method,childExp): Expressions.call(unionExp,BuiltInMethod.UNION.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Expression intersectExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Prefer pref@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.add(unionExp)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "builder.add(intersectExp)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Expression unionExp = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "intersectExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Prefer pref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0->14 [style = solid, label="pref"];
14->3 [style = solid, label="result"];
2->13 [style = solid, label="unionExp"];
21->11 [style = bold, label=""];
11->3 [style = bold, label=""];
18->20 [style = dotted, label="true"];
12->14 [style = solid, label="pref"];
19->18 [style = solid, label="intersectExp"];
11->3 [style = solid, label="physType"];
18->20 [style = bold, label=""];
19->9 [style = bold, label=""];
13->21 [style = dashed, label="0"];
7->10 [style = bold, label=""];
5->13 [style = solid, label="unionExp"];
19->21 [style = solid, label="intersectExp"];
2->13 [style = bold, label=""];
4->5 [style = bold, label=""];
2->4 [style = solid, label="unionExp"];
2->20 [style = dashed, label="0"];
9->13 [style = bold, label=""];
17->23 [style = dotted, label="true"];
1->18 [style = bold, label=""];
2->10 [style = bold, label=""];
8->6 [style = bold, label=""];
9->21 [style = bold, label=""];
1->2 [style = solid, label="childExp"];
5->9 [style = bold, label=""];
20->21 [style = solid, label="intersectExp"];
5->10 [style = bold, label=""];
6->22 [style = bold, label=""];
16->15 [style = dotted, label="true"];
5->19 [style = dashed, label="0"];
22->19 [style = solid, label="intersectExp"];
4->2 [style = bold, label=""];
5->13 [style = bold, label=""];
14->1 [style = bold, label=""];
2->9 [style = bold, label=""];
16->12 [style = dotted, label="true"];
13->11 [style = bold, label=""];
17->12 [style = dotted, label="true"];
4->5 [style = dotted, label="false"];
17->6 [style = bold, label=""];
18->19 [style = bold, label=""];
10->14 [style = solid, label="input"];
20->18 [style = solid, label="intersectExp"];
7->22 [style = dashed, label="0"];
7->5 [style = solid, label="unionExp"];
5->4 [style = solid, label="unionExp"];
16->6 [style = bold, label=""];
1->4 [style = bold, label=""];
1->20 [style = solid, label="childExp"];
1->5 [style = solid, label="childExp"];
8->0 [style = dotted, label="true"];
4->18 [style = dashed, label="0"];
22->18 [style = solid, label="intersectExp"];
20->9 [style = bold, label=""];
18->19 [style = dotted, label="false"];
6->7 [style = bold, label=""];
22->10 [style = bold, label=""];
2->5 [style = solid, label="unionExp"];
20->19 [style = solid, label="intersectExp"];
7->4 [style = solid, label="unionExp"];
9->14 [style = solid, label="pref"];
10->14 [style = bold, label=""];
8->12 [style = dotted, label="true"];
9->10 [style = bold, label=""];
4->2 [style = dotted, label="true"];
}
