digraph {
1 [style = filled, label = "init['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "al.close()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(al.shouldLog(AuditEvent.EventType.ANONYMOUS))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SolrResourceLoader loader = new SolrResourceLoader()@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "conf1.put(\"class\",\"solr.SolrLogAuditLoggerPlugin\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(al.shouldLog(AuditEvent.EventType.UNAUTHORIZED))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "al.init(config)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(al.shouldLog(AuditEvent.EventType.AUTHENTICATED))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "wrongConfigParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(1,((MockAuditLoggerPlugin)al.plugins.get(1)).events.size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,config.size())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "SolrResourceLoader loader = new SolrResourceLoader(Paths.get(\"\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "al.doAudit(new AuditEvent(AuditEvent.EventType.ANONYMOUS).setUsername(\"me\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "al.init(config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ArrayList<Map<String,Object>> plugins = new ArrayList<Map<String,Object>>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "conf2.put(\"async\",false)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "conf1.put(\"eventTypes\",Arrays.asList(AuditEvent.EventType.ANONYMOUS.name()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "conf1.put(\"async\",false)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,Object> conf1 = new HashMap<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "config.put(\"async\",false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "conf2.put(\"eventTypes\",Arrays.asList(AuditEvent.EventType.AUTHENTICATED.name()))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "plugins.add(conf1)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "plugins.add(conf2)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map<String,Object> conf2 = new HashMap<>()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "loader.close()@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "config.put(\"plugins\",plugins)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "conf2.put(\"class\",\"solr.MockAuditLoggerPlugin\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "config.put(\"eventTypes\",Arrays.asList(AuditEvent.EventType.COMPLETED.name()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,config.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "init['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "config.put(\"foo\",\"Should complain\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertFalse(al.shouldLog(AuditEvent.EventType.ERROR))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "config.put(\"class\",\"solr.MultiDestinationAuditLogger\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,((MockAuditLoggerPlugin)al.plugins.get(1)).events.size())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(al.shouldLog(AuditEvent.EventType.COMPLETED))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MultiDestinationAuditLogger al = new MultiDestinationAuditLogger()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "al.doAudit(new AuditEvent(AuditEvent.EventType.AUTHENTICATED).setUsername(\"me\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "al.close()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "al.inform(loader)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->28 [style = bold, label=""];
17->5 [style = bold, label=""];
32->22 [style = bold, label=""];
16->8 [style = bold, label=""];
0->19 [style = bold, label=""];
31->9 [style = bold, label=""];
22->16 [style = bold, label=""];
18->12 [style = solid, label="conf1"];
4->3 [style = solid, label="config"];
20->29 [style = solid, label="conf2"];
26->14 [style = bold, label=""];
12->20 [style = bold, label=""];
23->13 [style = solid, label="plugins"];
14->17 [style = bold, label=""];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
24->29 [style = bold, label=""];
21->30 [style = bold, label=""];
2->4 [style = bold, label=""];
4->0 [style = bold, label=""];
21->30 [style = solid, label="loader"];
9->26 [style = bold, label=""];
5->32 [style = bold, label=""];
0->39 [style = bold, label=""];
34->2 [style = bold, label=""];
30->3 [style = bold, label=""];
15->31 [style = bold, label=""];
21->33 [style = dashed, label="0"];
10->12 [style = bold, label=""];
19->39 [style = dashed, label="0"];
19->27 [style = bold, label=""];
33->30 [style = bold, label=""];
39->38 [style = bold, label=""];
28->24 [style = bold, label=""];
25->10 [style = bold, label=""];
27->23 [style = bold, label=""];
7->25 [style = bold, label=""];
1->2 [style = bold, label=""];
37->2 [style = bold, label=""];
33->30 [style = solid, label="loader"];
35->36 [style = bold, label=""];
18->7 [style = bold, label=""];
13->33 [style = bold, label=""];
13->21 [style = bold, label=""];
38->35 [style = bold, label=""];
4->38 [style = solid, label="config"];
23->18 [style = bold, label=""];
20->11 [style = bold, label=""];
29->13 [style = bold, label=""];
}
