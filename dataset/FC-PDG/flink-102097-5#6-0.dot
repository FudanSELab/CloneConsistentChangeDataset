digraph {
6 [style = filled, label = "List<String> lines = readLines(\"canal-data.txt\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testFilteringTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSerializationDeserialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "runTest(lines,deserializationSchema)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CanalJsonDeserializationSchema deserializationSchema = CanalJsonDeserializationSchema.builder(PHYSICAL_DATA_TYPE,Collections.emptyList(),InternalTypeInfo.of(PHYSICAL_DATA_TYPE.getLogicalType())).setIgnoreParseErrors(false).setTimestampFormat(TimestampFormat.ISO_8601).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testFilteringTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "CanalJsonDeserializationSchema deserializationSchema = CanalJsonDeserializationSchema.builder(PHYSICAL_DATA_TYPE,Collections.emptyList(),InternalTypeInfo.of(PHYSICAL_DATA_TYPE.getLogicalType())).setDatabase(\"^my.*\").setTable(\"^prod.*\").build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "List<String> lines = readLines(\"canal-data-filter-table.txt\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CanalJsonDeserializationSchema deserializationSchema = CanalJsonDeserializationSchema.builder(PHYSICAL_DATA_TYPE,Collections.emptyList(),InternalTypeInfo.of(PHYSICAL_DATA_TYPE.getLogicalType())).setDatabase(\"mydb\").setTable(\"product\").build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
4->3 [style = bold, label=""];
5->1 [style = bold, label=""];
1->4 [style = bold, label=""];
4->3 [style = solid, label="deserializationSchema"];
0->4 [style = dashed, label="0"];
7->6 [style = bold, label=""];
1->3 [style = solid, label="lines"];
1->0 [style = bold, label=""];
0->3 [style = solid, label="deserializationSchema"];
8->3 [style = solid, label="deserializationSchema"];
1->6 [style = dashed, label="0"];
2->1 [style = bold, label=""];
6->3 [style = solid, label="lines"];
6->8 [style = bold, label=""];
8->3 [style = bold, label=""];
}
