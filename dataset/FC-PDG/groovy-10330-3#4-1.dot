digraph {
18 [style = filled, label = "assertEquals(CompilerConfiguration.POST_JDK5,init.getTargetBytecode())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "init.setDebug(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",config.getScriptBaseClass())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(initTDFile,init.getTargetDirectory())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "{final List listCP = config.getClasspath()assertEquals(0,listCP.size())}@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(initJoint,init.getJointCompilationOptions())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final ParserPluginFactory initPPF = ParserPluginFactory.newInstance(true)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(false,config.getDebug())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,config.getWarningLevel())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Map initJoint = new HashMap()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(55,init.getTolerance())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(initPPF,init.getPluginFactory())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "init.setSourceEncoding(\"LEAD-123\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final CompilerConfiguration config = new CompilerConfiguration(init)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "init.setWarningLevel(WarningMessage.POSSIBLE_ERRORS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "testCopyConstructor2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "init.setJointCompilationOptions(initJoint)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final PrintWriter initOut = new PrintWriter(System.out)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(CompilerConfiguration.POST_JDK5,config.getTargetBytecode())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(720,init.getTolerance())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(false,init.getDebug())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(975,init.getMinimumRecompilationInterval())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(\"\",config.getScriptBaseClass())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "init.setClasspath(\"File1\" + File.pathSeparator + \"Somewhere\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(975,config.getMinimumRecompilationInterval())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(false,init.getRecompileGroovySource())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(false,config.getVerbose())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(\"Gutenberg\",init.getSourceEncoding())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(55,config.getTolerance())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,init.getWarningLevel())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "init.setTolerance(720)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "init.setVerbose(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(true,init.getParameters())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",init.getScriptBaseClass())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(initPPF,config.getPluginFactory())@@@64@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "init.setOutput(initOut)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "initJoint.put(\"somekey\",\"somevalue\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "init.setParameters(true)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "init.setMinimumRecompilationInterval(975)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(initTDFile,config.getTargetDirectory())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "init.setRecompileGroovySource(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "init.setVerbose(false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(720,config.getTolerance())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(CompilerConfiguration.PRE_JDK5,init.getTargetBytecode())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(CompilerConfiguration.PRE_JDK5,config.getTargetBytecode())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(initJoint,config.getJointCompilationOptions())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "init.setTolerance(55)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(false,init.getVerbose())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final File initTDFile = new File(\"A wandering path\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\".jpp\",init.getDefaultScriptExtension())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(true,init.getDebug())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testCopyConstructor1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "assertEquals(initOut,config.getOutput())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(true,config.getVerbose())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(234,init.getMinimumRecompilationInterval())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(\"Gutenberg\",config.getSourceEncoding())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "init.setSourceEncoding(\"Gutenberg\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(true,init.getVerbose())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "init.setMinimumRecompilationInterval(234)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "init.setDebug(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(\"\",init.getScriptBaseClass())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "init.setTargetDirectory(initTDFile)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(initTDFile,config.getTargetDirectory())@@@49@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "init.setScriptBaseClass(\"blarg.foo.WhatSit\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCopyConstructor1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(234,config.getMinimumRecompilationInterval())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "init.setPluginFactory(initPPF)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.PRE_JDK5)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "init.setScriptBaseClass(\"\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "init.setRecompileGroovySource(false)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(true,config.getDebug())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(true,init.getRecompileGroovySource())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "{final List listCP = init.getClasspath()assertNotNull(listCP)assertEquals(0,listCP.size())}@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(true,config.getRecompileGroovySource())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.POST_JDK5)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "init.setClasspath(\"\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"LEAD-123\",config.getSourceEncoding())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(initOut,init.getOutput())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\".jpp\",config.getDefaultScriptExtension())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(false,config.getRecompileGroovySource())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"LEAD-123\",init.getSourceEncoding())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "init.setDefaultScriptExtension(\".jpp\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->52 [style = bold, label=""];
80->21 [style = bold, label=""];
4->15 [style = bold, label=""];
49->48 [style = bold, label=""];
18->30 [style = bold, label=""];
58->60 [style = bold, label=""];
10->73 [style = dashed, label="0"];
25->35 [style = bold, label=""];
14->67 [style = bold, label=""];
12->79 [style = dashed, label="0"];
61->64 [style = bold, label=""];
7->27 [style = solid, label="initTDFile"];
30->62 [style = dashed, label="0"];
72->80 [style = bold, label=""];
53->19 [style = bold, label=""];
49->48 [style = solid, label="initPPF"];
1->33 [style = bold, label=""];
39->77 [style = dashed, label="0"];
24->11 [style = bold, label=""];
43->24 [style = bold, label=""];
37->38 [style = bold, label=""];
57->74 [style = bold, label=""];
26->58 [style = dashed, label="0"];
69->72 [style = bold, label=""];
47->51 [style = bold, label=""];
36->74 [style = dashed, label="0"];
73->71 [style = bold, label=""];
28->63 [style = dashed, label="0"];
49->51 [style = solid, label="initPPF"];
71->65 [style = bold, label=""];
38->66 [style = dashed, label="0"];
38->55 [style = bold, label=""];
29->47 [style = bold, label=""];
8->9 [style = solid, label="initJoint"];
48->37 [style = bold, label=""];
43->75 [style = dashed, label="0"];
30->41 [style = bold, label=""];
7->46 [style = bold, label=""];
8->47 [style = solid, label="initJoint"];
19->22 [style = solid, label="init"];
36->4 [style = bold, label=""];
40->0 [style = bold, label=""];
52->45 [style = bold, label=""];
56->62 [style = bold, label=""];
75->69 [style = bold, label=""];
32->26 [style = bold, label=""];
46->37 [style = bold, label=""];
6->81 [style = dashed, label="0"];
7->33 [style = solid, label="initTDFile"];
33->29 [style = bold, label=""];
31->76 [style = dashed, label="0"];
2->67 [style = dashed, label="0"];
70->81 [style = bold, label=""];
32->58 [style = bold, label=""];
44->68 [style = bold, label=""];
59->63 [style = bold, label=""];
5->7 [style = bold, label=""];
74->61 [style = bold, label=""];
22->14 [style = bold, label=""];
21->27 [style = solid, label="initOut"];
11->72 [style = dashed, label="0"];
17->8 [style = bold, label=""];
63->79 [style = bold, label=""];
77->73 [style = bold, label=""];
67->70 [style = bold, label=""];
45->36 [style = bold, label=""];
21->68 [style = solid, label="initOut"];
35->49 [style = bold, label=""];
9->20 [style = bold, label=""];
21->1 [style = solid, label="initOut"];
82->57 [style = bold, label=""];
16->59 [style = dashed, label="0"];
28->12 [style = bold, label=""];
37->66 [style = bold, label=""];
7->40 [style = solid, label="initTDFile"];
21->5 [style = bold, label=""];
13->19 [style = bold, label=""];
19->32 [style = bold, label=""];
62->41 [style = bold, label=""];
26->54 [style = bold, label=""];
11->3 [style = bold, label=""];
10->23 [style = bold, label=""];
66->82 [style = bold, label=""];
65->44 [style = bold, label=""];
34->44 [style = bold, label=""];
79->75 [style = bold, label=""];
50->60 [style = dashed, label="0"];
3->21 [style = bold, label=""];
14->2 [style = bold, label=""];
78->19 [style = bold, label=""];
31->39 [style = bold, label=""];
12->43 [style = bold, label=""];
55->52 [style = bold, label=""];
68->27 [style = bold, label=""];
23->71 [style = dashed, label="0"];
8->35 [style = solid, label="initJoint"];
33->22 [style = bold, label=""];
42->70 [style = dashed, label="0"];
0->9 [style = bold, label=""];
4->61 [style = dashed, label="0"];
21->5 [style = solid, label="initOut"];
24->69 [style = dashed, label="0"];
18->56 [style = dashed, label="0"];
52->82 [style = dashed, label="0"];
76->77 [style = bold, label=""];
7->46 [style = solid, label="initTDFile"];
50->16 [style = bold, label=""];
49->20 [style = solid, label="initPPF"];
41->1 [style = bold, label=""];
60->59 [style = bold, label=""];
3->80 [style = dashed, label="0"];
15->18 [style = bold, label=""];
54->50 [style = bold, label=""];
64->56 [style = bold, label=""];
6->31 [style = bold, label=""];
16->28 [style = bold, label=""];
42->6 [style = bold, label=""];
15->64 [style = dashed, label="0"];
26->50 [style = bold, label=""];
51->22 [style = bold, label=""];
81->76 [style = bold, label=""];
39->10 [style = bold, label=""];
45->57 [style = dashed, label="0"];
23->34 [style = bold, label=""];
27->40 [style = bold, label=""];
44->27 [style = bold, label=""];
46->17 [style = bold, label=""];
34->65 [style = dashed, label="0"];
8->25 [style = bold, label=""];
2->42 [style = bold, label=""];
}
