digraph {
25 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "return buildTimeFloorFilter(ColumnHolder.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "return rhsAligned? Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return getBoundTimeDimFilter(operatorKind,boundRefKey,rhsInterval,rhsAligned)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "return null@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return null@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final String val@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "return new LikeDimFilter(druidExpression.getSimpleExtraction().getColumn(),RexLiteral.stringValue(operands.get(1)),operands.size() > 2? RexLiteral.stringValue(operands.get(2)): null,druidExpression.getSimpleExtraction().getExtractionFn())@@@125@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN_OR_EQUAL@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "RexNode x = lhs@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@93@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operand)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "final String column = lhsExpression.getSimpleExtraction().getColumn()@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String column@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "throw new ISE(\"WTF?! Kind(%s( not expected here\",kind)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "final Granularity granularity = ExtractionFns.toQueryGranularity(extractionFn)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "val = String.valueOf(Calcites.calciteDateTimeLiteralToJoda(rhsLiteral,plannerContext.getTimeZone()).getMillis())@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "kind@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "return null@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "lhs = rhs@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "return rhsAligned? Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return rhsAligned? Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "operatorKind@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "column.equals(ColumnHolder.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@67@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "kind == SqlKind.LIKE@@@119@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "final ExtractionFn extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "kind == SqlKind.IS_FALSE || kind == SqlKind.IS_NOT_TRUE@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@122@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "flippedKind = kind@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "granularity != null@@@69@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return rhsAligned? new NotDimFilter(Bounds.interval(boundRefKey,rhsInterval)): Filtration.matchEverything()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final String column@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
112 [style = filled, label = "flippedKind = kind@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "toSimpleLeafFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "buildTimeFloorFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "final RowSignature rowSignature@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "flippedKind@@@102@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "RexNode lhs = operands.get(0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "return Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "kind == SqlKind.IS_NULL || kind == SqlKind.IS_NOT_NULL@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final long rhsMillis@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "flippedKind = SqlKind.LESS_THAN_OR_EQUAL@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,rowSignature,lhs)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "kind == SqlKind.IS_TRUE || kind == SqlKind.IS_NOT_FALSE@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final Granularity granularity@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
99 [style = filled, label = "flippedKind@@@74@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@120@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean flip = false@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "final SqlKind flippedKind@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@115@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "!lhsExpression.isSimpleExtraction()@@@62@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operands.get(0))@@@121@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final SqlKind kind = rexNode.getKind()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "return filter@@@117@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "buildTimeFloorFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "return rhsAligned? new NotDimFilter(Bounds.interval(boundRefKey,rhsInterval)): Filtration.matchEverything()@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Granularity granularity@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "RexNode rhs = operands.get(1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "return null@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
96 [style = filled, label = "final DimFilter filter@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return rhsAligned? Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "final RexNode rexNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final long rhsMillis@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "return Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@87@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "rhs.getKind() != SqlKind.LITERAL@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,extractionFn,comparator)@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "final RexNode operand = Iterables.getOnlyElement(((RexCall)rexNode).getOperands())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "lhsExpression == null@@@54@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "queryGranularity != null@@@58@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "return null@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@90@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return rhsAligned? Bounds.interval(boundRefKey,rhsInterval): Filtration.matchNothing()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
109 [style = filled, label = "flip = true@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return rhsAligned? Bounds.interval(boundRefKey,rhsInterval): Filtration.matchNothing()@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "flippedKind = SqlKind.LESS_THAN@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForSqlTypeName(lhs.getType().getSqlTypeName())@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final SqlKind operatorKind@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "final DimFilter equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "rhs = x@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "return null@@@128@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "return null@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "flip@@@32@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
54->55 [style = bold, label=""];
107->83 [style = solid, label="granularity"];
109->59 [style = bold, label=""];
72->65 [style = solid, label="comparator"];
76->64 [style = solid, label="rhsMillis"];
76->64 [style = bold, label=""];
14->25 [style = dashed, label="0"];
51->103 [style = solid, label="val"];
102->47 [style = solid, label="filter"];
101->83 [style = dotted, label="true"];
5->15 [style = bold, label=""];
86->48 [style = solid, label="druidExpression"];
32->47 [style = solid, label="filter"];
101->107 [style = bold, label=""];
99->97 [style = bold, label=""];
99->95 [style = dotted, label="true"];
18->5 [style = solid, label="column"];
53->79 [style = solid, label="rhsLiteral"];
67->61 [style = dotted, label="true"];
58->53 [style = solid, label="rhs"];
51->32 [style = solid, label="val"];
9->5 [style = solid, label="column"];
43->58 [style = bold, label=""];
45->110 [style = dotted, label="false"];
36->64 [style = solid, label="queryGranularity"];
35->54 [style = bold, label=""];
71->103 [style = solid, label="val"];
99->40 [style = bold, label=""];
22->41 [style = bold, label=""];
10->14 [style = solid, label="operatorKind"];
5->4 [style = solid, label="boundRefKey"];
56->64 [style = dotted, label="true"];
21->22 [style = bold, label=""];
103->47 [style = bold, label=""];
82->30 [style = dotted, label="true"];
14->8 [style = bold, label=""];
101->107 [style = dotted, label="true"];
7->15 [style = solid, label="rhsMillis"];
96->47 [style = solid, label="filter"];
16->17 [style = solid, label="operatorKind"];
7->0 [style = solid, label="rhsMillis"];
61->36 [style = bold, label=""];
57->100 [style = solid, label="flippedKind"];
95->97 [style = bold, label=""];
71->72 [style = bold, label=""];
88->70 [style = dotted, label="true"];
71->102 [style = solid, label="val"];
63->60 [style = bold, label=""];
72->65 [style = bold, label=""];
96->100 [style = bold, label=""];
94->92 [style = dotted, label="true"];
59->70 [style = bold, label=""];
62->89 [style = solid, label="rhsMillis"];
88->59 [style = dotted, label="true"];
100->103 [style = dotted, label="true"];
14->2 [style = bold, label=""];
66->47 [style = solid, label="filter"];
8->12 [style = bold, label=""];
59->99 [style = solid, label="flippedKind"];
52->82 [style = dotted, label="false"];
54->82 [style = solid, label="kind"];
82->88 [style = dotted, label="false"];
110->51 [style = dotted, label="true"];
69->67 [style = bold, label=""];
0->13 [style = solid, label="rhsAligned"];
87->101 [style = solid, label="extractionFn"];
86->48 [style = bold, label=""];
46->27 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
99->60 [style = dotted, label="true"];
65->32 [style = solid, label="boundRefKey"];
79->103 [style = solid, label="val"];
46->27 [style = bold, label=""];
31->38 [style = dotted, label="true"];
65->102 [style = solid, label="boundRefKey"];
35->81 [style = dotted, label="true"];
34->102 [style = solid, label="val"];
93->75 [style = bold, label=""];
41->44 [style = bold, label=""];
113->65 [style = solid, label="column"];
51->66 [style = solid, label="val"];
44->109 [style = dotted, label="true"];
20->16 [style = dotted, label="true"];
54->52 [style = solid, label="kind"];
112->99 [style = solid, label="flippedKind"];
15->2 [style = solid, label="rhsInterval"];
55->52 [style = dotted, label="false"];
5->13 [style = solid, label="boundRefKey"];
65->49 [style = solid, label="boundRefKey"];
110->73 [style = dotted, label="false"];
59->100 [style = solid, label="flippedKind"];
83->34 [style = bold, label=""];
54->88 [style = solid, label="kind"];
88->77 [style = bold, label=""];
113->25 [style = solid, label="column"];
34->66 [style = solid, label="val"];
0->4 [style = solid, label="rhsAligned"];
0->14 [style = bold, label=""];
25->106 [style = solid, label="boundRefKey"];
80->86 [style = solid, label="plannerContext"];
55->23 [style = bold, label=""];
104->92 [style = bold, label=""];
88->94 [style = dotted, label="false"];
15->0 [style = bold, label=""];
71->29 [style = solid, label="val"];
82->33 [style = dotted, label="true"];
73->71 [style = bold, label=""];
25->60 [style = solid, label="boundRefKey"];
24->100 [style = solid, label="flippedKind"];
54->84 [style = solid, label="kind"];
73->68 [style = dotted, label="false"];
53->51 [style = solid, label="rhsLiteral"];
48->104 [style = bold, label=""];
34->53 [style = bold, label=""];
14->2 [style = dotted, label="true"];
88->56 [style = dotted, label="true"];
94->86 [style = dotted, label="true"];
14->12 [style = dotted, label="true"];
99->28 [style = dotted, label="true"];
39->89 [style = bold, label=""];
88->65 [style = dotted, label="true"];
79->29 [style = solid, label="val"];
91->99 [style = solid, label="flippedKind"];
25->40 [style = solid, label="boundRefKey"];
25->95 [style = solid, label="boundRefKey"];
4->2 [style = bold, label=""];
88->45 [style = dotted, label="true"];
80->23 [style = solid, label="plannerContext"];
67->61 [style = bold, label=""];
62->39 [style = bold, label=""];
24->99 [style = solid, label="flippedKind"];
71->49 [style = solid, label="val"];
100->32 [style = dotted, label="true"];
105->24 [style = bold, label=""];
88->67 [style = dotted, label="true"];
44->42 [style = dotted, label="true"];
55->23 [style = dotted, label="true"];
31->33 [style = bold, label=""];
56->76 [style = dotted, label="true"];
99->60 [style = bold, label=""];
100->37 [style = bold, label=""];
99->28 [style = bold, label=""];
10->0 [style = solid, label="rhsMillis"];
14->4 [style = bold, label=""];
52->26 [style = bold, label=""];
98->99 [style = solid, label="flippedKind"];
99->97 [style = dotted, label="true"];
99->63 [style = dotted, label="true"];
100->66 [style = dotted, label="true"];
105->91 [style = dotted, label="true"];
100->103 [style = bold, label=""];
51->72 [style = bold, label=""];
48->104 [style = dotted, label="true"];
34->29 [style = solid, label="val"];
103->47 [style = solid, label="filter"];
6->9 [style = dotted, label="true"];
30->31 [style = bold, label=""];
0->2 [style = solid, label="rhsAligned"];
102->47 [style = bold, label=""];
99->63 [style = bold, label=""];
100->102 [style = bold, label=""];
105->98 [style = dotted, label="true"];
14->13 [style = bold, label=""];
70->112 [style = bold, label=""];
81->86 [style = solid, label="rowSignature"];
45->79 [style = bold, label=""];
5->2 [style = solid, label="boundRefKey"];
2->11 [style = bold, label=""];
0->17 [style = solid, label="rhsAligned"];
91->93 [style = bold, label=""];
90->93 [style = bold, label=""];
11->1 [style = bold, label=""];
5->17 [style = solid, label="boundRefKey"];
113->87 [style = bold, label=""];
64->46 [style = bold, label=""];
80->69 [style = solid, label="plannerContext"];
42->58 [style = solid, label="x"];
70->112 [style = dotted, label="false"];
14->1 [style = bold, label=""];
22->69 [style = solid, label="lhs"];
58->109 [style = bold, label=""];
82->74 [style = dotted, label="true"];
15->17 [style = solid, label="rhsInterval"];
81->26 [style = solid, label="rowSignature"];
88->36 [style = dotted, label="true"];
87->65 [style = solid, label="extractionFn"];
90->100 [style = solid, label="flippedKind"];
81->30 [style = solid, label="rowSignature"];
94->108 [style = dotted, label="false"];
54->112 [style = solid, label="kind"];
73->71 [style = dotted, label="true"];
35->50 [style = dotted, label="true"];
109->70 [style = solid, label="flip"];
13->8 [style = bold, label=""];
88->93 [style = dotted, label="true"];
53->45 [style = bold, label=""];
34->32 [style = solid, label="val"];
88->77 [style = dotted, label="true"];
88->72 [style = dotted, label="true"];
33->74 [style = solid, label="equalFilter"];
34->103 [style = solid, label="val"];
85->86 [style = bold, label=""];
105->84 [style = bold, label=""];
83->62 [style = dotted, label="true"];
1->13 [style = bold, label=""];
54->57 [style = solid, label="kind"];
49->47 [style = solid, label="filter"];
71->66 [style = solid, label="val"];
78->21 [style = bold, label=""];
100->32 [style = bold, label=""];
99->106 [style = bold, label=""];
15->4 [style = solid, label="rhsInterval"];
43->69 [style = solid, label="lhs"];
79->32 [style = solid, label="val"];
20->18 [style = dotted, label="true"];
14->11 [style = dotted, label="true"];
80->30 [style = solid, label="plannerContext"];
93->75 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
83->39 [style = dotted, label="true"];
60->106 [style = bold, label=""];
24->93 [style = bold, label=""];
65->66 [style = solid, label="boundRefKey"];
82->111 [style = dotted, label="true"];
44->43 [style = dotted, label="true"];
100->49 [style = dotted, label="true"];
35->80 [style = dotted, label="true"];
54->94 [style = solid, label="kind"];
94->108 [style = bold, label=""];
88->44 [style = dotted, label="true"];
87->101 [style = bold, label=""];
75->69 [style = bold, label=""];
88->47 [style = dotted, label="true"];
52->82 [style = bold, label=""];
105->91 [style = bold, label=""];
99->95 [style = bold, label=""];
5->8 [style = solid, label="boundRefKey"];
83->99 [style = dotted, label="true"];
89->28 [style = solid, label="rhsAligned"];
101->34 [style = bold, label=""];
100->102 [style = dotted, label="true"];
51->49 [style = solid, label="val"];
20->10 [style = dotted, label="true"];
105->24 [style = dotted, label="true"];
6->7 [style = dotted, label="true"];
105->57 [style = dotted, label="true"];
107->83 [style = bold, label=""];
25->28 [style = solid, label="boundRefKey"];
14->1 [style = dotted, label="true"];
59->64 [style = solid, label="flippedKind"];
111->30 [style = bold, label=""];
38->33 [style = bold, label=""];
14->4 [style = dotted, label="true"];
100->29 [style = bold, label=""];
80->26 [style = solid, label="plannerContext"];
88->78 [style = dotted, label="true"];
65->96 [style = bold, label=""];
44->42 [style = bold, label=""];
70->105 [style = bold, label=""];
88->69 [style = dotted, label="true"];
110->73 [style = bold, label=""];
91->100 [style = solid, label="flippedKind"];
88->87 [style = dotted, label="true"];
45->110 [style = bold, label=""];
57->99 [style = solid, label="flippedKind"];
70->105 [style = dotted, label="true"];
31->38 [style = bold, label=""];
21->70 [style = solid, label="flip"];
5->11 [style = solid, label="boundRefKey"];
6->5 [style = bold, label=""];
89->106 [style = solid, label="rhsAligned"];
14->17 [style = dashed, label="0"];
79->102 [style = solid, label="val"];
20->19 [style = dotted, label="true"];
89->60 [style = solid, label="rhsAligned"];
55->52 [style = bold, label=""];
65->29 [style = solid, label="boundRefKey"];
88->21 [style = dotted, label="true"];
54->55 [style = solid, label="kind"];
88->22 [style = dotted, label="true"];
42->43 [style = bold, label=""];
83->62 [style = bold, label=""];
46->113 [style = bold, label=""];
24->64 [style = solid, label="flippedKind"];
40->28 [style = bold, label=""];
100->66 [style = bold, label=""];
98->100 [style = solid, label="flippedKind"];
49->47 [style = bold, label=""];
82->31 [style = dotted, label="true"];
100->37 [style = dotted, label="true"];
32->47 [style = bold, label=""];
14->12 [style = bold, label=""];
39->28 [style = solid, label="rhsInterval"];
69->67 [style = solid, label="lhsExpression"];
94->85 [style = dotted, label="true"];
67->36 [style = bold, label=""];
39->40 [style = solid, label="rhsInterval"];
94->48 [style = dotted, label="true"];
44->59 [style = bold, label=""];
88->100 [style = dotted, label="true"];
33->74 [style = bold, label=""];
100->49 [style = bold, label=""];
93->69 [style = bold, label=""];
87->107 [style = solid, label="extractionFn"];
84->93 [style = bold, label=""];
79->49 [style = solid, label="val"];
22->42 [style = solid, label="lhs"];
97->34 [style = bold, label=""];
66->47 [style = bold, label=""];
89->40 [style = solid, label="rhsAligned"];
30->31 [style = solid, label="druidExpression"];
14->11 [style = bold, label=""];
29->47 [style = bold, label=""];
48->92 [style = bold, label=""];
68->72 [style = bold, label=""];
88->53 [style = dotted, label="true"];
0->17 [style = bold, label=""];
112->93 [style = bold, label=""];
88->113 [style = dotted, label="true"];
110->51 [style = bold, label=""];
82->111 [style = bold, label=""];
98->93 [style = bold, label=""];
56->46 [style = bold, label=""];
77->78 [style = bold, label=""];
0->1 [style = solid, label="rhsAligned"];
94->85 [style = bold, label=""];
88->41 [style = dotted, label="true"];
28->63 [style = bold, label=""];
83->89 [style = dotted, label="true"];
88->34 [style = dotted, label="true"];
57->64 [style = solid, label="flippedKind"];
34->49 [style = solid, label="val"];
27->113 [style = bold, label=""];
105->98 [style = bold, label=""];
45->79 [style = dotted, label="true"];
37->47 [style = bold, label=""];
82->88 [style = bold, label=""];
88->96 [style = dotted, label="true"];
57->93 [style = bold, label=""];
79->72 [style = bold, label=""];
10->15 [style = solid, label="rhsMillis"];
105->90 [style = dotted, label="true"];
111->30 [style = solid, label="operand"];
91->64 [style = solid, label="flippedKind"];
100->29 [style = dotted, label="true"];
89->25 [style = bold, label=""];
98->64 [style = solid, label="flippedKind"];
41->43 [style = solid, label="rhs"];
36->56 [style = solid, label="queryGranularity"];
81->23 [style = solid, label="rowSignature"];
6->10 [style = dotted, label="true"];
25->63 [style = solid, label="boundRefKey"];
112->64 [style = solid, label="flippedKind"];
54->74 [style = solid, label="kind"];
99->106 [style = dotted, label="true"];
88->46 [style = dotted, label="true"];
71->32 [style = solid, label="val"];
14->8 [style = dotted, label="true"];
69->36 [style = solid, label="lhsExpression"];
90->99 [style = solid, label="flippedKind"];
105->57 [style = bold, label=""];
105->84 [style = dotted, label="true"];
65->103 [style = solid, label="boundRefKey"];
62->39 [style = solid, label="rhsMillis"];
79->66 [style = solid, label="val"];
36->56 [style = bold, label=""];
54->105 [style = solid, label="kind"];
81->69 [style = solid, label="rowSignature"];
90->64 [style = solid, label="flippedKind"];
106->95 [style = bold, label=""];
5->1 [style = solid, label="boundRefKey"];
20->5 [style = bold, label=""];
99->40 [style = dotted, label="true"];
51->102 [style = solid, label="val"];
83->25 [style = dotted, label="true"];
88->94 [style = bold, label=""];
29->47 [style = solid, label="filter"];
51->29 [style = solid, label="val"];
44->58 [style = dotted, label="true"];
105->90 [style = bold, label=""];
25->99 [style = bold, label=""];
41->53 [style = solid, label="rhs"];
56->76 [style = bold, label=""];
73->68 [style = bold, label=""];
52->26 [style = dotted, label="true"];
112->100 [style = solid, label="flippedKind"];
88->101 [style = dotted, label="true"];
}
