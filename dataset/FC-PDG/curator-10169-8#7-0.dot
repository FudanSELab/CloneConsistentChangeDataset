digraph {
11 [style = filled, label = "assertEquals(((ServiceDiscoveryImpl)discovery).debugServicesQty(),0)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "server.restart()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "restartLatch.countDown()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "discovery.start()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "new Timing().sleepABit()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(((ServiceDiscoveryImpl)discovery).debugServicesQty(),0)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "discovery.unregisterService(instance)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCleaning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testUnregisterService['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final CountDownLatch restartLatch = new CountDownLatch(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CuratorFramework client = null@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCleaning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).serializer(slowSerializer).watchInstances(true).build()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String name = \"name\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(name).port(10064).build()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertFalse(discovery.queryForInstances(name).isEmpty(),\"Service should start registered.\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "InstanceSerializer<String> slowSerializer = new JsonInstanceSerializer<String>(){@Override public byte(( serialize(ServiceInstance<String> instance){if (first) {System.out.println(\"Serializer first registration.\")first = false}{System.out.println(\"Waiting for reconnect to finish.\")restartLatch.await()}return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@11fae96instance}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "discovery.unregisterService(instance)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.start()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CuratorFramework client = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "server.stop()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "discovery.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client.start()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertTrue(discovery.queryForInstances(name).isEmpty(),\"Service should have unregistered.\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
29->15 [style = bold, label=""];
25->28 [style = bold, label=""];
14->25 [style = bold, label=""];
30->20 [style = bold, label=""];
28->31 [style = bold, label=""];
11->4 [style = bold, label=""];
1->3 [style = bold, label=""];
14->15 [style = solid, label="discovery"];
20->14 [style = bold, label=""];
3->5 [style = solid, label="instance"];
16->23 [style = bold, label=""];
10->7 [style = bold, label=""];
12->7 [style = bold, label=""];
20->22 [style = solid, label="instance"];
24->30 [style = bold, label=""];
26->16 [style = bold, label=""];
23->24 [style = bold, label=""];
2->0 [style = bold, label=""];
22->18 [style = bold, label=""];
24->15 [style = solid, label="client"];
2->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
18->27 [style = bold, label=""];
13->26 [style = bold, label=""];
9->4 [style = solid, label="client"];
3->20 [style = dashed, label="0"];
7->6 [style = bold, label=""];
5->11 [style = bold, label=""];
8->4 [style = bold, label=""];
27->29 [style = bold, label=""];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
8->11 [style = dashed, label="0"];
2->4 [style = solid, label="discovery"];
19->22 [style = bold, label=""];
17->21 [style = bold, label=""];
31->19 [style = bold, label=""];
0->5 [style = bold, label=""];
21->13 [style = bold, label=""];
}
