digraph {
5 [style = filled, label = "testQuery(\"SELECT\" + \" CAST(thecnt AS VARCHAR),\" + \" COUNT(*)\" + \"FROM (SELECT dim2, SUM(cnt) AS thecnt FROM druid.foo GROUP BY dim2)\" + \"GROUP BY CAST(thecnt AS VARCHAR) ORDER BY CAST(thecnt AS VARCHAR) LIMIT 2\",ImmutableList.of(GroupByQuery.builder().setDataSource(new QueryDataSource(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensionSpec(new DefaultDimensionSpec(\"dim2\",\"d0\"))).setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).setContext(QUERY_CONTEXT_DEFAULT).build())).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensionSpec(new DefaultDimensionSpec(\"a0\",\"_d0\"))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"_a0\"))).setLimitSpec(new DefaultLimitSpec(ImmutableList.of(new OrderByColumnSpec(\"_d0\",OrderByColumnSpec.Direction.ASCENDING,StringComparators.LEXICOGRAPHIC)),2)).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a850,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a855): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a85d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a862))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHistogramUsingSubqueryWithSort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testHistogramUsingSubquery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testQuery(\"SELECT\" + \" CAST(thecnt AS VARCHAR),\" + \" COUNT(*)\" + \"FROM (SELECT dim2, SUM(cnt) AS thecnt FROM druid.foo GROUP BY dim2)\" + \"GROUP BY CAST(thecnt AS VARCHAR)\",ImmutableList.of(GroupByQuery.builder().setDataSource(new QueryDataSource(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensionSpec(new DefaultDimensionSpec(\"dim2\",\"d0\"))).setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).setContext(QUERY_CONTEXT_DEFAULT).build())).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensionSpec(new DefaultDimensionSpec(\"a0\",\"_d0\"))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"_a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a735,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a73a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a73f): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a747,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a74c))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testHistogramUsingSubquery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testQuery(\"SELECT\" + \" CAST(thecnt AS VARCHAR),\" + \" COUNT(*)\" + \"FROM (SELECT dim2, SUM(cnt) AS thecnt FROM druid.foo GROUP BY dim2)\" + \"GROUP BY CAST(thecnt AS VARCHAR)\",ImmutableList.of(GroupByQuery.builder().setDataSource(new QueryDataSource(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"dim2\",\"d0\"))).setAggregatorSpecs(aggregators(new LongSumAggregatorFactory(\"a0\",\"cnt\"))).setContext(QUERY_CONTEXT_DEFAULT).build())).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimensions(dimensions(new DefaultDimensionSpec(\"a0\",\"_d0\"))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"_a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a7b9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a7be,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a7c3): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a7cb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@90a7d0))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
0->5 [style = dashed, label="0"];
4->5 [style = bold, label=""];
2->3 [style = bold, label=""];
}
