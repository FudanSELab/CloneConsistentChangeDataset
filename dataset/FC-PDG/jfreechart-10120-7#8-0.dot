digraph {
6 [style = filled, label = "XYLineAndShapeRenderer r2 = (XYLineAndShapeRenderer)p2.getRenderer()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "XYPlot<String> p2 = CloneUtils.clone(p1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "XYPlot p2 = (XYPlot)p1.clone()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "XYPlot p1 = new XYPlot()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "testBug2817504['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertTrue(p1 != p2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "p1.setRenderer(r1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testBug2817504['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "LineAndShapeRenderer r2 = (LineAndShapeRenderer)p2.getRenderer()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "CategoryPlot<String,String> p2@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(p1.equals(p2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(r2.getPlot() == p2)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XYPlot<String> p1 = new XYPlot<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "p2 = CloneUtils.clone(p1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(p1.equals(p2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CloneNotSupportedException e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "CategoryPlot<String,String> p1 = new CategoryPlot<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "LineAndShapeRenderer r1 = new LineAndShapeRenderer()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testBug2817504['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(p1 != p2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "fail(\"Cloning failed.\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(r2.getPlot() == p2)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(p1.getClass() == p2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "XYLineAndShapeRenderer r1 = new XYLineAndShapeRenderer()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(p1.getClass() == p2.getClass())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
24->16 [style = solid, label="p1"];
7->8 [style = solid, label="p1"];
13->24 [style = bold, label=""];
23->5 [style = bold, label=""];
22->19 [style = bold, label=""];
24->25 [style = solid, label="p1"];
11->4 [style = bold, label=""];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
16->17 [style = solid, label="p2"];
0->9 [style = solid, label="p2"];
7->11 [style = dashed, label="0"];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
16->25 [style = bold, label=""];
20->14 [style = bold, label=""];
10->8 [style = solid, label="p2"];
5->18 [style = bold, label=""];
15->22 [style = dotted, label="true"];
7->4 [style = bold, label=""];
11->8 [style = solid, label="p1"];
10->3 [style = solid, label="p2"];
6->14 [style = dashed, label="0"];
10->9 [style = solid, label="p2"];
0->10 [style = dashed, label="0"];
19->25 [style = bold, label=""];
15->22 [style = bold, label=""];
0->8 [style = solid, label="p2"];
8->1 [style = bold, label=""];
11->10 [style = solid, label="p1"];
0->3 [style = solid, label="p2"];
4->5 [style = solid, label="r1"];
21->20 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
7->24 [style = dashed, label="0"];
15->19 [style = dotted, label="true"];
0->8 [style = bold, label=""];
2->7 [style = bold, label=""];
16->25 [style = solid, label="p2"];
6->9 [style = bold, label=""];
4->23 [style = dashed, label="0"];
4->5 [style = bold, label=""];
16->20 [style = solid, label="p2"];
23->5 [style = solid, label="r1"];
25->21 [style = bold, label=""];
24->23 [style = bold, label=""];
18->16 [style = bold, label=""];
}
