digraph {
27 [style = filled, label = "testHarness.invoke(env)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "final int numRecords1 = 5@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testHarness.waitForInputProcessing()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final StreamMockEnvironment env = new StreamMockEnvironment(testHarness.jobConfig,testHarness.taskConfig,testHarness.memorySize,new MockInputSplitProvider(),testHarness.bufferSize,new TestTaskStateManager()){@Override public TaskMetricGroup getMetricGroup(){return taskMetricGroup}}@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(numRecords * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Counter numRecordsOutCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsOutCounter()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertEquals((numRecords1 + numRecords2) * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final StreamMockEnvironment env = new StreamMockEnvironment(testHarness.jobConfig,testHarness.taskConfig,testHarness.memorySize,new MockInputSplitProvider(),testHarness.bufferSize,new TestTaskStateManager()){@Override public TaskMetricGroup getMetricGroup(){return taskMetricGroup}}@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),1,0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testHarness.endInput()@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(numRecords * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "x++@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final TaskMetricGroup taskMetricGroup = TaskManagerMetricGroup.createTaskManagerMetricGroup(NoOpMetricRegistry.INSTANCE,\"host\",ResourceID.generate()).addTaskForJob(new JobID(),\"jobname\",new JobVertexID(),new ExecutionAttemptID(),\"task\",0,0)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "int x = 0@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Counter numRecordsInCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsInCounter()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int x = 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testHarness.waitForTaskCompletion()@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testHarness.invoke(env)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHarness.waitForInputProcessing()@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(numRecords1 + numRecords2,numRecordsInCounter.getCount())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testHarness.waitForTaskCompletion()@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "x < numRecords2@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testOperatorMetricReuse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final Counter numRecordsInCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsInCounter()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "x++@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testHarness.waitForTaskRunning()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testHarness.waitForInputProcessing()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final OneInputStreamTaskTestHarness<String,String> testHarness = new OneInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final int numRecords = 5@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "testOperatorMetricReuse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testHarness.endInput()@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TaskMetricGroup taskMetricGroup = new UnregisteredMetricGroups.UnregisteredTaskMetricGroup(){@Override public InternalOperatorMetricGroup getOrAddOperator(OperatorID operatorID,String name){return new InternalOperatorMetricGroup(NoOpMetricRegistry.INSTANCE,this,operatorID,name)}}@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),0,0)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final int numRecords2 = 3@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final int numRecords = 5@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testOperatorMetricReuse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "x < numRecords1@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Counter numRecordsOutCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsOutCounter()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness.waitForTaskRunning()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final TwoInputStreamTaskTestHarness<String,String,String> testHarness = new TwoInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->37 [style = bold, label=""];
25->22 [style = bold, label=""];
7->30 [style = bold, label=""];
30->32 [style = solid, label="numRecords1"];
0->4 [style = solid, label="numRecords"];
29->32 [style = solid, label="numRecords2"];
39->14 [style = bold, label=""];
8->9 [style = solid, label="x"];
28->39 [style = solid, label="x"];
4->33 [style = dashed, label="0"];
30->29 [style = bold, label=""];
12->7 [style = bold, label=""];
29->33 [style = solid, label="numRecords2"];
41->28 [style = bold, label=""];
41->2 [style = dotted, label="true"];
41->36 [style = dotted, label="true"];
2->23 [style = bold, label=""];
2->36 [style = dashed, label="0"];
9->2 [style = solid, label="x"];
36->2 [style = bold, label=""];
0->30 [style = dashed, label="0"];
0->8 [style = bold, label=""];
21->25 [style = solid, label="taskMetricGroup"];
9->41 [style = dashed, label="0"];
8->1 [style = solid, label="x"];
2->41 [style = solid, label="x"];
35->31 [style = bold, label=""];
15->38 [style = bold, label=""];
12->17 [style = dotted, label="true"];
24->12 [style = solid, label="numRecords"];
33->15 [style = bold, label=""];
9->2 [style = bold, label=""];
39->34 [style = bold, label=""];
18->12 [style = bold, label=""];
7->0 [style = bold, label=""];
21->25 [style = bold, label=""];
24->18 [style = bold, label=""];
13->5 [style = bold, label=""];
39->40 [style = dotted, label="true"];
5->11 [style = bold, label=""];
29->39 [style = solid, label="numRecords2"];
9->1 [style = bold, label=""];
12->7 [style = dotted, label="true"];
27->20 [style = bold, label=""];
39->34 [style = dotted, label="true"];
14->4 [style = bold, label=""];
0->9 [style = solid, label="numRecords"];
4->10 [style = bold, label=""];
2->41 [style = bold, label=""];
30->41 [style = solid, label="numRecords1"];
16->18 [style = bold, label=""];
7->17 [style = bold, label=""];
34->40 [style = bold, label=""];
22->19 [style = bold, label=""];
2->1 [style = bold, label=""];
28->39 [style = bold, label=""];
11->21 [style = bold, label=""];
12->17 [style = bold, label=""];
32->33 [style = bold, label=""];
1->9 [style = bold, label=""];
28->40 [style = solid, label="x"];
17->12 [style = bold, label=""];
41->36 [style = bold, label=""];
14->32 [style = dashed, label="0"];
40->39 [style = bold, label=""];
40->39 [style = solid, label="x"];
17->12 [style = solid, label="x"];
18->17 [style = solid, label="x"];
12->8 [style = bold, label=""];
9->41 [style = solid, label="x"];
9->1 [style = dotted, label="true"];
5->31 [style = dashed, label="0"];
9->3 [style = bold, label=""];
1->2 [style = bold, label=""];
14->32 [style = bold, label=""];
30->33 [style = solid, label="numRecords1"];
6->21 [style = dashed, label="0"];
10->15 [style = bold, label=""];
18->12 [style = solid, label="x"];
1->9 [style = solid, label="x"];
6->16 [style = solid, label="taskMetricGroup"];
26->5 [style = bold, label=""];
16->17 [style = solid, label="env"];
11->6 [style = bold, label=""];
3->14 [style = bold, label=""];
29->9 [style = bold, label=""];
37->6 [style = bold, label=""];
17->7 [style = bold, label=""];
9->41 [style = bold, label=""];
25->27 [style = solid, label="env"];
24->9 [style = solid, label="numRecords"];
6->16 [style = bold, label=""];
9->2 [style = dotted, label="true"];
19->27 [style = bold, label=""];
8->9 [style = bold, label=""];
0->14 [style = solid, label="numRecords"];
11->37 [style = dashed, label="0"];
20->24 [style = bold, label=""];
24->1 [style = solid, label="numRecords"];
}
