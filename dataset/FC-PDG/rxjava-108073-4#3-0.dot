digraph {
3 [style = filled, label = "TestHelper.assertUndeliverable(errors,0,)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sobs.onNext(1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "errorReentry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final AtomicReference<Observer<Integer>> serial = new AtomicReference<Observer<Integer>>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SerializedSubscriber<Integer> sobs = new SerializedSubscriber<Integer>(ts)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "to.assertValue(1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "completeReentry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sobs.onSubscribe(Disposables.empty())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "ts.assertNoErrors()@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ts.assertValue(1)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>(){@Override public void onNext(Integer v){serial.get().onError(new TestException())serial.get().onError(new TestException())super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@17571d6v}}@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final AtomicReference<Subscriber<Integer>> serial = new AtomicReference<Subscriber<Integer>>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "serial.set(sobs)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "errorReentry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ts.assertComplete()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sobs.onSubscribe(new BooleanSubscription())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "{RxJavaPlugins.reset()}@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sobs.onSubscribe(Disposable.empty())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "List<Throwable> errors = TestHelper.trackPluginErrors()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "to.assertError()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SerializedObserver<Integer> sobs = new SerializedObserver<Integer>(to)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>(){@Override public void onNext(Integer v){serial.get().onComplete()serial.get().onComplete()super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1757229v}}@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
5->10 [style = bold, label=""];
0->9 [style = bold, label=""];
15->14 [style = bold, label=""];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
6->7 [style = solid, label="to"];
0->21 [style = bold, label=""];
16->17 [style = bold, label=""];
8->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
17->19 [style = bold, label=""];
10->3 [style = solid, label="errors"];
7->11 [style = solid, label="sobs"];
8->13 [style = dashed, label="0"];
18->20 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
12->10 [style = bold, label=""];
15->18 [style = solid, label="sobs"];
7->15 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
14->18 [style = bold, label=""];
19->15 [style = bold, label=""];
6->7 [style = bold, label=""];
10->1 [style = bold, label=""];
8->11 [style = bold, label=""];
20->11 [style = bold, label=""];
19->15 [style = solid, label="ts"];
}
