digraph {
3 [style = filled, label = "EasyMock.reset(context)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldRetainDuplicatesWhenSet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "shouldRetainDuplicatesWhenSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expectLastCall().times(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.replay(context)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final Bytes key1 = WindowKeySchema.toStoreKeyBinary(bytesKey,0,1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.verify(inner,context)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "store.put(bytesKey,valueAndTimestamp)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inner.put(bytesKey,value,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expect(context.timestamp()).andStubReturn(0L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.verify(inner,context)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "init()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "store = new ChangeLoggingTimestampedWindowBytesStore(inner,true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "store.put(bytesKey,value)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "context.logChange(store.name(),key1,value,42L)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Bytes key2 = WindowKeySchema.toStoreKeyBinary(bytesKey,0,2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.logChange(store.name(),key1,value,0L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "store.put(bytesKey,value)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "context.logChange(store.name(),key2,value,42L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldRetainDuplicatesWhenSet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "inner.put(bytesKey,valueAndTimestamp,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "store.put(bytesKey,valueAndTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "context.logChange(store.name(),key2,value,0L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "store = new ChangeLoggingWindowBytesStore(inner,true,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "store = new ChangeLoggingWindowBytesStore(inner,true)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
11->6 [style = bold, label=""];
8->20 [style = dashed, label="0"];
18->19 [style = bold, label=""];
10->3 [style = bold, label=""];
7->20 [style = bold, label=""];
3->12 [style = bold, label=""];
2->7 [style = dashed, label="0"];
19->6 [style = bold, label=""];
12->0 [style = bold, label=""];
14->15 [style = dashed, label="0"];
22->7 [style = bold, label=""];
4->7 [style = bold, label=""];
6->1 [style = bold, label=""];
10->21 [style = solid, label="key2"];
15->11 [style = bold, label=""];
10->4 [style = solid, label="key2"];
0->4 [style = bold, label=""];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
11->19 [style = dashed, label="0"];
0->21 [style = dashed, label="0"];
8->9 [style = bold, label=""];
3->17 [style = bold, label=""];
5->0 [style = solid, label="key1"];
14->18 [style = dashed, label="0"];
20->24 [style = bold, label=""];
5->17 [style = solid, label="key1"];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
17->21 [style = bold, label=""];
23->18 [style = bold, label=""];
2->8 [style = bold, label=""];
}
