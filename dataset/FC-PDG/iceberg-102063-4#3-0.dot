digraph {
4 [style = filled, label = "Assert.assertNotNull(\"Table metadata should be created after transaction commits\",meta)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Table schema should match with reassigned IDs\",TypeUtil.assignIncreasingFreshIds(SCHEMA).asStruct(),meta.schema().asStruct())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Schema resultSchema = new Schema(Lists.newArrayList(required(1,\"id\",Types.IntegerType.get()),required(2,\"data\",Types.StringType.get()),required(3,\"col\",Types.StringType.get())),Sets.newHashSet(1,3))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Schema resultSchema = new Schema(Lists.newArrayList(required(1,\"id\",Types.IntegerType.get()),required(2,\"data\",Types.StringType.get()),optional(3,\"col\",Types.StringType.get())),Sets.newHashSet(1,3))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testCreateTransaction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(\"Table schema identifier should match\",resultSchema.identifierFieldIds(),meta.schema().identifierFieldIds())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCreateTransactionAndUpdateSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Table schema should match with reassigned IDs\",resultSchema.asStruct(),meta.schema().asStruct())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Table spec should match\",unpartitioned(),meta.spec())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testCreateTransactionAndUpdateSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Table spec should match\",unpartitioned(),meta.spec())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertNull(\"Starting a create transaction should not commit metadata\",TestTables.readMetadata(\"test_create\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Should have metadata version 0\",0,(int)TestTables.metadataVersion(\"test_create\"))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(\"Table should not have any snapshots\",0,meta.snapshots().size())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "txn.updateSchema().allowIncompatibleChanges().addRequiredColumn(\"col\",Types.StringType.get()).setIdentifierFields(\"id\",\"col\").commit()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "txn.commitTransaction()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TableMetadata meta = TestTables.readMetadata(\"test_create\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "File tableDir = temp.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Should have 0 manifest files\",0,listManifestFiles(tableDir).size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(tableDir.delete())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Transaction txn = TestTables.beginCreate(tableDir,\"test_create\",SCHEMA,unpartitioned())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Table should not have any snapshots\",0,meta.snapshots().size())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "txn.updateSchema().addColumn(\"col\",Types.StringType.get()).setIdentifierFields(\"id\",\"col\").commit()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertNull(\"Should have no metadata version\",TestTables.metadataVersion(\"test_create\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->20 [style = bold, label=""];
12->4 [style = solid, label="meta"];
9->18 [style = dashed, label="0"];
3->14 [style = bold, label=""];
4->15 [style = bold, label=""];
10->3 [style = bold, label=""];
21->3 [style = bold, label=""];
11->9 [style = bold, label=""];
1->7 [style = bold, label=""];
11->18 [style = bold, label=""];
19->16 [style = bold, label=""];
20->22 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
3->6 [style = solid, label="tableDir"];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
8->2 [style = bold, label=""];
7->19 [style = dashed, label="0"];
1->16 [style = bold, label=""];
7->16 [style = bold, label=""];
0->8 [style = bold, label=""];
18->13 [style = bold, label=""];
17->3 [style = bold, label=""];
1->19 [style = bold, label=""];
11->23 [style = bold, label=""];
16->12 [style = bold, label=""];
14->6 [style = bold, label=""];
13->0 [style = bold, label=""];
9->13 [style = bold, label=""];
}
