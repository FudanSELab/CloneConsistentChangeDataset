digraph {
11 [style = filled, label = "mockHttpClientBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "NettyNioAsyncHttpClient.Builder builder = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(builder.region(any())).thenReturn(builder)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(builder.writeTimeout(any())).thenReturn(builder)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return builder@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return builder@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(builder.protocol(any())).thenReturn(builder)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "when(builder.credentialsProvider(any())).thenReturn(builder)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(builder.connectionAcquisitionTimeout(any())).thenReturn(builder)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "when(builder.overrideConfiguration(any())).thenReturn(builder)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(builder.connectionMaxIdleTime(any())).thenReturn(builder)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(builder.connectionTimeout(any())).thenReturn(builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(builder.httpClient(any())).thenReturn(builder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "KinesisAsyncClientBuilder builder = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(builder.http2Configuration(any())).thenReturn(builder)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "mockHttpClientBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockKinesisAsyncClientBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(builder.maxConcurrency(anyInt())).thenReturn(builder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->4 [style = bold, label=""];
8->9 [style = bold, label=""];
2->4 [style = bold, label=""];
4->6 [style = solid, label="builder"];
0->7 [style = bold, label=""];
16->18 [style = bold, label=""];
16->13 [style = solid, label="builder"];
13->17 [style = bold, label=""];
14->13 [style = bold, label=""];
4->16 [style = dashed, label="0"];
4->0 [style = solid, label="builder"];
17->12 [style = bold, label=""];
16->14 [style = solid, label="builder"];
1->6 [style = bold, label=""];
6->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
4->1 [style = solid, label="builder"];
4->7 [style = solid, label="builder"];
3->1 [style = bold, label=""];
7->3 [style = bold, label=""];
16->17 [style = solid, label="builder"];
4->10 [style = solid, label="builder"];
15->16 [style = bold, label=""];
6->5 [style = bold, label=""];
16->12 [style = solid, label="builder"];
16->18 [style = solid, label="builder"];
4->5 [style = solid, label="builder"];
4->8 [style = solid, label="builder"];
7->14 [style = dashed, label="0"];
4->3 [style = solid, label="builder"];
18->14 [style = bold, label=""];
1->17 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
4->9 [style = solid, label="builder"];
10->5 [style = bold, label=""];
4->0 [style = bold, label=""];
9->10 [style = bold, label=""];
}
