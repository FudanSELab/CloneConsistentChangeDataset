digraph {
13 [style = filled, label = "final Query query = matchQuery.parse(MatchQuery.Type.BOOLEAN_PREFIX,fieldName,value)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "final Query query = queryParser.parse(MatchQueryParser.Type.BOOLEAN_PREFIX,fieldName,value)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "analyzer != null && context.getIndexAnalyzers().get(analyzer) == null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "doToQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "matchQuery.setFuzzyRewriteMethod(QueryParsers.parseRewriteMethod(fuzzyRewrite,null,LoggingDeprecationHandler.INSTANCE))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "matchQuery.setTranspositions(fuzzyTranspositions)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "matchQuery.setAnalyzer(analyzer)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return Queries.maybeApplyMinimumShouldMatch(query,minimumShouldMatch)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "queryParser.setFuzzyRewriteMethod(QueryParsers.parseRewriteMethod(fuzzyRewrite,null,LoggingDeprecationHandler.INSTANCE))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "queryParser.setTranspositions(fuzzyTranspositions)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "queryParser.setFuzziness(fuzziness)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "matchQuery.setFuzziness(fuzziness)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "matchQuery.setFuzzyPrefixLength(prefixLength)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "queryParser.setMaxExpansions(maxExpansions)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "return matchQuery.parse(MatchQuery.Type.PHRASE_PREFIX,fieldName,value)@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final MatchQuery matchQuery = new MatchQuery(context)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "queryParser.setFuzzyPrefixLength(prefixLength)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "MatchQuery matchQuery = new MatchQuery(context)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "doToQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "matchQuery.setPhraseSlop(slop)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SearchExecutionContext context@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "matchQuery.setMaxExpansions(maxExpansions)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "matchQuery.setZeroTermsQuery(zeroTermsQuery)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "analyzer != null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "queryParser.setOccur(operator.toBooleanClauseOccur())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "queryParser.setAnalyzer(analyzer)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "throw new QueryShardException(context,\"(\" + NAME + \"( analyzer (\" + analyzer + \"( not found\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "doToQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "matchQuery.setOccur(operator.toBooleanClauseOccur())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "final MatchQueryParser queryParser = new MatchQueryParser(context)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->23 [style = dashed, label="0"];
28->29 [style = bold, label=""];
8->19 [style = dashed, label="0"];
4->3 [style = bold, label=""];
8->28 [style = bold, label=""];
4->18 [style = dashed, label="0"];
27->1 [style = dotted, label="true"];
3->17 [style = dashed, label="0"];
15->14 [style = solid, label="query"];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
27->12 [style = bold, label=""];
6->22 [style = bold, label=""];
11->1 [style = dotted, label="true"];
22->9 [style = bold, label=""];
25->9 [style = bold, label=""];
5->24 [style = dashed, label="0"];
1->6 [style = solid, label="context"];
18->17 [style = bold, label=""];
1->7 [style = solid, label="context"];
11->12 [style = bold, label=""];
4->26 [style = dashed, label="0"];
9->8 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
13->15 [style = dashed, label="0"];
0->28 [style = dashed, label="0"];
12->7 [style = bold, label=""];
29->26 [style = bold, label=""];
9->8 [style = dotted, label="true"];
1->22 [style = solid, label="context"];
7->9 [style = bold, label=""];
8->0 [style = bold, label=""];
9->28 [style = bold, label=""];
26->2 [style = bold, label=""];
5->2 [style = bold, label=""];
0->10 [style = bold, label=""];
9->19 [style = dotted, label="true"];
1->25 [style = solid, label="context"];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
16->1 [style = dotted, label="true"];
12->6 [style = dotted, label="true"];
0->21 [style = dashed, label="0"];
12->25 [style = bold, label=""];
13->14 [style = solid, label="query"];
9->21 [style = bold, label=""];
17->15 [style = bold, label=""];
7->25 [style = dashed, label="0"];
3->13 [style = bold, label=""];
9->19 [style = bold, label=""];
10->20 [style = dashed, label="0"];
6->7 [style = bold, label=""];
20->24 [style = bold, label=""];
13->14 [style = bold, label=""];
16->12 [style = bold, label=""];
23->18 [style = bold, label=""];
12->22 [style = bold, label=""];
7->22 [style = dashed, label="0"];
6->25 [style = bold, label=""];
24->23 [style = bold, label=""];
19->21 [style = bold, label=""];
}
