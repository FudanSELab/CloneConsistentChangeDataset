digraph {
2 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "verifyEquality(SessionWindows.with(1),SessionWindows.with(1))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)),SessionWindows.with(ofMillis(1)))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "verifyEquality(TimeWindows.of(3).advanceBy(1).grace(1).until(4),TimeWindows.of(3).advanceBy(1).grace(1).until(4))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verifyEquality(TimeWindows.of(3).advanceBy(1),TimeWindows.of(3).advanceBy(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verifyEquality(TimeWindows.of(3).grace(1),TimeWindows.of(3).grace(1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyEquality(SessionWindows.with(1).until(7),SessionWindows.with(1).until(7))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)).until(7))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).until(7),SessionWindows.with(ofMillis(1)).until(7))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "verifyEquality(SessionWindows.with(1).grace(6),SessionWindows.with(1).grace(6))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "verifyEquality(SessionWindows.with(1).grace(6).until(7),SessionWindows.with(1).grace(6).until(7))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "verifyEquality(TimeWindows.of(3).until(4),TimeWindows.of(3).until(4))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "equalsAndHashcodeShouldBeValidForPositiveCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verifyEquality(SessionWindows.with(ofMillis(1)).grace(ofMillis(6)),SessionWindows.with(ofMillis(1)).grace(ofMillis(6)))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "verifyEquality(TimeWindows.of(3),TimeWindows.of(3))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->5 [style = dashed, label="0"];
7->9 [style = bold, label=""];
5->7 [style = bold, label=""];
4->3 [style = bold, label=""];
6->5 [style = bold, label=""];
14->15 [style = bold, label=""];
12->13 [style = bold, label=""];
1->8 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
15->11 [style = bold, label=""];
4->13 [style = dashed, label="0"];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
13->14 [style = bold, label=""];
0->1 [style = bold, label=""];
11->10 [style = bold, label=""];
3->7 [style = dashed, label="0"];
3->0 [style = bold, label=""];
}
