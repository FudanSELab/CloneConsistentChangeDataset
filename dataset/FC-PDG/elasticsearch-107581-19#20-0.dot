digraph {
54 [style = filled, label = "expression.equals(Metadata.ALL)@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "int i = 0@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "indexAbstraction == null@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "indexExpressions = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13a3af7@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "addIndex(writeIndex,context)@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "IndexMetadata index@@@92@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "indexAbstraction == null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()@@@77@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Set<Index> concreteIndices = new LinkedHashSet<>(expressions.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "options.allowNoIndices() == false && concreteIndices.isEmpty()@@@99@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String(( indexNames = new String((((@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "throw aliasesNotSupportedException(expression)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "failNoIndices@@@57@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "addIndex(writeIndex,context)@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "infe = new IndexNotFoundException(expression)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? options.allowNoIndices() == false: options.ignoreUnavailable() == false@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",expression)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "IndexMetadata indexMetadata@@@87@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
83 [style = filled, label = "return false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "checkSystemIndexAccess(context,metadata,concreteIndices,indexExpressions)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "indexExpressions(0(.equals(Metadata.ALL)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.getOptions().ignoreAliases()@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexMetadata indexMetadata@@@87@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "indexAbstraction.getIndices().size() > 1 && options.allowAliasesToMultipleIndices() == false@@@84@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "indexAbstraction.getIndices()@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw infe@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "throw infe@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Context context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expressions.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@108@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "IndexNotFoundException infe@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "String indexExpressions@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "return Index.EMPTY_ARRAY@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",(String)null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "boolean excludedDataStreams = false@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "return true@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "Metadata metadata@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "infe.setResources(\"index_expression\",expression)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IndicesOptions options = context.getOptions()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Metadata metadata = context.getState().metadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "aliasOrIndexExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "infe.addMetadata(EXCLUDED_DATA_STREAMS_KEY,\"true\")@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "indexExpressions == null || indexExpressions.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "String expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "concreteIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "indexExpressions.length == 1@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "shouldTrackConcreteIndex(context,options,index)@@@93@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "throw infe@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "return false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "IndicesOptions options@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "expressions = expressionResolver.resolve(context,expressions)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "indexNames(i++( = indexMetadata.getIndex().getName()@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? !options.allowNoIndices(): !options.ignoreUnavailable()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "excludedDataStreams@@@102@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<String> expressions = Arrays.asList(indexExpressions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "excludedDataStreams = true@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && options.ignoreAliases()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one index associated with it \" + Arrays.toString(indexNames) + \", can't execute a single index op\")@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "IndexNotFoundException infe@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String indexExpressions@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "indexAbstraction.getIndices()@@@92@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new IllegalArgumentException(\"no write index is defined for alias (\" + indexAbstraction.getName() + \"(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "failNoIndices@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "concreteIndices.add(index.getIndex())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "options.allowNoIndices() == false@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "indexAbstraction.getIndices()@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "writeIndex == null@@@70@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "concreteIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41->0 [style = bold, label=""];
15->55 [style = bold, label=""];
4->34 [style = solid, label="indexExpressions"];
52->8 [style = bold, label=""];
18->35 [style = dotted, label="true"];
51->31 [style = dotted, label="true"];
41->24 [style = dotted, label="false"];
56->30 [style = bold, label=""];
37->34 [style = solid, label="concreteIndices"];
45->18 [style = solid, label="excludedDataStreams"];
81->76 [style = dotted, label="true"];
25->45 [style = bold, label=""];
0->54 [style = dotted, label="true"];
67->13 [style = solid, label="indexExpressions"];
33->48 [style = dotted, label="true"];
24->33 [style = dotted, label="true"];
20->36 [style = dotted, label="true"];
23->68 [style = bold, label=""];
21->34 [style = solid, label="metadata"];
27->52 [style = solid, label="context"];
63->5 [style = dotted, label="true"];
78->73 [style = dotted, label="true"];
40->43 [style = dotted, label="true"];
44->53 [style = bold, label=""];
63->65 [style = dotted, label="true"];
57->34 [style = bold, label=""];
10->29 [style = dotted, label="true"];
43->40 [style = bold, label=""];
78->80 [style = dotted, label="true"];
48->51 [style = bold, label=""];
12->10 [style = bold, label=""];
40->8 [style = bold, label=""];
10->8 [style = bold, label=""];
63->6 [style = dotted, label="true"];
16->49 [style = bold, label=""];
64->22 [style = solid, label="infe"];
51->42 [style = dotted, label="true"];
56->22 [style = solid, label="infe"];
43->8 [style = bold, label=""];
33->48 [style = bold, label=""];
0->8 [style = bold, label=""];
11->0 [style = solid, label="failNoIndices"];
2->13 [style = solid, label="indexExpressions"];
9->14 [style = bold, label=""];
18->35 [style = bold, label=""];
78->71 [style = bold, label=""];
63->16 [style = dotted, label="true"];
53->18 [style = solid, label="excludedDataStreams"];
17->27 [style = dotted, label="true"];
36->44 [style = dotted, label="false"];
78->74 [style = dotted, label="true"];
25->51 [style = bold, label=""];
4->19 [style = solid, label="indexExpressions"];
60->51 [style = bold, label=""];
10->50 [style = bold, label=""];
47->64 [style = bold, label=""];
54->9 [style = dotted, label="true"];
8->34 [style = bold, label=""];
40->50 [style = bold, label=""];
67->30 [style = solid, label="indexExpressions"];
11->33 [style = solid, label="failNoIndices"];
82->83 [style = dotted, label="true"];
36->44 [style = bold, label=""];
68->33 [style = solid, label="failNoIndices"];
47->64 [style = dotted, label="false"];
23->40 [style = solid, label="options"];
15->40 [style = dotted, label="true"];
82->72 [style = bold, label=""];
52->32 [style = dotted, label="true"];
2->34 [style = solid, label="indexExpressions"];
15->52 [style = dotted, label="true"];
14->60 [style = bold, label=""];
0->60 [style = dotted, label="true"];
79->81 [style = bold, label=""];
33->50 [style = bold, label=""];
41->0 [style = dotted, label="true"];
62->20 [style = bold, label=""];
35->57 [style = bold, label=""];
25->45 [style = dotted, label="true"];
15->63 [style = dotted, label="false"];
36->46 [style = bold, label=""];
63->70 [style = dotted, label="true"];
63->7 [style = dotted, label="true"];
19->62 [style = solid, label="expressions"];
67->19 [style = solid, label="indexExpressions"];
9->60 [style = solid, label="infe"];
3->2 [style = bold, label=""];
77->81 [style = bold, label=""];
63->40 [style = bold, label=""];
27->10 [style = solid, label="context"];
2->21 [style = bold, label=""];
81->82 [style = bold, label=""];
19->62 [style = bold, label=""];
8->18 [style = dotted, label="true"];
54->59 [style = bold, label=""];
5->7 [style = bold, label=""];
0->14 [style = dotted, label="true"];
78->75 [style = dotted, label="true"];
34->38 [style = bold, label=""];
49->5 [style = bold, label=""];
76->82 [style = bold, label=""];
63->16 [style = bold, label=""];
50->41 [style = bold, label=""];
8->57 [style = dotted, label="true"];
33->8 [style = bold, label=""];
68->0 [style = solid, label="failNoIndices"];
13->18 [style = bold, label=""];
36->46 [style = dotted, label="true"];
21->23 [style = bold, label=""];
32->50 [style = bold, label=""];
50->41 [style = solid, label="indexAbstraction"];
2->30 [style = solid, label="indexExpressions"];
41->77 [style = dashed, label="0"];
24->25 [style = dotted, label="false"];
2->19 [style = solid, label="indexExpressions"];
47->56 [style = bold, label=""];
36->22 [style = dotted, label="true"];
46->28 [style = bold, label=""];
17->4 [style = dotted, label="true"];
27->80 [style = dashed, label="0"];
28->39 [style = bold, label=""];
28->47 [style = bold, label=""];
58->57 [style = solid, label="infe"];
69->27 [style = dotted, label="true"];
31->10 [style = solid, label="writeIndex"];
47->56 [style = dotted, label="true"];
15->66 [style = dotted, label="false"];
36->28 [style = dotted, label="true"];
82->83 [style = bold, label=""];
77->79 [style = dotted, label="true"];
5->7 [style = solid, label="indexNames"];
24->33 [style = bold, label=""];
4->3 [style = solid, label="indexExpressions"];
67->34 [style = solid, label="indexExpressions"];
53->37 [style = bold, label=""];
31->42 [style = bold, label=""];
32->8 [style = bold, label=""];
27->34 [style = solid, label="context"];
29->50 [style = bold, label=""];
0->61 [style = bold, label=""];
24->25 [style = bold, label=""];
63->49 [style = dotted, label="true"];
59->60 [style = solid, label="infe"];
45->8 [style = bold, label=""];
18->57 [style = bold, label=""];
71->77 [style = solid, label="indexAbstraction"];
17->3 [style = bold, label=""];
69->3 [style = bold, label=""];
3->21 [style = bold, label=""];
52->50 [style = bold, label=""];
8->13 [style = dotted, label="true"];
64->30 [style = bold, label=""];
61->54 [style = bold, label=""];
55->52 [style = bold, label=""];
39->22 [style = solid, label="infe"];
23->11 [style = bold, label=""];
27->40 [style = solid, label="context"];
40->43 [style = bold, label=""];
51->15 [style = dotted, label="false"];
36->30 [style = dotted, label="true"];
20->36 [style = bold, label=""];
59->14 [style = bold, label=""];
7->40 [style = bold, label=""];
28->39 [style = dotted, label="false"];
58->13 [style = bold, label=""];
29->8 [style = bold, label=""];
30->22 [style = bold, label=""];
43->50 [style = bold, label=""];
4->13 [style = solid, label="indexExpressions"];
28->47 [style = dotted, label="true"];
69->67 [style = dotted, label="true"];
41->24 [style = bold, label=""];
8->58 [style = bold, label=""];
8->58 [style = dotted, label="true"];
11->68 [style = dashed, label="0"];
55->52 [style = solid, label="writeIndex"];
68->19 [style = bold, label=""];
0->61 [style = dotted, label="true"];
42->12 [style = bold, label=""];
15->1 [style = dotted, label="false"];
51->10 [style = dotted, label="true"];
31->42 [style = solid, label="writeIndex"];
11->19 [style = bold, label=""];
20->53 [style = bold, label=""];
0->50 [style = bold, label=""];
77->79 [style = bold, label=""];
39->30 [style = bold, label=""];
75->71 [style = solid, label="expression"];
42->12 [style = dotted, label="true"];
22->53 [style = bold, label=""];
71->77 [style = bold, label=""];
10->29 [style = bold, label=""];
52->32 [style = bold, label=""];
45->50 [style = bold, label=""];
54->59 [style = dotted, label="false"];
42->10 [style = bold, label=""];
81->76 [style = bold, label=""];
67->3 [style = solid, label="indexExpressions"];
54->9 [style = bold, label=""];
15->26 [style = dotted, label="false"];
4->30 [style = solid, label="indexExpressions"];
15->55 [style = dotted, label="true"];
27->62 [style = solid, label="context"];
51->31 [style = bold, label=""];
51->15 [style = bold, label=""];
15->63 [style = bold, label=""];
83->72 [style = bold, label=""];
37->50 [style = bold, label=""];
3->2 [style = dotted, label="true"];
}
