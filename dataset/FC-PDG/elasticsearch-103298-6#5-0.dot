digraph {
31 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boostQuery = (BoostQuery)boostQuery.getQuery()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(boostQuery2.getBoost(),equalTo(1.5f))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "query = queryStringQuery.toQuery(shardContext)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(query,instanceOf())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2f))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "simpleQueryStringBuilder.field(STRING_FIELD_NAME,5)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(),equalTo(new Term(STRING_FIELD_NAME,\"foo\")))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "simpleQueryStringBuilder.boost(2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "queryStringQuery.boost(2.0f)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "query = queryStringQuery.toQuery(shardContext)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(5f))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "boostQuery = (BoostQuery)query@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(query,instanceOf())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "SimpleQueryStringBuilder simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "QueryStringQueryBuilder queryStringQuery = queryStringQuery(STRING_FIELD_NAME + \":boosted^2\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertThat(boostQuery1.getBoost(),equalTo(2.0f))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boostQuery = (BoostQuery)query@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "QueryStringQueryBuilder queryStringQuery = queryStringQuery(TEXT_FIELD_NAME + \":boosted^2\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "query = queryStringQuery.toQuery(shardContext)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testToQueryBoosts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "testToQueryBoosts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "query = simpleQueryStringBuilder.toQuery(shardContext)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "queryStringQuery.boost(2.0f)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "queryStringQuery = queryStringQuery(\"((\" + STRING_FIELD_NAME + \":boosted^2) AND (\" + STRING_FIELD_NAME + \":foo^1.5))^3\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"boosted\")))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(5f))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "queryStringQuery = queryStringQuery(\"((\" + TEXT_FIELD_NAME + \":boosted^2) AND (\" + TEXT_FIELD_NAME + \":foo^1.5))^3\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "testToQueryBoost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "boostQuery = (BoostQuery)boostQuery.getQuery()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(2.0f))@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(query,instanceOf())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(boostQuery.getQuery(),instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(((TermQuery)boostQuery1.getQuery()).getTerm(),equalTo(new Term(STRING_FIELD_NAME,\"boosted\")))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertThat(query,instanceOf())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(boostQuery2.getQuery(),instanceOf())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "QueryShardContext shardContext = createShardContext()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(boostQuery1.getQuery(),instanceOf())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "BoostQuery boostQuery2 = assertBooleanSubQuery(boostQuery.getQuery(),,1)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Query query = queryStringQuery.toQuery(shardContext)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "BoostQuery boostQuery1 = assertBooleanSubQuery(boostQuery.getQuery(),,0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(((TermQuery)boostQuery2.getQuery()).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"foo\")))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "simpleQueryStringBuilder.field(STRING_FIELD_NAME,5)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(boostQuery.getBoost(),equalTo(3.0f))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "simpleQueryStringBuilder = new SimpleQueryStringBuilder(\"test\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Query query = simpleQueryStringBuilder.toQuery(shardContext)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "BoostQuery boostQuery = (BoostQuery)query@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boostQuery = (BoostQuery)query@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(((TermQuery)boostQuery.getQuery()).getTerm(),equalTo(new Term(TEXT_FIELD_NAME,\"boosted\")))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "boostQuery = (BoostQuery)query@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(query,instanceOf())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->38 [style = dashed, label="0"];
41->0 [style = bold, label=""];
7->32 [style = bold, label=""];
32->22 [style = bold, label=""];
12->45 [style = bold, label=""];
21->8 [style = bold, label=""];
7->35 [style = bold, label=""];
9->10 [style = bold, label=""];
5->28 [style = bold, label=""];
38->15 [style = bold, label=""];
8->40 [style = bold, label=""];
13->1 [style = bold, label=""];
3->27 [style = solid, label="query"];
30->11 [style = solid, label="query"];
22->4 [style = bold, label=""];
48->52 [style = bold, label=""];
30->11 [style = bold, label=""];
6->17 [style = solid, label="query"];
22->4 [style = solid, label="query"];
42->44 [style = bold, label=""];
24->21 [style = bold, label=""];
13->3 [style = solid, label="shardContext"];
45->42 [style = bold, label=""];
14->9 [style = bold, label=""];
22->5 [style = solid, label="query"];
13->52 [style = solid, label="shardContext"];
23->30 [style = bold, label=""];
27->0 [style = bold, label=""];
32->35 [style = dashed, label="0"];
19->53 [style = dashed, label="0"];
33->23 [style = bold, label=""];
29->27 [style = bold, label=""];
13->37 [style = bold, label=""];
17->2 [style = bold, label=""];
44->41 [style = bold, label=""];
28->24 [style = bold, label=""];
18->7 [style = bold, label=""];
31->49 [style = dashed, label="0"];
3->29 [style = bold, label=""];
14->40 [style = dashed, label="0"];
0->31 [style = bold, label=""];
11->26 [style = bold, label=""];
6->17 [style = bold, label=""];
1->37 [style = dashed, label="0"];
39->13 [style = bold, label=""];
0->43 [style = bold, label=""];
8->14 [style = bold, label=""];
30->26 [style = solid, label="query"];
40->9 [style = bold, label=""];
0->43 [style = dashed, label="0"];
50->48 [style = bold, label=""];
15->3 [style = bold, label=""];
51->13 [style = bold, label=""];
19->16 [style = bold, label=""];
13->50 [style = bold, label=""];
13->22 [style = solid, label="shardContext"];
1->6 [style = bold, label=""];
19->53 [style = bold, label=""];
52->19 [style = solid, label="query"];
37->35 [style = solid, label="queryStringQuery"];
49->7 [style = bold, label=""];
41->0 [style = solid, label="query"];
4->5 [style = bold, label=""];
53->12 [style = bold, label=""];
20->36 [style = bold, label=""];
7->47 [style = dashed, label="0"];
3->29 [style = solid, label="query"];
10->20 [style = bold, label=""];
2->19 [style = bold, label=""];
6->2 [style = solid, label="query"];
16->38 [style = bold, label=""];
1->32 [style = solid, label="queryStringQuery"];
7->47 [style = bold, label=""];
35->22 [style = bold, label=""];
26->25 [style = bold, label=""];
34->13 [style = bold, label=""];
12->15 [style = bold, label=""];
3->44 [style = dashed, label="0"];
31->18 [style = bold, label=""];
47->46 [style = bold, label=""];
52->2 [style = bold, label=""];
13->6 [style = solid, label="shardContext"];
37->6 [style = bold, label=""];
13->41 [style = solid, label="shardContext"];
52->2 [style = solid, label="query"];
20->33 [style = bold, label=""];
15->42 [style = dashed, label="0"];
36->23 [style = bold, label=""];
33->36 [style = dashed, label="0"];
43->49 [style = bold, label=""];
16->12 [style = bold, label=""];
13->30 [style = solid, label="shardContext"];
}
