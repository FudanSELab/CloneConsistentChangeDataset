digraph {
12 [style = filled, label = "privateGateways != null && !privateGateways.isEmpty()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final HypervisorType hType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "publicNic.setBroadcastUri(BroadcastDomainType.Vlan.toUri(publicIp.getVlanTag()))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "vpcRouterDeploymentDefinition.isPublicNetwork()@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "_itMgr.allocate(router.getInstanceName(),template,routerOffering,networks,routerDeploymentDefinition.getPlan(),hType)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "privateGateways@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "publicNic.setIPv4Gateway(publicIp.getGateway())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "publicNic.setIPv4Netmask(publicIp.getNetmask())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "publicNic.setDefaultNic(false)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "_networkModel.isPrivateGateway(guestNetwork.getId())@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final TreeSet<String> publicVlans = new TreeSet<String>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "publicNic.setBroadcastType(BroadcastDomainType.Vlan)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final RouterDeploymentDefinition vpcRouterDeploymentDefinition@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "final HypervisorType hType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "vpcIsStaticNatProvider || !ip.isOneToOneNat()@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final List<NicProfile> publicNics = new ArrayList<NicProfile>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final VMTemplateVO template@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "guestNetwork.getState() == Network.State.Implemented || guestNetwork.getState() == Network.State.Setup@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "reallocateRouterNetworks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "networks.put(publicNetwork,publicNics)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "networks.put(publicNetwork,publicNicProfiles)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final List<IPAddressVO> ips = _ipAddressDao.listByAssociatedVpc(vpcId,false)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "networks.put(guestNetwork,new ArrayList<NicProfile>(Arrays.asList(guestNic)))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "publicVlans.add(publicIp.getVlanTag())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "publicNic.setIsolationUri(IsolationType.Vlan.toUri(publicIp.getVlanTag()))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "publicNetwork == null@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final List<? extends Network> guestNetworks = vpcMgr.getVpcNetworks(vpcId)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final LinkedHashMap<Network,List<? extends NicProfile>> networks = configureDefaultNics(vpcRouterDeploymentDefinition)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final List<? extends Network> publicNetworks = _networkMgr.setupNetwork(s_systemAccount,publicOffering,vpcRouterDeploymentDefinition.getPlan(),null,null,false)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "reallocateRouterNetworks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<PrivateGateway> privateGateways = vpcMgr.getVpcPrivateGateways(vpcId)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ServiceOfferingVO routerOffering = _serviceOfferingDao.findById(vpcRouterDeploymentDefinition.getServiceOfferingId())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "@SuppressWarnings(\"unchecked\") final List<NicProfile> publicNicProfiles = (List<NicProfile>)networks.get(publicNetwork)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "privateGateways@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final Map<Network.Service,Set<Network.Provider>> vpcOffSvcProvidersMap = vpcMgr.getVpcOffSvcProvidersMap(vpcRouterDeploymentDefinition.getVpc().getVpcOfferingId())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "networks.put(privateNetwork,new ArrayList<NicProfile>(Arrays.asList(privateNic)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "publicNetwork != null@@@57@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "publicNic.setMacAddress(publicIp.getMacAddress())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final PublicIp publicIp = PublicIp.createFromAddrAndVlan(ip,_vlanDao.findById(ip.getVlanId()))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final VirtualRouter router@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "s_logger.debug(\"Allocating nic for router in vlan \" + publicIp.getVlanTag())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final HypervisorType hType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final NicProfile guestNic = nicProfileHelper.createGuestNicProfileForVpcRouter(vpcRouterDeploymentDefinition,guestNetwork)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final NicProfile privateNic = nicProfileHelper.createPrivateNicProfileForGateway(privateGateway,router)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final ServiceOfferingVO routerOffering = _serviceOfferingDao.findById(routerDeploymentDefinition.getServiceOfferingId())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "final RouterDeploymentDefinition routerDeploymentDefinition@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Long vpcId = vpcRouterDeploymentDefinition.getVpc().getId()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "final VMTemplateVO template@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "publicNicProfiles.addAll(publicNics)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "publicVlans.add(vpcRouterDeploymentDefinition.getSourceNatIP().getVlanTag())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "networks.get(publicNetwork) != null@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final NetworkOffering publicOffering = _networkModel.getSystemAccountNetworkOfferings(NetworkOffering.SystemPublicNetwork).get(0)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Network publicNetwork = null@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "_itMgr.allocate(router.getInstanceName(),template,routerOffering,networks,vpcRouterDeploymentDefinition.getPlan(),hType)@@@67@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final PrivateGateway privateGateway@@@11@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "reallocateRouterNetworks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final LinkedHashMap<Network,List<? extends NicProfile>> networks = configureDefaultNics(routerDeploymentDefinition)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "(ip.getState() == IpAddress.State.Allocated || ip.getState() == IpAddress.State.Allocating) && vpcMgr.isIpAllocatedToVpc(ip) && !publicVlans.contains(publicIp.getVlanTag())@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "publicNetwork = publicNetworks.get(0)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final VirtualRouter router@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final NicProfile publicNic = new NicProfile()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolean vpcIsStaticNatProvider = vpcOffSvcProvidersMap.get(Network.Service.StaticNat) != null && vpcOffSvcProvidersMap.get(Network.Service.StaticNat).contains(Network.Provider.VPCVirtualRouter)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "publicNic.setIPv4Address(publicIp.getAddress().addr())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final VirtualRouter router@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "publicNics.add(publicNic)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "final VMTemplateVO template@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final Network privateNetwork = _networkModel.getNetwork(privateGateway.getNetworkId())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->25 [style = dotted, label="true"];
6->61 [style = dashed, label="0"];
60->61 [style = bold, label=""];
43->11 [style = bold, label=""];
50->48 [style = dotted, label="true"];
22->42 [style = bold, label=""];
38->8 [style = bold, label=""];
66->65 [style = dotted, label="true"];
5->15 [style = solid, label="router"];
2->51 [style = dotted, label="true"];
2->41 [style = dotted, label="true"];
66->64 [style = dotted, label="true"];
1->37 [style = bold, label=""];
0->27 [style = solid, label="publicNic"];
45->22 [style = solid, label="publicNetwork"];
3->23 [style = bold, label=""];
6->4 [style = dotted, label="true"];
2->28 [style = dotted, label="true"];
50->38 [style = dotted, label="true"];
50->53 [style = bold, label=""];
26->40 [style = bold, label=""];
44->41 [style = bold, label=""];
36->47 [style = bold, label=""];
42->31 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
2->44 [style = dotted, label="true"];
17->8 [style = bold, label=""];
2->29 [style = dotted, label="true"];
37->21 [style = solid, label="publicOffering"];
40->2 [style = bold, label=""];
9->26 [style = bold, label=""];
2->49 [style = dotted, label="true"];
19->39 [style = solid, label="hType"];
31->39 [style = bold, label=""];
15->25 [style = bold, label=""];
28->0 [style = bold, label=""];
49->21 [style = bold, label=""];
12->24 [style = dotted, label="true"];
13->26 [style = bold, label=""];
26->22 [style = bold, label=""];
2->3 [style = dotted, label="true"];
16->36 [style = solid, label="publicNetwork"];
58->33 [style = dotted, label="true"];
30->39 [style = solid, label="networks"];
2->26 [style = bold, label=""];
58->56 [style = dotted, label="true"];
42->47 [style = dotted, label="true"];
56->30 [style = solid, label="vpcRouterDeploymentDefinition"];
66->59 [style = dotted, label="true"];
31->26 [style = bold, label=""];
2->28 [style = bold, label=""];
4->62 [style = dashed, label="0"];
2->1 [style = dotted, label="true"];
46->45 [style = bold, label=""];
20->39 [style = bold, label=""];
33->65 [style = dashed, label="0"];
16->22 [style = solid, label="publicNetwork"];
45->43 [style = bold, label=""];
26->40 [style = dotted, label="true"];
33->39 [style = solid, label="hType"];
49->16 [style = dotted, label="true"];
32->7 [style = dotted, label="true"];
42->20 [style = bold, label=""];
2->13 [style = dotted, label="true"];
57->15 [style = solid, label="router"];
41->3 [style = bold, label=""];
47->31 [style = bold, label=""];
29->1 [style = bold, label=""];
34->12 [style = solid, label="privateGateways"];
10->34 [style = bold, label=""];
8->53 [style = bold, label=""];
33->30 [style = solid, label="vpcRouterDeploymentDefinition"];
48->38 [style = bold, label=""];
33->48 [style = solid, label="vpcRouterDeploymentDefinition"];
32->5 [style = dotted, label="true"];
45->36 [style = solid, label="publicNetwork"];
42->20 [style = dotted, label="false"];
2->23 [style = dotted, label="true"];
53->46 [style = bold, label=""];
2->27 [style = dotted, label="true"];
6->4 [style = bold, label=""];
46->47 [style = solid, label="publicNics"];
58->57 [style = dotted, label="true"];
16->31 [style = solid, label="publicNetwork"];
52->6 [style = bold, label=""];
21->16 [style = bold, label=""];
24->17 [style = bold, label=""];
61->62 [style = bold, label=""];
66->60 [style = bold, label=""];
32->52 [style = bold, label=""];
2->37 [style = dotted, label="true"];
50->8 [style = bold, label=""];
10->34 [style = solid, label="vpcId"];
59->62 [style = solid, label="hType"];
32->33 [style = dotted, label="true"];
10->53 [style = solid, label="vpcId"];
23->35 [style = bold, label=""];
7->39 [style = solid, label="template"];
12->17 [style = bold, label=""];
12->54 [style = dotted, label="true"];
45->42 [style = solid, label="publicNetwork"];
26->2 [style = dotted, label="true"];
11->26 [style = solid, label="vpcIsStaticNatProvider"];
16->42 [style = solid, label="publicNetwork"];
42->36 [style = dotted, label="true"];
15->24 [style = solid, label="privateNic"];
16->27 [style = bold, label=""];
42->36 [style = bold, label=""];
37->49 [style = bold, label=""];
65->62 [style = solid, label="template"];
60->62 [style = solid, label="routerOffering"];
10->17 [style = solid, label="vpcId"];
8->50 [style = bold, label=""];
6->30 [style = bold, label=""];
32->19 [style = dotted, label="true"];
22->39 [style = bold, label=""];
58->55 [style = dotted, label="true"];
38->53 [style = bold, label=""];
49->27 [style = bold, label=""];
12->18 [style = dotted, label="true"];
2->35 [style = dotted, label="true"];
66->63 [style = dotted, label="true"];
9->39 [style = solid, label="routerOffering"];
45->49 [style = solid, label="publicNetwork"];
0->51 [style = bold, label=""];
55->39 [style = solid, label="template"];
16->49 [style = solid, label="publicNetwork"];
51->44 [style = bold, label=""];
27->13 [style = bold, label=""];
12->15 [style = bold, label=""];
25->24 [style = bold, label=""];
61->62 [style = solid, label="networks"];
24->15 [style = bold, label=""];
48->38 [style = solid, label="guestNic"];
13->22 [style = bold, label=""];
25->24 [style = solid, label="privateNetwork"];
50->48 [style = bold, label=""];
11->9 [style = bold, label=""];
12->15 [style = dotted, label="true"];
30->10 [style = bold, label=""];
56->48 [style = solid, label="vpcRouterDeploymentDefinition"];
58->52 [style = bold, label=""];
22->26 [style = bold, label=""];
46->20 [style = solid, label="publicNics"];
36->31 [style = solid, label="publicNicProfiles"];
2->22 [style = bold, label=""];
34->12 [style = bold, label=""];
22->42 [style = dotted, label="true"];
35->29 [style = bold, label=""];
45->20 [style = solid, label="publicNetwork"];
64->61 [style = solid, label="routerDeploymentDefinition"];
2->0 [style = dotted, label="true"];
49->21 [style = dotted, label="true"];
20->26 [style = bold, label=""];
4->30 [style = bold, label=""];
45->31 [style = solid, label="publicNetwork"];
16->20 [style = solid, label="publicNetwork"];
}
