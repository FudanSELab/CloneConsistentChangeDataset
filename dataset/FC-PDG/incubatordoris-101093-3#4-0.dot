digraph {
19 [style = filled, label = "Map<TNetworkAddress,List<Map<Integer,List<TScanRangeParams>>>> addressToScanRanges = Maps.newHashMap()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Map<TNetworkAddress,List<Map.Entry<Integer,Map<Integer,List<TScanRangeParams>>>>> addressToScanRanges = Maps.newHashMap()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "computeColocateJoinInstanceParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "instanceParam.addBucketSeq(nodeScanRangeMap.getKey())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "addressToScanRanges.get(address).add(filteredNodeScanRanges)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "computeInstanceParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "addressToScanRanges.get(address).add(nodeScanRanges)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Map<Integer,TNetworkAddress> bucketSeqToAddress = fragmentIdToSeqToAddressMap.get(fragmentId)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TNetworkAddress address = bucketSeqToAddress.get(scanRanges.getKey())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "scanNodeIds.contains(scanNodeId)@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "FragmentExecParams params@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "FragmentExecParams params@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "addressToScanRanges.get(address).add(scanRanges)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "BucketSeqToScanRange bucketSeqToScanRange = fragmentIdBucketSeqToScanRangeMap.get(fragmentId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Map<Integer,List<TScanRangeParams>> filteredNodeScanRanges = Maps.newHashMap()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "parallelExecInstanceNum > 1@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "filteredNodeScanRanges.put(scanNodeId,nodeScanRanges.get(scanNodeId))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),nodeScanRange.getValue())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<List<Map.Entry<Integer,Map<Integer,List<TScanRangeParams>>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "expectedInstanceNum = Math.min(scanRange.size(),parallelExecInstanceNum)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<List<Map<Integer,List<TScanRangeParams>>>> perInstanceScanRanges = ListUtil.splitBySize(scanRange,expectedInstanceNum)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "computeColocateJoinInstanceParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int expectedInstanceNum = 1@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "params.instanceExecParams.add(instanceParam)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FragmentExecParams params@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Set<Integer> scanNodeIds = fragmentIdToScanNodeIds.get(fragmentId)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "List<Map.Entry<Integer,Map<Integer,List<TScanRangeParams>>>> scanRange = addressScanRange.getValue()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "PlanFragmentId fragmentId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int parallelExecInstanceNum@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Map<Integer,List<TScanRangeParams>>> scanRange = addressScanRange.getValue()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "instanceParam.perNodeScanRanges.get(nodeScanRange.getKey()).addAll(nodeScanRange.getValue())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TNetworkAddress address = bucketSeqToAddress.get(scanRanges.getKey())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "FInstanceExecParam instanceParam = new FInstanceExecParam(null,addressScanRange.getKey(),0,params)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "addressToScanRanges.put(address,Lists.newArrayList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "instanceParam.perNodeScanRanges.put(nodeScanRange.getKey(),nodeScanRange.getValue())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<Integer,List<TScanRangeParams>> nodeScanRanges = scanRanges.getValue()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!addressToScanRanges.containsKey(address)@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "!instanceParam.perNodeScanRanges.containsKey(nodeScanRange.getKey())@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int expectedInstanceNum = 1@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->9 [style = dotted, label="false"];
30->13 [style = bold, label=""];
32->37 [style = bold, label=""];
33->44 [style = solid, label="scanRange"];
23->26 [style = solid, label="filteredNodeScanRanges"];
28->25 [style = dotted, label="true"];
16->7 [style = bold, label=""];
21->27 [style = dotted, label="true"];
38->31 [style = bold, label=""];
40->38 [style = bold, label=""];
7->8 [style = bold, label=""];
13->43 [style = solid, label="address"];
9->16 [style = bold, label=""];
22->2 [style = solid, label="params"];
20->16 [style = bold, label=""];
33->18 [style = bold, label=""];
6->1 [style = solid, label="parallelExecInstanceNum"];
40->34 [style = dotted, label="false"];
35->12 [style = solid, label="fragmentId"];
39->29 [style = bold, label=""];
17->18 [style = solid, label="parallelExecInstanceNum"];
35->32 [style = solid, label="fragmentId"];
24->19 [style = bold, label=""];
26->7 [style = bold, label=""];
1->41 [style = bold, label=""];
21->0 [style = bold, label=""];
27->0 [style = bold, label=""];
1->44 [style = bold, label=""];
0->10 [style = dotted, label="true"];
5->26 [style = dashed, label="0"];
8->18 [style = bold, label=""];
10->43 [style = dotted, label="true"];
18->15 [style = bold, label=""];
26->14 [style = bold, label=""];
42->36 [style = dotted, label="true"];
34->31 [style = bold, label=""];
11->12 [style = bold, label=""];
10->26 [style = bold, label=""];
20->3 [style = bold, label=""];
40->34 [style = bold, label=""];
28->17 [style = dotted, label="true"];
17->45 [style = dashed, label="0"];
36->41 [style = solid, label="parallelExecInstanceNum"];
1->41 [style = dotted, label="true"];
18->1 [style = bold, label=""];
31->33 [style = bold, label=""];
25->12 [style = solid, label="fragmentId"];
5->7 [style = bold, label=""];
29->40 [style = bold, label=""];
17->12 [style = solid, label="fragmentId"];
36->1 [style = solid, label="parallelExecInstanceNum"];
37->13 [style = bold, label=""];
42->45 [style = dotted, label="true"];
1->15 [style = solid, label="expectedInstanceNum"];
13->0 [style = bold, label=""];
5->30 [style = dashed, label="0"];
34->29 [style = bold, label=""];
6->18 [style = solid, label="parallelExecInstanceNum"];
30->33 [style = bold, label=""];
10->43 [style = bold, label=""];
34->40 [style = bold, label=""];
21->27 [style = bold, label=""];
25->24 [style = solid, label="fragmentId"];
2->3 [style = bold, label=""];
18->1 [style = dotted, label="true"];
12->32 [style = bold, label=""];
11->17 [style = dotted, label="true"];
14->10 [style = solid, label="address"];
40->38 [style = dotted, label="true"];
11->4 [style = dotted, label="true"];
12->24 [style = bold, label=""];
28->12 [style = bold, label=""];
13->5 [style = solid, label="nodeScanRanges"];
3->9 [style = bold, label=""];
19->14 [style = bold, label=""];
10->5 [style = bold, label=""];
11->6 [style = dotted, label="true"];
28->22 [style = dotted, label="true"];
45->39 [style = solid, label="params"];
9->3 [style = bold, label=""];
7->15 [style = solid, label="scanRange"];
4->2 [style = solid, label="params"];
31->39 [style = bold, label=""];
14->13 [style = bold, label=""];
38->40 [style = bold, label=""];
27->21 [style = bold, label=""];
10->30 [style = bold, label=""];
41->44 [style = solid, label="expectedInstanceNum"];
0->5 [style = bold, label=""];
15->2 [style = bold, label=""];
0->26 [style = bold, label=""];
2->16 [style = solid, label="instanceParam"];
1->15 [style = bold, label=""];
38->29 [style = bold, label=""];
15->44 [style = dashed, label="0"];
42->12 [style = bold, label=""];
5->14 [style = bold, label=""];
16->2 [style = bold, label=""];
44->39 [style = bold, label=""];
8->15 [style = solid, label="expectedInstanceNum"];
43->30 [style = bold, label=""];
39->31 [style = solid, label="instanceParam"];
0->10 [style = bold, label=""];
3->20 [style = bold, label=""];
23->21 [style = bold, label=""];
13->23 [style = bold, label=""];
42->35 [style = dotted, label="true"];
17->1 [style = solid, label="parallelExecInstanceNum"];
7->33 [style = dashed, label="0"];
12->19 [style = bold, label=""];
41->44 [style = bold, label=""];
18->44 [style = solid, label="expectedInstanceNum"];
3->20 [style = dotted, label="true"];
}
