digraph {
6 [style = filled, label = "createProjection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final AggregationProjectionSegment projectionSegment@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "AggregationType.AVG == result.getType()@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AggregationDistinctProjection result = new AggregationDistinctProjection(projectionSegment.getStartIndex(),projectionSegment.getStopIndex(),projectionSegment.getType(),innerExpression,alias,projectionSegment.getDistinctExpression(),databaseType)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "createProjection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AggregationProjection result = new AggregationProjection(projectionSegment.getType(),innerExpression,projectionSegment.getAlias().orElse(null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "appendAverageDistinctDerivedProjection(result)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return result@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "appendAverageDerivedProjection(result)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AggregationDistinctProjectionSegment projectionSegment@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return result@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String innerExpression = projectionSegment.getInnerExpression()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String alias = projectionSegment.getAlias().orElse(DerivedColumn.AGGREGATION_DISTINCT_DERIVED.getDerivedColumnAlias(aggregationDistinctDerivedColumnCount++))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "AggregationDistinctProjection result = new AggregationDistinctProjection(projectionSegment.getStartIndex(),projectionSegment.getStopIndex(),projectionSegment.getType(),innerExpression,alias,projectionSegment.getDistinctExpression())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "createProjection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->0 [style = dotted, label="true"];
14->4 [style = solid, label="result"];
4->1 [style = dotted, label="true"];
5->2 [style = solid, label="result"];
11->4 [style = bold, label=""];
7->14 [style = solid, label="innerExpression"];
1->4 [style = dashed, label="0"];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
11->4 [style = dotted, label="true"];
9->7 [style = bold, label=""];
13->10 [style = dotted, label="true"];
7->5 [style = solid, label="innerExpression"];
7->3 [style = bold, label=""];
0->10 [style = dashed, label="0"];
7->14 [style = bold, label=""];
8->2 [style = solid, label="result"];
3->5 [style = bold, label=""];
8->1 [style = solid, label="result"];
13->7 [style = bold, label=""];
3->8 [style = bold, label=""];
3->8 [style = solid, label="alias"];
5->4 [style = bold, label=""];
5->1 [style = solid, label="result"];
4->12 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
7->8 [style = solid, label="innerExpression"];
14->12 [style = solid, label="result"];
8->4 [style = bold, label=""];
6->0 [style = dotted, label="true"];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->5 [style = solid, label="alias"];
14->11 [style = bold, label=""];
}
