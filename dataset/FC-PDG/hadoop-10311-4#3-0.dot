digraph {
11 [style = filled, label = "Configuration conf = new Configuration()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "dispatcher.init(conf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "commitHandler.stop()@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AsyncDispatcher dispatcher = new AsyncDispatcher()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_MAP_TASK_RESCHEDULED))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCheckJobCompleteSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertJobState(job,JobStateInternal.FAILED)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_MAP_TASK_RESCHEDULED))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "dispatcher.stop()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testCheckJobCompleteSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_ATTEMPT_COMPLETED))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_COMPLETED))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "conf.set(MRJobConfig.MR_AM_STAGING_DIR,stagingDir)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "commitHandler.stop()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testCommitJobFailsJob['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "dispatcher.await()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "completeJobTasks(job)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CommitterEventHandler commitHandler = createCommitterEventHandler(dispatcher,committer)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_COMPLETED))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "OutputCommitter committer = new TestingOutputCommitter(syncBarrier,false)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertJobState(job,JobStateInternal.COMMITTING)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dispatcher.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "commitHandler.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "syncBarrier.await()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "dispatcher.await()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "OutputCommitter committer = new TestingOutputCommitter(syncBarrier,true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "DrainDispatcher dispatcher = new DrainDispatcher()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertJobState(job,JobStateInternal.SUCCEEDED)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JobImpl job = createRunningStubbedJob(conf,dispatcher,2,null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "dispatcher.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CyclicBarrier syncBarrier = new CyclicBarrier(2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "job.handle(new JobEvent(job.getID(),JobEventType.JOB_TASK_ATTEMPT_COMPLETED))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "commitHandler.init(conf)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->21 [style = bold, label=""];
9->18 [style = bold, label=""];
7->34 [style = solid, label="job"];
14->17 [style = bold, label=""];
15->24 [style = solid, label="syncBarrier"];
10->2 [style = bold, label=""];
20->7 [style = solid, label="dispatcher"];
22->34 [style = dashed, label="0"];
8->0 [style = bold, label=""];
24->36 [style = dashed, label="0"];
11->7 [style = solid, label="conf"];
19->20 [style = bold, label=""];
7->10 [style = solid, label="job"];
20->29 [style = dashed, label="0"];
2->34 [style = bold, label=""];
3->30 [style = bold, label=""];
4->8 [style = bold, label=""];
0->3 [style = bold, label=""];
15->24 [style = bold, label=""];
33->32 [style = bold, label=""];
1->6 [style = bold, label=""];
7->25 [style = solid, label="job"];
36->21 [style = bold, label=""];
30->27 [style = bold, label=""];
34->38 [style = bold, label=""];
3->23 [style = bold, label=""];
7->8 [style = solid, label="job"];
29->21 [style = solid, label="dispatcher"];
19->29 [style = bold, label=""];
7->9 [style = solid, label="job"];
17->15 [style = bold, label=""];
13->16 [style = bold, label=""];
32->31 [style = bold, label=""];
11->19 [style = bold, label=""];
18->10 [style = bold, label=""];
2->22 [style = bold, label=""];
25->13 [style = bold, label=""];
27->26 [style = bold, label=""];
22->4 [style = bold, label=""];
7->25 [style = bold, label=""];
23->5 [style = bold, label=""];
31->2 [style = bold, label=""];
15->36 [style = bold, label=""];
38->35 [style = bold, label=""];
37->11 [style = bold, label=""];
24->21 [style = solid, label="committer"];
7->3 [style = solid, label="job"];
26->23 [style = bold, label=""];
11->1 [style = solid, label="conf"];
12->11 [style = bold, label=""];
7->26 [style = solid, label="job"];
21->1 [style = bold, label=""];
36->21 [style = solid, label="committer"];
29->14 [style = bold, label=""];
15->36 [style = solid, label="syncBarrier"];
6->7 [style = bold, label=""];
28->11 [style = bold, label=""];
20->21 [style = solid, label="dispatcher"];
13->2 [style = bold, label=""];
20->14 [style = bold, label=""];
10->33 [style = bold, label=""];
7->22 [style = solid, label="job"];
29->7 [style = solid, label="dispatcher"];
7->31 [style = solid, label="job"];
7->13 [style = solid, label="job"];
11->14 [style = solid, label="conf"];
16->9 [style = bold, label=""];
}
