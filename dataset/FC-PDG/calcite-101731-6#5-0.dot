digraph {
10 [style = filled, label = "flattenOr['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "nodes instanceof Collection && ((Collection)nodes).isEmpty()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return builder.build()@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Set<String> digests = Sets.newHashSet()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "node != null && digests.add(node.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "addAnd(builder,node)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Iterable<? extends RexNode> nodes@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "flattenOr['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return builder.build()@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final ImmutableList.Builder<RexNode> builder = ImmutableList.builder()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "flattenAnd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return ImmutableList.of()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "digests.add(node.toString())@@@9@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Iterable<? extends RexNode> nodes@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "addOr(builder,digests,node)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "addOr(builder,node)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = bold, label=""];
3->7 [style = dotted, label="true"];
9->11 [style = bold, label=""];
14->12 [style = dotted, label="true"];
1->9 [style = solid, label="builder"];
4->8 [style = dotted, label="true"];
7->0 [style = bold, label=""];
10->5 [style = dotted, label="true"];
2->4 [style = bold, label=""];
5->4 [style = solid, label="nodes"];
12->0 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
6->14 [style = bold, label=""];
1->7 [style = solid, label="builder"];
8->1 [style = bold, label=""];
6->9 [style = solid, label="digests"];
1->6 [style = bold, label=""];
14->0 [style = bold, label=""];
3->7 [style = bold, label=""];
14->12 [style = bold, label=""];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
7->12 [style = dashed, label="0"];
4->8 [style = bold, label=""];
1->12 [style = solid, label="builder"];
13->15 [style = dotted, label="true"];
4->1 [style = bold, label=""];
15->4 [style = solid, label="nodes"];
6->9 [style = bold, label=""];
2->5 [style = dotted, label="true"];
3->14 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
13->4 [style = bold, label=""];
}
