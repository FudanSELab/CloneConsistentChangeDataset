digraph {
31 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(),\"20\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE),is(0))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE),is(\"LOCAL\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS),is(20))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(),\"20\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS),is(60))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS),is(20))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(),\"XA\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(),\"20\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(),Boolean.TRUE.toString())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE),is(Runtime.getRuntime().availableProcessors() * 2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(),\"20\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE),is(20))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(),Boolean.TRUE.toString())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE),is(20))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(),\"20\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(properties)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(props)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(),Boolean.TRUE.toString())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(),Boolean.TRUE.toString())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(),Boolean.TRUE.toString())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE),is(\"XA\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),is(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertGetValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertGetValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(),\"20\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "Properties properties = new Properties()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertGetDefaultValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD),is(20))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD),is(128))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(),Boolean.TRUE.toString())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(),\"XA\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(),Boolean.TRUE.toString())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS),is(8))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(),Boolean.FALSE.toString())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(),\"20\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(),Boolean.TRUE.toString())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS.getKey(),\"20\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(),Boolean.TRUE.toString())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),is(20))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(),\"20\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(),Boolean.TRUE.toString())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS.getKey(),\"20\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(new Properties())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "properties.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(),Boolean.FALSE.toString())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(),\"20\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(),\"20\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11->32 [style = dashed, label="0"];
22->36 [style = dashed, label="0"];
14->25 [style = bold, label=""];
6->22 [style = bold, label=""];
17->9 [style = bold, label=""];
1->27 [style = bold, label=""];
9->52 [style = dashed, label="0"];
5->28 [style = bold, label=""];
36->33 [style = bold, label=""];
1->44 [style = dashed, label="0"];
24->42 [style = dashed, label="0"];
12->43 [style = dashed, label="0"];
38->30 [style = bold, label=""];
19->38 [style = dashed, label="0"];
24->11 [style = bold, label=""];
0->24 [style = bold, label=""];
1->57 [style = dashed, label="0"];
0->51 [style = dashed, label="0"];
27->45 [style = dashed, label="0"];
43->44 [style = bold, label=""];
19->3 [style = bold, label=""];
37->36 [style = bold, label=""];
26->14 [style = bold, label=""];
43->32 [style = solid, label="properties"];
56->46 [style = bold, label=""];
34->31 [style = bold, label=""];
32->7 [style = bold, label=""];
6->53 [style = dashed, label="0"];
57->45 [style = bold, label=""];
6->37 [style = dashed, label="0"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
58->56 [style = bold, label=""];
20->18 [style = bold, label=""];
47->57 [style = bold, label=""];
2->48 [style = dashed, label="0"];
9->31 [style = dashed, label="0"];
12->47 [style = dashed, label="0"];
12->11 [style = solid, label="props"];
44->41 [style = bold, label=""];
42->32 [style = bold, label=""];
59->55 [style = bold, label=""];
29->38 [style = bold, label=""];
15->12 [style = bold, label=""];
2->33 [style = dashed, label="0"];
4->59 [style = dashed, label="0"];
52->51 [style = bold, label=""];
35->34 [style = bold, label=""];
39->42 [style = bold, label=""];
27->8 [style = bold, label=""];
4->35 [style = dashed, label="0"];
23->20 [style = bold, label=""];
3->30 [style = dashed, label="0"];
22->2 [style = bold, label=""];
4->17 [style = bold, label=""];
27->41 [style = dashed, label="0"];
18->26 [style = bold, label=""];
3->6 [style = bold, label=""];
3->46 [style = dashed, label="0"];
50->48 [style = bold, label=""];
53->50 [style = bold, label=""];
45->58 [style = bold, label=""];
21->5 [style = bold, label=""];
10->23 [style = bold, label=""];
17->55 [style = dashed, label="0"];
31->39 [style = bold, label=""];
40->43 [style = bold, label=""];
55->52 [style = bold, label=""];
8->29 [style = dashed, label="0"];
24->49 [style = dashed, label="0"];
48->59 [style = bold, label=""];
33->35 [style = bold, label=""];
9->0 [style = bold, label=""];
17->34 [style = dashed, label="0"];
19->56 [style = dashed, label="0"];
16->10 [style = bold, label=""];
25->13 [style = bold, label=""];
8->19 [style = bold, label=""];
41->29 [style = bold, label=""];
46->53 [style = bold, label=""];
8->58 [style = dashed, label="0"];
51->49 [style = bold, label=""];
0->39 [style = dashed, label="0"];
30->37 [style = bold, label=""];
28->16 [style = bold, label=""];
22->50 [style = dashed, label="0"];
54->47 [style = bold, label=""];
7->21 [style = bold, label=""];
11->7 [style = bold, label=""];
}
