digraph {
6 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(210,requests)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "test2iKeyCachePaths['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(500,result.size())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(500,result.size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "CacheService.instance.keyCache.clear()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "test2iKeyCachePathsSaveKeysForDroppedTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TableMetadataRef tableMetadataRef = Schema.instance.getTableMetadataRef(key.tableId)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "expectedNumberOfRequests += recentBloomFilterFalsePositives() + 20@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "int beforeSize = CacheService.instance.keyCache.size()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Iterator<KeyCacheKey> iter = CacheService.instance.keyCache.keyIterator()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "test2iKeyCachePathsSaveKeysForDroppedTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "CacheService.instance.keyCache.clear()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "long expectedNumberOfRequests = 0@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(200,hits)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "UntypedResultSet result = execute(\"SELECT part_key_a FROM %s WHERE col_int = ?\",i)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "iter.hasNext()@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "long requests = metrics.requests.getCount()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(420,requests)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "CacheMetrics metrics = CacheService.instance.keyCache.getMetrics()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "hits = metrics.hits.getCount()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertFalse(tableMetadataRef.keyspace.equals(\"KEYSPACE_PER_TEST\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "insertData(table,indexName,true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "expectedNumberOfRequests += recentBloomFilterFalsePositives() + 20@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "i < 10@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "metrics = CacheService.instance.keyCache.getMetrics()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "long hits = metrics.hits.getCount()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "KeyCacheKey key = iter.next()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(expectedNumberOfRequests,requests)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "int i = 0@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "CacheService.instance.keyCache.loadSaved()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String table = createTable(\"CREATE TABLE %s (\" + commonColumnsDef + \"PRIMARY KEY ((part_key_a, part_key_b),clust_key_a,clust_key_b,clust_key_c))\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(0,CacheService.instance.keyCache.size())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "clearCache()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "requests = metrics.requests.getCount()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CacheService.instance.keyCache.submitWrite(Integer.MAX_VALUE).get()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < 10@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(0,CacheService.instance.keyCache.size())@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int i = 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(beforeSize,CacheService.instance.keyCache.size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(500,result.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "i < 10@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "i++@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Schema.instance.updateVersion()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(expectedNumberOfRequests,requests)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(0,hits)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String indexName = createIndex(\"CREATE INDEX ON %s (col_int)\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertFalse(tableMetadataRef.name.startsWith(table))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->21 [style = dotted, label="true"];
28->13 [style = bold, label=""];
40->36 [style = solid, label="expectedNumberOfRequests"];
7->24 [style = bold, label=""];
14->3 [style = bold, label=""];
21->22 [style = bold, label=""];
32->20 [style = solid, label="i"];
23->35 [style = dotted, label="true"];
41->39 [style = solid, label="expectedNumberOfRequests"];
9->31 [style = solid, label="indexName"];
9->31 [style = bold, label=""];
4->0 [style = solid, label="i"];
2->10 [style = bold, label=""];
0->23 [style = bold, label=""];
50->51 [style = solid, label="i"];
17->4 [style = bold, label=""];
35->0 [style = bold, label=""];
20->10 [style = dotted, label="true"];
23->0 [style = dotted, label="true"];
19->22 [style = dotted, label="true"];
1->30 [style = bold, label=""];
4->23 [style = bold, label=""];
17->36 [style = dashed, label="0"];
38->36 [style = solid, label="expectedNumberOfRequests"];
27->34 [style = bold, label=""];
52->53 [style = bold, label=""];
1->36 [style = solid, label="requests"];
47->45 [style = bold, label=""];
10->29 [style = solid, label="i"];
2->38 [style = bold, label=""];
42->44 [style = bold, label=""];
54->46 [style = bold, label=""];
8->16 [style = bold, label=""];
40->32 [style = bold, label=""];
33->27 [style = bold, label=""];
14->43 [style = bold, label=""];
36->4 [style = bold, label=""];
43->50 [style = bold, label=""];
16->25 [style = bold, label=""];
38->10 [style = bold, label=""];
25->14 [style = bold, label=""];
18->27 [style = solid, label="requests"];
15->21 [style = bold, label=""];
4->23 [style = solid, label="i"];
0->23 [style = solid, label="i"];
20->38 [style = dotted, label="true"];
20->29 [style = dotted, label="true"];
10->20 [style = solid, label="i"];
32->20 [style = bold, label=""];
27->8 [style = bold, label=""];
40->39 [style = solid, label="expectedNumberOfRequests"];
49->43 [style = solid, label="beforeSize"];
37->5 [style = bold, label=""];
26->1 [style = bold, label=""];
0->6 [style = solid, label="i"];
47->54 [style = bold, label=""];
20->29 [style = bold, label=""];
45->52 [style = bold, label=""];
51->47 [style = solid, label="i"];
8->49 [style = bold, label=""];
31->28 [style = bold, label=""];
30->17 [style = bold, label=""];
30->36 [style = bold, label=""];
18->39 [style = solid, label="requests"];
10->20 [style = bold, label=""];
22->19 [style = bold, label=""];
23->6 [style = dotted, label="true"];
49->16 [style = bold, label=""];
35->41 [style = bold, label=""];
5->22 [style = solid, label="table"];
47->51 [style = dotted, label="true"];
29->2 [style = bold, label=""];
4->6 [style = solid, label="i"];
18->33 [style = bold, label=""];
41->0 [style = bold, label=""];
51->54 [style = solid, label="i"];
46->51 [style = bold, label=""];
48->5 [style = bold, label=""];
47->46 [style = dotted, label="true"];
23->6 [style = bold, label=""];
26->30 [style = solid, label="hits"];
19->12 [style = dotted, label="true"];
50->47 [style = solid, label="i"];
3->19 [style = bold, label=""];
19->15 [style = dotted, label="true"];
47->54 [style = dotted, label="true"];
24->33 [style = solid, label="hits"];
3->43 [style = dashed, label="0"];
11->5 [style = bold, label=""];
23->41 [style = dotted, label="true"];
32->10 [style = solid, label="i"];
51->47 [style = bold, label=""];
24->18 [style = bold, label=""];
39->34 [style = bold, label=""];
20->2 [style = dotted, label="true"];
12->15 [style = bold, label=""];
50->47 [style = bold, label=""];
53->42 [style = bold, label=""];
5->9 [style = bold, label=""];
13->40 [style = bold, label=""];
32->29 [style = solid, label="i"];
27->39 [style = dashed, label="0"];
33->39 [style = bold, label=""];
1->17 [style = solid, label="requests"];
38->39 [style = solid, label="expectedNumberOfRequests"];
23->7 [style = bold, label=""];
34->8 [style = bold, label=""];
5->31 [style = solid, label="table"];
6->35 [style = bold, label=""];
13->32 [style = bold, label=""];
20->26 [style = bold, label=""];
19->12 [style = bold, label=""];
50->54 [style = solid, label="i"];
}
