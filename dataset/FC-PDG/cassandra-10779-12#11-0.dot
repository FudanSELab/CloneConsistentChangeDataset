digraph {
34 [style = filled, label = "sstableRepairStatusChanged['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertFalse(pendingContains(sstable))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "compactionTask.execute(ActiveCompactionsTracker.NOOP)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertFalse(hasPendingStrategiesFor(repairID))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(hasPendingStrategiesFor(repairID))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "mutateRepaired(sstable,repairID,false)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(pendingContains(sstable))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "LocalSessionAccessor.failUnsafe(repairID)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SSTableReader sstable = makeSSTable(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "csm.handleNotification(new SSTableAddedNotification(Collections.singleton(sstable),null),cfs.getTracker())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(ActiveRepairService.UNREPAIRED_SSTABLE,sstable.getSSTableMetadata().repairedAt)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertTrue(unrepairedContains(sstable))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "UUID repairID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "mutateRepaired(sstable,System.currentTimeMillis())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "mutateRepaired(sstable,repairID,false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cleanupCompactionFailed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "SSTableRepairStatusChanged notification@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cfs.getCompactionStrategyManager().enable()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cleanupCompactionFailed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "LocalSessionAccessor.prepareUnsafe(repairID,COORDINATOR,PARTICIPANTS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "AbstractCompactionTask compactionTask = csm.getNextBackgroundTask(FBUtilities.nowInSeconds())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "SSTableReader sstable = makeSSTable(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(hasPendingStrategiesFor(repairID))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertTrue(repairedContains(sstable))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertFalse(hasPendingStrategiesFor(repairID))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "notification = new SSTableRepairStatusChanged(Collections.singleton(sstable))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "notification = new SSTableRepairStatusChanged(Collections.singleton(sstable))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(unrepairedContains(sstable))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->13 [style = solid, label="repairID"];
41->26 [style = solid, label="sstable"];
12->25 [style = bold, label=""];
0->40 [style = solid, label="repairID"];
41->30 [style = solid, label="sstable"];
21->3 [style = bold, label=""];
41->42 [style = solid, label="sstable"];
0->14 [style = solid, label="repairID"];
10->6 [style = bold, label=""];
41->31 [style = solid, label="sstable"];
18->22 [style = bold, label=""];
2->7 [style = bold, label=""];
0->2 [style = solid, label="repairID"];
7->9 [style = bold, label=""];
27->38 [style = bold, label=""];
41->21 [style = solid, label="sstable"];
13->23 [style = bold, label=""];
19->20 [style = bold, label=""];
12->15 [style = bold, label=""];
15->25 [style = dashed, label="0"];
41->28 [style = solid, label="sstable"];
16->8 [style = bold, label=""];
41->39 [style = solid, label="sstable"];
39->42 [style = bold, label=""];
1->18 [style = bold, label=""];
14->12 [style = bold, label=""];
0->23 [style = solid, label="repairID"];
41->39 [style = bold, label=""];
24->0 [style = bold, label=""];
6->8 [style = solid, label="sstable"];
41->29 [style = solid, label="sstable"];
40->27 [style = bold, label=""];
31->32 [style = bold, label=""];
11->2 [style = bold, label=""];
30->29 [style = bold, label=""];
35->28 [style = bold, label=""];
34->0 [style = bold, label=""];
23->21 [style = bold, label=""];
37->36 [style = solid, label="notification"];
0->10 [style = bold, label=""];
38->21 [style = bold, label=""];
20->14 [style = solid, label="compactionTask"];
8->11 [style = bold, label=""];
37->36 [style = bold, label=""];
6->1 [style = solid, label="sstable"];
5->0 [style = bold, label=""];
4->19 [style = bold, label=""];
25->16 [style = bold, label=""];
6->21 [style = solid, label="sstable"];
42->40 [style = bold, label=""];
9->17 [style = bold, label=""];
15->26 [style = bold, label=""];
28->33 [style = bold, label=""];
0->22 [style = solid, label="repairID"];
0->27 [style = solid, label="repairID"];
0->10 [style = solid, label="repairID"];
15->16 [style = bold, label=""];
6->41 [style = dashed, label="0"];
31->32 [style = solid, label="notification"];
0->11 [style = solid, label="repairID"];
0->1 [style = solid, label="repairID"];
18->31 [style = dashed, label="0"];
14->28 [style = dashed, label="0"];
41->35 [style = solid, label="sstable"];
32->30 [style = bold, label=""];
0->12 [style = solid, label="repairID"];
29->14 [style = bold, label=""];
6->18 [style = solid, label="sstable"];
41->33 [style = solid, label="sstable"];
26->37 [style = bold, label=""];
20->14 [style = bold, label=""];
0->21 [style = solid, label="repairID"];
41->15 [style = solid, label="sstable"];
6->1 [style = bold, label=""];
21->31 [style = bold, label=""];
36->35 [style = bold, label=""];
3->4 [style = bold, label=""];
22->13 [style = bold, label=""];
6->16 [style = solid, label="sstable"];
41->37 [style = solid, label="sstable"];
10->41 [style = bold, label=""];
}
