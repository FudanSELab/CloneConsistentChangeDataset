digraph {
2 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "fetcher.initFetches(cluster)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(new MetricName(\"fetch-throttle-time-max\",metricGroup,\"\",metricTags))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(new MetricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\",metricTags))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "subscriptions.assignFromUser(Arrays.asList(tp))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(new MetricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\",metricTags))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "subscriptions.assign(Arrays.asList(tp))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(new MetricName(\"fetch-throttle-time-avg\",metricGroup,\"\",metricTags))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "consumerClient.poll(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(3,records.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
28->29 [style = bold, label=""];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
15->5 [style = dotted, label="true"];
28->10 [style = dotted, label="true"];
10->28 [style = solid, label="i"];
10->28 [style = bold, label=""];
10->15 [style = bold, label=""];
7->18 [style = dashed, label="0"];
15->28 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
28->20 [style = dotted, label="true"];
24->0 [style = bold, label=""];
19->10 [style = solid, label="i"];
6->0 [style = dashed, label="0"];
21->24 [style = bold, label=""];
3->22 [style = dashed, label="0"];
10->4 [style = solid, label="i"];
13->4 [style = solid, label="i"];
15->16 [style = dotted, label="true"];
26->19 [style = bold, label=""];
7->8 [style = bold, label=""];
10->13 [style = solid, label="i"];
29->21 [style = bold, label=""];
11->18 [style = bold, label=""];
15->5 [style = bold, label=""];
15->4 [style = dotted, label="true"];
9->6 [style = bold, label=""];
15->13 [style = dotted, label="true"];
1->20 [style = dashed, label="0"];
26->20 [style = solid, label="offset"];
19->20 [style = solid, label="i"];
12->13 [style = bold, label=""];
0->14 [style = bold, label=""];
20->23 [style = bold, label=""];
10->15 [style = solid, label="i"];
1->16 [style = bold, label=""];
15->1 [style = dotted, label="true"];
19->28 [style = solid, label="i"];
15->0 [style = bold, label=""];
0->22 [style = bold, label=""];
5->4 [style = bold, label=""];
25->26 [style = bold, label=""];
13->15 [style = solid, label="i"];
23->10 [style = bold, label=""];
15->12 [style = dotted, label="true"];
28->23 [style = dotted, label="true"];
14->9 [style = bold, label=""];
13->20 [style = bold, label=""];
4->1 [style = bold, label=""];
18->8 [style = bold, label=""];
13->15 [style = bold, label=""];
19->28 [style = bold, label=""];
28->27 [style = bold, label=""];
28->27 [style = dotted, label="true"];
14->21 [style = dashed, label="0"];
28->13 [style = dotted, label="true"];
16->12 [style = bold, label=""];
2->11 [style = bold, label=""];
11->7 [style = bold, label=""];
10->20 [style = solid, label="i"];
17->11 [style = bold, label=""];
}
