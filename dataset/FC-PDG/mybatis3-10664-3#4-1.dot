digraph {
1 [style = filled, label = "cache = new SynchronizedCache(cache)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Cache cache = new PerpetualCache(\"default\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldDemonstrateHowAllObjectsAreKept['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(100000,cache.getSize())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(i,cache.getObject(i))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < 1000@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldDemonstrateHowAllObjectsAreKept['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "i < 100000@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldDemonstrateCopiesAreEqual['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cache = new SerializedCache(cache)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = dashed, label="0"];
7->3 [style = solid, label="i"];
7->2 [style = solid, label="i"];
7->10 [style = bold, label=""];
8->2 [style = dotted, label="true"];
8->3 [style = bold, label=""];
6->1 [style = solid, label="cache"];
10->3 [style = dotted, label="true"];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
2->10 [style = solid, label="i"];
7->10 [style = solid, label="i"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
7->4 [style = solid, label="i"];
2->3 [style = solid, label="i"];
8->3 [style = dotted, label="true"];
2->8 [style = solid, label="i"];
8->4 [style = dotted, label="true"];
9->6 [style = bold, label=""];
8->0 [style = bold, label=""];
6->1 [style = bold, label=""];
5->6 [style = bold, label=""];
6->11 [style = solid, label="cache"];
10->2 [style = dotted, label="true"];
1->11 [style = dashed, label="0"];
6->11 [style = bold, label=""];
2->4 [style = solid, label="i"];
10->4 [style = dotted, label="true"];
7->8 [style = solid, label="i"];
11->7 [style = bold, label=""];
2->8 [style = bold, label=""];
}
