digraph {
3 [style = filled, label = "assertEquals(asList(\"A:aa\",\"B:bb\",\"C:cc\",\"D:dd\"),processorSupplier.theCapturedProcessor().processed)@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String topic1 = \"topic-1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldMergeTwoStreams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String topic2 = \"topic-2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final MockProcessorSupplier<String,String> processorSupplier = new MockProcessorSupplier<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final KStream<String,String> source2 = builder.stream(topic2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,\"D\",\"dd\"))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final KStream<String,String> merged = source1.merge(source2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ConsumerRecordFactory<String,String> recordFactory = new ConsumerRecordFactory<>(new StringSerializer(),new StringSerializer())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "merged.process(processorSupplier)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "shouldMergeStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final KStream<String,String> source1 = builder.stream(topic1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,\"B\",\"bb\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,\"A\",\"aa\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,\"C\",\"cc\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(asList(\"A:aa (ts: 0)\",\"B:bb (ts: 0)\",\"C:cc (ts: 0)\",\"D:dd (ts: 0)\"),processorSupplier.theCapturedProcessor().processed)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "shouldMergeTwoStreams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
15->2 [style = bold, label=""];
0->13 [style = bold, label=""];
9->2 [style = solid, label="topic1"];
5->4 [style = solid, label="topic2"];
5->1 [style = solid, label="topic2"];
16->7 [style = bold, label=""];
1->0 [style = bold, label=""];
12->9 [style = bold, label=""];
3->13 [style = dashed, label="0"];
2->4 [style = bold, label=""];
5->6 [style = bold, label=""];
7->2 [style = bold, label=""];
9->0 [style = solid, label="topic1"];
6->8 [style = bold, label=""];
9->5 [style = bold, label=""];
7->15 [style = bold, label=""];
14->9 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
16->7 [style = solid, label="processorSupplier"];
8->11 [style = bold, label=""];
8->11 [style = solid, label="source2"];
5->8 [style = solid, label="topic2"];
11->7 [style = bold, label=""];
9->6 [style = solid, label="topic1"];
}
