digraph {
13 [style = filled, label = "node1ServiceCoreProperties = new Properties()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "node2ServiceCoreProperties = new Properties()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,String> transportClientProperties = Maps.newHashMap()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "cleanUpDir(NODE_2_SERVICE_WORK_DIR)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "cleanUpDir(NODE_2_SPEC_STORE_PARENT_DIR)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".description\",\"StandaloneTestExecutor\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.HELIX_CLUSTER_NAME_KEY,TEST_HELIX_CLUSTER_NAME)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "transportClientProperties.put(HttpClientFactory.HTTP_REQUEST_TIMEOUT,\"10000\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "logger.info(\"Testing ZK Server listening on: \" + testingZKServer.getConnectString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.SERVICE_NAME,SERVICE_NAME)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.testingZKServer = new TestingServer(-1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "BASE_PATH2.deleteOnExit()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "this.node2FlowConfigClient = new FlowConfigClient(String.format(\"http://localhost:%s/\",this.node2GobblinServiceManager.restliServer.getPort()),transportClientProperties)@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "this.node1GobblinServiceManager = GobblinServiceManager.create(\"RedirectCoreService1\",\"1\",ConfigUtils.propertiesToConfig(node1ServiceCoreProperties),new Path(NODE_1_SERVICE_WORK_DIR))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "BASE_PATH1.deleteOnExit()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "node1ServiceCoreProperties.put(FsJobStatusRetriever.CONF_PREFIX + \".\" + ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY,NODE_1_JOB_STATUS_STATE_STORE_DIR)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "cleanUpDir(COMMON_SPEC_STORE_PARENT_DIR)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "node1ServiceCoreProperties.putAll(commonServiceCoreProperties)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "commonServiceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_USER_KEY,\"testUser\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "node1ServiceCoreProperties.put(QUARTZ_THREAD_POOL_COUNT,3)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.ZK_CONNECTION_STRING_KEY,testingZKServer.getConnectString())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "commonServiceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_URL_KEY,testMetastoreDatabase.getJdbcUrl())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ITestMetastoreDatabase testMetastoreDatabase = TestMetastoreDatabaseFactory.get()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "this.node1FlowConfigClient = new FlowConfigClient(String.format(\"http://localhost:%s/\",this.node1GobblinServiceManager.restliServer.getPort()),transportClientProperties)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".specExecutorInstance\",\"org.gobblin.service.InMemorySpecExecutor\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "node2ServiceCoreProperties.put(QUARTZ_THREAD_POOL_COUNT,3)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "node1ServiceCoreProperties.put(ConfigurationKeys.TOPOLOGYSPEC_STORE_DIR_KEY,NODE_1_TOPOLOGY_SPEC_STORE_DIR)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "transportClientProperties.put(HttpClientFactory.HTTP_REQUEST_TIMEOUT,\"10000\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "node2ServiceCoreProperties.put(ConfigurationKeys.TOPOLOGYSPEC_STORE_DIR_KEY,NODE_2_TOPOLOGY_SPEC_STORE_DIR)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.testingZKServer = new TestingServer(-1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "node2ServiceCoreProperties.put(QUARTZ_INSTANCE_NAME,\"QuartzScheduler2\")@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "this.node2GobblinServiceManager.start()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".uri\",\"gobblinExecutor\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "node2ServiceCoreProperties.putAll(commonServiceCoreProperties)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "this.node1GobblinServiceManager = new GobblinServiceManager(\"RedirectCoreService1\",\"1\",ConfigUtils.propertiesToConfig(node1ServiceCoreProperties),Optional.of(new Path(NODE_1_SERVICE_WORK_DIR)))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "node1ServiceCoreProperties.put(QUARTZ_INSTANCE_NAME,\"QuartzScheduler1\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "this.node1GobblinServiceManager = new TestGobblinServiceManager(\"CoreService1\",\"1\",ConfigUtils.propertiesToConfig(node1ServiceCoreProperties),Optional.of(new Path(NODE_1_SERVICE_WORK_DIR)))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "node1ServiceCoreProperties.putAll(commonServiceCoreProperties)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "node2ServiceCoreProperties.put(FsJobStatusRetriever.CONF_PREFIX + \".\" + ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY,NODE_2_JOB_STATUS_STATE_STORE_DIR)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "this.node1GobblinServiceManager.start()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "commonServiceCoreProperties.put(\"zookeeper.connect\",testingZKServer.getConnectString())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "port1 = Integer.toString(new PortUtils.ServerSocketPortLocator().random())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "node2ServiceCoreProperties.put(QUARTZ_THREAD_POOL_COUNT,3)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "node2ServiceCoreProperties.put(FlowCatalog.FLOWSPEC_STORE_DIR_KEY,NODE_2_FLOW_SPEC_STORE_DIR)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".version\",\"1\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "commonServiceCoreProperties.put(ConfigurationKeys.STATE_STORE_FACTORY_CLASS_KEY,.getName())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_TOPOLOGY_NAMES_KEY,TEST_GOBBLIN_EXECUTOR_NAME)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Map<String,String> transportClientProperties = Maps.newHashMap()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "commonServiceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY,\"testPassword\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "this.node2GobblinServiceManager = new TestGobblinServiceManager(\"CoreService2\",\"2\",ConfigUtils.propertiesToConfig(node2ServiceCoreProperties),Optional.of(new Path(NODE_2_SERVICE_WORK_DIR)))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "node1ServiceCoreProperties.put(FlowCatalog.FLOWSPEC_STORE_DIR_KEY,NODE_1_FLOW_SPEC_STORE_DIR)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "this.node2FlowConfigClient = new FlowConfigClient(String.format(\"http://localhost:%s/\",this.node2GobblinServiceManager.restliServer.getPort()),transportClientProperties)@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.node1GobblinServiceManager.start()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "port2 = Integer.toString(new PortUtils.ServerSocketPortLocator().random())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "node1ServiceCoreProperties.put(QUARTZ_THREAD_POOL_COUNT,3)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".specExecInstance.capabilities\",TEST_SOURCE_NAME + \":\" + TEST_SINK_NAME)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "this.node2GobblinServiceManager = GobblinServiceManager.create(\"RedirectCoreService2\",\"2\",ConfigUtils.propertiesToConfig(node2ServiceCoreProperties),new Path(NODE_2_SERVICE_WORK_DIR))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "cleanUpDir(NODE_1_SPEC_STORE_PARENT_DIR)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.SERVICE_URL_PREFIX,PREFIX)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Properties commonServiceCoreProperties = new Properties()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Properties node1ServiceCoreProperties = new Properties()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "cleanUpDir(NODE_1_SERVICE_WORK_DIR)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "this.node1FlowConfigClient = new FlowConfigClient(String.format(\"http://localhost:%s/\",this.node1GobblinServiceManager.restliServer.getPort()),transportClientProperties)@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Properties node2ServiceCoreProperties = new Properties()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_STATUS_MONITOR_ENABLED_KEY,false)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HelixUtils.createGobblinHelixCluster(testingZKServer.getConnectString(),TEST_HELIX_CLUSTER_NAME)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "node2ServiceCoreProperties.putAll(commonServiceCoreProperties)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "this.node2GobblinServiceManager.start()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "commonServiceCoreProperties.put(ServiceConfigKeys.HELIX_INSTANCE_NAME_KEY,\"GaaS_\" + UUID.randomUUID().toString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
47->36 [style = dashed, label="0"];
14->53 [style = solid, label="node2ServiceCoreProperties"];
23->51 [style = bold, label=""];
46->5 [style = bold, label=""];
11->29 [style = bold, label=""];
40->13 [style = bold, label=""];
61->64 [style = bold, label=""];
5->34 [style = bold, label=""];
2->23 [style = bold, label=""];
17->53 [style = bold, label=""];
28->21 [style = bold, label=""];
65->68 [style = bold, label=""];
39->43 [style = solid, label="transportClientProperties"];
33->48 [style = bold, label=""];
62->23 [style = bold, label=""];
36->9 [style = dashed, label="0"];
47->60 [style = bold, label=""];
9->24 [style = bold, label=""];
30->70 [style = bold, label=""];
36->69 [style = bold, label=""];
61->70 [style = solid, label="transportClientProperties"];
26->7 [style = bold, label=""];
5->23 [style = dashed, label="0"];
60->62 [style = bold, label=""];
41->4 [style = bold, label=""];
66->15 [style = bold, label=""];
12->35 [style = bold, label=""];
16->17 [style = bold, label=""];
54->41 [style = bold, label=""];
56->57 [style = bold, label=""];
68->12 [style = bold, label=""];
32->26 [style = bold, label=""];
50->28 [style = bold, label=""];
67->22 [style = bold, label=""];
71->55 [style = bold, label=""];
4->22 [style = solid, label="port2"];
49->1 [style = bold, label=""];
15->9 [style = bold, label=""];
59->46 [style = solid, label="node1ServiceCoreProperties"];
22->61 [style = bold, label=""];
59->63 [style = bold, label=""];
31->41 [style = bold, label=""];
29->40 [style = bold, label=""];
57->65 [style = bold, label=""];
61->30 [style = solid, label="transportClientProperties"];
1->19 [style = bold, label=""];
27->20 [style = bold, label=""];
41->47 [style = solid, label="port1"];
11->59 [style = bold, label=""];
33->69 [style = solid, label="commonServiceCoreProperties"];
18->2 [style = solid, label="commonServiceCoreProperties"];
16->52 [style = dashed, label="0"];
8->15 [style = bold, label=""];
25->39 [style = bold, label=""];
22->16 [style = bold, label=""];
6->18 [style = bold, label=""];
11->59 [style = dashed, label="0"];
18->33 [style = bold, label=""];
19->50 [style = bold, label=""];
58->66 [style = bold, label=""];
43->38 [style = bold, label=""];
5->67 [style = bold, label=""];
14->30 [style = solid, label="node2ServiceCoreProperties"];
13->16 [style = solid, label="node1ServiceCoreProperties"];
37->44 [style = bold, label=""];
20->42 [style = bold, label=""];
14->2 [style = bold, label=""];
64->30 [style = bold, label=""];
13->52 [style = solid, label="node1ServiceCoreProperties"];
10->37 [style = bold, label=""];
53->25 [style = bold, label=""];
35->6 [style = bold, label=""];
7->12 [style = bold, label=""];
0->27 [style = bold, label=""];
22->52 [style = bold, label=""];
39->38 [style = solid, label="transportClientProperties"];
22->46 [style = dashed, label="0"];
39->3 [style = bold, label=""];
30->25 [style = bold, label=""];
17->30 [style = bold, label=""];
33->63 [style = solid, label="commonServiceCoreProperties"];
52->17 [style = bold, label=""];
30->53 [style = dashed, label="0"];
51->46 [style = bold, label=""];
48->0 [style = bold, label=""];
55->56 [style = bold, label=""];
34->22 [style = bold, label=""];
63->58 [style = bold, label=""];
24->36 [style = bold, label=""];
36->67 [style = solid, label="node2ServiceCoreProperties"];
69->47 [style = bold, label=""];
45->47 [style = bold, label=""];
18->8 [style = solid, label="commonServiceCoreProperties"];
44->11 [style = bold, label=""];
42->49 [style = bold, label=""];
3->43 [style = bold, label=""];
36->45 [style = bold, label=""];
13->8 [style = bold, label=""];
30->67 [style = dashed, label="0"];
47->14 [style = bold, label=""];
4->32 [style = bold, label=""];
}
