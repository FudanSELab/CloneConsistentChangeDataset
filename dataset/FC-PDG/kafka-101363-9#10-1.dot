digraph {
16 [style = filled, label = "verifyInEquality(TimeWindows.of(ofMillis(4)).advanceBy(ofMillis(2)).grace(ofMillis(2)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(9)),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verifyInEquality(TimeWindows.of(ofMillis(9)),TimeWindows.of(ofMillis(3)))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).grace(ofMillis(90)),JoinWindows.of(ofMillis(3)).grace(ofMillis(60)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verifyInEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(2)),TimeWindows.of(ofMillis(3)).grace(ofMillis(1)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(9)).after(ofMillis(2)).grace(ofMillis(3)),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceAndGrace(ofMillis(9),ofMillis(9)),JoinWindows.ofTimeDifferenceAndGrace(ofMillis(3),ofMillis(9)))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "verifyInEquality(JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(9)),JoinWindows.ofTimeDifferenceWithNoGrace(ofMillis(3)))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "verifyInEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(9)),JoinWindows.of(ofMillis(3)))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNotEquals(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(1)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "verifyInEquality(TimeWindows.of(ofMillis(3)).grace(ofMillis(9)),TimeWindows.of(ofMillis(3)).grace(ofMillis(4)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(9)).grace(ofMillis(3)),JoinWindows.of(ofMillis(3)).before(ofMillis(1)).after(ofMillis(2)).grace(ofMillis(3)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).before(ofMillis(9)),JoinWindows.of(ofMillis(3)).before(ofMillis(2)))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).after(ofMillis(9)),JoinWindows.of(ofMillis(3)).after(ofMillis(2)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verifyInEquality(TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(1)).grace(ofMillis(2)),TimeWindows.of(ofMillis(3)).advanceBy(ofMillis(2)).grace(ofMillis(2)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verifyInEquality(JoinWindows.of(ofMillis(3)).grace(ofMillis(9)),JoinWindows.of(ofMillis(3)).grace(ofMillis(2)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
16->13 [style = bold, label=""];
15->14 [style = bold, label=""];
7->17 [style = dashed, label="0"];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
18->17 [style = bold, label=""];
12->16 [style = bold, label=""];
4->2 [style = bold, label=""];
8->14 [style = dashed, label="0"];
1->7 [style = bold, label=""];
3->0 [style = bold, label=""];
13->19 [style = bold, label=""];
3->12 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
0->4 [style = bold, label=""];
14->12 [style = bold, label=""];
7->6 [style = bold, label=""];
6->8 [style = bold, label=""];
17->15 [style = bold, label=""];
10->9 [style = bold, label=""];
11->7 [style = bold, label=""];
2->5 [style = bold, label=""];
}
