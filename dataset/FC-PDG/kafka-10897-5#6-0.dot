digraph {
49 [style = filled, label = "assertEquals(\"four\",store.putIfAbsent(4,\"unexpected value\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "fail(\"Unexpected entry: \" + entry)@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"one\",store.get(1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"four\",store.get(4))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final HashMap<Integer,String> expectedContents = new HashMap<>()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "testPutGetRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"zero\",driver.flushedEntryStored(0))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(2))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"four\",entry.value)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(4))@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(null,driver.flushedEntryStored(5))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"zero\",store.get(0))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "iter.hasNext()@@@36@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"two\",entry.value)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"four\",driver.flushedEntryStored(4))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "store.put(5,\"five\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(expectedContents,getContents(store.range(2,4)))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "expectedContents.put(1,\"one\")@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(\"two\",entry.value)@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testPutIfAbsent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(4,driver.sizeOf(store))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "store.flush()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "entry.key.equals(4)@@@39@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fail(\"Unexpected entry: \" + entry)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "KeyValue<Integer,String> entry = iter.next()@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(true,driver.flushedEntryRemoved(5))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "store.put(1,\"one\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "store.put(2,\"two\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"four\",entry.value)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "assertNull(store.putIfAbsent(1,\"one\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "expectedContents.put(2,\"two\")@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "entry.key.equals(2)@@@30@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "store.put(0,\"zero\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(\"two\",driver.flushedEntryStored(2))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "entry.key.equals(4)@@@31@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(1))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(5,driver.sizeOf(store))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"five\",store.get(5))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testPutGetRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "store.delete(5)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNull(store.get(3))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(4,driver.sizeOf(store))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertNull(store.putIfAbsent(2,\"two\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(expectedContents,getContents(store.range(2,6)))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertNull(store.putIfAbsent(0,\"zero\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "expectedContents.put(4,\"four\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(\"two\",store.get(2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "KeyValue<Integer,String> entry = iter.next()@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "expectedContents.put(0,\"zero\")@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "entry.key.equals(2)@@@38@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"one\",driver.flushedEntryStored(1))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertNull(store.putIfAbsent(4,\"four\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "store.put(4,\"four\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(expectedContents,getContents(store.all()))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(false,driver.flushedEntryRemoved(0))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "iter.hasNext()@@@28@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7->25 [style = dotted, label="false"];
52->55 [style = bold, label=""];
35->7 [style = dotted, label="false"];
21->26 [style = bold, label=""];
23->52 [style = dashed, label="0"];
36->0 [style = bold, label=""];
24->11 [style = bold, label=""];
34->17 [style = bold, label=""];
9->14 [style = bold, label=""];
19->28 [style = bold, label=""];
50->54 [style = bold, label=""];
32->3 [style = bold, label=""];
8->11 [style = bold, label=""];
14->11 [style = bold, label=""];
35->7 [style = bold, label=""];
9->24 [style = bold, label=""];
8->48 [style = dashed, label="0"];
7->29 [style = bold, label=""];
33->16 [style = bold, label=""];
54->49 [style = bold, label=""];
10->31 [style = bold, label=""];
41->45 [style = solid, label="expectedContents"];
26->1 [style = bold, label=""];
34->47 [style = bold, label=""];
3->11 [style = bold, label=""];
35->21 [style = dotted, label="true"];
1->35 [style = bold, label=""];
4->18 [style = bold, label=""];
35->21 [style = bold, label=""];
38->6 [style = bold, label=""];
29->26 [style = bold, label=""];
7->29 [style = dotted, label="true"];
25->26 [style = bold, label=""];
26->1 [style = dotted, label="true"];
13->5 [style = bold, label=""];
23->10 [style = bold, label=""];
2->27 [style = bold, label=""];
53->33 [style = bold, label=""];
41->40 [style = solid, label="expectedContents"];
37->13 [style = bold, label=""];
22->54 [style = dashed, label="0"];
11->38 [style = dotted, label="true"];
11->26 [style = bold, label=""];
18->37 [style = bold, label=""];
2->17 [style = bold, label=""];
16->36 [style = bold, label=""];
10->55 [style = dashed, label="0"];
12->20 [style = bold, label=""];
51->52 [style = bold, label=""];
5->19 [style = bold, label=""];
13->19 [style = bold, label=""];
27->34 [style = bold, label=""];
6->8 [style = dotted, label="true"];
11->6 [style = dotted, label="true"];
3->41 [style = bold, label=""];
14->45 [style = dashed, label="0"];
20->53 [style = dashed, label="0"];
55->50 [style = bold, label=""];
26->35 [style = dotted, label="true"];
46->23 [style = bold, label=""];
17->4 [style = bold, label=""];
45->39 [style = bold, label=""];
9->24 [style = dotted, label="false"];
28->15 [style = bold, label=""];
31->22 [style = bold, label=""];
11->38 [style = bold, label=""];
42->43 [style = bold, label=""];
39->44 [style = bold, label=""];
31->50 [style = dashed, label="0"];
0->2 [style = bold, label=""];
30->23 [style = bold, label=""];
43->48 [style = bold, label=""];
44->40 [style = bold, label=""];
6->9 [style = dotted, label="false"];
38->24 [style = solid, label="entry"];
9->14 [style = dotted, label="true"];
20->33 [style = bold, label=""];
49->53 [style = bold, label=""];
48->45 [style = bold, label=""];
1->25 [style = solid, label="entry"];
22->12 [style = bold, label=""];
6->8 [style = bold, label=""];
7->25 [style = bold, label=""];
47->17 [style = bold, label=""];
6->9 [style = bold, label=""];
15->32 [style = bold, label=""];
12->49 [style = dashed, label="0"];
41->48 [style = solid, label="expectedContents"];
41->42 [style = bold, label=""];
}
