digraph {
33 [style = filled, label = "controller.syncStart()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "controller.syncStop()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Map<String,String> expectInstanceStateMap = new HashMap<>()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ZkHelixClusterVerifier _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(result,\"localhost_12919\" + \" should NOT be in OFFLINE\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "deleteCluster(clusterName)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final int n = 5@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(result)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "boolean result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"==\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(result,\"localhost_12919\" + \" should be in OFFLINE for (TestDB0_0, TestDB0_5(\")@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "command = \"--zkSvr \" + ZK_ADDR + \" --enablePartition true \" + clusterName + \" localhost_12919 TestDB0 TestDB0_0 TestDB0_5\"@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "participants(i(.syncStop()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Map<String,String> expectInstanceStateMap = new HashMap<String,String>()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectStateMap.put(\"TestDB0_0\",expectInstanceStateMap)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "accessor.setProperty(keyBuilder.idealStates(\"TestDB0\"),idealState)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expectStateMap.put(\"TestDB0_5\",expectInstanceStateMap)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<>()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "i++@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expectInstanceStateMap.put(\"localhost_12919\",\"OFFLINE\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,8,n,3,\"MasterSlave\",true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testDisablePartitionCustomIS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "testDisablePartitionAutoIS['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testDisablePartitionCustomIS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "IdealState idealState = accessor.getProperty(keyBuilder.idealStates(\"TestDB0\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int i = 0@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < 5@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "participants(i(.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String command = \"--zkSvr \" + ZK_ADDR + \" --enablePartition false \" + clusterName + \" localhost_12919 TestDB0 TestDB0_0 TestDB0_5\"@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "idealState.setRebalanceMode(RebalanceMode.CUSTOMIZED)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ZKHelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,baseAccessor)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<String,Map<String,String>>()@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "participants(i(.syncStop()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->28 [style = dotted, label="true"];
12->30 [style = solid, label="clusterName"];
12->28 [style = solid, label="clusterName"];
12->43 [style = solid, label="clusterName"];
11->29 [style = bold, label=""];
20->45 [style = solid, label="n"];
29->46 [style = dashed, label="0"];
32->39 [style = solid, label="idealState"];
31->12 [style = solid, label="methodName"];
9->10 [style = bold, label=""];
47->27 [style = bold, label=""];
38->42 [style = bold, label=""];
30->18 [style = bold, label=""];
45->24 [style = bold, label=""];
2->53 [style = bold, label=""];
3->36 [style = bold, label=""];
28->21 [style = bold, label=""];
37->40 [style = bold, label=""];
34->2 [style = bold, label=""];
13->21 [style = dotted, label="true"];
6->11 [style = bold, label=""];
46->23 [style = solid, label="expectInstanceStateMap"];
20->37 [style = bold, label=""];
36->12 [style = solid, label="className"];
9->47 [style = bold, label=""];
12->45 [style = solid, label="clusterName"];
14->4 [style = solid, label="i"];
41->13 [style = bold, label=""];
27->25 [style = bold, label=""];
13->4 [style = dotted, label="true"];
42->19 [style = bold, label=""];
17->5 [style = bold, label=""];
9->51 [style = bold, label=""];
23->30 [style = bold, label=""];
26->17 [style = bold, label=""];
2->19 [style = solid, label="i"];
41->4 [style = solid, label="i"];
19->38 [style = dotted, label="true"];
36->31 [style = bold, label=""];
41->13 [style = solid, label="i"];
39->8 [style = bold, label=""];
16->34 [style = bold, label=""];
33->41 [style = bold, label=""];
19->2 [style = bold, label=""];
12->37 [style = solid, label="clusterName"];
22->7 [style = bold, label=""];
12->47 [style = solid, label="clusterName"];
25->16 [style = solid, label="result"];
5->6 [style = bold, label=""];
18->1 [style = bold, label=""];
7->23 [style = bold, label=""];
29->7 [style = solid, label="expectInstanceStateMap"];
12->8 [style = solid, label="clusterName"];
20->13 [style = solid, label="n"];
19->38 [style = bold, label=""];
2->19 [style = dotted, label="true"];
13->0 [style = bold, label=""];
8->33 [style = bold, label=""];
11->30 [style = solid, label="expectStateMap"];
35->15 [style = bold, label=""];
12->25 [style = solid, label="clusterName"];
12->17 [style = solid, label="clusterName"];
29->23 [style = solid, label="expectInstanceStateMap"];
12->20 [style = bold, label=""];
51->52 [style = bold, label=""];
19->42 [style = dotted, label="true"];
25->16 [style = bold, label=""];
31->12 [style = bold, label=""];
1->9 [style = bold, label=""];
47->27 [style = solid, label="result"];
11->25 [style = solid, label="expectStateMap"];
2->42 [style = dotted, label="true"];
54->36 [style = bold, label=""];
45->8 [style = bold, label=""];
10->27 [style = solid, label="result"];
12->53 [style = solid, label="clusterName"];
32->44 [style = bold, label=""];
12->10 [style = solid, label="clusterName"];
34->2 [style = solid, label="i"];
24->35 [style = solid, label="baseAccessor"];
2->42 [style = solid, label="i"];
14->13 [style = bold, label=""];
12->35 [style = solid, label="clusterName"];
13->14 [style = dotted, label="true"];
19->43 [style = bold, label=""];
46->22 [style = bold, label=""];
21->14 [style = bold, label=""];
28->14 [style = solid, label="i"];
14->13 [style = solid, label="i"];
2->19 [style = bold, label=""];
34->19 [style = solid, label="i"];
0->26 [style = bold, label=""];
48->36 [style = bold, label=""];
24->35 [style = bold, label=""];
10->27 [style = bold, label=""];
50->46 [style = bold, label=""];
42->19 [style = solid, label="i"];
11->50 [style = dashed, label="0"];
46->7 [style = solid, label="expectInstanceStateMap"];
52->25 [style = solid, label="result"];
12->1 [style = solid, label="clusterName"];
12->49 [style = solid, label="clusterName"];
11->52 [style = solid, label="expectStateMap"];
44->39 [style = bold, label=""];
49->43 [style = bold, label=""];
4->28 [style = bold, label=""];
12->52 [style = solid, label="clusterName"];
30->18 [style = solid, label="result"];
19->2 [style = solid, label="i"];
50->30 [style = solid, label="expectStateMap"];
52->25 [style = bold, label=""];
19->49 [style = bold, label=""];
50->25 [style = solid, label="expectStateMap"];
6->50 [style = bold, label=""];
40->45 [style = bold, label=""];
29->22 [style = bold, label=""];
15->32 [style = bold, label=""];
10->47 [style = dashed, label="0"];
2->42 [style = bold, label=""];
4->28 [style = solid, label="instanceName"];
13->4 [style = bold, label=""];
}
