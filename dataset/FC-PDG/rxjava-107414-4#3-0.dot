digraph {
21 [style = filled, label = "QueueDrainHelper.postComplete(ts,queue,state,isCancelled)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "state.getAndIncrement()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ts.assertEmpty()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "BooleanSupplier isCancelled = new BooleanSupplier(){@Override public boolean getAsBoolean(){return ts.isCancelled()}}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "postCompleteCancelled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ArrayDeque<Integer> queue = new ArrayDeque<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ts.onSubscribe(new BooleanSubscription())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ArrayDeque<Integer> queue = new ArrayDeque<Integer>()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "AtomicLong state = new AtomicLong()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ts.cancel()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ArrayDeque<Integer> queue = new ArrayDeque<Integer>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "state.getAndIncrement()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "postCompleteCancelledAfterOne['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "QueueDrainHelper.postComplete(ts,queue,state,isCancelled)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "queue.offer(1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "postCompleteCancelledAfterOne['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "AtomicLong state = new AtomicLong()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ts.assertValue(1).assertNoErrors().assertNotComplete()@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ts.onSubscribe(new BooleanSubscription())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final TestSubscriber<Integer> ts = new TestSubscriber<Integer>(){@Override public void onNext(Integer t){super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@177fd6dtcancel()}}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "queue.offer(1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
17->21 [style = solid, label="ts"];
14->17 [style = bold, label=""];
8->6 [style = bold, label=""];
9->8 [style = bold, label=""];
2->10 [style = bold, label=""];
2->4 [style = solid, label="ts"];
5->4 [style = solid, label="queue"];
2->17 [style = dashed, label="0"];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
9->4 [style = solid, label="isCancelled"];
20->21 [style = bold, label=""];
6->1 [style = bold, label=""];
10->4 [style = solid, label="queue"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
5->10 [style = dashed, label="0"];
10->0 [style = bold, label=""];
18->21 [style = solid, label="isCancelled"];
12->18 [style = bold, label=""];
18->9 [style = bold, label=""];
17->15 [style = bold, label=""];
21->16 [style = bold, label=""];
9->19 [style = bold, label=""];
15->12 [style = bold, label=""];
0->4 [style = solid, label="state"];
12->21 [style = solid, label="state"];
15->21 [style = solid, label="queue"];
2->5 [style = bold, label=""];
13->20 [style = bold, label=""];
}
