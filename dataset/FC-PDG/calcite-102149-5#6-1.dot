digraph {
14 [style = filled, label = "Prefer pref@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "builder.add(minusExp)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "minusExp = childExp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Expression minusExp = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "intersectExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "minusExp = Expressions.call(minusExp,BuiltInMethod.EXCEPT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Expression intersectExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "builder.add(intersectExp)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "intersectExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "minusExp = Expressions.call(minusExp,BuiltInMethod.EXCEPT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()).append(Expressions.constant(all)))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Prefer pref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "minusExp == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1->13 [style = solid, label="childExp"];
10->7 [style = dotted, label="false"];
6->3 [style = bold, label=""];
7->8 [style = solid, label="minusExp"];
22->2 [style = bold, label=""];
9->5 [style = solid, label="pref"];
14->5 [style = solid, label="pref"];
7->16 [style = dashed, label="0"];
13->8 [style = solid, label="minusExp"];
13->20 [style = dashed, label="0"];
13->10 [style = solid, label="minusExp"];
17->14 [style = dotted, label="true"];
2->5 [style = solid, label="pref"];
1->18 [style = bold, label=""];
11->12 [style = bold, label=""];
23->3 [style = bold, label=""];
20->24 [style = solid, label="intersectExp"];
18->22 [style = dotted, label="false"];
18->20 [style = dotted, label="true"];
23->19 [style = dotted, label="true"];
16->2 [style = bold, label=""];
8->24 [style = dashed, label="0"];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
20->18 [style = solid, label="intersectExp"];
16->10 [style = solid, label="minusExp"];
3->0 [style = bold, label=""];
10->18 [style = dashed, label="0"];
20->2 [style = bold, label=""];
5->1 [style = bold, label=""];
18->20 [style = bold, label=""];
23->14 [style = dotted, label="true"];
1->20 [style = solid, label="childExp"];
6->14 [style = dotted, label="true"];
18->22 [style = bold, label=""];
13->16 [style = solid, label="minusExp"];
17->15 [style = dotted, label="true"];
10->16 [style = bold, label=""];
10->13 [style = bold, label=""];
10->13 [style = dotted, label="true"];
6->9 [style = dotted, label="true"];
0->4 [style = bold, label=""];
0->21 [style = dashed, label="0"];
7->2 [style = bold, label=""];
24->11 [style = bold, label=""];
0->7 [style = solid, label="minusExp"];
0->16 [style = solid, label="minusExp"];
13->7 [style = solid, label="minusExp"];
5->12 [style = solid, label="result"];
20->22 [style = solid, label="intersectExp"];
17->3 [style = bold, label=""];
3->21 [style = bold, label=""];
0->10 [style = solid, label="minusExp"];
16->8 [style = solid, label="minusExp"];
21->18 [style = solid, label="intersectExp"];
21->22 [style = solid, label="intersectExp"];
7->10 [style = solid, label="minusExp"];
21->4 [style = bold, label=""];
2->24 [style = bold, label=""];
22->24 [style = solid, label="intersectExp"];
10->16 [style = dotted, label="false"];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
11->12 [style = solid, label="physType"];
4->5 [style = bold, label=""];
22->18 [style = solid, label="intersectExp"];
7->22 [style = dashed, label="0"];
4->5 [style = solid, label="input"];
2->8 [style = bold, label=""];
13->2 [style = bold, label=""];
}
