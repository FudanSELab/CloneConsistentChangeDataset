digraph {
16 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ddfa0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DefaultXYDataset<String> d2 = (DefaultXYDataset)bd2.getUnderlyingDataset()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertTrue(bd1 != bd2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(bd1.equals(bd2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d1.addSeries(\"S2\",new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ddf68)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(bd1.getClass() == bd2.getClass())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "d2.addSeries(\"S2\",new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ddf84)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "XYBarDataset bd1 = new XYBarDataset(d1,5.0)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ddfaa@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ddfb4@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "XYBarDataset<String> bd1 = new XYBarDataset<>(d1,5.0)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertTrue(bd1.equals(bd2))@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(bd1,bd2)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "XYBarDataset bd2 = TestUtils.serialised(bd1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "XYBarDataset<String> bd2 = CloneUtils.clone(bd1)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "DefaultXYDataset d2 = (DefaultXYDataset)bd2.getUnderlyingDataset()@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "XYBarDataset bd2 = CloneUtils.clone(bd1)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "DefaultXYDataset d1 = new DefaultXYDataset()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "d1 = (DefaultXYDataset)bd1.getUnderlyingDataset()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DefaultXYDataset<String> d1 = new DefaultXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertFalse(bd1.equals(bd2))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->5 [style = solid, label="bd2"];
4->5 [style = solid, label="bd2"];
4->10 [style = bold, label=""];
20->19 [style = solid, label="bd1"];
20->10 [style = solid, label="bd1"];
13->24 [style = solid, label="bd1"];
15->1 [style = solid, label="data1"];
5->9 [style = bold, label=""];
7->17 [style = dashed, label="0"];
13->4 [style = solid, label="bd1"];
13->20 [style = dashed, label="0"];
16->6 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
1->20 [style = bold, label=""];
19->10 [style = bold, label=""];
18->2 [style = bold, label=""];
1->13 [style = bold, label=""];
22->7 [style = bold, label=""];
12->7 [style = bold, label=""];
11->18 [style = bold, label=""];
6->15 [style = bold, label=""];
19->10 [style = solid, label="bd2"];
7->13 [style = solid, label="d1"];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
23->24 [style = solid, label="bd2"];
15->1 [style = bold, label=""];
16->15 [style = solid, label="x1"];
17->20 [style = solid, label="d1"];
7->16 [style = bold, label=""];
19->11 [style = solid, label="bd2"];
9->14 [style = bold, label=""];
13->23 [style = bold, label=""];
4->10 [style = solid, label="bd2"];
19->3 [style = solid, label="bd2"];
13->23 [style = solid, label="bd1"];
4->19 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
4->3 [style = solid, label="bd2"];
20->19 [style = bold, label=""];
6->15 [style = solid, label="y1"];
14->11 [style = bold, label=""];
21->17 [style = bold, label=""];
4->11 [style = solid, label="bd2"];
13->10 [style = solid, label="bd1"];
4->23 [style = dashed, label="0"];
10->24 [style = dashed, label="0"];
17->16 [style = bold, label=""];
13->4 [style = bold, label=""];
}
