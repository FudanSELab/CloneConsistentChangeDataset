digraph {
22 [style = filled, label = "i < 2@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "inputTopic2.pipeInput(expectedKeys(i(,\"c\" + expectedKeys(i()@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+null\",0),new KeyValueTimestamp<>(1,\"A1+null\",0))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",0),new KeyValueTimestamp<>(0,\"B0+c0\",0),new KeyValueTimestamp<>(0,\"C0+c0\",0),new KeyValueTimestamp<>(1,\"A1+c1\",0),new KeyValueTimestamp<>(1,\"B1+c1\",0),new KeyValueTimestamp<>(1,\"C1+c1\",0))@@@49@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b57df6@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+a0\",0),new KeyValueTimestamp<>(1,\"A1+a1\",0))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"B0+a0\",0),new KeyValueTimestamp<>(1,\"B1+a1\",0),new KeyValueTimestamp<>(2,\"B2+null\",0),new KeyValueTimestamp<>(3,\"B3+null\",0))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"B0+a0\",0),new KeyValueTimestamp<>(1,\"B1+a1\",0))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "inputTopic1.pipeInput(expectedKey,\"C\" + expectedKey)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "inputTopic1.pipeInput(expectedKey,\"B\" + expectedKey)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(i(,\"A\" + expectedKeys(i()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",0),new KeyValueTimestamp<>(0,\"B0+b0\",0),new KeyValueTimestamp<>(1,\"A1+b1\",0),new KeyValueTimestamp<>(1,\"B1+b1\",0),new KeyValueTimestamp<>(2,\"B2+b2\",0),new KeyValueTimestamp<>(3,\"B3+b3\",0))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"C0+a0\",0),new KeyValueTimestamp<>(0,\"C0+b0\",0),new KeyValueTimestamp<>(1,\"C1+a1\",0),new KeyValueTimestamp<>(1,\"C1+b1\",0),new KeyValueTimestamp<>(2,\"C2+b2\",0),new KeyValueTimestamp<>(3,\"C3+b3\",0))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"B\" + expectedKey))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < 2@@@45@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final TestInputTopic<Integer,String> inputTopic1 = driver.createInputTopic(topic1,new IntegerSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "inputTopic2.pipeInput(expectedKeys(i(,\"a\" + expectedKeys(i()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "i++@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"a\" + expectedKeys(i())@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"b\" + expectedKey)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i++@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final TestInputTopic<Integer,String> inputTopic2 = driver.createInputTopic(topic2,new IntegerSerializer(),new StringSerializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->47 [style = dashed, label="0"];
47->9 [style = bold, label=""];
21->10 [style = bold, label=""];
13->47 [style = bold, label=""];
3->22 [style = solid, label="i"];
4->40 [style = solid, label="i"];
26->38 [style = dashed, label="0"];
11->14 [style = bold, label=""];
0->46 [style = bold, label=""];
14->26 [style = dotted, label="true"];
19->41 [style = solid, label="i"];
7->35 [style = bold, label=""];
4->1 [style = solid, label="i"];
11->26 [style = solid, label="i"];
24->34 [style = bold, label=""];
2->46 [style = dashed, label="0"];
25->14 [style = bold, label=""];
30->29 [style = bold, label=""];
26->11 [style = bold, label=""];
1->40 [style = dashed, label="0"];
28->0 [style = bold, label=""];
19->20 [style = solid, label="i"];
1->28 [style = bold, label=""];
31->6 [style = bold, label=""];
43->35 [style = bold, label=""];
25->26 [style = solid, label="i"];
3->41 [style = solid, label="i"];
27->7 [style = bold, label=""];
33->48 [style = bold, label=""];
3->20 [style = solid, label="i"];
14->11 [style = dotted, label="true"];
0->40 [style = bold, label=""];
17->26 [style = solid, label="expectedKeys"];
48->34 [style = bold, label=""];
19->22 [style = solid, label="i"];
28->0 [style = solid, label="i"];
13->32 [style = bold, label=""];
17->41 [style = solid, label="expectedKeys"];
38->11 [style = bold, label=""];
19->3 [style = solid, label="i"];
22->41 [style = bold, label=""];
24->48 [style = dashed, label="0"];
7->43 [style = dashed, label="0"];
13->47 [style = solid, label="stream2"];
14->38 [style = bold, label=""];
20->3 [style = bold, label=""];
9->8 [style = bold, label=""];
25->14 [style = solid, label="i"];
4->0 [style = bold, label=""];
17->1 [style = solid, label="expectedKeys"];
25->11 [style = solid, label="i"];
22->18 [style = bold, label=""];
22->20 [style = dotted, label="true"];
10->44 [style = bold, label=""];
22->20 [style = bold, label=""];
17->20 [style = solid, label="expectedKeys"];
20->41 [style = dashed, label="0"];
17->38 [style = solid, label="expectedKeys"];
13->32 [style = solid, label="stream2"];
4->0 [style = solid, label="i"];
46->19 [style = bold, label=""];
28->1 [style = solid, label="i"];
19->22 [style = bold, label=""];
29->16 [style = bold, label=""];
27->43 [style = bold, label=""];
12->17 [style = bold, label=""];
18->33 [style = bold, label=""];
42->24 [style = bold, label=""];
37->12 [style = bold, label=""];
35->25 [style = bold, label=""];
32->9 [style = bold, label=""];
14->23 [style = bold, label=""];
11->38 [style = solid, label="i"];
16->31 [style = bold, label=""];
0->1 [style = bold, label=""];
6->13 [style = bold, label=""];
33->24 [style = bold, label=""];
22->41 [style = dotted, label="true"];
25->38 [style = solid, label="i"];
11->14 [style = solid, label="i"];
22->3 [style = dotted, label="true"];
34->36 [style = dashed, label="0"];
0->1 [style = dotted, label="true"];
0->40 [style = dotted, label="true"];
0->28 [style = dotted, label="true"];
39->15 [style = bold, label=""];
2->19 [style = bold, label=""];
10->15 [style = bold, label=""];
0->2 [style = bold, label=""];
41->3 [style = bold, label=""];
17->30 [style = bold, label=""];
40->28 [style = bold, label=""];
31->9 [style = solid, label="supplier"];
44->39 [style = bold, label=""];
3->22 [style = bold, label=""];
4->28 [style = solid, label="i"];
45->12 [style = bold, label=""];
33->42 [style = dashed, label="0"];
14->26 [style = bold, label=""];
24->36 [style = bold, label=""];
14->38 [style = dotted, label="true"];
36->27 [style = bold, label=""];
5->12 [style = bold, label=""];
15->4 [style = bold, label=""];
8->21 [style = bold, label=""];
28->40 [style = solid, label="i"];
17->40 [style = solid, label="expectedKeys"];
34->27 [style = bold, label=""];
18->42 [style = bold, label=""];
}
