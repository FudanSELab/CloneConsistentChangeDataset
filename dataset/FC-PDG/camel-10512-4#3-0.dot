digraph {
17 [style = filled, label = "testMBeansRegistered['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "isPlatform(\"aix\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "template.sendBody(\"direct:start\",\"Hello World\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s = mbsc.queryNames(new ObjectName(domainName + \":type=context,*\"),null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(1,s.size(),\"Could not find 1 consumers: \" + s)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"Could not find 1 consumers: \" + s,1,s.size())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Could not find 1 context: \" + s,1,s.size())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertDefaultDomain()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testMBeansRegistered['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "s = mbsc.queryNames(new ObjectName(domainName + \":type=processors,*\"),null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(2,s.size(),\"Could not find 2 endpoints: \" + s)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(1,s.size(),\"Could not find 1 producers: \" + s)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(\"Could not find 1 processors: \" + s,2,s.size())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"Could not find 2 endpoints: \" + s,2,s.size())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "resolveMandatoryEndpoint(\"mock:end\",)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "s = mbsc.queryNames(new ObjectName(domainName + \":type=producers,*\"),null)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testMBeansRegistered['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(1,s.size(),\"Could not find 1 context: \" + s)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Set<ObjectName> s = mbsc.queryNames(new ObjectName(domainName + \":type=endpoints,*\"),null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"Could not find 1 producers: \" + s,1,s.size())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "s = mbsc.queryNames(new ObjectName(domainName + \":type=consumers,*\"),null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"Could not find 1 route: \" + s,1,s.size())@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2,s.size(),\"Could not find 1 processors: \" + s)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(1,s.size(),\"Could not find 1 route: \" + s)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "s = mbsc.queryNames(new ObjectName(domainName + \":type=routes,*\"),null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
15->20 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
7->12 [style = bold, label=""];
11->10 [style = dotted, label="true"];
6->23 [style = bold, label=""];
0->2 [style = bold, label=""];
4->15 [style = bold, label=""];
4->15 [style = solid, label="s"];
3->7 [style = solid, label="s"];
6->13 [style = solid, label="s"];
5->22 [style = solid, label="s"];
19->11 [style = bold, label=""];
8->6 [style = bold, label=""];
6->23 [style = solid, label="s"];
20->3 [style = bold, label=""];
12->24 [style = bold, label=""];
16->2 [style = bold, label=""];
15->3 [style = bold, label=""];
12->9 [style = bold, label=""];
3->18 [style = solid, label="s"];
13->23 [style = dashed, label="0"];
3->18 [style = bold, label=""];
2->21 [style = solid, label="s"];
8->22 [style = dashed, label="0"];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
14->4 [style = bold, label=""];
13->12 [style = bold, label=""];
2->14 [style = solid, label="s"];
3->7 [style = bold, label=""];
11->10 [style = bold, label=""];
1->16 [style = bold, label=""];
0->1 [style = bold, label=""];
2->21 [style = bold, label=""];
6->13 [style = bold, label=""];
18->5 [style = bold, label=""];
2->14 [style = bold, label=""];
10->0 [style = bold, label=""];
25->11 [style = bold, label=""];
4->20 [style = bold, label=""];
5->8 [style = solid, label="s"];
12->24 [style = solid, label="s"];
14->21 [style = dashed, label="0"];
23->12 [style = bold, label=""];
12->9 [style = solid, label="s"];
4->20 [style = solid, label="s"];
5->22 [style = bold, label=""];
22->6 [style = bold, label=""];
21->4 [style = bold, label=""];
17->11 [style = bold, label=""];
}
