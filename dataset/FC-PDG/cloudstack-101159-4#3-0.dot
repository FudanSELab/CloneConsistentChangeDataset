digraph {
18 [style = filled, label = "when(snapshotStoreDao.update(anyLong(),any())).thenReturn(true)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(snapshotStoreDao.findBySnapshot(anyLong(),any())).thenReturn(snapshotStoreMock)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(_vmDao.findById(anyLong())).thenReturn(vmMock)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(_vmDao.findById(nullable())).thenReturn(vmMock)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testBackupSnapshotFromVmSnapshotF2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(_snapshotDao.update(anyLong(),any())).thenReturn(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "when(snapshotFactory.getSnapshot(anyLong(),Mockito.any())).thenReturn(snapshotInfoMock)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testBackupSnapshotFromVmSnapshotF3['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Snapshot snapshot = _snapshotMgr.backupSnapshotFromVmSnapshot(TEST_SNAPSHOT_ID,TEST_VM_ID,TEST_VOLUME_ID,TEST_VM_SNAPSHOT_ID)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "when(snapshotStoreMock.getInstallPath()).thenReturn(\"VM_SNAPSHOT_NAME\")@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(_vmSnapshotDao.findById(anyLong())).thenReturn(vmSnapshotMock)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(vmMock.getHypervisorType()).thenReturn(Hypervisor.HypervisorType.KVM)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertNull(snapshot)@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "when(_vmSnapshotDao.findById(nullable())).thenReturn(vmSnapshotMock)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "when(snapshotStoreDao.findParent(any(),nullable(),nullable())).thenReturn(snapshotStoreMock)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "when(vmMock.getAccountId()).thenReturn(2L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Snapshot snapshot = _snapshotMgr.backupSnapshotFromVmSnapshot(TEST_SNAPSHOT_ID,TEST_VM_ID,TEST_VOLUME_ID,TEST_VM_SNAPSHOT_ID)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(snapshotStoreDao.findBySnapshot(nullable(),nullable())).thenReturn(snapshotStoreMock)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "when(snapshotStrategy.backupSnapshot(any())).thenReturn(snapshotInfoMock)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(storeMock.create(snapshotInfoMock)).thenReturn(snapshotInfoMock)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(snapshotStoreDao.findParent(any(),anyLong(),anyLong())).thenReturn(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(vmSnapshotMock.getName()).thenReturn(\"VM_SNAPSHOT_NAME\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(snapshotStoreMock.getInstallPath()).thenReturn(\"VM_SNAPSHOT_NAME\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(snapshotStoreDao.findParent(any(),anyLong(),anyLong())).thenReturn(snapshotStoreMock)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNotNull(snapshot)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testBackupSnapshotFromVmSnapshotF3['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
16->18 [style = bold, label=""];
2->20 [style = dashed, label="0"];
11->1 [style = bold, label=""];
25->23 [style = bold, label=""];
19->17 [style = solid, label="snapshot"];
7->0 [style = bold, label=""];
0->11 [style = dashed, label="0"];
19->17 [style = bold, label=""];
21->25 [style = bold, label=""];
12->9 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
8->10 [style = solid, label="snapshot"];
6->2 [style = bold, label=""];
3->8 [style = solid, label="snapshot"];
6->12 [style = dashed, label="0"];
6->20 [style = bold, label=""];
1->6 [style = bold, label=""];
22->0 [style = bold, label=""];
2->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
23->19 [style = bold, label=""];
1->12 [style = bold, label=""];
13->5 [style = bold, label=""];
8->17 [style = dashed, label="0"];
18->21 [style = bold, label=""];
20->24 [style = bold, label=""];
5->15 [style = dashed, label="0"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
9->13 [style = bold, label=""];
24->15 [style = bold, label=""];
}
