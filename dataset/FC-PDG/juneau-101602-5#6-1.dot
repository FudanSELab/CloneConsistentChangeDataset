digraph {
43 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\",null)).asString().contains(\"(cp:/files/test1/dir/\" + p + \"(\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\",JAPAN)).asString().contains(\"(home:/files/test1/\" + p_ja_JP + \"(\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p,null)).asString().contains(\"(home:/files/test1/dir/dir/\" + p + \"(\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertStream(stream(x,p,null)).isNull()@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String(( patterns = {\"_a.txt\",\"_b\",\".c\",\".d.txt\",\"e.txt\",\"f\",\"g_foo.txt\",\"h.foo.txt\",\"i_foo\"}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\",JAPAN)).asString().contains(\"(home:/files/test1/dir/dir/\" + p_ja_JP + \"(\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "c03_classpathRoot_localized_flat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p,JAPAN)).asString().contains(\"(cp:/files/test1/dir/\" + p_ja_JP + \"(\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\",JAPAN)).asString().contains(\"(home:/files/test1/dir/\" + p_ja_JP + \"(\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p,JAPAN)).asString().contains(\"(home:/files/test1/dir/dir/\" + p_ja_JP + \"(\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\",JAPANESE)).asString().contains(\"(home:/files/test1/dir/\" + p_ja + \"(\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertStream(stream(x,\"test1/\" + p,null)).asString().contains(\"(home:/files/test1/\" + p + \"(\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\",JAPANESE)).asString().contains(\"(home:/files/test1/dir/dir/\" + p_ja + \"(\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertStream(stream(x,p,JAPANESE)).isNull()@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p,JAPANESE)).asString().contains(\"(cp:/files/test1/dir/\" + p_ja + \"(\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertStream(stream(x,\"test1/\" + p,JAPAN)).asString().contains(\"(cp:/files/test1/\" + p_ja_JP + \"(\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertStream(stream(x,\"test1/\" + p,JAPANESE)).asString().contains(\"(cp:/files/test1/\" + p_ja + \"(\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String(( badPatterns = {\"test1/bad.txt\",\"test1/../test1/_a.txt\",\"bad.txt\",null,\"\",\".\",\"..\"}@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p,null)).asString().contains(\"(cp:/files/test1/dir/\" + p + \"(\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "b03_fileSystem_localized_flat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\",null)).asString().contains(\"(cp:/files/test1/\" + p + \"(\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\",null)).asString().contains(\"(home:/files/test1/\" + p + \"(\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\",JAPANESE)).asString().contains(\"(cp:/files/test1/\" + p_ja + \"(\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p,JAPAN)).asString().contains(\"(cp:/files/test1/dir/dir/\" + p_ja_JP + \"(\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\",JAPANESE)).asString().contains(\"(home:/files/test1/\" + p_ja + \"(\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\",JAPAN)).asString().contains(\"(cp:/files/test1/dir/dir/\" + p_ja_JP + \"(\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p,null)).asString().contains(\"(home:/files/test1/dir/\" + p + \"(\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String p = patterns(i(,p_ja = patterns_ja(i(,p_ja_JP = patterns_ja_JP(i(@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p,null)).asString().contains(\"(cp:/files/test1/dir/dir/\" + p + \"(\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\",null)).asString().contains(\"(home:/files/test1/dir/\" + p + \"(\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String(( patterns_ja_JP = {\"_a_ja_JP.txt\",\"_b_ja_JP\",\".c\",\".d_ja_JP.txt\",\"e_ja_JP.txt\",\"f_ja_JP\",\"g_foo_ja_JP.txt\",\"h.foo_ja_JP.txt\",\"i_foo_ja_JP\"}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p,JAPAN)).asString().contains(\"(home:/files/test1/dir/\" + p_ja_JP + \"(\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertStream(stream(x,\"test1/\" + p,JAPANESE)).asString().contains(\"(home:/files/test1/\" + p_ja + \"(\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "FileFinder x = FileFinder.create().dir(\"files\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String(( patterns_ja = {\"_a_ja.txt\",\"_b_ja\",\".c\",\".d_ja.txt\",\"e_ja.txt\",\"f_ja\",\"g_foo_ja.txt\",\"h.foo_ja.txt\",\"i_foo_ja\"}@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertStream(stream(x,\"test1/\" + p,null)).asString().contains(\"(cp:/files/test1/\" + p + \"(\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertStream(stream(x,\"test1/dir/\" + p,JAPANESE)).asString().contains(\"(home:/files/test1/dir/\" + p_ja + \"(\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p,JAPANESE)).asString().contains(\"(home:/files/test1/dir/dir/\" + p_ja + \"(\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\",null)).asString().contains(\"(home:/files/test1/dir/dir/\" + p + \"(\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\",null)).asString().contains(\"(cp:/files/test1/dir/dir/\" + p + \"(\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "FileFinder x = FileFinder.create().cp(,\"/files\",false).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < patterns.length@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\",JAPAN)).asString().contains(\"(cp:/files/test1/dir/\" + p_ja_JP + \"(\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertStream(stream(x,p,JAPANESE)).doesNotExist()@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b03_fileSystem_localized_flat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertStream(stream(x,p,null)).doesNotExist()@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertStream(stream(x,p,JAPAN)).doesNotExist()@@@42@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertStream(stream(x,\"/test1/dir/dir/\" + p + \"/\",JAPANESE)).asString().contains(\"(cp:/files/test1/dir/dir/\" + p_ja + \"(\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertStream(stream(x,p,JAPAN)).isNull()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertStream(stream(x,\"/test1/dir/\" + p + \"/\",JAPANESE)).asString().contains(\"(cp:/files/test1/dir/\" + p_ja + \"(\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertStream(stream(x,\"test1/dir/dir/\" + p,JAPANESE)).asString().contains(\"(cp:/files/test1/dir/dir/\" + p_ja + \"(\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertStream(stream(x,\"/test1/\" + p + \"/\",JAPAN)).asString().contains(\"(cp:/files/test1/\" + p_ja_JP + \"(\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertStream(stream(x,\"test1/\" + p,JAPAN)).asString().contains(\"(home:/files/test1/\" + p_ja_JP + \"(\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->42 [style = dashed, label="0"];
21->12 [style = dotted, label="true"];
41->0 [style = bold, label=""];
29->15 [style = bold, label=""];
30->7 [style = solid, label="p_ja_JP"];
49->16 [style = bold, label=""];
3->40 [style = dashed, label="0"];
12->5 [style = bold, label=""];
21->11 [style = dotted, label="true"];
21->15 [style = dotted, label="true"];
26->10 [style = bold, label=""];
21->18 [style = dotted, label="true"];
38->51 [style = bold, label=""];
50->44 [style = bold, label=""];
21->27 [style = dotted, label="true"];
6->34 [style = dashed, label="0"];
21->30 [style = bold, label=""];
53->39 [style = bold, label=""];
0->30 [style = solid, label="patterns"];
21->38 [style = dotted, label="true"];
19->24 [style = bold, label=""];
30->3 [style = solid, label="p_ja"];
15->38 [style = dashed, label="0"];
37->53 [style = bold, label=""];
20->16 [style = bold, label=""];
30->11 [style = solid, label="p_ja"];
21->24 [style = dotted, label="true"];
21->7 [style = dotted, label="true"];
2->14 [style = bold, label=""];
40->47 [style = bold, label=""];
30->35 [style = solid, label="p_ja_JP"];
21->39 [style = dotted, label="true"];
30->45 [style = solid, label="p_ja"];
34->32 [style = bold, label=""];
21->37 [style = dotted, label="true"];
25->37 [style = dashed, label="0"];
8->4 [style = bold, label=""];
17->21 [style = bold, label=""];
21->13 [style = bold, label=""];
21->5 [style = dotted, label="true"];
5->29 [style = bold, label=""];
21->42 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
16->21 [style = solid, label="i"];
21->29 [style = dotted, label="true"];
28->47 [style = dashed, label="0"];
18->11 [style = bold, label=""];
30->19 [style = solid, label="p"];
31->4 [style = bold, label=""];
9->17 [style = bold, label=""];
21->22 [style = dotted, label="true"];
21->50 [style = dotted, label="true"];
30->20 [style = solid, label="p_ja_JP"];
51->35 [style = bold, label=""];
24->18 [style = bold, label=""];
27->22 [style = bold, label=""];
30->42 [style = solid, label="p"];
25->2 [style = bold, label=""];
30->27 [style = solid, label="p_ja_JP"];
17->21 [style = solid, label="i"];
21->28 [style = dotted, label="true"];
4->0 [style = bold, label=""];
30->1 [style = solid, label="p"];
21->48 [style = dotted, label="true"];
30->38 [style = solid, label="p_ja_JP"];
30->37 [style = solid, label="p"];
30->25 [style = solid, label="p"];
21->54 [style = dotted, label="true"];
0->23 [style = bold, label=""];
20->49 [style = dashed, label="0"];
22->20 [style = bold, label=""];
47->54 [style = bold, label=""];
21->30 [style = dotted, label="true"];
21->40 [style = dotted, label="true"];
24->50 [style = dashed, label="0"];
16->30 [style = solid, label="i"];
30->22 [style = solid, label="p_ja_JP"];
7->51 [style = dashed, label="0"];
21->16 [style = dotted, label="true"];
1->19 [style = bold, label=""];
39->42 [style = bold, label=""];
44->45 [style = bold, label=""];
21->35 [style = dotted, label="true"];
4->41 [style = dashed, label="0"];
13->10 [style = bold, label=""];
30->36 [style = solid, label="p_ja"];
11->45 [style = dashed, label="0"];
6->26 [style = bold, label=""];
21->46 [style = dotted, label="true"];
26->32 [style = dashed, label="0"];
30->48 [style = solid, label="p_ja_JP"];
52->41 [style = bold, label=""];
30->2 [style = solid, label="p"];
14->39 [style = dashed, label="0"];
21->2 [style = dotted, label="true"];
21->51 [style = dotted, label="true"];
28->12 [style = bold, label=""];
21->49 [style = dotted, label="true"];
10->6 [style = bold, label=""];
32->33 [style = bold, label=""];
29->48 [style = dashed, label="0"];
21->25 [style = dotted, label="true"];
18->44 [style = dashed, label="0"];
3->28 [style = bold, label=""];
30->39 [style = solid, label="p"];
12->54 [style = dashed, label="0"];
54->36 [style = bold, label=""];
11->3 [style = bold, label=""];
21->53 [style = dotted, label="true"];
21->3 [style = dotted, label="true"];
17->30 [style = solid, label="i"];
30->53 [style = solid, label="p"];
30->47 [style = solid, label="p_ja"];
30->49 [style = solid, label="p_ja_JP"];
21->45 [style = dotted, label="true"];
30->5 [style = solid, label="p_ja"];
30->15 [style = solid, label="p_ja_JP"];
27->35 [style = dashed, label="0"];
45->40 [style = bold, label=""];
9->30 [style = solid, label="patterns_ja_JP"];
30->28 [style = solid, label="p_ja"];
21->43 [style = dotted, label="true"];
21->47 [style = dotted, label="true"];
30->44 [style = solid, label="p_ja"];
42->43 [style = bold, label=""];
43->50 [style = bold, label=""];
30->51 [style = solid, label="p_ja_JP"];
15->7 [style = bold, label=""];
30->46 [style = solid, label="p_ja_JP"];
21->1 [style = dotted, label="true"];
30->50 [style = solid, label="p"];
46->49 [style = bold, label=""];
22->46 [style = dashed, label="0"];
30->25 [style = bold, label=""];
10->33 [style = dashed, label="0"];
30->37 [style = bold, label=""];
5->36 [style = dashed, label="0"];
14->1 [style = bold, label=""];
21->36 [style = dotted, label="true"];
2->53 [style = dashed, label="0"];
17->16 [style = solid, label="i"];
48->38 [style = bold, label=""];
21->44 [style = dotted, label="true"];
23->30 [style = solid, label="patterns_ja"];
30->54 [style = solid, label="p_ja"];
16->21 [style = bold, label=""];
30->40 [style = solid, label="p_ja"];
19->43 [style = dashed, label="0"];
21->19 [style = dotted, label="true"];
36->48 [style = bold, label=""];
30->29 [style = solid, label="p_ja_JP"];
30->12 [style = solid, label="p_ja"];
7->27 [style = bold, label=""];
30->14 [style = solid, label="p"];
30->24 [style = solid, label="p"];
21->14 [style = dotted, label="true"];
30->18 [style = solid, label="p_ja"];
13->33 [style = bold, label=""];
23->9 [style = bold, label=""];
33->34 [style = bold, label=""];
30->43 [style = solid, label="p"];
35->46 [style = bold, label=""];
}
