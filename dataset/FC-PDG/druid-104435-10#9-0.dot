digraph {
0 [style = filled, label = "return spec@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final SplittableInputSource baseInputSource = (SplittableInputSource)getIngestionSchema().getIOConfig().getInputSource()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "subTaskSpecs.put(spec.getId(),spec)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final TestSubTaskSpec spec = new TestSubTaskSpec(supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),supervisorTask.getGroupId(),supervisorTask,new ParallelIndexIngestionSpec(getIngestionSchema().getDataSchema(),new ParallelIndexIOConfig(null,baseInputSource.withSplit(split),getIngestionSchema().getIOConfig().getInputFormat(),getIngestionSchema().getIOConfig().isAppendToExisting(),null),getIngestionSchema().getTuningConfig()),supervisorTask.getContext(),split)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "InputSplit split@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "newTaskSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "newTaskSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "newTaskSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return new TestSinglePhaseSubTaskSpec(supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),supervisorTask.getGroupId(),supervisorTask,new ParallelIndexIngestionSpec(getIngestionSchema().getDataSchema(),new ParallelIndexIOConfig(null,baseInputSource.withSplit(split),getIngestionSchema().getIOConfig().getInputFormat(),getIngestionSchema().getIOConfig().isAppendToExisting()),getIngestionSchema().getTuningConfig()),supervisorTask.getContext(),split)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final TestSubTaskSpec spec = new TestSubTaskSpec(supervisorTask.getId() + \"_\" + getAndIncrementNextSpecId(),supervisorTask.getGroupId(),supervisorTask,new ParallelIndexIngestionSpec(getIngestionSchema().getDataSchema(),new ParallelIndexIOConfig(null,baseInputSource.withSplit(split),getIngestionSchema().getIOConfig().getInputFormat(),getIngestionSchema().getIOConfig().isAppendToExisting()),getIngestionSchema().getTuningConfig()),supervisorTask.getContext(),split)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final TestInputSource baseInputSource = (TestInputSource)getIngestionSchema().getIOConfig().getInputSource()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
4->0 [style = solid, label="spec"];
10->3 [style = dotted, label="true"];
1->0 [style = bold, label=""];
3->9 [style = solid, label="split"];
4->6 [style = dashed, label="0"];
3->4 [style = solid, label="split"];
6->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
6->1 [style = solid, label="spec"];
7->5 [style = bold, label=""];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
7->3 [style = dotted, label="true"];
5->4 [style = bold, label=""];
8->9 [style = bold, label=""];
3->6 [style = solid, label="split"];
5->8 [style = dashed, label="0"];
6->0 [style = solid, label="spec"];
4->1 [style = solid, label="spec"];
4->1 [style = bold, label=""];
2->5 [style = bold, label=""];
}
