digraph {
23 [style = filled, label = "logger.info(\"(After Create( Number of specs: \" + specs.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(specs.size() == 0,\"Spec store should be empty before addition\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createFlowSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "flowSpec = (FlowSpec)spec@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Collection<Spec> specs = flowCatalog.getSpecs()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<Spec> specs = flowCatalog.getSpecs()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "specs = flowCatalog.getSpecs()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SpecExecutor sei = specCompiler.getTopologySpecMap().values().iterator().next().getSpecExecutor()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "createFlowSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "logger.info(\"(After Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.flowCatalog.put(flowSpec)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(specs.size(),0,\"Spec store should be empty before addition\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "logger.info(\"(Before Create( Number of specs: \" + specs.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "logger.info(\"(Before Create( Number of specs: \" + specs.size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(flowCatalog.getSize(),1,\"Spec store should contain 1 Spec after addition\")@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertTrue(specs.size() == 1,\"Spec store should contain 1 Spec after addition\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "logger.info(\"(After Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "createFlowSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertTrue(((List)(sei.getProducer().get().listSpecs().get())).size() == 0,\"SpecProducer should not know about \" + \"any Flow before addition\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "logger.info(\"(Before Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(specs.size(),1,\"Spec store should contain 1 Spec after addition\")@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Assert.assertTrue(((List)(sei.getProducer().get().listSpecs().get())).size() == 0,\"SpecProducer should contain 0 \" + \"Spec after addition\")@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "FlowSpec flowSpec = (FlowSpec)spec@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "logger.info(\"(Before Create( Spec \" + i++ + \": \" + gson.toJson(flowSpec))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "this.flowCatalog.put(flowSpec)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IdentityFlowToJobSpecCompiler specCompiler = (IdentityFlowToJobSpecCompiler)this.orchestrator.getSpecCompiler()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
27->7 [style = solid, label="flowSpec"];
26->22 [style = bold, label=""];
23->9 [style = bold, label=""];
7->8 [style = bold, label=""];
27->7 [style = bold, label=""];
6->15 [style = bold, label=""];
25->2 [style = bold, label=""];
4->25 [style = bold, label=""];
2->5 [style = bold, label=""];
6->11 [style = bold, label=""];
12->4 [style = bold, label=""];
9->11 [style = solid, label="i"];
16->0 [style = bold, label=""];
24->11 [style = solid, label="flowSpec"];
24->11 [style = bold, label=""];
11->18 [style = bold, label=""];
11->24 [style = bold, label=""];
4->2 [style = bold, label=""];
9->6 [style = bold, label=""];
6->9 [style = bold, label=""];
5->17 [style = bold, label=""];
8->1 [style = bold, label=""];
3->23 [style = bold, label=""];
4->5 [style = solid, label="i"];
7->17 [style = dashed, label="0"];
27->13 [style = solid, label="flowSpec"];
9->24 [style = bold, label=""];
20->13 [style = bold, label=""];
9->6 [style = solid, label="flowSpec"];
11->15 [style = dashed, label="0"];
0->12 [style = bold, label=""];
15->14 [style = bold, label=""];
18->19 [style = bold, label=""];
2->7 [style = solid, label="i"];
3->9 [style = bold, label=""];
2->27 [style = bold, label=""];
17->8 [style = bold, label=""];
13->3 [style = bold, label=""];
22->21 [style = bold, label=""];
7->1 [style = bold, label=""];
1->20 [style = bold, label=""];
3->6 [style = solid, label="i"];
21->4 [style = bold, label=""];
2->8 [style = solid, label="flowSpec"];
5->7 [style = bold, label=""];
10->0 [style = bold, label=""];
7->27 [style = bold, label=""];
2->5 [style = solid, label="flowSpec"];
1->13 [style = bold, label=""];
}
