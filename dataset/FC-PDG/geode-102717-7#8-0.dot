digraph {
6 [style = filled, label = "final byte id = (byte)100@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Class c = @@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Thread thread = new Thread(group,\"Registrar\"){public void run(){try {Thread.sleep(300)Instantiator.register(inst)}catch (Exception ex) }}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Class c = @@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Instantiator inst = new Instantiator(c,id){public DataSerializable newInstance(){return new DataSerializableImpl()}}@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "thread.start()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Random random = new Random()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testLateDeSerializer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DataSerializer.writeObject(o,getDataOutput())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Object o = new NonDataSerializable(random)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InternalDataSerializer.unregister(id)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Object o = new DataSerializableImpl(random)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{try {long ms = 30 * 1000thread.join(ms)if (thread.isAlive()) {thread.interrupt()fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread)}}{InternalDataSerializer.unregister(id)}}@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ThreadGroup group = new ThreadGroup(\"Group\"){@Override public void uncaughtException(Thread t,Throwable e){if (e instanceof VirtualMachineError) {SystemFailure.setFailure((VirtualMachineError)e)}fail(\"Uncaught exception in thread \" + t + e)}}@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Thread thread = new Thread(group,\"Registrar\"){@Override public void run(){try {Thread.sleep(300)DataSerializer.register(c)}catch (Exception ex) }}@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "thread.start()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "InternalInstantiator.unregister(c,id)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DataSerializer.writeObject(o,getDataOutput())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DataSerializer.readObject(getDataInput())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DataSerializer.readObject(getDataInput())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataSerializer.register(c)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ThreadGroup group = new ThreadGroup(\"Group\"){public void uncaughtException(Thread t,Throwable e){if (e instanceof VirtualMachineError) {SystemFailure.setFailure((VirtualMachineError)e)}fail(\"Uncaught exception in thread \" + t + e)}}@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testLateInstantiator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Instantiator.register(inst)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testLateDeSerializer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "{try {long ms = 30 * 1000thread.join(ms)if (thread.isAlive()) {thread.interrupt()fail(\"Thread did not terminate after \" + ms + \" ms: \" + thread)}}{InternalInstantiator.unregister(c,id)}}@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25->23 [style = bold, label=""];
23->22 [style = bold, label=""];
1->23 [style = dashed, label="0"];
16->14 [style = solid, label="inst"];
20->3 [style = bold, label=""];
0->11 [style = solid, label="thread"];
14->18 [style = bold, label=""];
9->4 [style = bold, label=""];
14->15 [style = solid, label="thread"];
17->21 [style = bold, label=""];
2->11 [style = bold, label=""];
10->9 [style = bold, label=""];
18->24 [style = bold, label=""];
5->1 [style = bold, label=""];
4->5 [style = bold, label=""];
24->15 [style = bold, label=""];
0->8 [style = bold, label=""];
16->17 [style = solid, label="inst"];
6->19 [style = bold, label=""];
4->5 [style = solid, label="o"];
19->23 [style = solid, label="c"];
19->16 [style = solid, label="c"];
3->6 [style = bold, label=""];
6->10 [style = bold, label=""];
6->11 [style = solid, label="id"];
19->16 [style = bold, label=""];
21->25 [style = bold, label=""];
22->14 [style = solid, label="group"];
6->16 [style = solid, label="id"];
8->2 [style = bold, label=""];
7->0 [style = solid, label="group"];
6->15 [style = solid, label="id"];
22->14 [style = bold, label=""];
12->3 [style = bold, label=""];
7->0 [style = bold, label=""];
10->0 [style = solid, label="c"];
3->21 [style = solid, label="random"];
10->9 [style = solid, label="c"];
13->3 [style = bold, label=""];
10->19 [style = dashed, label="0"];
16->17 [style = bold, label=""];
1->7 [style = bold, label=""];
21->25 [style = solid, label="o"];
6->23 [style = solid, label="id"];
6->1 [style = solid, label="id"];
19->15 [style = solid, label="c"];
3->4 [style = solid, label="random"];
}
