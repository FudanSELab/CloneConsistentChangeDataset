digraph {
12 [style = filled, label = "String jobName = \"job1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "loadPropertyList.add(columnSeparator)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(columnSeparator,createRoutineLoadStmt.getRoutineLoadDesc().getColumnSeparator())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "customProperties.put(CreateRoutineLoadStmt.KAFKA_TOPIC_PROPERTY,topicName)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "new MockUp<StatementBase>(){@Mock public void analyze(Analyzer analyzer1){return}}@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<String> partitionNameString = Lists.newArrayList()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "loadPropertyList.add(partitionNames)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "createRoutineLoadStmt.analyze(analyzer)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String serverAddress = \"127.0.0.1:8080\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String dbName = \"db1\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "String typeName = LoadDataSourceType.KAFKA.name()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Separator columnSeparator = new Separator(\",\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "customProperties.put(CreateRoutineLoadStmt.KAFKA_TOPIC_PROPERTY,topicName)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "properties.put(CreateRoutineLoadStmt.DESIRED_CONCURRENT_NUMBER_PROPERTY,\"2\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Deencapsulation.setField(createRoutineLoadStmt,\"name\",jobName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TableName tableName = new TableName(dbName,tableNameString)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "customProperties.put(CreateRoutineLoadStmt.KAFKA_PARTITIONS_PROPERTY,kafkaPartitionString)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "CreateRoutineLoadStmt createRoutineLoadStmt = new CreateRoutineLoadStmt(labelName,tableNameString,loadPropertyList,properties,typeName,customProperties,LoadTask.MergeType.APPEND)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Map<String,String> customProperties = Maps.newHashMap()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "loadPropertyList.add(columnSeparator)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(2,createRoutineLoadStmt.getDesiredConcurrentNum())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ColumnSeparator columnSeparator = new ColumnSeparator(\",\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Assert.assertNotNull(createRoutineLoadStmt.getRoutineLoadDesc())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(serverAddress,createRoutineLoadStmt.getKafkaBrokerList())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String typeName = LoadDataSourceType.KAFKA.name()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"+08:00\",createRoutineLoadStmt.getTimezone())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Map<String,String> properties = Maps.newHashMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<String,String> customProperties = Maps.newHashMap()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "customProperties.put(CreateRoutineLoadStmt.KAFKA_BROKER_LIST_PROPERTY,serverAddress)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String timeZone = \"8:00\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "properties.put(CreateRoutineLoadStmt.DESIRED_CONCURRENT_NUMBER_PROPERTY,\"2\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "List<ParseNode> loadPropertyList = new ArrayList<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "properties.put(LoadStmt.TIMEZONE,timeZone)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "loadPropertyList.add(partitionNames)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testAnalyze['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "customProperties.put(CreateRoutineLoadStmt.KAFKA_PARTITIONS_PROPERTY,kafkaPartitionString)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Map<String,String> properties = Maps.newHashMap()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PartitionNames partitionNames = new PartitionNames(false,partitionNameString)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String kafkaPartitionString = \"1,2,3\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "partitionNameString.add(\"p1\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "@Injectable Analyzer analyzer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(0,createRoutineLoadStmt.getMaxErrorNum())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "List<ParseNode> loadPropertyList = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "initCreateRoutineLoadStmt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(partitionNames.getPartitionNames(),createRoutineLoadStmt.getRoutineLoadDesc().getPartitionNames().getPartitionNames())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(topicName,createRoutineLoadStmt.getKafkaTopic())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String tableNameString = \"table1\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testAnalyze['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LabelName labelName = new LabelName(dbName,jobName)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "customProperties.put(CreateRoutineLoadStmt.KAFKA_BROKER_LIST_PROPERTY,serverAddress)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String topicName = \"topic1\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return createRoutineLoadStmt@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CreateRoutineLoadStmt createRoutineLoadStmt = new CreateRoutineLoadStmt(labelName,tableNameString,loadPropertyList,properties,typeName,customProperties,LoadTask.MergeType.APPEND)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
25->0 [style = bold, label=""];
8->30 [style = bold, label=""];
49->39 [style = solid, label="customProperties"];
32->23 [style = bold, label=""];
38->3 [style = solid, label="columnSeparator"];
20->2 [style = solid, label="labelName"];
52->49 [style = bold, label=""];
6->25 [style = bold, label=""];
35->22 [style = bold, label=""];
26->3 [style = bold, label=""];
31->32 [style = bold, label=""];
16->29 [style = bold, label=""];
14->1 [style = solid, label="dbName"];
34->13 [style = bold, label=""];
43->48 [style = bold, label=""];
50->46 [style = bold, label=""];
28->15 [style = dotted, label="true"];
21->2 [style = solid, label="typeName"];
35->0 [style = solid, label="serverAddress"];
11->34 [style = solid, label="topicName"];
17->33 [style = bold, label=""];
35->32 [style = solid, label="serverAddress"];
15->33 [style = solid, label="analyzer"];
24->9 [style = solid, label="columnSeparator"];
28->12 [style = bold, label=""];
11->31 [style = solid, label="topicName"];
43->39 [style = solid, label="properties"];
27->1 [style = solid, label="tableNameString"];
1->26 [style = bold, label=""];
9->7 [style = bold, label=""];
37->15 [style = dotted, label="true"];
42->40 [style = bold, label=""];
19->10 [style = solid, label="partitionNames"];
11->35 [style = bold, label=""];
10->36 [style = bold, label=""];
38->1 [style = bold, label=""];
37->12 [style = bold, label=""];
27->2 [style = solid, label="tableNameString"];
4->30 [style = solid, label="timeZone"];
22->23 [style = solid, label="kafkaPartitionString"];
16->19 [style = solid, label="partitionNameString"];
20->27 [style = bold, label=""];
22->4 [style = bold, label=""];
19->24 [style = bold, label=""];
3->10 [style = bold, label=""];
21->5 [style = bold, label=""];
0->34 [style = bold, label=""];
24->3 [style = solid, label="columnSeparator"];
39->42 [style = solid, label="createRoutineLoadStmt"];
30->21 [style = bold, label=""];
38->9 [style = solid, label="columnSeparator"];
39->40 [style = solid, label="createRoutineLoadStmt"];
46->51 [style = bold, label=""];
29->19 [style = bold, label=""];
27->11 [style = bold, label=""];
5->31 [style = bold, label=""];
33->18 [style = bold, label=""];
51->45 [style = bold, label=""];
45->43 [style = bold, label=""];
52->39 [style = solid, label="typeName"];
36->2 [style = solid, label="properties"];
46->39 [style = solid, label="loadPropertyList"];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
18->9 [style = bold, label=""];
44->41 [style = bold, label=""];
12->20 [style = solid, label="jobName"];
36->8 [style = bold, label=""];
49->47 [style = bold, label=""];
47->44 [style = bold, label=""];
5->2 [style = solid, label="customProperties"];
23->2 [style = bold, label=""];
24->1 [style = bold, label=""];
41->39 [style = bold, label=""];
39->42 [style = bold, label=""];
19->38 [style = bold, label=""];
48->52 [style = bold, label=""];
24->38 [style = dashed, label="0"];
4->16 [style = bold, label=""];
14->20 [style = bold, label=""];
26->2 [style = solid, label="loadPropertyList"];
14->20 [style = solid, label="dbName"];
}
