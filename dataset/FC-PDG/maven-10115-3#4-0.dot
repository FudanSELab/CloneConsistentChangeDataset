digraph {
6 [style = filled, label = "loadWrapperMetadataFromDirectory['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "properties = new Properties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "properties.put(\"distributionUrl\",\"http://server/test/maven.zip\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getZipBase())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "propertiesFileOnlyContainsDistURL['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getDistribution())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getZipPath())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "loadWrapperMetadataFromDirectory['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forProjectDirectory(testDir,System.out)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"testZipPath\",wrapper.getConfiguration().getZipPath())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "writePropertiesFile(properties,propertiesFile,\"header\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forWrapperPropertiesFile(propertiesFile,System.out)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getConfiguration().getDistribution())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getDistributionPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getDistribution())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getConfiguration().getDistribution())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forProjectDirectory(testDir.getRoot().toPath())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(\"testDistBase\",wrapper.getConfiguration().getDistributionBase())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getDistributionBase())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
16->15 [style = bold, label=""];
4->17 [style = dashed, label="0"];
2->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
8->3 [style = bold, label=""];
14->10 [style = bold, label=""];
10->17 [style = bold, label=""];
6->0 [style = bold, label=""];
5->18 [style = bold, label=""];
1->18 [style = dashed, label="0"];
9->8 [style = bold, label=""];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
12->13 [style = bold, label=""];
7->5 [style = bold, label=""];
3->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
5->4 [style = bold, label=""];
0->8 [style = dashed, label="0"];
15->12 [style = bold, label=""];
18->14 [style = bold, label=""];
11->7 [style = bold, label=""];
15->13 [style = solid, label="properties"];
}
