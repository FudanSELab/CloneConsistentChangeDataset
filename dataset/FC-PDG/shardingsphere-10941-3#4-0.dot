digraph {
2 [style = filled, label = "latch.await()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "latch.await(300,TimeUnit.MILLISECONDS)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertSwitchToUsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(usingField.getBoolean(connectionStatus),is(false))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(usingField.getBoolean(connectionStatus),is(true))@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "service.submit(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(usingField.getBoolean(connectionStatus))@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "latch.await(200,TimeUnit.MILLISECONDS)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(counter.get(),is(10))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(counter.get(),is(0))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(numberOfThreads,is(counter.get()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < numberOfThreads@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "connectionStatus.switchToReleased()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "AtomicInteger counter = new AtomicInteger()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertWaitUntilConnectionRelease['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertSwitchToUsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->13 [style = dashed, label="0"];
13->15 [style = bold, label=""];
4->7 [style = bold, label=""];
1->10 [style = bold, label=""];
8->5 [style = bold, label=""];
3->8 [style = solid, label="i"];
17->14 [style = bold, label=""];
0->8 [style = bold, label=""];
1->6 [style = bold, label=""];
15->6 [style = bold, label=""];
0->8 [style = solid, label="i"];
11->7 [style = bold, label=""];
7->3 [style = bold, label=""];
6->16 [style = bold, label=""];
16->12 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
12->17 [style = bold, label=""];
2->1 [style = bold, label=""];
3->0 [style = solid, label="i"];
3->8 [style = bold, label=""];
8->13 [style = bold, label=""];
1->15 [style = dashed, label="0"];
8->5 [style = dotted, label="true"];
6->10 [style = dashed, label="0"];
8->0 [style = dotted, label="true"];
9->7 [style = bold, label=""];
}
