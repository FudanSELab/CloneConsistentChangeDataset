digraph {
27 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compenCalc)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput1Cond.isAlwaysTrue())@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "!referenceByMapping(query.condition,identityProjects,qInput1Projs)@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final RexNode compenCond = RexUtil.composeConjunction(rexBuilder,ImmutableList.of(qInput0Cond,qInput1CondShifted))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<RexNode> qInput0Projs = qInput0Explained.right@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "compenProjs.add(shifted)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < fieldCnt(qInput0)@@@42@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<RexNode> qInput1Projs = qInput1Explained.right@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final RexNode compenCond = RexUtil.shift(qInput1Cond,qInput0.rowType.getFieldCount())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i < query.rowType.getFieldCount()@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "int i = 0@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "compenProjs.add(new RexInputRef(i,query.rowType.getFieldList().get(i).getType()))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MutableJoin target = (MutableJoin)call.target@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {return inputRef}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0)return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compensatingCalc)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "compenProjs.add(qInput0Projs.get(i))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "return null@@@54@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final MutableJoin query = (MutableJoin)call.query@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final MutableCalc qInput1 = (MutableCalc)query.getRight()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RexNode qInput1Cond = qInput1Explained.left@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "return null@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,qInput1Projs)@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return null@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return null@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "compenProjs.add(shifted)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "UnifyRuleCall call@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput1Explained = explainCalc(qInput1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final RexNode qInput0Cond = qInput0Explained.left@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final MutableCalc compenCalc = MutableCalc.of(target,compensatingRexProgram)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return null@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final JoinRelType joinRelType = sameJoinType(query.joinType,target.joinType)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final List<RexNode> identityProjects = (List<RexNode>)rexBuilder.identityProjects(qInput0.rowType)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "final RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),qInput0.rowType.getFieldCount())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final MutableCalc qInput0 = (MutableCalc)query.getLeft()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "joinRelType == null@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue() && qInput1Cond.isAlwaysTrue())@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final RexBuilder rexBuilder = call.getCluster().getRexBuilder()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "splitted != null && splitted.isAlwaysTrue()@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final MutableRel qInput0 = query.getLeft()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "UnifyRuleCall call@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput0Explained = explainCalc(qInput0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->29 [style = bold, label=""];
48->4 [style = solid, label="i"];
34->9 [style = dotted, label="true"];
35->18 [style = solid, label="splitted"];
8->14 [style = bold, label=""];
18->45 [style = dotted, label="true"];
18->48 [style = dotted, label="true"];
7->24 [style = bold, label=""];
20->10 [style = bold, label=""];
4->26 [style = bold, label=""];
44->42 [style = bold, label=""];
45->48 [style = bold, label=""];
27->21 [style = solid, label="compensatingCalc"];
23->16 [style = bold, label=""];
33->32 [style = bold, label=""];
41->35 [style = bold, label=""];
3->1 [style = bold, label=""];
40->17 [style = dotted, label="true"];
14->28 [style = bold, label=""];
34->4 [style = bold, label=""];
20->10 [style = dotted, label="true"];
10->40 [style = bold, label=""];
43->11 [style = dotted, label="true"];
44->41 [style = bold, label=""];
25->13 [style = bold, label=""];
35->18 [style = bold, label=""];
2->31 [style = bold, label=""];
48->34 [style = bold, label=""];
11->21 [style = solid, label="call"];
23->11 [style = dotted, label="true"];
4->9 [style = dotted, label="true"];
17->39 [style = bold, label=""];
17->22 [style = bold, label=""];
40->39 [style = bold, label=""];
32->26 [style = solid, label="compenCond"];
15->25 [style = bold, label=""];
25->13 [style = solid, label="qInput1"];
36->17 [style = bold, label=""];
4->3 [style = bold, label=""];
15->3 [style = solid, label="qInput0"];
27->21 [style = bold, label=""];
14->32 [style = solid, label="rexBuilder"];
44->42 [style = dotted, label="true"];
34->3 [style = solid, label="i"];
47->1 [style = bold, label=""];
7->33 [style = solid, label="qInput1Cond"];
8->27 [style = solid, label="target"];
18->33 [style = dotted, label="true"];
34->30 [style = solid, label="i"];
0->29 [style = bold, label=""];
4->47 [style = solid, label="i"];
3->30 [style = bold, label=""];
34->9 [style = bold, label=""];
43->16 [style = bold, label=""];
15->2 [style = solid, label="qInput0"];
12->13 [style = bold, label=""];
3->30 [style = dotted, label="true"];
8->26 [style = solid, label="target"];
38->16 [style = bold, label=""];
18->21 [style = dotted, label="true"];
34->9 [style = solid, label="i"];
49->9 [style = solid, label="qInput0"];
34->4 [style = solid, label="i"];
34->1 [style = solid, label="i"];
18->19 [style = dotted, label="true"];
9->3 [style = solid, label="i"];
1->4 [style = bold, label=""];
48->47 [style = solid, label="i"];
20->36 [style = bold, label=""];
1->6 [style = solid, label="shifted"];
33->45 [style = bold, label=""];
39->44 [style = bold, label=""];
33->32 [style = solid, label="qInput1CondShifted"];
31->32 [style = solid, label="qInput0Cond"];
4->3 [style = solid, label="i"];
4->34 [style = bold, label=""];
37->21 [style = solid, label="call"];
18->34 [style = dotted, label="true"];
21->27 [style = dashed, label="0"];
4->3 [style = dotted, label="true"];
9->4 [style = bold, label=""];
48->9 [style = solid, label="i"];
28->20 [style = bold, label=""];
22->0 [style = bold, label=""];
29->35 [style = bold, label=""];
49->47 [style = solid, label="qInput0"];
18->33 [style = bold, label=""];
31->12 [style = bold, label=""];
26->27 [style = solid, label="compenCalc"];
19->34 [style = bold, label=""];
27->26 [style = dashed, label="0"];
26->27 [style = solid, label="compensatingRexProgram"];
15->49 [style = dashed, label="0"];
30->3 [style = dashed, label="0"];
16->49 [style = bold, label=""];
28->40 [style = solid, label="joinRelType"];
42->41 [style = bold, label=""];
48->34 [style = solid, label="i"];
18->50 [style = bold, label=""];
22->0 [style = dotted, label="true"];
18->4 [style = dotted, label="true"];
9->1 [style = dotted, label="false"];
11->37 [style = dashed, label="0"];
45->46 [style = solid, label="compenProjs"];
36->40 [style = dashed, label="0"];
18->32 [style = dotted, label="true"];
9->47 [style = bold, label=""];
3->1 [style = dotted, label="false"];
40->17 [style = bold, label=""];
11->27 [style = solid, label="call"];
38->37 [style = dotted, label="true"];
9->30 [style = solid, label="i"];
24->8 [style = bold, label=""];
18->26 [style = dotted, label="true"];
41->35 [style = solid, label="newQueryJoinCond"];
3->4 [style = bold, label=""];
15->1 [style = solid, label="qInput0"];
34->4 [style = dotted, label="true"];
4->9 [style = solid, label="i"];
4->34 [style = solid, label="i"];
49->25 [style = bold, label=""];
28->20 [style = solid, label="joinRelType"];
13->7 [style = bold, label=""];
14->26 [style = solid, label="rexBuilder"];
18->46 [style = dotted, label="true"];
47->1 [style = solid, label="shifted"];
1->47 [style = dashed, label="0"];
25->2 [style = bold, label=""];
3->6 [style = dotted, label="false"];
46->26 [style = bold, label=""];
30->9 [style = bold, label=""];
10->36 [style = bold, label=""];
18->5 [style = bold, label=""];
9->3 [style = bold, label=""];
16->15 [style = bold, label=""];
36->22 [style = bold, label=""];
29->41 [style = dashed, label="0"];
19->26 [style = solid, label="compenProjs"];
1->6 [style = bold, label=""];
26->27 [style = bold, label=""];
36->17 [style = dotted, label="true"];
28->36 [style = solid, label="joinRelType"];
29->35 [style = solid, label="newQueryJoinCond"];
9->4 [style = solid, label="i"];
33->46 [style = solid, label="compenCond"];
6->9 [style = bold, label=""];
18->27 [style = dotted, label="true"];
48->3 [style = solid, label="i"];
9->47 [style = dotted, label="false"];
34->46 [style = bold, label=""];
21->5 [style = bold, label=""];
9->3 [style = dotted, label="true"];
27->50 [style = bold, label=""];
14->46 [style = solid, label="rexBuilder"];
32->19 [style = bold, label=""];
20->40 [style = bold, label=""];
9->1 [style = solid, label="i"];
46->26 [style = solid, label="compensatingRexProgram"];
}
