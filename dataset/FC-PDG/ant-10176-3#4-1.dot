digraph {
20 [style = filled, label = "final String moduleClassPair = String.format(\"%s/%s\",moduleName,className)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "java.setArgs(arg)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String arg = \"appArg\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String className = \"org.apache.Test\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"The command line element at index 3 should be module name: \" + moduleName,moduleName,cmdLine(cmdLine.length - 2()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String moduleName = \"TestModule\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testModuleCommandLine['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "java.setModule(moduleName)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testModuleAndClassnameCommandLine['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"Command line should have 5 elements\",5,cmdLine.length)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Java java = new Java()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "java.setClassname(className)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"The command line element at index 3 should be module class pair: \" + moduleClassPair,moduleClassPair,cmdLine(cmdLine.length - 2()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertNotNull(\"Has command line.\",cmdLine)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final String(( cmdLine = java.getCommandLine().getCommandline()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "java.setFork(true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertNotNull(\"Has command line.\",cmdLine)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"Last command line element should be java argument: \" + arg,arg,cmdLine(cmdLine.length - 1()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testModuleCommandLine['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"The command line element at index 2 should be -m\",\"-m\",cmdLine(cmdLine.length - 3()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "java.setJvmargs(\"-Xmx128M\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->12 [style = solid, label="cmdLine"];
5->20 [style = solid, label="moduleName"];
7->16 [style = solid, label="cmdLine"];
17->5 [style = bold, label=""];
7->11 [style = bold, label=""];
16->8 [style = bold, label=""];
19->20 [style = bold, label=""];
7->10 [style = solid, label="cmdLine"];
7->8 [style = solid, label="cmdLine"];
7->11 [style = solid, label="cmdLine"];
7->14 [style = solid, label="cmdLine"];
1->18 [style = bold, label=""];
6->0 [style = bold, label=""];
12->16 [style = bold, label=""];
20->6 [style = bold, label=""];
9->7 [style = bold, label=""];
1->13 [style = bold, label=""];
11->2 [style = bold, label=""];
15->5 [style = bold, label=""];
2->12 [style = bold, label=""];
7->14 [style = bold, label=""];
5->19 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
5->1 [style = solid, label="moduleName"];
6->9 [style = solid, label="arg"];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
6->12 [style = solid, label="arg"];
5->10 [style = solid, label="moduleName"];
0->4 [style = bold, label=""];
19->18 [style = solid, label="className"];
11->14 [style = dashed, label="0"];
19->20 [style = solid, label="className"];
18->13 [style = bold, label=""];
20->16 [style = solid, label="moduleClassPair"];
4->1 [style = bold, label=""];
14->2 [style = bold, label=""];
13->9 [style = bold, label=""];
10->16 [style = dashed, label="0"];
}
