digraph {
2 [style = filled, label = "WorkflowContext mockWorkflowContext = mock()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Mockito.when(mockWorkflowContext.getWorkflowState()).thenReturn(TaskState.IN_PROGRESS)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "WorkflowContext mockWorkflowContext2 = mock()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Mockito.when(mockJobDag.getAllNodes()).thenReturn(ImmutableSet.of(\"job1\",\"job2\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TaskDriver mockTaskDriver = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(3,ImmutableSet.of(\"worker1\",\"worker2\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(3,ImmutableSet.of(\"GobblinYarnTaskRunner-1\",\"GobblinYarnTaskRunner-2\"))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Mockito.when(mockWorkflowContext2.getWorkflowState()).thenReturn(TaskState.IN_PROGRESS)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "JobContext mockJobContext2 = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Mockito.when(mockTaskDriver.getJobContext(\"job2\")).thenReturn(mockJobContext2)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflowContext(\"workflow1\")).thenReturn(mockWorkflowContext1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testTwoJobs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Mockito.when(mockJobContext1.getAssignedParticipant(2)).thenReturn(\"GobblinYarnTaskRunner-1\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "YarnAutoScalingManager.YarnAutoScalingRunnable runnable = new YarnAutoScalingManager.YarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,10,noopQueue,helixDataAccessor)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflows()).thenReturn(ImmutableMap.of(\"workflow1\",mockWorkflowConfig))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Mockito.when(mockTaskDriver.getJobContext(\"job1\")).thenReturn(mockJobContext1)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Mockito.when(mockJobContext2.getAssignedParticipant(3)).thenReturn(\"GobblinYarnTaskRunner-2\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(5,ImmutableSet.of(\"worker1\",\"worker2\",\"worker3\"))@@@34@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Mockito.when(mockJobContext1.getPartitionSet()).thenReturn(ImmutableSet.of(Integer.valueOf(1),Integer.valueOf(2)))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflows()).thenReturn(ImmutableMap.of(\"workflow1\",mockWorkflowConfig1,\"workflow2\",mockWorkflowConfig2))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "WorkflowConfig mockWorkflowConfig = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mockito.when(mockJobContext2.getPartitionSet()).thenReturn(ImmutableSet.of(Integer.valueOf(3)))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "HelixDataAccessor helixDataAccessor = mock()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "Mockito.when(mockJobContext3.getPartitionSet()).thenReturn(ImmutableSet.of(Integer.valueOf(4),Integer.valueOf(5)))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "runnable.run()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Mockito.when(mockWorkflowConfig2.getJobDag()).thenReturn(mockJobDag2)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testTwoJobs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "Mockito.when(mockJobContext3.getAssignedParticipant(4)).thenReturn(\"worker3\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "JobContext mockJobContext1 = mock()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "JobDag mockJobDag1 = mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Mockito.when(mockWorkflowContext1.getWorkflowState()).thenReturn(TaskState.IN_PROGRESS)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "WorkflowContext mockWorkflowContext1 = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Mockito.when(mockTaskDriver.getJobContext(\"job3\")).thenReturn(mockJobContext3)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "JobContext mockJobContext3 = mock()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Mockito.when(helixDataAccessor.getChildValuesMap(Mockito.any())).thenReturn(ImmutableMap.of(\"GobblinYarnTaskRunner-1\",new HelixProperty(\"\"),\"GobblinYarnTaskRunner-2\",new HelixProperty(\"\")))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflowContext(\"workflow1\")).thenReturn(mockWorkflowContext)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Mockito.when(mockJobDag1.getAllNodes()).thenReturn(ImmutableSet.of(\"job1\",\"job2\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "WorkflowConfig mockWorkflowConfig1 = mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "YarnAutoScalingManager.YarnAutoScalingRunnable runnable = new YarnAutoScalingManager.YarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,10)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Mockito.when(mockWorkflowConfig.getJobDag()).thenReturn(mockJobDag)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testTwoWorkflows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflowContext(\"workflow2\")).thenReturn(mockWorkflowContext2)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Mockito.when(mockJobContext2.getAssignedParticipant(3)).thenReturn(\"worker2\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Mockito.when(helixDataAccessor.keyBuilder()).thenReturn(new PropertyKey.Builder(\"cluster\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "YarnService mockYarnService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "JobDag mockJobDag2 = mock()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "JobDag mockJobDag = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Mockito.when(mockJobContext1.getAssignedParticipant(2)).thenReturn(\"worker1\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "WorkflowConfig mockWorkflowConfig2 = mock()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Mockito.when(mockWorkflowConfig1.getJobDag()).thenReturn(mockJobDag1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "runnable.run()@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "Mockito.when(mockJobDag2.getAllNodes()).thenReturn(ImmutableSet.of(\"job3\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38->44 [style = bold, label=""];
20->9 [style = bold, label=""];
32->34 [style = solid, label="mockWorkflowContext2"];
26->28 [style = solid, label="helixDataAccessor"];
13->25 [style = dashed, label="0"];
51->10 [style = bold, label=""];
36->33 [style = bold, label=""];
46->51 [style = bold, label=""];
15->4 [style = solid, label="mockWorkflowConfig"];
0->42 [style = dashed, label="0"];
35->45 [style = bold, label=""];
16->33 [style = dashed, label="0"];
35->49 [style = solid, label="mockJobDag2"];
12->5 [style = solid, label="mockJobContext2"];
39->50 [style = bold, label=""];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
14->1 [style = dashed, label="0"];
21->19 [style = bold, label=""];
28->30 [style = bold, label=""];
34->48 [style = bold, label=""];
39->38 [style = solid, label="mockWorkflowContext1"];
3->31 [style = dashed, label="0"];
9->10 [style = solid, label="mockTaskDriver"];
12->11 [style = bold, label=""];
14->22 [style = dashed, label="0"];
4->2 [style = bold, label=""];
2->50 [style = dashed, label="0"];
15->36 [style = dashed, label="0"];
44->17 [style = bold, label=""];
3->0 [style = bold, label=""];
24->5 [style = bold, label=""];
49->32 [style = bold, label=""];
26->27 [style = bold, label=""];
7->5 [style = bold, label=""];
8->7 [style = solid, label="mockJobContext2"];
2->21 [style = bold, label=""];
18->25 [style = bold, label=""];
47->41 [style = bold, label=""];
27->29 [style = bold, label=""];
10->1 [style = bold, label=""];
9->28 [style = solid, label="mockTaskDriver"];
43->34 [style = bold, label=""];
23->20 [style = bold, label=""];
20->51 [style = solid, label="mockYarnService"];
42->39 [style = bold, label=""];
5->26 [style = bold, label=""];
21->38 [style = dashed, label="0"];
19->17 [style = bold, label=""];
11->24 [style = bold, label=""];
2->19 [style = solid, label="mockWorkflowContext"];
20->28 [style = solid, label="mockYarnService"];
6->20 [style = bold, label=""];
31->42 [style = bold, label=""];
9->51 [style = solid, label="mockTaskDriver"];
41->40 [style = bold, label=""];
36->46 [style = solid, label="mockWorkflowConfig1"];
48->40 [style = solid, label="mockJobContext3"];
5->46 [style = solid, label="mockWorkflowConfig2"];
5->35 [style = bold, label=""];
8->12 [style = bold, label=""];
9->36 [style = bold, label=""];
30->22 [style = bold, label=""];
33->42 [style = solid, label="mockJobDag1"];
44->13 [style = solid, label="mockJobContext1"];
45->49 [style = bold, label=""];
37->20 [style = bold, label=""];
32->43 [style = bold, label=""];
15->16 [style = bold, label=""];
40->46 [style = bold, label=""];
29->28 [style = bold, label=""];
50->38 [style = bold, label=""];
20->10 [style = solid, label="mockYarnService"];
7->24 [style = dashed, label="0"];
0->4 [style = bold, label=""];
9->15 [style = bold, label=""];
48->47 [style = bold, label=""];
11->7 [style = bold, label=""];
18->13 [style = bold, label=""];
33->31 [style = bold, label=""];
1->14 [style = bold, label=""];
25->8 [style = bold, label=""];
13->8 [style = bold, label=""];
17->8 [style = solid, label="mockJobContext1"];
17->18 [style = bold, label=""];
16->0 [style = solid, label="mockJobDag"];
}
