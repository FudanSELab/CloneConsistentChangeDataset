digraph {
15 [style = filled, label = "DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "boolean coerce = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).coerce()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertThat(ignoreZValue,equalTo(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertThat(ignoreZValue,equalTo(false))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "boolean coerce = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).coerce().value()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testCoerceParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(coerce,equalTo(false))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFieldWarnings(\"tree\")@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCoerceParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testIgnoreZValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "coerce = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).coerce().value()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "defaultMapper = createDocumentMapper(fieldMapping(null))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertThat(coerce,equalTo(false))@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "boolean ignoreZValue = ((GeoPointFieldMapper)fieldMapper).ignoreZValue()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "defaultMapper = createIndex(\"test2\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"field\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(coerce,equalTo(true))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(\"field\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "coerce = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).coerce()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(coerce,equalTo(true))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"coerce\",\"true\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->27 [style = solid, label="fieldMapper"];
32->23 [style = bold, label=""];
9->11 [style = bold, label=""];
21->3 [style = solid, label="coerce"];
15->14 [style = bold, label=""];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
33->28 [style = solid, label="ignoreZValue"];
31->32 [style = bold, label=""];
27->30 [style = bold, label=""];
33->28 [style = bold, label=""];
0->2 [style = bold, label=""];
30->26 [style = bold, label=""];
18->15 [style = bold, label=""];
29->25 [style = bold, label=""];
14->1 [style = solid, label="fieldMapper"];
7->0 [style = bold, label=""];
24->29 [style = bold, label=""];
16->22 [style = bold, label=""];
3->4 [style = bold, label=""];
14->1 [style = bold, label=""];
19->16 [style = bold, label=""];
3->4 [style = solid, label="fieldMapper"];
25->27 [style = bold, label=""];
17->20 [style = solid, label="coerce"];
30->33 [style = solid, label="ignoreZValue"];
26->31 [style = bold, label=""];
23->33 [style = bold, label=""];
5->17 [style = dashed, label="0"];
5->13 [style = solid, label="coerce"];
3->19 [style = bold, label=""];
9->21 [style = dashed, label="0"];
1->12 [style = solid, label="mapping"];
1->21 [style = bold, label=""];
30->26 [style = solid, label="ignoreZValue"];
9->11 [style = solid, label="coerce"];
6->10 [style = bold, label=""];
5->13 [style = bold, label=""];
1->12 [style = bold, label=""];
22->17 [style = bold, label=""];
6->10 [style = solid, label="fieldMapper"];
10->9 [style = bold, label=""];
16->22 [style = solid, label="fieldMapper"];
12->3 [style = bold, label=""];
0->2 [style = solid, label="mapping"];
13->8 [style = bold, label=""];
4->5 [style = bold, label=""];
21->17 [style = solid, label="coerce"];
32->23 [style = solid, label="fieldMapper"];
21->3 [style = bold, label=""];
17->20 [style = bold, label=""];
}
