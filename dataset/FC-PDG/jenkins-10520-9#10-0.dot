digraph {
6 [style = filled, label = "Thread.sleep(1000)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "element = DomNodeUtil.selectSingleNode(form,\"//tr(td/div/input/@value='boolean'(\")@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "HtmlElement element = DomNodeUtil.selectSingleNode(form,\"//tr(td/div/input/@value='string'(\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "FreeStyleProject otherProject = j.createFreeStyleProject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "HtmlCheckBoxInput booleanParameterInput = (HtmlCheckBoxInput)o@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "HtmlOption opt = DomNodeUtil.selectSingleNode(element,\"td/div/select/option(@value='Choice <2>'(\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(\"boolean description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getParentNode().getNextSibling().getNextSibling().getNextSibling(),\"div(@class='setting-description'(\")).getTextContent())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "opt.setSelected(true)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(\"Choice <2>\",opt.asText())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "q != null@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(\"run description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"div(@class='setting-description'(\")).getTextContent())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertEquals(\"run description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"td(@class='setting-description'(\")).getTextContent())@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "parameterTypes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "Queue.Item q = j.jenkins.getQueue().getItem(project)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(\"true\",builder.getEnvVars().get(\"BOOLEAN\"))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "choiceWithLTGT['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "parameterTypes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "project.getBuildersList().add(builder)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "ParametersDefinitionProperty pdp = new ParametersDefinitionProperty(new ChoiceParameterDefinition(\"choice\",\"Choice 1Choice <2>\",\"choice description\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "System.out.println(o)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(j.jenkins.getRootUrl() + otherProject.getLastBuild().getUrl(),builder.getEnvVars().get(\"RUN\"))@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ParametersDefinitionProperty pdp = new ParametersDefinitionProperty(new StringParameterDefinition(\"string\",\"defaultValue\",\"string description\"),new BooleanParameterDefinition(\"boolean\",true,\"boolean description\"),new ChoiceParameterDefinition(\"choice\",\"Choice 1Choice 2\",\"choice description\"),new RunParameterDefinition(\"run\",otherProject.getName(),\"run description\",null))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(element)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "element = (HtmlElement)((HtmlElement)DomNodeUtil.selectSingleNode(form,\".//div(input/@value='run'(\")).getParentNode()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "HtmlForm form = page.getFormByName(\"parameters\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "HtmlElement element = (HtmlElement)((HtmlElement)DomNodeUtil.selectSingleNode(form,\"//div(input/@value='string'(\")).getParentNode()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(\"choice description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"td(@class='setting-description'(\")).getTextContent())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "q.getFuture().get()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "stringParameterInput.setAttribute(\"value\",\"newValue\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "otherProject.scheduleBuild2(0).get()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Object o = DomNodeUtil.selectSingleNode(element,\".//input(@name='value'(\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"Choice 1\",builder.getEnvVars().get(\"CHOICE\"))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "project.addProperty(pdp)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "q != null@@@38@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertEquals(\"string description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"td(@class='setting-description'(\")).getTextContent())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertNotNull(builder.getEnvVars())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(\"boolean\",element.getTextContent())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertNotNull(opt)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(\"string description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"div(@class='setting-description'(\")).getTextContent())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "j.submit(form)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertNotNull(element)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"defaultValue\",stringParameterInput.getAttribute(\"value\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"choice\",((HtmlElement)DomNodeUtil.selectSingleNode(element,\"td(@class='setting-name'(\")).getTextContent())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"run\",((HtmlElement)DomNodeUtil.selectSingleNode(element,\"td(@class='setting-name'(\")).getTextContent())@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(\"choice description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"div(@class='setting-description'(\")).getTextContent())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "WebClient wc = j.createWebClient().withThrowExceptionOnFailingStatusCode(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"run\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getParentNode(),\"div(contains(@class, 'setting-name')(\")).getTextContent())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(\"string\",((HtmlElement)DomNodeUtil.selectSingleNode(element,\"td(@class='setting-name'(\")).getTextContent())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "element = (HtmlElement)((HtmlElement)DomNodeUtil.selectSingleNode(form,\".//div(input/@value='choice'(\")).getParentNode()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "CaptureEnvironmentBuilder builder = new CaptureEnvironmentBuilder()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "HtmlElement element = DomNodeUtil.selectSingleNode(form,\".//tr(td/div/input/@value='choice'(\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "q != null@@@38@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(element)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(\"string\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getParentNode(),\"div(contains(@class, 'setting-name')(\")).getTextContent())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(\"newValue\",builder.getEnvVars().get(\"STRING\"))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "element = DomNodeUtil.selectSingleNode(form,\"//div(input/@value='boolean'(\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(\"choice\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getParentNode(),\"div(contains(@class, 'setting-name')(\")).getTextContent())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "element = DomNodeUtil.selectSingleNode(form,\".//tr(td/div/input/@value='run'(\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"Choice <2>\",builder.getEnvVars().get(\"CHOICE\"))@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(booleanParameterInput.isChecked())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"boolean description\",((HtmlElement)DomNodeUtil.selectSingleNode(element.getNextSibling().getNextSibling(),\"td(@class='setting-description'(\")).getTextContent())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"boolean\",((HtmlElement)DomNodeUtil.selectSingleNode(element,\"td(@class='setting-main'(\")).getTextContent())@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "HtmlTextInput stringParameterInput = DomNodeUtil.selectSingleNode(element,\".//input(@name='value'(\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "element = DomNodeUtil.selectSingleNode(form,\".//tr(td/div/input/@value='choice'(\")@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "HtmlPage page = wc.goTo(\"job/\" + project.getName() + \"/build?delay=0sec\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNotNull(element)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54->55 [style = bold, label=""];
6->9 [style = solid, label="q"];
3->64 [style = dotted, label="true"];
4->3 [style = solid, label="form"];
61->66 [style = bold, label=""];
4->25 [style = bold, label=""];
25->34 [style = bold, label=""];
4->25 [style = solid, label="form"];
0->8 [style = solid, label="builder"];
11->29 [style = bold, label=""];
4->24 [style = solid, label="form"];
47->10 [style = bold, label=""];
31->1 [style = bold, label=""];
36->12 [style = bold, label=""];
9->10 [style = bold, label=""];
24->39 [style = dashed, label="0"];
40->23 [style = bold, label=""];
29->45 [style = bold, label=""];
16->41 [style = bold, label=""];
12->15 [style = solid, label="pdp"];
21->30 [style = dashed, label="0"];
4->45 [style = solid, label="form"];
21->31 [style = bold, label=""];
31->10 [style = dashed, label="0"];
38->7 [style = bold, label=""];
15->0 [style = bold, label=""];
0->8 [style = bold, label=""];
20->37 [style = bold, label=""];
60->63 [style = bold, label=""];
43->29 [style = bold, label=""];
11->43 [style = dashed, label="0"];
19->28 [style = bold, label=""];
32->18 [style = bold, label=""];
57->36 [style = solid, label="pdp"];
5->55 [style = dashed, label="0"];
19->28 [style = solid, label="element"];
50->13 [style = solid, label="element"];
22->13 [style = bold, label=""];
26->17 [style = solid, label="form"];
50->34 [style = solid, label="element"];
59->60 [style = bold, label=""];
26->17 [style = bold, label=""];
25->13 [style = solid, label="element"];
6->47 [style = solid, label="q"];
28->54 [style = bold, label=""];
1->42 [style = bold, label=""];
10->21 [style = bold, label=""];
48->44 [style = bold, label=""];
17->39 [style = solid, label="element"];
41->46 [style = dashed, label="0"];
41->2 [style = bold, label=""];
4->19 [style = solid, label="form"];
24->16 [style = solid, label="element"];
23->48 [style = bold, label=""];
23->14 [style = bold, label=""];
36->62 [style = bold, label=""];
25->17 [style = dashed, label="0"];
33->52 [style = dashed, label="0"];
32->38 [style = solid, label="element"];
27->11 [style = bold, label=""];
3->64 [style = bold, label=""];
29->32 [style = bold, label=""];
30->10 [style = bold, label=""];
56->16 [style = solid, label="element"];
56->16 [style = bold, label=""];
58->34 [style = bold, label=""];
62->15 [style = solid, label="builder"];
17->4 [style = solid, label="element"];
66->57 [style = bold, label=""];
6->47 [style = bold, label=""];
9->10 [style = dotted, label="false"];
32->18 [style = solid, label="element"];
24->56 [style = dashed, label="0"];
44->28 [style = solid, label="element"];
50->34 [style = bold, label=""];
49->37 [style = bold, label=""];
26->60 [style = solid, label="form"];
27->43 [style = bold, label=""];
39->5 [style = bold, label=""];
28->39 [style = bold, label=""];
39->5 [style = solid, label="opt"];
2->3 [style = bold, label=""];
18->33 [style = bold, label=""];
3->6 [style = bold, label=""];
14->19 [style = bold, label=""];
51->13 [style = bold, label=""];
34->51 [style = bold, label=""];
32->45 [style = dashed, label="0"];
30->21 [style = bold, label=""];
13->27 [style = bold, label=""];
4->58 [style = bold, label=""];
66->63 [style = solid, label="project"];
36->6 [style = solid, label="project"];
5->24 [style = bold, label=""];
34->39 [style = bold, label=""];
45->38 [style = solid, label="element"];
64->30 [style = bold, label=""];
37->35 [style = bold, label=""];
62->15 [style = bold, label=""];
4->50 [style = bold, label=""];
18->52 [style = bold, label=""];
63->3 [style = bold, label=""];
9->30 [style = dotted, label="true"];
17->4 [style = bold, label=""];
7->40 [style = bold, label=""];
25->50 [style = dashed, label="0"];
45->18 [style = bold, label=""];
16->46 [style = bold, label=""];
47->10 [style = dotted, label="false"];
39->54 [style = dashed, label="0"];
25->34 [style = solid, label="element"];
53->3 [style = bold, label=""];
12->15 [style = bold, label=""];
46->53 [style = bold, label=""];
63->3 [style = solid, label="q"];
52->38 [style = bold, label=""];
45->18 [style = solid, label="element"];
9->30 [style = bold, label=""];
5->65 [style = bold, label=""];
16->5 [style = dashed, label="0"];
38->40 [style = solid, label="o"];
55->56 [style = bold, label=""];
34->22 [style = bold, label=""];
47->30 [style = bold, label=""];
4->32 [style = solid, label="form"];
19->44 [style = dashed, label="0"];
47->30 [style = dotted, label="true"];
24->16 [style = bold, label=""];
3->6 [style = dotted, label="false"];
2->53 [style = dashed, label="0"];
44->28 [style = bold, label=""];
57->36 [style = bold, label=""];
65->59 [style = bold, label=""];
33->38 [style = bold, label=""];
35->36 [style = bold, label=""];
6->9 [style = bold, label=""];
38->7 [style = solid, label="o"];
22->51 [style = dashed, label="0"];
8->26 [style = bold, label=""];
6->30 [style = bold, label=""];
}
