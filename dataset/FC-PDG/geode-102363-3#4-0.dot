digraph {
11 [style = filled, label = "reenterCount = referenceCountHelperImpl.getReenterCount()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Long address = (long)0x1000@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "doCreateReferenceCountOwnerWithTrackRefsTrueAndTrackFreesFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "rcci = list.get(0)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ReferenceCountHelperImpl referenceCountHelperImpl = newReferenceCountHelperImpl_TrueFalse()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,ai.get())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "rchi.setReferenceCountOwner(owner)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Object owner = rchi.createReferenceCountOwner()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "owner = rchi.createReferenceCountOwner()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "ai = rchi.getReenterCount()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rchi = getTrueFalse()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertThat(reenterCount.get()).isOne()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertFalse(owner == null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(owner == null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "doRefCountChangedWithOwnerWithTrackRefsTrueAndTrackFreesTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "doCreateReferenceCountOwnerWithTrackRefsTrueAndTrackFreesFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,list.size())@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "int rc = 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "referenceCountHelperImpl.setReferenceCountOwner(owner)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "rcci = list.get(0)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(1,rcci.getUseCount())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "boolean decRefCount = false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "owner = null@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(rchi.getReferenceCountOwner(),null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "RefCountChangeInfo rcci = list.get(0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "rchi.refCountChanged(address,decRefCount,rc)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(reenterCount.get()).isZero()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Object owner = referenceCountHelperImpl.createReferenceCountOwner()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(1,list.size())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "list = rchi.getRefCountInfo(address)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "rchi = getTrueTrue()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(0,rcci.getUseCount())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(0,ai.get())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AtomicInteger ai = rchi.getReenterCount()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<RefCountChangeInfo> list = rchi.peekRefCountInfo(address)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(1,list.size())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AtomicInteger reenterCount = referenceCountHelperImpl.getReenterCount()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "decRefCount = true@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "list = rchi.peekRefCountInfo(address)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "AtomicInteger ai = rchi.getReenterCount()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThat(owner).isNotNull()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(1,list.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(owner == null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ai = rchi.getReenterCount()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(referenceCountHelperImpl.getReferenceCountOwner()).isNull()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Object owner = rchi.createReferenceCountOwner()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(1,ai.get())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
49->42 [style = bold, label=""];
50->27 [style = solid, label="address"];
16->13 [style = bold, label=""];
19->18 [style = bold, label=""];
25->47 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
50->43 [style = bold, label=""];
30->41 [style = bold, label=""];
5->12 [style = dashed, label="0"];
4->6 [style = bold, label=""];
50->32 [style = solid, label="address"];
7->1 [style = solid, label="owner"];
1->17 [style = solid, label="owner"];
45->27 [style = bold, label=""];
43->36 [style = solid, label="decRefCount"];
26->49 [style = bold, label=""];
7->20 [style = dashed, label="0"];
12->16 [style = bold, label=""];
5->37 [style = dashed, label="0"];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
20->1 [style = bold, label=""];
11->19 [style = bold, label=""];
38->42 [style = solid, label="rc"];
6->14 [style = dashed, label="0"];
3->4 [style = bold, label=""];
9->10 [style = solid, label="owner"];
51->46 [style = bold, label=""];
36->39 [style = bold, label=""];
27->35 [style = bold, label=""];
39->28 [style = bold, label=""];
50->35 [style = solid, label="address"];
1->17 [style = bold, label=""];
47->30 [style = bold, label=""];
33->29 [style = bold, label=""];
9->19 [style = dashed, label="0"];
35->23 [style = bold, label=""];
50->51 [style = solid, label="address"];
48->45 [style = bold, label=""];
28->21 [style = bold, label=""];
21->31 [style = bold, label=""];
43->38 [style = bold, label=""];
46->26 [style = bold, label=""];
38->29 [style = solid, label="rc"];
8->2 [style = bold, label=""];
34->37 [style = bold, label=""];
10->25 [style = bold, label=""];
43->27 [style = solid, label="decRefCount"];
38->7 [style = bold, label=""];
44->48 [style = bold, label=""];
23->40 [style = bold, label=""];
31->33 [style = bold, label=""];
22->36 [style = bold, label=""];
38->36 [style = solid, label="rc"];
41->44 [style = solid, label="owner"];
33->29 [style = solid, label="decRefCount"];
3->4 [style = solid, label="owner"];
33->42 [style = solid, label="decRefCount"];
40->22 [style = bold, label=""];
42->32 [style = bold, label=""];
38->27 [style = solid, label="rc"];
8->17 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
50->36 [style = solid, label="address"];
15->12 [style = bold, label=""];
50->42 [style = solid, label="address"];
1->8 [style = solid, label="owner"];
6->7 [style = bold, label=""];
50->39 [style = solid, label="address"];
50->29 [style = solid, label="address"];
4->13 [style = dashed, label="0"];
32->24 [style = bold, label=""];
41->44 [style = bold, label=""];
13->14 [style = bold, label=""];
29->51 [style = bold, label=""];
10->18 [style = dashed, label="0"];
3->16 [style = dashed, label="0"];
37->50 [style = bold, label=""];
14->20 [style = bold, label=""];
0->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
