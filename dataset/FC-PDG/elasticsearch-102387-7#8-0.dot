digraph {
5 [style = filled, label = "latch.await()@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "processedFirstTask.await()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test3\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final CountDownLatch processedFirstTask = new CountDownLatch(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertBusy(null)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "{Loggers.removeAppender(clusterLogger,mockAppender)mockAppender.stop()}@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test2\",clusterApplierService.getClass().getCanonicalName(),Level.WARN,\"*cluster state applier task (test2( took (32s( above the warn threshold of *\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(4)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test2\",clusterApplierService.getClass().getCanonicalName(),Level.TRACE,\"*failed to execute cluster state applier in (2s(*\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(3)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testLongClusterStateUpdateLogging['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test1\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){latch.countDown()processedFirstTask.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test1\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){}@Override public void onFailure(String source,Exception e){fail()}})@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mockAppender.assertAllExpectationsMatched()@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Logger clusterLogger = LogManager.getLogger(\"org.elasticsearch.cluster.service\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test2\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){fail()}@Override public void onFailure(String source,Exception e){latch.countDown()}})@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "clusterApplierService.currentTimeOverride = System.nanoTime()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Logger clusterLogger = LogManager.getLogger(\"org.elasticsearch.cluster.service\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test1\",clusterApplierService.getClass().getCanonicalName(),Level.DEBUG,\"*processing (test1(: took (1s( no change in cluster state\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "latch.await()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "{Loggers.removeAppender(clusterLogger,mockAppender)mockAppender.stop()}@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "mockAppender.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test3\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){}@Override public void onFailure(String source,Exception e){fail()}})@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testClusterStateUpdateLogging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "clusterApplierService.currentTimeOverride = System.nanoTime()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MockLogAppender mockAppender = new MockLogAppender()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation(\"test1 shouldn't see because setting is too low\",clusterApplierService.getClass().getCanonicalName(),Level.WARN,\"*cluster state applier task (test1( took (*( above the warn threshold of *\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Loggers.addAppender(clusterLogger,mockAppender)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "mockAppender.assertAllExpectationsMatched()@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testClusterStateUpdateLogging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test2\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){fail()}@Override public void onFailure(String source,Exception e){}})@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test3\",clusterApplierService.getClass().getCanonicalName(),Level.DEBUG,\"*processing (test3(: took (0s( no change in cluster state*\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test4\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test4\",clusterApplierService.getClass().getCanonicalName(),Level.WARN,\"*cluster state applier task (test3( took (34s( above the warn threshold of *\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->31 [style = bold, label=""];
14->3 [style = bold, label=""];
14->24 [style = dashed, label="0"];
5->8 [style = bold, label=""];
11->8 [style = solid, label="mockAppender"];
4->14 [style = bold, label=""];
25->28 [style = bold, label=""];
7->21 [style = dashed, label="0"];
4->24 [style = bold, label=""];
16->11 [style = bold, label=""];
24->19 [style = bold, label=""];
12->5 [style = bold, label=""];
17->1 [style = bold, label=""];
3->1 [style = bold, label=""];
9->0 [style = bold, label=""];
29->30 [style = bold, label=""];
9->33 [style = bold, label=""];
11->4 [style = bold, label=""];
11->9 [style = solid, label="mockAppender"];
12->15 [style = bold, label=""];
26->9 [style = bold, label=""];
31->18 [style = bold, label=""];
30->32 [style = bold, label=""];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
32->27 [style = bold, label=""];
9->7 [style = bold, label=""];
20->25 [style = bold, label=""];
1->9 [style = bold, label=""];
3->19 [style = dashed, label="0"];
18->29 [style = bold, label=""];
0->10 [style = bold, label=""];
13->12 [style = bold, label=""];
21->20 [style = bold, label=""];
10->13 [style = bold, label=""];
1->9 [style = solid, label="clusterLogger"];
28->23 [style = bold, label=""];
19->26 [style = bold, label=""];
11->32 [style = solid, label="mockAppender"];
9->32 [style = solid, label="clusterLogger"];
3->17 [style = bold, label=""];
12->18 [style = dashed, label="0"];
11->33 [style = solid, label="mockAppender"];
33->21 [style = bold, label=""];
1->8 [style = solid, label="clusterLogger"];
5->15 [style = dashed, label="0"];
9->33 [style = solid, label="clusterLogger"];
2->11 [style = bold, label=""];
15->8 [style = bold, label=""];
22->11 [style = bold, label=""];
}
