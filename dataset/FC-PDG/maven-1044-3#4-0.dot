digraph {
5 [style = filled, label = "testBadPluginVersion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertContains(result.getWarnings().get(2),\"'distributionManagement.repository.id' must not contain any of these characters\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(result.getErrors().get(1).contains(\"test:rmv\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(result.getErrors().get(0).contains(\"test:mip\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testBadPluginVersion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertViolations(result,0,3,0)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertTrue(result.getErrors().get(2).contains(\"test:lmv\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertViolations(result,0,4,0)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertViolations(result,0,0,4)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertContains(result.getErrors().get(1),\"'build.plugins.plugin.version' for test:rmv must be a valid version\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertContains(result.getErrors().get(0),\"'build.plugins.plugin.version' for test:mip must be a valid version\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertContains(result.getErrors().get(2),\"'build.plugins.plugin.version' for test:lmv must be a valid version\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertContains(result.getErrors().get(3),\"'build.plugins.plugin.version' for test:ifsc must not contain any of these characters\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertContains(result.getWarnings().get(1),\"'pluginRepositories.pluginRepository.id' must not contain any of these characters\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertContains(result.getWarnings().get(3),\"'distributionManagement.snapshotRepository.id' must not contain any of these characters\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-plugin-version.xml\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SimpleProblemCollector result = validate(\"bad-repository-id.xml\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testBadRepositoryId['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertContains(result.getWarnings().get(0),\"'repositories.repository.id' must not contain any of these characters\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->13 [style = bold, label=""];
7->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
1->3 [style = solid, label="result"];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
14->17 [style = bold, label=""];
12->16 [style = bold, label=""];
4->6 [style = dashed, label="0"];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
9->6 [style = bold, label=""];
4->0 [style = bold, label=""];
1->11 [style = bold, label=""];
5->1 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
2->9 [style = dashed, label="0"];
1->11 [style = solid, label="result"];
6->10 [style = bold, label=""];
15->12 [style = bold, label=""];
13->14 [style = bold, label=""];
15->12 [style = solid, label="result"];
3->11 [style = dashed, label="0"];
}
