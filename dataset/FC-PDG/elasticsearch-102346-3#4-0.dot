digraph {
6 [style = filled, label = "assertFalse(clusterStateHasNode(node1))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testJoinWithHigherTermButBetterStateStillElectsMasterThroughSelfJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "joinNodeAndRun(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,higherVersion))))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertTrue(clusterStateHasNode(node1))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testJoinElectedLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "joinNodeAndRun(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testJoinWithHigherTermButBetterStateStillElectsMasterThroughSelfJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "joinNodeAndRun(new JoinRequest(node1,newTerm,Optional.of(new Join(node1,node0,newTerm,initialTerm,higherVersion))))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "DiscoveryNode node0 = newNode(0,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DiscoveryNode node1 = newNode(1,true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node0.getId()))))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long initialTerm = randomLongBetween(1,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "long newTerm = initialTerm + randomLongBetween(1,10)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "joinNodeAndRun(new JoinRequest(node0,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "long initialVersion = randomLongBetween(1,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long higherVersion = initialVersion + randomLongBetween(1,10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->15 [style = solid, label="initialTerm"];
4->3 [style = bold, label=""];
0->1 [style = solid, label="initialTerm"];
8->15 [style = solid, label="initialVersion"];
17->6 [style = bold, label=""];
11->4 [style = bold, label=""];
8->10 [style = solid, label="initialVersion"];
0->12 [style = solid, label="initialTerm"];
10->12 [style = solid, label="higherVersion"];
14->17 [style = bold, label=""];
4->12 [style = solid, label="node0"];
3->12 [style = solid, label="node1"];
3->16 [style = solid, label="node1"];
3->6 [style = solid, label="node1"];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
15->18 [style = bold, label=""];
1->12 [style = solid, label="newTerm"];
1->14 [style = solid, label="newTerm"];
6->15 [style = bold, label=""];
3->0 [style = bold, label=""];
3->15 [style = solid, label="node1"];
5->1 [style = bold, label=""];
3->7 [style = solid, label="node1"];
1->7 [style = solid, label="newTerm"];
8->9 [style = solid, label="initialVersion"];
1->15 [style = solid, label="newTerm"];
10->12 [style = bold, label=""];
10->7 [style = solid, label="higherVersion"];
7->6 [style = bold, label=""];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
0->7 [style = solid, label="initialTerm"];
9->5 [style = bold, label=""];
7->12 [style = dashed, label="0"];
4->9 [style = solid, label="node0"];
1->14 [style = bold, label=""];
8->14 [style = solid, label="initialVersion"];
4->14 [style = solid, label="node0"];
0->9 [style = solid, label="initialTerm"];
1->10 [style = bold, label=""];
4->15 [style = solid, label="node0"];
0->14 [style = solid, label="initialTerm"];
10->14 [style = dashed, label="0"];
4->7 [style = solid, label="node0"];
13->4 [style = bold, label=""];
18->16 [style = bold, label=""];
}
