digraph {
0 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "env.kafkaClient().prepareResponse(expectCreateTopicsRequestWithTopics(\"topic2\"),prepareCreateTopicsResponse(1000,creatableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "time.sleep(defaultApiTimeout + 1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting next CreateTopics request\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting DeleteTopics requests\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Uuid topicId2 = Uuid.randomUuid()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DeleteTopicsResult result = env.adminClient().deleteTopics(asList(\"topic1\",\"topic2\",\"topic3\"),new DeleteTopicsOptions().retryOnQuotaViolation(true))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0,e.throttleTimeMs())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "time.sleep(defaultApiTimeout + 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting next DeleteTopics request\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestUtils.assertFutureThrows(resultIds.values().get(topicId3),)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "TestUtils.assertFutureThrows(result.values().get(\"topic3\"),)@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "e = TestUtils.assertFutureThrows(resultIds.topicIdValues().get(topicId2),)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "ThrottlingQuotaExceededException e = TestUtils.assertFutureThrows(result.topicNameValues().get(\"topic2\"),)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "CreateTopicsResult result = env.adminClient().createTopics(asList(new NewTopic(\"topic1\",1,(short)1),new NewTopic(\"topic2\",1,(short)1),new NewTopic(\"topic3\",1,(short)1)),new CreateTopicsOptions().retryOnQuotaViolation(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "DeleteTopicsResult resultIds = env.adminClient().deleteTopics(TopicCollection.ofTopicIds(asList(topicId1,topicId2,topicId3)),new DeleteTopicsOptions().retryOnQuotaViolation(true))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "long defaultApiTimeout = 60000@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNull(resultIds.topicIdValues().get(topicId1).get())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertNull(resultIds.values().get(topicId1).get())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "TestUtils.assertFutureThrows(result.topicNameValues().get(\"topic3\"),)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "env.kafkaClient().prepareResponse(expectCreateTopicsRequestWithTopics(\"topic1\",\"topic2\",\"topic3\"),prepareCreateTopicsResponse(1000,creatableTopicResult(\"topic1\",Errors.NONE),creatableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED),creatableTopicResult(\"topic3\",Errors.TOPIC_ALREADY_EXISTS)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting CreateTopics requests\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Uuid topicId1 = Uuid.randomUuid()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDeleteTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeOut['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Uuid topicId3 = Uuid.randomUuid()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,e.throttleTimeMs())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting DeleteTopics requests\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ThrottlingQuotaExceededException e = TestUtils.assertFutureThrows(result.values().get(\"topic2\"),)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testDeleteTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeOut['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertNull(result.topicNameValues().get(\"topic1\").get())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting next DeleteTopics request\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MockTime time = new MockTime()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopicIds(topicId2),prepareDeleteTopicsResponse(1000,deletableTopicResultWithId(topicId2,Errors.THROTTLING_QUOTA_EXCEEDED)))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(result.values().get(\"topic1\").get())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DeleteTopicsWithIdsResult resultIds = env.adminClient().deleteTopicsWithIds(asList(topicId1,topicId2,topicId3),new DeleteTopicsOptions().retryOnQuotaViolation(true))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "e = TestUtils.assertFutureThrows(resultIds.values().get(topicId2),)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopicIds(topicId1,topicId2,topicId3),prepareDeleteTopicsResponse(1000,deletableTopicResultWithId(topicId1,Errors.NONE),deletableTopicResultWithId(topicId2,Errors.THROTTLING_QUOTA_EXCEEDED),deletableTopicResultWithId(topicId3,Errors.UNKNOWN_TOPIC_ID)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopics(\"topic2\"),prepareDeleteTopicsResponse(1000,deletableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "TestUtils.assertFutureThrows(resultIds.topicIdValues().get(topicId3),)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "testCreateTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeOut['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopics(\"topic1\",\"topic2\",\"topic3\"),prepareDeleteTopicsResponse(1000,deletableTopicResult(\"topic1\",Errors.NONE),deletableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED),deletableTopicResult(\"topic3\",Errors.TOPIC_ALREADY_EXISTS)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
5->3 [style = bold, label=""];
8->16 [style = bold, label=""];
24->32 [style = solid, label="topicId2"];
15->2 [style = bold, label=""];
17->26 [style = bold, label=""];
2->20 [style = bold, label=""];
27->32 [style = bold, label=""];
3->7 [style = solid, label="defaultApiTimeout"];
16->27 [style = bold, label=""];
25->33 [style = bold, label=""];
10->33 [style = solid, label="topicId3"];
28->20 [style = bold, label=""];
20->29 [style = bold, label=""];
24->33 [style = solid, label="topicId2"];
10->19 [style = solid, label="topicId3"];
18->11 [style = bold, label=""];
25->18 [style = bold, label=""];
3->16 [style = solid, label="defaultApiTimeout"];
39->3 [style = bold, label=""];
4->27 [style = dashed, label="0"];
14->17 [style = bold, label=""];
7->31 [style = bold, label=""];
13->38 [style = dashed, label="0"];
3->12 [style = bold, label=""];
40->38 [style = bold, label=""];
14->36 [style = dashed, label="0"];
12->0 [style = bold, label=""];
26->13 [style = bold, label=""];
0->36 [style = bold, label=""];
24->23 [style = solid, label="topicId2"];
6->35 [style = dashed, label="0"];
23->32 [style = dashed, label="0"];
20->21 [style = bold, label=""];
24->1 [style = solid, label="topicId2"];
32->9 [style = bold, label=""];
19->34 [style = dashed, label="0"];
33->11 [style = bold, label=""];
0->14 [style = bold, label=""];
37->40 [style = bold, label=""];
30->3 [style = bold, label=""];
21->22 [style = bold, label=""];
24->25 [style = solid, label="topicId2"];
2->28 [style = dashed, label="0"];
15->31 [style = dashed, label="0"];
17->37 [style = dashed, label="0"];
9->19 [style = bold, label=""];
22->33 [style = solid, label="topicId1"];
7->15 [style = bold, label=""];
11->8 [style = bold, label=""];
10->18 [style = solid, label="topicId3"];
24->18 [style = solid, label="topicId2"];
36->37 [style = bold, label=""];
31->28 [style = bold, label=""];
22->24 [style = bold, label=""];
13->6 [style = bold, label=""];
16->4 [style = bold, label=""];
6->7 [style = bold, label=""];
29->22 [style = bold, label=""];
10->1 [style = bold, label=""];
38->35 [style = bold, label=""];
23->9 [style = bold, label=""];
22->18 [style = solid, label="topicId1"];
1->25 [style = bold, label=""];
35->7 [style = bold, label=""];
21->29 [style = dashed, label="0"];
26->40 [style = dashed, label="0"];
4->23 [style = bold, label=""];
18->33 [style = dashed, label="0"];
10->1 [style = solid, label="topicId3"];
10->34 [style = solid, label="topicId3"];
22->1 [style = solid, label="topicId1"];
9->34 [style = bold, label=""];
}
