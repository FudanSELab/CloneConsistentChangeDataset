digraph {
37 [style = filled, label = "rebuild.get()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testRowWithRangeTombstonesUpdatesSecondaryIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "TableMetadata updated = current.unbuild().indexes(current.indexes.with(indexDef)).build()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,cfs.getLiveSSTables().size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"k6\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(8,index.rowsDeleted.size())@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "UpdateBuilder.create(cfs.metadata(),key).withTimestamp(0).newRow(1).add(\"val\",1).applyUnsafe()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "new RowUpdateBuilder(cfs.metadata(),0,key).addRangeTombstone(0,7).build().applyUnsafe()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ByteBuffer key = ByteBufferUtil.bytes(\"k5\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cfs.forceBlockingFlush()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.newRow(i).add(\"val\",i)@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Future<?> rebuild = cfs.indexManager.addIndex(indexDef,false)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "testOverwritesToDeletedColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TableMetadata current = cfs.metadata()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "!current.indexes.get(\"test_index\").isPresent()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "builder.newRow(i).add(\"val\",i)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rebuild != null@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.applyUnsafe()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(10,index.rowsInserted.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "cfs.disableAutoCompaction()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "cfs.forceBlockingFlush()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "new RowUpdateBuilder(cfs.metadata(),1,key).addRangeTombstone(0,1).build().applyUnsafe()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MigrationManager.announceTableUpdate(updated,true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Keyspace table = Keyspace.open(KSNAME)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ByteBuffer indexedColumnName = ByteBufferUtil.bytes(\"val\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Future<?> rebuild = cfs.indexManager.addIndex(indexDef)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "rebuild.get()@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CompactionManager.instance.performMaximal(cfs,false)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "rebuild != null@@@17@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "cfs.truncateBlocking()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StubIndex index = (StubIndex)cfs.indexManager.getIndexByName(\"test_index\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "StubIndex index = (StubIndex)cfs.indexManager.listIndexes().stream().filter(null).findFirst().orElseThrow(null)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "UpdateBuilder builder = UpdateBuilder.create(cfs.metadata(),key).withTimestamp(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "index.reset()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,index.rowsUpdated.size())@@@25@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "UpdateBuilder.create(cfs.metadata(),key).withTimestamp(2).newRow(1).add(\"val\",1).applyUnsafe()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ColumnMetadata cd = cfs.metadata().getColumn(indexedColumnName).copy()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ColumnFamilyStore cfs = table.getColumnFamilyStore(CFNAME)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRowWithRangeTombstonesUpdatesSecondaryIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i < 10@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "IndexMetadata indexDef = IndexMetadata.fromIndexTargets(Collections.singletonList(new IndexTarget(cd.name,IndexTarget.Type.VALUES)),\"test_index\",IndexMetadata.Kind.CUSTOM,ImmutableMap.of(IndexTarget.CUSTOM_INDEX_OPTION_NAME,.getName()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(1,index.rowsInserted.size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->10 [style = bold, label=""];
1->5 [style = bold, label=""];
14->3 [style = bold, label=""];
33->12 [style = dotted, label="true"];
8->28 [style = bold, label=""];
42->41 [style = bold, label=""];
29->1 [style = dotted, label="true"];
2->20 [style = bold, label=""];
29->5 [style = bold, label=""];
20->13 [style = bold, label=""];
16->18 [style = bold, label=""];
19->18 [style = bold, label=""];
32->33 [style = solid, label="rebuild"];
37->36 [style = bold, label=""];
19->31 [style = bold, label=""];
0->27 [style = bold, label=""];
28->32 [style = solid, label="indexDef"];
5->12 [style = solid, label="rebuild"];
25->30 [style = bold, label=""];
21->15 [style = bold, label=""];
31->19 [style = solid, label="i"];
26->1 [style = bold, label=""];
28->11 [style = bold, label=""];
26->1 [style = solid, label="updated"];
4->19 [style = bold, label=""];
18->19 [style = dotted, label="true"];
18->19 [style = bold, label=""];
12->36 [style = bold, label=""];
16->31 [style = solid, label="i"];
11->29 [style = bold, label=""];
31->18 [style = bold, label=""];
16->18 [style = solid, label="i"];
13->40 [style = dashed, label="0"];
33->12 [style = bold, label=""];
35->43 [style = bold, label=""];
24->39 [style = dashed, label="0"];
12->6 [style = bold, label=""];
23->0 [style = bold, label=""];
43->23 [style = bold, label=""];
29->26 [style = dotted, label="true"];
13->16 [style = bold, label=""];
32->33 [style = bold, label=""];
12->37 [style = bold, label=""];
36->20 [style = bold, label=""];
38->3 [style = bold, label=""];
15->22 [style = bold, label=""];
29->26 [style = bold, label=""];
6->2 [style = bold, label=""];
9->23 [style = bold, label=""];
5->32 [style = dashed, label="0"];
7->24 [style = bold, label=""];
12->2 [style = bold, label=""];
20->40 [style = bold, label=""];
16->19 [style = solid, label="i"];
31->18 [style = solid, label="i"];
7->21 [style = solid, label="cfs"];
18->4 [style = bold, label=""];
2->36 [style = dashed, label="0"];
3->7 [style = bold, label=""];
10->25 [style = bold, label=""];
5->12 [style = bold, label=""];
34->3 [style = bold, label=""];
7->39 [style = bold, label=""];
19->18 [style = solid, label="i"];
29->32 [style = bold, label=""];
12->6 [style = dotted, label="true"];
39->10 [style = bold, label=""];
19->4 [style = solid, label="i"];
18->9 [style = bold, label=""];
27->17 [style = bold, label=""];
1->32 [style = bold, label=""];
18->4 [style = dotted, label="true"];
16->4 [style = solid, label="i"];
30->8 [style = bold, label=""];
18->31 [style = dotted, label="true"];
28->5 [style = solid, label="indexDef"];
17->21 [style = bold, label=""];
40->42 [style = bold, label=""];
33->2 [style = bold, label=""];
12->37 [style = dotted, label="true"];
41->35 [style = bold, label=""];
}
