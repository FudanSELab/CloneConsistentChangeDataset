digraph {
12 [style = filled, label = "List<Types.NestedField> allFields = ManifestFile.schema().asStruct().fields()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.fromProjectionPos = new int((((@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "fromProjectionPos(i( = j@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int j = 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<Types.NestedField> allFields = PartitionFieldSummary.getType().fields()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "j < allFields.size()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boolean found = false@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < fromProjectionPos.length@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i += 1@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fields.get(i).fieldId() == allFields.get(j).fieldId()@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!found@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "found = true@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "this.avroSchema = avroSchema@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "j += 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "GenericManifestFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema).asStructType().fields()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "GenericManifestFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Schema avroSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "GenericPartitionFieldSummary['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema).asNestedType().asStructType().fields()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "org.apache.avro.Schema avroSchema@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9->18 [style = dashed, label="0"];
14->17 [style = bold, label=""];
7->3 [style = solid, label="j"];
17->14 [style = dotted, label="true"];
17->0 [style = dotted, label="true"];
15->9 [style = bold, label=""];
16->4 [style = bold, label=""];
15->18 [style = bold, label=""];
17->1 [style = dotted, label="true"];
17->7 [style = dotted, label="true"];
0->7 [style = bold, label=""];
13->17 [style = bold, label=""];
22->20 [style = dotted, label="true"];
19->15 [style = bold, label=""];
4->3 [style = solid, label="j"];
6->13 [style = bold, label=""];
11->15 [style = bold, label=""];
9->21 [style = bold, label=""];
22->15 [style = bold, label=""];
5->10 [style = bold, label=""];
1->14 [style = bold, label=""];
13->2 [style = solid, label="i"];
9->21 [style = solid, label="fields"];
19->8 [style = dotted, label="true"];
3->1 [style = bold, label=""];
8->20 [style = dashed, label="0"];
12->21 [style = dashed, label="0"];
7->3 [style = bold, label=""];
9->12 [style = solid, label="fields"];
11->8 [style = dotted, label="true"];
20->15 [style = solid, label="avroSchema"];
7->10 [style = solid, label="j"];
18->12 [style = solid, label="fields"];
10->4 [style = bold, label=""];
3->4 [style = dotted, label="true"];
16->10 [style = dotted, label="true"];
14->17 [style = solid, label="i"];
16->5 [style = bold, label=""];
1->2 [style = dotted, label="true"];
4->10 [style = solid, label="j"];
10->2 [style = solid, label="i"];
14->2 [style = solid, label="i"];
2->14 [style = bold, label=""];
3->16 [style = bold, label=""];
18->12 [style = bold, label=""];
17->3 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
3->16 [style = dotted, label="true"];
21->6 [style = bold, label=""];
4->3 [style = bold, label=""];
13->17 [style = solid, label="i"];
8->15 [style = solid, label="avroSchema"];
1->2 [style = bold, label=""];
17->0 [style = bold, label=""];
12->6 [style = bold, label=""];
9->12 [style = bold, label=""];
}
