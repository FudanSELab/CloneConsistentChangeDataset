digraph {
18 [style = filled, label = "user = iterator.next()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "shouldRowBoundsCountNullItem['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assertions.assertFalse(cursor.isOpen())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(iterator.hasNext())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(iterator.hasNext())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertNull(user)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(cursor.isOpen())@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "User user@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "user = iterator.next()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(iterator.hasNext())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "shouldNullItemNotStopIteration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "user = iterator.next()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(cursor.isConsumed())@@@32@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(iterator.hasNext())@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Cursor<User> cursor = mapper.getNullUsers(new RowBounds())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "user = iterator.next()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Iterator<User> iterator = cursor.iterator()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertNull(user)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(3,cursor.getCurrentIndex())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(0,cursor.getCurrentIndex())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assertions.assertFalse(cursor.isConsumed())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(1,cursor.getCurrentIndex())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assertions.assertEquals(1,cursor.getCurrentIndex())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertTrue(iterator.hasNext())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assertions.assertEquals(\"Kate\",user.getName())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "shouldRowBoundsCountNullItem['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assertions.assertNull(user)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertTrue(iterator.hasNext())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(cursor.isOpen())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(-1,cursor.getCurrentIndex())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Cursor<User> cursor = mapper.getNullUsers(new RowBounds(1,2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertNull(user)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertFalse(cursor.isOpen())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assertions.assertTrue(cursor.isOpen())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(-1,cursor.getCurrentIndex())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(2,cursor.getCurrentIndex())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(cursor.isConsumed())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assertions.assertEquals(2,cursor.getCurrentIndex())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assertions.assertFalse(cursor.isOpen())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"Kate\",user.getName())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assertions.assertTrue(cursor.isConsumed())@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
28->21 [style = bold, label=""];
9->22 [style = dashed, label="0"];
19->10 [style = bold, label=""];
8->9 [style = bold, label=""];
40->12 [style = bold, label=""];
27->25 [style = bold, label=""];
39->34 [style = bold, label=""];
18->39 [style = solid, label="user"];
37->43 [style = bold, label=""];
6->11 [style = bold, label=""];
20->15 [style = bold, label=""];
29->28 [style = bold, label=""];
18->39 [style = bold, label=""];
38->42 [style = solid, label="user"];
8->33 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
15->19 [style = bold, label=""];
18->33 [style = bold, label=""];
5->27 [style = dashed, label="0"];
21->24 [style = bold, label=""];
22->20 [style = bold, label=""];
31->0 [style = bold, label=""];
44->0 [style = bold, label=""];
13->40 [style = bold, label=""];
4->45 [style = bold, label=""];
4->32 [style = dashed, label="0"];
13->24 [style = dashed, label="0"];
2->17 [style = bold, label=""];
4->2 [style = bold, label=""];
7->13 [style = bold, label=""];
45->2 [style = bold, label=""];
35->5 [style = bold, label=""];
7->21 [style = dashed, label="0"];
13->12 [style = bold, label=""];
33->22 [style = bold, label=""];
19->26 [style = dashed, label="0"];
16->1 [style = bold, label=""];
0->36 [style = bold, label=""];
14->20 [style = dashed, label="0"];
15->26 [style = bold, label=""];
3->0 [style = bold, label=""];
41->38 [style = bold, label=""];
12->18 [style = bold, label=""];
36->1 [style = bold, label=""];
38->42 [style = bold, label=""];
2->29 [style = dashed, label="0"];
9->14 [style = bold, label=""];
1->4 [style = bold, label=""];
16->36 [style = dashed, label="0"];
26->23 [style = bold, label=""];
24->12 [style = bold, label=""];
15->26 [style = solid, label="user"];
42->35 [style = bold, label=""];
18->8 [style = bold, label=""];
17->7 [style = bold, label=""];
17->28 [style = dashed, label="0"];
32->29 [style = bold, label=""];
10->23 [style = dashed, label="0"];
14->15 [style = bold, label=""];
25->30 [style = bold, label=""];
6->25 [style = dashed, label="0"];
43->8 [style = bold, label=""];
34->37 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
15->19 [style = solid, label="user"];
10->41 [style = bold, label=""];
1->32 [style = bold, label=""];
23->27 [style = bold, label=""];
0->16 [style = bold, label=""];
}
