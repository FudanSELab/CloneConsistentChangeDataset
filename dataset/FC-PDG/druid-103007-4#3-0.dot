digraph {
13 [style = filled, label = "int iterations = credentials.getIterations()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testHashPassword['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.SALT_LENGTH,salt.length)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(response.getEntity() instanceof byte(()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.DEFAULT_KEY_ITERATIONS,iterations)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertNotNull(cachedUserMap)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertEquals(errorMapWithMsg(\"User (druid( does not exist.\"),response.getEntity())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "response = resource.getUser(req,AUTHENTICATOR_NAME,\"druid\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "BasicAuthenticatorCredentials credentials = actualUser.getCredentials()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "byte(( recalculatedHash = BasicAuthUtils.hashPassword(\"helloworld\".toCharArray(),salt,iterations)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "response = resource.getUser(req,AUTHENTICATOR_NAME,\"druid\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(200,response.getStatus())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "response = resource.getCachedSerializedUserMap(req,AUTHENTICATOR_NAME)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(errorMapWithMsg(\"User (druid( does not exist.\"),response.getEntity())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "response = resource.deleteUser(req,AUTHENTICATOR_NAME,\"druid\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(\"druid\",cachedUserMap.get(\"druid\").getName())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.DEFAULT_KEY_ITERATIONS,iterations)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertNotNull(cachedUserMap.get(\"druid\"))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8,hash.length)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "recalculatedHash = BasicAuthUtils.hashPassword(\"helloworld\".toCharArray(),salt,iterations)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertArrayEquals(recalculatedHash,hash)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(200,response.getStatus())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(200,response.getStatus())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "BasicAuthenticatorCredentials cachedUserCredentials = cachedUserMap.get(\"druid\").getCredentials()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "byte(( hash = BasicAuthUtils.hashPassword(password,salt,iterations)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Response response = resource.createUser(req,AUTHENTICATOR_NAME,\"druid\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8,hash.length)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.SALT_LENGTH,salt.length)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "salt = cachedUserCredentials.getSalt()@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "response = resource.updateUserCredentials(req,AUTHENTICATOR_NAME,\"druid\",new BasicAuthenticatorCredentialUpdate(\"helloworld\",null))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertArrayEquals(recalculatedHash,hash)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "Map<String,BasicAuthenticatorUser> cachedUserMap = BasicAuthUtils.deserializeAuthenticatorUserMap(objectMapper,(byte(()response.getEntity())@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.KEY_LENGTH / 8,hash.length)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(200,response.getStatus())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "byte(( salt = credentials.getSalt()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testUserCredentials['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "byte(( salt = BasicAuthUtils.generateSalt()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "int iterations = BasicAuthUtils.DEFAULT_KEY_ITERATIONS@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testUserCredentials['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(BasicAuthUtils.SALT_LENGTH,salt.length)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "response = resource.updateUserCredentials(req,AUTHENTICATOR_NAME,\"druid\",new BasicAuthenticatorCredentialUpdate(\"helloworld\",null))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(\"druid\",actualUser.getName())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(200,response.getStatus())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "byte(( hash = credentials.getHash()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(400,response.getStatus())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BasicAuthenticatorUser actualUser = (BasicAuthenticatorUser)response.getEntity()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "hash = cachedUserCredentials.getHash()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "iterations = cachedUserCredentials.getIterations()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(400,response.getStatus())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "char(( password = \"HELLO\".toCharArray()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
29->30 [style = bold, label=""];
22->19 [style = bold, label=""];
10->20 [style = solid, label="salt"];
48->49 [style = bold, label=""];
3->11 [style = bold, label=""];
23->15 [style = bold, label=""];
43->48 [style = bold, label=""];
21->22 [style = bold, label=""];
49->44 [style = solid, label="iterations"];
8->0 [style = bold, label=""];
39->34 [style = bold, label=""];
27->28 [style = bold, label=""];
28->38 [style = bold, label=""];
14->21 [style = bold, label=""];
24->20 [style = bold, label=""];
13->23 [style = bold, label=""];
37->27 [style = bold, label=""];
13->20 [style = solid, label="iterations"];
38->29 [style = bold, label=""];
26->31 [style = bold, label=""];
0->9 [style = bold, label=""];
44->45 [style = bold, label=""];
35->33 [style = solid, label="hash"];
18->25 [style = bold, label=""];
31->33 [style = solid, label="recalculatedHash"];
15->24 [style = bold, label=""];
30->31 [style = solid, label="salt"];
11->17 [style = bold, label=""];
1->6 [style = bold, label=""];
42->5 [style = bold, label=""];
20->1 [style = bold, label=""];
33->6 [style = bold, label=""];
12->13 [style = bold, label=""];
10->12 [style = bold, label=""];
6->16 [style = bold, label=""];
37->27 [style = solid, label="cachedUserMap"];
12->1 [style = solid, label="hash"];
25->4 [style = bold, label=""];
41->26 [style = bold, label=""];
45->46 [style = bold, label=""];
20->1 [style = solid, label="recalculatedHash"];
1->40 [style = bold, label=""];
16->3 [style = bold, label=""];
49->47 [style = bold, label=""];
35->36 [style = bold, label=""];
17->8 [style = bold, label=""];
36->32 [style = bold, label=""];
4->10 [style = bold, label=""];
7->5 [style = bold, label=""];
13->24 [style = solid, label="iterations"];
2->14 [style = bold, label=""];
40->39 [style = bold, label=""];
30->35 [style = bold, label=""];
47->44 [style = solid, label="salt"];
36->31 [style = solid, label="iterations"];
31->33 [style = bold, label=""];
32->41 [style = bold, label=""];
48->44 [style = solid, label="password"];
19->18 [style = bold, label=""];
36->26 [style = solid, label="iterations"];
34->37 [style = bold, label=""];
47->44 [style = bold, label=""];
}
