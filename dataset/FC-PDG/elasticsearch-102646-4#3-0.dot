digraph {
34 [style = filled, label = "final AtomicInteger outerCount = new AtomicInteger()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(1,closeCalls.get())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,iwc)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,searcher.search(new TermQuery(new Term(\"field\",\"doc\")),1).totalHits.value)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TopDocs search = wrap.search(new TermQuery(new Term(\"field\",\"doc\")),1)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertFalse(\"wrapped reader is closed\",wrap.reader().tryIncRef())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ElasticsearchDirectoryReader.addReaderCloseListener(wrap.getDirectoryReader(),null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testReaderCloseListenerIsCalled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final Engine.Searcher wrap = IndexShard.wrapSearcher(new Engine.Searcher(\"foo\",searcher,null),wrapper)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ConcurrentHashMap<Object,TopDocs> cache = new ConcurrentHashMap<>()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IOUtils.close(open,writer,dir)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testIsCacheable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "IndexWriterConfig iwc = newIndexWriterConfig()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testIsCacheable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "cache.put(wrap.getIndexReader().getReaderCacheHelper().getKey(),search)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(1,closeCalls.get())@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final AtomicBoolean closeCalled = new AtomicBoolean(false)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "searcher.setSimilarity(iwc.getSimilarity())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,outerCount.get())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "writer.addDocument(doc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "doc.add(new StringField(\"id\",\"1\",random().nextBoolean()? Field.Store.YES: Field.Store.NO))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final AtomicInteger closeCalls = new AtomicInteger(0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AtomicBoolean closeCalled = new AtomicBoolean(false)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "cache.put(wrap.reader().getReaderCacheHelper().getKey(),search)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(1,wrap.reader().getRefCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ElasticsearchDirectoryReader.addReaderCloseListener(wrap.getDirectoryReader(),null)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(sourceRefCount,open.getRefCount())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertTrue(closeCalled.get())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(closeCalled.get())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final int sourceRefCount = open.getRefCount()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DirectoryReader open = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"_na_\",1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final AtomicInteger count = new AtomicInteger()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(open)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "doc.add(new TextField(\"field\",\"doc\",random().nextBoolean()? Field.Store.YES: Field.Store.NO))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "wrap.close()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "TopDocs search = wrap.searcher().search(new TermQuery(new Term(\"field\",\"doc\")),1)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,open.getRefCount())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(1,closeCalls.get())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(1,cache.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0,wrap.searcher().search(new TermQuery(new Term(\"field\",\"doc\")),1).totalHits.value)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,count.get())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CheckedFunction<DirectoryReader,DirectoryReader,IOException> wrapper = null@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Document doc = new Document()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->14 [style = bold, label=""];
5->10 [style = bold, label=""];
8->16 [style = bold, label=""];
34->29 [style = bold, label=""];
9->13 [style = solid, label="dir"];
13->1 [style = solid, label="writer"];
19->8 [style = solid, label="search"];
16->18 [style = bold, label=""];
3->1 [style = bold, label=""];
36->34 [style = bold, label=""];
5->33 [style = bold, label=""];
30->43 [style = bold, label=""];
35->9 [style = bold, label=""];
21->15 [style = bold, label=""];
27->9 [style = bold, label=""];
11->4 [style = bold, label=""];
43->42 [style = bold, label=""];
9->17 [style = bold, label=""];
23->3 [style = bold, label=""];
20->14 [style = bold, label=""];
9->21 [style = solid, label="dir"];
11->24 [style = bold, label=""];
12->9 [style = bold, label=""];
32->30 [style = bold, label=""];
13->14 [style = solid, label="writer"];
10->6 [style = bold, label=""];
42->40 [style = bold, label=""];
19->8 [style = bold, label=""];
25->26 [style = solid, label="search"];
41->28 [style = bold, label=""];
22->3 [style = solid, label="doc"];
26->16 [style = bold, label=""];
18->20 [style = bold, label=""];
1->14 [style = solid, label="open"];
24->4 [style = bold, label=""];
13->21 [style = solid, label="writer"];
0->23 [style = bold, label=""];
22->0 [style = bold, label=""];
38->37 [style = bold, label=""];
37->31 [style = bold, label=""];
6->36 [style = dashed, label="0"];
9->14 [style = solid, label="dir"];
33->36 [style = bold, label=""];
15->39 [style = bold, label=""];
25->26 [style = bold, label=""];
33->43 [style = solid, label="sourceRefCount"];
1->2 [style = solid, label="open"];
39->41 [style = bold, label=""];
29->38 [style = bold, label=""];
17->13 [style = bold, label=""];
1->2 [style = bold, label=""];
13->22 [style = bold, label=""];
7->25 [style = bold, label=""];
2->38 [style = solid, label="searcher"];
5->38 [style = solid, label="wrapper"];
1->21 [style = solid, label="open"];
6->7 [style = bold, label=""];
19->25 [style = dashed, label="0"];
14->32 [style = bold, label=""];
21->15 [style = dashed, label="0"];
17->13 [style = solid, label="iwc"];
7->19 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
14->21 [style = bold, label=""];
40->21 [style = bold, label=""];
8->26 [style = dashed, label="0"];
}
