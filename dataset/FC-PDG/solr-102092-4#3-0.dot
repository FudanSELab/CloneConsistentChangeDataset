digraph {
50 [style = filled, label = "subs.add(new BoostQuery(booleanQuery.clauses().get(c).getQuery(),boostQuery.getBoost()))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "q.add(newBooleanClause(new DisjunctionMaxQuery(subs,a.tie),BooleanClause.Occur.SHOULD))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "c < firstBooleanQuery.clauses().size()@@@17@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "++c@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return q@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "lst.get(0) instanceof BooleanQuery && allSameQueryStructure(lst)@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "exceptions@@@40@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "BoostQuery boostQuery = (BoostQuery)lst.get(n)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Query firstQuery = lst.get(0)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "getAliasedQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "exceptions@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "return q.build()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "BooleanQuery firstBooleanQuery = firstQuery instanceof BoostQuery? (BooleanQuery)((BoostQuery)firstQuery).getQuery(): (BooleanQuery)firstQuery@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "return new DisjunctionMaxQuery(lst,a.tie)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return getQuery()@@@55@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "return q.build()@@@34@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "subs.clear()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ft == null && null == MagicFieldName.get(field)@@@51@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "this.validateCyclicAliasing(field)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "return getQuery()@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "makeDismax@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return getQuery()@@@46@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return new DisjunctionMaxQuery(lst,a.tie)@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "(firstQuery instanceof BooleanQuery || (firstQuery instanceof BoostQuery && ((BoostQuery)firstQuery).getQuery() instanceof BooleanQuery)) && allSameQueryStructure(lst)@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "++c@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Query sub@@@42@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "a != null@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "lst == null || lst.size() == 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "List<Query> lst = getQueries(a)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "BooleanQuery booleanQuery = (BooleanQuery)boostQuery.getQuery()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "throw unknownField@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "DisjunctionMaxQuery q = new DisjunctionMaxQuery(lst,a.tie)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<Query> subs = new ArrayList<>(lst.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Alias a = aliases.get(field)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "subs.add(((BooleanQuery)lst.get(n)).clauses().get(c).getQuery())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "q.add(sub,BooleanClause.Occur.SHOULD)@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Query sub@@@33@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FieldType ft = schema.getFieldTypeNoEx(field)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int n = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<String> queryTerms@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "BooleanQuery.Builder q = new BooleanQuery.Builder()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "n < lst.size()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "return getQuery()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "q.add(sub,BooleanClause.Occur.SHOULD)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "ft == null && null == MagicFieldName.get(field)@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "throw unknownField@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "lst.get(n) instanceof BoostQuery@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "Query sub@@@14@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "return q.build()@@@45@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "q.add(newBooleanClause(new DisjunctionMaxQuery(subs,a.tie),BooleanClause.Occur.SHOULD))@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return getQuery()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "getAliasedMultiTermQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<Query> lst = getMultiTermQueries(a)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "return q.build()@@@36@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int c = 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "getAliasedMultiTermQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "lst@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "FieldType ft = schema.getFieldTypeNoEx(field)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "++n@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "exceptions@@@49@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return q.build()@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "lst@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "lst == null || lst.size() == 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31->64 [style = solid, label="lst"];
16->0 [style = bold, label=""];
16->37 [style = bold, label=""];
10->44 [style = dotted, label="true"];
4->25 [style = bold, label=""];
4->1 [style = dotted, label="true"];
55->52 [style = dotted, label="false"];
49->39 [style = dotted, label="true"];
55->65 [style = dotted, label="false"];
31->21 [style = bold, label=""];
21->59 [style = dashed, label="0"];
15->7 [style = dotted, label="true"];
10->41 [style = bold, label=""];
48->39 [style = bold, label=""];
17->15 [style = dotted, label="false"];
54->65 [style = bold, label=""];
49->24 [style = bold, label=""];
21->26 [style = bold, label=""];
5->43 [style = dotted, label="true"];
21->26 [style = dotted, label="true"];
62->53 [style = bold, label=""];
5->22 [style = dotted, label="true"];
24->11 [style = bold, label=""];
15->0 [style = bold, label=""];
47->51 [style = bold, label=""];
12->18 [style = bold, label=""];
27->17 [style = bold, label=""];
7->16 [style = dotted, label="true"];
17->34 [style = dotted, label="true"];
5->30 [style = bold, label=""];
8->4 [style = bold, label=""];
46->50 [style = bold, label=""];
10->1 [style = dotted, label="true"];
55->64 [style = bold, label=""];
16->40 [style = dotted, label="true"];
40->37 [style = bold, label=""];
49->48 [style = dotted, label="true"];
64->5 [style = solid, label="q"];
55->61 [style = dotted, label="false"];
5->28 [style = dotted, label="false"];
16->40 [style = bold, label=""];
17->7 [style = dotted, label="false"];
35->18 [style = bold, label=""];
8->4 [style = solid, label="n"];
22->23 [style = dotted, label="true"];
31->22 [style = solid, label="lst"];
53->30 [style = dotted, label="true"];
44->46 [style = dotted, label="true"];
19->16 [style = solid, label="ft"];
5->49 [style = dotted, label="true"];
60->62 [style = bold, label=""];
7->37 [style = bold, label=""];
17->57 [style = dotted, label="false"];
5->30 [style = dotted, label="false"];
60->62 [style = dotted, label="true"];
53->30 [style = bold, label=""];
17->55 [style = dotted, label="true"];
18->8 [style = dotted, label="true"];
41->6 [style = bold, label=""];
34->49 [style = solid, label="lst"];
43->35 [style = solid, label="firstQuery"];
5->3 [style = dotted, label="true"];
22->24 [style = dotted, label="true"];
22->23 [style = bold, label=""];
58->54 [style = bold, label=""];
45->29 [style = bold, label=""];
11->18 [style = bold, label=""];
44->38 [style = bold, label=""];
17->60 [style = dotted, label="false"];
18->6 [style = dotted, label="true"];
29->27 [style = bold, label=""];
18->20 [style = bold, label=""];
17->34 [style = bold, label=""];
60->57 [style = bold, label=""];
7->19 [style = solid, label="ft"];
44->50 [style = dotted, label="true"];
22->20 [style = dotted, label="true"];
10->44 [style = bold, label=""];
5->32 [style = dotted, label="false"];
44->38 [style = dotted, label="true"];
11->41 [style = solid, label="subs"];
17->15 [style = bold, label=""];
5->3 [style = dotted, label="false"];
59->55 [style = bold, label=""];
5->9 [style = dotted, label="false"];
38->46 [style = bold, label=""];
29->17 [style = solid, label="a"];
63->29 [style = bold, label=""];
22->14 [style = bold, label=""];
31->34 [style = dashed, label="0"];
59->56 [style = bold, label=""];
4->38 [style = solid, label="n"];
5->22 [style = bold, label=""];
17->21 [style = dotted, label="true"];
48->41 [style = dotted, label="true"];
6->48 [style = bold, label=""];
4->10 [style = bold, label=""];
48->4 [style = dotted, label="true"];
22->14 [style = dotted, label="false"];
31->21 [style = solid, label="lst"];
31->59 [style = bold, label=""];
22->18 [style = dotted, label="true"];
29->31 [style = solid, label="a"];
4->10 [style = dotted, label="true"];
4->44 [style = solid, label="n"];
17->60 [style = bold, label=""];
62->53 [style = solid, label="ft"];
44->33 [style = bold, label=""];
55->5 [style = dotted, label="true"];
18->48 [style = solid, label="c"];
4->10 [style = solid, label="n"];
18->48 [style = dashed, label="0"];
17->0 [style = dotted, label="false"];
5->51 [style = dotted, label="false"];
19->0 [style = bold, label=""];
19->16 [style = bold, label=""];
48->10 [style = dotted, label="true"];
34->21 [style = solid, label="lst"];
5->32 [style = bold, label=""];
21->5 [style = bold, label=""];
3->28 [style = bold, label=""];
55->64 [style = dotted, label="true"];
18->48 [style = bold, label=""];
49->11 [style = dotted, label="true"];
30->3 [style = bold, label=""];
18->6 [style = bold, label=""];
24->25 [style = solid, label="subs"];
4->1 [style = bold, label=""];
29->34 [style = solid, label="a"];
49->42 [style = dotted, label="false"];
55->58 [style = dotted, label="false"];
7->19 [style = bold, label=""];
34->21 [style = bold, label=""];
17->37 [style = dotted, label="false"];
49->42 [style = bold, label=""];
44->33 [style = dotted, label="false"];
15->7 [style = bold, label=""];
18->25 [style = dotted, label="true"];
5->36 [style = dotted, label="false"];
7->19 [style = dotted, label="true"];
26->5 [style = bold, label=""];
53->57 [style = bold, label=""];
43->49 [style = solid, label="firstQuery"];
17->31 [style = bold, label=""];
11->18 [style = solid, label="c"];
30->57 [style = bold, label=""];
22->11 [style = dotted, label="true"];
33->1 [style = bold, label=""];
34->42 [style = solid, label="lst"];
48->8 [style = bold, label=""];
11->35 [style = bold, label=""];
5->43 [style = bold, label=""];
17->7 [style = bold, label=""];
17->31 [style = dotted, label="true"];
55->54 [style = dotted, label="true"];
48->6 [style = dotted, label="true"];
23->24 [style = bold, label=""];
31->14 [style = solid, label="lst"];
18->12 [style = dotted, label="true"];
49->35 [style = dotted, label="true"];
59->56 [style = dotted, label="true"];
32->47 [style = bold, label=""];
5->47 [style = dotted, label="true"];
25->12 [style = bold, label=""];
49->24 [style = dotted, label="true"];
50->1 [style = bold, label=""];
15->19 [style = dotted, label="true"];
48->8 [style = dotted, label="true"];
6->8 [style = bold, label=""];
19->16 [style = dotted, label="true"];
49->18 [style = dotted, label="true"];
10->4 [style = bold, label=""];
43->49 [style = bold, label=""];
60->53 [style = dotted, label="true"];
31->59 [style = solid, label="lst"];
18->4 [style = dotted, label="true"];
2->29 [style = bold, label=""];
1->10 [style = bold, label=""];
17->59 [style = dotted, label="true"];
55->58 [style = bold, label=""];
2->13 [style = dotted, label="true"];
56->55 [style = bold, label=""];
17->5 [style = dotted, label="true"];
64->5 [style = bold, label=""];
}
