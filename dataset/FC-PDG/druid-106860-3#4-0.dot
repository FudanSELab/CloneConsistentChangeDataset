digraph {
7 [style = filled, label = "Assert.assertTrue(analysis.isGlobal())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertFalse(analysis.isQuery())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testJoinLookupToLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testJoinLookupToLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertFalse(analysis.isConcreteBased())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final DataSourceAnalysis analysis = DataSourceAnalysis.forDataSource(joinDataSource)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final JoinDataSource joinDataSource = join(LOOKUP_LOOKYLOO,TABLE_FOO,\"1.\",JoinType.INNER)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertFalse(analysis.isConcreteTableBased())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testJoinLookupToTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertFalse(analysis.isGlobal())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(ImmutableList.of(new PreJoinableClause(\"1.\",TABLE_FOO,JoinType.INNER,joinClause(\"1.\"))),analysis.getPreJoinableClauses())@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(analysis.isConcreteBased())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(ImmutableList.of(new PreJoinableClause(\"1.\",LOOKUP_LOOKYLOO,JoinType.INNER,joinClause(\"1.\"))),analysis.getPreJoinableClauses())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(Optional.empty(),analysis.getBaseQuerySegmentSpec())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(joinDataSource,analysis.getDataSource())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(Optional.empty(),analysis.getBaseTableDataSource())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(LOOKUP_LOOKYLOO,analysis.getBaseDataSource())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final JoinDataSource joinDataSource = join(LOOKUP_LOOKYLOO,LOOKUP_LOOKYLOO,\"1.\",JoinType.INNER)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
3->2 [style = bold, label=""];
3->2 [style = solid, label="joinDataSource"];
2->13 [style = bold, label=""];
4->5 [style = bold, label=""];
6->0 [style = bold, label=""];
3->14 [style = dashed, label="0"];
14->2 [style = solid, label="joinDataSource"];
11->17 [style = dashed, label="0"];
0->11 [style = bold, label=""];
8->3 [style = bold, label=""];
9->13 [style = dashed, label="0"];
2->9 [style = bold, label=""];
10->7 [style = bold, label=""];
16->1 [style = bold, label=""];
15->14 [style = bold, label=""];
3->4 [style = solid, label="joinDataSource"];
12->3 [style = bold, label=""];
0->17 [style = bold, label=""];
1->4 [style = bold, label=""];
14->2 [style = bold, label=""];
7->16 [style = dashed, label="0"];
14->4 [style = solid, label="joinDataSource"];
7->1 [style = bold, label=""];
13->10 [style = bold, label=""];
5->6 [style = bold, label=""];
9->10 [style = bold, label=""];
}
