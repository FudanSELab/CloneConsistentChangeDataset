digraph {
14 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "PieSectionEntity<String> e1 = new PieSectionEntity<>(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset<String>(),0,1,\"Key\",\"ToolTip\",\"URL\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "c1.clear()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PieSectionEntity e1 = new PieSectionEntity(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset(),0,1,\"Key\",\"ToolTip\",\"URL\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StandardEntityCollection c2 = (StandardEntityCollection)TestUtils.serialised(c1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "c1.add(e1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StandardEntityCollection c2 = (StandardEntityCollection)c1.clone()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(c1.equals(c2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "c2.clear()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StandardEntityCollection c1 = new StandardEntityCollection()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(c1.equals(c2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(c1 != c2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(c1,c2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11->16 [style = bold, label=""];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
13->11 [style = solid, label="e1"];
1->8 [style = bold, label=""];
4->16 [style = dashed, label="0"];
4->5 [style = solid, label="c2"];
7->11 [style = solid, label="e1"];
11->4 [style = bold, label=""];
0->11 [style = bold, label=""];
0->15 [style = solid, label="c1"];
7->0 [style = bold, label=""];
0->3 [style = solid, label="c1"];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
0->16 [style = solid, label="c1"];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
4->1 [style = solid, label="c2"];
4->9 [style = solid, label="c2"];
4->3 [style = solid, label="c2"];
16->15 [style = solid, label="c2"];
8->9 [style = bold, label=""];
7->13 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
2->7 [style = bold, label=""];
10->1 [style = bold, label=""];
13->0 [style = bold, label=""];
}
