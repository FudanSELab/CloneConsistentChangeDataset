digraph {
4 [style = filled, label = "return false@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "mapRuleDescription(rule)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "addRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ruleNames.remove(rule.toString())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1131da8rule@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "removeRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!ruleSet.remove(rule)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "classOperands.put(subClass,operand)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "addRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "unmapRuleDescription(rule)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ruleTraitDef.deregisterConverterRule(this,converterRule)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return true@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return true@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "RelOptRule rule@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RelOptRule rule@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ruleSet.contains(rule)@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final String ruleName = rule.toString()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ruleTraitDef.registerConverterRule(this,converterRule)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ruleNames.put(ruleName,rule) != null@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rule instanceof ConverterRule@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "throw new RuntimeException(\"Rule description '\" + ruleName + \"' is not unique. \")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final boolean added = ruleSet.add(rule)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "rule instanceof ConverterRule@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assert added@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "classOperands.values().removeIf(null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "locked@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23->31 [style = bold, label=""];
26->28 [style = solid, label="rule"];
16->3 [style = bold, label=""];
24->28 [style = bold, label=""];
28->29 [style = bold, label=""];
15->10 [style = bold, label=""];
4->14 [style = bold, label=""];
22->15 [style = bold, label=""];
16->2 [style = dotted, label="true"];
8->6 [style = solid, label="rule"];
0->13 [style = dotted, label="true"];
0->13 [style = bold, label=""];
17->18 [style = dotted, label="true"];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
29->30 [style = bold, label=""];
25->22 [style = bold, label=""];
21->8 [style = dotted, label="true"];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
5->13 [style = solid, label="ruleName"];
8->0 [style = solid, label="rule"];
26->23 [style = solid, label="rule"];
30->23 [style = bold, label=""];
18->19 [style = bold, label=""];
30->27 [style = bold, label=""];
1->20 [style = bold, label=""];
32->27 [style = bold, label=""];
12->16 [style = bold, label=""];
16->2 [style = bold, label=""];
30->34 [style = dotted, label="true"];
33->27 [style = bold, label=""];
32->33 [style = bold, label=""];
32->33 [style = dotted, label="true"];
8->10 [style = solid, label="rule"];
20->4 [style = bold, label=""];
14->7 [style = bold, label=""];
31->34 [style = bold, label=""];
9->8 [style = dotted, label="true"];
17->16 [style = dotted, label="true"];
1->22 [style = dashed, label="0"];
7->5 [style = bold, label=""];
23->33 [style = solid, label="converterRule"];
17->12 [style = dotted, label="true"];
5->0 [style = bold, label=""];
20->4 [style = dotted, label="true"];
8->18 [style = solid, label="rule"];
1->15 [style = dotted, label="true"];
6->11 [style = bold, label=""];
15->20 [style = bold, label=""];
21->1 [style = bold, label=""];
15->24 [style = bold, label=""];
18->2 [style = solid, label="converterRule"];
17->19 [style = dotted, label="true"];
30->23 [style = dotted, label="true"];
30->32 [style = dotted, label="true"];
10->4 [style = bold, label=""];
17->3 [style = bold, label=""];
11->17 [style = bold, label=""];
10->20 [style = dashed, label="0"];
34->32 [style = bold, label=""];
2->33 [style = dashed, label="0"];
8->17 [style = solid, label="rule"];
5->0 [style = solid, label="ruleName"];
26->30 [style = solid, label="rule"];
22->24 [style = bold, label=""];
10->4 [style = dotted, label="true"];
13->6 [style = bold, label=""];
34->32 [style = solid, label="ruleTraitDef"];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
12->16 [style = solid, label="ruleTraitDef"];
8->14 [style = solid, label="rule"];
22->15 [style = dotted, label="true"];
1->10 [style = bold, label=""];
25->26 [style = dotted, label="true"];
17->18 [style = bold, label=""];
30->31 [style = dotted, label="true"];
20->11 [style = bold, label=""];
8->26 [style = dashed, label="0"];
}
