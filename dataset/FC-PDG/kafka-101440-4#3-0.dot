digraph {
60 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+YY0\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i++@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "getter.init(driver.context())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@61@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "i < 2@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"1:XX1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 0@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c32d56@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.flushState()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "i < 2@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "i < 2@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "driver.setTime(0L)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "i < 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "driver.flushState()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.flushState()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testOuterJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "driver.flushState()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "joined.process(processor)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final MockProcessorSupplier<Integer,String> processor@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "processor.checkAndClearProcessResult(\"0:null\",\"1:null\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "driver.flushState()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "doTestJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "int i = 0@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(intSerde,stringSerde,stringSerde))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "processor.checkAndClearProcessResult()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testOuterJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "int i = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "driver.flushState()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < 2@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "i++@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "driver.flushState()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->5 [style = bold, label=""];
9->11 [style = bold, label=""];
42->45 [style = bold, label=""];
32->12 [style = bold, label=""];
46->2 [style = bold, label=""];
17->9 [style = bold, label=""];
2->32 [style = dashed, label="0"];
11->64 [style = bold, label=""];
63->71 [style = dotted, label="true"];
5->28 [style = solid, label="builder"];
21->27 [style = dotted, label="true"];
22->36 [style = solid, label="i"];
38->41 [style = bold, label=""];
4->39 [style = dashed, label="0"];
9->10 [style = bold, label=""];
69->68 [style = bold, label=""];
45->31 [style = bold, label=""];
61->64 [style = solid, label="getter"];
7->69 [style = bold, label=""];
31->8 [style = solid, label="processor"];
8->40 [style = bold, label=""];
64->73 [style = bold, label=""];
61->56 [style = solid, label="getter"];
37->42 [style = dashed, label="0"];
56->47 [style = bold, label=""];
23->77 [style = bold, label=""];
30->4 [style = solid, label="stream2"];
23->28 [style = bold, label=""];
85->50 [style = bold, label=""];
58->70 [style = solid, label="i"];
18->49 [style = bold, label=""];
5->0 [style = bold, label=""];
1->78 [style = bold, label=""];
61->54 [style = solid, label="getter"];
0->11 [style = solid, label="expectedKeys"];
36->2 [style = bold, label=""];
36->18 [style = bold, label=""];
4->8 [style = bold, label=""];
43->0 [style = bold, label=""];
77->63 [style = solid, label="i"];
51->71 [style = solid, label="expectedKeys"];
53->60 [style = bold, label=""];
3->30 [style = bold, label=""];
41->42 [style = bold, label=""];
77->15 [style = solid, label="i"];
79->56 [style = bold, label=""];
73->67 [style = bold, label=""];
68->72 [style = bold, label=""];
72->1 [style = bold, label=""];
70->58 [style = dotted, label="true"];
50->70 [style = bold, label=""];
17->11 [style = solid, label="i"];
39->8 [style = bold, label=""];
36->2 [style = dotted, label="true"];
22->2 [style = solid, label="i"];
2->18 [style = bold, label=""];
9->17 [style = bold, label=""];
10->26 [style = bold, label=""];
84->57 [style = bold, label=""];
58->70 [style = bold, label=""];
51->32 [style = solid, label="expectedKeys"];
26->21 [style = solid, label="i"];
25->41 [style = dashed, label="0"];
1->32 [style = dotted, label="true"];
0->38 [style = bold, label=""];
33->23 [style = bold, label=""];
7->24 [style = bold, label=""];
15->9 [style = solid, label="i"];
70->81 [style = bold, label=""];
12->2 [style = solid, label="i"];
15->71 [style = solid, label="i"];
25->37 [style = bold, label=""];
15->9 [style = bold, label=""];
81->58 [style = bold, label=""];
26->27 [style = solid, label="i"];
5->43 [style = dashed, label="0"];
1->32 [style = bold, label=""];
62->48 [style = bold, label=""];
11->17 [style = bold, label=""];
13->15 [style = bold, label=""];
61->52 [style = solid, label="getter"];
31->3 [style = bold, label=""];
20->7 [style = bold, label=""];
50->81 [style = solid, label="i"];
16->20 [style = bold, label=""];
15->11 [style = solid, label="i"];
21->6 [style = dotted, label="true"];
19->33 [style = bold, label=""];
60->54 [style = bold, label=""];
65->48 [style = solid, label="builder"];
72->1 [style = solid, label="i"];
62->66 [style = dotted, label="true"];
61->59 [style = solid, label="getter"];
55->32 [style = solid, label="i"];
36->22 [style = dotted, label="true"];
78->46 [style = bold, label=""];
9->11 [style = dotted, label="true"];
21->34 [style = bold, label=""];
12->36 [style = bold, label=""];
43->28 [style = solid, label="builder"];
48->84 [style = bold, label=""];
77->63 [style = bold, label=""];
1->55 [style = dotted, label="true"];
71->15 [style = bold, label=""];
67->6 [style = bold, label=""];
51->81 [style = solid, label="expectedKeys"];
63->71 [style = bold, label=""];
70->76 [style = bold, label=""];
50->58 [style = solid, label="i"];
62->75 [style = dotted, label="true"];
62->65 [style = dotted, label="true"];
16->73 [style = dashed, label="0"];
76->33 [style = bold, label=""];
82->83 [style = bold, label=""];
26->21 [style = bold, label=""];
35->25 [style = bold, label=""];
83->80 [style = bold, label=""];
6->27 [style = bold, label=""];
40->33 [style = bold, label=""];
61->2 [style = solid, label="getter"];
26->6 [style = solid, label="i"];
49->79 [style = bold, label=""];
34->16 [style = bold, label=""];
15->63 [style = solid, label="i"];
14->31 [style = bold, label=""];
14->45 [style = dashed, label="0"];
57->82 [style = bold, label=""];
24->1 [style = bold, label=""];
12->36 [style = solid, label="i"];
47->52 [style = bold, label=""];
6->59 [style = bold, label=""];
27->21 [style = bold, label=""];
19->40 [style = dashed, label="0"];
70->81 [style = dotted, label="true"];
50->70 [style = solid, label="i"];
5->19 [style = solid, label="builder"];
61->85 [style = bold, label=""];
63->9 [style = bold, label=""];
58->81 [style = solid, label="i"];
43->40 [style = solid, label="builder"];
21->6 [style = bold, label=""];
27->6 [style = solid, label="i"];
8->19 [style = bold, label=""];
55->1 [style = solid, label="i"];
80->61 [style = bold, label=""];
12->22 [style = solid, label="i"];
9->17 [style = dotted, label="true"];
63->15 [style = dotted, label="true"];
28->13 [style = bold, label=""];
54->20 [style = bold, label=""];
0->2 [style = solid, label="expectedKeys"];
59->74 [style = bold, label=""];
35->38 [style = dashed, label="0"];
17->9 [style = solid, label="i"];
72->55 [style = solid, label="i"];
44->43 [style = bold, label=""];
74->53 [style = bold, label=""];
1->20 [style = dashed, label="0"];
15->17 [style = solid, label="i"];
61->68 [style = solid, label="getter"];
62->51 [style = dotted, label="true"];
37->14 [style = bold, label=""];
32->55 [style = bold, label=""];
65->83 [style = solid, label="builder"];
5->48 [style = dashed, label="0"];
30->4 [style = bold, label=""];
22->36 [style = bold, label=""];
55->1 [style = bold, label=""];
0->35 [style = bold, label=""];
30->39 [style = bold, label=""];
77->71 [style = solid, label="i"];
30->39 [style = solid, label="stream2"];
2->22 [style = bold, label=""];
0->6 [style = solid, label="expectedKeys"];
27->21 [style = solid, label="i"];
15->63 [style = bold, label=""];
72->32 [style = solid, label="i"];
17->11 [style = bold, label=""];
}
