digraph {
22 [style = filled, label = "testReplaceRegex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "!hasRegex(\"testReplaceRegex\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertStringContains(contents,\"moon Sun Sun\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertStringContains(contents,\"hello world\")@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertStringNotContains(contents,\"This is a line with digits\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertStringContains(contents,\"world world world world\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertContains(\"World here\",contents)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertNotContains(\"this is the moon\",contents)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "String contents = getFileString(\"filtercontainsregex\",getProject().getProperty(\"output\") + \"/filtercontainsregex\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "buildRule.executeTarget(\"filtercontainsregex\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/filtercontainsregex\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertStringContains(contents,\"dog Cat dog\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String contents = getFileString(\"replaceregex\",getProject().getProperty(\"output\") + \"/replaceregex\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertStringContains(contents,\"found WhiteSpace\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertStringContains(contents,\"World here\")@@@7@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "return@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "!hasRegex(\"testFilterContainsRegex\")@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertContains(\"hello world\",contents)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertStringContains(contents,\"Found digits (1234(\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assume.assumeTrue(\"Regex not present\",getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testFilterContainsRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "buildRule.executeTarget(\"hasregex\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertStringNotContains(contents,\"this is the moon\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testFilterContainsRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->13 [style = dashed, label="0"];
23->20 [style = bold, label=""];
2->19 [style = dashed, label="0"];
18->17 [style = solid, label="contents"];
10->8 [style = solid, label="contents"];
10->12 [style = solid, label="contents"];
4->17 [style = dashed, label="0"];
5->2 [style = solid, label="contents"];
7->12 [style = bold, label=""];
2->6 [style = bold, label=""];
18->24 [style = solid, label="contents"];
1->3 [style = bold, label=""];
18->19 [style = bold, label=""];
18->19 [style = solid, label="contents"];
5->6 [style = solid, label="contents"];
18->21 [style = solid, label="contents"];
9->10 [style = bold, label=""];
5->18 [style = dashed, label="0"];
10->7 [style = bold, label=""];
22->23 [style = bold, label=""];
3->0 [style = bold, label=""];
20->18 [style = bold, label=""];
3->23 [style = dashed, label="0"];
24->16 [style = bold, label=""];
6->4 [style = bold, label=""];
23->20 [style = dotted, label="true"];
3->5 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
17->24 [style = bold, label=""];
6->15 [style = dashed, label="0"];
12->8 [style = bold, label=""];
16->21 [style = bold, label=""];
11->13 [style = bold, label=""];
3->0 [style = dotted, label="true"];
18->16 [style = solid, label="contents"];
13->9 [style = bold, label=""];
19->15 [style = bold, label=""];
18->15 [style = solid, label="contents"];
14->11 [style = bold, label=""];
23->18 [style = bold, label=""];
5->4 [style = solid, label="contents"];
10->7 [style = solid, label="contents"];
0->5 [style = bold, label=""];
}
