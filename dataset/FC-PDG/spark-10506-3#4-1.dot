digraph {
15 [style = filled, label = "SQLContext sqlContext = new SQLContext(jsc)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StringIndexerModel labelIndexer = new StringIndexer().setInputCol(\"label\").setOutputCol(\"indexedLabel\").fit(data)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Dataset<Row> testData = splits(1(@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Dataset<Row> data = sqlContext.read().format(\"libsvm\").load(\"data/mllib/sample_libsvm_data.txt\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "JavaSparkContext jsc = new JavaSparkContext(conf)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Pipeline pipeline = new Pipeline().setStages(new PipelineStage((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6ae53)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RandomForestClassifier rf = new RandomForestClassifier().setLabelCol(\"indexedLabel\").setFeaturesCol(\"indexedFeatures\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "System.out.println(\"Learned classification tree model:\" + treeModel.toDebugString())@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Dataset<Row> data = spark.read().format(\"libsvm\").load(\"data/mllib/sample_libsvm_data.txt\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "spark.stop()@@@25@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "VectorIndexerModel featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(4).fit(data)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Dataset<Row>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6ad3a)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "System.out.println(\"Learned classification forest model:\" + rfModel.toDebugString())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MulticlassClassificationEvaluator evaluator = new MulticlassClassificationEvaluator().setLabelCol(\"indexedLabel\").setPredictionCol(\"prediction\").setMetricName(\"precision\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Pipeline pipeline = new Pipeline().setStages(new PipelineStage((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6ad72)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "PipelineModel model = pipeline.fit(trainingData)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"JavaRandomForestClassifierExample\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"JavaDecisionTreeClassificationExample\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Dataset<Row> predictions = model.transform(testData)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "StringIndexerModel labelIndexer = new StringIndexer().setInputCol(\"label\").setOutputCol(\"indexedLabel\").fit(data)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "RandomForestClassificationModel rfModel = (RandomForestClassificationModel)(model.stages()(2()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "predictions.select(\"predictedLabel\",\"label\",\"features\").show(5)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Dataset<Row> predictions = model.transform(testData)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SparkSession spark = SparkSession.builder().appName(\"JavaDecisionTreeClassificationExample\").getOrCreate()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "double accuracy = evaluator.evaluate(predictions)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Dataset<Row> trainingData = splits(0(@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Dataset<Row> trainingData = splits(0(@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "PipelineModel model = pipeline.fit(trainingData)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IndexToString labelConverter = new IndexToString().setInputCol(\"prediction\").setOutputCol(\"predictedLabel\").setLabels(labelIndexer.labels())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Dataset<Row>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6af07)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "jsc.stop()@@@27@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Dataset<Row> data = sqlContext.read().format(\"libsvm\").load(\"data/mllib/sample_libsvm_data.txt\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "VectorIndexerModel featureIndexer = new VectorIndexer().setInputCol(\"features\").setOutputCol(\"indexedFeatures\").setMaxCategories(4).fit(data)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Dataset<Row> testData = splits(1(@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Pipeline pipeline = new Pipeline().setStages(new PipelineStage((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a6af3f)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "System.out.println(\"Test Error = \" + (1.0 - accuracy))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->26 [style = bold, label=""];
23->31 [style = solid, label="data"];
20->0 [style = bold, label=""];
8->35 [style = dashed, label="0"];
10->35 [style = bold, label=""];
37->9 [style = solid, label="data"];
14->17 [style = bold, label=""];
3->16 [style = bold, label=""];
21->14 [style = solid, label="splits"];
12->9 [style = bold, label=""];
30->29 [style = bold, label=""];
22->4 [style = bold, label=""];
28->2 [style = solid, label="featureIndexer"];
6->12 [style = solid, label="data"];
6->9 [style = solid, label="data"];
10->8 [style = bold, label=""];
14->2 [style = solid, label="dt"];
9->21 [style = bold, label=""];
12->36 [style = solid, label="labelIndexer"];
32->14 [style = solid, label="splits"];
35->38 [style = bold, label=""];
19->15 [style = bold, label=""];
19->15 [style = solid, label="jsc"];
33->7 [style = bold, label=""];
12->24 [style = solid, label="splits"];
9->36 [style = solid, label="featureIndexer"];
11->8 [style = dashed, label="0"];
34->19 [style = bold, label=""];
25->0 [style = solid, label="predictions"];
38->11 [style = bold, label=""];
3->36 [style = dashed, label="0"];
39->34 [style = bold, label=""];
18->10 [style = solid, label="accuracy"];
4->19 [style = bold, label=""];
9->32 [style = bold, label=""];
29->23 [style = bold, label=""];
6->37 [style = dashed, label="0"];
9->3 [style = solid, label="featureIndexer"];
21->32 [style = dashed, label="0"];
2->3 [style = solid, label="dt"];
17->2 [style = bold, label=""];
22->13 [style = dotted, label="true"];
4->34 [style = dashed, label="0"];
20->18 [style = solid, label="predictions"];
36->16 [style = bold, label=""];
17->20 [style = solid, label="testData"];
5->38 [style = dashed, label="0"];
5->11 [style = bold, label=""];
2->33 [style = dashed, label="0"];
31->28 [style = bold, label=""];
23->28 [style = solid, label="data"];
0->1 [style = solid, label="accuracy"];
16->20 [style = bold, label=""];
34->19 [style = solid, label="conf"];
23->31 [style = bold, label=""];
7->3 [style = solid, label="labelConverter"];
32->17 [style = solid, label="splits"];
31->2 [style = solid, label="labelIndexer"];
32->14 [style = bold, label=""];
28->12 [style = bold, label=""];
25->16 [style = bold, label=""];
27->26 [style = solid, label="trainingData"];
37->12 [style = bold, label=""];
37->12 [style = solid, label="data"];
30->13 [style = dotted, label="true"];
18->10 [style = bold, label=""];
17->2 [style = solid, label="labelConverter"];
0->1 [style = bold, label=""];
24->25 [style = solid, label="testData"];
39->13 [style = dotted, label="true"];
27->24 [style = bold, label=""];
15->37 [style = bold, label=""];
12->27 [style = bold, label=""];
7->36 [style = bold, label=""];
21->14 [style = bold, label=""];
6->12 [style = bold, label=""];
21->17 [style = solid, label="splits"];
26->25 [style = bold, label=""];
7->36 [style = solid, label="labelConverter"];
1->18 [style = bold, label=""];
15->6 [style = bold, label=""];
17->33 [style = bold, label=""];
7->3 [style = bold, label=""];
24->14 [style = bold, label=""];
12->27 [style = solid, label="splits"];
8->5 [style = bold, label=""];
4->19 [style = solid, label="conf"];
33->36 [style = solid, label="rf"];
12->3 [style = solid, label="labelIndexer"];
2->7 [style = bold, label=""];
4->29 [style = dashed, label="0"];
14->16 [style = solid, label="trainingData"];
}
