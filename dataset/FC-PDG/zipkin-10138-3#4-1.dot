digraph {
2 [style = filled, label = "assertThat(new DependencyLinker(logger).putTrace(trace).link()).isEmpty()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "doesntLinkUnrelatedSpansWhenMissingRootSpan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Span> trace = asList(span2(\"a\",missingParentId,\"b\",Kind.SERVER,\"service1\",null,false),span2(\"a\",\"b\",\"c\",Kind.SERVER,\"service2\",null,false))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "linksRelatedSpansWhenMissingRootSpan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<Span> trace = asList(span(\"a\",missingParentId,\"b\",Kind.SERVER,\"service1\",null,false),span(\"a\",missingParentId,\"c\",Kind.SERVER,\"service2\",null,false))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String missingParentId = \"a\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<Span> trace = asList(span2(\"a\",missingParentId,\"b\",Kind.SERVER,\"service1\",null,false),span2(\"a\",missingParentId,\"c\",Kind.SERVER,\"service2\",null,false))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(new DependencyLinker(logger).putTrace(trace).link()).containsOnly(DependencyLink.newBuilder().parent(\"service1\").child(\"service2\").callCount(1L).build())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "doesntLinkUnrelatedSpansWhenMissingRootSpan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
6->8 [style = bold, label=""];
3->5 [style = dashed, label="0"];
5->2 [style = bold, label=""];
7->0 [style = bold, label=""];
3->6 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
0->6 [style = solid, label="missingParentId"];
0->6 [style = bold, label=""];
2->8 [style = dashed, label="0"];
0->5 [style = solid, label="missingParentId"];
0->3 [style = solid, label="missingParentId"];
4->0 [style = bold, label=""];
0->5 [style = bold, label=""];
}
