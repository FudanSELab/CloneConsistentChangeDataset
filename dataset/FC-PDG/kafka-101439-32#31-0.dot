digraph {
67 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(1(,null,7L))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,null,7L)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertNull(driver.readOutput(output))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey,expectedKey * 5L))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXXX\" + expectedKey,13L))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i(,10L * i))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(1(,null,42L))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertNull(driver.readOutput(output))@@@62@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i < 2@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXXX3+YY3\",15L)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertNull(driver.readOutput(output))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey,7L))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,null,6L)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(0(,null,0L))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+YY1\",7L)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",0),new KeyValueTimestamp<>(0,\"B0+c0\",0),new KeyValueTimestamp<>(0,\"C0+c0\",0),new KeyValueTimestamp<>(1,\"A1+c1\",0),new KeyValueTimestamp<>(1,\"B1+c1\",0),new KeyValueTimestamp<>(1,\"C1+c1\",0))@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",0),new KeyValueTimestamp<>(0,\"B0+b0\",0),new KeyValueTimestamp<>(1,\"A1+b1\",0),new KeyValueTimestamp<>(1,\"B1+b1\",0),new KeyValueTimestamp<>(2,\"B2+b2\",0),new KeyValueTimestamp<>(3,\"B3+b3\",0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "doTestJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i(,5L + i))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,null,20L)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(0(,null,5L))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertNull(driver.readOutput(output))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNull(driver.readOutput(output))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+YY3\",15L)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+YY0\",7L)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,null,10L)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXX\" + expectedKey,6L))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+Y0\",7L)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+Y1\",10L)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertNull(driver.readOutput(output))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+YY0\",6L)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+YY1\",6L)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c3de41@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\",42L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+Y0\",5L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertNull(driver.readOutput(output))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXXX2+YY2\",13L)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "int i = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"B\" + expectedKey))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i++@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"B0+a0\",0),new KeyValueTimestamp<>(1,\"B1+a1\",0))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(driver.readOutput(output))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "i < 2@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+YY2\",10L)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXX2+YY2\",10L)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(3(,null,20L))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\",73L))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < 2@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(2(,null,5L))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"C0+a0\",0),new KeyValueTimestamp<>(0,\"C0+b0\",0),new KeyValueTimestamp<>(1,\"C1+a1\",0),new KeyValueTimestamp<>(1,\"C1+b1\",0),new KeyValueTimestamp<>(2,\"C2+b2\",0),new KeyValueTimestamp<>(3,\"C3+b3\",0))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+Y1\",10L)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXX3+YY3\",15L)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->33 [style = solid, label="i"];
6->3 [style = bold, label=""];
76->70 [style = solid, label="expectedKeys"];
25->1 [style = bold, label=""];
34->9 [style = bold, label=""];
61->52 [style = solid, label="i"];
57->62 [style = bold, label=""];
57->52 [style = dotted, label="true"];
35->10 [style = dotted, label="true"];
26->34 [style = bold, label=""];
10->35 [style = bold, label=""];
61->57 [style = bold, label=""];
36->12 [style = bold, label=""];
16->66 [style = bold, label=""];
5->35 [style = solid, label="i"];
76->45 [style = solid, label="expectedKeys"];
32->14 [style = solid, label="stream2"];
77->70 [style = bold, label=""];
59->78 [style = bold, label=""];
3->27 [style = bold, label=""];
48->51 [style = bold, label=""];
28->21 [style = bold, label=""];
23->22 [style = bold, label=""];
2->31 [style = solid, label="i"];
45->68 [style = bold, label=""];
76->15 [style = solid, label="expectedKeys"];
24->11 [style = bold, label=""];
66->64 [style = bold, label=""];
76->67 [style = solid, label="expectedKeys"];
15->0 [style = bold, label=""];
2->15 [style = bold, label=""];
23->12 [style = solid, label="supplier"];
10->33 [style = solid, label="i"];
16->4 [style = solid, label="i"];
30->8 [style = bold, label=""];
31->20 [style = bold, label=""];
53->60 [style = bold, label=""];
6->3 [style = dotted, label="true"];
21->64 [style = dashed, label="0"];
28->65 [style = bold, label=""];
4->16 [style = bold, label=""];
2->31 [style = bold, label=""];
13->3 [style = solid, label="i"];
19->18 [style = bold, label=""];
65->73 [style = bold, label=""];
54->15 [style = solid, label="i"];
37->1 [style = bold, label=""];
40->74 [style = bold, label=""];
9->17 [style = bold, label=""];
22->32 [style = bold, label=""];
31->2 [style = bold, label=""];
20->19 [style = solid, label="i"];
16->19 [style = bold, label=""];
35->33 [style = dotted, label="true"];
71->75 [style = bold, label=""];
58->54 [style = bold, label=""];
64->6 [style = bold, label=""];
46->63 [style = bold, label=""];
7->24 [style = bold, label=""];
16->19 [style = solid, label="i"];
26->33 [style = solid, label="expectedKeys"];
19->4 [style = dotted, label="true"];
31->15 [style = dotted, label="true"];
3->15 [style = dashed, label="0"];
21->7 [style = bold, label=""];
32->36 [style = bold, label=""];
0->20 [style = bold, label=""];
4->52 [style = dashed, label="0"];
35->43 [style = dashed, label="0"];
20->19 [style = bold, label=""];
56->40 [style = bold, label=""];
50->41 [style = bold, label=""];
5->10 [style = solid, label="i"];
76->63 [style = solid, label="expectedKeys"];
11->30 [style = bold, label=""];
12->31 [style = bold, label=""];
42->38 [style = bold, label=""];
13->6 [style = solid, label="i"];
35->29 [style = bold, label=""];
61->57 [style = solid, label="i"];
47->56 [style = bold, label=""];
76->77 [style = solid, label="expectedKeys"];
52->61 [style = bold, label=""];
55->69 [style = bold, label=""];
10->35 [style = solid, label="i"];
51->77 [style = bold, label=""];
44->72 [style = bold, label=""];
44->39 [style = dotted, label="true"];
32->14 [style = bold, label=""];
74->48 [style = bold, label=""];
17->23 [style = bold, label=""];
49->50 [style = bold, label=""];
24->28 [style = dashed, label="0"];
19->16 [style = bold, label=""];
30->75 [style = dashed, label="0"];
6->27 [style = bold, label=""];
57->61 [style = dotted, label="true"];
3->28 [style = bold, label=""];
43->5 [style = bold, label=""];
44->76 [style = dotted, label="true"];
20->16 [style = solid, label="i"];
13->27 [style = solid, label="i"];
54->31 [style = solid, label="i"];
63->67 [style = bold, label=""];
31->2 [style = dotted, label="true"];
76->52 [style = solid, label="expectedKeys"];
20->4 [style = solid, label="i"];
26->3 [style = solid, label="expectedKeys"];
13->6 [style = bold, label=""];
6->27 [style = dotted, label="true"];
60->43 [style = bold, label=""];
5->35 [style = bold, label=""];
70->45 [style = bold, label=""];
15->2 [style = bold, label=""];
72->49 [style = bold, label=""];
41->61 [style = solid, label="i"];
27->6 [style = solid, label="i"];
41->57 [style = solid, label="i"];
27->3 [style = bold, label=""];
54->2 [style = solid, label="i"];
35->33 [style = bold, label=""];
62->58 [style = bold, label=""];
76->51 [style = solid, label="expectedKeys"];
33->10 [style = bold, label=""];
1->26 [style = bold, label=""];
14->36 [style = dashed, label="0"];
32->36 [style = solid, label="stream2"];
41->57 [style = bold, label=""];
31->15 [style = bold, label=""];
27->6 [style = bold, label=""];
2->15 [style = solid, label="i"];
57->52 [style = bold, label=""];
73->42 [style = bold, label=""];
67->55 [style = bold, label=""];
8->5 [style = bold, label=""];
54->31 [style = bold, label=""];
26->4 [style = solid, label="expectedKeys"];
41->52 [style = solid, label="i"];
14->12 [style = bold, label=""];
68->59 [style = bold, label=""];
69->47 [style = bold, label=""];
18->13 [style = bold, label=""];
19->16 [style = dotted, label="true"];
19->4 [style = bold, label=""];
75->53 [style = bold, label=""];
5->46 [style = bold, label=""];
27->3 [style = solid, label="i"];
6->28 [style = bold, label=""];
38->71 [style = bold, label=""];
}
