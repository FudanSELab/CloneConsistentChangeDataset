digraph {
21 [style = filled, label = "multi(zk_chroot,ops)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "multi(zk,ops)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "i < names.length@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i < names.length@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertArrayEquals(names(i(.getBytes(),zk.getData(names(i(,false,null))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "multi(zk,ops)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "testSetData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<Op> ops = new ArrayList<Op>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "zk.create(chRoot + names(i(,new byte((((,Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "zk_chroot = createClient(this.hostPort + chRoot)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int i = 0@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < names.length@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String chRoot = createNameSpace()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testChRootCheck['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSetData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String(( names = {\"/multi0\",\"/multi1\",\"/multi2\"}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Op> ops = new ArrayList<Op>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String(( names = {\"/multi0\",\"/multi1\",\"/multi2\"}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ops.add(Op.check(names(i(,0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i++@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->12 [style = solid, label="names"];
16->21 [style = solid, label="zk_chroot"];
4->6 [style = dotted, label="true"];
4->21 [style = solid, label="ops"];
4->3 [style = bold, label=""];
4->5 [style = dotted, label="true"];
10->6 [style = solid, label="names"];
4->14 [style = bold, label=""];
15->10 [style = bold, label=""];
8->0 [style = solid, label="i"];
22->19 [style = solid, label="names"];
9->0 [style = dotted, label="true"];
12->5 [style = bold, label=""];
9->0 [style = bold, label=""];
11->4 [style = solid, label="i"];
1->17 [style = dotted, label="true"];
19->12 [style = bold, label=""];
12->19 [style = solid, label="i"];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
0->1 [style = solid, label="i"];
5->4 [style = solid, label="i"];
1->9 [style = solid, label="i"];
11->4 [style = bold, label=""];
18->16 [style = solid, label="chRoot"];
22->17 [style = solid, label="names"];
10->13 [style = solid, label="names"];
6->19 [style = bold, label=""];
16->22 [style = bold, label=""];
11->5 [style = solid, label="i"];
12->6 [style = bold, label=""];
8->9 [style = solid, label="i"];
2->14 [style = solid, label="ops"];
6->19 [style = dotted, label="true"];
13->1 [style = bold, label=""];
1->9 [style = bold, label=""];
1->17 [style = bold, label=""];
10->0 [style = solid, label="names"];
22->4 [style = bold, label=""];
8->13 [style = solid, label="i"];
20->18 [style = bold, label=""];
8->1 [style = bold, label=""];
1->0 [style = solid, label="i"];
12->6 [style = solid, label="i"];
0->17 [style = solid, label="i"];
11->6 [style = solid, label="i"];
17->0 [style = bold, label=""];
18->19 [style = solid, label="chRoot"];
5->6 [style = bold, label=""];
11->12 [style = solid, label="i"];
1->21 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
8->1 [style = solid, label="i"];
9->13 [style = dotted, label="true"];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
0->13 [style = dashed, label="0"];
6->19 [style = dashed, label="0"];
8->9 [style = bold, label=""];
9->1 [style = dotted, label="true"];
5->19 [style = solid, label="i"];
2->3 [style = solid, label="ops"];
8->17 [style = solid, label="i"];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
6->12 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
3->14 [style = dashed, label="0"];
4->12 [style = dotted, label="true"];
4->5 [style = bold, label=""];
5->6 [style = solid, label="i"];
2->11 [style = bold, label=""];
6->12 [style = bold, label=""];
5->12 [style = solid, label="i"];
1->13 [style = solid, label="i"];
9->13 [style = bold, label=""];
18->16 [style = bold, label=""];
}
