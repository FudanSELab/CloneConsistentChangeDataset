digraph {
30 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' is not a valid integer.\",expression,workersStr))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'sort' parameter telling us how to join the parallel streams but didn't find one\",expression))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "init(zkHost,collectionName,stream,workersInt,comp)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "null == collectionName@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "zkHostExpression.getParameter() instanceof StreamExpressionValue@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workersParam' parameter of type positive integer but didn't find one\",expression))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "StreamExpressionNamedParameter workersParam = factory.getNamedOperand(expression,\"workers\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - collectionName expected as first operand\",expression))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "null == zkHostExpression@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'n' parameter of type positive integer but didn't find one\",expression))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "nInt <= 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "workersInt <= 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "NumberFormatException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int workersInt = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - zkHost not found for collection '%s'\",expression,collectionName))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "streamFactory = factory@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ParallelStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "int nInt = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 3 + (null != zkHostExpression? 1: 0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 2@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "zkHost = ((StreamExpressionValue)zkHostExpression.getParameter()).getValue()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' must be greater than 0.\",expression,workersStr))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String zkHost = null@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "null == workersParam || null == workersParam.getParameter() || !(workersParam.getParameter() instanceof StreamExpressionValue)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "null == nParam || null == nParam.getParameter() || !(nParam.getParameter() instanceof StreamExpressionValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "zkHost = factory.getDefaultZkHost()@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ParallelStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "zkHost == null@@@37@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "init(stream,nInt,comp)@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "workersInt = Integer.parseInt(workersStr)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "StreamExpressionNamedParameter zkHostExpression = factory.getNamedOperand(expression,\"zkHost\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "1 != streamExpressions.size()@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String workersStr = ((StreamExpressionValue)workersParam.getParameter()).getValue()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String collectionName = factory.getValueOperand(expression,0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "zkHost = factory.getCollectionZkHost(collectionName)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "null == zkHost@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "RankStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
56->47 [style = solid, label="expression"];
3->10 [style = bold, label=""];
8->14 [style = bold, label=""];
26->17 [style = bold, label=""];
29->19 [style = bold, label=""];
22->14 [style = solid, label="workersStr"];
37->16 [style = solid, label="expression"];
39->38 [style = dotted, label="true"];
7->29 [style = solid, label="expression"];
17->50 [style = bold, label=""];
3->15 [style = solid, label="zkHost"];
16->0 [style = bold, label=""];
9->52 [style = solid, label="stream"];
50->51 [style = bold, label=""];
6->25 [style = solid, label="comp"];
37->28 [style = solid, label="expression"];
31->25 [style = solid, label="collectionName"];
34->20 [style = bold, label=""];
31->16 [style = solid, label="collectionName"];
18->28 [style = bold, label=""];
47->30 [style = bold, label=""];
53->43 [style = bold, label=""];
28->22 [style = bold, label=""];
24->4 [style = solid, label="factory"];
15->0 [style = bold, label=""];
2->25 [style = solid, label="zkHost"];
33->23 [style = bold, label=""];
44->30 [style = bold, label=""];
37->17 [style = solid, label="expression"];
34->20 [style = dotted, label="true"];
15->16 [style = bold, label=""];
43->17 [style = bold, label=""];
49->56 [style = dotted, label="true"];
37->23 [style = solid, label="expression"];
30->35 [style = bold, label=""];
3->25 [style = solid, label="zkHost"];
31->33 [style = bold, label=""];
48->43 [style = solid, label="nParam"];
42->44 [style = bold, label=""];
37->29 [style = solid, label="expression"];
37->20 [style = solid, label="expression"];
23->29 [style = bold, label=""];
7->17 [style = solid, label="expression"];
50->45 [style = solid, label="nStr"];
56->45 [style = solid, label="expression"];
2->39 [style = solid, label="zkHost"];
43->17 [style = dotted, label="true"];
37->14 [style = solid, label="expression"];
43->50 [style = bold, label=""];
20->18 [style = bold, label=""];
8->42 [style = dashed, label="0"];
9->1 [style = dotted, label="true"];
13->31 [style = bold, label=""];
13->24 [style = dotted, label="true"];
56->48 [style = solid, label="expression"];
56->23 [style = solid, label="expression"];
14->45 [style = dashed, label="0"];
5->40 [style = dashed, label="0"];
29->32 [style = solid, label="sortExpression"];
1->52 [style = bold, label=""];
23->30 [style = solid, label="sortExpression"];
22->12 [style = solid, label="workersStr"];
7->1 [style = solid, label="expression"];
27->11 [style = dotted, label="true"];
19->26 [style = bold, label=""];
7->23 [style = solid, label="expression"];
37->5 [style = solid, label="expression"];
12->8 [style = solid, label="workersInt"];
37->19 [style = solid, label="expression"];
56->40 [style = solid, label="expression"];
39->15 [style = bold, label=""];
23->53 [style = bold, label=""];
2->15 [style = solid, label="zkHost"];
22->21 [style = bold, label=""];
9->32 [style = bold, label=""];
55->52 [style = solid, label="nInt"];
12->55 [style = dashed, label="0"];
24->56 [style = dashed, label="0"];
35->9 [style = bold, label=""];
57->48 [style = bold, label=""];
32->5 [style = dotted, label="true"];
56->57 [style = solid, label="expression"];
55->42 [style = solid, label="nInt"];
26->17 [style = dotted, label="true"];
1->32 [style = bold, label=""];
30->40 [style = dotted, label="true"];
0->6 [style = bold, label=""];
38->15 [style = bold, label=""];
10->39 [style = dotted, label="true"];
6->4 [style = bold, label=""];
45->44 [style = bold, label=""];
34->43 [style = dashed, label="0"];
33->18 [style = solid, label="workersParam"];
2->39 [style = bold, label=""];
18->22 [style = bold, label=""];
0->25 [style = solid, label="stream"];
4->25 [style = bold, label=""];
7->31 [style = solid, label="expression"];
37->1 [style = solid, label="expression"];
14->9 [style = bold, label=""];
27->15 [style = bold, label=""];
11->15 [style = bold, label=""];
46->54 [style = dotted, label="true"];
37->31 [style = solid, label="expression"];
27->11 [style = bold, label=""];
20->17 [style = dashed, label="0"];
37->33 [style = solid, label="expression"];
11->15 [style = solid, label="zkHost"];
53->29 [style = bold, label=""];
7->33 [style = solid, label="expression"];
26->34 [style = bold, label=""];
44->47 [style = bold, label=""];
7->14 [style = solid, label="expression"];
18->28 [style = dotted, label="true"];
7->16 [style = solid, label="expression"];
7->28 [style = solid, label="expression"];
51->55 [style = bold, label=""];
40->9 [style = bold, label=""];
15->16 [style = dotted, label="true"];
5->3 [style = bold, label=""];
12->8 [style = bold, label=""];
56->29 [style = solid, label="expression"];
10->27 [style = dotted, label="false"];
35->54 [style = dashed, label="0"];
36->24 [style = dotted, label="true"];
31->2 [style = solid, label="collectionName"];
31->34 [style = solid, label="collectionName"];
12->25 [style = solid, label="workersInt"];
42->45 [style = bold, label=""];
10->2 [style = dotted, label="true"];
34->18 [style = bold, label=""];
1->52 [style = solid, label="comp"];
49->41 [style = dotted, label="true"];
8->9 [style = bold, label=""];
10->2 [style = bold, label=""];
53->29 [style = dotted, label="true"];
42->45 [style = dotted, label="true"];
32->5 [style = bold, label=""];
55->42 [style = bold, label=""];
30->9 [style = bold, label=""];
39->38 [style = bold, label=""];
7->5 [style = solid, label="expression"];
10->27 [style = bold, label=""];
46->54 [style = bold, label=""];
30->35 [style = dotted, label="true"];
19->10 [style = solid, label="zkHostExpression"];
21->12 [style = bold, label=""];
54->44 [style = bold, label=""];
38->25 [style = solid, label="zkHost"];
29->43 [style = bold, label=""];
36->37 [style = dotted, label="true"];
50->55 [style = solid, label="nStr"];
44->47 [style = dotted, label="true"];
19->26 [style = solid, label="zkHostExpression"];
49->57 [style = bold, label=""];
36->31 [style = bold, label=""];
7->19 [style = solid, label="expression"];
38->15 [style = solid, label="zkHost"];
56->17 [style = solid, label="expression"];
7->20 [style = solid, label="expression"];
32->3 [style = bold, label=""];
48->23 [style = bold, label=""];
4->52 [style = dashed, label="0"];
8->14 [style = dotted, label="true"];
30->40 [style = bold, label=""];
17->34 [style = bold, label=""];
11->25 [style = solid, label="zkHost"];
9->1 [style = bold, label=""];
13->7 [style = dotted, label="true"];
2->15 [style = bold, label=""];
}
