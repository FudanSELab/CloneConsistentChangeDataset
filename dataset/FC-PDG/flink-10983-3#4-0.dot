digraph {
33 [style = filled, label = "testCorrectTimestampPassingInContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNull(\"The in-progress part of test1 should be rolled\",test1Bucket.getInProgressPart())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final File outDir = TEMP_FOLDER.newFolder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "FileWriterBucket<String> test2Bucket = fileWriter.getActiveBuckets().get(\"test2\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Path path = new Path(outDir.toURI())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fileWriter.prepareCommit(false)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "fileWriter.write(\"test2\",new ContextImpl())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testOnProcessingTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "FileWriter<String> fileWriter = createWriter(path,new FileSinkTestUtils.StringIdentityBucketAssigner(),DefaultRollingPolicy.builder().withRolloverInterval(10).build(),new OutputFileConfig(\"part-\",\"\"),processingTimeService,5)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNotNull(\"The in-progress part of test2 should not be rolled\",test2Bucket.getInProgressPart())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "FileWriter<String> fileWriter = createWriter(path,new VerifyingBucketAssigner(timestamp,watermark,processingTime),DefaultRollingPolicy.builder().withRolloverInterval(10).build(),new OutputFileConfig(\"part-\",\"\"),processingTimeService,5)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Long timestamp@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNull(\"The in-progress part of test1 should be rolled\",test1Bucket.getInProgressPart())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "processingTimeService.advanceTo(15)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "test1Bucket = fileWriter.getActiveBuckets().get(\"test1\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processingTimeService.advanceTo(40)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,test1Bucket.getPendingFiles().size())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ManuallyTriggeredProcessingTimeService processingTimeService = new ManuallyTriggeredProcessingTimeService()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "File outDir = TEMP_FOLDER.newFolder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "processingTimeService.advanceTo(20)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "long processingTime@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fileWriter.write(\"test2\",new ContextImpl())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Path path = new Path(outDir.toURI())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(1,test1Bucket.getPendingFiles().size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "test2Bucket = fileWriter.getActiveBuckets().get(\"test2\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "long watermark@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "fileWriter.write(\"test1\",new ContextImpl())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "processingTimeService.advanceTo(10)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processingTimeService.advanceTo(35)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "FileWriterBucket<String> test1Bucket = fileWriter.getActiveBuckets().get(\"test1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "fileWriter.write(\"test\",new ContextImpl(watermark,timestamp))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "processingTimeService.advanceTo(processingTime)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertNotNull(\"The in-progress part of test2 should not be rolled\",test2Bucket.getInProgressPart())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "fileWriter.initializeState(Collections.emptyList())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "fileWriter.write(\"test1\",new ContextImpl())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testOnProcessingTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,test2Bucket.getPendingFiles().size())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "processingTimeService.advanceTo(30)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,test2Bucket.getPendingFiles().size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
27->14 [style = bold, label=""];
11->22 [style = bold, label=""];
32->38 [style = solid, label="watermark"];
20->3 [style = bold, label=""];
36->34 [style = solid, label="processingTime"];
1->9 [style = bold, label=""];
33->31 [style = bold, label=""];
30->18 [style = bold, label=""];
18->24 [style = bold, label=""];
33->32 [style = dotted, label="true"];
24->15 [style = bold, label=""];
28->26 [style = bold, label=""];
26->4 [style = bold, label=""];
8->21 [style = bold, label=""];
36->37 [style = solid, label="processingTime"];
4->1 [style = bold, label=""];
6->2 [style = bold, label=""];
8->38 [style = bold, label=""];
7->13 [style = bold, label=""];
5->15 [style = solid, label="path"];
2->19 [style = bold, label=""];
37->34 [style = bold, label=""];
21->38 [style = dashed, label="0"];
13->27 [style = bold, label=""];
22->25 [style = bold, label=""];
35->34 [style = solid, label="timestamp"];
35->38 [style = solid, label="timestamp"];
3->0 [style = bold, label=""];
33->35 [style = dotted, label="true"];
29->17 [style = bold, label=""];
12->20 [style = bold, label=""];
5->18 [style = bold, label=""];
5->30 [style = dashed, label="0"];
18->37 [style = bold, label=""];
32->34 [style = solid, label="watermark"];
31->30 [style = bold, label=""];
0->28 [style = bold, label=""];
34->8 [style = bold, label=""];
33->36 [style = dotted, label="true"];
14->10 [style = bold, label=""];
23->17 [style = bold, label=""];
18->15 [style = solid, label="processingTimeService"];
15->8 [style = bold, label=""];
21->6 [style = bold, label=""];
19->12 [style = bold, label=""];
16->11 [style = bold, label=""];
30->34 [style = solid, label="path"];
17->5 [style = bold, label=""];
18->34 [style = solid, label="processingTimeService"];
17->31 [style = dashed, label="0"];
24->37 [style = dashed, label="0"];
15->34 [style = dashed, label="0"];
9->7 [style = bold, label=""];
}
