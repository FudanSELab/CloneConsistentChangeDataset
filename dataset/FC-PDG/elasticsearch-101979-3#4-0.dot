digraph {
8 [style = filled, label = "Map<String,Object> doc = (Map<String,Object>)parsedMappings.get(\"_doc\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat((Map<String,Object>)mappingsProperties.get(\"test\"),hasValue(\"keyword\"))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,Object> mappingsProperties = (Map<String,Object>)doc.get(\"properties\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "request.settings(Settings.builder().put(\"key1\",\"requestValue\").build())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(parsedMappings,hasKey(\"_doc\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testRequestDataHavePriorityOverTemplateData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map<String,Object> mappingsProperties = (Map<String,Object>)doc.get(\"properties\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testParseMappingsAppliesDataFromTemplateAndRequest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,Object> parsedMappings = MetadataCreateIndexService.parseMappings(request.mappings(),List.of(templateMetadata),NamedXContentRegistry.EMPTY)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "IndexTemplateMetaData templateMetaData = addMatchingTemplate(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(doc,hasKey(\"properties\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Settings aggregatedIndexSettings = aggregateIndexSettings(ClusterState.EMPTY_STATE,request,List.of(templateMetaData),Map.of(),null,Settings.EMPTY,IndexScopedSettings.DEFAULT_SCOPED_SETTINGS)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(mappingsProperties,hasKey(\"test\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<String,Object> parsedMappings = MetaDataCreateIndexService.parseMappings(request.mappings(),List.of(templateMetaData),xContentRegistry())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(doc,hasKey(\"properties\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "request.mappings(reqMapping.string())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testParseMappingsAppliesDataFromTemplateAndRequest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "CompressedXContent templateMapping = createMapping(\"test\",\"text\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "CompressedXContent reqMapping = createMapping(\"test\",\"keyword\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Object> parsedMappings = MetaDataCreateIndexService.parseMappings(request.mappings(),List.of(templateMetaData),NamedXContentRegistry.EMPTY)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "List<AliasMetaData> resolvedAliases = resolveAndValidateAliases(request.index(),request.aliases(),List.of(templateMetaData),MetaData.builder().build(),aliasValidator,xContentRegistry(),queryShardContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(aggregatedIndexSettings.get(\"key1\"),equalTo(\"requestValue\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "request.mappings(createMapping(\"mapping_from_request\",\"text\").string())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IndexTemplateMetaData templateMetaData = addMatchingTemplate(null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "request.aliases(Set.of(new Alias(\"alias\").searchRouting(\"fromRequest\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(parsedMappings,hasKey(\"_doc\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(resolvedAliases.get(0).getSearchRouting(),equalTo(\"fromRequest\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<String,Object> doc = (Map<String,Object>)parsedMappings.get(\"_doc\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IndexTemplateMetadata templateMetadata = addMatchingTemplate(null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
16->23 [style = solid, label="templateMetaData"];
8->19 [style = dashed, label="0"];
14->3 [style = solid, label="parsedMappings"];
16->18 [style = bold, label=""];
9->11 [style = bold, label=""];
3->26 [style = dashed, label="0"];
16->14 [style = solid, label="templateMetaData"];
11->1 [style = bold, label=""];
9->4 [style = bold, label=""];
21->3 [style = bold, label=""];
15->16 [style = bold, label=""];
26->19 [style = bold, label=""];
28->14 [style = bold, label=""];
11->1 [style = solid, label="parsedMappings"];
7->9 [style = bold, label=""];
25->24 [style = bold, label=""];
24->26 [style = bold, label=""];
5->2 [style = bold, label=""];
10->11 [style = solid, label="templateMetadata"];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
22->20 [style = bold, label=""];
3->8 [style = bold, label=""];
18->13 [style = bold, label=""];
7->4 [style = solid, label="templateMetaData"];
4->1 [style = solid, label="parsedMappings"];
5->2 [style = solid, label="doc"];
7->10 [style = dashed, label="0"];
23->17 [style = bold, label=""];
24->26 [style = solid, label="mappingsProperties"];
27->23 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
14->27 [style = bold, label=""];
0->8 [style = solid, label="mappingsProperties"];
16->27 [style = solid, label="templateMetaData"];
4->11 [style = dashed, label="0"];
4->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
20->15 [style = bold, label=""];
17->21 [style = bold, label=""];
8->25 [style = bold, label=""];
0->3 [style = solid, label="mappingsProperties"];
8->25 [style = solid, label="doc"];
13->28 [style = bold, label=""];
}
