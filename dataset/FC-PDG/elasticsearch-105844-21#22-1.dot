digraph {
2 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(2,mockSearchPhaseContext.numSuccess.get())@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.contains(new ShardSearchContextId(\"\",2L)))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNull(responseRef.get().get(0).fetchResult())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AtomicReference<AtomicArray<SearchPhaseResult>> responseRef = new AtomicReference<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(responseRef.get().get(1))@@@54@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertNotNull(responseRef.get())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.failures.size())@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testDfsWith2Shards['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(mockSearchPhaseContext.failures.get(0).getCause() instanceof MockDirectoryWrapper.FakeIOException)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,responseRef.get().get(0).queryResult().topDocs().topDocs.totalHits.value)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "mockSearchPhaseContext.searchTransport = searchTransportService@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(\"dfs_query\",phase.getName())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "results.set(0,newSearchResult(0,new ShardSearchContextId(\"\",1),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),new NoopCircuitBreaker(CircuitBreaker.REQUEST),SearchProgressListener.NOOP,mockSearchPhaseContext.searchRequest,results.length(),null)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.contextId().getId() == 1) {QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\",123),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE),null)queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12286a5),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.contextId().getId() == 2) {QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\",123),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE),null)queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12286ea),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}{fail(\"no such request ID: \" + request.contextId())}}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "AtomicArray<DfsSearchResult> results = new AtomicArray<>(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),new NoopCircuitBreaker(CircuitBreaker.REQUEST),SearchProgressListener.NOOP,mockSearchPhaseContext.searchRequest,results.length(),null)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SearchTransportService searchTransportService = new SearchTransportService(null,null){@Override public void sendExecuteQuery(Transport.Connection connection,QuerySearchRequest request,SearchTask task,SearchActionListener<QuerySearchResult> listener){if (request.contextId().getId() == 1) {QuerySearchResult queryResult = new QuerySearchResult(new ShardSearchContextId(\"\",123),new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE),null)queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@122887f),2.0F),new DocValueFormat(((()queryResult.size(2)listener.onResponse(queryResult)}if (request.contextId().getId() == 2) {listener.onFailure(new MockDirectoryWrapper.FakeIOException())}{fail(\"no such request ID: \" + request.contextId())}}}@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "results.get(0).termsStatistics(new Term((((,new TermStatistics(((()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertNotNull(responseRef.get().get(0))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SearchPhaseController searchPhaseController = searchPhaseController()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testDfsWith1ShardFailed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testDfsWith2Shards['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "results.get(1).termsStatistics(new Term((((,new TermStatistics(((()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,responseRef.get().get(1).queryResult().topDocs().topDocs.totalHits.value)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.releasedSearchContexts.size())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "phase.run()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNull(responseRef.get().get(1))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "SearchPhaseController searchPhaseController = searchPhaseController()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNull(responseRef.get().get(1).fetchResult())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results.asList(),null,consumer,null,mockSearchPhaseContext)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertNotNull(responseRef.get().get(1))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(42,responseRef.get().get(0).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(84,responseRef.get().get(1).queryResult().topDocs().topDocs.scoreDocs(0(.doc)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,mockSearchPhaseContext.numSuccess.get())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "results.set(1,newSearchResult(1,new ShardSearchContextId(\"\",2),new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE)))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DfsQueryPhase phase = new DfsQueryPhase(results.asList(),null,consumer,null,mockSearchPhaseContext)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
20->24 [style = solid, label="mockSearchPhaseContext"];
24->12 [style = bold, label=""];
27->1 [style = bold, label=""];
36->40 [style = bold, label=""];
7->1 [style = bold, label=""];
20->13 [style = bold, label=""];
5->39 [style = bold, label=""];
22->24 [style = solid, label="consumer"];
39->34 [style = bold, label=""];
10->19 [style = bold, label=""];
7->13 [style = solid, label="searchTransportService"];
11->6 [style = bold, label=""];
18->11 [style = bold, label=""];
4->15 [style = bold, label=""];
8->3 [style = bold, label=""];
16->26 [style = bold, label=""];
37->20 [style = bold, label=""];
1->20 [style = bold, label=""];
14->10 [style = bold, label=""];
28->26 [style = bold, label=""];
30->32 [style = bold, label=""];
26->8 [style = bold, label=""];
20->31 [style = bold, label=""];
0->21 [style = bold, label=""];
31->38 [style = bold, label=""];
12->9 [style = bold, label=""];
25->17 [style = bold, label=""];
15->5 [style = bold, label=""];
5->25 [style = bold, label=""];
21->2 [style = bold, label=""];
29->26 [style = bold, label=""];
3->18 [style = bold, label=""];
37->20 [style = solid, label="consumer"];
7->27 [style = dashed, label="0"];
2->23 [style = bold, label=""];
7->33 [style = bold, label=""];
6->27 [style = bold, label=""];
2->5 [style = dashed, label="0"];
38->30 [style = bold, label=""];
17->0 [style = bold, label=""];
25->10 [style = dashed, label="0"];
7->40 [style = solid, label="searchTransportService"];
23->39 [style = dashed, label="0"];
33->36 [style = bold, label=""];
9->14 [style = bold, label=""];
13->22 [style = bold, label=""];
19->4 [style = bold, label=""];
22->24 [style = bold, label=""];
6->7 [style = bold, label=""];
35->12 [style = bold, label=""];
27->13 [style = solid, label="searchTransportService"];
40->37 [style = bold, label=""];
36->20 [style = solid, label="mockSearchPhaseContext"];
}
