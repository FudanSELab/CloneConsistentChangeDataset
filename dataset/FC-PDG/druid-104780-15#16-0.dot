digraph {
65 [style = filled, label = "throw new ISE(\"forceGuaranteedRollup is set but partitionsSpec (%s( is not a single_dim or hash partition spec.\",ingestionSchema.getTuningConfig().getPartitionsSpec())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Preconditions.checkState(state.isFailure(),\"Unrecognized state after task is complete(%s(\",state)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "LOG.info(\"Needs to determine intervals or numShards, beginning %s phase.\",PartialDimensionCardinalityTask.TYPE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "taskStatus = TaskStatus.failure(getId(),errMsg)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "state.isSuccess()@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "taskStatus = TaskStatus.success(getId())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final ParallelIndexIngestionSpec segmentCreateIngestionSpec = ingestionSchemaToUse@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "partitionsSpec.getNumShards() == null@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Map<Pair<Interval,Integer>,List<PartitionLocation>> partitionToLocations = groupGenericPartitionLocationsPerPartition(indexingRunner.getReports())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Preconditions.checkState(state.isFailure(),\"Unrecognized state after task is complete(%s(\",state)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "state = runNextPhase(cardinalityRunner)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "taskStatus = TaskStatus.failure(getId(),errorMessage)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "final List<PartialSegmentMergeIOConfig> ioConfigs = createGenericMergeIOConfigs(ingestionSchema.getTuningConfig().getTotalNumMergeTasks(),partitionToLocations)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "return taskStatus@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ParallelIndexTaskRunner<SinglePhaseSubTask,PushedSegmentsReport> parallelSinglePhaseRunner = createRunner(toolbox,null)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "taskStatus = TaskStatus.success(getId())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final ParallelIndexIngestionSpec segmentMergeIngestionSpec = ingestionSchemaToUse@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final TaskState state = runNextPhase(runner)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "!(ingestionSchema.getTuningConfig().getPartitionsSpec() instanceof HashedPartitionsSpec)@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "state.isFailure()@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final ParallelIndexTaskRunner<SinglePhaseSubTask,PushedSegmentsReport> runner = createRunner(toolbox,null)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ParallelIndexTaskRunner<PartialHashSegmentGenerateTask,GeneratedPartitionsReport> indexingRunner = createRunner(toolbox,null)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "publishSegments(toolbox,parallelSinglePhaseRunner.getReports())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "runHashPartitionMultiPhaseParallel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "state.isFailure()@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TaskStatus taskStatus@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "String errMsg = StringUtils.format(TASK_PHASE_FAILURE_MSG,mergeRunner.getName())@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "state = runNextPhase(indexingRunner)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "intervalToNumShards = null@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "String errMsg = StringUtils.format(TASK_PHASE_FAILURE_MSG,cardinalityRunner.getName())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "cardinalityRunner.getReports().isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "state = runNextPhase(mergeRunner)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "HashedPartitionsSpec partitionsSpec = (HashedPartitionsSpec)ingestionSchema.getTuningConfig().getPartitionsSpec()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "final Map<Interval,Integer> intervalToNumShards@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String errorMessage = StringUtils.format(TASK_PHASE_FAILURE_MSG,parallelSinglePhaseRunner.getName())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "ingestionSchemaToUse = rewriteIngestionSpecWithIntervalsIfMissing(ingestionSchemaToUse,intervalToNumShards.keySet())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "needsInputSampling@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return taskStatus@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final TaskState state = runNextPhase(parallelSinglePhaseRunner)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "return TaskStatus.failure(getId(),errMsg)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ingestionState = IngestionState.BUILD_SEGMENTS@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "intervalToNumShards = CollectionUtils.mapValues(mergeCardinalityReports(cardinalityRunner.getReports().values()),null)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "return TaskStatus.success(getId(),msg)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "TaskStatus taskStatus@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "runSinglePhaseParallel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT: partitionsSpec.getMaxRowsPerSegment()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TaskToolbox toolbox@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "state.isSuccess()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "ParallelIndexIngestionSpec ingestionSchemaToUse = ingestionSchema@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TaskStatus taskStatus@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "LOG.warn(msg)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "intervalToNumShards = determineNumShardsFromCardinalityReport(cardinalityRunner.getReports().values(),effectiveMaxRowsPerSegment)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "publishSegments(toolbox,mergeRunner.getReports())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "waitForSegmentAvailability(parallelSinglePhaseRunner.getReports())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "runSinglePhaseParallel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final ParallelIndexTaskRunner<PartialGenericSegmentMergeTask,PushedSegmentsReport> mergeRunner = createRunner(toolbox,null)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "final boolean needsInputSampling = partitionsSpec.getNumShards() == null || ingestionSchemaToUse.getDataSchema().getGranularitySpec().inputIntervals().isEmpty()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "TaskState state@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@52@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "String errMsg = StringUtils.format(TASK_PHASE_FAILURE_MSG,indexingRunner.getName())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@8@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "String msg = \"No valid rows for hash partitioning.\" + \" All rows may have invalid timestamps or have been filtered out.\"@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "taskStatus = TaskStatus.failure(getId(),errorMessage)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "LOG.info(\"effective maxRowsPerSegment is: \" + effectiveMaxRowsPerSegment)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "waitForSegmentAvailability(mergeRunner.getReports())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "return TaskStatus.failure(getId(),errMsg)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Preconditions.checkState(state.isFailure(),\"Unrecognized state after task is complete(%s(\",state)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "ParallelIndexTaskRunner<PartialDimensionCardinalityTask,DimensionCardinalityReport> cardinalityRunner = createRunner(toolbox,null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "taskStatus = TaskStatus.success(getId())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TaskToolbox toolbox@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
13->24 [style = dotted, label="true"];
71->70 [style = bold, label=""];
45->39 [style = solid, label="ingestionSchemaToUse"];
60->44 [style = solid, label="partitionToLocations"];
9->12 [style = solid, label="state"];
48->29 [style = bold, label=""];
55->49 [style = bold, label=""];
10->19 [style = bold, label=""];
39->25 [style = solid, label="ingestionSchemaToUse"];
73->33 [style = dotted, label="true"];
73->63 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
61->57 [style = bold, label=""];
42->60 [style = bold, label=""];
0->61 [style = dashed, label="0"];
11->9 [style = bold, label=""];
41->38 [style = dotted, label="true"];
1->13 [style = bold, label=""];
0->15 [style = bold, label=""];
8->14 [style = solid, label="toolbox"];
6->12 [style = dotted, label="false"];
1->13 [style = dotted, label="true"];
41->48 [style = bold, label=""];
73->57 [style = dotted, label="false"];
63->55 [style = bold, label=""];
13->24 [style = dashed, label="0"];
14->0 [style = dotted, label="false"];
5->10 [style = solid, label="taskStatus"];
31->35 [style = bold, label=""];
69->58 [style = bold, label=""];
23->13 [style = bold, label=""];
66->64 [style = dotted, label="true"];
66->64 [style = bold, label=""];
51->42 [style = dotted, label="true"];
70->68 [style = bold, label=""];
58->59 [style = bold, label=""];
71->65 [style = bold, label=""];
56->42 [style = solid, label="errMsg"];
69->59 [style = solid, label="effectiveMaxRowsPerSegment"];
27->33 [style = solid, label="toolbox"];
41->62 [style = dotted, label="true"];
48->69 [style = dotted, label="true"];
7->11 [style = bold, label=""];
69->58 [style = solid, label="effectiveMaxRowsPerSegment"];
48->59 [style = dotted, label="true"];
29->39 [style = bold, label=""];
36->40 [style = solid, label="indexingRunner"];
25->36 [style = bold, label=""];
40->51 [style = bold, label=""];
57->55 [style = bold, label=""];
27->35 [style = solid, label="toolbox"];
72->27 [style = dotted, label="true"];
48->29 [style = dotted, label="false"];
73->30 [style = bold, label=""];
52->32 [style = solid, label="cardinalityRunner"];
28->52 [style = dotted, label="true"];
22->10 [style = solid, label="taskStatus"];
59->39 [style = bold, label=""];
66->41 [style = bold, label=""];
51->56 [style = dotted, label="true"];
8->11 [style = solid, label="toolbox"];
14->33 [style = dashed, label="0"];
43->67 [style = bold, label=""];
13->16 [style = bold, label=""];
13->67 [style = dashed, label="0"];
45->71 [style = bold, label=""];
3->10 [style = bold, label=""];
51->60 [style = bold, label=""];
6->14 [style = dotted, label="true"];
28->46 [style = dotted, label="true"];
47->54 [style = bold, label=""];
13->5 [style = bold, label=""];
37->45 [style = bold, label=""];
39->25 [style = bold, label=""];
7->8 [style = dotted, label="true"];
45->25 [style = solid, label="ingestionSchemaToUse"];
62->50 [style = solid, label="msg"];
28->41 [style = dotted, label="true"];
14->15 [style = dotted, label="false"];
73->43 [style = dotted, label="true"];
72->37 [style = bold, label=""];
60->44 [style = bold, label=""];
47->30 [style = solid, label="state"];
6->0 [style = dotted, label="false"];
36->40 [style = bold, label=""];
32->66 [style = bold, label=""];
13->24 [style = bold, label=""];
54->73 [style = bold, label=""];
22->19 [style = solid, label="taskStatus"];
41->50 [style = dotted, label="true"];
45->31 [style = solid, label="ingestionSchemaToUse"];
15->22 [style = solid, label="errorMessage"];
27->36 [style = solid, label="toolbox"];
17->18 [style = solid, label="parallelSinglePhaseRunner"];
2->3 [style = bold, label=""];
14->22 [style = dotted, label="false"];
11->9 [style = solid, label="runner"];
14->23 [style = dotted, label="true"];
68->53 [style = bold, label=""];
38->48 [style = bold, label=""];
71->65 [style = dotted, label="true"];
48->58 [style = dotted, label="true"];
48->69 [style = bold, label=""];
15->22 [style = bold, label=""];
8->17 [style = solid, label="toolbox"];
14->16 [style = dotted, label="true"];
26->41 [style = bold, label=""];
28->66 [style = dotted, label="true"];
14->23 [style = dashed, label="0"];
28->32 [style = dotted, label="true"];
14->23 [style = bold, label=""];
67->63 [style = bold, label=""];
2->10 [style = solid, label="taskStatus"];
62->38 [style = solid, label="msg"];
18->6 [style = bold, label=""];
33->43 [style = bold, label=""];
22->10 [style = bold, label=""];
16->19 [style = solid, label="taskStatus"];
43->63 [style = bold, label=""];
39->31 [style = solid, label="ingestionSchemaToUse"];
5->3 [style = solid, label="taskStatus"];
53->28 [style = bold, label=""];
41->62 [style = bold, label=""];
44->31 [style = bold, label=""];
53->28 [style = solid, label="needsInputSampling"];
6->12 [style = bold, label=""];
0->2 [style = solid, label="errorMessage"];
57->49 [style = solid, label="taskStatus"];
16->10 [style = solid, label="taskStatus"];
34->25 [style = bold, label=""];
65->70 [style = bold, label=""];
28->34 [style = bold, label=""];
30->61 [style = bold, label=""];
4->6 [style = bold, label=""];
16->10 [style = bold, label=""];
2->57 [style = dashed, label="0"];
20->8 [style = dotted, label="true"];
9->4 [style = bold, label=""];
28->34 [style = dotted, label="false"];
0->2 [style = bold, label=""];
6->2 [style = dotted, label="false"];
66->26 [style = dotted, label="true"];
57->55 [style = solid, label="taskStatus"];
0->15 [style = dashed, label="0"];
51->56 [style = bold, label=""];
8->23 [style = solid, label="toolbox"];
63->55 [style = solid, label="taskStatus"];
28->48 [style = dotted, label="true"];
46->52 [style = bold, label=""];
27->52 [style = solid, label="toolbox"];
63->49 [style = solid, label="taskStatus"];
12->0 [style = bold, label=""];
73->61 [style = dotted, label="false"];
14->13 [style = dotted, label="true"];
18->0 [style = solid, label="state"];
14->1 [style = bold, label=""];
56->42 [style = bold, label=""];
20->21 [style = bold, label=""];
6->14 [style = bold, label=""];
24->16 [style = bold, label=""];
64->26 [style = bold, label=""];
28->46 [style = bold, label=""];
50->38 [style = bold, label=""];
14->0 [style = bold, label=""];
43->67 [style = dotted, label="true"];
52->32 [style = bold, label=""];
73->30 [style = dotted, label="false"];
61->57 [style = solid, label="errMsg"];
73->33 [style = bold, label=""];
35->47 [style = bold, label=""];
62->50 [style = bold, label=""];
8->27 [style = dashed, label="0"];
28->39 [style = dotted, label="true"];
21->17 [style = bold, label=""];
64->26 [style = solid, label="errMsg"];
17->18 [style = bold, label=""];
6->5 [style = dotted, label="true"];
2->3 [style = solid, label="taskStatus"];
35->47 [style = solid, label="mergeRunner"];
}
