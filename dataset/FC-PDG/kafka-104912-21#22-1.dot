digraph {
16 [style = filled, label = "assertTrue(awaitLatch(pollLatch))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testPollsInBackground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "taskFuture.get()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "statusListener.onStartup(taskId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.expectLastCall()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "producer.close(EasyMock.anyLong(),EasyMock.anyObject())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testPollsInBackground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PowerMock.verifyAll()@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "workerTask.stop()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(workerTask.commitOffsets())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(workerTask.awaitStop(1000))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "statusListener.onShutdown(taskId)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expectLastCall()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "EasyMock.expectLastCall()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PowerMock.replayAll()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sourceTask.start(TASK_PROPS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Future<?> taskFuture = executor.submit(workerTask)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testCommitFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "sourceTask.initialize(EasyMock.anyObject())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "statusListener.onShutdown(taskId)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final CountDownLatch pollLatch = expectPolls(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sourceTask.stop()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createWorkerTask()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "sourceTask.stop()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expectLastCall()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CountDownLatch pollLatch = expectPolls(10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectOffsetFlush(false)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "expectOffsetFlush(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
16->15 [style = bold, label=""];
2->20 [style = bold, label=""];
29->5 [style = bold, label=""];
23->5 [style = bold, label=""];
17->1 [style = bold, label=""];
10->9 [style = solid, label="pollLatch"];
18->11 [style = bold, label=""];
4->26 [style = bold, label=""];
10->3 [style = bold, label=""];
14->17 [style = bold, label=""];
20->14 [style = bold, label=""];
0->21 [style = bold, label=""];
6->19 [style = bold, label=""];
21->25 [style = bold, label=""];
15->18 [style = bold, label=""];
9->16 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
21->2 [style = bold, label=""];
20->22 [style = bold, label=""];
24->14 [style = bold, label=""];
28->0 [style = bold, label=""];
25->20 [style = bold, label=""];
7->5 [style = bold, label=""];
10->26 [style = dashed, label="0"];
13->12 [style = bold, label=""];
19->13 [style = bold, label=""];
5->6 [style = bold, label=""];
12->8 [style = bold, label=""];
16->30 [style = bold, label=""];
21->25 [style = dashed, label="0"];
26->28 [style = bold, label=""];
8->4 [style = bold, label=""];
22->24 [style = bold, label=""];
30->15 [style = bold, label=""];
11->27 [style = bold, label=""];
26->16 [style = solid, label="pollLatch"];
}
