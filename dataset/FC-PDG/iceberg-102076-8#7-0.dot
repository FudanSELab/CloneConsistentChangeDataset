digraph {
22 [style = filled, label = "testJsonConversionWithManifestList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.manifests(),snapshot.manifests())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Summary should match\",expected.summary(),snapshot.summary())@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(\"Operation should match\",expected.operation(),snapshot.operation())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "writer.addAll(manifests)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String json = SnapshotParser.toJson(expected)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Files should match\",expected.manifests(),snapshot.manifests())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "long id = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(manifestList.delete())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,34,parentId,System.currentTimeMillis(),null,null,localInput(manifestList))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(\"Timestamp should match\",expected.timestampMillis(),snapshot.timestampMillis())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),DataOperations.REPLACE,ImmutableMap.of(\"files-added\",\"4\",\"files-deleted\",\"100\"),manifests)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Files should match in memory list\",inMemory.manifests(),expected.manifests())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File manifestList = temp.newFile(\"manifests\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNull(\"Summary should be null\",snapshot.summary())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Sequence number should default to 0\",expected.sequenceNumber(),snapshot.sequenceNumber())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "long parentId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testJsonConversionWithOperation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Snapshot ID should match\",expected.snapshotId(),snapshot.snapshotId())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Parent ID should match\",expected.parentId(),snapshot.parentId())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testJsonConversionWithManifestList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Snapshot snapshot = SnapshotParser.fromJson(ops.io(),json)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNull(\"Operation should be null\",snapshot.operation())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Snapshot expected = new BaseSnapshot(ops.io(),id,parentId,System.currentTimeMillis(),null,null,localInput(manifestList))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "manifestList.deleteOnExit()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(\"Manifest list should match\",expected.manifestListLocation(),snapshot.manifestListLocation())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Snapshot inMemory = new BaseSnapshot(ops.io(),id,parentId,expected.timestampMillis(),null,null,manifests)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<ManifestFile> manifests = ImmutableList.of(new GenericManifestFile(localInput(\"file:/tmp/manifest1.avro\"),0),new GenericManifestFile(localInput(\"file:/tmp/manifest2.avro\"),0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->20 [style = bold, label=""];
0->16 [style = bold, label=""];
25->24 [style = solid, label="expected"];
15->13 [style = bold, label=""];
16->18 [style = bold, label=""];
14->25 [style = bold, label=""];
10->14 [style = bold, label=""];
15->21 [style = bold, label=""];
8->11 [style = solid, label="json"];
1->17 [style = solid, label="parentId"];
1->25 [style = solid, label="parentId"];
27->30 [style = bold, label=""];
14->2 [style = solid, label="manifests"];
18->12 [style = bold, label=""];
23->32 [style = bold, label=""];
10->21 [style = solid, label="id"];
32->27 [style = bold, label=""];
20->3 [style = bold, label=""];
13->8 [style = solid, label="expected"];
10->25 [style = solid, label="id"];
9->8 [style = dashed, label="0"];
14->15 [style = solid, label="manifests"];
5->21 [style = solid, label="manifestList"];
3->0 [style = bold, label=""];
14->17 [style = solid, label="manifests"];
25->24 [style = bold, label=""];
13->17 [style = bold, label=""];
24->26 [style = bold, label=""];
1->13 [style = solid, label="parentId"];
13->21 [style = dashed, label="0"];
10->13 [style = solid, label="id"];
5->6 [style = bold, label=""];
17->2 [style = bold, label=""];
24->26 [style = solid, label="json"];
19->9 [style = bold, label=""];
11->3 [style = bold, label=""];
21->8 [style = solid, label="expected"];
30->31 [style = bold, label=""];
14->31 [style = solid, label="manifests"];
1->27 [style = solid, label="parentId"];
26->23 [style = bold, label=""];
28->8 [style = bold, label=""];
19->28 [style = dashed, label="0"];
10->17 [style = solid, label="id"];
7->15 [style = bold, label=""];
4->1 [style = bold, label=""];
5->13 [style = solid, label="manifestList"];
22->1 [style = bold, label=""];
31->28 [style = bold, label=""];
29->1 [style = bold, label=""];
14->25 [style = solid, label="manifests"];
6->7 [style = bold, label=""];
12->19 [style = bold, label=""];
1->16 [style = solid, label="parentId"];
1->10 [style = bold, label=""];
8->11 [style = bold, label=""];
21->17 [style = bold, label=""];
14->12 [style = solid, label="manifests"];
1->21 [style = solid, label="parentId"];
2->8 [style = bold, label=""];
14->5 [style = bold, label=""];
}
