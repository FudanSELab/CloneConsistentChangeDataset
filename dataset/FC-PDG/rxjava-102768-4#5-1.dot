digraph {
17 [style = filled, label = "delayWithFlowableNormal1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "inOrder.verify(subscriber).onComplete()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "source.onNext(i)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final List<PublishProcessor<Integer>> delays = new ArrayList<PublishProcessor<Integer>>()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "InOrder inOrder = inOrder(o)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "inOrder.verify(subscriber).onNext(i)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "delays.add(delay)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<PublishProcessor<Integer>> delays = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "i < n@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "verify(subscriber,never()).onError(any())@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "inOrder.verifyNoMoreInteractions()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Subscriber<Object> subscriber = TestHelper.mockSubscriber()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "delayWithObservableNormal1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "source.delay(delayFunc).subscribe(o)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final int n = 10@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PublishProcessor<Integer> source = PublishProcessor.create()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Observer<Object> o = TestHelper.mockObserver()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final List<PublishSubject<Integer>> delays = new ArrayList<PublishSubject<Integer>>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "PublishSubject<Integer> delay = PublishSubject.create()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "delays.get(i).onNext(i)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Function<Integer,Observable<Integer>> delayFunc = new Function<Integer,Observable<Integer>>(){@Override public Observable<Integer> apply(Integer t1){return delays.get(t1)}}@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "PublishSubject<Integer> source = PublishSubject.create()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "inOrder.verify(o).onNext(i)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i < n@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PublishProcessor<Integer> delay = PublishProcessor.create()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "inOrder.verify(o).onComplete()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "verify(o,never()).onError(any())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Function<Integer,Flowable<Integer>> delayFunc = new Function<Integer,Flowable<Integer>>(){@Override public Flowable<Integer> apply(Integer t1){return delays.get(t1)}}@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "source.onComplete()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "source.delay(delayFunc).subscribe(subscriber)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "delayWithFlowableNormal1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->22 [style = bold, label=""];
14->24 [style = dashed, label="0"];
14->3 [style = bold, label=""];
11->20 [style = bold, label=""];
2->35 [style = solid, label="i"];
14->31 [style = dashed, label="0"];
18->7 [style = solid, label="i"];
2->21 [style = solid, label="i"];
29->30 [style = solid, label="o"];
25->1 [style = bold, label=""];
16->11 [style = bold, label=""];
18->35 [style = solid, label="i"];
3->16 [style = solid, label="n"];
16->2 [style = dotted, label="true"];
20->9 [style = bold, label=""];
4->6 [style = bold, label=""];
16->35 [style = dotted, label="true"];
8->18 [style = bold, label=""];
18->16 [style = solid, label="i"];
28->31 [style = bold, label=""];
9->34 [style = bold, label=""];
0->1 [style = solid, label="delay"];
25->1 [style = solid, label="delay"];
35->2 [style = bold, label=""];
12->8 [style = solid, label="subscriber"];
7->35 [style = bold, label=""];
6->1 [style = dotted, label="true"];
11->32 [style = bold, label=""];
6->0 [style = bold, label=""];
22->34 [style = dashed, label="0"];
30->18 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
17->19 [style = bold, label=""];
10->6 [style = solid, label="i"];
6->15 [style = bold, label=""];
21->2 [style = bold, label=""];
19->24 [style = bold, label=""];
4->6 [style = solid, label="i"];
18->5 [style = solid, label="i"];
6->10 [style = dotted, label="true"];
16->7 [style = dotted, label="true"];
12->13 [style = bold, label=""];
6->27 [style = bold, label=""];
32->9 [style = bold, label=""];
29->33 [style = solid, label="o"];
18->16 [style = bold, label=""];
29->33 [style = bold, label=""];
19->14 [style = bold, label=""];
0->25 [style = dashed, label="0"];
3->6 [style = solid, label="n"];
0->1 [style = bold, label=""];
23->19 [style = bold, label=""];
2->7 [style = solid, label="i"];
18->21 [style = solid, label="i"];
6->25 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
4->10 [style = solid, label="i"];
12->13 [style = solid, label="subscriber"];
33->30 [style = bold, label=""];
16->5 [style = bold, label=""];
7->21 [style = bold, label=""];
12->29 [style = dashed, label="0"];
5->7 [style = bold, label=""];
16->21 [style = dotted, label="true"];
13->33 [style = dashed, label="0"];
8->30 [style = dashed, label="0"];
15->12 [style = bold, label=""];
15->27 [style = dashed, label="0"];
18->2 [style = solid, label="i"];
26->28 [style = bold, label=""];
6->0 [style = dotted, label="true"];
27->29 [style = bold, label=""];
13->8 [style = bold, label=""];
31->3 [style = bold, label=""];
21->35 [style = dashed, label="0"];
20->32 [style = dashed, label="0"];
1->10 [style = bold, label=""];
24->3 [style = bold, label=""];
2->5 [style = solid, label="i"];
19->28 [style = dashed, label="0"];
2->16 [style = solid, label="i"];
6->25 [style = bold, label=""];
2->16 [style = bold, label=""];
}
