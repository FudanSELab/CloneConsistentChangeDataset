digraph {
13 [style = filled, label = "Assert.assertTrue(testAppender.events.stream().anyMatch(null))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Properties jobProperties = GobblinLocalJobLauncherUtils.getJobProperties(\"runtime_test/skip_workunits_test.properties\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestAppender testAppender = new TestAppender()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "extractorCreationError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Logger logger = LogManager.getLogger(.getName() + \"-noattempt\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "logger.addAppender(testAppender)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Logger logger = (Logger)LogManager.getLogger(.getName() + \"-noattempt\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "jobProperties.setProperty(TestExtractor.RAISE_ERROR,\"false\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "extractorCreationError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(testAppender.events.stream().anyMatch(null))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "jobProperties.setProperty(TestExtractor.RAISE_ERROR,\"true\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "logger.removeAppender(testAppender)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestAppender testAppender = new TestAppender(.getName() + \"-noattempt\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testErrorDuringSubmission['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "GobblinLocalJobLauncherUtils.invokeLocalJobLauncher(jobProperties)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(testAppender.events.stream().anyMatch(null))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "jobProperties.setProperty(ConfigurationKeys.SOURCE_CLASS_KEY,.getName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->14 [style = bold, label=""];
9->10 [style = dashed, label="0"];
11->6 [style = bold, label=""];
4->13 [style = bold, label=""];
0->15 [style = dashed, label="0"];
10->6 [style = solid, label="testAppender"];
7->4 [style = solid, label="jobProperties"];
3->15 [style = bold, label=""];
8->14 [style = dashed, label="0"];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
8->13 [style = dashed, label="0"];
12->10 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
5->11 [style = dashed, label="0"];
0->4 [style = bold, label=""];
9->2 [style = solid, label="testAppender"];
15->4 [style = bold, label=""];
9->6 [style = solid, label="testAppender"];
9->5 [style = bold, label=""];
4->8 [style = bold, label=""];
14->2 [style = bold, label=""];
6->7 [style = bold, label=""];
16->9 [style = bold, label=""];
10->2 [style = solid, label="testAppender"];
13->2 [style = bold, label=""];
10->11 [style = bold, label=""];
}
