digraph {
4 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "VectorSeries<String> s1 = new VectorSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "VectorSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "VectorSeriesCollection c1 = new VectorSeriesCollection()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "VectorSeries s1 = new VectorSeries(\"Series\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "VectorSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->14 [style = bold, label=""];
14->15 [style = solid, label="c2"];
5->14 [style = dashed, label="0"];
5->2 [style = solid, label="c2"];
9->4 [style = bold, label=""];
12->11 [style = bold, label=""];
10->3 [style = bold, label=""];
9->14 [style = solid, label="c1"];
1->0 [style = bold, label=""];
9->2 [style = solid, label="c1"];
2->15 [style = dashed, label="0"];
9->15 [style = solid, label="c1"];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
5->6 [style = solid, label="c2"];
3->4 [style = solid, label="s1"];
13->3 [style = bold, label=""];
3->8 [style = bold, label=""];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
11->8 [style = bold, label=""];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
9->5 [style = solid, label="c1"];
4->5 [style = bold, label=""];
3->11 [style = dashed, label="0"];
11->4 [style = solid, label="s1"];
5->0 [style = solid, label="c2"];
}
