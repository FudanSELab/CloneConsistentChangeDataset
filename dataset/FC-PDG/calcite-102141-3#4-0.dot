digraph {
23 [style = filled, label = "RelOptPlanner planner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "rowCount += rightRowCount@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rowCount = rightRowCount@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rowCount = leftRowCount@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "RelNodes.COMPARATOR.compare(left,right) > 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "double rowCount = mq.getRowCount(this)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return planner.getCostFactory().makeCost(rowCount,0,0).multiplyBy(.01d)@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rowCount = RelMdUtil.addEpsilon(rowCount)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return planner.getCostFactory().makeCost(rowCount,0,0)@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final double rightRowCount = right.estimateRowCount(mq)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "isSemiJoin()@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "computeSelfCost['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RelMetadataQuery mq@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "!isSemiJoin()@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Double.isInfinite(rightRowCount)@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "computeSelfCost['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "left.getId() > right.getId()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Double.isInfinite(leftRowCount)@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RelOptPlanner planner@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "rowCount += Util.nLogN(leftRowCount)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "computeSelfCost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "joinType@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RelOptPlanner planner@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final double leftRowCount = left.estimateRowCount(mq)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "rowCount = RelMdUtil.addEpsilon(rowCount)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
16->3 [style = bold, label=""];
3->9 [style = dotted, label="false"];
17->9 [style = solid, label="rowCount"];
4->24 [style = bold, label=""];
14->19 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
12->5 [style = bold, label=""];
11->18 [style = dotted, label="false"];
24->2 [style = bold, label=""];
5->9 [style = bold, label=""];
1->17 [style = dotted, label="true"];
4->1 [style = dotted, label="true"];
14->0 [style = dotted, label="true"];
4->10 [style = dotted, label="true"];
2->6 [style = bold, label=""];
7->10 [style = solid, label="rowCount"];
22->23 [style = dotted, label="true"];
24->17 [style = dotted, label="true"];
6->11 [style = solid, label="leftRowCount"];
18->12 [style = bold, label=""];
11->12 [style = bold, label=""];
7->17 [style = solid, label="rowCount"];
12->16 [style = bold, label=""];
7->4 [style = bold, label=""];
4->2 [style = bold, label=""];
2->16 [style = solid, label="rightRowCount"];
2->12 [style = solid, label="rightRowCount"];
7->8 [style = bold, label=""];
5->9 [style = solid, label="rowCount"];
19->2 [style = solid, label="mq"];
12->9 [style = bold, label=""];
22->7 [style = bold, label=""];
8->4 [style = dotted, label="true"];
11->18 [style = bold, label=""];
19->6 [style = solid, label="mq"];
11->15 [style = bold, label=""];
1->17 [style = bold, label=""];
14->7 [style = bold, label=""];
22->19 [style = dotted, label="true"];
12->16 [style = dotted, label="false"];
3->9 [style = bold, label=""];
17->2 [style = bold, label=""];
8->2 [style = bold, label=""];
12->5 [style = dotted, label="true"];
1->24 [style = dashed, label="0"];
6->11 [style = bold, label=""];
21->19 [style = dotted, label="true"];
24->17 [style = bold, label=""];
6->18 [style = solid, label="leftRowCount"];
3->13 [style = bold, label=""];
21->7 [style = bold, label=""];
2->5 [style = solid, label="rightRowCount"];
15->9 [style = solid, label="rowCount"];
10->2 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
15->12 [style = bold, label=""];
4->24 [style = dotted, label="true"];
8->4 [style = bold, label=""];
7->9 [style = solid, label="rowCount"];
11->15 [style = dotted, label="true"];
10->9 [style = solid, label="rowCount"];
3->13 [style = dotted, label="true"];
6->15 [style = solid, label="leftRowCount"];
16->9 [style = solid, label="rowCount"];
}
