digraph {
3 [style = filled, label = "EasyMock.expect(worker.getPlugins()).andReturn(plugins).times(3)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "member.wakeup()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "member.ensureActive()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "putConnectorCallback.onCompletion(null,new Herder.Created<>(true,info))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "member.wakeup()@@@25@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EasyMock.expect(connectorMock.validate(CONN2_CONFIG)).andReturn(new Config(Collections.emptyList()))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(connectorMock)@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "putConnectorCallback.onCompletion(EasyMock.anyObject(),EasyMock.isNull())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testCreateConnectorAlreadyExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Capture<Callback<ConfigInfos>> validateCallback = newCapture()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "herder.tick()@@@34@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "member.poll(EasyMock.anyInt())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ConnectorInfo info = new ConnectorInfo(CONN2,CONN2_CONFIG,Collections.emptyList(),ConnectorType.SOURCE)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "time.sleep(1000L)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "PowerMock.verifyAll()@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "PowerMock.expectLastCall()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(null)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "member.poll(EasyMock.anyInt())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "herder.tick()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "PowerMock.expectLastCall()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "PowerMock.expectLastCall()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "testCreateConnector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "PowerMock.verifyAll()@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EasyMock.expect(plugins.newConnector(EasyMock.anyString())).andReturn(null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "PowerMock.replayAll()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "PowerMock.expectLastCall()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "herder.putConnectorConfig(CONN2,CONN2_CONFIG,false,putConnectorCallback)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "herder.putConnectorConfig(CONN1,CONN1_CONFIG,false,putConnectorCallback)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "time.sleep(1000L)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "PowerMock.verifyAll()@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "member.poll(EasyMock.anyInt())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCreateConnector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(connectorMock)).andReturn(delegatingLoader)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "configBackingStore.putConnectorConfig(CONN2,CONN2_CONFIG)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "EasyMock.expect(transformer.transform(EasyMock.capture(configCapture))).andAnswer(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PowerMock.expectLastCall()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "herder.tick()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.expect(worker.configTransformer()).andReturn(transformer).times(2)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Capture<Map<String,String>> configCapture = newCapture()@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(member.currentProtocolVersion()).andStubReturn(CONNECT_PROTOCOL_V0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "PowerMock.expectLastCall()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "EasyMock.expect(connectorMock.config()).andReturn(new ConfigDef())@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "PowerMock.expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){validateCallback.getValue().onCompletion(null,CONN2_CONFIG_INFOS)return null}})@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "final Capture<Map<String,String>> configCapture = newCapture()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "EasyMock.expect(member.memberId()).andStubReturn(\"leader\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "PowerMock.expectLastCall()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "EasyMock.expect(worker.getPlugins()).andReturn(plugins)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "PowerMock.expectLastCall()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Connector connectorMock = PowerMock.createMock()@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "PowerMock.replayAll()@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "herder.validateConnectorConfig(EasyMock.eq(CONN2_CONFIG),capture(validateCallback))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "PowerMock.expectLastCall()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->36 [style = bold, label=""];
28->29 [style = bold, label=""];
42->53 [style = bold, label=""];
8->28 [style = bold, label=""];
29->15 [style = bold, label=""];
31->37 [style = bold, label=""];
25->47 [style = bold, label=""];
44->56 [style = bold, label=""];
57->42 [style = bold, label=""];
15->24 [style = solid, label="connectorMock"];
16->27 [style = bold, label=""];
52->54 [style = bold, label=""];
37->11 [style = bold, label=""];
35->20 [style = bold, label=""];
17->50 [style = dashed, label="0"];
6->23 [style = bold, label=""];
53->52 [style = bold, label=""];
5->13 [style = solid, label="info"];
51->44 [style = bold, label=""];
36->30 [style = solid, label="validateCallback"];
13->6 [style = solid, label="info"];
40->34 [style = bold, label=""];
50->48 [style = bold, label=""];
15->16 [style = bold, label=""];
3->22 [style = bold, label=""];
20->25 [style = bold, label=""];
23->0 [style = bold, label=""];
45->2 [style = bold, label=""];
25->2 [style = bold, label=""];
17->19 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
43->45 [style = bold, label=""];
49->55 [style = bold, label=""];
54->50 [style = bold, label=""];
47->49 [style = bold, label=""];
24->26 [style = bold, label=""];
11->5 [style = bold, label=""];
26->12 [style = bold, label=""];
0->14 [style = bold, label=""];
12->10 [style = bold, label=""];
18->20 [style = bold, label=""];
36->30 [style = bold, label=""];
19->32 [style = bold, label=""];
48->51 [style = bold, label=""];
33->39 [style = bold, label=""];
30->31 [style = bold, label=""];
39->40 [style = bold, label=""];
5->13 [style = bold, label=""];
27->7 [style = bold, label=""];
38->21 [style = bold, label=""];
55->43 [style = bold, label=""];
46->20 [style = bold, label=""];
4->1 [style = bold, label=""];
32->4 [style = bold, label=""];
19->4 [style = bold, label=""];
41->33 [style = bold, label=""];
22->24 [style = bold, label=""];
13->6 [style = bold, label=""];
34->38 [style = bold, label=""];
29->57 [style = bold, label=""];
21->17 [style = bold, label=""];
14->41 [style = bold, label=""];
14->21 [style = bold, label=""];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
}
