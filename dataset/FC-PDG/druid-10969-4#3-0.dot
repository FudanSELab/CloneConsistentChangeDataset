digraph {
5 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",1,null,true,false),new AvaticaMonitor())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "server.start()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "url = StringUtils.format(\"jdbc:avatica:remote:url=http://127.0.0.1:%d%s\",port,DruidAvaticaHandler.AVATICA_PATH)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "server.setHandler(handler)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)}}))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "druidMeta = new DruidMeta(new PlannerFactory(druidSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper()),AVATICA_CONFIG,injector)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final DruidSchema druidSchema = CalciteTests.createMockSchema(conglomerate,walker,plannerConfig)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int port = new Random().nextInt(9999) + 10000@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18->12 [style = solid, label="plannerConfig"];
7->12 [style = solid, label="operatorTable"];
10->15 [style = bold, label=""];
12->5 [style = bold, label=""];
12->5 [style = solid, label="druidMeta"];
16->10 [style = solid, label="url"];
16->10 [style = bold, label=""];
11->17 [style = solid, label="propertiesLosAngeles"];
11->6 [style = bold, label=""];
20->0 [style = bold, label=""];
16->17 [style = solid, label="url"];
16->15 [style = solid, label="url"];
2->9 [style = bold, label=""];
3->16 [style = bold, label=""];
2->9 [style = solid, label="port"];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
21->9 [style = solid, label="port"];
21->16 [style = solid, label="port"];
8->1 [style = bold, label=""];
5->21 [style = bold, label=""];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
21->9 [style = bold, label=""];
18->4 [style = bold, label=""];
15->11 [style = bold, label=""];
14->0 [style = bold, label=""];
2->21 [style = dashed, label="0"];
6->13 [style = bold, label=""];
8->12 [style = solid, label="macroTable"];
0->4 [style = solid, label="walker"];
1->12 [style = bold, label=""];
1->12 [style = solid, label="injector"];
9->19 [style = bold, label=""];
0->18 [style = bold, label=""];
0->12 [style = solid, label="walker"];
2->16 [style = solid, label="port"];
4->12 [style = solid, label="druidSchema"];
19->3 [style = bold, label=""];
5->19 [style = solid, label="handler"];
18->4 [style = solid, label="plannerConfig"];
}
