digraph {
24 [style = filled, label = "pstream.setStreamContext(streamContext)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(numWorkers,eofTuples.size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1 8 7 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\",\"qt\",\"/export\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testParallelEOF['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertOrder(tuples,0,1,2,3,4,7,6,8,9)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(4 1 8 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "attachStreamFactory(pstream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "{solrClientCache.close()}@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testParallelEOF['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testParallelMergeStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertOrder(tuples,9,8,6,4,3,2,1,0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello0\",\"a_i\",\"10\",\"a_f\",\"0\").add(id,\"6\",\"a_s\",\"hello2\",\"a_i\",\"8\",\"a_f\",\"0\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"7\",\"a_f\",\"3\").add(id,\"8\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"4\").add(id,\"9\",\"a_s\",\"hello1\",\"a_i\",\"100\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1 8 7 9)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ParallelStream pstream = parallelStream(mstream,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "tuples = getTuples(pstream)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "{solrClientCache.close()}@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(8,tuples.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\",\"partitionKeys\",\"a_i\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "pstream.setStreamContext(streamContext)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "attachStreamFactory(pstream)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Map<String,Tuple> eofTuples = pstream.getEofTuples()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3 6)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\",\"partitionKeys\",\"a_i\",\"qt\",\"/export\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "pstream = parallelStream(mstream,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(9,tuples.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->3 [style = bold, label=""];
9->18 [style = dashed, label="0"];
5->19 [style = bold, label=""];
21->26 [style = solid, label="mstream"];
11->4 [style = bold, label=""];
23->32 [style = bold, label=""];
1->10 [style = bold, label=""];
4->16 [style = bold, label=""];
2->11 [style = bold, label=""];
12->2 [style = bold, label=""];
14->11 [style = solid, label="pstream"];
11->29 [style = solid, label="tuples"];
18->5 [style = bold, label=""];
25->34 [style = bold, label=""];
27->0 [style = bold, label=""];
14->12 [style = solid, label="pstream"];
32->21 [style = solid, label="streamB"];
28->23 [style = bold, label=""];
14->12 [style = bold, label=""];
34->33 [style = bold, label=""];
17->24 [style = solid, label="streamContext"];
3->15 [style = solid, label="streamB"];
13->18 [style = bold, label=""];
18->5 [style = solid, label="sParamsA"];
32->21 [style = bold, label=""];
19->3 [style = solid, label="sParamsB"];
16->1 [style = bold, label=""];
24->31 [style = bold, label=""];
15->14 [style = solid, label="mstream"];
15->14 [style = bold, label=""];
21->26 [style = bold, label=""];
23->32 [style = solid, label="sParamsB"];
7->0 [style = bold, label=""];
6->3 [style = bold, label=""];
22->28 [style = bold, label=""];
17->2 [style = solid, label="streamContext"];
8->13 [style = bold, label=""];
0->17 [style = bold, label=""];
3->15 [style = bold, label=""];
5->15 [style = solid, label="streamA"];
17->8 [style = bold, label=""];
31->34 [style = solid, label="tuples"];
9->5 [style = solid, label="sParamsA"];
29->22 [style = bold, label=""];
26->31 [style = solid, label="pstream"];
22->28 [style = solid, label="sParamsA"];
13->9 [style = bold, label=""];
6->19 [style = dashed, label="0"];
20->0 [style = bold, label=""];
4->29 [style = bold, label=""];
26->30 [style = bold, label=""];
26->30 [style = solid, label="pstream"];
9->5 [style = bold, label=""];
30->24 [style = bold, label=""];
31->25 [style = bold, label=""];
28->21 [style = solid, label="streamA"];
5->6 [style = bold, label=""];
6->3 [style = solid, label="sParamsB"];
8->13 [style = solid, label="solrClientCache"];
}
