digraph {
13 [style = filled, label = "Object build = content.get(\"build\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "load(,\"management.info.git.mode=full\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,InfoContributor> beans = this.context.getBeansOfType()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Object git = content.get(\"git\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "gitPropertiesFullMode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Map<String,Object> content = invokeContributor(this.context.getBean(\"gitInfoContributor\",))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(buildInfo).containsOnlyKeys(\"group\",\"artifact\",\"foo\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "gitPropertiesFullMode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "buildProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "load()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(gitInfo.get(\"foo\")).isEqualTo(\"bar\")@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,Object> gitInfo = (Map<String,Object>)git@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Object> buildInfo = (Map<String,Object>)build@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(buildInfo.get(\"foo\")).isEqualTo(\"bar\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(gitInfo).containsOnlyKeys(\"branch\",\"commit\",\"foo\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(git).isInstanceOf()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(build).isInstanceOf()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(beans).containsKeys(\"buildInfoContributor\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<String,Object> content = invokeContributor(this.context.getBean(\"buildInfoContributor\",))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
13->15 [style = bold, label=""];
12->16 [style = bold, label=""];
14->13 [style = bold, label=""];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
2->0 [style = solid, label="git"];
13->9 [style = solid, label="build"];
2->4 [style = bold, label=""];
7->2 [style = bold, label=""];
1->7 [style = bold, label=""];
18->14 [style = bold, label=""];
15->9 [style = bold, label=""];
17->18 [style = bold, label=""];
1->16 [style = dashed, label="0"];
4->0 [style = bold, label=""];
0->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
