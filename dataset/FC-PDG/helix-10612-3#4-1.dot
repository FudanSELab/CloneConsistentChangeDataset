digraph {
6 [style = filled, label = "cr.setInstanceName(hostDest)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "AssertJUnit.assertEquals(callback.getMessageReplied().size(),1)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "_participants(0(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Criteria cr = new Criteria()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cr.setRecipientInstanceType(InstanceType.PARTICIPANT)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "String para = \"Testing messaging para\"@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "cr.setClusterName(CLUSTER_NAME)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Message msg = new Message(factory.getMessageTypes().get(0),msgId)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "_participants(1(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "msg.setTgtSessionId(\"*\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(3000)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "callback = new TestAsyncCallback(60000)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String hostDest = \"localhost_\" + (START_PORT + 1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "AssertJUnit.assertTrue(asyncCallback2.isTimedOut())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "AssertJUnit.assertTrue(asyncCallback.getMessageReplied().get(0).getRecord().getMapField(Message.Attributes.MESSAGE_RESULT.toString()).get(\"ReplyMessage\").equals(\"TestReplyMessage\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "cr.setClusterName(CLUSTER_NAME)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "cr.setSessionSpecific(false)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "msg.setMsgId(msgId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Thread.sleep(3000)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Thread.sleep(2000)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "msg.setSrcName(_hostSrc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "AssertJUnit.assertTrue(TestAsyncCallback._replyedMessageContents.contains(\"TestReplyMessage\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "_participants(1(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "AsyncCallback asyncCallback = new MockAsyncCallback()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestAsyncCallback callback2 = new TestAsyncCallback(500)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TestAsyncCallback callback = new TestAsyncCallback(60000)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "AsyncCallback asyncCallback2 = new MockAsyncCallback()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "TestMessagingHandlerFactory factory = new TestMessagingHandlerFactory()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "_adminController.getMessagingService().send(cr,msg,callback2,500)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "AssertJUnit.assertEquals(callback.getMessageReplied().size(),1)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "AssertJUnit.assertTrue(asyncCallback.getMessageReplied().size() == 1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "msg.getRecord().setSimpleField(\"TestMessagingPara\",para)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Thread.sleep(2000)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "TestBlockingSendReceive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "_adminController.getMessagingService().send(cr,msg,callback,60000)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String msgId = new UUID(123,456).toString()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "messagesSent = _adminController.getMessagingService().sendAndWait(cr,msg,asyncCallback2,500)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "cr.setSessionSpecific(false)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AssertJUnit.assertTrue(callback.getMessageReplied().size() == 1)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "_adminController.getMessagingService().send(cr,msg,callback2,500)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cr = new Criteria()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "_adminController.getMessagingService().send(cr,msg,callback,60000)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cr.setRecipientInstanceType(InstanceType.PARTICIPANT)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "AssertJUnit.assertTrue(callback2.isTimedOut())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "int messagesSent = _adminController.getMessagingService().sendAndWait(cr,msg,asyncCallback,60000)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AssertJUnit.assertTrue(callback2.isTimedOut())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "callback2 = new TestAsyncCallback(500)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "cr.setDataSource(DataSource.IDEALSTATES)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "msg.setMsgState(MessageState.NEW)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cr.setInstanceName(hostDest)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestMessageSimpleSendReceiveAsync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "_participants(0(.getMessagingService().registerMessageHandlerFactory(factory.getMessageTypes(),factory)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "AssertJUnit.assertTrue(TestAsyncCallback._replyedMessageContents.contains(\"TestReplyMessage\"))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AssertJUnit.assertTrue(callback.getMessageReplied().size() == 1)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "TestMessageSimpleSendReceiveAsync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32->47 [style = dashed, label="0"];
11->14 [style = bold, label=""];
26->44 [style = solid, label="factory"];
10->35 [style = bold, label=""];
1->20 [style = bold, label=""];
49->51 [style = bold, label=""];
46->31 [style = bold, label=""];
22->54 [style = solid, label="msg"];
14->21 [style = solid, label="callback2"];
2->23 [style = bold, label=""];
8->1 [style = bold, label=""];
22->9 [style = solid, label="msg"];
38->30 [style = bold, label=""];
51->48 [style = bold, label=""];
31->6 [style = solid, label="hostDest"];
32->25 [style = bold, label=""];
26->15 [style = bold, label=""];
27->33 [style = bold, label=""];
43->44 [style = bold, label=""];
30->9 [style = solid, label="callback"];
28->45 [style = bold, label=""];
7->13 [style = solid, label="callback2"];
20->21 [style = solid, label="cr"];
54->49 [style = bold, label=""];
15->34 [style = bold, label=""];
31->24 [style = solid, label="hostDest"];
48->50 [style = bold, label=""];
26->43 [style = bold, label=""];
16->17 [style = bold, label=""];
47->54 [style = solid, label="asyncCallback"];
26->34 [style = solid, label="factory"];
18->28 [style = bold, label=""];
32->25 [style = solid, label="callback"];
45->14 [style = bold, label=""];
29->22 [style = solid, label="msgId"];
47->54 [style = bold, label=""];
22->13 [style = solid, label="msg"];
41->38 [style = bold, label=""];
23->7 [style = bold, label=""];
42->7 [style = bold, label=""];
2->51 [style = dashed, label="0"];
37->16 [style = bold, label=""];
15->29 [style = bold, label=""];
14->21 [style = bold, label=""];
22->50 [style = solid, label="msg"];
34->29 [style = bold, label=""];
11->45 [style = dashed, label="0"];
48->50 [style = solid, label="asyncCallback2"];
25->39 [style = bold, label=""];
17->6 [style = bold, label=""];
21->27 [style = bold, label=""];
44->29 [style = bold, label=""];
15->43 [style = dashed, label="0"];
30->9 [style = bold, label=""];
3->12 [style = bold, label=""];
17->50 [style = solid, label="cr"];
17->54 [style = solid, label="cr"];
34->44 [style = dashed, label="0"];
17->25 [style = solid, label="cr"];
31->26 [style = bold, label=""];
19->47 [style = bold, label=""];
19->32 [style = bold, label=""];
9->18 [style = bold, label=""];
39->2 [style = bold, label=""];
6->10 [style = bold, label=""];
37->16 [style = solid, label="para"];
17->13 [style = solid, label="cr"];
7->13 [style = bold, label=""];
4->40 [style = bold, label=""];
22->25 [style = solid, label="msg"];
0->37 [style = bold, label=""];
25->54 [style = dashed, label="0"];
28->11 [style = bold, label=""];
35->19 [style = bold, label=""];
26->43 [style = solid, label="factory"];
12->0 [style = bold, label=""];
26->15 [style = solid, label="factory"];
24->4 [style = bold, label=""];
5->31 [style = bold, label=""];
22->36 [style = bold, label=""];
40->41 [style = bold, label=""];
52->31 [style = bold, label=""];
22->21 [style = solid, label="msg"];
29->22 [style = bold, label=""];
7->50 [style = dashed, label="0"];
13->8 [style = bold, label=""];
23->42 [style = dashed, label="0"];
20->24 [style = bold, label=""];
2->42 [style = bold, label=""];
50->53 [style = bold, label=""];
20->9 [style = solid, label="cr"];
29->36 [style = solid, label="msgId"];
36->3 [style = bold, label=""];
}
