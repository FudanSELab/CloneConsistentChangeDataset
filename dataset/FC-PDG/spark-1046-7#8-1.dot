digraph {
14 [style = filled, label = "byte(( data = new byte((((@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "lpad['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "UTF8String pad@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "UTF8String remain = pad.substring(0,spaces - padChars * count)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "copyMemory(this.base,this.offset,data,BYTE_ARRAY_OFFSET,this.numBytes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int resultSize = Math.toIntExact((long)numBytes + pad.numBytes * count + remain.numBytes)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "int len@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int padChars = pad.numChars()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "copyMemory(this.base,this.offset,data,BYTE_ARRAY_OFFSET + offset,numBytes())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "int idx = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "copyMemory(this.base,this.offset,data,BYTE_ARRAY_OFFSET,this.numBytes)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "byte(( data = new byte((((@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "offset += pad.numBytes@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "return UTF8String.fromBytes(data)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "idx < count@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "spaces <= 0 || pad.numBytes() == 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "UTF8String pad@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "copyMemory(remain.base,remain.offset,data,BYTE_ARRAY_OFFSET + offset,remain.numBytes)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int len@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int offset = 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "copyMemory(pad.base,pad.offset,data,BYTE_ARRAY_OFFSET + offset,pad.numBytes)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "++idx@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "offset += remain.numBytes@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "copyMemory(remain.base,remain.offset,data,BYTE_ARRAY_OFFSET + offset,remain.numBytes)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int spaces = len - this.numChars()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rpad['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "UTF8String pad@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "offset += pad.numBytes@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return substring(0,len)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "rpad['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "int count = spaces / padChars@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "++idx@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "return UTF8String.fromBytes(data)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14->24 [style = dashed, label="0"];
6->3 [style = bold, label=""];
4->32 [style = solid, label="offset"];
0->21 [style = dotted, label="false"];
14->26 [style = solid, label="data"];
18->15 [style = dotted, label="true"];
5->15 [style = bold, label=""];
31->26 [style = solid, label="offset"];
13->24 [style = solid, label="count"];
11->8 [style = solid, label="padChars"];
30->18 [style = bold, label=""];
9->3 [style = solid, label="len"];
0->32 [style = dotted, label="false"];
18->15 [style = solid, label="idx"];
0->30 [style = dotted, label="false"];
18->17 [style = solid, label="offset"];
29->3 [style = solid, label="len"];
12->10 [style = bold, label=""];
0->15 [style = dotted, label="false"];
11->13 [style = bold, label=""];
31->30 [style = bold, label=""];
2->26 [style = solid, label="offset"];
32->25 [style = bold, label=""];
0->14 [style = dotted, label="false"];
1->23 [style = dotted, label="true"];
13->8 [style = solid, label="count"];
29->16 [style = solid, label="len"];
17->21 [style = bold, label=""];
2->15 [style = solid, label="offset"];
14->15 [style = solid, label="data"];
0->31 [style = dotted, label="false"];
22->10 [style = solid, label="data"];
5->23 [style = bold, label=""];
22->17 [style = solid, label="data"];
15->2 [style = dotted, label="true"];
18->15 [style = bold, label=""];
2->18 [style = bold, label=""];
20->3 [style = bold, label=""];
26->4 [style = bold, label=""];
3->0 [style = bold, label=""];
1->17 [style = bold, label=""];
13->1 [style = solid, label="count"];
27->29 [style = dotted, label="true"];
6->7 [style = dotted, label="true"];
3->8 [style = solid, label="spaces"];
10->4 [style = solid, label="offset"];
22->21 [style = solid, label="data"];
0->13 [style = dotted, label="false"];
23->2 [style = solid, label="offset"];
31->15 [style = solid, label="offset"];
8->24 [style = bold, label=""];
15->5 [style = dotted, label="true"];
3->13 [style = solid, label="spaces"];
10->18 [style = bold, label=""];
14->12 [style = solid, label="data"];
0->16 [style = bold, label=""];
0->24 [style = dotted, label="false"];
5->1 [style = solid, label="offset"];
4->17 [style = bold, label=""];
0->8 [style = dotted, label="false"];
20->9 [style = dotted, label="true"];
18->1 [style = dotted, label="true"];
18->26 [style = bold, label=""];
0->25 [style = dotted, label="false"];
0->4 [style = dotted, label="false"];
8->14 [style = bold, label=""];
0->11 [style = bold, label=""];
0->17 [style = dotted, label="false"];
30->18 [style = solid, label="idx"];
15->1 [style = solid, label="idx"];
9->16 [style = solid, label="len"];
5->4 [style = solid, label="offset"];
0->11 [style = dotted, label="false"];
0->22 [style = dotted, label="false"];
6->9 [style = dotted, label="true"];
14->31 [style = bold, label=""];
22->10 [style = bold, label=""];
0->12 [style = dotted, label="false"];
1->2 [style = bold, label=""];
20->19 [style = dotted, label="true"];
0->16 [style = dotted, label="true"];
14->4 [style = solid, label="data"];
14->25 [style = solid, label="data"];
18->2 [style = dotted, label="true"];
2->5 [style = bold, label=""];
15->1 [style = bold, label=""];
0->10 [style = dotted, label="false"];
11->13 [style = solid, label="padChars"];
22->2 [style = solid, label="data"];
0->26 [style = dotted, label="false"];
13->15 [style = solid, label="count"];
23->17 [style = solid, label="offset"];
3->0 [style = solid, label="spaces"];
27->3 [style = bold, label=""];
0->18 [style = dotted, label="false"];
13->18 [style = solid, label="count"];
0->1 [style = dotted, label="false"];
24->22 [style = bold, label=""];
14->32 [style = solid, label="data"];
27->28 [style = dotted, label="true"];
18->2 [style = solid, label="offset"];
9->29 [style = dashed, label="0"];
15->1 [style = dotted, label="true"];
14->1 [style = solid, label="data"];
14->12 [style = bold, label=""];
10->1 [style = solid, label="offset"];
14->17 [style = solid, label="data"];
15->4 [style = bold, label=""];
23->1 [style = bold, label=""];
13->8 [style = bold, label=""];
1->2 [style = dotted, label="true"];
1->5 [style = dotted, label="true"];
4->32 [style = bold, label=""];
}
