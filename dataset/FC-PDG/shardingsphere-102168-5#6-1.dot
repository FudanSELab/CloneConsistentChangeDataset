digraph {
4 [style = filled, label = "return@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "\"shadow\".equals(getScenario())@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeUpdateForStatement(connection): executeUpdateForPreparedStatement(connection)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int actualUpdateCount@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertDataSet(actualUpdateCount)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertExecute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeForStatement(connection): executeForPreparedStatement(connection)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertExecuteUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "getDescription().getScenario()@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "return@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertDataSet(actualUpdateCount)@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "\"replica_query\".equals(getScenario())@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertExecuteUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "actualUpdateCount = SQLExecuteType.Literal == getSqlExecuteType()? executeUpdateForStatement(connection): executeUpdateForPreparedStatement(connection)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "\"encrypt\".equals(getScenario())@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int actualUpdateCount@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
5->8 [style = bold, label=""];
17->5 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
1->0 [style = bold, label=""];
8->14 [style = dashed, label="0"];
3->6 [style = dotted, label="true"];
16->2 [style = bold, label=""];
16->2 [style = solid, label="actualUpdateCount"];
3->9 [style = bold, label=""];
12->14 [style = dotted, label="true"];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
1->16 [style = bold, label=""];
11->13 [style = bold, label=""];
12->14 [style = bold, label=""];
9->4 [style = dotted, label="true"];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
5->8 [style = dotted, label="true"];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
0->2 [style = solid, label="actualUpdateCount"];
11->13 [style = solid, label="actualUpdateCount"];
10->11 [style = bold, label=""];
}
