digraph {
4 [style = filled, label = "XYIntervalSeriesCollection c1 = new XYIntervalSeriesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "c2.addSeries(new XYIntervalSeries(\"Empty\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "XYIntervalSeriesCollection c2 = CloneUtils.clone(c1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "c1.addSeries(new XYIntervalSeries(\"Empty\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(c1.equals(c2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(c1 != c2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "XYIntervalSeriesCollection c2 = (XYIntervalSeriesCollection)TestUtils.serialised(c1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3,1.4,1.5)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "c2.addSeries(new XYIntervalSeries(\"Empty\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(c1,c2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(c1.equals(c2))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "XYIntervalSeriesCollection c2 = (XYIntervalSeriesCollection)c1.clone()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "XYIntervalSeries s1 = new XYIntervalSeries(\"Series\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
4->15 [style = solid, label="c1"];
15->14 [style = bold, label=""];
4->0 [style = solid, label="c1"];
9->2 [style = bold, label=""];
1->15 [style = bold, label=""];
2->3 [style = bold, label=""];
12->8 [style = solid, label="c2"];
0->11 [style = bold, label=""];
3->6 [style = bold, label=""];
15->14 [style = solid, label="c2"];
7->0 [style = bold, label=""];
16->2 [style = bold, label=""];
11->9 [style = bold, label=""];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
15->3 [style = solid, label="c2"];
12->0 [style = solid, label="c2"];
7->8 [style = solid, label="c2"];
7->9 [style = solid, label="c2"];
0->14 [style = dashed, label="0"];
4->12 [style = solid, label="c1"];
7->0 [style = solid, label="c2"];
12->9 [style = solid, label="c2"];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
1->12 [style = bold, label=""];
7->15 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
7->3 [style = solid, label="c2"];
4->14 [style = solid, label="c1"];
14->18 [style = bold, label=""];
15->16 [style = solid, label="c2"];
10->1 [style = bold, label=""];
17->4 [style = bold, label=""];
12->3 [style = solid, label="c2"];
13->4 [style = bold, label=""];
18->16 [style = bold, label=""];
}
