digraph {
5 [style = filled, label = "when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ResultSet indexResultSet = mockIndexMetaDataResultSet()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertLoadCondition2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(12)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertLoadCondition3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION3).executeQuery()).thenReturn(resultSet)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ResultSet resultSet = mockTableMetaDataResultSet()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(dataSource.getConnection().getMetaData().getDatabaseMajorVersion()).thenReturn(11)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "when(dataSource.getConnection().getMetaData().getDatabaseMinorVersion()).thenReturn(2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUTEXISTEDTABLES).executeQuery()).thenReturn(primaryKeys)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ResultSet primaryKeys = mockPrimaryKeysMetaDataResultSet()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataSource dataSource = mockDataSource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(dataSource.getConnection().prepareStatement(ALL_CONSTRAINTS_SQL_WITHOUT_TABLES).executeQuery()).thenReturn(primaryKeys)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "when(dataSource.getConnection().prepareStatement(ALL_INDEXES_SQL).executeQuery()).thenReturn(indexResultSet)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTableMetaDataMap(getTableMetaDataLoader().load(dataSource,Collections.emptyList()))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(dataSource.getConnection().prepareStatement(ALL_TAB_COLUMNS_SQL_CONDITION2).executeQuery()).thenReturn(resultSet)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertLoadCondition2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
10->15 [style = bold, label=""];
9->11 [style = bold, label=""];
6->13 [style = solid, label="resultSet"];
10->3 [style = bold, label=""];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
15->16 [style = bold, label=""];
7->4 [style = solid, label="indexResultSet"];
0->7 [style = bold, label=""];
10->11 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
16->1 [style = bold, label=""];
11->3 [style = bold, label=""];
12->8 [style = bold, label=""];
13->7 [style = bold, label=""];
8->1 [style = solid, label="dataSource"];
6->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
9->11 [style = solid, label="primaryKeys"];
6->0 [style = solid, label="resultSet"];
3->15 [style = dashed, label="0"];
14->8 [style = bold, label=""];
9->10 [style = solid, label="primaryKeys"];
2->8 [style = bold, label=""];
}
