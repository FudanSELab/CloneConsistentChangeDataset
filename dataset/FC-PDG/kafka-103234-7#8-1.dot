digraph {
6 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Subject subject = new Subject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "verifyZeroInteractions((Object(()extensions)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1(,tokens(2()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "loginModule2.commit()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "OAuthBearerToken(( tokens = new OAuthBearerToken((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bc538d@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "loginModule1.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertSame(tokens(2(,privateCredentials.iterator().next())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Set<Object> privateCredentials = subject.getPrivateCredentials()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "login1Commit1Login2Abort2Login3Commit3Logout3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "loginModule2.logout()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertSame(tokens(1(,privateCredentials.iterator().next())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "loginModule1.login()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(2,publicCredentials.size())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Iterator<Object> iterator = privateCredentials.iterator()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "loginModule2.login()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "loginModule2.commit()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertSame(extensions(1(,publicCredentials.iterator().next())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(2,privateCredentials.size())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Iterator<Object> publicIterator = publicCredentials.iterator()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "loginModule1.logout()@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(0,privateCredentials.size())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SaslExtensions(( extensions = new SaslExtensions((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bc53a0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "verifyZeroInteractions((Object(()tokens)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertSame(extensions(2(,publicCredentials.iterator().next())@@@59@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "OAuthBearerLoginModule loginModule2 = new OAuthBearerLoginModule()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.replay(tokens(0(,tokens(1()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "loginModule2.abort()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "login1Commit1Logout1Login2Commit2Logout2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "EasyMock.replay(extensions(0(,extensions(1(,extensions(2()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Set<Object> publicCredentials = subject.getPublicCredentials()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "loginModule3.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "login1Commit1Logout1Login2Commit2Logout2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "OAuthBearerLoginModule loginModule1 = new OAuthBearerLoginModule()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,privateCredentials.size())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "loginModule2.initialize(subject,testTokenCallbackHandler,Collections.emptyMap(),Collections.emptyMap())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "loginModule2.login()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertNotSame(tokens(1(,iterator.next())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,publicCredentials.size())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "loginModule1.commit()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "loginModule1.logout()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestCallbackHandler testTokenCallbackHandler = new TestCallbackHandler(tokens,extensions)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertNotSame(extensions(1(,publicIterator.next())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "OAuthBearerLoginModule loginModule3 = new OAuthBearerLoginModule()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(1,publicCredentials.size())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertSame(tokens(0(,privateCredentials.iterator().next())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertSame(extensions(0(,publicCredentials.iterator().next())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63->72 [style = bold, label=""];
27->32 [style = bold, label=""];
34->9 [style = bold, label=""];
20->52 [style = dashed, label="0"];
0->13 [style = bold, label=""];
20->26 [style = bold, label=""];
4->15 [style = bold, label=""];
38->4 [style = bold, label=""];
48->55 [style = solid, label="iterator"];
25->14 [style = bold, label=""];
7->31 [style = bold, label=""];
70->53 [style = bold, label=""];
61->59 [style = bold, label=""];
21->18 [style = bold, label=""];
59->66 [style = bold, label=""];
71->58 [style = bold, label=""];
15->0 [style = bold, label=""];
49->56 [style = bold, label=""];
4->51 [style = solid, label="subject"];
13->37 [style = solid, label="tokens"];
24->27 [style = bold, label=""];
9->24 [style = bold, label=""];
13->1 [style = solid, label="tokens"];
64->40 [style = bold, label=""];
55->60 [style = bold, label=""];
23->25 [style = bold, label=""];
13->71 [style = solid, label="tokens"];
13->54 [style = solid, label="tokens"];
57->55 [style = bold, label=""];
13->69 [style = solid, label="tokens"];
1->56 [style = dashed, label="0"];
11->56 [style = solid, label="extensions"];
22->51 [style = solid, label="testTokenCallbackHandler"];
11->65 [style = solid, label="extensions"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
8->22 [style = bold, label=""];
13->25 [style = solid, label="tokens"];
4->5 [style = solid, label="subject"];
13->22 [style = solid, label="tokens"];
26->46 [style = dashed, label="0"];
11->14 [style = solid, label="extensions"];
31->28 [style = bold, label=""];
35->34 [style = bold, label=""];
11->70 [style = solid, label="extensions"];
53->43 [style = bold, label=""];
66->49 [style = bold, label=""];
11->62 [style = solid, label="extensions"];
60->44 [style = bold, label=""];
28->29 [style = bold, label=""];
44->61 [style = bold, label=""];
22->34 [style = solid, label="testTokenCallbackHandler"];
30->17 [style = bold, label=""];
62->22 [style = bold, label=""];
52->46 [style = bold, label=""];
18->23 [style = bold, label=""];
45->51 [style = bold, label=""];
11->22 [style = solid, label="extensions"];
51->9 [style = bold, label=""];
12->20 [style = bold, label=""];
8->62 [style = dashed, label="0"];
14->19 [style = bold, label=""];
29->37 [style = bold, label=""];
32->16 [style = bold, label=""];
1->7 [style = bold, label=""];
47->50 [style = bold, label=""];
42->4 [style = bold, label=""];
17->12 [style = bold, label=""];
10->5 [style = bold, label=""];
11->3 [style = bold, label=""];
22->5 [style = solid, label="testTokenCallbackHandler"];
3->8 [style = bold, label=""];
22->10 [style = bold, label=""];
11->22 [style = bold, label=""];
50->64 [style = bold, label=""];
46->69 [style = bold, label=""];
58->65 [style = bold, label=""];
5->35 [style = bold, label=""];
37->39 [style = bold, label=""];
65->63 [style = bold, label=""];
11->50 [style = solid, label="extensions"];
13->68 [style = solid, label="tokens"];
43->71 [style = bold, label=""];
13->66 [style = solid, label="tokens"];
13->41 [style = solid, label="tokens"];
40->48 [style = bold, label=""];
11->44 [style = solid, label="extensions"];
13->67 [style = solid, label="tokens"];
33->6 [style = bold, label=""];
68->62 [style = bold, label=""];
34->45 [style = bold, label=""];
11->68 [style = bold, label=""];
72->54 [style = bold, label=""];
41->57 [style = bold, label=""];
6->36 [style = bold, label=""];
36->1 [style = bold, label=""];
4->34 [style = solid, label="subject"];
13->3 [style = solid, label="tokens"];
11->7 [style = solid, label="extensions"];
67->41 [style = bold, label=""];
3->68 [style = dashed, label="0"];
54->47 [style = bold, label=""];
11->39 [style = solid, label="extensions"];
16->21 [style = bold, label=""];
11->8 [style = solid, label="extensions"];
14->12 [style = bold, label=""];
48->67 [style = bold, label=""];
11->60 [style = solid, label="extensions"];
12->52 [style = bold, label=""];
69->70 [style = bold, label=""];
26->33 [style = bold, label=""];
19->30 [style = bold, label=""];
}
