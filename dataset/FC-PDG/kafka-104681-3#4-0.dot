digraph {
7 [style = filled, label = "EasyMock.expectLastCall()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "standardStartup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "workerTask.run()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "standardStartup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "verify(workerTask)@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expectLastCall()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "workerTask.close()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "statusListener.onStartup(taskId)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(workerTask)@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "workerTask.awaitStop(1000L)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "statusListener.onShutdown(taskId)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "expectLastCall()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor().withArgs(new ConnectorTaskId(\"foo\",0)).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectLastCall()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,).withArgs(taskId,statusListener).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "workerTask.stop()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "TaskStatus.Listener statusListener = EasyMock.createMock()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "expectLastCall()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "workerTask.run()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "workerTask.close()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "workerTask.stop()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "workerTask.awaitStop(1000L)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "expectLastCall()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "stopBeforeStarting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expectLastCall()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "replay(workerTask)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "replay(workerTask)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
2->13 [style = solid, label="workerTask"];
24->28 [style = bold, label=""];
30->24 [style = bold, label=""];
7->1 [style = bold, label=""];
30->25 [style = solid, label="taskId"];
25->22 [style = bold, label=""];
26->17 [style = bold, label=""];
20->26 [style = bold, label=""];
1->15 [style = bold, label=""];
9->4 [style = bold, label=""];
4->19 [style = bold, label=""];
28->20 [style = solid, label="workerTask"];
18->30 [style = bold, label=""];
31->2 [style = bold, label=""];
11->12 [style = bold, label=""];
28->1 [style = bold, label=""];
7->4 [style = bold, label=""];
5->14 [style = bold, label=""];
2->10 [style = solid, label="workerTask"];
22->5 [style = bold, label=""];
19->25 [style = bold, label=""];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
8->7 [style = bold, label=""];
6->2 [style = bold, label=""];
9->19 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
29->27 [style = bold, label=""];
11->5 [style = bold, label=""];
0->10 [style = bold, label=""];
21->20 [style = bold, label=""];
28->23 [style = solid, label="workerTask"];
5->12 [style = bold, label=""];
16->21 [style = bold, label=""];
15->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
3->13 [style = bold, label=""];
27->23 [style = bold, label=""];
12->3 [style = bold, label=""];
30->16 [style = solid, label="taskId"];
32->13 [style = bold, label=""];
3->32 [style = bold, label=""];
17->29 [style = bold, label=""];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
}
