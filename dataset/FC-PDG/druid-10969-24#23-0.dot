digraph {
0 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "server.setHandler(handler)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)binder.bind().toInstance(testRequestLogger)binder.bind().toInstance(rootSchema)for (NamedSchema schema : rootSchema.getNamedSchemas().values()){Multibinder.newSetBinder(binder,).addBinding().toInstance(schema)}binder.bind().toInstance(CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate))binder.bind().toInstance(operatorTable)binder.bind().toInstance(macroTable)binder.bind().toInstance(plannerConfig)binder.bind().annotatedWith().toInstance(CalciteTests.DRUID_SCHEMA_NAME)binder.bind().toInstance(AVATICA_CONFIG)binder.bind().to()binder.bind().in()binder.bind().toProvider().in()}}))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final AbstractAvaticaHandler handler = this.getAvaticaHandler(druidMeta)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "druidMeta = injector.getInstance()@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@47@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "server.start()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "druidMeta = injector.getInstance()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "url = this.getJdbcConnectionString(port)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlQueryId\",DUMMY_SQL_QUERY_ID)@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final AbstractAvaticaHandler handler = this.getAvaticaHandler(druidMeta)@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final DruidSchemaCatalog rootSchema = CalciteTests.createMockRootSchema(conglomerate,walker,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final SchemaPlus rootSchema = CalciteTests.createMockRootSchema(conglomerate,walker,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testRequestLogger = new TestRequestLogger()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->18 [style = solid, label="port"];
17->8 [style = bold, label=""];
18->3 [style = bold, label=""];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
17->13 [style = solid, label="walker"];
20->17 [style = bold, label=""];
11->14 [style = solid, label="druidMeta"];
15->3 [style = solid, label="handler"];
3->1 [style = bold, label=""];
26->17 [style = bold, label=""];
7->9 [style = solid, label="port"];
11->14 [style = bold, label=""];
12->21 [style = bold, label=""];
10->19 [style = bold, label=""];
16->6 [style = bold, label=""];
17->12 [style = solid, label="walker"];
4->6 [style = solid, label="url"];
8->12 [style = solid, label="plannerConfig"];
2->18 [style = bold, label=""];
8->25 [style = solid, label="plannerConfig"];
14->15 [style = solid, label="handler"];
9->15 [style = solid, label="druidMeta"];
13->11 [style = bold, label=""];
22->23 [style = bold, label=""];
25->13 [style = solid, label="rootSchema"];
5->25 [style = bold, label=""];
14->7 [style = bold, label=""];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
21->13 [style = solid, label="testRequestLogger"];
23->24 [style = bold, label=""];
5->13 [style = solid, label="macroTable"];
12->25 [style = dashed, label="0"];
8->13 [style = solid, label="plannerConfig"];
5->12 [style = bold, label=""];
18->19 [style = solid, label="url"];
9->15 [style = bold, label=""];
12->13 [style = solid, label="rootSchema"];
6->10 [style = bold, label=""];
18->1 [style = solid, label="url"];
10->24 [style = solid, label="propertiesLosAngeles"];
17->25 [style = solid, label="walker"];
7->18 [style = solid, label="port"];
2->4 [style = solid, label="port"];
4->16 [style = solid, label="url"];
4->19 [style = solid, label="propertiesLosAngeles"];
13->9 [style = bold, label=""];
0->13 [style = solid, label="operatorTable"];
19->22 [style = bold, label=""];
4->24 [style = solid, label="url"];
0->5 [style = bold, label=""];
4->16 [style = bold, label=""];
25->21 [style = bold, label=""];
21->13 [style = bold, label=""];
18->3 [style = solid, label="url"];
}
