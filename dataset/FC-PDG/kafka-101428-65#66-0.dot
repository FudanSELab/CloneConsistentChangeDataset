digraph {
67 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,2,\"XX2+null\",7L)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
138 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(0(,null,0L)@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
125 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+b0\",0),new KeyValueTimestamp<>(0,\"B0+b0\",0),new KeyValueTimestamp<>(1,\"A1+b1\",0),new KeyValueTimestamp<>(1,\"B1+b1\",0),new KeyValueTimestamp<>(2,\"B2+b2\",0),new KeyValueTimestamp<>(3,\"B3+b3\",0))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final KTable<Integer,String> table1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"XXX1+YY1\",6L)@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"XXXX1+null\",13L)@@@72@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"a\" + expectedKeys(i())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(0(,null,0L))@@@73@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertNull(driver.readOutput(output))@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(i(,\"X\" + expectedKeys(i(,5L + i)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"XX1+Y1\",10L)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
108 [style = filled, label = "inputTopic2.pipeInput(expectedKeys(0(,null,5L)@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,null,42L)@@@81@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
119 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),StreamJoined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXXX2+YY2\",13L)@@@70@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
100 [style = filled, label = "inputTopic1.pipeInput(null,\"SomeVal\",42L)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertNull(driver.readOutput(output))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+null\",6L)@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"null+YY2\",10L)@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bd6e7c@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+Y0\",7L)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+YY0\",7L)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
142 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+YY0\",6L)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "table2 = builder.table(topic2,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"X0+Y0\",5L)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
117 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,3,\"XX3+null\",7L)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "joined = table1.outerJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+Y1\",10L)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
121 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "i++@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertNull(driver.readOutput(output))@@@81@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final KTable<Integer,String> table2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+Y1\",10L)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
143 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXXX0+null\",13L)@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+YY2\",10L)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
99 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,3,\"XXXX3+YY3\",15L)@@@74@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+a0\",0),new KeyValueTimestamp<>(1,\"A1+a1\",0))@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+YY3\",15L)@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"XXX1+null\",7L)@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "inputTopic2.pipeInput(expectedKeys(i(,\"Y\" + expectedKeys(i(,10L * i)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
122 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(2(,null,5L))@@@75@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
140 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@bd70d5@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNull(driver.readOutput(output))@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "inputTopic1.pipeInput(expectedKey,\"XXX\" + expectedKey,6L)@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@67@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
130 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"B0+a0\",0),new KeyValueTimestamp<>(1,\"B1+a1\",0))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXX\" + expectedKey,6L))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
113 [style = filled, label = "inputTopic1.pipeInput(expectedKey,\"XXXX\" + expectedKey,13L)@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,2,\"null+YY2\",10L)@@@82@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"X1+Y1\",10L)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
118 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"XXX0+null\",6L)@@@65@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,null,42L)@@@78@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
106 [style = filled, label = "final TestInputTopic<Integer,String> inputTopic2 = driver.createInputTopic(topic2,Serdes.Integer().serializer(),Serdes.String().serializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
137 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"B\" + expectedKey))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(driver.readOutput(output))@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+null\",7L)@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+YY1\",7L)@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
93 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"XXX0+YY0\",6L)@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
129 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "i++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
139 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(3(,null,20L)@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final KTable<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+YY1\",6L)@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey,7L))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
114 [style = filled, label = "inputTopic2.pipeInput(expectedKey,\"YY\" + expectedKey,expectedKey * 5L)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(3(,null,20L))@@@76@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
126 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@84@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
97 [style = filled, label = "inputTopic2.pipeInput(expectedKeys(1(,null,7L)@@@64@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+null\",5L)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"null+YY3\",20L)@@@80@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"XX0+YY0\",7L)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+Y0\",5L)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
112 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,2,\"XXX2+YY2\",10L)@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
120 [style = filled, label = "i < 2@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(2(,null,5L)@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
136 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"C0+a0\",0),new KeyValueTimestamp<>(0,\"C0+b0\",0),new KeyValueTimestamp<>(1,\"C1+a1\",0),new KeyValueTimestamp<>(1,\"C1+b1\",0),new KeyValueTimestamp<>(2,\"C2+b2\",0),new KeyValueTimestamp<>(3,\"C3+b3\",0))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(1(,null,7L))@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertNull(driver.readOutput(output))@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,null,0L)@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
128 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"XX1+YY1\",7L)@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"X0+null\",5L)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
105 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,3,\"XX3+YY3\",15L)@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
111 [style = filled, label = "final TestOutputTopic<Integer,String> outputTopic = driver.createOutputTopic(output,Serdes.Integer().deserializer(),Serdes.String().deserializer())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(0(,null,5L))@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+null\",6L)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
87 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,3,\"null+YY3\",20L)@@@83@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\",42L))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertNull(driver.readOutput(output))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "table1 = builder.table(topic1,consumed)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"XXXX0+null\",13L)@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
101 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@75@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
127 [style = filled, label = "processor.checkAndClearProcessResult(EMPTY)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "i++@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,2,\"XXXX2+YY2\",13L)@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
141 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "i < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,\"XX0+Y0\",7L)@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
134 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNull(driver.readOutput(output))@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "joined.toStream().to(output)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXX2+YY2\",10L)@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
123 [style = filled, label = "processor.checkAndClearProcessResult(new KeyValueTimestamp<>(0,\"A0+c0\",0),new KeyValueTimestamp<>(0,\"B0+c0\",0),new KeyValueTimestamp<>(0,\"C0+c0\",0),new KeyValueTimestamp<>(1,\"A1+c1\",0),new KeyValueTimestamp<>(1,\"B1+c1\",0),new KeyValueTimestamp<>(1,\"C1+c1\",0))@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXXX3+YY3\",15L)@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXX3+YY3\",15L)@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+null\",7L)@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "final TestInputTopic<Integer,String> inputTopic1 = driver.createInputTopic(topic1,Serdes.Integer().serializer(),Serdes.String().serializer(),Instant.ofEpochMilli(0L),Duration.ZERO)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "inputTopic1.pipeInput(expectedKeys(1(,null,42L)@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
133 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,3,\"XXX3+YY3\",15L)@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
115 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,1,\"X1+null\",6L)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
132 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "inputTopic1.pipeInput(expectedKey,\"XX\" + expectedKey,7L)@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertTrue(outputTopic.isEmpty())@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXXX\" + expectedKey,13L))@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+null\",7L)@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
131 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,0,null,0L)@@@80@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
86 [style = filled, label = "inputTopic2.pipeInput(null,\"AnotherVal\",73L)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(1(,null,42L))@@@74@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "assertOutputKeyValueTimestamp(outputTopic,2,\"XX2+YY2\",10L)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXXX1+null\",13L)@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45->89 [style = bold, label=""];
41->10 [style = solid, label="i"];
0->30 [style = bold, label=""];
64->36 [style = bold, label=""];
64->133 [style = solid, label="i"];
120->45 [style = bold, label=""];
23->51 [style = bold, label=""];
111->110 [style = solid, label="outputTopic"];
109->104 [style = bold, label=""];
31->9 [style = bold, label=""];
46->19 [style = solid, label="expectedKeys"];
90->99 [style = bold, label=""];
134->137 [style = bold, label=""];
5->107 [style = solid, label="i"];
63->38 [style = dashed, label="0"];
41->89 [style = solid, label="i"];
46->66 [style = solid, label="expectedKeys"];
141->48 [style = dotted, label="true"];
59->45 [style = dashed, label="0"];
141->123 [style = bold, label=""];
113->76 [style = bold, label=""];
45->124 [style = bold, label=""];
64->55 [style = solid, label="i"];
7->100 [style = dashed, label="0"];
51->53 [style = bold, label=""];
103->90 [style = bold, label=""];
38->130 [style = bold, label=""];
45->59 [style = dotted, label="true"];
63->116 [style = dashed, label="0"];
12->84 [style = dashed, label="0"];
89->10 [style = bold, label=""];
43->18 [style = bold, label=""];
111->71 [style = solid, label="outputTopic"];
41->59 [style = solid, label="i"];
36->55 [style = bold, label=""];
144->120 [style = bold, label=""];
46->59 [style = solid, label="expectedKeys"];
107->55 [style = bold, label=""];
46->104 [style = solid, label="expectedKeys"];
26->65 [style = bold, label=""];
0->134 [style = dashed, label="0"];
6->66 [style = bold, label=""];
21->26 [style = bold, label=""];
93->92 [style = bold, label=""];
142->62 [style = bold, label=""];
73->80 [style = bold, label=""];
36->55 [style = solid, label="i"];
61->22 [style = bold, label=""];
45->89 [style = dotted, label="true"];
54->118 [style = dashed, label="0"];
8->123 [style = dashed, label="0"];
55->107 [style = solid, label="i"];
138->134 [style = bold, label=""];
48->114 [style = dashed, label="0"];
112->71 [style = bold, label=""];
128->141 [style = bold, label=""];
53->41 [style = bold, label=""];
45->38 [style = bold, label=""];
111->94 [style = solid, label="outputTopic"];
48->131 [style = solid, label="i"];
119->139 [style = bold, label=""];
74->102 [style = bold, label=""];
141->131 [style = dotted, label="true"];
41->45 [style = bold, label=""];
140->45 [style = solid, label="expectedKeys"];
63->50 [style = bold, label=""];
5->36 [style = solid, label="i"];
60->109 [style = dashed, label="0"];
55->64 [style = bold, label=""];
48->34 [style = bold, label=""];
118->68 [style = bold, label=""];
55->36 [style = dotted, label="true"];
127->144 [style = bold, label=""];
14->37 [style = bold, label=""];
80->93 [style = bold, label=""];
140->135 [style = bold, label=""];
46->36 [style = solid, label="expectedKeys"];
48->121 [style = dashed, label="0"];
116->91 [style = bold, label=""];
62->46 [style = bold, label=""];
76->103 [style = bold, label=""];
140->133 [style = solid, label="expectedKeys"];
20->104 [style = dashed, label="0"];
2->136 [style = dashed, label="0"];
111->112 [style = solid, label="outputTopic"];
33->3 [style = bold, label=""];
69->87 [style = bold, label=""];
46->97 [style = solid, label="expectedKeys"];
64->36 [style = solid, label="i"];
55->133 [style = dotted, label="true"];
50->91 [style = dashed, label="0"];
29->119 [style = dashed, label="0"];
111->90 [style = solid, label="outputTopic"];
39->8 [style = bold, label=""];
45->59 [style = bold, label=""];
111->99 [style = solid, label="outputTopic"];
46->74 [style = solid, label="expectedKeys"];
132->136 [style = bold, label=""];
47->80 [style = dashed, label="0"];
49->94 [style = dashed, label="0"];
23->81 [style = dashed, label="0"];
120->124 [style = dotted, label="true"];
67->117 [style = bold, label=""];
88->114 [style = bold, label=""];
111->98 [style = solid, label="outputTopic"];
87->116 [style = bold, label=""];
18->112 [style = dashed, label="0"];
13->11 [style = bold, label=""];
71->75 [style = bold, label=""];
28->110 [style = dashed, label="0"];
8->76 [style = dashed, label="0"];
59->89 [style = dashed, label="0"];
3->0 [style = bold, label=""];
114->95 [style = bold, label=""];
39->113 [style = dashed, label="0"];
19->74 [style = dashed, label="0"];
57->78 [style = dashed, label="0"];
56->83 [style = dashed, label="0"];
46->140 [style = dashed, label="0"];
104->74 [style = bold, label=""];
21->79 [style = dashed, label="0"];
49->25 [style = bold, label=""];
45->86 [style = bold, label=""];
111->83 [style = solid, label="outputTopic"];
111->95 [style = solid, label="outputTopic"];
78->94 [style = bold, label=""];
122->119 [style = bold, label=""];
62->140 [style = bold, label=""];
98->78 [style = bold, label=""];
26->67 [style = dashed, label="0"];
7->23 [style = bold, label=""];
32->58 [style = bold, label=""];
46->33 [style = bold, label=""];
10->45 [style = bold, label=""];
47->2 [style = bold, label=""];
110->83 [style = bold, label=""];
115->70 [style = bold, label=""];
55->133 [style = bold, label=""];
64->100 [style = bold, label=""];
133->36 [style = bold, label=""];
36->107 [style = dashed, label="0"];
64->36 [style = dotted, label="true"];
111->105 [style = solid, label="outputTopic"];
59->10 [style = bold, label=""];
97->118 [style = bold, label=""];
131->48 [style = bold, label=""];
29->35 [style = bold, label=""];
136->128 [style = bold, label=""];
31->103 [style = dashed, label="0"];
144->124 [style = solid, label="i"];
20->19 [style = bold, label=""];
4->47 [style = bold, label=""];
81->115 [style = bold, label=""];
14->102 [style = dashed, label="0"];
111->5 [style = bold, label=""];
5->55 [style = solid, label="i"];
52->63 [style = bold, label=""];
12->60 [style = bold, label=""];
65->15 [style = bold, label=""];
2->43 [style = bold, label=""];
40->29 [style = bold, label=""];
111->79 [style = solid, label="outputTopic"];
24->96 [style = dashed, label="0"];
111->102 [style = solid, label="outputTopic"];
64->55 [style = dotted, label="true"];
117->88 [style = bold, label=""];
10->45 [style = solid, label="i"];
60->20 [style = bold, label=""];
30->17 [style = bold, label=""];
44->62 [style = bold, label=""];
111->67 [style = solid, label="outputTopic"];
1->52 [style = bold, label=""];
8->31 [style = bold, label=""];
102->98 [style = bold, label=""];
38->24 [style = bold, label=""];
64->55 [style = bold, label=""];
46->89 [style = solid, label="expectedKeys"];
55->127 [style = bold, label=""];
86->96 [style = bold, label=""];
85->113 [style = bold, label=""];
111->96 [style = solid, label="outputTopic"];
3->138 [style = dashed, label="0"];
17->40 [style = bold, label=""];
35->32 [style = bold, label=""];
46->16 [style = solid, label="expectedKeys"];
10->59 [style = solid, label="i"];
9->90 [style = dashed, label="0"];
46->109 [style = solid, label="expectedKeys"];
111->68 [style = solid, label="outputTopic"];
83->105 [style = bold, label=""];
111->78 [style = solid, label="outputTopic"];
128->141 [style = solid, label="i"];
124->120 [style = solid, label="i"];
120->59 [style = bold, label=""];
27->71 [style = dashed, label="0"];
65->117 [style = dashed, label="0"];
34->125 [style = dashed, label="0"];
16->54 [style = bold, label=""];
91->79 [style = bold, label=""];
34->28 [style = bold, label=""];
42->4 [style = bold, label=""];
68->85 [style = bold, label=""];
13->68 [style = dashed, label="0"];
111->93 [style = solid, label="outputTopic"];
77->106 [style = bold, label=""];
137->139 [style = solid, label="supplier"];
100->81 [style = bold, label=""];
105->73 [style = bold, label=""];
19->14 [style = bold, label=""];
99->101 [style = bold, label=""];
111->115 [style = solid, label="outputTopic"];
34->95 [style = dashed, label="0"];
61->99 [style = dashed, label="0"];
101->84 [style = bold, label=""];
135->138 [style = bold, label=""];
66->16 [style = bold, label=""];
144->45 [style = solid, label="i"];
55->36 [style = solid, label="i"];
51->115 [style = dashed, label="0"];
38->86 [style = dashed, label="0"];
2->93 [style = dashed, label="0"];
141->131 [style = bold, label=""];
15->48 [style = bold, label=""];
36->133 [style = solid, label="i"];
42->105 [style = dashed, label="0"];
111->118 [style = solid, label="outputTopic"];
79->67 [style = bold, label=""];
121->125 [style = bold, label=""];
47->132 [style = dashed, label="0"];
24->1 [style = bold, label=""];
108->97 [style = bold, label=""];
50->130 [style = dashed, label="0"];
92->112 [style = bold, label=""];
128->131 [style = solid, label="i"];
46->84 [style = solid, label="expectedKeys"];
5->64 [style = solid, label="i"];
10->89 [style = solid, label="i"];
37->57 [style = bold, label=""];
43->92 [style = dashed, label="0"];
72->62 [style = bold, label=""];
46->108 [style = solid, label="expectedKeys"];
1->69 [style = dashed, label="0"];
58->77 [style = bold, label=""];
140->131 [style = solid, label="expectedKeys"];
84->109 [style = bold, label=""];
45->10 [style = dotted, label="true"];
120->45 [style = dotted, label="true"];
36->133 [style = dashed, label="0"];
111->69 [style = solid, label="outputTopic"];
111->117 [style = solid, label="outputTopic"];
64->107 [style = dotted, label="true"];
126->122 [style = bold, label=""];
58->129 [style = bold, label=""];
111->103 [style = solid, label="outputTopic"];
66->108 [style = dashed, label="0"];
16->97 [style = dashed, label="0"];
143->64 [style = bold, label=""];
94->82 [style = bold, label=""];
59->38 [style = bold, label=""];
124->45 [style = solid, label="i"];
64->107 [style = bold, label=""];
46->20 [style = solid, label="expectedKeys"];
27->6 [style = bold, label=""];
56->42 [style = bold, label=""];
28->56 [style = bold, label=""];
124->120 [style = bold, label=""];
48->141 [style = solid, label="i"];
111->92 [style = solid, label="outputTopic"];
128->48 [style = solid, label="i"];
64->7 [style = bold, label=""];
9->61 [style = bold, label=""];
75->108 [style = bold, label=""];
70->41 [style = bold, label=""];
55->64 [style = solid, label="i"];
111->81 [style = solid, label="outputTopic"];
130->121 [style = bold, label=""];
129->143 [style = bold, label=""];
41->45 [style = solid, label="i"];
111->91 [style = solid, label="outputTopic"];
54->13 [style = bold, label=""];
18->27 [style = bold, label=""];
17->126 [style = dashed, label="0"];
33->135 [style = dashed, label="0"];
22->12 [style = bold, label=""];
111->76 [style = solid, label="outputTopic"];
122->119 [style = solid, label="stream2"];
37->98 [style = dashed, label="0"];
58->5 [style = bold, label=""];
46->107 [style = solid, label="expectedKeys"];
11->39 [style = bold, label=""];
57->49 [style = bold, label=""];
48->141 [style = bold, label=""];
137->126 [style = bold, label=""];
125->132 [style = bold, label=""];
50->21 [style = bold, label=""];
95->110 [style = bold, label=""];
17->40 [style = solid, label="table2"];
106->111 [style = bold, label=""];
96->69 [style = bold, label=""];
139->32 [style = bold, label=""];
144->120 [style = solid, label="i"];
46->60 [style = solid, label="expectedKeys"];
46->12 [style = solid, label="expectedKeys"];
5->64 [style = bold, label=""];
}
