digraph {
4 [style = filled, label = "testQuery(\"SELECT dim1, m1, COUNT(*) FROM druid.foo WHERE m1 - CAST(? as INT) = dim1 GROUP BY dim1, m1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimFilter(expressionFilter(\"((\"m1\" - 1) == CAST(\"dim1\", 'DOUBLE'))\")).setDimensions(dimensions(new DefaultDimensionSpec(\"dim1\",\"d0\"),new DefaultDimensionSpec(\"m1\",\"d1\",ValueType.FLOAT))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8e1097,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8e109d): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8e10a6),ImmutableList.of(new SqlParameter(SqlType.INTEGER,1)))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testColumnComparison['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testQuery(\"SELECT dim1, m1, COUNT(*) FROM druid.foo WHERE m1 - 1 = dim1 GROUP BY dim1, m1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setDimFilter(expressionFilter(\"((\"m1\" - 1) == CAST(\"dim1\", 'DOUBLE'))\")).setDimensions(dimensions(new DefaultDimensionSpec(\"dim1\",\"d0\"),new DefaultDimensionSpec(\"m1\",\"d1\",ValueType.FLOAT))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8e1039,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8e103f): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8e1048))@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cannotVectorize()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testParamsTuckedInACast['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testColumnComparison['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->1 [style = bold, label=""];
1->4 [style = bold, label=""];
0->4 [style = dashed, label="0"];
1->0 [style = bold, label=""];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
}
