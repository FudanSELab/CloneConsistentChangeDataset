digraph {
13 [style = filled, label = "infoStream != null@@@28@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "FieldInfos fieldInfos@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFieldNorms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SegmentReader reader@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new RuntimeException(\"field: \" + info.name + \" should omit norms but has them!\")@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkDocValues(dv,info.name,info.getNormType(),reader.maxDoc())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testDocValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DocValues dv = reader.normValues(info.name)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "infoStream.print(\" test: field norms.........\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "infoStream != null@@@5@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFieldNorms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "msg(\"ERROR (\" + String.valueOf(e.getMessage()) + \"(\")@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "reader.normValues(info.name) != null@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "status.error = e@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SegmentReader reader@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "msg(\"OK (\" + status.totFields + \" fields(\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "throw new RuntimeException(\"field: \" + info.name + \" should have norms but omits them!\")@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "reader.hasNorms(info.name)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "info.normsPresent()@@@18@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "SegmentInfo info@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SegmentReader reader@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "e.printStackTrace(infoStream)@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "++status.totFields@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Throwable e@@@25@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return status@@@32@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Status.FieldNormStatus status = new Status.FieldNormStatus()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->12 [style = dotted, label="true"];
19->18 [style = bold, label=""];
15->7 [style = bold, label=""];
17->6 [style = bold, label=""];
9->2 [style = bold, label=""];
0->12 [style = bold, label=""];
12->15 [style = bold, label=""];
19->18 [style = dotted, label="true"];
16->4 [style = solid, label="status"];
21->22 [style = dotted, label="true"];
7->0 [style = bold, label=""];
15->6 [style = bold, label=""];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
0->15 [style = bold, label=""];
7->5 [style = dotted, label="true"];
15->17 [style = dotted, label="true"];
17->7 [style = bold, label=""];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
7->0 [style = dotted, label="false"];
20->16 [style = bold, label=""];
5->6 [style = bold, label=""];
7->11 [style = dotted, label="true"];
10->13 [style = bold, label=""];
20->1 [style = dotted, label="true"];
8->11 [style = solid, label="dv"];
9->2 [style = dotted, label="true"];
9->13 [style = dotted, label="true"];
21->3 [style = dotted, label="true"];
20->3 [style = dotted, label="true"];
5->7 [style = bold, label=""];
18->7 [style = bold, label=""];
7->8 [style = dotted, label="true"];
7->15 [style = dotted, label="false"];
8->11 [style = bold, label=""];
9->10 [style = dotted, label="true"];
19->7 [style = bold, label=""];
13->14 [style = bold, label=""];
13->14 [style = dotted, label="true"];
23->25 [style = dotted, label="true"];
23->24 [style = dotted, label="true"];
14->4 [style = bold, label=""];
13->4 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
