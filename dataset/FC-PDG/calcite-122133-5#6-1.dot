digraph {
7 [style = filled, label = "final RelNode input@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "RexNode condition@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return new BindableFilter(cluster,traitSet,input,condition)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final RelMetadataQuery mq = RelMetadataQuery.instance()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(BindableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.filter(mq,input)}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RelNode input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RelMetadataQuery mq = cluster.getMetadataQuery()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final RelOptCluster cluster = input.getCluster()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RelNode input@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RexNode condition@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RelTraitSet traitSet = cluster.traitSetOf(EnumerableConvention.INSTANCE).replaceIfs(RelCollationTraitDef.INSTANCE,new Supplier<List<RelCollation>>(){public List<RelCollation> get(){return RelMdCollation.filter(mq,input)}}).replaceIf(RelDistributionTraitDef.INSTANCE,new Supplier<RelDistribution>(){public RelDistribution get(){return RelMdDistribution.filter(mq,input)}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "return new EnumerableFilter(cluster,traitSet,input,condition)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
1->4 [style = bold, label=""];
13->14 [style = solid, label="input"];
2->0 [style = dotted, label="true"];
7->4 [style = solid, label="input"];
2->6 [style = bold, label=""];
13->10 [style = solid, label="input"];
11->6 [style = bold, label=""];
11->12 [style = dotted, label="true"];
14->10 [style = bold, label=""];
1->14 [style = solid, label="mq"];
12->10 [style = solid, label="condition"];
11->13 [style = dotted, label="true"];
7->5 [style = solid, label="input"];
3->13 [style = dashed, label="0"];
1->4 [style = solid, label="mq"];
9->6 [style = bold, label=""];
4->5 [style = solid, label="traitSet"];
3->5 [style = solid, label="condition"];
0->5 [style = solid, label="input"];
6->1 [style = bold, label=""];
5->10 [style = dashed, label="0"];
6->10 [style = solid, label="cluster"];
6->8 [style = bold, label=""];
6->5 [style = solid, label="cluster"];
1->8 [style = dashed, label="0"];
1->14 [style = bold, label=""];
4->14 [style = dashed, label="0"];
0->4 [style = solid, label="input"];
14->10 [style = solid, label="traitSet"];
8->4 [style = bold, label=""];
9->7 [style = dotted, label="true"];
4->5 [style = bold, label=""];
8->4 [style = solid, label="mq"];
9->3 [style = dotted, label="true"];
}
