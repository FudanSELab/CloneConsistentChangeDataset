digraph {
3 [style = filled, label = "testWriteCommitProcTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(2L,values.get(\"cnt_write_commitproc_time_ms\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Request req1 = createWriteRequest(1l,2)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),1000L,2000L)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "setupProcessors(0,0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_write_commitproc_time_ms\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "processRequestWithWait(req2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Request req2 = createWriteRequest(1l,2)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_write_commitproc_time_ms\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testWriteFinalProcTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Thread.sleep(1000)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Request req2 = createWriteRequest(1L,2)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testWriteCommitProcTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),0l,1000l)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "commitWithWait(req1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Request req1 = createWriteRequest(1L,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "setupProcessors(0,1000)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "commitWithWait(req1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1L,values.get(\"cnt_write_commitproc_time_ms\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "processRequestWithWait(req1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "commitWithWait(req2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),0L,1000L)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),1000L,2000L)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(0L,values.get(\"cnt_write_final_proc_time_ms\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_final_proc_time_ms\"),1000L,2000L)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_write_final_proc_time_ms\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->15 [style = dashed, label="0"];
8->19 [style = dashed, label="0"];
16->13 [style = bold, label=""];
5->14 [style = solid, label="req1"];
28->5 [style = bold, label=""];
7->1 [style = bold, label=""];
16->13 [style = solid, label="req1"];
5->24 [style = solid, label="req1"];
7->21 [style = dashed, label="0"];
0->17 [style = bold, label=""];
6->23 [style = bold, label=""];
1->12 [style = solid, label="req2"];
9->28 [style = dashed, label="0"];
0->11 [style = bold, label=""];
22->28 [style = bold, label=""];
6->19 [style = bold, label=""];
11->17 [style = dashed, label="0"];
2->4 [style = bold, label=""];
9->16 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
5->13 [style = solid, label="req1"];
1->20 [style = dashed, label="0"];
1->4 [style = solid, label="req2"];
3->9 [style = bold, label=""];
25->27 [style = bold, label=""];
5->16 [style = dashed, label="0"];
12->2 [style = bold, label=""];
23->24 [style = bold, label=""];
10->26 [style = dashed, label="0"];
21->20 [style = bold, label=""];
16->14 [style = solid, label="req1"];
20->12 [style = solid, label="req2"];
11->10 [style = bold, label=""];
24->25 [style = bold, label=""];
5->13 [style = bold, label=""];
6->8 [style = bold, label=""];
20->12 [style = bold, label=""];
17->15 [style = bold, label=""];
1->12 [style = bold, label=""];
18->9 [style = bold, label=""];
9->5 [style = bold, label=""];
20->4 [style = solid, label="req2"];
11->27 [style = dashed, label="0"];
13->6 [style = bold, label=""];
13->14 [style = bold, label=""];
14->6 [style = bold, label=""];
8->23 [style = dashed, label="0"];
27->26 [style = bold, label=""];
19->21 [style = bold, label=""];
}
