digraph {
10 [style = filled, label = "return true@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "isIncluded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return true@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "isExcluded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < excludePatterns.length@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return false@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "isCaseSensitive()? excludeNonPatterns.containsKey(name.toString()): excludeNonPatterns.containsKey(name.toString().toUpperCase())@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ensureNonPatternSetsReady()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TokenizedPath name@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "excludePatterns(i(.matchPath(name,isCaseSensitive())@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final TokenizedPath path@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "isIncluded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "includePatterns(i(.matchPath(path,isCaseSensitive())@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < includePatterns.length@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TokenizedPath path@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "isCaseSensitive()? includeNonPatterns.containsKey(path.toString()): includeNonPatterns.containsKey(path.toString().toUpperCase())@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
4->10 [style = bold, label=""];
13->10 [style = bold, label=""];
14->2 [style = dotted, label="true"];
17->5 [style = bold, label=""];
9->16 [style = dashed, label="0"];
12->5 [style = bold, label=""];
1->14 [style = dashed, label="0"];
9->2 [style = bold, label=""];
4->10 [style = dotted, label="true"];
2->1 [style = bold, label=""];
16->6 [style = bold, label=""];
8->14 [style = bold, label=""];
0->15 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
15->16 [style = solid, label="name"];
16->2 [style = bold, label=""];
9->6 [style = dotted, label="true"];
13->10 [style = dotted, label="true"];
1->7 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
6->2 [style = bold, label=""];
12->11 [style = dotted, label="true"];
14->16 [style = dotted, label="true"];
11->9 [style = solid, label="path"];
8->1 [style = bold, label=""];
3->5 [style = bold, label=""];
17->15 [style = dotted, label="true"];
10->8 [style = bold, label=""];
8->14 [style = solid, label="i"];
8->1 [style = solid, label="i"];
5->13 [style = bold, label=""];
2->14 [style = solid, label="i"];
2->1 [style = solid, label="i"];
5->4 [style = bold, label=""];
2->14 [style = bold, label=""];
1->9 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
4->8 [style = bold, label=""];
0->9 [style = solid, label="path"];
13->8 [style = bold, label=""];
1->2 [style = dotted, label="true"];
4->13 [style = dashed, label="0"];
8->2 [style = solid, label="i"];
16->6 [style = dotted, label="true"];
}
