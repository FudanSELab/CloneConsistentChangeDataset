digraph {
17 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "e = expectThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "query.analyzer(null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "query.lenient(true)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testPrefixNumeric['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testPrefixNumeric['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "query.fuzziness(randomFuzziness(INT_FIELD_NAME))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "QueryShardContext context = createShardContext()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "QueryShardContext context = createShardContext()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MultiMatchQueryBuilder query = new MultiMatchQueryBuilder(42).field(INT_FIELD_NAME).field(BOOLEAN_FIELD_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(e.getMessage(),containsString(\"Can only use fuzzy queries on keyword and text fields\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"Can only use prefix queries on keyword, text and wildcard fields - not on (mapped_int( which is of type (integer(\",e.getMessage())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(e.getMessage(),containsString(\"Can only use fuzzy queries on keyword and text fields\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "query.toQuery(context)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "query.analyzer(\"keyword\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "query.toQuery(context)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertThat(query.toQuery(context),Matchers.instanceOf())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "query.toQuery(context)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "QueryStringQueryBuilder query = queryStringQuery(\"12*\").defaultField(INT_FIELD_NAME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "query.lenient(true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testFuzzinessOnNonStringField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
11->16 [style = bold, label=""];
2->19 [style = dashed, label="0"];
4->6 [style = bold, label=""];
6->7 [style = dashed, label="0"];
19->10 [style = bold, label=""];
9->20 [style = bold, label=""];
20->14 [style = bold, label=""];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
1->17 [style = bold, label=""];
2->0 [style = bold, label=""];
1->20 [style = solid, label="context"];
1->17 [style = dashed, label="0"];
3->2 [style = bold, label=""];
8->2 [style = bold, label=""];
0->1 [style = bold, label=""];
1->15 [style = solid, label="context"];
0->6 [style = solid, label="context"];
5->4 [style = bold, label=""];
18->13 [style = bold, label=""];
0->7 [style = solid, label="context"];
14->15 [style = bold, label=""];
12->19 [style = bold, label=""];
10->1 [style = bold, label=""];
16->9 [style = bold, label=""];
17->18 [style = bold, label=""];
}
