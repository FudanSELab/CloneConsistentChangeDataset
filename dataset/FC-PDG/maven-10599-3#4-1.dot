digraph {
26 [style = filled, label = "ToolchainModel userToolchain = new ToolchainModel()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(2,result.getEffectiveToolchains().getToolchains().size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(\"user_value\",result.getEffectiveToolchains().getToolchains().get(0).getProvides().getProperty(\"key\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(0).getType())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(0).getType())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNotNull(result.getEffectiveToolchains())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PersistedToolchains globalResult = new PersistedToolchains()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "globalResult.addToolchain(globalToolchain)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertNotNull(result.getProblems())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(toolchainsReader.read(any(),anyMap())).thenReturn(globalResult).thenReturn(userResult)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testBuildRequestWithUserToolchains['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "globalToolchain.addProvide(\"key\",\"global_value\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(toolchainsReader.read(any(),anyMap())).thenReturn(userResult)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "userToolchain.addProvide(\"key\",\"user_value\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "globalToolchain.setType(\"TYPE\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "request.setUserToolchainsSource(new StringSource(\"\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ToolchainModel toolchain = new ToolchainModel()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "toolchain.setType(\"TYPE\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "when(toolchainsReader.read(any(),ArgumentMatchers.anyMap())).thenReturn(userResult)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "toolchain.addProvide(\"key\",\"user_value\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "userResult.addToolchain(toolchain)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(0,result.getProblems().size())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ToolchainsBuildingResult result = toolchainBuilder.build(request)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"TYPE\",result.getEffectiveToolchains().getToolchains().get(1).getType())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "userToolchain.setType(\"TYPE\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ToolchainModel globalToolchain = new ToolchainModel()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(1,result.getEffectiveToolchains().getToolchains().size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PersistedToolchains userResult = new PersistedToolchains()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(\"user_value\",result.getEffectiveToolchains().getToolchains().get(0).getProvides().getProperty(\"key\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertNotNull(result.getEffectiveToolchains())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testBuildRequestWithBothToolchains['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(\"global_value\",result.getEffectiveToolchains().getToolchains().get(1).getProvides().getProperty(\"key\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testBuildRequestWithUserToolchains['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "userResult.addToolchain(userToolchain)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "request.setGlobalToolchainsSource(new StringSource(\"\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ToolchainsBuildingResult result = toolchainBuilder.build(request)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ToolchainsBuildingRequest request = new DefaultToolchainsBuildingRequest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
14->3 [style = bold, label=""];
28->29 [style = bold, label=""];
32->35 [style = bold, label=""];
35->27 [style = bold, label=""];
25->28 [style = bold, label=""];
3->1 [style = bold, label=""];
19->31 [style = bold, label=""];
4->10 [style = solid, label="userResult"];
13->29 [style = dashed, label="0"];
26->25 [style = bold, label=""];
11->26 [style = dashed, label="0"];
24->32 [style = bold, label=""];
4->20 [style = solid, label="userResult"];
4->26 [style = bold, label=""];
18->30 [style = bold, label=""];
5->25 [style = dashed, label="0"];
29->23 [style = bold, label=""];
20->1 [style = bold, label=""];
16->2 [style = bold, label=""];
1->7 [style = bold, label=""];
13->16 [style = bold, label=""];
34->22 [style = bold, label=""];
21->12 [style = bold, label=""];
11->13 [style = solid, label="toolchain"];
30->19 [style = bold, label=""];
11->5 [style = bold, label=""];
6->28 [style = dashed, label="0"];
0->14 [style = bold, label=""];
17->12 [style = bold, label=""];
7->34 [style = bold, label=""];
36->24 [style = bold, label=""];
12->1 [style = solid, label="request"];
5->6 [style = bold, label=""];
12->8 [style = bold, label=""];
4->16 [style = solid, label="userResult"];
15->0 [style = bold, label=""];
6->13 [style = bold, label=""];
22->36 [style = bold, label=""];
2->15 [style = bold, label=""];
12->33 [style = bold, label=""];
0->34 [style = dashed, label="0"];
12->2 [style = solid, label="request"];
18->31 [style = solid, label="globalToolchain"];
10->2 [style = bold, label=""];
9->12 [style = bold, label=""];
10->16 [style = dashed, label="0"];
8->4 [style = bold, label=""];
31->20 [style = bold, label=""];
4->11 [style = bold, label=""];
33->8 [style = bold, label=""];
23->18 [style = bold, label=""];
26->29 [style = solid, label="userToolchain"];
}
