digraph {
5 [style = filled, label = "assertGetSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "when(schemaContext.getName()).thenReturn(\"schema\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "ShardingSphereSchema shardingSphereSchema = mock()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(null))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "when(schemaContext.getRuntimeContext()).thenReturn(runtimeContext)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "when(shardingSphereSchema.getDataSources()).thenReturn(Collections.emptyMap())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = createSchemaContextMap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = Collections.singletonMap(\"schema\",schemaContext)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertGetSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(null)))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Map<String,SchemaContext> schemaContextsMap = mockSchemaContextMap(Collections.emptyMap())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RuntimeContext runtimeContext = mock()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(schemaContextsMap.get(\"schema\"),is(ProxyContext.getInstance().getSchema(\"schema\")))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"schema1\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(schemaContextsMap.keySet()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"\")))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "schemaContexts.setAccessible(true)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemaContextsMap,new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertGetAllSchemaNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(schemaContext,is(ProxyContext.getInstance().getSchema(\"schema\")))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(schemaContext.getSchema()).thenReturn(shardingSphereSchema)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SchemaContext schemaContext = mock()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(null,is(ProxyContext.getInstance().getSchema(\"schema1\")))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15->10 [style = solid, label="runtimeContext"];
18->24 [style = bold, label=""];
12->23 [style = dashed, label="0"];
4->0 [style = solid, label="schemaContextsMap"];
22->16 [style = bold, label=""];
2->1 [style = bold, label=""];
27->28 [style = bold, label=""];
0->2 [style = bold, label=""];
30->25 [style = bold, label=""];
28->26 [style = bold, label=""];
24->22 [style = solid, label="schemaContextsMap"];
15->6 [style = bold, label=""];
13->9 [style = solid, label="schemaContext"];
25->29 [style = bold, label=""];
13->25 [style = dashed, label="0"];
12->9 [style = bold, label=""];
14->3 [style = solid, label="shardingSphereSchema"];
7->3 [style = bold, label=""];
13->4 [style = solid, label="schemaContext"];
25->28 [style = solid, label="schemaContextsMap"];
1->20 [style = dashed, label="0"];
9->19 [style = dashed, label="0"];
3->10 [style = bold, label=""];
29->27 [style = bold, label=""];
13->24 [style = dashed, label="0"];
11->0 [style = bold, label=""];
20->23 [style = bold, label=""];
21->22 [style = bold, label=""];
2->16 [style = dashed, label="0"];
5->13 [style = bold, label=""];
23->19 [style = bold, label=""];
24->17 [style = bold, label=""];
1->12 [style = bold, label=""];
10->4 [style = bold, label=""];
4->8 [style = bold, label=""];
14->15 [style = bold, label=""];
2->26 [style = dashed, label="0"];
6->7 [style = bold, label=""];
16->20 [style = bold, label=""];
8->11 [style = bold, label=""];
13->14 [style = bold, label=""];
17->21 [style = bold, label=""];
}
