digraph {
10 [style = filled, label = "b = unknownLiteral@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rewriteIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "builder.project(fields)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.and(conditions),variablesSet)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "variablesSet.isEmpty()@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.desc(builder.field(\"cs\"))))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "expressionOperands.clear()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "operands.add(builder.isNotNull(builder.field(\"cs\")),trueLiteral)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "builder.as(\"ct\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "final List<RexNode> fields = new ArrayList<>(builder.fields())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.filter(builder.or(builder.and(conditions),builder.or(isNullOperands)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "builder.aggregate(builder.groupKey(),builder.count(false,\"c\"),builder.count(builder.fields()).as(\"ck\"))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "operands.add(builder.equals(builder.field(\"ct\",\"c\"),builder.literal(0)),falseLiteral)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "builder.join(JoinRelType.INNER,builder.literal(true),variablesSet)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "builder.join(JoinRelType.INNER,builder.and(conditions),variablesSet)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "allLiterals@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "logic@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "builder.distinct()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "return builder.literal(true)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "builder.filter(conditions)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final RexLiteral falseLiteral = builder.literal(false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RexNode project = builder.and(fields.stream().map(null).collect(Collectors.toList()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "builder.distinct()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,builder.fields()).stream().map(null).collect(Collectors.toList())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "allLiterals@@@81@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RexSubQuery e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "offset += 2@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.aggregate(builder.groupKey(fields))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "operands.add(builder.lessThan(builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),b)@@@89@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "final ImmutableList.Builder<RexNode> operands = ImmutableList.builder()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "RelBuilder builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final List<RexNode> keyIsNulls = e.getOperands().stream().filter(null).map(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "rewriteIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "builder.join(JoinRelType.INNER,trueLiteral,variablesSet)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "builder.sortLimit(0,1,ImmutableList.of(builder.call(SqlStdOperatorTable.DESC,builder.field(\"cs\"))))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "RelBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final List<RexNode> expressionOperands = new ArrayList<>(e.getOperands())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return trueLiteral@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "RexSubQuery e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "!variablesSet.isEmpty()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "builder.as(\"dt\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "isNullOperands.addAll(keyIsNulls)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "operands.add(falseLiteral)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "logic@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RexLiteral b = trueLiteral@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "!allLiterals@@@87@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fields.add(builder.alias(trueLiteral,\"i\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "RelOptUtil.Logic logic@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "builder.push(e.rel)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "logic@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "operands.add(builder.equals(builder.field(\"cs\"),falseLiteral),b)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "logic@@@88@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "!keyIsNulls.isEmpty()@@@78@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "allLiterals@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "int refOffset = offset@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "builder.distinct()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "logic@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "builder.distinct()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "builder.project(builder.alias(builder.literal(true),\"i\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "builder.project(builder.alias(project,\"cs\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return builder.call(SqlStdOperatorTable.CASE,operands.build())@@@95@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "fields.clear()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "builder.as(\"dt\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "builder.push(e.rel)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "operands.add(builder.call(SqlStdOperatorTable.LESS_THAN,builder.field(\"ct\",\"ck\"),builder.field(\"ct\",\"c\")),b)@@@89@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "operands.add(builder.isNotNull(Util.last(builder.fields())),trueLiteral)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "variablesSet.isEmpty()@@@67@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "rewriteExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "builder.join(JoinRelType.LEFT,trueLiteral,variablesSet)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.aggregate(builder.groupKey(builder.field(\"cs\")),builder.count(false,\"c\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "int offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "List<RexNode> isNullOperands = fields.stream().map(null).collect(Collectors.toList())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "builder.aggregate(builder.groupKey(0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "return builder.isNotNull(Util.last(builder.fields()))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final RexLiteral trueLiteral = builder.literal(true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "RelBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "builder.join(JoinRelType.LEFT,builder.literal(true),variablesSet)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "boolean allLiterals = RexUtil.allLiterals(e.getOperands())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "RexSubQuery e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final RexLiteral unknownLiteral = builder.getRexBuilder().makeNullLiteral(trueLiteral.getType())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final List<RexNode> conditions = Pair.zip(expressionOperands,fields).stream().map(null).collect(Collectors.toList())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "operands.add(builder.or(keyIsNulls),unknownLiteral)@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "builder.as(\"dt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "Set<CorrelationId> variablesSet@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "operands.add(builder.isNull(builder.field(\"c\")),falseLiteral)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "builder.project(builder.alias(trueLiteral,\"cs\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83->84 [style = bold, label=""];
68->35 [style = bold, label=""];
58->50 [style = bold, label=""];
6->57 [style = bold, label=""];
84->77 [style = bold, label=""];
55->19 [style = dotted, label="true"];
86->85 [style = dotted, label="true"];
63->5 [style = solid, label="fields"];
65->17 [style = bold, label=""];
76->81 [style = dotted, label="true"];
87->83 [style = solid, label="variablesSet"];
32->12 [style = bold, label=""];
36->29 [style = bold, label=""];
7->69 [style = dotted, label="true"];
24->35 [style = dotted, label="true"];
64->18 [style = bold, label=""];
85->78 [style = bold, label=""];
21->54 [style = bold, label=""];
77->80 [style = bold, label=""];
52->55 [style = bold, label=""];
27->44 [style = solid, label="b"];
8->40 [style = bold, label=""];
55->31 [style = dotted, label="true"];
80->24 [style = bold, label=""];
69->30 [style = bold, label=""];
66->26 [style = solid, label="builder"];
53->60 [style = solid, label="offset"];
31->50 [style = bold, label=""];
42->44 [style = bold, label=""];
11->40 [style = solid, label="conditions"];
37->62 [style = bold, label=""];
75->66 [style = dotted, label="true"];
11->13 [style = bold, label=""];
11->38 [style = solid, label="conditions"];
41->10 [style = dotted, label="true"];
52->55 [style = dotted, label="false"];
33->14 [style = solid, label="keyIsNulls"];
40->26 [style = bold, label=""];
52->30 [style = dotted, label="true"];
41->45 [style = bold, label=""];
41->49 [style = dotted, label="true"];
19->28 [style = bold, label=""];
55->31 [style = bold, label=""];
24->68 [style = dotted, label="true"];
75->73 [style = dotted, label="true"];
10->44 [style = solid, label="b"];
76->79 [style = dotted, label="true"];
63->43 [style = bold, label=""];
54->52 [style = bold, label=""];
52->23 [style = bold, label=""];
30->67 [style = bold, label=""];
22->46 [style = dotted, label="true"];
39->55 [style = solid, label="logic"];
21->4 [style = solid, label="falseLiteral"];
10->70 [style = solid, label="b"];
57->51 [style = bold, label=""];
42->70 [style = bold, label=""];
16->56 [style = bold, label=""];
62->30 [style = bold, label=""];
22->0 [style = dotted, label="true"];
0->40 [style = solid, label="variablesSet"];
7->37 [style = bold, label=""];
86->77 [style = bold, label=""];
39->13 [style = solid, label="logic"];
41->49 [style = bold, label=""];
86->78 [style = dotted, label="true"];
13->40 [style = bold, label=""];
4->2 [style = bold, label=""];
21->51 [style = solid, label="falseLiteral"];
17->42 [style = bold, label=""];
10->51 [style = solid, label="b"];
74->24 [style = solid, label="logic"];
43->52 [style = solid, label="allLiterals"];
74->13 [style = solid, label="logic"];
61->12 [style = solid, label="trueLiteral"];
49->51 [style = dotted, label="true"];
42->70 [style = dotted, label="true"];
27->51 [style = solid, label="b"];
46->26 [style = solid, label="builder"];
26->27 [style = bold, label=""];
45->14 [style = bold, label=""];
55->25 [style = bold, label=""];
24->82 [style = bold, label=""];
55->9 [style = dotted, label="true"];
22->20 [style = dotted, label="true"];
33->64 [style = solid, label="keyIsNulls"];
21->3 [style = solid, label="falseLiteral"];
44->4 [style = bold, label=""];
55->53 [style = dotted, label="true"];
73->48 [style = solid, label="variablesSet"];
6->57 [style = dotted, label="true"];
49->3 [style = bold, label=""];
22->66 [style = dotted, label="true"];
15->64 [style = bold, label=""];
1->63 [style = bold, label=""];
39->42 [style = solid, label="logic"];
10->49 [style = bold, label=""];
24->7 [style = dotted, label="true"];
74->42 [style = solid, label="logic"];
24->18 [style = dotted, label="true"];
0->48 [style = solid, label="variablesSet"];
52->67 [style = dotted, label="true"];
55->56 [style = dotted, label="true"];
21->57 [style = solid, label="falseLiteral"];
43->59 [style = bold, label=""];
61->27 [style = solid, label="trueLiteral"];
55->58 [style = dotted, label="true"];
23->68 [style = solid, label="conditions"];
7->34 [style = dotted, label="false"];
42->44 [style = dotted, label="true"];
24->47 [style = dotted, label="true"];
55->16 [style = dotted, label="true"];
61->35 [style = solid, label="trueLiteral"];
61->8 [style = solid, label="trueLiteral"];
3->45 [style = bold, label=""];
6->51 [style = bold, label=""];
12->17 [style = bold, label=""];
89->86 [style = bold, label=""];
24->68 [style = bold, label=""];
43->32 [style = solid, label="allLiterals"];
45->32 [style = bold, label=""];
61->21 [style = bold, label=""];
32->65 [style = dotted, label="true"];
72->60 [style = solid, label="offset"];
55->5 [style = dotted, label="true"];
86->77 [style = dotted, label="true"];
13->38 [style = dotted, label="true"];
61->25 [style = solid, label="trueLiteral"];
61->28 [style = solid, label="trueLiteral"];
41->10 [style = bold, label=""];
47->83 [style = dashed, label="0"];
0->28 [style = solid, label="variablesSet"];
49->6 [style = dotted, label="true"];
76->88 [style = dotted, label="true"];
54->14 [style = solid, label="unknownLiteral"];
42->4 [style = bold, label=""];
62->69 [style = dashed, label="0"];
88->86 [style = solid, label="logic"];
50->60 [style = bold, label=""];
51->45 [style = bold, label=""];
76->87 [style = dotted, label="true"];
13->8 [style = dotted, label="true"];
17->42 [style = dotted, label="true"];
45->14 [style = dotted, label="true"];
37->69 [style = bold, label=""];
49->3 [style = dotted, label="false"];
70->4 [style = bold, label=""];
23->18 [style = solid, label="conditions"];
25->5 [style = bold, label=""];
52->23 [style = dotted, label="true"];
54->10 [style = solid, label="unknownLiteral"];
59->33 [style = bold, label=""];
55->16 [style = bold, label=""];
5->58 [style = bold, label=""];
43->49 [style = solid, label="allLiterals"];
38->8 [style = bold, label=""];
36->29 [style = solid, label="project"];
53->9 [style = bold, label=""];
14->32 [style = bold, label=""];
22->1 [style = bold, label=""];
52->24 [style = dotted, label="true"];
24->64 [style = dotted, label="true"];
49->6 [style = bold, label=""];
24->36 [style = dotted, label="true"];
17->4 [style = bold, label=""];
75->72 [style = dotted, label="true"];
44->70 [style = dashed, label="0"];
39->41 [style = solid, label="logic"];
61->48 [style = solid, label="trueLiteral"];
24->15 [style = bold, label=""];
33->61 [style = bold, label=""];
76->1 [style = bold, label=""];
19->48 [style = dotted, label="true"];
19->48 [style = bold, label=""];
55->25 [style = dotted, label="true"];
1->89 [style = bold, label=""];
66->88 [style = dashed, label="0"];
28->53 [style = bold, label=""];
22->39 [style = dotted, label="true"];
24->29 [style = dotted, label="true"];
7->62 [style = dotted, label="true"];
19->28 [style = dotted, label="false"];
75->71 [style = dotted, label="true"];
61->65 [style = solid, label="trueLiteral"];
18->36 [style = bold, label=""];
48->53 [style = bold, label=""];
78->83 [style = bold, label=""];
86->84 [style = dotted, label="true"];
32->65 [style = bold, label=""];
27->70 [style = solid, label="b"];
0->38 [style = solid, label="variablesSet"];
34->30 [style = bold, label=""];
7->37 [style = dotted, label="true"];
66->60 [style = solid, label="offset"];
75->74 [style = dotted, label="true"];
68->85 [style = dashed, label="0"];
47->30 [style = bold, label=""];
87->24 [style = solid, label="variablesSet"];
39->24 [style = solid, label="logic"];
74->55 [style = solid, label="logic"];
74->41 [style = solid, label="logic"];
23->24 [style = bold, label=""];
67->50 [style = bold, label=""];
7->34 [style = bold, label=""];
32->12 [style = dotted, label="false"];
86->85 [style = bold, label=""];
75->1 [style = bold, label=""];
15->18 [style = solid, label="isNullOperands"];
73->28 [style = solid, label="variablesSet"];
63->31 [style = solid, label="fields"];
9->25 [style = bold, label=""];
63->12 [style = solid, label="fields"];
27->41 [style = bold, label=""];
24->15 [style = dotted, label="true"];
56->19 [style = bold, label=""];
35->47 [style = bold, label=""];
60->11 [style = bold, label=""];
29->7 [style = bold, label=""];
86->83 [style = dotted, label="true"];
13->38 [style = bold, label=""];
73->40 [style = solid, label="variablesSet"];
73->38 [style = solid, label="variablesSet"];
}
