digraph {
4 [style = filled, label = "tester.checkScalar(\"extract(hour from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkScalar(\"extract(microsecond from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "tester.checkScalar(\"extract(epoch from interval '4-2' year to month)\",\"131328000\",\"BIGINT NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkScalar(\"extract(quarter from interval '4-2' year to month)\",\"1\",\"BIGINT NOT NULL\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "tester.checkScalar(\"extract(millennium from interval '2005-3' year(4) to month)\",\"2\",\"BIGINT NOT NULL\")@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkScalar(\"extract(millisecond from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "tester.checkScalar(\"floor(interval '3:4:5' hour to second)\",\"+3:00:00.000000\",\"INTERVAL HOUR TO SECOND NOT NULL\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.checkScalar(\"extract(second from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tester.checkScalar(\"floor(interval '6-3' hour to minute to hour)\",\"7-0\",\"INTERVAL HOUR TO MINUTE NOT NULL\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tester.checkFails(\"^extract(week from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "tester.checkScalar(\"floor(interval '6 3' day to hour to day)\",\"7 00\",\"INTERVAL DAY TO HOUR NOT NULL\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tester.checkScalar(\"extract(decade from interval '426-3' year(3) to month)\",\"42\",\"BIGINT NOT NULL\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tester.checkScalar(\"floor(interval '6-3' minute to second to minute)\",\"-7-0\",\"INTERVAL MINUTE TO SECOND NOT NULL\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tester.checkScalar(\"floor(interval '102-7' year to month to quarter)\",\"102-10\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testExtractIntervalYearMonth['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "TODO@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tester.setFor(SqlStdOperatorTable.EXTRACT,VM_FENNEL,VM_JAVA)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "tester.checkScalar(\"extract(month from interval '4-2' year to month)\",\"2\",\"BIGINT NOT NULL\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "tester.checkScalar(\"floor(interval '-5-1' year to month)\",\"-6-00\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkFails(\"^extract(doy from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkFails(\"^extract(isodow from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "tester.checkScalar(\"floor(interval '5-1' year to month)\",\"+5-00\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tester.checkScalar(\"floor(interval '-6.3' second)\",\"-7.000000\",\"INTERVAL SECOND NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tester.checkScalar(\"floor(interval '102-1' year to month to century)\",\"201\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "tester.checkScalar(\"floor(interval '-6.3' second to second)\",\"-7.000000\",\"INTERVAL SECOND NOT NULL\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester.checkFails(\"^extract(dow from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkScalar(\"extract(year from interval '4-2' year to month)\",\"4\",\"BIGINT NOT NULL\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "tester.checkScalar(\"floor(interval '102-7' year to month to month)\",\"102-07\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "tester.checkScalar(\"extract(minute from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testExtractIntervalYearMonth['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFloorFuncInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkScalar(\"extract(day from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "!enable@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "tester.checkNull(\"floor(cast(null as interval year))\")@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tester.checkScalar(\"floor(interval '1004-1' year to month to millennium)\",\"2001-00\",\"INTERVAL YEAR TO MONTH NOT NULL\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkScalar(\"extract(century from interval '426-3' year(3) to month)\",\"4\",\"BIGINT NOT NULL\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->31 [style = bold, label=""];
22->30 [style = bold, label=""];
16->25 [style = dashed, label="0"];
18->20 [style = bold, label=""];
15->1 [style = bold, label=""];
1->9 [style = bold, label=""];
10->2 [style = bold, label=""];
11->12 [style = bold, label=""];
14->16 [style = bold, label=""];
9->4 [style = bold, label=""];
10->17 [style = bold, label=""];
19->6 [style = bold, label=""];
8->0 [style = bold, label=""];
36->29 [style = bold, label=""];
21->28 [style = bold, label=""];
13->0 [style = bold, label=""];
11->26 [style = dashed, label="0"];
30->33 [style = dotted, label="true"];
25->26 [style = bold, label=""];
7->6 [style = bold, label=""];
1->18 [style = bold, label=""];
8->20 [style = dotted, label="true"];
5->10 [style = bold, label=""];
6->8 [style = bold, label=""];
14->34 [style = dashed, label="0"];
3->35 [style = dashed, label="0"];
23->21 [style = bold, label=""];
29->34 [style = bold, label=""];
27->36 [style = bold, label=""];
30->33 [style = bold, label=""];
32->35 [style = bold, label=""];
8->15 [style = dotted, label="true"];
12->3 [style = bold, label=""];
26->32 [style = bold, label=""];
2->29 [style = dashed, label="0"];
35->23 [style = bold, label=""];
4->13 [style = bold, label=""];
2->14 [style = bold, label=""];
20->9 [style = bold, label=""];
24->27 [style = bold, label=""];
0->5 [style = bold, label=""];
34->25 [style = bold, label=""];
8->18 [style = dotted, label="true"];
33->24 [style = bold, label=""];
16->11 [style = bold, label=""];
8->1 [style = dotted, label="true"];
8->4 [style = dotted, label="true"];
30->24 [style = bold, label=""];
12->32 [style = dashed, label="0"];
8->15 [style = bold, label=""];
17->2 [style = bold, label=""];
8->13 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
}
