digraph {
30 [style = filled, label = "Double maxi = tuple.getDouble(\"max(a_i)\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Metric(( metrics = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(55.0,sumf.doubleValue(),0.01)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(0.0,mini.doubleValue(),0.01)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),.001)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testNonePartitionKeys['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testStatsStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(1,tuples.size())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(1.0,minf.doubleValue(),0.01)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(70,sumi.longValue())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Double avgi = tuple.getDouble(\"avg(a_i)\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SolrParams sParamsA = StreamingTest.mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_s asc,a_f asc\",\"partitionKeys\",\"none\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "pstream.setStreamContext(streamContext)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{solrClientCache.close()}@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "StatsStream statsStream = new StatsStream(zkHost,COLLECTIONORALIAS,sParamsA,metrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testNonePartitionKeys['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ParallelStream pstream = parallelStream(stream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<Tuple> tuples = getTuples(statsStream)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SolrParams sParamsA = StreamingTest.mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_s asc,a_f asc\",\"partitionKeys\",\"none\",\"qt\",\"/export\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "attachStreamFactory(pstream)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "{solrClientCache.close()}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Double maxf = tuple.getDouble(\"max(a_f)\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Double count = tuple.getDouble(\"count(*)\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(10,count.doubleValue(),.01)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Double minf = tuple.getDouble(\"min(a_f)\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assert(tuples.size() == (10 * numWorkers))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Double avgf = tuple.getDouble(\"avg(a_f)\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "statsStream.setStreamContext(streamContext)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(14.0,maxi.doubleValue(),0.01)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Tuple tuple = tuples.get(0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Double sumf = tuple.getDouble(\"sum(a_f)\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(10.0,maxf.doubleValue(),0.01)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(7.0,avgi.doubleValue(),.01)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Double sumi = tuple.getDouble(\"sum(a_i)\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Double mini = tuple.getDouble(\"min(a_i)\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
18->31 [style = bold, label=""];
17->26 [style = bold, label=""];
27->36 [style = bold, label=""];
30->17 [style = bold, label=""];
2->10 [style = solid, label="pstream"];
3->1 [style = bold, label=""];
25->34 [style = bold, label=""];
23->27 [style = bold, label=""];
3->40 [style = bold, label=""];
0->38 [style = solid, label="streamContext"];
2->6 [style = bold, label=""];
38->29 [style = bold, label=""];
0->12 [style = solid, label="streamContext"];
22->41 [style = bold, label=""];
0->11 [style = bold, label=""];
29->25 [style = bold, label=""];
15->30 [style = bold, label=""];
9->7 [style = bold, label=""];
16->19 [style = bold, label=""];
26->24 [style = bold, label=""];
5->2 [style = solid, label="stream"];
31->15 [style = bold, label=""];
41->28 [style = bold, label=""];
39->22 [style = bold, label=""];
2->6 [style = solid, label="pstream"];
8->0 [style = bold, label=""];
1->13 [style = dashed, label="0"];
36->21 [style = bold, label=""];
35->23 [style = bold, label=""];
5->2 [style = bold, label=""];
20->8 [style = bold, label=""];
12->10 [style = bold, label=""];
40->16 [style = bold, label=""];
28->33 [style = bold, label=""];
21->39 [style = bold, label=""];
11->3 [style = bold, label=""];
13->5 [style = solid, label="sParamsA"];
1->5 [style = solid, label="sParamsA"];
24->37 [style = bold, label=""];
16->19 [style = solid, label="metrics"];
13->5 [style = bold, label=""];
3->13 [style = bold, label=""];
4->8 [style = bold, label=""];
34->32 [style = bold, label=""];
10->9 [style = bold, label=""];
14->8 [style = bold, label=""];
40->19 [style = solid, label="sParamsA"];
32->18 [style = bold, label=""];
37->35 [style = bold, label=""];
11->3 [style = solid, label="solrClientCache"];
19->38 [style = bold, label=""];
19->29 [style = solid, label="statsStream"];
6->12 [style = bold, label=""];
}
