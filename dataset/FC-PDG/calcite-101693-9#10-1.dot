digraph {
9 [style = filled, label = "replaceTop(antiJoin)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "replaceTop(semiJoin)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "semiJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final RelNode semiJoin = struct.joinFactory.createJoin(peek(),right.rel,ImmutableList.of(),and(conditions),ImmutableSet.of(),JoinRelType.SEMI,false)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final RelNode antiJoin = joinFactory.createJoin(peek(),right.rel,ImmutableList.of(),and(conditions),ImmutableSet.of(),JoinRelType.ANTI,false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Iterable<? extends RexNode> conditions@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Frame right = stack.pop()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RelNode semiJoin = joinFactory.createJoin(peek(),right.rel,ImmutableList.of(),and(conditions),ImmutableSet.of(),JoinRelType.SEMI,false)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Iterable<? extends RexNode> conditions@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return this@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "antiJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "semiJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9->4 [style = bold, label=""];
3->7 [style = solid, label="conditions"];
5->9 [style = dashed, label="0"];
11->10 [style = solid, label="conditions"];
2->7 [style = dashed, label="0"];
1->7 [style = bold, label=""];
2->10 [style = dashed, label="0"];
8->1 [style = bold, label=""];
6->1 [style = bold, label=""];
7->5 [style = bold, label=""];
7->5 [style = solid, label="semiJoin"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
10->9 [style = solid, label="antiJoin"];
2->5 [style = solid, label="semiJoin"];
8->11 [style = dotted, label="true"];
1->2 [style = bold, label=""];
10->9 [style = bold, label=""];
0->3 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
1->10 [style = bold, label=""];
3->2 [style = solid, label="conditions"];
3->11 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
