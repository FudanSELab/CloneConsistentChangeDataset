digraph {
3 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REQUEST_TIMEOUT_MS)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(coordinator.hasValidMemberId())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "mockClient.prepareResponse(joinGroupFollowerResponse(defaultGeneration,memberId,JoinGroupResponse.UNKNOWN_MEMBER_ID,Errors.MEMBER_ID_REQUIRED))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "mockClient.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(coordinator.hasUnknownGeneration())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testJoinGroupRequestWithGroupInstanceIdNotFound['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REBALANCE_TIMEOUT_MS)))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(coordinator.hasMatchingGenerationId(defaultGeneration))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(coordinator.hasMatchingGenerationId(defaultGeneration))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "future = coordinator.sendJoinGroupRequest()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Errors.MEMBER_ID_REQUIRED.message(),future.exception().getMessage())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(consumerClient.poll(future,mockTime.timer(REQUEST_TIMEOUT_MS)))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(coordinator.rejoinNeededOrPending())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "setupCoordinator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "mockClient.prepareResponse(joinGroupFollowerResponse(defaultGeneration,memberId,JoinGroupResponse.UNKNOWN_MEMBER_ID,Errors.UNKNOWN_MEMBER_ID))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "coordinator.ensureCoordinatorReady(mockTime.timer(0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Errors.UNKNOWN_MEMBER_ID.message(),future.exception().getMessage())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testJoinGroupRequestWithMemberIdRequired['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RequestFuture<ByteBuffer> future = coordinator.sendJoinGroupRequest()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "mockClient.prepareResponse(null,joinGroupResponse(Errors.UNKNOWN_MEMBER_ID))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testJoinGroupRequestWithGroupInstanceIdNotFound['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertTrue(coordinator.rejoinNeededOrPending())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RequestFuture<ByteBuffer> future = coordinator.sendJoinGroupRequest()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
6->17 [style = bold, label=""];
7->1 [style = bold, label=""];
18->15 [style = solid, label="future"];
4->6 [style = bold, label=""];
9->2 [style = bold, label=""];
7->10 [style = bold, label=""];
5->3 [style = solid, label="future"];
18->15 [style = bold, label=""];
22->21 [style = bold, label=""];
6->0 [style = bold, label=""];
12->16 [style = bold, label=""];
1->10 [style = dashed, label="0"];
16->19 [style = solid, label="future"];
16->19 [style = bold, label=""];
2->4 [style = bold, label=""];
0->17 [style = dashed, label="0"];
11->2 [style = bold, label=""];
8->7 [style = bold, label=""];
20->2 [style = bold, label=""];
8->22 [style = dashed, label="0"];
17->12 [style = bold, label=""];
3->8 [style = bold, label=""];
14->18 [style = bold, label=""];
19->22 [style = bold, label=""];
13->14 [style = bold, label=""];
0->5 [style = bold, label=""];
21->13 [style = bold, label=""];
}
