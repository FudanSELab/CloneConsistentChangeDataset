digraph {
31 [style = filled, label = "{if (p != null) {p.destroy()}}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "System.err.println(e.getMessage())@@@82@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertArrayEquals(nextVerify.f1,nextFromFlinkSort.f1)@@@58@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TypeComparator<Tuple2<StringValue,StringValue((>> comparator = typeInfo.createComparator(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1af4a88,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1af4a8c,0,new ExecutionConfig())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "{if (input != null) {input.delete()}if (sorted != null) {sorted.delete()}}@@@81@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "IOManager ioMan = null@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String(( command = {\"/bin/bash\",\"-c\",\"export LC_ALL=\"C\" && cat \"\" + input.getAbsolutePath() + \"\" | sort > \"\" + sorted.getAbsolutePath() + \"\"\"}@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{if (input != null) {input.delete()}if (sorted != null) {sorted.delete()}}@@@86@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "reader = new BufferedReader(new FileReader(input))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "TupleTypeInfo<Tuple2<String,String((>> typeInfo = (TupleTypeInfo<Tuple2<String,String((>>)new TypeHint<Tuple2<String,String((>>(){}.getTypeInfo()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final int numStrings = 300000@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "num++@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Tuple2<String,String((> nextFromStratoSort = new Tuple2<String,String((>(\"\",new String(((()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TupleTypeInfo<Tuple2<StringValue,StringValue((>> typeInfo = (TupleTypeInfo<Tuple2<StringValue,StringValue((>>)new TypeHint<Tuple2<StringValue,StringValue((>>(){}.getTypeInfo()@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Assert.assertEquals(next.f0,nextFromStratoSort.f0)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "retCode != 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "sorter = new UnilateralSortMerger<Tuple2<String,String((>>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<Tuple2<String,String((>>(serializer,(Class<Tuple2<String,String((>>)(Class<?>)),comparator,1.0,4,0.8f,true,false)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "sorter = new UnilateralSortMerger<Tuple2<StringValue,StringValue((>>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<Tuple2<StringValue,StringValue((>>(serializer,(Class<Tuple2<StringValue,StringValue((>>)(Class<?>)),comparator,1.0,4,0.8f,true,false)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "{if (reader != null) {reader.close()}if (verifyReader != null) {verifyReader.close()}if (sorter != null) {sorter.close()}if (mm != null) {mm.shutdown()}}@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "testStringValueTuplesSorting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "UnilateralSortMerger<Tuple2<StringValue,StringValue((>> sorter = null@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "File input = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "input = generateFileWithStringTuples(numStrings,\"http://some-uri.com/that/is/a/common/prefix/to/all\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "TypeSerializer<Tuple2<String,String((>> serializer = typeInfo.createSerializer(new ExecutionConfig())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Tuple2<String,String((> next = new Tuple2<String,String((>(\"\",new String(((()@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "reader.close()@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertNull(sortedData.next(nextFromFlinkSort))@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "verifyReader = new BufferedReader(new FileReader(sorted))@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "e.printStackTrace()@@@83@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Assert.assertArrayEquals(next.f1,nextFromStratoSort.f1)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "throw new Exception(\"Command failed with return code \" + retCode)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "UnilateralSortMerger<Tuple2<String,String((>> sorter = null@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "nextFromStratoSort = sortedData.next(nextFromStratoSort)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertArrayEquals(nextVerify.f1,nextFromFlinkSort.f1)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "num++@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BufferedReader verifyReader = null@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "reader.close()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertNotNull(nextFromFlinkSort)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "MutableObjectIterator<Tuple2<StringValue,StringValue((>> sortedData = sorter.getIterator()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MemoryManager mm = null@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int num = 0@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "reader = new BufferedReader(new FileReader(input))@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(nextVerify.f0,nextFromFlinkSort.f0)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "p = Runtime.getRuntime().exec(command)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "p = null@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Exception e@@@81@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testStringValueTuplesSorting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ioMan = new IOManagerAsync()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BufferedReader reader = null@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Exception e@@@76@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "MutableObjectIterator<Tuple2<String,String((>> sortedData = sorter.getIterator()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "mm = new MemoryManager(1024 * 1024,1)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "Assert.assertNull(sortedData.next(nextFromStratoSort))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int retCode = p.waitFor()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int num = 0@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "MutableObjectIterator<Tuple2<String,String((>> inputIterator = new StringTupleReaderMutableObjectIterator(reader)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Tuple2<StringValue,StringValue((> nextFromFlinkSort = new Tuple2<StringValue,StringValue((>(new StringValue(),new StringValue(((()@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(numStrings,num)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TypeComparator<Tuple2<StringValue,StringValue((>> comparator = typeInfo.createComparator(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1af48d6,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1af48da,0,new ExecutionConfig())@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Assert.assertNotNull(nextFromStratoSort)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "File sorted = null@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.fail(e.getMessage())@@@84@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Process p = null@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "testStringTuplesSorting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mm = new MemoryManager(1024 * 1024,1)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Tuple2<StringValue,StringValue((> nextVerify = new Tuple2<StringValue,StringValue((>(new StringValue(),new StringValue(((()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "{if (reader != null) {reader.close()}if (verifyReader != null) {verifyReader.close()}if (sorter != null) {sorter.close()}if (mm != null) {mm.shutdown()}if (ioMan != null) {ioMan.shutdown()}}@@@63@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "TypeComparator<Tuple2<String,String((>> comparator = typeInfo.createComparator(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1af4c3b,new boolean((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1af4c3f,0,new ExecutionConfig())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "MutableObjectIterator<Tuple2<String,String((>> verifyIterator = new StringTupleReaderMutableObjectIterator(verifyReader)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "TypeSerializer<Tuple2<StringValue,StringValue((>> serializer = typeInfo.createSerializer(new ExecutionConfig())@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(numStrings,num)@@@61@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "sorted = File.createTempFile(\"sorted_strings\",\"txt\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "(next = verifyIterator.next(next)) != null@@@53@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29->15 [style = bold, label=""];
37->0 [style = bold, label=""];
33->55 [style = solid, label="sorted"];
19->60 [style = bold, label=""];
8->69 [style = solid, label="reader"];
41->50 [style = solid, label="sorter"];
9->55 [style = solid, label="input"];
56->3 [style = bold, label=""];
8->41 [style = solid, label="reader"];
69->59 [style = solid, label="inputIterator"];
62->61 [style = bold, label=""];
41->29 [style = solid, label="inputIterator"];
43->42 [style = bold, label=""];
36->28 [style = bold, label=""];
28->62 [style = bold, label=""];
47->10 [style = bold, label=""];
52->13 [style = bold, label=""];
25->35 [style = bold, label=""];
34->50 [style = bold, label=""];
23->62 [style = dashed, label="0"];
27->57 [style = dashed, label="0"];
70->0 [style = dotted, label="true"];
13->44 [style = solid, label="mm"];
21->46 [style = bold, label=""];
18->22 [style = bold, label=""];
70->63 [style = dotted, label="true"];
57->63 [style = bold, label=""];
45->6 [style = bold, label=""];
39->51 [style = bold, label=""];
34->56 [style = dashed, label="0"];
17->14 [style = bold, label=""];
0->25 [style = bold, label=""];
39->0 [style = solid, label="num"];
50->55 [style = bold, label=""];
54->6 [style = bold, label=""];
0->51 [style = solid, label="nextFromFlinkSort"];
70->68 [style = solid, label="next"];
68->56 [style = solid, label="nextFromStratoSort"];
40->31 [style = bold, label=""];
6->9 [style = solid, label="numStrings"];
24->41 [style = solid, label="comparator"];
24->53 [style = bold, label=""];
59->67 [style = bold, label=""];
48->24 [style = bold, label=""];
22->13 [style = bold, label=""];
30->63 [style = dashed, label="0"];
60->66 [style = bold, label=""];
6->32 [style = bold, label=""];
39->35 [style = dotted, label="true"];
7->11 [style = bold, label=""];
48->41 [style = solid, label="serializer"];
39->25 [style = dotted, label="true"];
9->33 [style = bold, label=""];
27->30 [style = bold, label=""];
0->68 [style = bold, label=""];
6->3 [style = solid, label="numStrings"];
7->64 [style = dashed, label="0"];
69->59 [style = bold, label=""];
24->38 [style = bold, label=""];
23->39 [style = solid, label="nextVerify"];
2->9 [style = bold, label=""];
9->53 [style = solid, label="input"];
12->1 [style = bold, label=""];
28->23 [style = solid, label="verifyReader"];
19->59 [style = solid, label="ioMan"];
40->31 [style = solid, label="p"];
70->71 [style = dotted, label="true"];
8->41 [style = solid, label="inputIterator"];
1->17 [style = bold, label=""];
12->17 [style = solid, label="command"];
64->11 [style = bold, label=""];
26->16 [style = bold, label=""];
70->68 [style = dotted, label="true"];
37->70 [style = dashed, label="0"];
49->47 [style = dotted, label="true"];
39->27 [style = dotted, label="true"];
26->0 [style = solid, label="nextFromFlinkSort"];
44->20 [style = bold, label=""];
65->39 [style = bold, label=""];
13->59 [style = solid, label="mm"];
70->56 [style = solid, label="next"];
70->0 [style = bold, label=""];
36->50 [style = solid, label="verifyReader"];
16->39 [style = bold, label=""];
19->44 [style = solid, label="ioMan"];
43->47 [style = dotted, label="true"];
46->40 [style = bold, label=""];
8->69 [style = bold, label=""];
16->34 [style = solid, label="nextFromFlinkSort"];
39->0 [style = dotted, label="true"];
38->58 [style = dashed, label="0"];
14->21 [style = solid, label="retCode"];
14->21 [style = bold, label=""];
15->36 [style = bold, label=""];
25->35 [style = solid, label="nextFromFlinkSort"];
39->37 [style = bold, label=""];
43->10 [style = dotted, label="true"];
26->51 [style = solid, label="nextFromFlinkSort"];
9->8 [style = solid, label="input"];
4->24 [style = bold, label=""];
8->41 [style = bold, label=""];
21->46 [style = dotted, label="true"];
61->65 [style = bold, label=""];
58->8 [style = bold, label=""];
19->29 [style = solid, label="ioMan"];
42->47 [style = bold, label=""];
63->70 [style = bold, label=""];
33->28 [style = solid, label="sorted"];
13->48 [style = bold, label=""];
8->44 [style = solid, label="reader"];
52->41 [style = solid, label="mm"];
28->62 [style = solid, label="verifyReader"];
5->18 [style = bold, label=""];
33->12 [style = bold, label=""];
37->25 [style = dotted, label="true"];
31->7 [style = bold, label=""];
9->20 [style = solid, label="input"];
49->42 [style = dotted, label="true"];
14->46 [style = solid, label="retCode"];
16->37 [style = solid, label="num"];
66->58 [style = bold, label=""];
37->35 [style = dotted, label="true"];
39->3 [style = solid, label="num"];
11->5 [style = bold, label=""];
3->44 [style = bold, label=""];
13->19 [style = bold, label=""];
27->39 [style = bold, label=""];
39->37 [style = dotted, label="true"];
15->67 [style = dashed, label="0"];
24->29 [style = solid, label="serializer"];
16->34 [style = solid, label="num"];
28->23 [style = bold, label=""];
65->56 [style = solid, label="nextFromStratoSort"];
37->0 [style = dotted, label="true"];
13->29 [style = solid, label="mm"];
61->70 [style = solid, label="next"];
36->28 [style = solid, label="verifyReader"];
53->8 [style = bold, label=""];
38->8 [style = bold, label=""];
59->44 [style = solid, label="sorter"];
70->56 [style = bold, label=""];
37->27 [style = dotted, label="true"];
18->52 [style = bold, label=""];
49->43 [style = dotted, label="true"];
29->59 [style = dashed, label="0"];
53->8 [style = solid, label="reader"];
0->3 [style = solid, label="num"];
35->27 [style = bold, label=""];
10->20 [style = bold, label=""];
33->20 [style = solid, label="sorted"];
38->29 [style = solid, label="comparator"];
65->68 [style = solid, label="nextFromStratoSort"];
41->29 [style = bold, label=""];
53->50 [style = solid, label="reader"];
23->26 [style = bold, label=""];
26->37 [style = solid, label="nextVerify"];
24->66 [style = dashed, label="0"];
6->34 [style = solid, label="numStrings"];
72->6 [style = bold, label=""];
0->25 [style = solid, label="nextFromFlinkSort"];
30->37 [style = bold, label=""];
43->42 [style = dotted, label="true"];
39->70 [style = bold, label=""];
32->2 [style = bold, label=""];
49->43 [style = bold, label=""];
58->59 [style = solid, label="comparator"];
37->30 [style = dotted, label="true"];
25->34 [style = solid, label="nextFromFlinkSort"];
70->57 [style = dotted, label="true"];
71->57 [style = bold, label=""];
29->44 [style = solid, label="sorter"];
66->59 [style = solid, label="serializer"];
47->55 [style = bold, label=""];
4->60 [style = dashed, label="0"];
34->3 [style = bold, label=""];
33->36 [style = solid, label="sorted"];
68->71 [style = bold, label=""];
37->34 [style = bold, label=""];
25->68 [style = dashed, label="0"];
41->69 [style = dashed, label="0"];
21->40 [style = bold, label=""];
31->64 [style = bold, label=""];
16->25 [style = solid, label="nextFromFlinkSort"];
68->71 [style = solid, label="nextFromStratoSort"];
67->36 [style = bold, label=""];
19->4 [style = bold, label=""];
51->34 [style = bold, label=""];
28->44 [style = solid, label="verifyReader"];
35->71 [style = dashed, label="0"];
52->50 [style = solid, label="mm"];
37->34 [style = solid, label="num"];
}
