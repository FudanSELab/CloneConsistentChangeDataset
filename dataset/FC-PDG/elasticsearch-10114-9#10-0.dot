digraph {
20 [style = filled, label = "assertThat(processor.getTag(),equalTo(processorTag))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "config.put(\"field\",\"_field\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testIgnoreMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(GeoIpProcessor.Factory.DEFAULT_ASN_PROPERTIES))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(processor.getDatabaseType(),equalTo(\"GeoLite2-ASN\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"attachment\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAsnBuildDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "GeoIpProcessor processor = factory.create(null,processorTag,null,config)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AttachmentProcessor processor = factory.create(null,processorTag,null,config)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testAsnBuildDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "config.put(\"database_file\",\"GeoLite2-ASN.mmdb\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(localDatabases)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "config.put(\"ignore_missing\",true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String processorTag = randomAlphaOfLength(10)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(processor.getField(),equalTo(\"_field\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(processor.isIgnoreMissing())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(processor.getTargetField(),equalTo(\"geoip\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(processor.getProperties(),sameInstance(AttachmentProcessor.Factory.DEFAULT_PROPERTIES))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(databaseReaders)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3->1 [style = bold, label=""];
4->2 [style = solid, label="processorTag"];
1->14 [style = dashed, label="0"];
6->18 [style = bold, label=""];
16->4 [style = solid, label="processorTag"];
18->15 [style = bold, label=""];
16->20 [style = solid, label="processorTag"];
17->4 [style = solid, label="config"];
4->12 [style = solid, label="processorTag"];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
19->17 [style = bold, label=""];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
2->12 [style = bold, label=""];
0->7 [style = bold, label=""];
9->6 [style = dashed, label="0"];
17->0 [style = bold, label=""];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
8->7 [style = dashed, label="0"];
7->16 [style = bold, label=""];
20->12 [style = bold, label=""];
4->20 [style = bold, label=""];
0->2 [style = solid, label="config"];
5->11 [style = bold, label=""];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
16->4 [style = bold, label=""];
13->14 [style = bold, label=""];
10->18 [style = dashed, label="0"];
2->4 [style = dashed, label="0"];
}
