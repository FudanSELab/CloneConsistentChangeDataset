digraph {
0 [style = filled, label = "assertThat(graph.incidentEdges(N1)).containsExactly(EndpointPair.ordered(N1,N1),EndpointPair.ordered(N1,N2))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "incidentEdges_selfLoop['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assume().that(allowsSelfLoops()).isTrue()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "incidentEdges_selfLoop['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assume().that(graph.allowsSelfLoops()).isTrue()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "incidentEdges_selfLoop['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "putEdge(N1,N1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(graph.incidentEdges(N1)).containsExactly(EndpointPair.unordered(N1,N1),EndpointPair.unordered(N1,N2))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(graph.incidentEdges(N1)).containsExactly(EndpointPair.ordered(N1,N1))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "putEdge(N1,N2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(graph.incidentEdges(N1)).containsExactly(EndpointPair.unordered(N1,N1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
6->5 [style = bold, label=""];
10->3 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
3->6 [style = dashed, label="0"];
4->2 [style = bold, label=""];
5->9 [style = bold, label=""];
9->2 [style = bold, label=""];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
2->8 [style = bold, label=""];
}
