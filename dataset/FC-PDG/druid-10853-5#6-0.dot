digraph {
19 [style = filled, label = "DruidServer druidServer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "KeeperException.NodeExistsException e@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "curator.create().compressed().withMode(CreateMode.EPHEMERAL).forPath(segmentAnnouncementPath,jsonMapper.writeValueAsBytes(segments))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final String segmentAnnouncementPath = ZKPaths.makePath(zkPathsConfig.getLiveSegmentsPath(),druidServer.getHost(),segment.getId().toString())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Exception e@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Throwables.propagate(e)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ObjectMapper jsonMapper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DataSegment segment@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Throwables.propagate(e1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ZkPathsConfig zkPathsConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DruidServer druidServer@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "announceBatchSegmentsForServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ObjectMapper jsonMapper@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String segmentAnnouncementPath = ZKPaths.makePath(ZKPaths.makePath(zkPathsConfig.getLiveSegmentsPath(),druidServer.getHost()),UUIDUtils.generateUuid(druidServer.getHost(),druidServer.getType().toString(),druidServer.getTier(),DateTimes.nowUtc().toString()) + (batchCtr++))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Exception e1@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ObjectMapper jsonMapper@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "ZkPathsConfig zkPathsConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ImmutableSet<DataSegment> segments@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "curator.create().compressed().withMode(CreateMode.EPHEMERAL).forPath(segmentAnnouncementPath,jsonMapper.writeValueAsBytes(ImmutableSet.of(segment)))@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ZkPathsConfig zkPathsConfig@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return segmentAnnouncementPath@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "announceSegmentForServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "announceSegmentForServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "curator.setData().forPath(segmentAnnouncementPath,jsonMapper.writeValueAsBytes(segments))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "DataSegment segment@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String segmentAnnouncementPath = ZKPaths.makePath(ZKPaths.makePath(zkPathsConfig.getLiveSegmentsPath(),druidServer.getHost()),segment.getIdentifier())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->5 [style = solid, label="segment"];
13->24 [style = bold, label=""];
9->11 [style = bold, label=""];
11->5 [style = solid, label="segmentAnnouncementPath"];
18->16 [style = dotted, label="true"];
12->24 [style = solid, label="segmentAnnouncementPath"];
0->2 [style = bold, label=""];
0->4 [style = dotted, label="true"];
18->19 [style = dotted, label="true"];
18->21 [style = dotted, label="true"];
18->12 [style = bold, label=""];
15->22 [style = dotted, label="true"];
18->23 [style = dotted, label="true"];
0->6 [style = dotted, label="true"];
9->6 [style = dotted, label="true"];
25->17 [style = bold, label=""];
15->22 [style = bold, label=""];
9->8 [style = dotted, label="true"];
14->20 [style = dotted, label="true"];
12->13 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
17->24 [style = bold, label=""];
10->5 [style = solid, label="segment"];
25->17 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
0->3 [style = dotted, label="true"];
22->24 [style = bold, label=""];
23->13 [style = solid, label="segments"];
9->7 [style = dotted, label="true"];
20->24 [style = bold, label=""];
9->10 [style = dotted, label="true"];
12->13 [style = solid, label="segmentAnnouncementPath"];
6->23 [style = dashed, label="0"];
14->20 [style = bold, label=""];
2->5 [style = bold, label=""];
2->5 [style = solid, label="segmentAnnouncementPath"];
}
