digraph {
13 [style = filled, label = "List<HoodieKey> deletedKeys = copyOfRecords1.stream().map(null).collect(Collectors.toList()).subList(0,50)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,scanner.getTotalLogRecords(),\"We would have scanned 0 records because of rollback\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testAvroLogRecordReaderWithInsertDeleteAndRollback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<String> readKeys = new ArrayList<>()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "List<IndexedRecord> records2 = SchemaTestUtil.generateHoodieTestRecords(0,100)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "scanner.forEach(null)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.INSTANT_TIME,\"100\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "dataBlock = new HoodieAvroDataBlock(records2,header)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.TARGET_INSTANT_TIME,\"100\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,schema.toString())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HoodieDataBlock dataBlock = getDataBlock(records1,header)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "List<IndexedRecord> records1 = SchemaTestUtil.generateHoodieTestRecords(0,100)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Exception e@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<IndexedRecord> copyOfRecords1 = records1.stream().map(null).collect(Collectors.toList())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.COMMAND_BLOCK_TYPE,String.valueOf(HoodieCommandBlock.HoodieCommandBlockTypeEnum.ROLLBACK_PREVIOUS_BLOCK.ordinal()))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "throw new Exception(\"simulating failure\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HoodieDeleteBlock deleteBlock = new HoodieDeleteBlock(deletedKeys.toArray(new HoodieKey((((),header)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Writer writer = HoodieLogFormat.newWriterBuilder().onParentPath(partitionPath).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(\"test-fileid1\").overBaseCommit(\"100\").withFs(fs).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "writer = writer.appendBlock(dataBlock)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<HoodieLogBlock.HeaderMetadataType,String> header = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(0,readKeys.size(),\"Stream collect should return all 0 records\")@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testAvroLogRecordReaderWithInsertDeleteAndRollback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(0,scanner.getTotalLogRecords(),\"We would read 0 records\")@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boolean readBlocksLazily@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<String> allLogFiles = FSUtils.getAllLogFiles(fs,partitionPath,\"test-fileid1\",HoodieLogFile.DELTA_EXTENSION,\"100\").map(null).collect(Collectors.toList())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HoodieAvroDataBlock dataBlock = new HoodieAvroDataBlock(records1,header)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "HoodieMergedLogRecordScanner scanner = new HoodieMergedLogRecordScanner(fs,basePath,allLogFiles,schema,\"100\",10240L,readBlocksLazily,false,bufferSize,BASE_OUTPUT_PATH)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,schema.toString())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "boolean readBlocksLazily@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HoodieCommandBlock commandBlock = new HoodieCommandBlock(header)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "writer.appendBlock(commandBlock)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "writer = writer.appendBlock(dataBlock)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Schema schema = HoodieAvroUtils.addMetadataFields(getSimpleSchema())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "writer = writer.appendBlock(deleteBlock)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testAvroLogRecordReaderWithFailedRollbacks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "writer = writer.appendBlock(commandBlock)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->31 [style = bold, label=""];
20->15 [style = solid, label="commandBlock"];
18->34 [style = solid, label="header"];
14->7 [style = bold, label=""];
5->19 [style = dotted, label="true"];
35->2 [style = bold, label=""];
25->21 [style = solid, label="readBlocksLazily"];
19->25 [style = dashed, label="0"];
11->21 [style = solid, label="schema"];
26->34 [style = solid, label="records2"];
18->22 [style = solid, label="header"];
21->32 [style = bold, label=""];
11->0 [style = bold, label=""];
23->19 [style = dotted, label="true"];
20->15 [style = bold, label=""];
34->30 [style = solid, label="dataBlock"];
30->13 [style = bold, label=""];
33->34 [style = bold, label=""];
22->10 [style = solid, label="dataBlock"];
26->33 [style = bold, label=""];
3->8 [style = solid, label="deleteBlock"];
18->12 [style = solid, label="header"];
8->6 [style = bold, label=""];
9->21 [style = bold, label=""];
7->22 [style = bold, label=""];
1->22 [style = solid, label="records1"];
6->20 [style = bold, label=""];
23->11 [style = bold, label=""];
29->36 [style = bold, label=""];
27->11 [style = bold, label=""];
0->1 [style = bold, label=""];
15->2 [style = bold, label=""];
4->32 [style = dashed, label="0"];
12->10 [style = bold, label=""];
2->9 [style = bold, label=""];
7->12 [style = bold, label=""];
9->21 [style = solid, label="allLogFiles"];
12->10 [style = solid, label="dataBlock"];
10->13 [style = bold, label=""];
18->3 [style = solid, label="header"];
5->11 [style = bold, label=""];
15->35 [style = bold, label=""];
16->14 [style = bold, label=""];
1->17 [style = bold, label=""];
20->2 [style = solid, label="commandBlock"];
18->16 [style = bold, label=""];
3->8 [style = bold, label=""];
31->2 [style = bold, label=""];
19->21 [style = solid, label="readBlocksLazily"];
1->12 [style = solid, label="records1"];
13->3 [style = bold, label=""];
18->20 [style = solid, label="header"];
27->25 [style = dotted, label="true"];
24->29 [style = bold, label=""];
34->30 [style = bold, label=""];
21->4 [style = bold, label=""];
22->10 [style = bold, label=""];
12->22 [style = dashed, label="0"];
10->26 [style = bold, label=""];
32->24 [style = bold, label=""];
17->18 [style = bold, label=""];
}
