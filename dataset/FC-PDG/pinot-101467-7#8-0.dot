digraph {
10 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr).withReason(reason)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.KEEP)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "segmentCompletionMgr._seconds += 5@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "long commitTimeSec = response.getBuildTimeSeconds()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testStoppedConsumeDuringCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "final int leaseTimeSec = 20@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final String reason = \"IAmLazy\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "segmentCompletionMgr._secconds = 5@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "segmentCompletionMgr._secconds + leaseTimeSec <= startTime + SegmentCompletionManager.getMaxCommitTimeForAllSegmentsSeconds()@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(leaseTimeSec)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "segmentManager._stoppedSegmentName = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "segmentCompletionMgr._secconds += 5@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "segmentCompletionMgr._secconds += leaseTimeSec@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr).withExtraTimeSec(20)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "response = segmentCompletionMgr.segmentStoppedConsuming(params)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.FAILED)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.PROCESSED)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "Assert.assertEquals(response.getStatus(),ControllerResponseStatus.PROCESSED)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "final long startTime = 5@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "segmentCompletionMgr._secconds = startTime + commitTimeSec - 1@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Assert.assertFalse((fsmMap.containsKey(segmentNameStr)))@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(s3,segmentManager._stoppedInstance)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "response = segmentCompletionMgr.segmentCommitEnd(params,true,false,CommittingSegmentDescriptor.fromSegmentCompletionReqParams(params))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "response = segmentCompletionMgr.segmentCommitStart(params)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(new LLCSegmentName(segmentNameStr),segmentManager._stoppedSegmentName)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Assert.assertTrue(commitTimeSec > 0)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "segmentManager._stoppedInstance = null@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "segmentCompletionMgr._secconds += 1@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withOffset(s1Offset).withSegmentName(segmentNameStr)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testStoppedConsumeDuringCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_CONTINUE)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s3Offset).withSegmentName(segmentNameStr)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withOffset(s2Offset).withSegmentName(segmentNameStr)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT_SUCCESS)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "segmentCompletionMgr._seconds = 5@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "Assert.assertEquals(response.getOffset(),s2Offset)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "response = segmentCompletionMgr.extendBuildTime(params)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testLeaseTooLong['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "segmentCompletionMgr._secconds = startTime@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Assert.assertTrue((fsmMap.containsKey(segmentNameStr)))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63->72 [style = bold, label=""];
8->10 [style = bold, label=""];
74->64 [style = solid, label="params"];
46->0 [style = bold, label=""];
78->60 [style = bold, label=""];
59->67 [style = solid, label="leaseTimeSec"];
42->45 [style = bold, label=""];
69->0 [style = bold, label=""];
18->55 [style = bold, label=""];
23->51 [style = dashed, label="0"];
51->24 [style = bold, label=""];
65->57 [style = bold, label=""];
4->62 [style = bold, label=""];
7->35 [style = bold, label=""];
68->66 [style = bold, label=""];
60->71 [style = bold, label=""];
25->53 [style = bold, label=""];
76->61 [style = bold, label=""];
38->55 [style = dashed, label="0"];
31->1 [style = bold, label=""];
36->12 [style = bold, label=""];
43->18 [style = bold, label=""];
1->63 [style = dashed, label="0"];
29->52 [style = dashed, label="0"];
17->47 [style = dashed, label="0"];
9->26 [style = bold, label=""];
8->54 [style = dashed, label="0"];
45->25 [style = bold, label=""];
61->68 [style = bold, label=""];
57->63 [style = bold, label=""];
53->34 [style = bold, label=""];
10->31 [style = solid, label="params"];
20->48 [style = bold, label=""];
70->79 [style = bold, label=""];
67->61 [style = dotted, label="true"];
6->69 [style = dashed, label="0"];
37->33 [style = bold, label=""];
62->69 [style = solid, label="startTime"];
59->67 [style = bold, label=""];
75->78 [style = bold, label=""];
11->48 [style = dashed, label="0"];
4->16 [style = bold, label=""];
34->21 [style = solid, label="params"];
18->38 [style = bold, label=""];
67->77 [style = dotted, label="true"];
75->78 [style = solid, label="params"];
21->44 [style = bold, label=""];
10->31 [style = bold, label=""];
80->70 [style = bold, label=""];
5->23 [style = bold, label=""];
33->15 [style = bold, label=""];
38->28 [style = bold, label=""];
31->57 [style = dashed, label="0"];
39->34 [style = bold, label=""];
16->6 [style = bold, label=""];
22->32 [style = bold, label=""];
39->67 [style = dashed, label="0"];
0->7 [style = bold, label=""];
73->59 [style = bold, label=""];
76->61 [style = solid, label="params"];
30->9 [style = solid, label="params"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
64->38 [style = bold, label=""];
21->61 [style = dashed, label="0"];
44->41 [style = bold, label=""];
35->17 [style = bold, label=""];
28->27 [style = solid, label="params"];
3->2 [style = solid, label="params"];
56->14 [style = bold, label=""];
27->20 [style = bold, label=""];
39->53 [style = dashed, label="0"];
14->4 [style = bold, label=""];
5->67 [style = solid, label="_secconds"];
67->75 [style = bold, label=""];
25->39 [style = bold, label=""];
67->76 [style = dotted, label="true"];
62->5 [style = solid, label="startTime"];
22->5 [style = solid, label="commitTimeSec"];
24->37 [style = solid, label="params"];
22->32 [style = solid, label="params"];
59->75 [style = solid, label="leaseTimeSec"];
30->9 [style = bold, label=""];
26->8 [style = bold, label=""];
50->14 [style = bold, label=""];
27->20 [style = solid, label="params"];
67->66 [style = dotted, label="true"];
29->77 [style = dashed, label="0"];
36->72 [style = dashed, label="0"];
37->5 [style = dashed, label="0"];
26->54 [style = bold, label=""];
58->74 [style = bold, label=""];
77->67 [style = solid, label="_secconds"];
11->22 [style = bold, label=""];
40->14 [style = bold, label=""];
54->10 [style = bold, label=""];
77->67 [style = bold, label=""];
65->57 [style = solid, label="params"];
12->43 [style = bold, label=""];
33->49 [style = bold, label=""];
62->69 [style = bold, label=""];
34->21 [style = bold, label=""];
67->76 [style = bold, label=""];
20->11 [style = bold, label=""];
16->46 [style = bold, label=""];
66->77 [style = bold, label=""];
32->5 [style = bold, label=""];
49->42 [style = bold, label=""];
59->77 [style = solid, label="leaseTimeSec"];
2->19 [style = bold, label=""];
5->51 [style = bold, label=""];
16->10 [style = solid, label="reason"];
41->29 [style = bold, label=""];
29->3 [style = bold, label=""];
74->64 [style = bold, label=""];
5->80 [style = bold, label=""];
17->30 [style = bold, label=""];
6->0 [style = bold, label=""];
48->22 [style = bold, label=""];
0->7 [style = solid, label="params"];
1->36 [style = bold, label=""];
79->73 [style = bold, label=""];
10->65 [style = dashed, label="0"];
47->30 [style = bold, label=""];
41->52 [style = bold, label=""];
62->67 [style = solid, label="startTime"];
8->65 [style = bold, label=""];
6->46 [style = dashed, label="0"];
16->62 [style = dashed, label="0"];
34->76 [style = dashed, label="0"];
44->68 [style = dashed, label="0"];
23->24 [style = bold, label=""];
15->42 [style = bold, label=""];
15->49 [style = dashed, label="0"];
72->58 [style = bold, label=""];
24->37 [style = bold, label=""];
35->47 [style = bold, label=""];
41->66 [style = dashed, label="0"];
52->3 [style = bold, label=""];
28->27 [style = bold, label=""];
15->70 [style = dashed, label="0"];
80->70 [style = solid, label="params"];
42->45 [style = solid, label="params"];
59->76 [style = solid, label="leaseTimeSec"];
22->32 [style = solid, label="commitTimeSec"];
55->28 [style = bold, label=""];
67->68 [style = dotted, label="true"];
}
