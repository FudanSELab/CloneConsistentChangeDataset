digraph {
12 [style = filled, label = "arguments = new ArrayList<String>(argc)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "n < argc@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "getArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return arguments@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "IOException|LastErrorException e@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "LIBC.pread(fd,m,new NativeLong(psize),new NativeLong(argp + n * psize))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "LIBC.pread(fd,m,new NativeLong(psize),new NativeLong(argp + (n * psize)))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "argc == 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "arguments.add(readLine(fd,addr,\"argv(\" + n + \"(\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "n++@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return arguments@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return arguments@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Memory m = new Memory(psize)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int n = 0@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return arguments@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long addr = b64? m.getLong(0): to64(m.getInt(0))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "LOGGER.finer(\"Reading \" + getFile(\"as\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "{}@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "return arguments@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "arguments = new ArrayList<>(argc)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "int fd = LIBC.open(getFile(\"as\").getAbsolutePath(),0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "arguments = Collections.unmodifiableList(arguments)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return arguments@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "IOException|LastErrorException e@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "arguments != null@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "{LIBC.close(fd)}@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "getArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "argp == 0@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LIBC.pread(fd,m,new NativeLong(psize),new NativeLong(pr_argp))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return arguments@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "long argp = b64? m.getLong(0): to64(m.getInt(0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "arguments.add(readLine(fd,addr,\"arg(\" + n + \"(\"))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "{LIBC.close(fd)}@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "addr == 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int psize = b64? 8: 4@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "arguments != null@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "LOGGER.isLoggable(FINER)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "{}@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "argp == 0@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "{}@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
1->38 [style = solid, label="fd"];
28->7 [style = solid, label="arguments"];
1->13 [style = solid, label="fd"];
2->16 [style = solid, label="n"];
1->34 [style = solid, label="fd"];
14->17 [style = bold, label=""];
4->23 [style = solid, label="arguments"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
36->38 [style = dotted, label="true"];
1->13 [style = bold, label=""];
19->24 [style = bold, label=""];
5->36 [style = solid, label="n"];
2->38 [style = solid, label="n"];
36->39 [style = dotted, label="true"];
10->39 [style = bold, label=""];
18->38 [style = solid, label="m"];
2->36 [style = bold, label=""];
6->9 [style = solid, label="argp"];
34->32 [style = bold, label=""];
27->19 [style = bold, label=""];
32->4 [style = bold, label=""];
19->28 [style = bold, label=""];
29->1 [style = bold, label=""];
5->36 [style = bold, label=""];
12->32 [style = solid, label="arguments"];
11->7 [style = dotted, label="true"];
14->16 [style = bold, label=""];
24->28 [style = bold, label=""];
32->4 [style = solid, label="arguments"];
19->12 [style = bold, label=""];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
8->18 [style = bold, label=""];
12->11 [style = bold, label=""];
40->30 [style = dotted, label="true"];
1->21 [style = solid, label="fd"];
5->21 [style = solid, label="n"];
5->17 [style = bold, label=""];
26->4 [style = bold, label=""];
25->2 [style = bold, label=""];
5->21 [style = bold, label=""];
18->1 [style = bold, label=""];
2->21 [style = bold, label=""];
19->0 [style = dotted, label="true"];
31->33 [style = bold, label=""];
25->20 [style = dotted, label="true"];
11->8 [style = bold, label=""];
5->16 [style = solid, label="n"];
29->35 [style = bold, label=""];
8->21 [style = solid, label="psize"];
5->39 [style = solid, label="n"];
4->23 [style = bold, label=""];
2->17 [style = bold, label=""];
8->18 [style = solid, label="psize"];
22->26 [style = bold, label=""];
8->38 [style = solid, label="psize"];
39->5 [style = bold, label=""];
0->12 [style = bold, label=""];
6->25 [style = solid, label="argp"];
9->20 [style = bold, label=""];
21->38 [style = dashed, label="0"];
19->24 [style = dotted, label="true"];
15->19 [style = bold, label=""];
5->38 [style = solid, label="n"];
12->7 [style = solid, label="arguments"];
10->16 [style = solid, label="addr"];
19->0 [style = bold, label=""];
2->36 [style = solid, label="n"];
12->4 [style = solid, label="arguments"];
10->14 [style = solid, label="addr"];
40->12 [style = bold, label=""];
25->20 [style = bold, label=""];
30->12 [style = bold, label=""];
35->1 [style = bold, label=""];
2->5 [style = solid, label="n"];
1->16 [style = solid, label="fd"];
9->20 [style = dotted, label="true"];
16->5 [style = bold, label=""];
33->32 [style = bold, label=""];
40->30 [style = bold, label=""];
1->2 [style = bold, label=""];
13->6 [style = bold, label=""];
2->39 [style = solid, label="n"];
2->21 [style = solid, label="n"];
36->34 [style = bold, label=""];
17->4 [style = bold, label=""];
19->40 [style = dashed, label="0"];
1->17 [style = solid, label="fd"];
6->21 [style = solid, label="argp"];
38->10 [style = bold, label=""];
10->39 [style = solid, label="addr"];
28->11 [style = bold, label=""];
28->20 [style = solid, label="arguments"];
8->13 [style = solid, label="psize"];
36->10 [style = dotted, label="true"];
20->2 [style = bold, label=""];
22->3 [style = bold, label=""];
12->20 [style = solid, label="arguments"];
18->29 [style = bold, label=""];
18->13 [style = solid, label="m"];
1->39 [style = solid, label="fd"];
12->28 [style = dashed, label="0"];
11->7 [style = bold, label=""];
18->21 [style = solid, label="m"];
36->38 [style = bold, label=""];
36->5 [style = dotted, label="true"];
28->4 [style = solid, label="arguments"];
6->9 [style = bold, label=""];
29->35 [style = dotted, label="true"];
37->40 [style = bold, label=""];
6->25 [style = bold, label=""];
}
