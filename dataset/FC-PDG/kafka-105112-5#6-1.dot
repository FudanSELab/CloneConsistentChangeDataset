digraph {
60 [style = filled, label = "configStorage.putTaskConfigs(\"connector2\",taskConfigs)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "whiteboxAddConnector(CONNECTOR_IDS.get(0),SAMPLE_CONFIGS.get(0),Collections.emptyList())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "configUpdateListener.onTaskConfigUpdate(Arrays.asList(TASK_IDS.get(2)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(Arrays.asList(connectorName1,connectorName2),new ArrayList<>(configState.connectors()))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "whiteboxAddConnector(CONNECTOR_IDS.get(1),SAMPLE_CONFIGS.get(1),Collections.emptyList())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "expectReadToEnd(serializedConfigs)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "String connectorName2 = CONNECTOR_IDS.get(1)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "serializedConfigs = new LinkedHashMap<>()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "expectConvertWriteRead(COMMIT_TASKS_CONFIG_KEYS.get(0),KafkaConfigBackingStore.CONNECTOR_TASKS_COMMIT_V0,CONFIGS_SERIALIZED.get(2),\"tasks\",2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "taskConfigs = Collections.singletonList(SAMPLE_CONFIGS.get(2))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expectReadToEnd(new LinkedHashMap<String,byte((>())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expectPartitionCount(1)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "String connectorName1 = CONNECTOR_IDS.get(0)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(5,configState.offset())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "serializedConfigs.put(TASK_CONFIG_KEYS.get(2),CONFIGS_SERIALIZED.get(3))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectConfigure()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(Arrays.asList(connectorName),new ArrayList<>(configState.connectors()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "serializedConfigs.put(TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "serializedConfigs.put(COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectConvertWriteRead(TASK_CONFIG_KEYS.get(1),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(1),\"properties\",SAMPLE_CONFIGS.get(1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "PowerMock.verifyAll()@@@54@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectReadToEnd(serializedConfigs)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LinkedHashMap<String,byte((> serializedConfigs = new LinkedHashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(-1,configState.offset())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testPutTaskConfigsStartsOnlyReconfiguredTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(Collections.singletonList(TASK_IDS.get(2)),configState.tasks(connectorName2))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(1),configState.taskConfig(TASK_IDS.get(1)))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testPutTaskConfigs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(2),configState.taskConfig(TASK_IDS.get(2)))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectConvertWriteRead(TASK_CONFIG_KEYS.get(0),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(0),\"properties\",SAMPLE_CONFIGS.get(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "configStorage.start()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testPutTaskConfigs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "configUpdateListener.onTaskConfigUpdate(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(0)))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)),configState.tasks(connectorName))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Arrays.asList(TASK_IDS.get(0),TASK_IDS.get(1)),configState.tasks(connectorName1))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String connectorName = CONNECTOR_IDS.get(0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PowerMock.replayAll()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectStop()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<Map<String,String>> taskConfigs = Arrays.asList(SAMPLE_CONFIGS.get(0),SAMPLE_CONFIGS.get(1))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(0),configState.taskConfig(TASK_IDS.get(0)))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "expectConvertWriteRead(COMMIT_TASKS_CONFIG_KEYS.get(1),KafkaConfigBackingStore.CONNECTOR_TASKS_COMMIT_V0,CONFIGS_SERIALIZED.get(4),\"tasks\",1)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "serializedConfigs.put(COMMIT_TASKS_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(4))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(SAMPLE_CONFIGS.get(1),configState.taskConfig(TASK_IDS.get(1)))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "configState = configStorage.snapshot()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expectStart(Collections.emptyList(),Collections.emptyMap())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "configStorage.putTaskConfigs(\"connector1\",taskConfigs)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.expectLastCall()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Collections.EMPTY_SET,configState.inconsistentConnectors())@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(configState.taskConfig(TASK_IDS.get(1)))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertNull(configState.taskConfig(TASK_IDS.get(0)))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "expectConvertWriteRead(TASK_CONFIG_KEYS.get(2),KafkaConfigBackingStore.TASK_CONFIGURATION_V0,CONFIGS_SERIALIZED.get(3),\"properties\",SAMPLE_CONFIGS.get(2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "expectReadToEnd(new LinkedHashMap<>())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "configStorage.stop()@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(3,configState.offset())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ClusterConfigState configState = configStorage.snapshot()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "serializedConfigs.put(TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33->7 [style = bold, label=""];
61->45 [style = bold, label=""];
45->41 [style = solid, label="connectorName1"];
39->19 [style = bold, label=""];
5->61 [style = dashed, label="0"];
2->19 [style = bold, label=""];
46->60 [style = solid, label="taskConfigs"];
56->49 [style = bold, label=""];
26->32 [style = bold, label=""];
20->58 [style = bold, label=""];
37->36 [style = bold, label=""];
45->44 [style = solid, label="connectorName1"];
28->30 [style = bold, label=""];
35->15 [style = bold, label=""];
21->6 [style = bold, label=""];
7->12 [style = bold, label=""];
6->22 [style = bold, label=""];
15->21 [style = bold, label=""];
38->11 [style = bold, label=""];
52->33 [style = bold, label=""];
27->3 [style = bold, label=""];
36->4 [style = bold, label=""];
59->40 [style = bold, label=""];
16->26 [style = bold, label=""];
60->22 [style = bold, label=""];
49->51 [style = bold, label=""];
19->10 [style = bold, label=""];
10->48 [style = bold, label=""];
18->36 [style = bold, label=""];
10->17 [style = bold, label=""];
21->6 [style = solid, label="taskConfigs"];
31->1 [style = bold, label=""];
25->29 [style = bold, label=""];
53->54 [style = bold, label=""];
51->52 [style = bold, label=""];
44->39 [style = bold, label=""];
48->17 [style = bold, label=""];
24->18 [style = bold, label=""];
12->0 [style = bold, label=""];
22->5 [style = bold, label=""];
25->29 [style = solid, label="connectorName"];
34->11 [style = bold, label=""];
28->41 [style = dashed, label="0"];
1->23 [style = bold, label=""];
20->33 [style = bold, label=""];
5->25 [style = bold, label=""];
46->60 [style = bold, label=""];
3->35 [style = bold, label=""];
29->28 [style = bold, label=""];
47->57 [style = bold, label=""];
11->31 [style = bold, label=""];
32->9 [style = bold, label=""];
23->24 [style = bold, label=""];
0->14 [style = bold, label=""];
54->47 [style = bold, label=""];
58->53 [style = bold, label=""];
50->39 [style = solid, label="connectorName2"];
25->28 [style = solid, label="connectorName"];
42->11 [style = bold, label=""];
45->50 [style = bold, label=""];
25->45 [style = dashed, label="0"];
22->61 [style = bold, label=""];
24->37 [style = bold, label=""];
50->41 [style = solid, label="connectorName2"];
55->27 [style = bold, label=""];
18->37 [style = dashed, label="0"];
57->43 [style = bold, label=""];
14->8 [style = bold, label=""];
56->52 [style = solid, label="serializedConfigs"];
17->59 [style = bold, label=""];
6->46 [style = bold, label=""];
8->55 [style = bold, label=""];
30->2 [style = bold, label=""];
8->27 [style = bold, label=""];
50->41 [style = bold, label=""];
41->44 [style = bold, label=""];
26->20 [style = solid, label="serializedConfigs"];
43->56 [style = bold, label=""];
4->16 [style = bold, label=""];
9->13 [style = bold, label=""];
13->20 [style = bold, label=""];
}
