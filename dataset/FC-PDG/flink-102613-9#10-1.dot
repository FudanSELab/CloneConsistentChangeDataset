digraph {
21 [style = filled, label = "final long lateness = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testSideOutputDueToLatenessSessionZeroLateness['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sideExpected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),10100))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",14500L,17500L),17499))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expected.add(new Watermark(4998))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.processWatermark(new Watermark(20000))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",11600L,14600L),14599))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),inputType.createSerializer(new ExecutionConfig()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processWatermark(new Watermark(1999))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ConcurrentLinkedQueue<Object> sideExpected = new ConcurrentLinkedQueue<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testHarness.open()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),10000))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),14500))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(gapSize)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new ReducedSessionWindowFunction()),EventTimeTrigger.create(),lateness,lateOutputTag)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple3<String,Long,Long>> testHarness = createTestHarness(operator)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final int gapSize = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,actual,new Tuple2ResultSortComparator())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "expected.add(new Watermark(11501))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testSideOutputDueToLatenessSessionZeroLatenessPurgingTrigger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testHarness.processWatermark(new Watermark(4998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.processWatermark(new Watermark(7400))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,actual,new Tuple2ResultSortComparator())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),11600))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expected.add(new Watermark(1999))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),4500))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sideExpected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),10000))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarness.processWatermark(new Watermark(11501))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),8500))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expected.add(new Watermark(100000))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(gapSize)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new ReducedSessionWindowFunction()),PurgingTrigger.of(EventTimeTrigger.create()),lateness,lateOutputTag)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "expected.add(new Watermark(7400))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expected.add(new Watermark(20000))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),7000))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testHarness.processWatermark(new Watermark(14600))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1000))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSideOutputDueToLatenessSessionZeroLatenessPurgingTrigger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "expected.add(new Watermark(14600))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),STRING_INT_TUPLE.createSerializer(new ExecutionConfig()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),14500))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ConcurrentLinkedQueue<Object> expected = new ConcurrentLinkedQueue<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testHarness.processWatermark(new Watermark(100000))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ConcurrentLinkedQueue<Object> actual = testHarness.getOutput()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple3<String,Long,Long>> testHarness = createTestHarness(operator)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"SideOutput was not correct.\",sideExpected,(Iterable)sideActual,new Tuple2ResultSortComparator())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),2000))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ConcurrentLinkedQueue<StreamRecord<Tuple2<String,Integer>>> sideActual = testHarness.getSideOutput(lateOutputTag)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testHarness.close()@@@42@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-5\",1000L,11500L),11499))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
20->45 [style = solid, label="gapSize"];
23->20 [style = bold, label=""];
21->44 [style = bold, label=""];
9->25 [style = solid, label="expected"];
9->25 [style = solid, label="sideExpected"];
37->28 [style = bold, label=""];
35->18 [style = bold, label=""];
30->17 [style = bold, label=""];
8->13 [style = solid, label="operator"];
46->13 [style = solid, label="operator"];
46->13 [style = bold, label=""];
26->10 [style = bold, label=""];
19->31 [style = bold, label=""];
21->46 [style = solid, label="lateness"];
25->30 [style = bold, label=""];
48->30 [style = solid, label="sideActual"];
43->20 [style = bold, label=""];
38->9 [style = bold, label=""];
5->26 [style = bold, label=""];
40->25 [style = bold, label=""];
27->8 [style = solid, label="stateDesc"];
15->6 [style = bold, label=""];
42->48 [style = bold, label=""];
21->45 [style = solid, label="lateness"];
32->16 [style = bold, label=""];
21->8 [style = solid, label="lateness"];
8->46 [style = dashed, label="0"];
10->41 [style = bold, label=""];
20->8 [style = solid, label="gapSize"];
42->40 [style = bold, label=""];
31->11 [style = bold, label=""];
44->45 [style = solid, label="stateDesc"];
38->40 [style = solid, label="expected"];
1->22 [style = bold, label=""];
3->35 [style = bold, label=""];
20->21 [style = bold, label=""];
40->48 [style = dashed, label="0"];
28->0 [style = bold, label=""];
29->6 [style = bold, label=""];
42->25 [style = solid, label="actual"];
7->40 [style = solid, label="actual"];
24->4 [style = bold, label=""];
12->29 [style = bold, label=""];
27->46 [style = bold, label=""];
27->46 [style = solid, label="stateDesc"];
34->37 [style = bold, label=""];
18->1 [style = bold, label=""];
6->33 [style = bold, label=""];
36->2 [style = bold, label=""];
14->44 [style = dashed, label="0"];
45->8 [style = bold, label=""];
2->15 [style = bold, label=""];
47->20 [style = bold, label=""];
48->25 [style = bold, label=""];
7->42 [style = bold, label=""];
42->25 [style = solid, label="sideActual"];
40->30 [style = solid, label="sideActual"];
13->38 [style = bold, label=""];
15->12 [style = bold, label=""];
34->30 [style = solid, label="sideExpected"];
14->27 [style = bold, label=""];
45->8 [style = solid, label="operator"];
22->24 [style = bold, label=""];
0->32 [style = bold, label=""];
41->39 [style = bold, label=""];
33->19 [style = bold, label=""];
44->45 [style = bold, label=""];
39->36 [style = bold, label=""];
4->5 [style = bold, label=""];
27->8 [style = bold, label=""];
11->7 [style = bold, label=""];
8->13 [style = bold, label=""];
20->46 [style = solid, label="gapSize"];
21->14 [style = bold, label=""];
9->34 [style = bold, label=""];
}
