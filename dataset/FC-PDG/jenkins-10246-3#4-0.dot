digraph {
12 [style = filled, label = "reloadJobShouldFailWithoutJobReadPermission['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 2\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "project.getBuildersList().add(new Shell(\"echo 1\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "changeProjectOnTheDisc(project,\"echo 1\",\"echo 2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(result.stderr(),containsString(\"No such job ‘aProject’ exists.\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: No such job ‘aProject’ exists.\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(project.scheduleBuild2(0).get().getLog(),containsString(\"echo 1\"))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Job.READ,Job.CONFIGURE,Jenkins.READ).invokeWithArgs(\"aProject\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "reloadJobShouldFailWithoutJobReadPermission['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(result,failedWith(1))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertThat(result,succeededSilently())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "reloadJobShouldSucceed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
5->14 [style = dashed, label="0"];
15->14 [style = bold, label=""];
2->1 [style = bold, label=""];
15->14 [style = solid, label="result"];
16->7 [style = bold, label=""];
1->3 [style = bold, label=""];
7->3 [style = solid, label="project"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
3->15 [style = bold, label=""];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
12->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
8->13 [style = dashed, label="0"];
4->11 [style = solid, label="result"];
4->5 [style = solid, label="result"];
5->11 [style = dashed, label="0"];
7->2 [style = bold, label=""];
4->15 [style = dashed, label="0"];
10->0 [style = bold, label=""];
11->8 [style = bold, label=""];
14->13 [style = bold, label=""];
4->8 [style = solid, label="result"];
4->11 [style = bold, label=""];
4->5 [style = bold, label=""];
}
