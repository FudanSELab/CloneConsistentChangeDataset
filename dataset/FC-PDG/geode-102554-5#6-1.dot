digraph {
7 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(cos.size()).isEqualTo(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRemoveOutputStreamWithOneStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@107007)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@106ff4,2,3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testRemoveOutputStreamWhenEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cos.close()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream(streamOne)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testRemoveOutputStreamWithOneStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verifyZeroInteractions(streamOne)@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cos.removeOutputStream(streamOne)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cos.write(9)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cos.flush()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifyNoMoreInteractions(streamOne)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
13->1 [style = solid, label="streamOne"];
5->8 [style = bold, label=""];
16->13 [style = bold, label=""];
12->5 [style = bold, label=""];
7->12 [style = bold, label=""];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
7->17 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
3->18 [style = dashed, label="0"];
18->17 [style = bold, label=""];
9->10 [style = bold, label=""];
17->19 [style = bold, label=""];
11->15 [style = bold, label=""];
13->15 [style = solid, label="streamOne"];
2->13 [style = bold, label=""];
8->0 [style = bold, label=""];
19->5 [style = bold, label=""];
6->4 [style = bold, label=""];
12->19 [style = dashed, label="0"];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
14->13 [style = bold, label=""];
13->5 [style = solid, label="streamOne"];
13->3 [style = solid, label="streamOne"];
13->18 [style = bold, label=""];
10->11 [style = bold, label=""];
}
