digraph {
6 [style = filled, label = "final int(( calls = {0}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedule(r))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedule(r))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Worker w = s.createWorker()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Disposable.disposed(),s.schedulePeriodicallyDirect(r,1,1,TimeUnit.SECONDS))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "s.shutdown()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(Disposable.disposed(),w.schedule(r,1,TimeUnit.SECONDS))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "IoScheduler s = new IoScheduler()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "shutdownRejects['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(0,calls(0()@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Disposable.disposed(),w.schedule(r))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Runnable r = new Runnable(){@Override public void run(){calls(0(++}}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Disposables.disposed(),s.schedulePeriodicallyDirect(r,1,1,TimeUnit.SECONDS))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "shutdownRejects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "s.shutdown()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "w.dispose()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(Disposables.disposed(),s.scheduleDirect(r,1,TimeUnit.SECONDS))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedule(r,1,TimeUnit.SECONDS))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Disposables.disposed(),s.scheduleDirect(r))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "s.scheduleDirect(r)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "s.schedulePeriodicallyDirect(r,1,1,TimeUnit.SECONDS)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(Disposable.disposed(),w.schedulePeriodically(r,1,1,TimeUnit.SECONDS))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(Disposable.disposed(),s.scheduleDirect(r))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Worker w = s.createWorker()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "s.scheduleDirect(r,1,TimeUnit.SECONDS)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shutdownRejects['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(w.isDisposed())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Scheduler s = new SingleScheduler()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Disposable.disposed(),s.scheduleDirect(r,1,TimeUnit.SECONDS))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Disposables.disposed(),w.schedulePeriodically(r,1,1,TimeUnit.SECONDS))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->7 [style = solid, label="r"];
0->19 [style = solid, label="r"];
29->8 [style = bold, label=""];
10->21 [style = dashed, label="0"];
3->26 [style = dashed, label="0"];
0->11 [style = solid, label="r"];
11->16 [style = dashed, label="0"];
8->18 [style = bold, label=""];
9->4 [style = bold, label=""];
26->25 [style = bold, label=""];
0->29 [style = solid, label="r"];
0->2 [style = solid, label="r"];
15->24 [style = dashed, label="0"];
0->3 [style = solid, label="r"];
0->18 [style = solid, label="r"];
8->14 [style = bold, label=""];
1->20 [style = bold, label=""];
7->20 [style = dashed, label="0"];
28->26 [style = bold, label=""];
6->0 [style = bold, label=""];
19->17 [style = bold, label=""];
25->29 [style = bold, label=""];
12->6 [style = bold, label=""];
2->17 [style = dashed, label="0"];
1->7 [style = bold, label=""];
0->15 [style = bold, label=""];
7->3 [style = bold, label=""];
2->13 [style = bold, label=""];
3->19 [style = dashed, label="0"];
0->20 [style = solid, label="r"];
0->26 [style = solid, label="r"];
6->0 [style = solid, label="calls"];
0->14 [style = solid, label="r"];
1->28 [style = bold, label=""];
21->9 [style = bold, label=""];
6->4 [style = solid, label="calls"];
0->17 [style = solid, label="r"];
3->2 [style = bold, label=""];
27->11 [style = bold, label=""];
15->1 [style = bold, label=""];
11->10 [style = bold, label=""];
16->21 [style = bold, label=""];
0->24 [style = bold, label=""];
23->6 [style = bold, label=""];
0->9 [style = solid, label="r"];
2->25 [style = dashed, label="0"];
0->21 [style = solid, label="r"];
10->9 [style = bold, label=""];
17->13 [style = bold, label=""];
24->1 [style = bold, label=""];
14->18 [style = dashed, label="0"];
13->8 [style = bold, label=""];
20->19 [style = bold, label=""];
0->16 [style = solid, label="r"];
8->27 [style = bold, label=""];
0->25 [style = solid, label="r"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
0->10 [style = solid, label="r"];
22->6 [style = bold, label=""];
6->9 [style = solid, label="calls"];
18->16 [style = bold, label=""];
}
