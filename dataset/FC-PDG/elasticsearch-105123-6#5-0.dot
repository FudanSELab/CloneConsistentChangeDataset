digraph {
1 [style = filled, label = "assertEquals(Math.PI,histogram.getBuckets().get(1).getKey())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).offset(Math.PI)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "w.addDocument(doc)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(2).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(2).getDocCount())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(Math.PI,histogram.getBuckets().get(2).getKey())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@23@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(4,histogram.getBuckets().size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(-3 * Math.PI,histogram.getBuckets().get(1).getKey())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Document doc = new Document()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testIrrationalInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(0).getDocCount())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,longField(\"field\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,doubleField(\"field\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "testOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(0,histogram.getBuckets().get(1).getDocCount())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(3,histogram.getBuckets().size())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(5 + Math.PI,histogram.getBuckets().get(2).getKey())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,doubleField(\"field\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(Math.PI)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"field\",value))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(-4 * Math.PI,histogram.getBuckets().get(0).getKey())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Math.PI,histogram.getBuckets().get(3).getKey())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"field\",NumericUtils.doubleToSortableLong(value)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(2).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(4,histogram.getBuckets().size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(5 + Math.PI,histogram.getBuckets().get(3).getKey())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(-10 + Math.PI,histogram.getBuckets().get(0).getKey())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(-5 + Math.PI,histogram.getBuckets().get(1).getKey())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
16->3 [style = bold, label=""];
12->38 [style = dashed, label="0"];
1->37 [style = dashed, label="0"];
11->12 [style = solid, label="aggBuilder"];
7->1 [style = bold, label=""];
7->17 [style = bold, label=""];
38->36 [style = solid, label="histogram"];
18->23 [style = bold, label=""];
28->30 [style = bold, label=""];
15->21 [style = solid, label="histogram"];
26->5 [style = bold, label=""];
24->0 [style = bold, label=""];
11->34 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
3->14 [style = bold, label=""];
8->3 [style = bold, label=""];
14->5 [style = bold, label=""];
30->27 [style = bold, label=""];
3->26 [style = bold, label=""];
29->25 [style = bold, label=""];
27->31 [style = bold, label=""];
31->36 [style = bold, label=""];
10->33 [style = dashed, label="0"];
13->23 [style = dashed, label="0"];
11->15 [style = solid, label="aggBuilder"];
11->2 [style = bold, label=""];
1->9 [style = bold, label=""];
2->12 [style = bold, label=""];
14->26 [style = dashed, label="0"];
0->7 [style = bold, label=""];
5->34 [style = bold, label=""];
20->21 [style = bold, label=""];
2->38 [style = bold, label=""];
33->29 [style = bold, label=""];
35->28 [style = bold, label=""];
9->35 [style = dashed, label="0"];
6->4 [style = bold, label=""];
13->28 [style = dashed, label="0"];
12->10 [style = bold, label=""];
1->17 [style = dashed, label="0"];
3->5 [style = solid, label="doc"];
22->20 [style = bold, label=""];
34->2 [style = bold, label=""];
25->37 [style = bold, label=""];
2->15 [style = solid, label="searcher"];
15->24 [style = bold, label=""];
23->19 [style = bold, label=""];
10->0 [style = bold, label=""];
2->15 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->29 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
7->25 [style = dashed, label="0"];
6->30 [style = dashed, label="0"];
5->11 [style = bold, label=""];
2->12 [style = solid, label="searcher"];
37->35 [style = bold, label=""];
13->6 [style = bold, label=""];
2->38 [style = solid, label="searcher"];
38->33 [style = bold, label=""];
32->3 [style = bold, label=""];
19->22 [style = bold, label=""];
10->24 [style = dashed, label="0"];
17->18 [style = bold, label=""];
12->4 [style = solid, label="histogram"];
34->38 [style = solid, label="aggBuilder"];
9->13 [style = bold, label=""];
}
