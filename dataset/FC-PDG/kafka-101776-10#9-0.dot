digraph {
17 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "context.setTimestamp(timestamp)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "harness.processor.process(new Record<>(key,value,timestamp))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final MockInternalNewProcessorContext<Windowed<String>,Change<Long>> context = harness.context@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new SessionWindow(0L,0L))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final long timestamp = 100L@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final long timestamp = ARBITRARY_LONG@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(finalResults(ofMillis(0L)),sessionWindowedSerdeFrom(),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,new RecordHeaders(),timestamp)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Change<Long> value = ARBITRARY_CHANGE@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "finalResultsShouldDropTombstonesForSessionWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ZERO,unbounded()),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(context.forwarded(),hasSize(0))@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(context.forwarded(),hasSize(0))@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "windowedZeroTimeLimitShouldImmediatelyEmit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "finalResultsShouldDropTombstonesForSessionWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "context.setRecordMetadata(\"\",0,0L)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new SessionWindow(0L,0L))@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->3 [style = bold, label=""];
5->1 [style = solid, label="timestamp"];
4->6 [style = bold, label=""];
5->14 [style = solid, label="timestamp"];
15->1 [style = bold, label=""];
23->19 [style = bold, label=""];
17->21 [style = bold, label=""];
18->22 [style = bold, label=""];
8->7 [style = solid, label="value"];
5->9 [style = solid, label="timestamp"];
8->14 [style = solid, label="key"];
5->1 [style = bold, label=""];
21->16 [style = bold, label=""];
2->20 [style = dashed, label="0"];
1->18 [style = bold, label=""];
0->8 [style = bold, label=""];
11->6 [style = bold, label=""];
7->20 [style = bold, label=""];
3->5 [style = bold, label=""];
5->13 [style = bold, label=""];
1->13 [style = dashed, label="0"];
7->14 [style = bold, label=""];
7->14 [style = solid, label="value"];
12->5 [style = bold, label=""];
15->1 [style = solid, label="timestamp"];
22->7 [style = solid, label="value"];
22->7 [style = bold, label=""];
6->3 [style = bold, label=""];
6->12 [style = bold, label=""];
3->15 [style = bold, label=""];
20->17 [style = bold, label=""];
8->7 [style = bold, label=""];
7->14 [style = dashed, label="0"];
13->9 [style = bold, label=""];
6->19 [style = dashed, label="0"];
9->8 [style = bold, label=""];
15->16 [style = solid, label="timestamp"];
0->7 [style = solid, label="key"];
14->10 [style = bold, label=""];
3->12 [style = dashed, label="0"];
0->18 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
22->21 [style = solid, label="value"];
18->21 [style = solid, label="key"];
8->22 [style = dashed, label="0"];
18->7 [style = solid, label="key"];
1->0 [style = bold, label=""];
7->2 [style = bold, label=""];
}
