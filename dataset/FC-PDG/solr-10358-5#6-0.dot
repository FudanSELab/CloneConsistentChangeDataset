digraph {
25 [style = filled, label = "return (StreamComparator)createInstance(comparatorType,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f96424,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9642a)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "null == order@@@31@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "2 != parts.length@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "null == leftFieldName@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "return new MultipleFieldEqualitor(eqs)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "String equalitorString@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "++idx@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "2 != parts.length@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "comparatorString.contains(\",\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String(( parts = comparatorString.split(\",\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "comparatorString.contains(\"=\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "constructComparator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String part@@@21@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "leftFieldName = rightFieldName = equalitorString.trim()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "leftFieldName = parts(0(.trim()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid comparator expression %s - expecting fieldName and order\",comparatorString))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "null == part || 0 == part.trim().length()@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "String order = null@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Class comparatorType@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid comparator expression %s - expecting 'field order'\",comparatorString))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "constructEqualitor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "String(( parts = equalitorString.split(\",\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "equalitorString.contains(\"=\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String rightFieldName = null@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "rightFieldName = part.trim()@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "equalitorString.contains(\",\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "return new MultipleFieldComparator(comps)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String comparatorString@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String(( parts = comparatorString.split(\" \")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int idx = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "rightFieldName = parts(1(.trim()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Class equalitorType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "idx < parts.length@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String(( parts = comparatorString.split(\"( =(\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid equalitor expression %s - expecting fieldName=fieldName\",equalitorString))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String order = parts(1(.trim()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "comps(idx( = constructComparator(parts(idx(.trim(),comparatorType)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "String leftFieldName@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "eqs(idx( = constructEqualitor(parts(idx(.trim(),equalitorType)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "StreamComparator(( comps = new StreamComparator((((@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "null == rightFieldName@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "return (StreamEqualitor)createInstance(equalitorType,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f96505,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9650a)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "parts.length < 3@@@15@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid comparator expression %s - expecting 'left=right order'\",comparatorString))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "StreamEqualitor(( eqs = new StreamEqualitor((((@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "String rightFieldName@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return (StreamComparator)createInstance(comparatorType,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f96467,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f9646c)@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "parts@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "null == leftFieldName || null == rightFieldName || null == order@@@36@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "String comparatorString@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String(( parts = equalitorString.split(\"=\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "leftFieldName = part.trim()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid comparator expression %s - expecting 'left=right order'\",comparatorString))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "order = part.trim()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "String leftFieldName = null@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "constructComparator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22->31 [style = dotted, label="true"];
41->15 [style = bold, label=""];
16->13 [style = dotted, label="true"];
10->16 [style = solid, label="idx"];
12->2 [style = dotted, label="false"];
48->47 [style = dotted, label="false"];
0->44 [style = dashed, label="0"];
12->6 [style = dotted, label="false"];
48->44 [style = dotted, label="true"];
12->15 [style = dotted, label="true"];
40->5 [style = dotted, label="true"];
19->28 [style = solid, label="rightFieldName"];
24->34 [style = bold, label=""];
5->45 [style = bold, label=""];
28->19 [style = dotted, label="true"];
29->20 [style = dotted, label="true"];
16->10 [style = dotted, label="true"];
8->4 [style = dotted, label="true"];
40->43 [style = dotted, label="true"];
20->27 [style = bold, label=""];
30->36 [style = solid, label="comparatorString"];
48->54 [style = bold, label=""];
37->5 [style = bold, label=""];
45->52 [style = solid, label="leftFieldName"];
48->15 [style = dotted, label="true"];
51->48 [style = bold, label=""];
45->43 [style = bold, label=""];
22->38 [style = dotted, label="true"];
16->49 [style = bold, label=""];
48->39 [style = dotted, label="true"];
12->22 [style = dotted, label="false"];
49->13 [style = bold, label=""];
6->11 [style = bold, label=""];
50->45 [style = bold, label=""];
51->55 [style = dotted, label="true"];
10->49 [style = dashed, label="0"];
22->35 [style = dotted, label="true"];
17->28 [style = solid, label="rightFieldName"];
9->41 [style = dashed, label="0"];
35->24 [style = solid, label="order"];
6->11 [style = dotted, label="true"];
24->27 [style = bold, label=""];
27->25 [style = bold, label=""];
27->36 [style = dotted, label="true"];
12->22 [style = bold, label=""];
38->33 [style = dotted, label="true"];
28->24 [style = dotted, label="false"];
17->35 [style = bold, label=""];
48->40 [style = dotted, label="false"];
16->3 [style = bold, label=""];
12->3 [style = dotted, label="true"];
22->29 [style = dotted, label="true"];
19->34 [style = bold, label=""];
21->27 [style = solid, label="leftFieldName"];
20->29 [style = solid, label="leftFieldName"];
12->7 [style = dotted, label="false"];
30->37 [style = solid, label="comparatorString"];
20->34 [style = bold, label=""];
3->39 [style = dashed, label="0"];
6->37 [style = dotted, label="true"];
18->12 [style = bold, label=""];
48->44 [style = bold, label=""];
14->10 [style = solid, label="comparatorType"];
12->1 [style = bold, label=""];
35->25 [style = solid, label="order"];
13->16 [style = bold, label=""];
20->25 [style = solid, label="leftFieldName"];
2->43 [style = dashed, label="0"];
10->3 [style = solid, label="comps"];
29->20 [style = bold, label=""];
36->25 [style = bold, label=""];
49->16 [style = solid, label="idx"];
35->27 [style = solid, label="order"];
5->45 [style = dashed, label="0"];
15->16 [style = solid, label="idx"];
8->14 [style = dotted, label="true"];
44->41 [style = bold, label=""];
28->19 [style = bold, label=""];
19->25 [style = solid, label="rightFieldName"];
12->0 [style = dotted, label="true"];
46->49 [style = solid, label="equalitorType"];
28->24 [style = bold, label=""];
16->49 [style = dotted, label="true"];
55->50 [style = solid, label="equalitorString"];
16->39 [style = bold, label=""];
5->7 [style = solid, label="fieldName"];
22->1 [style = dotted, label="false"];
35->34 [style = bold, label=""];
22->32 [style = dotted, label="true"];
38->33 [style = bold, label=""];
30->33 [style = solid, label="comparatorString"];
12->48 [style = dashed, label="0"];
48->41 [style = dotted, label="true"];
9->3 [style = solid, label="comps"];
22->21 [style = dotted, label="true"];
48->54 [style = dotted, label="false"];
34->29 [style = bold, label=""];
48->52 [style = dotted, label="false"];
19->27 [style = solid, label="rightFieldName"];
40->53 [style = bold, label=""];
20->27 [style = solid, label="leftFieldName"];
48->16 [style = dotted, label="true"];
47->40 [style = bold, label=""];
41->39 [style = solid, label="eqs"];
42->52 [style = bold, label=""];
22->25 [style = dotted, label="true"];
31->38 [style = bold, label=""];
6->37 [style = bold, label=""];
21->25 [style = solid, label="leftFieldName"];
6->5 [style = bold, label=""];
11->5 [style = bold, label=""];
1->6 [style = bold, label=""];
22->5 [style = dotted, label="false"];
24->23 [style = dotted, label="true"];
10->13 [style = bold, label=""];
22->26 [style = dotted, label="true"];
23->27 [style = solid, label="order"];
43->52 [style = solid, label="rightFieldName"];
12->1 [style = dotted, label="false"];
21->29 [style = solid, label="leftFieldName"];
22->27 [style = dotted, label="true"];
14->55 [style = dashed, label="0"];
22->1 [style = bold, label=""];
5->50 [style = dotted, label="true"];
34->27 [style = bold, label=""];
8->12 [style = bold, label=""];
40->42 [style = dotted, label="false"];
24->23 [style = bold, label=""];
22->34 [style = dotted, label="true"];
40->53 [style = dotted, label="true"];
0->9 [style = bold, label=""];
17->27 [style = solid, label="rightFieldName"];
27->36 [style = bold, label=""];
23->27 [style = bold, label=""];
16->10 [style = bold, label=""];
53->5 [style = bold, label=""];
2->7 [style = solid, label="order"];
14->7 [style = solid, label="comparatorType"];
11->50 [style = dashed, label="0"];
22->31 [style = bold, label=""];
49->39 [style = solid, label="eqs"];
42->52 [style = solid, label="leftFieldName"];
43->52 [style = bold, label=""];
22->2 [style = dotted, label="false"];
23->25 [style = solid, label="order"];
15->16 [style = bold, label=""];
12->0 [style = bold, label=""];
18->14 [style = dotted, label="true"];
29->28 [style = dotted, label="false"];
12->5 [style = dotted, label="false"];
29->28 [style = bold, label=""];
5->2 [style = bold, label=""];
54->47 [style = bold, label=""];
12->16 [style = dotted, label="true"];
9->15 [style = bold, label=""];
14->25 [style = solid, label="comparatorType"];
19->27 [style = bold, label=""];
22->7 [style = dotted, label="false"];
22->6 [style = dotted, label="false"];
38->21 [style = bold, label=""];
11->37 [style = dashed, label="0"];
22->17 [style = dotted, label="true"];
4->11 [style = solid, label="comparatorString"];
2->7 [style = bold, label=""];
40->45 [style = dotted, label="true"];
33->21 [style = bold, label=""];
17->25 [style = solid, label="rightFieldName"];
5->50 [style = bold, label=""];
21->17 [style = bold, label=""];
40->42 [style = bold, label=""];
51->46 [style = dotted, label="true"];
46->52 [style = solid, label="equalitorType"];
12->9 [style = dotted, label="true"];
18->30 [style = dotted, label="true"];
}
