digraph {
87 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final RexNode kRef = rexBuilder.makeFieldAccess(range,10)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vIntNotNull(1))),\"IS NULL(?0.int0)\")@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "checkSimplify(or(aRef,bRef,falseLiteral),\"OR(?0.a, ?0.b)\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "checkSimplify3(ne(iRef,iRef),\"AND(null, SEARCH(?0.i, Sarg(NULL())\",\"false\",\"SEARCH(?0.i, Sarg(NULL()\")@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "checkSimplify(and(lt(hRef,literal(1)),or(falseLiteral,gt(jRef,kRef))),\"AND(<(?0.h, 1), >(?0.j, ?0.k))\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "checkSimplify(le(literal(1),literal(1)),\"true\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NULL,aRef),\"false\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final RelDataType intNullableType = typeFactory.createTypeWithNullability(intType,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vIntNotNull(1))),\"true\")@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "checkSimplify(case_(trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"?0.a\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final RexNode hRef = rexBuilder.makeFieldAccess(range,7)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,falseLiteral,aRef,eRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.e, <>(?0.b, ?0.c)))\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final RexNode iRef = rexBuilder.makeFieldAccess(range,8)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,trueLiteral)),\"true\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final RelDataType intType = typeFactory.createSqlType(SqlTypeName.INTEGER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "checkSimplify2(and(lt(hRef,literal(1)),eq(hRef,literal(1)),ge(hRef,literal(1))),\"AND(<(?0.h, 1), =(?0.h, 1), >=(?0.h, 1))\",\"false\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "checkSimplify(case_(eq(falseLiteral,falseLiteral),falseLiteral,eq(falseLiteral,falseLiteral),trueLiteral,trueLiteral),\"false\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "final RexNode bRef = rexBuilder.makeFieldAccess(range,1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "checkSimplify(and(le(hRef,literal(1)),ge(hRef,literal(1))),\"=(?0.h, 1)\")@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "checkSimplify(or(aRef,bRef,aRef),\"OR(?0.a, ?0.b)\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vIntNotNull(1))),\"IS NOT NULL(?0.int0)\")@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "checkSimplify(and(aRef,bRef,aRef),\"AND(?0.a, ?0.b)\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "checkSimplify2(and(le(hRef,literal(1)),gt(hRef,literal(1))),\"AND(<=(?0.h, 1), >(?0.h, 1))\",\"false\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "testSimplify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
86 [style = filled, label = "checkSimplify3(gt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@69@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "checkSimplify(isNull(nullBool),\"true\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testSimplify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "checkSimplify(isNotNull(lt(vIntNotNull(2),vIntNotNull(3))),\"true\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final RexNode dRef = rexBuilder.makeFieldAccess(range,3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final RexNode cRef = rexBuilder.makeFieldAccess(range,2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,or(trueLiteral,falseLiteral))),\"true\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,falseLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)))\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkSimplifyUnchanged(ne(iRef,hRef))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkSimplify(eq(hRef,hRef),\"true\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vIntNotNull(1))),\"false\")@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(cRef),not(aRef)),\"AND(?0.b, NOT(?0.a), NOT(?0.c))\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "checkSimplify(and(aRef,bRef,trueLiteral),\"AND(?0.a, ?0.b)\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkSimplify(and(aRef,and(and(bRef,not(cRef),dRef,not(eRef)),not(eRef))),\"AND(?0.a, ?0.b, ?0.d, NOT(?0.c), NOT(?0.e))\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkSimplify(ne(hRef,hRef),\"false\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final RelDataType rowType = typeFactory.builder().add(\"a\",booleanType).add(\"b\",booleanType).add(\"c\",booleanType).add(\"d\",booleanType).add(\"e\",booleanType).add(\"f\",booleanType).add(\"g\",booleanType).add(\"h\",intType).add(\"i\",intNullableType).add(\"j\",intType).add(\"k\",intType).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "checkSimplifyDynamicParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "checkSimplify(isNull(not(vBool())),\"IS NULL(?0.bool0)\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vIntNotNull(2))),\"IS NOT NULL(?0.int0)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "checkSimplify3(eq(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkSimplify(le(hRef,hRef),\"true\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "checkSimplify(case_(aRef,literal(1),bRef,literal(1),cRef,literal(1),dRef,literal(1),literal(1)),\"1\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "checkSimplify(ge(literal(1),literal(1)),\"true\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "checkSimplify(isNull(not(vBoolNotNull())),\"false\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "checkSimplify(or(aRef,bRef,trueLiteral),\"true\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "final RexDynamicParam range = rexBuilder.makeDynamicParam(rowType,0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vInt(1))),\"IS NOT NULL(?0.int1)\")@@@83@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final RexNode aRef = rexBuilder.makeFieldAccess(range,0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,eRef,falseLiteral,trueLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)), AND(NOT(?0.b), NOT(?0.c), NOT(?0.e)))\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "checkSimplify(ge(hRef,hRef),\"true\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkSimplifyUnchanged(ge(iRef,hRef))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "checkSimplify(gt(hRef,hRef),\"false\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(not(cRef),dRef,not(eRef)))),\"AND(?0.a, ?0.b, ?0.c, ?0.e, NOT(?0.d))\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),literal(BigDecimal.ONE))),\"IS NOT NULL(?0.int0)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "checkSimplifyUnchanged(lt(iRef,hRef))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "checkSimplify3(lt(iRef,iRef),\"AND(null, SEARCH(?0.i, Sarg(NULL())\",\"false\",\"SEARCH(?0.i, Sarg(NULL()\")@@@65@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_NULL,aRef),\"true\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,or(falseLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkSimplifyUnchanged(gt(iRef,hRef))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkSimplify(isNotNull(not(vBool())),\"IS NOT NULL(?0.bool0)\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "checkSimplify(ne(literal(1),literal(1)),\"false\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkSimplify3(ge(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.a, <>(?0.b, ?0.c)))\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "checkSimplify(lt(literal(1),literal(1)),\"false\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,and(trueLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final RelDataType booleanType = typeFactory.createSqlType(SqlTypeName.BOOLEAN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkSimplify(and(lt(hRef,literal(1)),or(falseLiteral,falseLiteral)),\"false\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "checkSimplify(and(aRef,bRef,falseLiteral),\"false\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "checkSimplify3(ne(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "checkSimplify3(case_(aRef,trueLiteral,bRef,trueLiteral,cRef,falseLiteral,nullBool),\"OR(?0.a, ?0.b, AND(null, NOT(?0.a), NOT(?0.b), NOT(?0.c)))\",\"OR(?0.a, ?0.b)\",\"OR(?0.a, ?0.b, NOT(?0.c))\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vInt(1))),\"OR(IS NULL(?0.int0), IS NULL(?0.int1))\")@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),null_(tInt()))),\"false\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(cRef,or(dRef,eRef)))),\"AND(?0.a, ?0.b, NOT(?0.c), NOT(?0.d), NOT(?0.e))\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "checkSimplify3(le(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkSimplifyUnchanged(le(iRef,hRef))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "checkSimplifyUnchanged(eq(iRef,hRef))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "checkSimplify(gt(literal(1),literal(1)),\"false\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(trueLiteral)),\"false\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "final RexNode eRef = rexBuilder.makeFieldAccess(range,4)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "checkSimplify(eq(literal(1),literal(1)),\"true\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final RexNode jRef = rexBuilder.makeFieldAccess(range,9)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "checkSimplify3(gt(iRef,iRef),\"AND(null, SEARCH(?0.i, Sarg(NULL())\",\"false\",\"SEARCH(?0.i, Sarg(NULL()\")@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82 [style = filled, label = "checkSimplify3(lt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@65@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vInt(1))),\"IS NULL(?0.int1)\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "checkSimplify2(and(le(hRef,literal(1)),ge(hRef,literal(1))),\"AND(<=(?0.h, 1), >=(?0.h, 1))\",\"=(?0.h, 1)\")@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "checkSimplify(isNotNull(not(vBoolNotNull())),\"true\")@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "checkSimplify(lt(hRef,hRef),\"false\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->67 [style = bold, label=""];
69->55 [style = solid, label="aRef"];
75->78 [style = solid, label="range"];
34->61 [style = bold, label=""];
90->88 [style = bold, label=""];
70->86 [style = bold, label=""];
41->27 [style = solid, label="hRef"];
41->35 [style = solid, label="hRef"];
83->32 [style = bold, label=""];
67->31 [style = bold, label=""];
75->76 [style = solid, label="range"];
69->10 [style = solid, label="aRef"];
37->22 [style = solid, label="cRef"];
76->79 [style = solid, label="eRef"];
36->28 [style = bold, label=""];
89->87 [style = bold, label=""];
69->46 [style = solid, label="aRef"];
41->21 [style = solid, label="hRef"];
13->11 [style = solid, label="iRef"];
69->78 [style = bold, label=""];
7->40 [style = solid, label="dRef"];
24->30 [style = bold, label=""];
13->83 [style = solid, label="iRef"];
85->35 [style = bold, label=""];
69->40 [style = solid, label="aRef"];
21->56 [style = bold, label=""];
21->83 [style = bold, label=""];
69->54 [style = solid, label="aRef"];
76->41 [style = bold, label=""];
41->34 [style = solid, label="hRef"];
75->13 [style = solid, label="range"];
37->46 [style = solid, label="cRef"];
6->11 [style = bold, label=""];
13->27 [style = solid, label="iRef"];
78->60 [style = solid, label="bRef"];
69->73 [style = solid, label="aRef"];
70->57 [style = bold, label=""];
66->82 [style = dashed, label="0"];
52->21 [style = bold, label=""];
71->65 [style = bold, label=""];
78->45 [style = solid, label="bRef"];
7->79 [style = solid, label="dRef"];
41->13 [style = bold, label=""];
18->0 [style = bold, label=""];
78->4 [style = solid, label="bRef"];
59->54 [style = bold, label=""];
41->64 [style = solid, label="hRef"];
78->77 [style = solid, label="bRef"];
81->1 [style = bold, label=""];
76->19 [style = solid, label="eRef"];
13->6 [style = solid, label="iRef"];
22->46 [style = bold, label=""];
9->39 [style = bold, label=""];
76->46 [style = solid, label="eRef"];
82->9 [style = bold, label=""];
69->60 [style = solid, label="aRef"];
13->50 [style = solid, label="iRef"];
5->23 [style = bold, label=""];
56->32 [style = bold, label=""];
41->12 [style = solid, label="hRef"];
13->20 [style = solid, label="iRef"];
37->19 [style = solid, label="cRef"];
13->9 [style = solid, label="iRef"];
78->73 [style = solid, label="bRef"];
43->51 [style = bold, label=""];
73->2 [style = bold, label=""];
78->46 [style = solid, label="bRef"];
41->1 [style = solid, label="hRef"];
54->77 [style = bold, label=""];
7->2 [style = solid, label="dRef"];
75->69 [style = bold, label=""];
78->43 [style = solid, label="bRef"];
49->62 [style = bold, label=""];
51->19 [style = bold, label=""];
78->22 [style = solid, label="bRef"];
41->20 [style = solid, label="hRef"];
7->60 [style = solid, label="dRef"];
41->9 [style = solid, label="hRef"];
13->82 [style = solid, label="iRef"];
56->83 [style = dashed, label="0"];
64->6 [style = bold, label=""];
41->61 [style = solid, label="hRef"];
12->82 [style = bold, label=""];
41->38 [style = solid, label="hRef"];
7->76 [style = bold, label=""];
75->53 [style = solid, label="range"];
41->62 [style = solid, label="hRef"];
41->81 [style = solid, label="hRef"];
76->22 [style = solid, label="eRef"];
69->5 [style = solid, label="aRef"];
75->41 [style = solid, label="range"];
27->71 [style = bold, label=""];
44->22 [style = bold, label=""];
69->45 [style = solid, label="aRef"];
41->49 [style = solid, label="hRef"];
79->60 [style = bold, label=""];
37->40 [style = solid, label="cRef"];
33->8 [style = bold, label=""];
69->77 [style = solid, label="aRef"];
69->44 [style = solid, label="aRef"];
78->19 [style = solid, label="bRef"];
75->69 [style = solid, label="range"];
80->64 [style = bold, label=""];
4->10 [style = bold, label=""];
78->59 [style = solid, label="bRef"];
37->2 [style = solid, label="cRef"];
14->68 [style = bold, label=""];
77->43 [style = bold, label=""];
7->19 [style = solid, label="dRef"];
41->67 [style = solid, label="hRef"];
13->38 [style = solid, label="iRef"];
28->47 [style = bold, label=""];
58->14 [style = bold, label=""];
13->86 [style = solid, label="iRef"];
87->90 [style = bold, label=""];
35->49 [style = bold, label=""];
69->4 [style = solid, label="aRef"];
32->16 [style = bold, label=""];
7->22 [style = solid, label="dRef"];
41->11 [style = solid, label="hRef"];
37->7 [style = bold, label=""];
76->4 [style = solid, label="eRef"];
20->80 [style = bold, label=""];
30->63 [style = bold, label=""];
57->86 [style = dashed, label="0"];
47->29 [style = bold, label=""];
12->66 [style = bold, label=""];
19->45 [style = bold, label=""];
69->51 [style = solid, label="aRef"];
69->2 [style = solid, label="aRef"];
46->79 [style = bold, label=""];
37->79 [style = solid, label="cRef"];
13->66 [style = solid, label="iRef"];
66->9 [style = bold, label=""];
92->91 [style = bold, label=""];
78->55 [style = solid, label="bRef"];
72->24 [style = bold, label=""];
78->40 [style = solid, label="bRef"];
41->32 [style = solid, label="hRef"];
28->47 [style = solid, label="intType"];
61->85 [style = dashed, label="0"];
13->32 [style = solid, label="iRef"];
86->27 [style = bold, label=""];
69->23 [style = solid, label="aRef"];
62->81 [style = bold, label=""];
15->72 [style = bold, label=""];
7->4 [style = solid, label="dRef"];
41->31 [style = solid, label="hRef"];
78->54 [style = solid, label="bRef"];
76->45 [style = solid, label="eRef"];
61->35 [style = bold, label=""];
37->4 [style = solid, label="cRef"];
37->73 [style = solid, label="cRef"];
13->56 [style = solid, label="iRef"];
75->37 [style = solid, label="range"];
65->3 [style = bold, label=""];
29->75 [style = bold, label=""];
75->17 [style = solid, label="range"];
76->40 [style = solid, label="eRef"];
63->33 [style = bold, label=""];
13->53 [style = bold, label=""];
34->85 [style = bold, label=""];
37->43 [style = solid, label="cRef"];
38->58 [style = bold, label=""];
26->36 [style = bold, label=""];
53->62 [style = solid, label="jRef"];
7->45 [style = solid, label="dRef"];
69->79 [style = solid, label="aRef"];
13->68 [style = solid, label="iRef"];
78->37 [style = bold, label=""];
31->18 [style = bold, label=""];
69->59 [style = solid, label="aRef"];
3->15 [style = bold, label=""];
2->40 [style = bold, label=""];
11->52 [style = bold, label=""];
39->70 [style = bold, label=""];
10->55 [style = bold, label=""];
13->57 [style = solid, label="iRef"];
88->92 [style = bold, label=""];
29->75 [style = solid, label="rowType"];
25->74 [style = bold, label=""];
0->50 [style = bold, label=""];
69->22 [style = solid, label="aRef"];
41->85 [style = solid, label="hRef"];
45->4 [style = bold, label=""];
37->45 [style = solid, label="cRef"];
75->7 [style = solid, label="range"];
37->60 [style = solid, label="cRef"];
8->48 [style = bold, label=""];
41->70 [style = solid, label="hRef"];
55->44 [style = bold, label=""];
69->19 [style = solid, label="aRef"];
57->27 [style = bold, label=""];
78->51 [style = solid, label="bRef"];
7->46 [style = solid, label="dRef"];
50->38 [style = bold, label=""];
41->14 [style = solid, label="hRef"];
60->73 [style = bold, label=""];
78->44 [style = solid, label="bRef"];
53->17 [style = bold, label=""];
48->25 [style = bold, label=""];
41->0 [style = solid, label="hRef"];
23->34 [style = bold, label=""];
69->43 [style = solid, label="aRef"];
17->59 [style = bold, label=""];
42->5 [style = bold, label=""];
84->36 [style = bold, label=""];
78->10 [style = solid, label="bRef"];
16->12 [style = bold, label=""];
40->42 [style = bold, label=""];
68->20 [style = bold, label=""];
17->62 [style = solid, label="kRef"];
78->2 [style = solid, label="bRef"];
}
