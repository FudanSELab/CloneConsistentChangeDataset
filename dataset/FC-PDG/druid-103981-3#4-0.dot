digraph {
25 [style = filled, label = "List<Row> expectedDay4 = Collections.singletonList(JAN_4_M_10)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rows = new ArrayList<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(expectedDay5,actual.getRows())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(JAN_1,actual.getDateTime())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testMissingDaysAtBegining['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "rows.add(JAN_2_M_10)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "intervals.add(INTERVAL_JAN_1_2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(JAN_5,actual.getDateTime())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "List<Row> expectedDay5 = Collections.singletonList(JAN_5_M_10)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testMissingDaysAtBegining['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "rows.add(JAN_4_M_10)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "List<Row> expectedDay3 = Collections.emptyList()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "actual = iter.next()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(JAN_4,actual.getDateTime())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(JAN_3,actual.getDateTime())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(JAN_1,actual.getDateTime())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "actual = iter.next()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(JAN_2,actual.getDateTime())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "intervals = new ArrayList<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(JAN_2,actual.getDateTime())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testMultipleMissingDaysMultipleRowAtTheEnd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "intervals.add(INTERVAL_JAN_1_5)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "actual = iter.next()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "rows.add(JAN_5_M_10)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "actual = iter.next()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RowBucket actual = iter.next()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Row> expectedDay1 = Collections.emptyList()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33->8 [style = bold, label=""];
23->32 [style = bold, label=""];
7->8 [style = bold, label=""];
7->24 [style = bold, label=""];
2->4 [style = bold, label=""];
14->3 [style = bold, label=""];
12->17 [style = solid, label="expectedDay2"];
3->17 [style = dashed, label="0"];
27->29 [style = solid, label="expectedDay5"];
24->33 [style = bold, label=""];
22->0 [style = bold, label=""];
20->18 [style = bold, label=""];
6->0 [style = bold, label=""];
26->35 [style = bold, label=""];
30->35 [style = solid, label="expectedDay3"];
12->1 [style = bold, label=""];
9->8 [style = solid, label="rows"];
28->23 [style = bold, label=""];
19->0 [style = bold, label=""];
11->15 [style = bold, label=""];
30->25 [style = bold, label=""];
31->26 [style = bold, label=""];
34->9 [style = bold, label=""];
1->2 [style = solid, label="intervals"];
21->29 [style = bold, label=""];
35->28 [style = bold, label=""];
12->30 [style = bold, label=""];
9->7 [style = bold, label=""];
36->21 [style = bold, label=""];
32->36 [style = bold, label=""];
14->16 [style = dashed, label="0"];
8->2 [style = bold, label=""];
0->11 [style = solid, label="expectedDay1"];
27->1 [style = bold, label=""];
0->12 [style = bold, label=""];
3->31 [style = bold, label=""];
5->11 [style = bold, label=""];
15->14 [style = bold, label=""];
18->15 [style = bold, label=""];
5->20 [style = dashed, label="0"];
15->16 [style = bold, label=""];
0->18 [style = solid, label="expectedDay1"];
11->18 [style = dashed, label="0"];
4->10 [style = bold, label=""];
25->32 [style = solid, label="expectedDay4"];
16->17 [style = bold, label=""];
13->9 [style = bold, label=""];
13->34 [style = dashed, label="0"];
12->3 [style = solid, label="expectedDay2"];
25->27 [style = bold, label=""];
8->2 [style = solid, label="seq"];
10->5 [style = bold, label=""];
1->34 [style = bold, label=""];
1->13 [style = bold, label=""];
10->20 [style = bold, label=""];
}
