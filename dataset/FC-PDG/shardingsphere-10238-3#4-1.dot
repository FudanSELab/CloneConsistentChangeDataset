digraph {
1 [style = filled, label = "Collection<String> invalidKeyGenerators = getToBeCreatedKeyGenerators(sqlStatement).stream().distinct().filter(null).collect(Collectors.toList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw new InvalidKeyGeneratorsException(invalidKeyGenerators)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new InvalidLoadBalancersException(notExistedLoadBalancers)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "checkToBeCreatedLoadBalancers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "checkToBeCreatedKeyGenerators['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "!invalidKeyGenerators.isEmpty()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkToBeCreatedKeyGenerators['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "!notExistedLoadBalancers.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Collection<String> notExistedLoadBalancers = sqlStatement.getRules().stream().map(null).distinct().filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final CreateReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
9->7 [style = solid, label="notExistedLoadBalancers"];
6->1 [style = bold, label=""];
3->4 [style = dotted, label="true"];
11->8 [style = dotted, label="true"];
0->8 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
3->10 [style = dashed, label="0"];
2->0 [style = dotted, label="true"];
1->4 [style = solid, label="invalidKeyGenerators"];
9->10 [style = bold, label=""];
0->5 [style = dashed, label="0"];
11->9 [style = bold, label=""];
4->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
2->1 [style = bold, label=""];
10->7 [style = dotted, label="true"];
6->5 [style = dotted, label="true"];
}
