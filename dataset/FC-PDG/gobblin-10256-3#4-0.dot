digraph {
0 [style = filled, label = "String updatedSpecUriString = \"/foo/bar/addedSpec\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.DELETE),\"Verb did not match\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Pair<SpecExecutor.Verb,Spec>> consumedEvent = _seic.changedSpecs().get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(updatedSpecUriString),\"Expected URI did not match\")@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "log.info(\"WriteResponse: \" + writeResponse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue() instanceof JobSpec,\"Expected JobSpec\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getKey().equals(SpecExecutor.Verb.UPDATE),\"Verb did not match\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testUpdateSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String deletedSpecUriString = \"/foo/bar/addedSpec\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(specUriString),\"Expected URI did not match\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testDeleteSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertTrue(consumedSpecAction.getValue().getUri().toString().equals(deletedSpecUriString),\"Expected URI did not match\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(consumedEvent.size() == 1,\"Consumption did not match production\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.updateSpec(spec).get()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testUpdateSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "WriteResponse writeResponse = (WriteResponse)_seip.deleteSpec(new URI(deletedSpecUriString)).get()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Spec spec = initJobSpec(updatedSpecUriString)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Map.Entry<SpecExecutor.Verb,Spec> consumedSpecAction = consumedEvent.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->13 [style = solid, label="deletedSpecUriString"];
1->8 [style = bold, label=""];
0->6 [style = bold, label=""];
0->16 [style = dashed, label="0"];
7->11 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
17->18 [style = solid, label="writeResponse"];
16->17 [style = bold, label=""];
15->16 [style = bold, label=""];
10->7 [style = bold, label=""];
3->0 [style = bold, label=""];
0->7 [style = solid, label="updatedSpecUriString"];
10->9 [style = dashed, label="0"];
6->4 [style = bold, label=""];
11->5 [style = bold, label=""];
7->5 [style = bold, label=""];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
18->1 [style = bold, label=""];
7->13 [style = dashed, label="0"];
4->1 [style = bold, label=""];
13->14 [style = bold, label=""];
0->6 [style = solid, label="updatedSpecUriString"];
17->18 [style = bold, label=""];
4->1 [style = solid, label="writeResponse"];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
