digraph {
1 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"shape\").field(\"orientation\",\"left\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(FIELD_NAME)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CCW))@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "orientation = ((LegacyGeoShapeFieldMapper)fieldMapper).fieldType().orientation()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ShapeBuilder.Orientation orientation = ((ShapeFieldMapper)fieldMapper).fieldType().orientation()@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "ShapeBuilder.Orientation orientation = ((LegacyGeoShapeFieldMapper)fieldMapper).fieldType().orientation()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CCW))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CCW))@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.RIGHT))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.RIGHT))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "orientation = ((ShapeFieldMapper)fieldMapper).fieldType().orientation()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CW))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "orientation = ((ShapeFieldMapper)fieldMapper).fieldType().orientation()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testOrientationParsing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CLOCKWISE))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFieldWarnings(\"tree\",\"strategy\")@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "defaultMapper = createDocumentMapper(fieldMapping(null))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.LEFT))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.LEFT))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testOrientationParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(FIELD_NAME)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.COUNTER_CLOCKWISE))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testOrientationParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CLOCKWISE))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(orientation,equalTo(ShapeBuilder.Orientation.CW))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
14->5 [style = bold, label=""];
9->4 [style = solid, label="mapping"];
0->6 [style = solid, label="orientation"];
37->5 [style = solid, label="orientation"];
22->19 [style = bold, label=""];
35->3 [style = bold, label=""];
28->31 [style = bold, label=""];
30->34 [style = bold, label=""];
26->17 [style = bold, label=""];
13->4 [style = solid, label="orientation"];
7->8 [style = bold, label=""];
31->37 [style = bold, label=""];
32->30 [style = solid, label="fieldMapper"];
0->14 [style = solid, label="orientation"];
24->18 [style = bold, label=""];
9->4 [style = bold, label=""];
21->22 [style = bold, label=""];
8->0 [style = bold, label=""];
37->27 [style = bold, label=""];
4->11 [style = bold, label=""];
7->8 [style = solid, label="fieldMapper"];
6->13 [style = bold, label=""];
36->5 [style = bold, label=""];
0->3 [style = bold, label=""];
11->15 [style = bold, label=""];
13->28 [style = bold, label=""];
18->22 [style = solid, label="orientation"];
0->13 [style = solid, label="orientation"];
14->5 [style = solid, label="orientation"];
20->24 [style = solid, label="fieldMapper"];
3->6 [style = bold, label=""];
13->11 [style = solid, label="orientation"];
18->21 [style = solid, label="orientation"];
1->16 [style = solid, label="mapping"];
10->1 [style = bold, label=""];
34->6 [style = solid, label="orientation"];
28->31 [style = solid, label="fieldMapper"];
27->36 [style = bold, label=""];
15->37 [style = dashed, label="0"];
18->19 [style = solid, label="orientation"];
29->32 [style = bold, label=""];
15->14 [style = bold, label=""];
23->20 [style = bold, label=""];
11->23 [style = bold, label=""];
13->9 [style = solid, label="orientation"];
34->35 [style = solid, label="orientation"];
8->34 [style = dashed, label="0"];
11->15 [style = solid, label="fieldMapper"];
20->24 [style = bold, label=""];
18->21 [style = bold, label=""];
14->12 [style = solid, label="orientation"];
16->7 [style = bold, label=""];
13->18 [style = solid, label="orientation"];
0->3 [style = solid, label="orientation"];
32->30 [style = bold, label=""];
13->9 [style = bold, label=""];
34->35 [style = bold, label=""];
14->2 [style = solid, label="orientation"];
25->6 [style = solid, label="fieldMapper"];
34->37 [style = solid, label="orientation"];
1->16 [style = bold, label=""];
37->27 [style = solid, label="orientation"];
25->6 [style = bold, label=""];
33->29 [style = bold, label=""];
2->12 [style = bold, label=""];
17->25 [style = bold, label=""];
34->3 [style = solid, label="orientation"];
37->36 [style = solid, label="orientation"];
}
