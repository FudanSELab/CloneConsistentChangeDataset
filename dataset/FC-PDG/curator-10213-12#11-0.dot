digraph {
12 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "{node.close()}@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Trigger deletedTrigger = Trigger.deleted()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertTrue(deletedTrigger.firedWithin(timing.forSessionSleep().seconds(),TimeUnit.SECONDS))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "observer.checkExists().usingWatcher(deletedTrigger).forPath(node.getActualPath())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertNodeExists(observer,node.getActualPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testDeletesNodeWhenSessionDisconnects['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "node.debugReconnectLatch.countDown()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "node.debugReconnectLatch = new CountDownLatch(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "timing.sleepABit()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "node.debugReconnectLatch = new CountDownLatch(1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{node.close()}@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{node.close()}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "node.debugReconnectLatch.countDown()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "node.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->11 [style = dotted, label="true"];
14->3 [style = bold, label=""];
15->27 [style = solid, label="observer"];
25->1 [style = bold, label=""];
2->10 [style = solid, label="path"];
8->19 [style = bold, label=""];
6->21 [style = bold, label=""];
24->0 [style = bold, label=""];
1->15 [style = bold, label=""];
27->30 [style = bold, label=""];
26->1 [style = bold, label=""];
3->10 [style = dotted, label="true"];
14->11 [style = solid, label="i"];
2->27 [style = dashed, label="0"];
31->29 [style = bold, label=""];
30->32 [style = bold, label=""];
19->11 [style = bold, label=""];
34->31 [style = bold, label=""];
11->3 [style = solid, label="i"];
8->19 [style = solid, label="stat"];
16->23 [style = bold, label=""];
3->9 [style = dotted, label="true"];
3->6 [style = dotted, label="true"];
5->28 [style = bold, label=""];
2->8 [style = solid, label="path"];
5->17 [style = bold, label=""];
12->0 [style = bold, label=""];
3->4 [style = bold, label=""];
3->22 [style = bold, label=""];
14->3 [style = solid, label="i"];
32->33 [style = bold, label=""];
13->1 [style = bold, label=""];
15->5 [style = bold, label=""];
9->23 [style = dashed, label="0"];
3->24 [style = dotted, label="true"];
9->34 [style = dashed, label="0"];
20->27 [style = bold, label=""];
3->18 [style = bold, label=""];
7->14 [style = bold, label=""];
20->2 [style = bold, label=""];
1->5 [style = solid, label="curator"];
15->7 [style = solid, label="observer"];
0->10 [style = bold, label=""];
23->24 [style = bold, label=""];
3->19 [style = dotted, label="true"];
10->8 [style = bold, label=""];
11->3 [style = bold, label=""];
18->6 [style = bold, label=""];
3->21 [style = dotted, label="true"];
3->12 [style = dotted, label="true"];
3->18 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
21->16 [style = bold, label=""];
28->17 [style = bold, label=""];
9->12 [style = bold, label=""];
2->7 [style = bold, label=""];
3->16 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
8->11 [style = bold, label=""];
33->34 [style = bold, label=""];
2->7 [style = solid, label="path"];
2->21 [style = solid, label="path"];
16->9 [style = bold, label=""];
10->8 [style = solid, label="stat"];
17->20 [style = bold, label=""];
3->23 [style = dotted, label="true"];
}
