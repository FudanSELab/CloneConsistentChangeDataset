digraph {
69 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",(String)null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "shouldTrackConcreteIndex(context,options,index)@@@91@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "throw new IllegalStateException(\"index state (\" + index.getState() + \"( not supported\")@@@108@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "IndexMetadata indexMetadata@@@86@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "throw dataStreamsNotSupportedException(expression)@@@65@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "indexAbstraction == null@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw aliasesNotSupportedException(expression)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@102@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "IndicesOptions options = context.getOptions()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "index.getState() == IndexMetadata.State.CLOSE@@@92@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@114@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "indexAbstraction.getIndices()@@@91@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "throw infe@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "String expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Context context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final boolean failClosed = options.forbidClosedIndices() && options.ignoreUnavailable() == false@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "aliasOrIndexExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()@@@75@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "String indexExpressions@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
81 [style = filled, label = "return false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "return false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "indexAbstraction == null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return Index.EMPTY_ARRAY@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "failClosed@@@93@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "failNoIndices@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@115@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? !options.allowNoIndices(): !options.ignoreUnavailable()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@118@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.getOptions().ignoreAliases()@@@55@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "addIndex(writeIndex,context)@@@77@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "indexExpressions = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13a1b97@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "addIndex(index,context)@@@103@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "infe = new IndexNotFoundException(expression)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "!options.allowNoIndices()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",expression)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "concreteIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<String> expressions = Arrays.asList(indexExpressions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "indexNames(i++( = indexMetadata.getIndex().getName()@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "options.forbidClosedIndices() == false && addIndex(index,context)@@@97@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Context context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@98@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "throw new IllegalArgumentException(\"no write index is defined for alias (\" + indexAbstraction.getName() + \"(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "throw infe@@@100@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "options.allowNoIndices() == false && concreteIndices.isEmpty()@@@97@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "indexExpressions(0(.equals(Metadata.ALL)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "IndicesOptions options@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "failNoIndices@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "throw new IndexClosedException(index.getIndex())@@@94@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "IndexMetadata index@@@90@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "infe.setResources(\"index_expression\",expression)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "indexExpressions == null || indexExpressions.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final Set<Index> concreteIndices = new HashSet<>(expressions.size())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@99@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "throw infe@@@116@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "concreteIndices.add(index.getIndex())@@@104@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "throw infe@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "indexAbstraction.getIndices()@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "expressions.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "IndexMetadata indexMetadata@@@85@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one indices associated with it (\" + Arrays.toString(indexNames) + \"(, can't execute a single index op\")@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "concreteIndices.add(index.getIndex())@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Metadata metadata = context.getState().metadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "writeIndex == null@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "indexExpressions.length == 1@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "IndexNotFoundException infe@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "addIndex(writeIndex,context)@@@71@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && options.ignoreAliases()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "indexAbstraction.getIndices().size() > 1 && !options.allowAliasesToMultipleIndices()@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expression.equals(Metadata.ALL)@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "index.getState() == IndexMetadata.State.OPEN@@@102@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "indexAbstraction.getIndices()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "return true@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "IndexNotFoundException infe@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Metadata metadata@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "String(( indexNames = new String((((@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "expressions = expressionResolver.resolve(context,expressions)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "concreteIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->6 [style = dotted, label="true"];
32->22 [style = bold, label=""];
68->35 [style = bold, label=""];
6->47 [style = dotted, label="false"];
11->65 [style = dotted, label="true"];
48->51 [style = solid, label="indexExpressions"];
63->20 [style = dotted, label="false"];
64->73 [style = dotted, label="true"];
25->1 [style = bold, label=""];
52->64 [style = bold, label=""];
39->24 [style = dotted, label="true"];
28->21 [style = dotted, label="true"];
47->7 [style = bold, label=""];
11->12 [style = dotted, label="true"];
58->2 [style = dotted, label="true"];
15->68 [style = dotted, label="true"];
55->2 [style = bold, label=""];
63->20 [style = bold, label=""];
36->28 [style = bold, label=""];
10->35 [style = bold, label=""];
64->74 [style = dotted, label="true"];
39->24 [style = bold, label=""];
3->53 [style = dotted, label="true"];
10->53 [style = bold, label=""];
64->53 [style = bold, label=""];
89->87 [style = bold, label=""];
58->62 [style = dotted, label="true"];
80->91 [style = solid, label="indexAbstraction"];
25->35 [style = bold, label=""];
65->14 [style = bold, label=""];
91->82 [style = dotted, label="true"];
0->15 [style = bold, label=""];
16->26 [style = solid, label="context"];
41->28 [style = solid, label="failNoIndices"];
1->46 [style = bold, label=""];
16->15 [style = solid, label="context"];
23->29 [style = bold, label=""];
19->5 [style = solid, label="infe"];
37->53 [style = bold, label=""];
24->64 [style = bold, label=""];
18->49 [style = bold, label=""];
60->37 [style = dotted, label="true"];
28->21 [style = bold, label=""];
23->44 [style = dotted, label="true"];
29->25 [style = solid, label="writeIndex"];
57->78 [style = bold, label=""];
71->64 [style = bold, label=""];
24->42 [style = dotted, label="true"];
70->51 [style = solid, label="indexExpressions"];
49->13 [style = bold, label=""];
2->63 [style = bold, label=""];
26->35 [style = bold, label=""];
78->71 [style = bold, label=""];
29->44 [style = bold, label=""];
58->51 [style = dotted, label="true"];
19->61 [style = bold, label=""];
76->46 [style = bold, label=""];
48->18 [style = bold, label=""];
39->91 [style = dashed, label="0"];
73->76 [style = bold, label=""];
23->29 [style = dotted, label="true"];
53->60 [style = bold, label=""];
53->60 [style = dotted, label="true"];
45->35 [style = bold, label=""];
72->17 [style = dotted, label="true"];
24->46 [style = bold, label=""];
46->59 [style = bold, label=""];
47->56 [style = solid, label="infe"];
44->9 [style = dotted, label="true"];
78->71 [style = dotted, label="true"];
52->35 [style = bold, label=""];
26->64 [style = bold, label=""];
50->62 [style = solid, label="infe"];
26->46 [style = bold, label=""];
20->62 [style = solid, label="infe"];
39->36 [style = dotted, label="false"];
17->26 [style = solid, label="context"];
52->23 [style = bold, label=""];
29->44 [style = solid, label="writeIndex"];
10->64 [style = bold, label=""];
46->5 [style = dotted, label="true"];
90->79 [style = dotted, label="true"];
8->64 [style = bold, label=""];
17->51 [style = solid, label="indexExpressions"];
11->14 [style = dotted, label="true"];
3->11 [style = bold, label=""];
64->74 [style = bold, label=""];
3->26 [style = dotted, label="true"];
1->35 [style = bold, label=""];
23->3 [style = bold, label=""];
63->69 [style = bold, label=""];
71->35 [style = bold, label=""];
2->50 [style = dotted, label="false"];
67->26 [style = bold, label=""];
90->83 [style = dotted, label="true"];
15->35 [style = bold, label=""];
64->35 [style = bold, label=""];
70->30 [style = solid, label="indexExpressions"];
35->39 [style = solid, label="indexAbstraction"];
32->58 [style = dotted, label="true"];
28->35 [style = bold, label=""];
16->10 [style = solid, label="context"];
36->52 [style = dotted, label="false"];
41->30 [style = bold, label=""];
17->88 [style = dashed, label="0"];
11->78 [style = bold, label=""];
37->46 [style = bold, label=""];
78->35 [style = bold, label=""];
3->43 [style = dotted, label="false"];
3->67 [style = bold, label=""];
17->66 [style = solid, label="context"];
32->58 [style = bold, label=""];
31->17 [style = dotted, label="true"];
56->23 [style = bold, label=""];
49->41 [style = bold, label=""];
3->67 [style = dotted, label="true"];
3->34 [style = dotted, label="false"];
46->19 [style = bold, label=""];
45->46 [style = bold, label=""];
48->61 [style = solid, label="indexExpressions"];
58->55 [style = dotted, label="true"];
6->47 [style = bold, label=""];
57->53 [style = bold, label=""];
24->7 [style = dotted, label="true"];
25->64 [style = bold, label=""];
80->91 [style = bold, label=""];
71->78 [style = bold, label=""];
17->78 [style = solid, label="context"];
82->89 [style = bold, label=""];
14->4 [style = bold, label=""];
21->23 [style = bold, label=""];
6->40 [style = dotted, label="true"];
89->87 [style = dotted, label="true"];
84->81 [style = dotted, label="true"];
17->30 [style = solid, label="indexExpressions"];
26->8 [style = dotted, label="true"];
3->78 [style = dotted, label="true"];
60->37 [style = bold, label=""];
62->22 [style = bold, label=""];
11->65 [style = bold, label=""];
63->69 [style = dotted, label="true"];
51->62 [style = bold, label=""];
17->25 [style = solid, label="context"];
5->59 [style = bold, label=""];
0->45 [style = bold, label=""];
2->63 [style = dotted, label="true"];
4->57 [style = bold, label=""];
36->52 [style = bold, label=""];
91->89 [style = bold, label=""];
87->84 [style = bold, label=""];
7->56 [style = bold, label=""];
35->39 [style = bold, label=""];
54->48 [style = dotted, label="true"];
17->61 [style = solid, label="indexExpressions"];
15->53 [style = bold, label=""];
78->64 [style = bold, label=""];
90->85 [style = dotted, label="true"];
26->8 [style = bold, label=""];
45->53 [style = bold, label=""];
11->4 [style = dotted, label="true"];
23->3 [style = dotted, label="false"];
68->53 [style = bold, label=""];
36->28 [style = dotted, label="true"];
90->88 [style = dotted, label="true"];
8->35 [style = bold, label=""];
46->19 [style = dotted, label="true"];
15->68 [style = bold, label=""];
3->77 [style = dotted, label="false"];
13->41 [style = bold, label=""];
48->73 [style = solid, label="indexExpressions"];
11->27 [style = dotted, label="true"];
28->64 [style = bold, label=""];
53->0 [style = dotted, label="false"];
81->86 [style = bold, label=""];
72->70 [style = dotted, label="true"];
20->51 [style = bold, label=""];
10->64 [style = dotted, label="true"];
44->25 [style = bold, label=""];
74->76 [style = solid, label="infe"];
37->35 [style = bold, label=""];
22->35 [style = bold, label=""];
46->61 [style = dotted, label="true"];
44->9 [style = bold, label=""];
23->25 [style = dotted, label="true"];
33->22 [style = bold, label=""];
53->0 [style = bold, label=""];
31->54 [style = bold, label=""];
25->1 [style = dotted, label="true"];
24->42 [style = bold, label=""];
69->62 [style = solid, label="infe"];
89->84 [style = bold, label=""];
16->66 [style = solid, label="context"];
16->25 [style = solid, label="context"];
70->54 [style = solid, label="indexExpressions"];
52->38 [style = dotted, label="true"];
40->56 [style = solid, label="infe"];
68->46 [style = bold, label=""];
61->5 [style = bold, label=""];
24->35 [style = bold, label=""];
24->56 [style = dotted, label="true"];
0->15 [style = dotted, label="true"];
30->66 [style = bold, label=""];
60->10 [style = dotted, label="false"];
58->33 [style = dotted, label="false"];
10->46 [style = bold, label=""];
74->73 [style = bold, label=""];
52->38 [style = bold, label=""];
38->23 [style = bold, label=""];
54->48 [style = bold, label=""];
41->24 [style = solid, label="failNoIndices"];
72->54 [style = bold, label=""];
25->46 [style = bold, label=""];
58->55 [style = bold, label=""];
11->57 [style = dotted, label="true"];
31->16 [style = dotted, label="true"];
69->51 [style = bold, label=""];
64->46 [style = bold, label=""];
84->86 [style = bold, label=""];
30->66 [style = solid, label="expressions"];
85->80 [style = solid, label="expression"];
2->50 [style = bold, label=""];
17->54 [style = solid, label="indexExpressions"];
11->75 [style = dotted, label="true"];
11->53 [style = bold, label=""];
58->33 [style = bold, label=""];
70->73 [style = solid, label="indexExpressions"];
64->76 [style = dotted, label="true"];
8->46 [style = bold, label=""];
28->46 [style = bold, label=""];
40->7 [style = bold, label=""];
90->80 [style = bold, label=""];
54->18 [style = bold, label=""];
42->6 [style = bold, label=""];
3->11 [style = dotted, label="false"];
6->40 [style = bold, label=""];
50->51 [style = bold, label=""];
9->25 [style = bold, label=""];
49->78 [style = solid, label="options"];
4->57 [style = solid, label="indexNames"];
60->10 [style = bold, label=""];
15->46 [style = bold, label=""];
91->82 [style = bold, label=""];
84->81 [style = bold, label=""];
67->26 [style = solid, label="writeIndex"];
48->30 [style = solid, label="indexExpressions"];
13->60 [style = solid, label="failClosed"];
66->32 [style = bold, label=""];
39->36 [style = bold, label=""];
1->64 [style = bold, label=""];
0->45 [style = dotted, label="false"];
}
