digraph {
22 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(1,ImmutableSet.of(\"GobblinYarnTaskRunner-1\"))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testOneJob['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "WorkflowConfig mockWorkflowConfig = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "runnable.setRaiseException(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflowContext(\"workflow1\")).thenReturn(mockWorkflowContext)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflows()).thenReturn(ImmutableMap.of(\"workflow1\",mockWorkflowConfig))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSuppressedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "runnable.setRaiseException(false)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Mockito.when(mockJobDag.getAllNodes()).thenReturn(ImmutableSet.of(\"job1\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "YarnService mockYarnService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TestYarnAutoScalingRunnable runnable = new TestYarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,1)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "JobDag mockJobDag = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Mockito.verify(mockYarnService,times(0)).requestTargetNumberOfContainers(1,ImmutableSet.of(\"worker1\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Mockito.when(mockJobContext.getPartitionSet()).thenReturn(ImmutableSet.of(Integer.valueOf(1),Integer.valueOf(2)))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(2,ImmutableSet.of(\"worker1\"))@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "runnable.setRaiseException(true)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "runnable.run()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Mockito.reset(mockYarnService)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "Mockito.when(mockJobContext.getAssignedParticipant(2)).thenReturn(\"GobblinYarnTaskRunner-1\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testSuppressedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "runnable.run()@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Mockito.when(helixDataAccessor.keyBuilder()).thenReturn(new PropertyKey.Builder(\"cluster\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "TestYarnAutoScalingRunnable runnable = new TestYarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,1,helixDataAccessor)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Mockito.when(mockJobContext.getAssignedParticipant(2)).thenReturn(\"worker1\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Mockito.when(helixDataAccessor.getChildValuesMap(Mockito.any())).thenReturn(ImmutableMap.of(\"GobblinYarnTaskRunner-1\",new HelixProperty(\"\")))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "runnable.run()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "HelixDataAccessor helixDataAccessor = mock()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(1,ImmutableSet.of(\"worker1\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Mockito.when(mockTaskDriver.getJobContext(\"job1\")).thenReturn(mockJobContext)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "WorkflowContext mockWorkflowContext = mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "YarnAutoScalingManager.YarnAutoScalingRunnable runnable = new YarnAutoScalingManager.YarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,10)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TaskDriver mockTaskDriver = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Mockito.when(mockWorkflowContext.getWorkflowState()).thenReturn(TaskState.IN_PROGRESS)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Mockito.when(mockWorkflowConfig.getJobDag()).thenReturn(mockJobDag)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Mockito.verify(mockYarnService,times(0)).requestTargetNumberOfContainers(1,ImmutableSet.of(\"GobblinYarnTaskRunner-1\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "JobContext mockJobContext = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->34 [style = solid, label="mockYarnService"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
11->16 [style = bold, label=""];
5->8 [style = bold, label=""];
33->14 [style = bold, label=""];
4->1 [style = solid, label="mockJobContext"];
31->22 [style = bold, label=""];
15->7 [style = bold, label=""];
0->17 [style = bold, label=""];
11->34 [style = dashed, label="0"];
25->30 [style = bold, label=""];
34->33 [style = bold, label=""];
8->28 [style = solid, label="mockYarnService"];
19->10 [style = bold, label=""];
28->26 [style = bold, label=""];
8->6 [style = bold, label=""];
6->34 [style = solid, label="mockTaskDriver"];
18->0 [style = solid, label="mockJobDag"];
3->17 [style = solid, label="mockWorkflowConfig"];
18->2 [style = bold, label=""];
21->22 [style = dashed, label="0"];
17->19 [style = bold, label=""];
30->29 [style = bold, label=""];
13->1 [style = bold, label=""];
27->15 [style = bold, label=""];
1->11 [style = bold, label=""];
3->18 [style = bold, label=""];
23->28 [style = bold, label=""];
25->27 [style = solid, label="helixDataAccessor"];
29->27 [style = bold, label=""];
13->24 [style = dashed, label="0"];
26->31 [style = bold, label=""];
2->0 [style = bold, label=""];
32->8 [style = bold, label=""];
1->34 [style = bold, label=""];
6->27 [style = solid, label="mockTaskDriver"];
19->12 [style = solid, label="mockWorkflowContext"];
12->4 [style = bold, label=""];
8->11 [style = solid, label="mockYarnService"];
10->12 [style = bold, label=""];
7->23 [style = bold, label=""];
35->8 [style = bold, label=""];
20->23 [style = dashed, label="0"];
7->21 [style = bold, label=""];
16->14 [style = bold, label=""];
8->27 [style = solid, label="mockYarnService"];
24->1 [style = bold, label=""];
6->11 [style = solid, label="mockTaskDriver"];
20->14 [style = dashed, label="0"];
20->15 [style = bold, label=""];
1->25 [style = bold, label=""];
9->24 [style = bold, label=""];
14->20 [style = bold, label=""];
9->13 [style = bold, label=""];
}
