digraph {
11 [style = filled, label = "isReference()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i.hasNext()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Project p@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Iterator i = getNested().iterator()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setChecked(true)@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "dieOnCircularReference['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Project p@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "dieOnCircularReference['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "o instanceof DataType@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "invokeCircularReferenceCheck((DataType)o,stk,p)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Stack stk@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Stack stk@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Iterator i = rc.iterator()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "isChecked()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "dieOnCircularReference['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "pushAndInvokeCircularReferenceCheck((DataType)o,stk,p)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Object o = i.next()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Stack stk@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d13cbastkp@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3->6 [style = solid, label="stk"];
8->10 [style = dotted, label="true"];
11->18 [style = dotted, label="false"];
14->13 [style = solid, label="p"];
11->4 [style = bold, label=""];
0->1 [style = dotted, label="true"];
11->2 [style = dotted, label="true"];
10->2 [style = solid, label="stk"];
10->13 [style = solid, label="stk"];
9->5 [style = dotted, label="true"];
10->6 [style = solid, label="p"];
8->0 [style = bold, label=""];
3->2 [style = solid, label="stk"];
12->6 [style = solid, label="o"];
10->17 [style = dashed, label="0"];
14->2 [style = solid, label="p"];
11->4 [style = dotted, label="false"];
5->13 [style = dotted, label="true"];
6->13 [style = dashed, label="0"];
17->2 [style = solid, label="p"];
11->18 [style = bold, label=""];
19->0 [style = bold, label=""];
5->9 [style = bold, label=""];
16->2 [style = solid, label="stk"];
11->9 [style = dotted, label="false"];
0->11 [style = bold, label=""];
11->7 [style = dotted, label="false"];
17->6 [style = solid, label="p"];
0->1 [style = bold, label=""];
11->2 [style = bold, label=""];
5->13 [style = bold, label=""];
15->10 [style = dotted, label="true"];
1->11 [style = bold, label=""];
6->9 [style = bold, label=""];
16->6 [style = solid, label="stk"];
5->6 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
12->5 [style = bold, label=""];
18->9 [style = bold, label=""];
15->0 [style = bold, label=""];
12->5 [style = solid, label="o"];
4->9 [style = bold, label=""];
10->2 [style = solid, label="p"];
4->18 [style = dashed, label="0"];
8->3 [style = dotted, label="true"];
19->17 [style = dotted, label="true"];
13->9 [style = bold, label=""];
9->12 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
12->13 [style = solid, label="o"];
5->6 [style = bold, label=""];
9->12 [style = bold, label=""];
9->7 [style = bold, label=""];
}
