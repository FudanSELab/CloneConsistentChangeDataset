digraph {
0 [style = filled, label = "localService.acceptIncomingRequests()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<DiscoveryNode> knownNodes = new CopyOnWriteArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rejectedNode.equals(seedNode)@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(strategy.assertNoRunningConnections())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testFilterNodesWithNodePredicate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testConnectFailsIfNoConnectionsOpened['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DiscoveryNode seedNode = seedTransport.getLocalNode()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFilterNodesWithNodePredicate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "DiscoveryNode discoverableNode = closedTransport.getLocalNode()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final IllegalStateException ise = expectThrows(,null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ClusterConnectionManager connectionManager = new ClusterConnectionManager(profile,localService.transport)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "localService.acceptIncomingRequests()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Collections.shuffle(knownNodes,random())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "PlainActionFuture<Void> connectFuture = PlainActionFuture.newFuture()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "connectFuture.actionGet()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(connectionManager.nodeConnected(seedNode))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"Unable to open any connections to remote cluster (cluster-alias(\",ise.getMessage())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(connectionManager.nodeConnected(discoverableNode))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(connectionManager.nodeConnected(seedNode))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(strategy.assertNoRunningConnections())@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DiscoveryNode rejectedNode = randomBoolean()? seedNode: discoverableNode@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(connectionManager.nodeConnected(discoverableNode))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "strategy.connect(connectFuture)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "closedTransport.close()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ClusterConnectionManager connectionManager = new ClusterConnectionManager(profile,localService.transport)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "localService.start()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "knownNodes.add(seedNode)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DiscoveryNode discoverableNode = discoverableTransport.getLocalNode()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "knownNodes.add(discoverableNode)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26->28 [style = solid, label="discoverableNode"];
23->25 [style = bold, label=""];
2->26 [style = bold, label=""];
28->6 [style = bold, label=""];
1->8 [style = bold, label=""];
2->5 [style = solid, label="seedNode"];
9->11 [style = bold, label=""];
22->19 [style = bold, label=""];
10->14 [style = bold, label=""];
2->9 [style = solid, label="seedNode"];
15->13 [style = solid, label="discoverableNode"];
6->21 [style = bold, label=""];
2->12 [style = solid, label="seedNode"];
11->4 [style = bold, label=""];
14->17 [style = bold, label=""];
12->16 [style = bold, label=""];
25->14 [style = bold, label=""];
14->17 [style = solid, label="connectFuture"];
16->19 [style = bold, label=""];
9->4 [style = dotted, label="false"];
4->7 [style = bold, label=""];
15->5 [style = bold, label=""];
19->0 [style = bold, label=""];
9->11 [style = dotted, label="false"];
15->4 [style = solid, label="discoverableNode"];
2->3 [style = solid, label="seedNode"];
2->11 [style = solid, label="seedNode"];
0->10 [style = bold, label=""];
20->8 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
21->22 [style = bold, label=""];
13->7 [style = bold, label=""];
19->23 [style = bold, label=""];
8->16 [style = solid, label="knownNodes"];
9->13 [style = dotted, label="true"];
2->15 [style = bold, label=""];
18->9 [style = bold, label=""];
15->26 [style = dashed, label="0"];
3->13 [style = bold, label=""];
18->14 [style = dashed, label="0"];
9->3 [style = bold, label=""];
15->6 [style = solid, label="discoverableNode"];
26->28 [style = bold, label=""];
23->25 [style = solid, label="connectFuture"];
17->27 [style = bold, label=""];
24->8 [style = bold, label=""];
15->12 [style = solid, label="discoverableNode"];
9->3 [style = dotted, label="true"];
17->18 [style = bold, label=""];
6->12 [style = bold, label=""];
}
