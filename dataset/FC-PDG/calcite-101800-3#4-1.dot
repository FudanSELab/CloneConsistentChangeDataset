digraph {
5 [style = filled, label = "Optionality groupOrder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return new SqlBasicAggFunction(getName(),getSqlIdentifier(),kind,getReturnTypeInference(),getOperandTypeInference(),getOperandTypeChecker(),getFunctionType(),requiresOrder(),requiresOver(),requiresGroupOrder(),distinctOptionality,syntax,allowsNullTreatment,allowsSeparator,percentile)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "boolean allowsSeparator@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "withGroupOrder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "withAllowsSeparator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "return new SqlBasicAggFunction(getName(),getSqlIdentifier(),kind,getReturnTypeInference(),getOperandTypeInference(),getOperandTypeChecker(),getFunctionType(),requiresOrder(),requiresOver(),requiresGroupOrder(),distinctOptionality,syntax,allowsNullTreatment,allowsSeparator)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "return new SqlBasicAggFunction(getName(),getSqlIdentifier(),kind,getReturnTypeInference(),getOperandTypeInference(),getOperandTypeChecker(),getFunctionType(),requiresOrder(),requiresOver(),groupOrder,distinctOptionality,syntax,allowsNullTreatment,allowsSeparator)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "withAllowsSeparator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->4 [style = dashed, label="0"];
0->4 [style = solid, label="allowsSeparator"];
2->0 [style = dotted, label="true"];
1->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
5->7 [style = solid, label="groupOrder"];
0->5 [style = dashed, label="0"];
0->1 [style = solid, label="allowsSeparator"];
3->4 [style = bold, label=""];
2->1 [style = bold, label=""];
6->5 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
}
