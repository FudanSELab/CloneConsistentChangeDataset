digraph {
17 [style = filled, label = "buffer.put(new byte(((()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "buffer.clear()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String node1 = \"invalid1\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buffer.rewind()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good1\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1,ChannelState.READY.state())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "selector.send(new NetworkSend(node1,buffer))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "buffer.rewind()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testSaslHandshakeRequestWithUnsupportedVersion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "buffer.put(new byte(((()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SecurityProtocol securityProtocol = SecurityProtocol.SASL_PLAINTEXT@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sendHandshakeRequestReceiveResponse(node1,(short)1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node2,ChannelState.READY.state())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node1,ChannelState.READY.state())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "selector.send(request.toSend(node1,header))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SaslHandshakeRequest request = new SaslHandshakeRequest(\"PLAIN\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "String node2 = \"invalid2\"@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "selector.close()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RequestHeader header = new RequestHeader(ApiKeys.SASL_HANDSHAKE,Short.MAX_VALUE,\"someclient\",2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testPacketSizeTooBig['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "configureMechanisms(\"PLAIN\",Arrays.asList(\"PLAIN\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SaslHandshakeRequest request = buildSaslHandshakeRequest(\"PLAIN\",ApiKeys.SASL_HANDSHAKE.latestVersion())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "selector.send(new NetworkSend(node2,buffer))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "createClientConnection(SecurityProtocol.PLAINTEXT,node1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "selector.close()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "createAndCheckClientConnection(securityProtocol,\"good2\")@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "server = createEchoServer(securityProtocol)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "selector.close()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "buffer.putInt(Integer.MAX_VALUE)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testSaslHandshakeRequestWithUnsupportedVersion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19->33 [style = bold, label=""];
23->31 [style = bold, label=""];
9->20 [style = dashed, label="0"];
14->24 [style = bold, label=""];
14->25 [style = solid, label="node2"];
24->19 [style = bold, label=""];
4->30 [style = solid, label="securityProtocol"];
9->0 [style = bold, label=""];
16->27 [style = bold, label=""];
0->2 [style = solid, label="header"];
15->22 [style = solid, label="buffer"];
4->8 [style = solid, label="securityProtocol"];
2->1 [style = bold, label=""];
14->24 [style = solid, label="node2"];
33->17 [style = bold, label=""];
26->29 [style = bold, label=""];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
18->26 [style = bold, label=""];
10->3 [style = bold, label=""];
15->27 [style = solid, label="buffer"];
7->8 [style = bold, label=""];
15->18 [style = bold, label=""];
22->23 [style = bold, label=""];
4->7 [style = bold, label=""];
4->32 [style = solid, label="securityProtocol"];
6->20 [style = bold, label=""];
5->6 [style = solid, label="node1"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
4->3 [style = solid, label="securityProtocol"];
6->13 [style = bold, label=""];
21->32 [style = bold, label=""];
31->30 [style = bold, label=""];
5->22 [style = solid, label="node1"];
9->13 [style = dashed, label="0"];
30->14 [style = bold, label=""];
29->22 [style = bold, label=""];
6->9 [style = bold, label=""];
5->23 [style = solid, label="node1"];
1->10 [style = bold, label=""];
20->15 [style = bold, label=""];
5->2 [style = solid, label="node1"];
14->27 [style = solid, label="node2"];
27->25 [style = bold, label=""];
5->1 [style = solid, label="node1"];
17->16 [style = bold, label=""];
25->21 [style = bold, label=""];
28->4 [style = bold, label=""];
13->0 [style = bold, label=""];
5->20 [style = solid, label="node1"];
}
