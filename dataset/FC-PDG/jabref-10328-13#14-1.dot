digraph {
4 [style = filled, label = "assertEquals(Optional.of(\"2014\"),db.getEntryByCitationKey(\"1\").get().getField(StandardField.YEAR))@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ParserResult result = OpenDatabase.loadDatabase(bibHeader,importFormatPreferences,fileMonitor)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ParserResult result = OpenDatabase.loadDatabase(bibHeaderAndSignature,importFormatPreferences,fileMonitor)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(1,db.getEntryCount())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "entriesAreParsedHeaderAndSignature['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "entriesAreParsedHeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ParserResult result = OpenDatabase.loadDatabase(bibHeader,importFormatPreferences,timestampPreferences,fileMonitor)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "BibDatabase db = result.getDatabase()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "entriesAreParsedHeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
6->3 [style = bold, label=""];
5->6 [style = bold, label=""];
1->7 [style = dashed, label="0"];
0->4 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->1 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
}
