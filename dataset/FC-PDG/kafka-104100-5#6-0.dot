digraph {
28 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "TopicPartition tp2 = new TopicPartition(topic,2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "subscriptions.put(consumer1,buildSubscriptionWithGeneration(topics(topic),c1partitions0,1))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "TopicPartition tp3 = new TopicPartition(topic,3)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp1,tp4)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<TopicPartition> c1partitions0 = partitions(tp0,tp2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "partitionsPerTopic.put(topic,3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "TopicPartition tp1 = new TopicPartition(topic,1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<TopicPartition> c3partitions0 = partitions(tp3,tp4,tp5)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c3partitions0,Optional.of(2)))))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(c1partitions0.containsAll(c1partitions))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<TopicPartition> c2partitions = assignment.get(consumer2)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(c3partitions0.containsAll(c3partitions))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String consumer1 = \"consumer1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),serializeTopicPartitionAssignmentToOldSchema(c2partitions0)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TopicPartition tp0 = new TopicPartition(topic,0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TopicPartition tp5 = new TopicPartition(topic,5)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c2partitions0,Optional.of(1)))))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithGeneration(topics(topic),c2partitions0,1))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(c1partitions0,Optional.of(1)))))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "List<TopicPartition> c3partitions = assignment.get(consumer3)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertTrue(c1partitions.size() == 1 && c2partitions.size() == 1 && c3partitions.size() == 1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "subscriptions.put(consumer3,buildSubscriptionWithGeneration(topics(topic),c3partitions0,2))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp0,tp2,tp3)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testAssignmentWithConflictingPreviousGenerations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(assignor.isSticky())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(c1partitions.size() == 2 && c2partitions.size() == 2 && c3partitions.size() == 2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String consumer3 = \"consumer3\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(assignor.isSticky())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "List<TopicPartition> c1partitions = assignment.get(consumer1)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testSchemaBackwardCompatibility['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "List<TopicPartition> c2partitions0 = partitions(tp1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "String consumer2 = \"consumer2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TopicPartition tp4 = new TopicPartition(topic,4)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(c2partitions0.containsAll(c2partitions))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->5 [style = solid, label="c1partitions0"];
21->38 [style = solid, label="consumer1"];
40->39 [style = solid, label="c2partitions0"];
46->5 [style = bold, label=""];
28->34 [style = dashed, label="0"];
9->41 [style = solid, label="partitionsPerTopic"];
6->19 [style = solid, label="consumer3"];
15->33 [style = solid, label="c3partitions0"];
25->6 [style = bold, label=""];
40->38 [style = bold, label=""];
25->32 [style = solid, label="consumer2"];
38->39 [style = bold, label=""];
25->14 [style = solid, label="consumer2"];
26->22 [style = bold, label=""];
16->4 [style = solid, label="tp1"];
29->18 [style = bold, label=""];
46->20 [style = solid, label="c1partitions"];
9->26 [style = bold, label=""];
23->28 [style = bold, label=""];
2->23 [style = bold, label=""];
8->20 [style = bold, label=""];
16->40 [style = solid, label="tp1"];
24->21 [style = bold, label=""];
25->13 [style = solid, label="consumer2"];
12->32 [style = solid, label="c2partitions0"];
29->44 [style = bold, label=""];
1->44 [style = solid, label="tp0"];
16->29 [style = bold, label=""];
37->21 [style = bold, label=""];
1->4 [style = solid, label="tp0"];
34->31 [style = bold, label=""];
47->43 [style = bold, label=""];
25->39 [style = solid, label="consumer2"];
20->3 [style = bold, label=""];
21->25 [style = bold, label=""];
31->11 [style = bold, label=""];
15->35 [style = bold, label=""];
44->38 [style = solid, label="c1partitions0"];
4->35 [style = solid, label="c1partitions0"];
1->16 [style = bold, label=""];
7->2 [style = bold, label=""];
30->7 [style = bold, label=""];
18->12 [style = solid, label="tp3"];
39->41 [style = bold, label=""];
41->46 [style = bold, label=""];
20->31 [style = solid, label="assignment"];
42->22 [style = bold, label=""];
21->46 [style = solid, label="consumer1"];
20->34 [style = solid, label="assignment"];
22->14 [style = bold, label=""];
25->5 [style = solid, label="consumer2"];
10->4 [style = solid, label="tp4"];
9->42 [style = bold, label=""];
15->8 [style = solid, label="c3partitions0"];
18->15 [style = solid, label="tp3"];
28->31 [style = bold, label=""];
43->20 [style = bold, label=""];
35->32 [style = bold, label=""];
20->28 [style = solid, label="assignment"];
32->33 [style = bold, label=""];
10->15 [style = solid, label="tp4"];
13->39 [style = dashed, label="0"];
18->44 [style = dashed, label="0"];
12->13 [style = solid, label="c2partitions0"];
19->45 [style = bold, label=""];
10->40 [style = dashed, label="0"];
18->10 [style = bold, label=""];
0->1 [style = bold, label=""];
5->13 [style = bold, label=""];
41->19 [style = solid, label="assignment"];
6->0 [style = solid, label="consumer3"];
4->12 [style = bold, label=""];
3->17 [style = bold, label=""];
29->44 [style = solid, label="tp2"];
21->22 [style = solid, label="consumer1"];
21->3 [style = solid, label="consumer1"];
17->2 [style = solid, label="c2partitions"];
21->5 [style = solid, label="consumer1"];
6->47 [style = solid, label="consumer3"];
27->15 [style = solid, label="tp5"];
33->20 [style = bold, label=""];
41->17 [style = solid, label="assignment"];
10->27 [style = bold, label=""];
12->15 [style = bold, label=""];
3->7 [style = solid, label="c1partitions"];
44->40 [style = bold, label=""];
25->17 [style = solid, label="consumer2"];
1->12 [style = solid, label="tp0"];
9->20 [style = solid, label="partitionsPerTopic"];
19->23 [style = solid, label="c3partitions"];
30->43 [style = dashed, label="0"];
29->12 [style = solid, label="tp2"];
17->19 [style = bold, label=""];
15->5 [style = bold, label=""];
6->8 [style = solid, label="consumer3"];
5->3 [style = solid, label="c2partitions"];
5->47 [style = bold, label=""];
36->21 [style = bold, label=""];
27->4 [style = bold, label=""];
21->35 [style = solid, label="consumer1"];
14->0 [style = bold, label=""];
23->34 [style = bold, label=""];
9->34 [style = solid, label="partitionsPerTopic"];
6->33 [style = solid, label="consumer3"];
26->42 [style = dashed, label="0"];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
19->30 [style = bold, label=""];
}
