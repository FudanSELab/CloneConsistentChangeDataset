digraph {
0 [style = filled, label = "GeometryParser geometryParser = new GeometryParser(orientation.get().value().getAsBoolean(),coerce.get().value(),ignoreZValue.get().value())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "build['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "multiFieldsBuilder.hasMultiFields()@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ContentPath contentPath@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "GeometryParser geometryParser = new GeometryParser(orientation.get().value().getAsBoolean(),coerce.get().value(),ignoreZValue.get().value())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DEPRECATION_LOGGER.deprecate(DeprecationCategory.MAPPINGS,\"geo_shape_multifields\",\"Adding multifields to (geo_shape( mappers has no effect and will be forbidden in future\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ShapeFieldType ft = new ShapeFieldType(buildFullName(contentPath),indexed.get(),orientation.get().value(),parser,meta.get())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "build['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "build['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "ContentPath contentPath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "GeoShapeParser geoShapeParser = new GeoShapeParser(geometryParser)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return new GeoShapeFieldMapper(name,ft,multiFieldsBuilder.build(this,contentPath),copyTo.build(),new GeoShapeIndexer(orientation.get().value().getAsBoolean(),buildFullName(contentPath)),geoShapeParser,this)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return new ShapeFieldMapper(name,ft,multiFieldsBuilder.build(this,contentPath),copyTo.build(),new ShapeIndexer(ft.name()),parser,this)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Parser<Geometry> parser = new GeoShapeParser(geometryParser)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GeoShapeFieldType ft = new GeoShapeFieldType(buildFullName(contentPath),indexed.get(),orientation.get().value(),geoShapeParser,meta.get())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->10 [style = solid, label="contentPath"];
13->10 [style = bold, label=""];
0->4 [style = solid, label="geometryParser"];
9->11 [style = bold, label=""];
4->2 [style = solid, label="geoShapeParser"];
2->1 [style = bold, label=""];
3->2 [style = solid, label="contentPath"];
3->1 [style = solid, label="contentPath"];
9->11 [style = solid, label="geometryParser"];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->3 [style = dotted, label="true"];
4->1 [style = solid, label="geoShapeParser"];
11->13 [style = solid, label="parser"];
12->9 [style = bold, label=""];
8->0 [style = bold, label=""];
12->14 [style = dotted, label="true"];
14->13 [style = solid, label="contentPath"];
5->0 [style = bold, label=""];
13->10 [style = solid, label="ft"];
0->4 [style = bold, label=""];
2->1 [style = solid, label="ft"];
6->8 [style = dotted, label="true"];
7->3 [style = dotted, label="true"];
2->13 [style = dashed, label="0"];
11->13 [style = bold, label=""];
6->8 [style = bold, label=""];
7->6 [style = bold, label=""];
11->10 [style = solid, label="parser"];
0->9 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
}
