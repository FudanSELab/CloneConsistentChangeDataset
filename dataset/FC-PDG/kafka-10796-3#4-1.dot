digraph {
10 [style = filled, label = "assertThat(segment3.compareTo(segment2),equalTo(-1))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldCompareSegmentIdOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final TimestampedSegment segment3 = new TimestampedSegment(\"c\",\"A\",0L)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "final KeyValueSegment segment1 = new KeyValueSegment(\"a\",\"C\",50L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(segment2.compareTo(segment3),equalTo(1))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(segment1.compareTo(segment1),equalTo(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(segment1.compareTo(segment2),equalTo(-1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final KeyValueSegment segment3 = new KeyValueSegment(\"c\",\"A\",0L)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldCompareSegmentIdOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(segment2.compareTo(segment1),equalTo(1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(segment3.compareTo(segment1),equalTo(-1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final TimestampedSegment segment3 = new TimestampedSegment(\"c\",\"A\",0L,metricsRecorder)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final KeyValueSegment segment2 = new KeyValueSegment(\"b\",\"B\",100L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "shouldCompareSegmentIdOnly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(segment1.compareTo(segment3),equalTo(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final TimestampedSegment segment2 = new TimestampedSegment(\"b\",\"B\",100L)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final TimestampedSegment segment2 = new TimestampedSegment(\"b\",\"B\",100L,metricsRecorder)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "final TimestampedSegment segment1 = new TimestampedSegment(\"a\",\"C\",50L)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final TimestampedSegment segment1 = new TimestampedSegment(\"a\",\"C\",50L,metricsRecorder)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->3 [style = solid, label="segment1"];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
12->1 [style = solid, label="segment1"];
1->4 [style = bold, label=""];
15->10 [style = solid, label="segment2"];
16->1 [style = solid, label="segment1"];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
12->3 [style = solid, label="segment1"];
11->9 [style = solid, label="segment3"];
16->3 [style = solid, label="segment1"];
15->4 [style = solid, label="segment2"];
9->10 [style = bold, label=""];
6->1 [style = solid, label="segment1"];
5->18 [style = dashed, label="0"];
7->8 [style = bold, label=""];
15->18 [style = bold, label=""];
14->10 [style = solid, label="segment2"];
6->2 [style = bold, label=""];
6->12 [style = dashed, label="0"];
5->9 [style = solid, label="segment3"];
2->15 [style = dashed, label="0"];
5->1 [style = bold, label=""];
2->4 [style = solid, label="segment2"];
12->8 [style = solid, label="segment1"];
6->16 [style = dashed, label="0"];
13->12 [style = bold, label=""];
2->10 [style = solid, label="segment2"];
2->14 [style = dashed, label="0"];
18->1 [style = bold, label=""];
3->7 [style = bold, label=""];
5->11 [style = dashed, label="0"];
18->7 [style = solid, label="segment3"];
14->4 [style = solid, label="segment2"];
16->8 [style = solid, label="segment1"];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
11->7 [style = solid, label="segment3"];
6->8 [style = solid, label="segment1"];
5->7 [style = solid, label="segment3"];
14->11 [style = bold, label=""];
17->16 [style = bold, label=""];
2->5 [style = bold, label=""];
18->9 [style = solid, label="segment3"];
}
