digraph {
6 [style = filled, label = "LOG.info(\"Needs to determine intervals or numShards, beginning %s phase.\",PartialDimensionCardinalityTask.TYPE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "throw new ISE(\"forceGuaranteedRollup is set but partitionsSpec (%s( is not a single_dim or hash partition spec.\",ingestionSchema.getTuningConfig().getPartitionsSpec())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TaskStatus taskStatus@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final ParallelIndexIngestionSpec segmentCreateIngestionSpec = ingestionSchemaToUse@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "state.isFailure()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HashedPartitionsSpec partitionsSpec = (HashedPartitionsSpec)ingestionSchema.getTuningConfig().getPartitionsSpec()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "state = runNextPhase(mergeRunner)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "return taskStatus@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ParallelIndexTaskRunner<PartialDimensionCardinalityTask,DimensionCardinalityReport> cardinalityRunner = createRunner(toolbox,null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "intervalToNumShards = determineNumShardsFromCardinalityReport(cardinalityRunner.getReports().values(),effectiveMaxRowsPerSegment)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String errMsg = StringUtils.format(TASK_PHASE_FAILURE_MSG,indexingRunner.getName())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "intervalToNumShards = null@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "intervalToNumShards = CollectionUtils.mapValues(mergeCardinalityReports(cardinalityRunner.getReports().values()),null)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Map<Interval,Integer> intervalToNumShards@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final boolean needsInputSampling = partitionsSpec.getNumShards() == null || ingestionSchemaToUse.getDataSchema().getGranularitySpec().inputIntervals().isEmpty()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LOG.warn(msg)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<Pair<Interval,Integer>,List<GenericPartitionLocation>> partitionToLocations = groupGenericPartitionLocationsPerPartition(indexingRunner.getReports())@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "needsInputSampling@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "TaskStatus taskStatus@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "return TaskStatus.failure(getId(),errMsg)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "taskStatus = TaskStatus.failure(getId(),errMsg)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "state = runNextPhase(indexingRunner)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "String msg = \"No valid rows for hash partitioning.\" + \" All rows may have invalid timestamps or have been filtered out.\"@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "partitionsSpec.getNumShards() == null@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return TaskStatus.failure(getId(),errMsg)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String errMsg = StringUtils.format(TASK_PHASE_FAILURE_MSG,mergeRunner.getName())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT: partitionsSpec.getMaxRowsPerSegment()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "cardinalityRunner.getReports().isEmpty()@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return taskStatus@@@63@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "taskStatus = TaskStatus.failure(getId(),errorMessage)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "TaskToolbox toolbox@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!(ingestionSchema.getTuningConfig().getPartitionsSpec() instanceof HashedPartitionsSpec)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TaskState state@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "runHashPartitionMultiPhaseParallel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final ParallelIndexTaskRunner<PartialGenericSegmentMergeTask,PushedSegmentsReport> mergeRunner = createRunner(toolbox,null)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "publishSegments(toolbox,runner.getReports())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "ingestionSchemaToUse = rewriteIngestionSpecWithIntervalsIfMissing(ingestionSchemaToUse,intervalToNumShards.keySet())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ParallelIndexIngestionSpec ingestionSchemaToUse = ingestionSchema@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "LOG.info(\"effective maxRowsPerSegment is: \" + effectiveMaxRowsPerSegment)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "state = runNextPhase(cardinalityRunner)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final ParallelIndexTaskRunner<SinglePhaseSubTask,PushedSegmentsReport> runner = createRunner(toolbox,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String errMsg = StringUtils.format(TASK_PHASE_FAILURE_MSG,cardinalityRunner.getName())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "taskStatus = TaskStatus.success(getId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "final List<PartialSegmentMergeIOConfig> ioConfigs = createGenericMergeIOConfigs(ingestionSchema.getTuningConfig().getTotalNumMergeTasks(),partitionToLocations)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "Preconditions.checkState(state.isFailure(),\"Unrecognized state after task is complete(%s(\",state)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "runHashPartitionMultiPhaseParallel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "Preconditions.checkState(state.isFailure(),\"Unrecognized state after task is complete(%s(\",state)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "waitForSegmentAvailability(runner.getReports())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final List<PartialGenericSegmentMergeIOConfig> ioConfigs = createGenericMergeIOConfigs(ingestionSchema.getTuningConfig().getTotalNumMergeTasks(),partitionToLocations)@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final ParallelIndexIngestionSpec segmentMergeIngestionSpec = ingestionSchemaToUse@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ParallelIndexTaskRunner<PartialHashSegmentGenerateTask,GeneratedPartitionsReport<GenericPartitionStat>> indexingRunner = createRunner(toolbox,null)@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "final TaskState state = runNextPhase(runner)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "waitForSegmentAvailability(mergeRunner.getReports())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final String errorMessage = StringUtils.format(TASK_PHASE_FAILURE_MSG,runner.getName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "ParallelIndexTaskRunner<PartialHashSegmentGenerateTask,GeneratedPartitionsReport> indexingRunner = createRunner(toolbox,null)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "state.isSuccess()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "publishSegments(toolbox,mergeRunner.getReports())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "taskStatus = TaskStatus.success(getId())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return TaskStatus.success(getId(),msg)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "state.isFailure()@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "runSinglePhaseParallel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@52@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "state.isSuccess()@@@50@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Map<Pair<Interval,Integer>,List<PartitionLocation>> partitionToLocations = groupGenericPartitionLocationsPerPartition(indexingRunner.getReports())@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "TaskToolbox toolbox@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40->27 [style = solid, label="ingestionSchemaToUse"];
21->30 [style = solid, label="errMsg"];
25->33 [style = bold, label=""];
20->7 [style = solid, label="taskStatus"];
39->49 [style = dashed, label="0"];
36->37 [style = solid, label="cardinalityRunner"];
17->50 [style = dashed, label="0"];
38->61 [style = dashed, label="0"];
30->52 [style = bold, label=""];
65->57 [style = bold, label=""];
67->60 [style = bold, label=""];
5->14 [style = solid, label="ingestionSchemaToUse"];
21->30 [style = bold, label=""];
53->54 [style = bold, label=""];
9->7 [style = bold, label=""];
1->20 [style = dotted, label="false"];
51->47 [style = dotted, label="true"];
30->18 [style = bold, label=""];
59->61 [style = bold, label=""];
47->35 [style = solid, label="toolbox"];
64->63 [style = dotted, label="false"];
3->18 [style = bold, label=""];
41->36 [style = dotted, label="true"];
19->5 [style = bold, label=""];
8->1 [style = bold, label=""];
49->11 [style = solid, label="indexingRunner"];
41->40 [style = dotted, label="true"];
5->0 [style = bold, label=""];
62->53 [style = bold, label=""];
20->42 [style = solid, label="taskStatus"];
63->56 [style = solid, label="taskStatus"];
10->66 [style = dashed, label="0"];
2->60 [style = dashed, label="0"];
60->63 [style = bold, label=""];
13->45 [style = bold, label=""];
18->52 [style = dashed, label="0"];
26->16 [style = dotted, label="true"];
26->28 [style = bold, label=""];
17->27 [style = bold, label=""];
28->13 [style = dotted, label="true"];
60->63 [style = solid, label="errorMessage"];
35->12 [style = bold, label=""];
64->65 [style = dotted, label="true"];
22->25 [style = bold, label=""];
2->20 [style = bold, label=""];
59->61 [style = dotted, label="true"];
0->43 [style = dotted, label="true"];
47->36 [style = solid, label="toolbox"];
41->28 [style = dotted, label="true"];
41->4 [style = bold, label=""];
16->34 [style = bold, label=""];
22->33 [style = dotted, label="true"];
3->30 [style = dotted, label="true"];
13->44 [style = solid, label="effectiveMaxRowsPerSegment"];
41->6 [style = bold, label=""];
41->4 [style = dotted, label="false"];
65->56 [style = solid, label="taskStatus"];
39->11 [style = solid, label="indexingRunner"];
46->41 [style = bold, label=""];
54->58 [style = bold, label=""];
19->53 [style = dashed, label="0"];
47->49 [style = solid, label="toolbox"];
28->44 [style = dotted, label="true"];
2->20 [style = solid, label="errMsg"];
32->47 [style = dotted, label="true"];
48->16 [style = bold, label=""];
64->66 [style = bold, label=""];
35->12 [style = solid, label="mergeRunner"];
48->34 [style = solid, label="msg"];
7->42 [style = bold, label=""];
29->38 [style = bold, label=""];
36->37 [style = bold, label=""];
20->7 [style = bold, label=""];
47->39 [style = solid, label="toolbox"];
14->39 [style = bold, label=""];
26->48 [style = bold, label=""];
0->31 [style = bold, label=""];
22->26 [style = bold, label=""];
4->14 [style = bold, label=""];
1->10 [style = dotted, label="true"];
9->42 [style = solid, label="taskStatus"];
62->55 [style = dotted, label="true"];
50->27 [style = bold, label=""];
47->55 [style = dashed, label="0"];
61->65 [style = bold, label=""];
64->67 [style = dotted, label="false"];
0->43 [style = bold, label=""];
22->25 [style = dotted, label="true"];
59->65 [style = bold, label=""];
38->9 [style = bold, label=""];
63->57 [style = bold, label=""];
55->66 [style = solid, label="toolbox"];
32->19 [style = bold, label=""];
41->37 [style = dotted, label="true"];
45->44 [style = bold, label=""];
28->45 [style = dotted, label="true"];
27->35 [style = bold, label=""];
1->24 [style = dotted, label="false"];
33->26 [style = bold, label=""];
47->10 [style = solid, label="toolbox"];
34->28 [style = bold, label=""];
37->22 [style = bold, label=""];
64->66 [style = dotted, label="true"];
11->3 [style = bold, label=""];
53->54 [style = solid, label="runner"];
12->8 [style = bold, label=""];
3->21 [style = dotted, label="true"];
1->9 [style = dotted, label="true"];
40->14 [style = bold, label=""];
15->40 [style = bold, label=""];
3->21 [style = bold, label=""];
52->50 [style = bold, label=""];
64->67 [style = bold, label=""];
49->11 [style = bold, label=""];
40->14 [style = solid, label="ingestionSchemaToUse"];
25->33 [style = solid, label="errMsg"];
9->7 [style = solid, label="taskStatus"];
46->41 [style = solid, label="needsInputSampling"];
58->64 [style = bold, label=""];
43->31 [style = bold, label=""];
54->67 [style = solid, label="state"];
65->57 [style = solid, label="taskStatus"];
41->22 [style = dotted, label="true"];
31->23 [style = bold, label=""];
18->17 [style = solid, label="partitionToLocations"];
28->15 [style = bold, label=""];
3->52 [style = bold, label=""];
20->63 [style = dashed, label="0"];
24->2 [style = bold, label=""];
14->49 [style = bold, label=""];
41->6 [style = dotted, label="true"];
26->34 [style = dotted, label="true"];
26->48 [style = dotted, label="true"];
29->9 [style = bold, label=""];
64->60 [style = dotted, label="false"];
44->40 [style = bold, label=""];
18->17 [style = bold, label=""];
23->46 [style = bold, label=""];
28->13 [style = bold, label=""];
29->38 [style = dotted, label="true"];
39->11 [style = bold, label=""];
6->36 [style = bold, label=""];
1->2 [style = dotted, label="false"];
5->27 [style = solid, label="ingestionSchemaToUse"];
52->50 [style = solid, label="partitionToLocations"];
57->56 [style = bold, label=""];
41->26 [style = dotted, label="true"];
13->45 [style = solid, label="effectiveMaxRowsPerSegment"];
1->29 [style = dotted, label="true"];
12->24 [style = solid, label="state"];
10->29 [style = bold, label=""];
64->59 [style = dotted, label="true"];
1->24 [style = bold, label=""];
28->15 [style = dotted, label="false"];
63->57 [style = solid, label="taskStatus"];
48->16 [style = solid, label="msg"];
5->40 [style = solid, label="ingestionSchemaToUse"];
55->53 [style = solid, label="toolbox"];
1->10 [style = bold, label=""];
66->59 [style = bold, label=""];
51->19 [style = bold, label=""];
}
