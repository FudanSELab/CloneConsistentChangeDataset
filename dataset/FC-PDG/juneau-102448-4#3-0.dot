digraph {
31 [style = filled, label = "Method m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return \"/\"@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "return n2@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return \"/\"@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "String n = m.getName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String def@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return '/' + java.beans.Introspector.decapitalize(n.substring(t.length()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Method m@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "detectMethod@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String n2 = n.substring(2).toUpperCase()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@15e68b1@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "isOneOf(n2,\"GET\",\"PUT\",\"POST\",\"DELETE\",\"OPTIONS\",\"HEAD\",\"CONNECT\",\"TRACE\",\"PATCH\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "n.startsWith(method) && (n.length() == method.length() || Character.isUpperCase(n.charAt(method.length())))@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String t@@@9@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "n.equalsIgnoreCase(method) || n.equals(\"do\") || n.equals(\"_\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "detectHttpPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "return '/' + java.beans.Introspector.decapitalize(n.substring(method.length()))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "method == null@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "return '/' + n@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "return t.toUpperCase()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "isOneOf(n2,\"GET\",\"PUT\",\"POST\",\"DELETE\",\"OPTIONS\",\"HEAD\",\"CONNECT\",\"TRACE\",\"PATCH\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "isOneOf(n2,\"GET\",\"PUT\",\"POST\",\"DELETE\",\"OPTIONS\",\"HEAD\",\"CONNECT\",\"TRACE\",\"PATCH\")@@@7@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boolean detectMethod@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "n.startsWith(\"do\") && n.length() > 2@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "n.startsWith(t) && (n.length() == t.length() || Character.isUpperCase(n.charAt(t.length())))@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "detectHttpPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean detectMethod@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@15e6973@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String t@@@9@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "n.startsWith(t) && (n.length() == t.length() || Character.isUpperCase(n.charAt(t.length())))@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "detectHttpMethod['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return def@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Method m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "String method@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
28->33 [style = bold, label=""];
13->6 [style = dotted, label="true"];
4->10 [style = bold, label=""];
13->25 [style = bold, label=""];
21->10 [style = bold, label=""];
24->28 [style = bold, label=""];
1->3 [style = solid, label="n2"];
7->1 [style = bold, label=""];
23->19 [style = solid, label="method"];
10->15 [style = bold, label=""];
15->7 [style = bold, label=""];
13->27 [style = dotted, label="true"];
13->28 [style = dotted, label="true"];
28->33 [style = dotted, label="true"];
16->6 [style = bold, label=""];
19->20 [style = bold, label=""];
33->28 [style = bold, label=""];
4->0 [style = dotted, label="true"];
21->23 [style = dotted, label="true"];
1->3 [style = bold, label=""];
18->12 [style = bold, label=""];
4->8 [style = dotted, label="true"];
3->6 [style = bold, label=""];
24->30 [style = dotted, label="true"];
13->7 [style = dotted, label="true"];
3->9 [style = dotted, label="true"];
7->9 [style = dotted, label="true"];
15->19 [style = bold, label=""];
15->7 [style = dotted, label="true"];
7->24 [style = dotted, label="true"];
13->15 [style = dashed, label="0"];
32->10 [style = bold, label=""];
23->20 [style = solid, label="method"];
9->16 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
24->30 [style = bold, label=""];
15->17 [style = dotted, label="true"];
3->9 [style = bold, label=""];
20->18 [style = bold, label=""];
13->2 [style = dotted, label="true"];
6->5 [style = bold, label=""];
26->13 [style = solid, label="detectMethod"];
13->12 [style = bold, label=""];
30->28 [style = bold, label=""];
5->6 [style = bold, label=""];
23->15 [style = solid, label="method"];
1->30 [style = solid, label="n2"];
1->24 [style = solid, label="n2"];
10->13 [style = bold, label=""];
5->12 [style = bold, label=""];
22->20 [style = bold, label=""];
13->7 [style = bold, label=""];
29->25 [style = solid, label="def"];
7->28 [style = bold, label=""];
1->24 [style = bold, label=""];
33->25 [style = bold, label=""];
7->3 [style = dotted, label="true"];
7->6 [style = bold, label=""];
0->13 [style = solid, label="detectMethod"];
20->12 [style = bold, label=""];
15->11 [style = dotted, label="true"];
15->6 [style = dotted, label="true"];
19->22 [style = dotted, label="true"];
15->19 [style = dotted, label="false"];
28->25 [style = bold, label=""];
20->18 [style = dotted, label="true"];
13->11 [style = dotted, label="true"];
15->20 [style = dotted, label="false"];
21->14 [style = dotted, label="true"];
32->26 [style = dotted, label="true"];
32->29 [style = dotted, label="true"];
8->31 [style = dashed, label="0"];
9->16 [style = dotted, label="true"];
9->30 [style = dashed, label="0"];
1->9 [style = solid, label="n2"];
7->1 [style = dotted, label="true"];
10->12 [style = solid, label="n"];
19->22 [style = bold, label=""];
32->31 [style = dotted, label="true"];
6->5 [style = dotted, label="true"];
8->23 [style = dashed, label="0"];
6->12 [style = bold, label=""];
}
