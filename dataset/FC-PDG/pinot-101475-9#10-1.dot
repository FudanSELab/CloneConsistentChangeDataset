digraph {
50 [style = filled, label = "params = new Request.Params().withInstanceId(S_3).withStreamPartitionMsgOffset(_s3Offset.toString()).withSegmentName(_segmentNameStr)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final int startTimeSecs = 5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "segmentCompletionMgr._seconds += 4@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.CATCH_UP)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s3Offset.toString()).withSegmentName(segmentNameStr)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "Assert.assertTrue(fsmMap.containsKey(segmentNameStr))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertTrue(fsmMap.containsKey(segmentNameStr))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testCommitterFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "params = new Request.Params().withInstanceId(S_2).withStreamPartitionMsgOffset(_s2Offset.toString()).withSegmentName(_segmentNameStr)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "SegmentCompletionProtocol.Response response@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Request.Params params@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "verifyOffset(response,_s2Offset)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "_segmentCompletionMgr._seconds += 1@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testDeadServers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertFalse(fsmMap.containsKey(segmentNameStr))@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "segmentCompletionMgr._seconds = startTimeSecs@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "params = new Request.Params().withInstanceId(S_2).withStreamPartitionMsgOffset(_s2Offset.toString()).withSegmentName(_segmentNameStr)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "params = new Request.Params().withInstanceId(S_1).withStreamPartitionMsgOffset(_s1Offset.toString()).withSegmentName(_segmentNameStr)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "segmentCompletionMgr._seconds += SegmentCompletionProtocol.getMaxSegmentCommitTimeMs() * SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "params = new Request.Params().withInstanceId(S_2).withStreamPartitionMsgOffset(_s2Offset.toString()).withSegmentName(_segmentNameStr)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "testDeadServers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "params = new Request.Params().withInstanceId(s3).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertTrue(_fsmMap.containsKey(_segmentNameStr))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "params = new Request.Params().withInstanceId(S_2).withStreamPartitionMsgOffset(_s2Offset.toString()).withSegmentName(_segmentNameStr)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "_segmentCompletionMgr._seconds = startTimeSecs@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verifyOffset(response,s2Offset)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "_segmentCompletionMgr._seconds += 1@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "_segmentCompletionMgr._seconds += 3600@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "segmentCompletionMgr._seconds += 1@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "_segmentCompletionMgr._seconds += 4@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "segmentCompletionMgr._seconds += 5@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Assert.assertFalse(_fsmMap.containsKey(_segmentNameStr))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "params = new Request.Params().withInstanceId(S_2).withStreamPartitionMsgOffset(_s2Offset.toString()).withSegmentName(_segmentNameStr)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.COMMIT)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "params = new Request.Params().withInstanceId(s1).withStreamPartitionMsgOffset(s1Offset.toString()).withSegmentName(segmentNameStr)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "segmentCompletionMgr._seconds += 3600@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "params = new Request.Params().withInstanceId(s2).withStreamPartitionMsgOffset(s2Offset.toString()).withSegmentName(segmentNameStr)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "segmentCompletionMgr._seconds += SegmentCompletionProtocol.MAX_HOLD_TIME_MS / 1000@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "_segmentCompletionMgr._seconds += 1@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Assert.assertEquals(response.getStatus(),SegmentCompletionProtocol.ControllerResponseStatus.HOLD)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "response = segmentCompletionMgr.segmentConsumed(params)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "response = _segmentCompletionMgr.segmentConsumed(params)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58->28 [style = bold, label=""];
2->42 [style = dashed, label="0"];
24->16 [style = solid, label="params"];
25->56 [style = dashed, label="0"];
2->26 [style = bold, label=""];
19->60 [style = bold, label=""];
31->56 [style = bold, label=""];
71->62 [style = solid, label="params"];
64->74 [style = solid, label="params"];
13->50 [style = dashed, label="0"];
71->62 [style = bold, label=""];
21->8 [style = bold, label=""];
48->35 [style = bold, label=""];
38->31 [style = bold, label=""];
22->34 [style = dashed, label="0"];
33->49 [style = dashed, label="0"];
0->15 [style = bold, label=""];
18->39 [style = dashed, label="0"];
26->14 [style = solid, label="params"];
21->8 [style = solid, label="params"];
73->61 [style = bold, label=""];
27->17 [style = bold, label=""];
1->12 [style = bold, label=""];
35->45 [style = bold, label=""];
43->29 [style = bold, label=""];
70->31 [style = bold, label=""];
32->18 [style = bold, label=""];
67->58 [style = bold, label=""];
56->53 [style = bold, label=""];
39->50 [style = bold, label=""];
17->20 [style = bold, label=""];
68->72 [style = bold, label=""];
5->51 [style = dashed, label="0"];
65->12 [style = bold, label=""];
16->29 [style = bold, label=""];
60->64 [style = bold, label=""];
63->70 [style = solid, label="params"];
26->14 [style = bold, label=""];
64->74 [style = bold, label=""];
23->35 [style = dashed, label="0"];
61->71 [style = bold, label=""];
23->3 [style = bold, label=""];
75->69 [style = bold, label=""];
29->73 [style = bold, label=""];
59->29 [style = solid, label="params"];
20->48 [style = dashed, label="0"];
16->43 [style = dashed, label="0"];
49->32 [style = bold, label=""];
25->24 [style = bold, label=""];
4->55 [style = dashed, label="0"];
20->23 [style = bold, label=""];
7->52 [style = dashed, label="0"];
7->6 [style = bold, label=""];
51->42 [style = bold, label=""];
34->38 [style = bold, label=""];
53->43 [style = bold, label=""];
58->28 [style = solid, label="params"];
11->30 [style = bold, label=""];
29->11 [style = bold, label=""];
17->20 [style = solid, label="startTimeSecs"];
44->57 [style = bold, label=""];
4->10 [style = bold, label=""];
31->25 [style = bold, label=""];
46->49 [style = solid, label="params"];
22->58 [style = dashed, label="0"];
29->73 [style = dashed, label="0"];
28->31 [style = bold, label=""];
6->51 [style = bold, label=""];
22->28 [style = solid, label="params"];
57->19 [style = bold, label=""];
8->57 [style = dashed, label="0"];
63->70 [style = bold, label=""];
62->19 [style = bold, label=""];
22->28 [style = bold, label=""];
17->48 [style = solid, label="startTimeSecs"];
52->51 [style = solid, label="response"];
54->0 [style = bold, label=""];
15->22 [style = bold, label=""];
28->75 [style = bold, label=""];
3->9 [style = bold, label=""];
10->46 [style = dashed, label="0"];
6->5 [style = bold, label=""];
30->21 [style = bold, label=""];
15->67 [style = dashed, label="0"];
41->40 [style = bold, label=""];
3->45 [style = dashed, label="0"];
34->38 [style = solid, label="params"];
52->6 [style = bold, label=""];
74->68 [style = bold, label=""];
13->7 [style = solid, label="params"];
14->54 [style = dashed, label="0"];
33->32 [style = bold, label=""];
32->39 [style = bold, label=""];
10->33 [style = bold, label=""];
12->27 [style = bold, label=""];
50->52 [style = solid, label="params"];
45->9 [style = bold, label=""];
28->38 [style = dashed, label="0"];
40->44 [style = bold, label=""];
30->40 [style = dashed, label="0"];
0->37 [style = bold, label=""];
44->57 [style = solid, label="params"];
21->44 [style = dashed, label="0"];
8->19 [style = bold, label=""];
15->37 [style = dashed, label="0"];
29->41 [style = bold, label=""];
9->4 [style = bold, label=""];
46->49 [style = bold, label=""];
47->12 [style = bold, label=""];
42->36 [style = bold, label=""];
23->3 [style = solid, label="params"];
0->67 [style = bold, label=""];
7->5 [style = solid, label="response"];
50->52 [style = bold, label=""];
53->43 [style = solid, label="params"];
9->55 [style = bold, label=""];
24->16 [style = bold, label=""];
5->2 [style = bold, label=""];
24->53 [style = dashed, label="0"];
59->29 [style = bold, label=""];
55->46 [style = bold, label=""];
14->0 [style = bold, label=""];
13->7 [style = bold, label=""];
37->34 [style = bold, label=""];
35->45 [style = solid, label="params"];
36->54 [style = solid, label="params"];
17->48 [style = bold, label=""];
18->13 [style = bold, label=""];
11->41 [style = dashed, label="0"];
10->33 [style = solid, label="params"];
26->36 [style = dashed, label="0"];
36->54 [style = bold, label=""];
66->59 [style = bold, label=""];
69->63 [style = bold, label=""];
25->66 [style = bold, label=""];
}
