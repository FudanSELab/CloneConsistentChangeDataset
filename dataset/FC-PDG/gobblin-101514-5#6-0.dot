digraph {
25 [style = filled, label = "Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(),0L)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "compareJobStatus(js,mjs)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(flowStatus.getMessage(),messageJoiner.join(js1.getMessage(),js2.getMessage()))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "FlowStatus flowStatus = _client.getFlowStatus(flowId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testGetCompleted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "i < jobStatuses.size()@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testGetCompleted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "org.apache.gobblin.service.monitoring.JobStatus mjs = jobStatusList.get(i)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "org.apache.gobblin.service.monitoring.JobStatus fs1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\").jobGroup(JobStatusRetriever.NA_KEY).jobName(JobStatusRetriever.NA_KEY).endTime(7000L).eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).build()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(flowStatus.getId().getFlowName(),\"flow1\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1,js2,fs1)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "org.apache.gobblin.service.monitoring.JobStatus js2 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job2\").startTime(2000L).endTime(6000L).eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 2\").processedCount(200).jobExecutionId(2).lowWatermark(\"watermark:2\").highWatermark(\"watermark:3\").build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(jobStatusList.size(),jobStatuses.size() + 1)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L).eventName(ExecutionStatus.COMPLETE.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "_listOfJobStatusLists.add(jobStatusList)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(),6000L)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(flowStatus.getId().getFlowGroup(),\"fgroup1\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<org.apache.gobblin.service.monitoring.JobStatus> jobStatusList = Lists.newArrayList(js1,js2)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(jobStatusList.size(),jobStatuses.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "org.apache.gobblin.service.monitoring.JobStatus js1 = org.apache.gobblin.service.monitoring.JobStatus.builder().flowGroup(\"fgroup1\").flowName(\"flow1\").jobGroup(\"jgroup1\").jobName(\"job1\").startTime(1000L).endTime(5000L).eventName(ExecutionStatus.RUNNING.name()).flowExecutionId(0).message(\"Test message 1\").processedCount(100).jobExecutionId(1).lowWatermark(\"watermark:1\").highWatermark(\"watermark:2\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testGetRunning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(flowStatus.getMessage(),messageJoiner.join(js1.getMessage(),js2.getMessage()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionStartTime().longValue(),1000L)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JobStatus js = jobStatuses.get(i)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FlowStatusId flowId = new FlowStatusId().setFlowGroup(\"fgroup1\").setFlowName(\"flow1\").setFlowExecutionId(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "compareJobStatus(js,mjs)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "JobStatusArray jobStatuses = flowStatus.getJobStatuses()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(flowStatus.getExecutionStatistics().getExecutionEndTime().longValue(),7000L)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Assert.assertEquals(flowStatus.getExecutionStatus(),ExecutionStatus.RUNNING)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "_listOfJobStatusLists = Lists.newArrayList()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
8->28 [style = dashed, label="0"];
13->6 [style = dotted, label="true"];
26->27 [style = solid, label="fs1"];
21->9 [style = solid, label="js1"];
21->3 [style = bold, label=""];
11->4 [style = bold, label=""];
24->13 [style = bold, label=""];
19->10 [style = bold, label=""];
29->3 [style = bold, label=""];
17->6 [style = solid, label="i"];
17->14 [style = dotted, label="true"];
27->7 [style = bold, label=""];
17->13 [style = solid, label="i"];
14->5 [style = solid, label="js"];
21->27 [style = solid, label="js1"];
8->0 [style = bold, label=""];
3->26 [style = bold, label=""];
4->25 [style = bold, label=""];
14->23 [style = solid, label="mjs"];
13->17 [style = bold, label=""];
1->12 [style = bold, label=""];
10->6 [style = solid, label="i"];
13->6 [style = bold, label=""];
17->23 [style = dotted, label="true"];
9->15 [style = bold, label=""];
3->9 [style = solid, label="js2"];
10->13 [style = solid, label="i"];
13->5 [style = solid, label="i"];
3->27 [style = solid, label="js2"];
19->24 [style = dashed, label="0"];
17->14 [style = bold, label=""];
4->8 [style = bold, label=""];
6->17 [style = bold, label=""];
9->26 [style = dashed, label="0"];
19->24 [style = bold, label=""];
7->20 [style = bold, label=""];
15->7 [style = bold, label=""];
26->27 [style = bold, label=""];
13->17 [style = dotted, label="true"];
0->1 [style = bold, label=""];
4->25 [style = dashed, label="0"];
13->14 [style = solid, label="i"];
5->17 [style = bold, label=""];
25->28 [style = bold, label=""];
23->6 [style = bold, label=""];
6->14 [style = bold, label=""];
28->1 [style = bold, label=""];
6->5 [style = solid, label="mjs"];
13->6 [style = solid, label="i"];
10->13 [style = bold, label=""];
6->5 [style = solid, label="i"];
5->23 [style = bold, label=""];
6->14 [style = solid, label="i"];
17->13 [style = bold, label=""];
3->9 [style = bold, label=""];
30->12 [style = bold, label=""];
12->19 [style = bold, label=""];
5->23 [style = solid, label="js"];
2->16 [style = solid, label="flowId"];
20->2 [style = solid, label="flowId"];
29->9 [style = solid, label="js1"];
10->14 [style = solid, label="i"];
17->6 [style = dotted, label="true"];
18->21 [style = bold, label=""];
1->30 [style = dashed, label="0"];
2->16 [style = bold, label=""];
0->30 [style = bold, label=""];
10->17 [style = solid, label="i"];
22->21 [style = bold, label=""];
20->2 [style = bold, label=""];
31->29 [style = bold, label=""];
17->14 [style = solid, label="i"];
6->17 [style = solid, label="i"];
13->5 [style = dotted, label="true"];
17->5 [style = dotted, label="true"];
16->11 [style = bold, label=""];
13->14 [style = dotted, label="true"];
21->29 [style = dashed, label="0"];
13->17 [style = solid, label="i"];
9->7 [style = solid, label="jobStatusList"];
27->20 [style = solid, label="jobStatusList"];
}
