digraph {
9 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableHashJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 1@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final StringBuilder buf = new StringBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkJoinNWay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,6))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "buf.append(\"select * from \"depts\" as d0\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int i = 0@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "checkJoinNWay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "buf.append(\"on d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "SqlNode parse = planner.parse(buf.toString())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "buf.append(\"join \"depts\" as d\").append(i)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "i < n@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int n@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "checkHeuristic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "String expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "buf.append(\"select *\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "String sql@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int i = 1@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "buf.append(i == 0? \"from \": \", \").append(\"\"depts\" as d\").append(i)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "buf.append(i == 1? \"where\": \"and\").append(\" d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "i < n@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableHashJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RelNode convert = planner.rel(validate).project()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RelTraitSet traitSet = convert.getTraitSet().replace(EnumerableConvention.INSTANCE)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32->35 [style = bold, label=""];
12->5 [style = bold, label=""];
0->13 [style = bold, label=""];
18->30 [style = dashed, label="0"];
4->15 [style = bold, label=""];
35->33 [style = solid, label="traitSet"];
20->27 [style = bold, label=""];
8->1 [style = bold, label=""];
11->6 [style = solid, label="i"];
15->11 [style = bold, label=""];
24->21 [style = bold, label=""];
4->15 [style = solid, label="i"];
15->0 [style = bold, label=""];
25->19 [style = bold, label=""];
31->34 [style = dotted, label="true"];
7->6 [style = solid, label="i"];
14->16 [style = bold, label=""];
13->0 [style = solid, label="i"];
14->2 [style = dotted, label="true"];
28->36 [style = bold, label=""];
27->22 [style = dotted, label="true"];
20->21 [style = solid, label="i"];
19->1 [style = solid, label="convert"];
16->26 [style = bold, label=""];
31->29 [style = bold, label=""];
2->27 [style = solid, label="n"];
27->24 [style = dotted, label="true"];
27->21 [style = dotted, label="true"];
37->30 [style = solid, label="expected"];
27->22 [style = bold, label=""];
23->2 [style = dotted, label="true"];
15->13 [style = dotted, label="true"];
8->1 [style = solid, label="traitSet"];
34->28 [style = solid, label="sql"];
13->15 [style = solid, label="i"];
2->37 [style = dashed, label="0"];
7->6 [style = bold, label=""];
33->30 [style = bold, label=""];
6->7 [style = dotted, label="true"];
4->0 [style = solid, label="i"];
13->15 [style = bold, label=""];
3->32 [style = dashed, label="0"];
6->7 [style = bold, label=""];
26->20 [style = bold, label=""];
6->17 [style = bold, label=""];
1->9 [style = solid, label="parse"];
21->27 [style = bold, label=""];
5->18 [style = bold, label=""];
3->12 [style = bold, label=""];
32->33 [style = solid, label="convert"];
15->0 [style = dotted, label="true"];
1->9 [style = bold, label=""];
7->25 [style = solid, label="parse"];
28->36 [style = solid, label="parse"];
21->27 [style = solid, label="i"];
36->32 [style = solid, label="validate"];
9->3 [style = bold, label=""];
2->6 [style = solid, label="n"];
21->22 [style = solid, label="i"];
23->16 [style = bold, label=""];
31->37 [style = dotted, label="true"];
16->10 [style = bold, label=""];
33->30 [style = solid, label="transform"];
20->22 [style = solid, label="i"];
11->6 [style = bold, label=""];
35->33 [style = bold, label=""];
36->32 [style = bold, label=""];
11->7 [style = solid, label="i"];
1->9 [style = solid, label="transform"];
27->6 [style = bold, label=""];
6->17 [style = dotted, label="true"];
4->13 [style = solid, label="i"];
19->8 [style = bold, label=""];
3->5 [style = solid, label="convert"];
29->28 [style = bold, label=""];
2->15 [style = solid, label="n"];
20->27 [style = solid, label="i"];
17->7 [style = bold, label=""];
5->18 [style = solid, label="transform"];
10->26 [style = dashed, label="0"];
6->8 [style = bold, label=""];
10->4 [style = bold, label=""];
7->25 [style = bold, label=""];
22->24 [style = bold, label=""];
12->5 [style = solid, label="traitSet"];
}
