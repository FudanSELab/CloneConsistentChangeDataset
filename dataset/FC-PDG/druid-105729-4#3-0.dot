digraph {
0 [style = filled, label = "getExtractor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return new ComplexMetricExtractor<HyperLogLogCollector>(){@Override public Class<HyperLogLogCollector> extractedClass(){return }@Override public HyperLogLogCollector extractValue(InputRow inputRow,String metricName){Object rawValue = inputRow.getRaw(metricName)if (rawValue instanceof HyperLogLogCollector) {return (HyperLogLogCollector)rawValue}{HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector()List<String> dimValues = inputRow.getDimension(metricName)if (dimValues == null) {return collector}for (String dimensionValue : dimValues){collector.add(hyperLogLogHash.hash(dimensionValue))}return collector}}}@@@3@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "getExtractor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "getExtractor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return new ComplexMetricExtractor(){@Override public Class<HyperLogLogCollector> extractedClass(){return }@Override public HyperLogLogCollector extractValue(InputRow inputRow,String metricName){Object rawValue = inputRow.getRaw(metricName)if (rawValue instanceof HyperLogLogCollector) {return (HyperLogLogCollector)rawValue}{HyperLogLogCollector collector = HyperLogLogCollector.makeLatestCollector()List<String> dimValues = inputRow.getDimension(metricName)if (dimValues == null) {return collector}for (String dimensionValue : dimValues){collector.add(hashFn.hashBytes(StringUtils.toUtf8(dimensionValue)).asBytes())}return collector}}}@@@3@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->2 [style = dashed, label="0"];
4->1 [style = bold, label=""];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
}
