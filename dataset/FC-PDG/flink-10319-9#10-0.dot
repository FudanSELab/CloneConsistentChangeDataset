digraph {
22 [style = filled, label = "validateSink(tableOptions,keyEncodingFormat,valueEncodingFormat,schema)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StartupMode earliest = StartupMode.EARLIEST@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this,context)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createDynamicTableSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Properties properties = getKafkaProperties(context.getCatalogTable().getOptions())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "createDynamicTableSink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Integer parallelism = tableOptions.get(FactoryUtil.SINK_PARALLELISM)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "EncodingFormat<SerializationSchema<RowData>> keyEncodingFormat = helper.discoverEncodingFormat(,KEY_FORMAT)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "helper.validateExcept(PROPERTIES_PREFIX)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "final String keyPrefix = tableOptions.getOptional(KEY_FIELDS_PREFIX).orElse(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "SinkBufferFlushMode flushMode = new SinkBufferFlushMode(batchSize,batchInterval.toMillis())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return new KafkaDynamicSource(schema.toPhysicalRowDataType(),keyDecodingFormat,new DecodingFormatWrapper(valueDecodingFormat),keyValueProjections.f0,keyValueProjections.f1,keyPrefix,getSourceTopics(tableOptions),getSourceTopicPattern(tableOptions),properties,earliest,Collections.emptyMap(),0,true)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Tuple2<int((,int((> keyValueProjections = createKeyValueProjections(context.getCatalogTable())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EncodingFormat<SerializationSchema<RowData>> valueEncodingFormat = helper.discoverEncodingFormat(,VALUE_FORMAT)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return new KafkaDynamicSink(schema.toPhysicalRowDataType(),schema.toPhysicalRowDataType(),keyEncodingFormat,new EncodingFormatWrapper(valueEncodingFormat),keyValueProjections.f0,keyValueProjections.f1,keyPrefix,tableOptions.get(TOPIC).get(0),properties,null,KafkaSinkSemantic.AT_LEAST_ONCE,true,flushMode,parallelism)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "FactoryUtil.TableFactoryHelper helper = FactoryUtil.createTableFactoryHelper(this,autoCompleteSchemaRegistrySubject(context))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DecodingFormat<DeserializationSchema<RowData>> valueDecodingFormat = helper.discoverDecodingFormat(,VALUE_FORMAT)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "validateSource(tableOptions,keyDecodingFormat,valueDecodingFormat,schema)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int batchSize = tableOptions.get(SINK_BUFFER_FLUSH_MAX_ROWS)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "helper.validateExcept(KafkaOptions.PROPERTIES_PREFIX)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ReadableConfig tableOptions = helper.getOptions()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DecodingFormat<DeserializationSchema<RowData>> keyDecodingFormat = helper.discoverDecodingFormat(,KEY_FORMAT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return new KafkaDynamicSource(schema.toPhysicalRowDataType(),keyDecodingFormat,new DecodingFormatWrapper(valueDecodingFormat),keyValueProjections.f0,keyValueProjections.f1,keyPrefix,KafkaOptions.getSourceTopics(tableOptions),KafkaOptions.getSourceTopicPattern(tableOptions),properties,earliest,Collections.emptyMap(),0,true)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final ReadableConfig tableOptions = helper.getOptions()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Context context@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String keyPrefix = tableOptions.getOptional(KEY_FIELDS_PREFIX).orElse(null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Properties properties = getKafkaProperties(context.getCatalogTable().getOptions())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "createDynamicTableSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Duration batchInterval = tableOptions.get(SINK_BUFFER_FLUSH_INTERVAL)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TableSchema schema = context.getCatalogTable().getSchema()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->16 [style = solid, label="keyDecodingFormat"];
13->10 [style = bold, label=""];
24->21 [style = solid, label="context"];
27->18 [style = bold, label=""];
12->2 [style = solid, label="tableOptions"];
10->16 [style = solid, label="keyPrefix"];
27->20 [style = solid, label="keyEncodingFormat"];
29->20 [style = solid, label="flushMode"];
12->16 [style = solid, label="tableOptions"];
1->8 [style = bold, label=""];
10->2 [style = solid, label="keyPrefix"];
18->20 [style = solid, label="valueEncodingFormat"];
7->11 [style = solid, label="context"];
3->2 [style = solid, label="valueDecodingFormat"];
0->6 [style = bold, label=""];
3->18 [style = dashed, label="0"];
3->14 [style = bold, label=""];
30->26 [style = bold, label=""];
12->17 [style = dashed, label="0"];
9->27 [style = dashed, label="0"];
25->24 [style = dotted, label="true"];
12->8 [style = solid, label="tableOptions"];
11->12 [style = bold, label=""];
0->26 [style = dashed, label="0"];
13->30 [style = bold, label=""];
3->16 [style = solid, label="valueDecodingFormat"];
19->29 [style = solid, label="batchSize"];
6->2 [style = solid, label="earliest"];
12->9 [style = bold, label=""];
18->22 [style = solid, label="valueEncodingFormat"];
15->7 [style = dotted, label="true"];
1->8 [style = solid, label="schema"];
3->4 [style = bold, label=""];
6->16 [style = solid, label="earliest"];
14->1 [style = bold, label=""];
17->22 [style = solid, label="tableOptions"];
6->2 [style = bold, label=""];
1->22 [style = bold, label=""];
23->29 [style = bold, label=""];
8->22 [style = dashed, label="0"];
29->20 [style = bold, label=""];
10->30 [style = dashed, label="0"];
15->11 [style = bold, label=""];
18->4 [style = bold, label=""];
28->20 [style = solid, label="parallelism"];
7->24 [style = dashed, label="0"];
6->16 [style = bold, label=""];
3->8 [style = solid, label="valueDecodingFormat"];
5->7 [style = dotted, label="true"];
9->2 [style = solid, label="keyDecodingFormat"];
19->23 [style = bold, label=""];
2->16 [style = dashed, label="0"];
10->0 [style = bold, label=""];
28->19 [style = bold, label=""];
9->3 [style = bold, label=""];
0->2 [style = solid, label="properties"];
0->16 [style = solid, label="properties"];
4->14 [style = dashed, label="0"];
4->1 [style = bold, label=""];
5->11 [style = bold, label=""];
26->28 [style = bold, label=""];
17->27 [style = bold, label=""];
9->8 [style = solid, label="keyDecodingFormat"];
1->22 [style = solid, label="schema"];
21->17 [style = bold, label=""];
27->22 [style = solid, label="keyEncodingFormat"];
30->20 [style = solid, label="keyPrefix"];
22->13 [style = bold, label=""];
25->21 [style = bold, label=""];
8->13 [style = bold, label=""];
26->20 [style = solid, label="properties"];
11->21 [style = dashed, label="0"];
}
