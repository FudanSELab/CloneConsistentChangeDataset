digraph {
46 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(2).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file3P1C2,file4P1C4)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCleanWithReplaceCommits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String p1 = \"2020/01/02\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFour = runCleaner(config)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Map<String,String> partitionAndFileId002 = testTable.forReplaceCommit(\"00000000000002\").getFileIdsWithBaseFilesInPartitions(p0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(0,hoodieCleanStatsTwo.size(),\"Must not scan any partitions and clean any files\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p1,file1P1C0,file3P1C2)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "testKeepLatestVersionsWithPendingCompactions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testTable.addInflightCommit(\"00000000000001\").withBaseFilesInPartition(p0,file1P0C0).withBaseFilesInPartition(p1,file1P1C0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Pair<HoodieRequestedReplaceMetadata,HoodieReplaceCommitMetadata> replaceMetadata = generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "String file1P0C0 = UUID.randomUUID().toString()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFive = runCleaner(config,2)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HoodieCommitMetadata commitMetadata = generateCommitMetadata(Collections.unmodifiableMap(new HashMap<String,List<String>>(){}))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String p0 = \"2020/01/01\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String file4P0C3 = partitionAndFileId004.get(p0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file2P0C1,file4P0C3)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Map<String,String> partitionAndFileId004 = testTable.forReplaceCommit(\"00000000000004\").getFileIdsWithBaseFilesInPartitions(p0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String file3P1C2 = partitionAndFileId003.get(p1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,hoodieCleanStatsOne.size(),\"Must not scan any partitions and clean any files\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "boolean retryFailure@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertFalse(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@61@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "String file4P1C4 = partitionAndFileId005.get(p1)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,String> partitionAndFileId003 = testTable.forReplaceCommit(\"00000000000003\").getFileIdsWithBaseFilesInPartitions(p1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String file1P1C0 = UUID.randomUUID().toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testCleanWithReplaceCommits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testPendingCompactions(config,36,9,retryFailure)@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "String file2P0C1 = partitionAndFileId002.get(p0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "Map<String,String> partitionAndFileId005 = testTable.forReplaceCommit(\"00000000000005\").getFileIdsWithBaseFilesInPartitions(p1)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "metaClient.getActiveTimeline().saveAsComplete(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMMIT_ACTION,\"00000000000001\"),Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41->32 [style = solid, label="p0"];
41->49 [style = solid, label="p0"];
43->62 [style = solid, label="file4P0C3"];
23->22 [style = solid, label="config"];
13->1 [style = solid, label="file3P1C2"];
41->16 [style = solid, label="p0"];
20->10 [style = solid, label="p1"];
62->54 [style = bold, label=""];
20->5 [style = solid, label="p1"];
21->50 [style = solid, label="file3P1C2"];
17->9 [style = bold, label=""];
23->3 [style = solid, label="config"];
21->58 [style = bold, label=""];
40->34 [style = solid, label="file1P0C0"];
20->35 [style = solid, label="p1"];
59->57 [style = bold, label=""];
50->56 [style = bold, label=""];
13->18 [style = solid, label="file3P1C2"];
20->1 [style = solid, label="p1"];
0->17 [style = solid, label="file1P1C0"];
23->47 [style = solid, label="config"];
23->6 [style = solid, label="config"];
44->32 [style = solid, label="file2P0C1"];
5->28 [style = bold, label=""];
13->11 [style = solid, label="file3P1C2"];
43->46 [style = solid, label="file4P0C3"];
41->20 [style = bold, label=""];
45->24 [style = bold, label=""];
2->61 [style = bold, label=""];
44->61 [style = solid, label="file2P0C1"];
52->60 [style = bold, label=""];
28->11 [style = solid, label="file4P1C4"];
38->49 [style = bold, label=""];
41->15 [style = solid, label="p0"];
41->29 [style = solid, label="p0"];
60->6 [style = bold, label=""];
35->27 [style = solid, label="file4P0C3"];
39->38 [style = bold, label=""];
41->30 [style = solid, label="p0"];
18->46 [style = bold, label=""];
20->28 [style = solid, label="p1"];
23->19 [style = solid, label="config"];
0->11 [style = solid, label="file1P1C0"];
41->62 [style = solid, label="p0"];
41->28 [style = solid, label="p0"];
20->30 [style = solid, label="p1"];
41->35 [style = solid, label="p0"];
41->46 [style = solid, label="p0"];
63->64 [style = dotted, label="true"];
23->15 [style = solid, label="config"];
48->41 [style = bold, label=""];
23->37 [style = solid, label="config"];
15->34 [style = bold, label=""];
55->59 [style = bold, label=""];
51->23 [style = bold, label=""];
0->17 [style = bold, label=""];
8->18 [style = bold, label=""];
36->4 [style = bold, label=""];
40->0 [style = bold, label=""];
37->29 [style = bold, label=""];
11->37 [style = bold, label=""];
43->2 [style = solid, label="file4P0C3"];
65->66 [style = bold, label=""];
19->2 [style = bold, label=""];
13->12 [style = solid, label="file3P1C2"];
35->32 [style = solid, label="file4P0C3"];
21->55 [style = solid, label="file3P1C2"];
23->48 [style = bold, label=""];
29->50 [style = solid, label="file4P1C4"];
44->62 [style = solid, label="file2P0C1"];
61->55 [style = bold, label=""];
20->25 [style = solid, label="p1"];
40->24 [style = solid, label="file1P0C0"];
41->59 [style = solid, label="p0"];
20->7 [style = solid, label="p1"];
21->22 [style = bold, label=""];
43->27 [style = bold, label=""];
0->7 [style = solid, label="file1P1C0"];
40->28 [style = solid, label="file1P0C0"];
23->18 [style = solid, label="config"];
40->59 [style = solid, label="file1P0C0"];
24->7 [style = bold, label=""];
4->47 [style = bold, label=""];
32->62 [style = dashed, label="0"];
27->8 [style = bold, label=""];
20->57 [style = solid, label="p1"];
20->16 [style = solid, label="p1"];
41->43 [style = solid, label="p0"];
40->39 [style = solid, label="file1P0C0"];
21->16 [style = solid, label="file3P1C2"];
41->50 [style = solid, label="p0"];
41->7 [style = solid, label="p0"];
63->65 [style = bold, label=""];
44->26 [style = solid, label="file2P0C1"];
47->42 [style = bold, label=""];
21->5 [style = solid, label="file3P1C2"];
40->19 [style = solid, label="file1P0C0"];
44->30 [style = solid, label="file2P0C1"];
26->3 [style = bold, label=""];
49->44 [style = bold, label=""];
42->39 [style = bold, label=""];
41->1 [style = solid, label="p0"];
35->32 [style = bold, label=""];
3->6 [style = bold, label=""];
33->12 [style = bold, label=""];
25->16 [style = bold, label=""];
41->61 [style = solid, label="p0"];
41->26 [style = solid, label="p0"];
41->33 [style = solid, label="p0"];
20->29 [style = solid, label="p1"];
0->57 [style = solid, label="file1P1C0"];
46->30 [style = bold, label=""];
58->53 [style = bold, label=""];
41->44 [style = solid, label="p0"];
20->13 [style = solid, label="p1"];
14->23 [style = bold, label=""];
10->13 [style = bold, label=""];
20->17 [style = solid, label="p1"];
30->5 [style = bold, label=""];
29->50 [style = bold, label=""];
40->26 [style = solid, label="file1P0C0"];
44->33 [style = solid, label="file2P0C1"];
41->45 [style = solid, label="p0"];
0->25 [style = solid, label="file1P1C0"];
20->18 [style = solid, label="p1"];
20->55 [style = solid, label="p1"];
1->25 [style = bold, label=""];
20->2 [style = solid, label="p1"];
41->52 [style = solid, label="p0"];
35->29 [style = solid, label="file4P0C3"];
20->12 [style = solid, label="p1"];
0->2 [style = solid, label="file1P1C0"];
44->52 [style = solid, label="file2P0C1"];
23->43 [style = solid, label="config"];
9->36 [style = bold, label=""];
44->45 [style = solid, label="file2P0C1"];
43->62 [style = bold, label=""];
21->58 [style = solid, label="file3P1C2"];
65->66 [style = solid, label="config"];
40->46 [style = solid, label="file1P0C0"];
0->30 [style = solid, label="file1P1C0"];
0->35 [style = solid, label="file1P1C0"];
7->10 [style = bold, label=""];
20->11 [style = solid, label="p1"];
34->1 [style = bold, label=""];
41->8 [style = solid, label="p0"];
21->58 [style = dashed, label="0"];
28->11 [style = bold, label=""];
11->50 [style = dashed, label="0"];
22->31 [style = bold, label=""];
41->19 [style = solid, label="p0"];
32->43 [style = bold, label=""];
13->21 [style = solid, label="file3P1C2"];
31->15 [style = bold, label=""];
41->2 [style = solid, label="p0"];
40->25 [style = solid, label="file1P0C0"];
20->58 [style = solid, label="p1"];
23->65 [style = dashed, label="0"];
41->24 [style = solid, label="p0"];
20->40 [style = bold, label=""];
29->33 [style = bold, label=""];
44->8 [style = solid, label="file2P0C1"];
54->18 [style = bold, label=""];
41->27 [style = solid, label="p0"];
0->58 [style = solid, label="file1P1C0"];
44->26 [style = bold, label=""];
0->38 [style = solid, label="file1P1C0"];
44->24 [style = solid, label="file2P0C1"];
0->21 [style = solid, label="file1P1C0"];
64->66 [style = solid, label="retryFailure"];
40->7 [style = solid, label="file1P0C0"];
41->39 [style = solid, label="p0"];
44->52 [style = bold, label=""];
56->19 [style = bold, label=""];
0->10 [style = solid, label="file1P1C0"];
53->15 [style = bold, label=""];
40->52 [style = solid, label="file1P0C0"];
26->52 [style = dashed, label="0"];
44->1 [style = solid, label="file2P0C1"];
16->35 [style = bold, label=""];
12->19 [style = bold, label=""];
6->45 [style = bold, label=""];
13->21 [style = bold, label=""];
20->21 [style = solid, label="p1"];
44->15 [style = solid, label="file2P0C1"];
20->37 [style = solid, label="p1"];
41->25 [style = solid, label="p0"];
41->34 [style = solid, label="p0"];
20->38 [style = solid, label="p1"];
}
