digraph {
4 [style = filled, label = "this.writer = writer.appendBlock(block)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "logWriter.appendBlock(dataBlock)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "logWriter.close()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Writer logWriter = HoodieLogFormat.newWriterBuilder().onParentPath(parquetFilePath.getParent()).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(dataFile.getFileId()).overBaseCommit(dataFile.getCommitTime()).withFs(fileSystem).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "writeToFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "writeToFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "List<IndexedRecord> records@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "records.clear()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "records.size() > 0@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "generateLogData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<HeaderMetadataType,String> header = new HashMap<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HoodieAvroDataBlock block = new HoodieAvroDataBlock(records,header)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Schema wrapperSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Schema wrapperSchema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "boolean isLogSchemaSimple@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,wrapperSchema.toString())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.INSTANT_TIME,dataFile.getCommitTime())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "HoodieBaseFile dataFile = new HoodieBaseFile(fileSystem.getFileStatus(parquetFilePath))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "return logWriter.getLogFile()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Path parquetFilePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "writer.appendBlock(block)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "HoodieAvroDataBlock dataBlock = new HoodieAvroDataBlock(records,header)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<HeaderMetadataType,String> header = new HashMap<>(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<IndexedRecord> records = (isLogSchemaSimple? SchemaTestUtil.generateTestRecords(0,100): SchemaTestUtil.generateEvolvedTestRecords(100,100))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Schema schema = getTestDataSchema(isLogSchemaSimple)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,schema.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
20->21 [style = solid, label="dataBlock"];
9->0 [style = bold, label=""];
25->13 [style = bold, label=""];
8->2 [style = dotted, label="true"];
18->20 [style = solid, label="header"];
2->3 [style = solid, label="records"];
14->19 [style = bold, label=""];
8->6 [style = bold, label=""];
19->17 [style = bold, label=""];
12->24 [style = bold, label=""];
16->22 [style = dotted, label="true"];
3->4 [style = bold, label=""];
3->4 [style = solid, label="block"];
10->6 [style = bold, label=""];
17->23 [style = bold, label=""];
3->9 [style = solid, label="block"];
4->0 [style = bold, label=""];
21->12 [style = bold, label=""];
20->21 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = dotted, label="true"];
4->9 [style = dashed, label="0"];
7->5 [style = bold, label=""];
6->4 [style = dotted, label="true"];
6->9 [style = dotted, label="true"];
10->11 [style = dotted, label="true"];
10->2 [style = dotted, label="true"];
7->3 [style = solid, label="header"];
22->19 [style = solid, label="parquetFilePath"];
18->25 [style = bold, label=""];
6->7 [style = dotted, label="true"];
15->23 [style = solid, label="isLogSchemaSimple"];
16->14 [style = bold, label=""];
6->0 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
6->7 [style = bold, label=""];
15->14 [style = solid, label="isLogSchemaSimple"];
23->20 [style = solid, label="records"];
23->18 [style = bold, label=""];
6->5 [style = dotted, label="true"];
16->15 [style = dotted, label="true"];
13->20 [style = bold, label=""];
}
