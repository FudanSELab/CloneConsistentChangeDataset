digraph {
13 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "i++@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@51@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "clusterState = newState@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test\")).addAsNew(metaData.index(\"test1\")).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(\"cluster.routing.allocation.node_concurrent_recoveries\",10).put(\"cluster.routing.allocation.node_initial_primaries_recoveries\",10).put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\"always\").put(\"cluster.routing.allocation.cluster_concurrent_rebalance\",-1).build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().size(),equalTo(1))@@@91@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@76@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@86@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "logger.info(\"Start the backup shard\")@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "int i = 0@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "i++@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "clusterState = newState@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "logger.info(\"Adding one node and performing rerouting\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@89@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "clusterState = newState@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "logger.info(\"Building initial routing table\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "logger.info(\"Add another node and perform rerouting, nothing will happen since primary not started\")@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes())).build()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@84@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@119@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@112@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "testBalanceAllNodesStarted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).size(),equalTo(2))@@@88@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")).add(newNode(\"node3\"))).build()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@85@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertThat(routingNodes.node(\"node1\").numberOfShardsWithState(STARTED),equalTo(4))@@@114@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@118@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@57@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).currentNodeId(),nullValue())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(0).state(),equalTo(UNASSIGNED))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@63@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertThat(routingNodes.node(\"node2\").numberOfShardsWithState(STARTED),equalTo(4))@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "clusterState = newState@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@70@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@121@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertThat(routingNodes.node(\"node1\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@117@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
101 [style = filled, label = "clusterState = newState@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).size(),equalTo(2))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@73@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(1).state(),equalTo(UNASSIGNED))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@79@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "int i = 0@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "i++@@@87@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(0).currentNodeId(),nullValue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "testBalanceIncrementallyStartNodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "ClusterState newState = strategy.reroute(clusterState,\"reroute\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@90@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(0).state(),equalTo(UNASSIGNED))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(1).state(),equalTo(UNASSIGNED))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@122@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testBalanceAllNodesStarted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@52@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@110@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@80@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "clusterState = newState@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@92@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(1).currentNodeId(),nullValue())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(routingNodes.node(\"node3\").numberOfShardsWithState(STARTED),equalTo(4))@@@116@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(1).currentNodeId(),nullValue())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "logger.info(\"Add another node and perform rerouting, nothing will happen since primary not started\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterState = newState@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertThat(routingNodes.node(\"node2\").numberOfShardsWithState(STARTED),equalTo(4))@@@115@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "logger.info(\"Adding three node and performing rerouting\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@82@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(0).currentNodeId(),nullValue())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertThat(routingNodes.node(\"node1\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@120@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "int i = 0@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
92 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "logger.info(\"Another round of rebalancing\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "logger.info(\"Start the backup shard\")@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@51@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@69@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int i = 0@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "logger.info(\"Start the primary shard\")@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@81@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->54 [style = bold, label=""];
14->86 [style = bold, label=""];
9->87 [style = bold, label=""];
95->60 [style = bold, label=""];
111->116 [style = bold, label=""];
52->33 [style = bold, label=""];
129->86 [style = bold, label=""];
107->130 [style = bold, label=""];
66->109 [style = bold, label=""];
94->28 [style = solid, label="i"];
1->85 [style = solid, label="i"];
41->64 [style = bold, label=""];
60->83 [style = solid, label="newState"];
33->52 [style = dotted, label="true"];
79->42 [style = bold, label=""];
91->56 [style = solid, label="strategy"];
97->38 [style = solid, label="newState"];
49->36 [style = bold, label=""];
69->23 [style = dotted, label="true"];
51->52 [style = bold, label=""];
45->41 [style = bold, label=""];
54->67 [style = bold, label=""];
43->92 [style = bold, label=""];
106->127 [style = bold, label=""];
69->61 [style = dotted, label="true"];
80->20 [style = bold, label=""];
24->17 [style = solid, label="newState"];
89->112 [style = dashed, label="0"];
124->122 [style = solid, label="newState"];
102->101 [style = bold, label=""];
61->23 [style = bold, label=""];
116->129 [style = bold, label=""];
112->41 [style = solid, label="clusterState"];
46->37 [style = bold, label=""];
4->90 [style = bold, label=""];
24->12 [style = solid, label="newState"];
28->42 [style = solid, label="i"];
69->28 [style = bold, label=""];
89->97 [style = solid, label="clusterState"];
35->18 [style = bold, label=""];
28->69 [style = bold, label=""];
85->125 [style = bold, label=""];
38->83 [style = solid, label="clusterState"];
27->33 [style = solid, label="i"];
115->119 [style = solid, label="clusterState"];
31->32 [style = dotted, label="true"];
31->75 [style = bold, label=""];
62->76 [style = bold, label=""];
117->130 [style = solid, label="clusterState"];
22->72 [style = dotted, label="true"];
45->41 [style = solid, label="newState"];
34->25 [style = bold, label=""];
74->32 [style = bold, label=""];
38->102 [style = solid, label="clusterState"];
22->18 [style = dotted, label="true"];
14->23 [style = dotted, label="true"];
21->4 [style = bold, label=""];
82->40 [style = bold, label=""];
56->109 [style = dashed, label="0"];
71->21 [style = bold, label=""];
11->31 [style = solid, label="i"];
119->117 [style = solid, label="newState"];
85->13 [style = dotted, label="true"];
33->81 [style = solid, label="i"];
57->22 [style = solid, label="i"];
114->64 [style = bold, label=""];
31->63 [style = dotted, label="true"];
53->36 [style = dotted, label="true"];
53->36 [style = bold, label=""];
50->79 [style = bold, label=""];
88->66 [style = solid, label="clusterState"];
5->0 [style = dotted, label="true"];
16->108 [style = dashed, label="0"];
16->62 [style = bold, label=""];
65->34 [style = bold, label=""];
12->78 [style = bold, label=""];
100->53 [style = bold, label=""];
112->45 [style = solid, label="clusterState"];
81->34 [style = bold, label=""];
115->127 [style = solid, label="clusterState"];
33->51 [style = dotted, label="true"];
78->17 [style = dashed, label="0"];
11->31 [style = bold, label=""];
130->105 [style = solid, label="newState"];
81->34 [style = dotted, label="true"];
5->9 [style = dotted, label="true"];
6->61 [style = bold, label=""];
36->57 [style = solid, label="i"];
0->29 [style = bold, label=""];
64->68 [style = bold, label=""];
20->15 [style = bold, label=""];
28->14 [style = solid, label="i"];
36->53 [style = bold, label=""];
28->69 [style = solid, label="i"];
81->33 [style = dotted, label="true"];
39->91 [style = bold, label=""];
31->67 [style = dotted, label="true"];
112->38 [style = solid, label="clusterState"];
29->5 [style = bold, label=""];
52->65 [style = bold, label=""];
120->48 [style = bold, label=""];
124->122 [style = bold, label=""];
26->9 [style = bold, label=""];
49->35 [style = bold, label=""];
55->26 [style = bold, label=""];
103->93 [style = solid, label="clusterState"];
22->69 [style = bold, label=""];
125->112 [style = bold, label=""];
59->120 [style = dashed, label="0"];
38->60 [style = solid, label="clusterState"];
10->85 [style = solid, label="i"];
68->38 [style = solid, label="newState"];
19->120 [style = bold, label=""];
77->46 [style = bold, label=""];
104->128 [style = bold, label=""];
53->18 [style = bold, label=""];
113->107 [style = bold, label=""];
48->70 [style = bold, label=""];
5->26 [style = dotted, label="true"];
85->71 [style = bold, label=""];
64->97 [style = dashed, label="0"];
58->0 [style = bold, label=""];
63->74 [style = bold, label=""];
85->90 [style = dotted, label="true"];
100->36 [style = solid, label="i"];
37->80 [style = bold, label=""];
112->45 [style = bold, label=""];
69->28 [style = dotted, label="true"];
81->33 [style = bold, label=""];
119->123 [style = solid, label="newState"];
25->44 [style = bold, label=""];
28->14 [style = bold, label=""];
124->115 [style = solid, label="newState"];
44->51 [style = bold, label=""];
57->72 [style = bold, label=""];
31->74 [style = dotted, label="true"];
5->16 [style = bold, label=""];
8->10 [style = bold, label=""];
33->60 [style = bold, label=""];
31->82 [style = bold, label=""];
109->30 [style = bold, label=""];
62->93 [style = solid, label="clusterState"];
88->83 [style = solid, label="clusterState"];
56->101 [style = solid, label="newState"];
31->54 [style = dotted, label="true"];
81->33 [style = solid, label="i"];
127->104 [style = bold, label=""];
62->76 [style = solid, label="clusterState"];
38->56 [style = solid, label="clusterState"];
40->5 [style = bold, label=""];
22->57 [style = dotted, label="true"];
53->72 [style = dotted, label="true"];
83->66 [style = solid, label="newState"];
89->68 [style = solid, label="clusterState"];
62->103 [style = dashed, label="0"];
34->33 [style = solid, label="i"];
68->38 [style = bold, label=""];
23->50 [style = bold, label=""];
97->96 [style = solid, label="newState"];
53->49 [style = dotted, label="true"];
33->65 [style = dotted, label="true"];
103->76 [style = bold, label=""];
103->76 [style = solid, label="clusterState"];
24->17 [style = bold, label=""];
121->126 [style = bold, label=""];
22->84 [style = dotted, label="true"];
85->71 [style = dotted, label="true"];
108->103 [style = bold, label=""];
94->69 [style = bold, label=""];
34->33 [style = bold, label=""];
60->83 [style = bold, label=""];
96->38 [style = bold, label=""];
130->105 [style = bold, label=""];
81->44 [style = dotted, label="true"];
89->96 [style = solid, label="clusterState"];
76->93 [style = bold, label=""];
97->96 [style = bold, label=""];
56->102 [style = solid, label="newState"];
89->38 [style = solid, label="clusterState"];
14->61 [style = dotted, label="true"];
69->14 [style = dotted, label="true"];
19->59 [style = bold, label=""];
68->88 [style = solid, label="newState"];
105->111 [style = bold, label=""];
31->3 [style = dotted, label="true"];
92->1 [style = bold, label=""];
42->6 [style = bold, label=""];
14->6 [style = dotted, label="true"];
66->56 [style = bold, label=""];
73->7 [style = bold, label=""];
22->49 [style = dotted, label="true"];
53->84 [style = dotted, label="true"];
99->91 [style = bold, label=""];
81->25 [style = dotted, label="true"];
47->125 [style = dashed, label="0"];
3->31 [style = bold, label=""];
110->91 [style = bold, label=""];
89->45 [style = bold, label=""];
85->4 [style = dotted, label="true"];
76->93 [style = solid, label="newState"];
112->68 [style = solid, label="clusterState"];
33->34 [style = dotted, label="true"];
93->43 [style = bold, label=""];
22->72 [style = bold, label=""];
76->43 [style = solid, label="newState"];
13->8 [style = bold, label=""];
42->14 [style = bold, label=""];
53->57 [style = dotted, label="true"];
53->22 [style = bold, label=""];
72->84 [style = bold, label=""];
33->81 [style = bold, label=""];
40->29 [style = solid, label="i"];
75->63 [style = bold, label=""];
83->66 [style = bold, label=""];
56->30 [style = bold, label=""];
115->123 [style = solid, label="clusterState"];
123->117 [style = bold, label=""];
81->52 [style = dotted, label="true"];
56->102 [style = bold, label=""];
14->42 [style = dotted, label="true"];
89->45 [style = solid, label="clusterState"];
14->79 [style = dotted, label="true"];
14->50 [style = dotted, label="true"];
29->5 [style = solid, label="i"];
40->5 [style = solid, label="i"];
88->24 [style = solid, label="clusterState"];
91->97 [style = solid, label="strategy"];
81->95 [style = bold, label=""];
91->19 [style = bold, label=""];
11->3 [style = solid, label="i"];
1->10 [style = solid, label="i"];
12->100 [style = bold, label=""];
67->3 [style = bold, label=""];
14->42 [style = bold, label=""];
126->124 [style = bold, label=""];
78->53 [style = bold, label=""];
5->108 [style = bold, label=""];
130->111 [style = solid, label="newState"];
31->75 [style = dotted, label="true"];
2->11 [style = bold, label=""];
115->106 [style = bold, label=""];
14->121 [style = bold, label=""];
118->119 [style = bold, label=""];
5->55 [style = dotted, label="true"];
117->113 [style = bold, label=""];
85->10 [style = dotted, label="true"];
53->22 [style = dotted, label="true"];
90->13 [style = bold, label=""];
27->81 [style = bold, label=""];
36->22 [style = bold, label=""];
17->12 [style = bold, label=""];
79->98 [style = bold, label=""];
33->44 [style = dotted, label="true"];
1->85 [style = bold, label=""];
89->41 [style = solid, label="clusterState"];
5->58 [style = dotted, label="true"];
126->122 [style = solid, label="clusterState"];
88->17 [style = solid, label="clusterState"];
59->48 [style = bold, label=""];
128->118 [style = bold, label=""];
115->104 [style = solid, label="clusterState"];
81->51 [style = dotted, label="true"];
57->22 [style = bold, label=""];
86->73 [style = bold, label=""];
27->81 [style = solid, label="i"];
100->53 [style = solid, label="i"];
3->31 [style = solid, label="i"];
127->104 [style = solid, label="newState"];
7->77 [style = bold, label=""];
36->53 [style = solid, label="i"];
38->88 [style = bold, label=""];
33->25 [style = dotted, label="true"];
101->17 [style = bold, label=""];
10->85 [style = bold, label=""];
41->97 [style = bold, label=""];
41->114 [style = bold, label=""];
122->115 [style = bold, label=""];
30->56 [style = dashed, label="0"];
5->87 [style = dotted, label="true"];
85->8 [style = dotted, label="true"];
126->124 [style = solid, label="clusterState"];
69->14 [style = bold, label=""];
70->2 [style = bold, label=""];
14->6 [style = bold, label=""];
18->57 [style = bold, label=""];
18->94 [style = bold, label=""];
36->22 [style = solid, label="i"];
84->49 [style = bold, label=""];
81->34 [style = solid, label="i"];
69->6 [style = dotted, label="true"];
88->27 [style = bold, label=""];
23->28 [style = bold, label=""];
85->47 [style = bold, label=""];
5->55 [style = bold, label=""];
47->89 [style = bold, label=""];
98->86 [style = bold, label=""];
69->79 [style = bold, label=""];
117->105 [style = solid, label="clusterState"];
85->21 [style = dotted, label="true"];
69->42 [style = dotted, label="true"];
33->25 [style = bold, label=""];
22->57 [style = bold, label=""];
87->58 [style = bold, label=""];
94->69 [style = solid, label="i"];
30->24 [style = bold, label=""];
42->14 [style = solid, label="i"];
5->29 [style = dotted, label="true"];
22->35 [style = dotted, label="true"];
119->123 [style = bold, label=""];
}
