digraph {
2 [style = filled, label = "assertEquals(info.resourceType + \" was supposed to have code == \" + info.code,info.code,info.resourceType.code())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"AclPermissionType.fromCode(\" + info.code + \") was supposed to be \" + info.ty,info.ty,AclPermissionType.fromCode((byte)info.code))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testCode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(info.ty + \" was supposed to have code == \" + info.code,info.code,info.ty.code())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(ResourceType.UNKNOWN,ResourceType.fromCode((byte)120))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"AclResourceType.fromCode(\" + info.code + \") was supposed to be \" + info.resourceType,info.resourceType,ResourceType.fromCode((byte)info.code))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(AclPermissionType.UNKNOWN,AclPermissionType.fromCode((byte)120))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(ResourceType.values().length,INFOS.length)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testCode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->2 [style = bold, label=""];
5->4 [style = bold, label=""];
3->6 [style = dashed, label="0"];
4->2 [style = bold, label=""];
6->9 [style = bold, label=""];
3->2 [style = bold, label=""];
6->7 [style = bold, label=""];
0->7 [style = dashed, label="0"];
2->9 [style = dashed, label="0"];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
9->6 [style = bold, label=""];
8->9 [style = bold, label=""];
}
