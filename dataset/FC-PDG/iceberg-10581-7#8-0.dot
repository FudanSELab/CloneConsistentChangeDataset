digraph {
36 [style = filled, label = "parquetFile.deleteOnExit()@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "builder.set(\"_all_nulls\",null)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "builder.set(\"_all_nans\",Double.NaN)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "builder.set(\"_some_nans\",(i % 10 == 0)? Float.NaN: 2F)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "builder.set(\"_non_dict\",UUID.randomUUID().toString())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "copy < 20@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "OutputFile outFile = Files.localOutput(parquetFile)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "structNotNull.put(\"_int_field\",INT_MIN_VALUE + i)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "builder.set(\"_some_nulls\",(i % 10 == 0)? null: \"some\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.set(\"_required\",\"req\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i < INT_MAX_VALUE - INT_MIN_VALUE + 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.set(\"_no_nulls\",\"\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "copy += 1@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.set(\"_no_stats_parquet\",TOO_LONG_FOR_STATS_PARQUET)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i += 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "createInputFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "builder.set(\"_id\",INT_MIN_VALUE + i)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dictionaryStore = reader.getNextDictionaryReader()@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "builder.set(\"_decimal_fixed\",DECIMAL_MIN_VALUE.add(DECIMAL_STEP.multiply(new BigDecimal(i))))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ParquetFileReader reader = ParquetFileReader.open(ParquetIO.file(inFile))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.set(\"_no_stats\",TOO_LONG_FOR_STATS)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "createInputFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "appender.add(builder.build())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "createParquetInputFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "builder.set(\"_no_nans\",3D)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "File parquetFile = temp.newFile()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "builder.set(\"_str\",i + \"str\" + i)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int copy = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "builder.set(\"_struct_not_null\",structNotNull)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->3 [style = bold, label=""];
28->13 [style = bold, label=""];
37->7 [style = bold, label=""];
8->14 [style = bold, label=""];
28->17 [style = dotted, label="true"];
28->33 [style = dotted, label="true"];
22->16 [style = solid, label="i"];
28->31 [style = dotted, label="true"];
1->18 [style = bold, label=""];
15->22 [style = bold, label=""];
28->12 [style = dotted, label="true"];
6->8 [style = bold, label=""];
22->33 [style = solid, label="i"];
22->23 [style = solid, label="i"];
2->28 [style = solid, label="i"];
22->28 [style = bold, label=""];
28->37 [style = dotted, label="true"];
24->27 [style = bold, label=""];
2->33 [style = solid, label="i"];
14->10 [style = bold, label=""];
29->33 [style = bold, label=""];
28->24 [style = dotted, label="true"];
28->30 [style = bold, label=""];
10->11 [style = solid, label="structSchema"];
12->37 [style = dashed, label="0"];
15->13 [style = dotted, label="true"];
28->26 [style = dotted, label="true"];
26->16 [style = bold, label=""];
15->28 [style = dotted, label="true"];
20->31 [style = bold, label=""];
33->11 [style = bold, label=""];
28->35 [style = dotted, label="true"];
8->30 [style = solid, label="parquetFile"];
22->28 [style = solid, label="i"];
7->20 [style = bold, label=""];
2->28 [style = bold, label=""];
2->31 [style = solid, label="i"];
2->35 [style = solid, label="i"];
31->17 [style = bold, label=""];
22->21 [style = solid, label="i"];
8->19 [style = solid, label="parquetFile"];
25->9 [style = bold, label=""];
3->22 [style = bold, label=""];
35->11 [style = bold, label=""];
13->15 [style = solid, label="copy"];
28->21 [style = dotted, label="true"];
28->29 [style = dotted, label="true"];
11->24 [style = solid, label="structNotNull"];
15->30 [style = bold, label=""];
13->15 [style = bold, label=""];
17->26 [style = bold, label=""];
2->23 [style = solid, label="i"];
25->36 [style = bold, label=""];
29->35 [style = bold, label=""];
28->23 [style = bold, label=""];
28->27 [style = dotted, label="true"];
16->29 [style = bold, label=""];
28->2 [style = dotted, label="true"];
23->12 [style = bold, label=""];
32->8 [style = bold, label=""];
28->11 [style = dotted, label="true"];
30->0 [style = bold, label=""];
28->23 [style = dotted, label="true"];
30->1 [style = bold, label=""];
15->22 [style = dotted, label="true"];
23->37 [style = bold, label=""];
3->4 [style = bold, label=""];
2->16 [style = solid, label="i"];
12->7 [style = bold, label=""];
11->21 [style = bold, label=""];
4->15 [style = solid, label="copy"];
28->7 [style = dotted, label="true"];
30->0 [style = solid, label="inFile"];
18->25 [style = bold, label=""];
21->24 [style = bold, label=""];
5->26 [style = bold, label=""];
0->1 [style = bold, label=""];
10->19 [style = bold, label=""];
28->5 [style = dotted, label="true"];
28->20 [style = dotted, label="true"];
28->16 [style = dotted, label="true"];
22->31 [style = solid, label="i"];
2->21 [style = solid, label="i"];
22->35 [style = solid, label="i"];
34->8 [style = bold, label=""];
4->15 [style = bold, label=""];
17->5 [style = bold, label=""];
27->2 [style = bold, label=""];
29->11 [style = bold, label=""];
}
