digraph {
6 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "shouldGetPollRatioSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final String avgLatencyDescription = \"The average poll latency\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "replay(,streamsMetrics)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final String ratioDescription = \"The fraction of time the thread spent on polling records from consumer\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(,streamsMetrics)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operationLatency,avgLatencyDescription,maxLatencyDescription)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).thenReturn(expectedSensor)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "shouldGetPollSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String maxLatencyDescription = \"The maximum poll latency\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String rateDescription = \"The average per-second number of calls to poll\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String operation = \"poll-ratio\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "replay(,streamsMetrics)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "when(streamsMetrics.threadLevelTagMap(THREAD_ID)).thenReturn(tagMap)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final String operationLatency = operation + StreamsMetricsImpl.LATENCY_SUFFIX@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Sensor sensor = ThreadMetrics.pollSensor(THREAD_ID,streamsMetrics)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "StreamsMetricsImpl.addValueMetricToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,ratioDescription)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldGetPollRatioSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String totalDescription = \"The total number of calls to poll\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final String operation = \"poll\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,rateDescription,totalDescription)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
4->6 [style = bold, label=""];
15->25 [style = bold, label=""];
21->15 [style = bold, label=""];
17->14 [style = solid, label="sensor"];
13->23 [style = solid, label="operationLatency"];
18->17 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->0 [style = bold, label=""];
15->24 [style = solid, label="rateDescription"];
3->22 [style = dashed, label="0"];
22->24 [style = solid, label="operation"];
8->24 [style = dashed, label="0"];
24->23 [style = bold, label=""];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
21->24 [style = solid, label="totalDescription"];
20->22 [style = bold, label=""];
6->10 [style = dashed, label="0"];
25->23 [style = solid, label="avgLatencyDescription"];
19->5 [style = bold, label=""];
5->1 [style = bold, label=""];
5->2 [style = bold, label=""];
5->17 [style = dashed, label="0"];
8->5 [style = bold, label=""];
1->24 [style = bold, label=""];
0->8 [style = bold, label=""];
8->9 [style = bold, label=""];
25->19 [style = bold, label=""];
19->23 [style = solid, label="maxLatencyDescription"];
9->5 [style = bold, label=""];
5->2 [style = solid, label="sensor"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
3->8 [style = solid, label="operation"];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
13->21 [style = bold, label=""];
22->13 [style = solid, label="operation"];
23->18 [style = bold, label=""];
22->13 [style = bold, label=""];
17->16 [style = bold, label=""];
4->8 [style = solid, label="ratioDescription"];
10->11 [style = bold, label=""];
}
