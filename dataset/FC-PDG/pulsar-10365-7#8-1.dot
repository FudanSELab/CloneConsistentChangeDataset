digraph {
20 [style = filled, label = "sourceConfig.setConfigs(sourceConfigMap)@@@61@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "inputTopics.forEach(new Consumer<String>(){@Override public void accept(String s){CmdSinks.validateTopicName(s)topicsToSerDeClassName.put(s,\"\")}})@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "null == jarFile@@@60@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "sinkConfig.setResources(new org.apache.pulsar.functions.utils.Resources(cpu,ram,disk))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "null != sinkConfigFile@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "sinkConfig.setParallelism(1)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "null != destinationTopicName@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "sourceConfig.getParallelism() == 0@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new IllegalArgumentException(\"The parallelism factor (the number of instances) for the \" + \"connector must be positive\")@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "com.google.common.base.Preconditions.checkArgument(cpu == null || cpu > 0,\"The cpu allocation for the source must be positive\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "this.sourceConfig = loadSourceConfig(sourceConfigFile)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "int num = Integer.parseInt(parallelism)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "throw new IllegalArgumentException(\"Connector JAR not specfied\")@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Type type = new TypeToken<Map<String,String>>(){}.getType()@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "sinkConfig.setNamespace(namespace)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "processArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "sourceConfig.getNamespace() == null@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "null != sinkConfigString@@@67@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.sourceConfig.setClassName(className)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.sourceConfig = new SourceConfig()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "sinkConfig.setName(name)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "num <= 0@@@55@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "com.google.common.base.Preconditions.checkArgument(disk == null || disk > 0,\"The disk allocation for the sink must be positive\")@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "customSerdeInputMap.forEach(null)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "this.sinkConfig = loadSinkConfig(sinkConfigFile)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "List<String> inputTopics = Arrays.asList(inputs.split(\",\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "null != customSerdeInputString@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "sinkConfig.getParallelism() == 0@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "null != sourceConfigString@@@56@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "sourceConfig.setTenant(PUBLIC_TENANT)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "sourceConfig.setTenant(tenant)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "sinkConfig.setTopicToSerdeClassName(topicsToSerDeClassName)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "null != name@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "null != inputs@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "null != processingGuarantees@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "null != tenant@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int num = Integer.parseInt(parallelism)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "processArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sourceConfig.setName(name)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "sourceConfig.setParallelism(num)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sourceConfig.setSerdeClassName(deserializationClassName)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "null != namespace@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "num <= 0@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "sourceConfig.setParallelism(1)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "throw new IllegalArgumentException(\"The parallelism factor (the number of instances) for the \" + \"connector must be positive\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "sinkConfig.setTenant(tenant)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "sinkConfig.setClassName(className)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Map<String,Object> sourceConfigMap = new Gson().fromJson(sourceConfigString,type)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "sourceConfig.setNamespace(DEFAULT_NAMESPACE)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "Map<String,Object> sinkConfigMap = new Gson().fromJson(sinkConfigString,type)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "parallelism == null@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "null != processingGuarantees@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "processArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "null != deserializationClassName@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "sourceConfig.getTenant() == null@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "sinkConfig.setConfigs(sinkConfigMap)@@@72@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "sinkConfig.setParallelism(num)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Type type = new TypeToken<Map<String,String>>(){}.getType()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "com.google.common.base.Preconditions.checkArgument(cpu == null || cpu > 0,\"The cpu allocation for the sink must be positive\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Map<String,String> customSerdeInputMap = new Gson().fromJson(customSerdeInputString,type)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "parallelism == null@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sourceConfig.setNamespace(namespace)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Type type = new TypeToken<Map<String,String>>(){}.getType()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sourceConfig.setTopicName(destinationTopicName)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "sourceConfig.setProcessingGuarantees(processingGuarantees)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "this.sinkConfig = new SinkConfig()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "sinkConfig.setProcessingGuarantees(processingGuarantees)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "null != className@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "com.google.common.base.Preconditions.checkArgument(ram == null || ram > 0,\"The ram allocation for the sink must be positive\")@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "com.google.common.base.Preconditions.checkArgument(ram == null || ram > 0,\"The ram allocation for the source must be positive\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Map<String,String> topicsToSerDeClassName = new HashMap<>()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "null != sourceConfigFile@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@179266c@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->47 [style = dashed, label="0"];
21->12 [style = dotted, label="true"];
39->19 [style = bold, label=""];
52->44 [style = bold, label=""];
71->70 [style = bold, label=""];
24->60 [style = bold, label=""];
56->34 [style = bold, label=""];
24->62 [style = dotted, label="true"];
68->64 [style = dotted, label="true"];
15->54 [style = dashed, label="0"];
61->19 [style = bold, label=""];
43->42 [style = bold, label=""];
18->30 [style = bold, label=""];
28->9 [style = bold, label=""];
14->22 [style = solid, label="type"];
6->67 [style = dashed, label="0"];
19->11 [style = bold, label=""];
21->24 [style = bold, label=""];
19->36 [style = bold, label=""];
19->36 [style = dotted, label="false"];
29->34 [style = bold, label=""];
34->50 [style = bold, label=""];
0->59 [style = dashed, label="0"];
8->9 [style = dotted, label="false"];
3->35 [style = bold, label=""];
23->29 [style = bold, label=""];
8->1 [style = bold, label=""];
19->57 [style = dotted, label="true"];
60->47 [style = bold, label=""];
0->66 [style = bold, label=""];
18->61 [style = bold, label=""];
45->43 [style = bold, label=""];
48->72 [style = dotted, label="true"];
5->22 [style = dotted, label="true"];
19->11 [style = dotted, label="true"];
17->46 [style = dashed, label="0"];
48->72 [style = bold, label=""];
9->50 [style = dashed, label="0"];
39->38 [style = bold, label=""];
45->42 [style = dotted, label="true"];
25->66 [style = dashed, label="0"];
32->13 [style = dotted, label="true"];
23->29 [style = dotted, label="true"];
45->43 [style = dotted, label="true"];
2->16 [style = bold, label=""];
10->50 [style = bold, label=""];
66->46 [style = bold, label=""];
1->4 [style = bold, label=""];
48->69 [style = dotted, label="true"];
65->45 [style = bold, label=""];
8->23 [style = bold, label=""];
67->18 [style = bold, label=""];
55->59 [style = bold, label=""];
62->60 [style = bold, label=""];
14->22 [style = bold, label=""];
18->19 [style = bold, label=""];
21->41 [style = bold, label=""];
45->52 [style = dotted, label="true"];
8->4 [style = dotted, label="false"];
8->23 [style = dotted, label="true"];
7->55 [style = dashed, label="0"];
16->32 [style = bold, label=""];
7->0 [style = bold, label=""];
36->40 [style = dotted, label="true"];
56->34 [style = solid, label="num"];
26->6 [style = bold, label=""];
58->50 [style = dotted, label="false"];
27->53 [style = dashed, label="0"];
58->56 [style = dotted, label="false"];
58->56 [style = bold, label=""];
4->28 [style = dotted, label="true"];
1->9 [style = solid, label="num"];
30->19 [style = bold, label=""];
26->27 [style = bold, label=""];
71->7 [style = bold, label=""];
19->57 [style = bold, label=""];
22->69 [style = dashed, label="0"];
22->20 [style = bold, label=""];
10->25 [style = bold, label=""];
57->21 [style = bold, label=""];
56->50 [style = solid, label="num"];
68->45 [style = bold, label=""];
70->7 [style = bold, label=""];
63->53 [style = bold, label=""];
58->71 [style = dotted, label="true"];
33->8 [style = bold, label=""];
59->48 [style = bold, label=""];
40->21 [style = bold, label=""];
58->34 [style = dotted, label="false"];
7->66 [style = bold, label=""];
33->31 [style = dotted, label="true"];
18->39 [style = dotted, label="false"];
4->9 [style = bold, label=""];
60->54 [style = bold, label=""];
27->18 [style = bold, label=""];
36->40 [style = bold, label=""];
72->69 [style = bold, label=""];
49->35 [style = bold, label=""];
68->65 [style = dotted, label="true"];
6->18 [style = bold, label=""];
42->52 [style = bold, label=""];
26->27 [style = dotted, label="true"];
11->21 [style = bold, label=""];
34->10 [style = dotted, label="true"];
26->6 [style = dotted, label="false"];
12->24 [style = bold, label=""];
7->0 [style = dotted, label="true"];
60->54 [style = dotted, label="true"];
25->17 [style = bold, label=""];
45->44 [style = bold, label=""];
30->61 [style = dashed, label="0"];
32->33 [style = bold, label=""];
38->19 [style = bold, label=""];
12->41 [style = dashed, label="0"];
21->12 [style = bold, label=""];
18->61 [style = dotted, label="true"];
21->41 [style = dotted, label="true"];
18->39 [style = bold, label=""];
69->51 [style = solid, label="sinkConfigMap"];
64->65 [style = bold, label=""];
63->67 [style = bold, label=""];
16->60 [style = dashed, label="0"];
35->63 [style = bold, label=""];
43->42 [style = solid, label="type"];
37->35 [style = bold, label=""];
23->71 [style = dashed, label="0"];
35->26 [style = bold, label=""];
31->8 [style = bold, label=""];
58->71 [style = bold, label=""];
0->5 [style = bold, label=""];
68->64 [style = bold, label=""];
46->55 [style = bold, label=""];
19->21 [style = bold, label=""];
16->15 [style = dotted, label="true"];
11->57 [style = dashed, label="0"];
16->15 [style = bold, label=""];
5->14 [style = dotted, label="true"];
63->67 [style = dotted, label="false"];
34->25 [style = bold, label=""];
22->20 [style = solid, label="sourceConfigMap"];
24->2 [style = bold, label=""];
41->24 [style = bold, label=""];
26->63 [style = dashed, label="0"];
53->18 [style = bold, label=""];
29->70 [style = dashed, label="0"];
20->51 [style = dashed, label="0"];
63->53 [style = dotted, label="true"];
39->38 [style = dotted, label="true"];
47->44 [style = solid, label="topicsToSerDeClassName"];
47->68 [style = bold, label=""];
48->51 [style = dotted, label="true"];
50->7 [style = bold, label=""];
5->14 [style = bold, label=""];
69->51 [style = bold, label=""];
34->10 [style = bold, label=""];
4->28 [style = bold, label=""];
17->7 [style = bold, label=""];
36->21 [style = bold, label=""];
24->16 [style = bold, label=""];
71->70 [style = dotted, label="true"];
54->47 [style = bold, label=""];
1->4 [style = solid, label="num"];
5->48 [style = dashed, label="0"];
23->34 [style = bold, label=""];
33->31 [style = bold, label=""];
5->20 [style = dotted, label="true"];
44->58 [style = bold, label=""];
72->69 [style = solid, label="type"];
24->62 [style = bold, label=""];
24->2 [style = dotted, label="true"];
2->62 [style = dashed, label="0"];
32->13 [style = bold, label=""];
13->33 [style = bold, label=""];
15->32 [style = bold, label=""];
8->1 [style = dotted, label="false"];
18->30 [style = dotted, label="true"];
9->34 [style = bold, label=""];
}
