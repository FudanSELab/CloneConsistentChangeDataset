digraph {
0 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemas,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertGetSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(schemas.get(\"schema\"),is(ProxyContext.getInstance().getSchema(\"schema\")))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertGetAllSchemaNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Map<String,ShardingSphereSchema> schemas = createSchemas()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,ShardingSphereSchema> schemas = mockSchemas(Collections.emptyMap())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"schema1\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(null))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(schemas.keySet()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemas,mock(),mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertGetSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
8->1 [style = bold, label=""];
9->3 [style = bold, label=""];
12->13 [style = bold, label=""];
1->9 [style = dashed, label="0"];
5->2 [style = bold, label=""];
10->2 [style = bold, label=""];
13->6 [style = bold, label=""];
2->1 [style = solid, label="schemas"];
13->1 [style = solid, label="schemas"];
3->11 [style = dashed, label="0"];
0->4 [style = bold, label=""];
2->13 [style = dashed, label="0"];
2->6 [style = bold, label=""];
2->9 [style = solid, label="schemas"];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
6->8 [style = bold, label=""];
1->11 [style = bold, label=""];
8->9 [style = bold, label=""];
}
