digraph {
6 [style = filled, label = "RuntimeContext rCtx = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ExecutionConfig execConf = new ExecutionConfig()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "InternalIterableWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalIterableWindowFunction<>(mock)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(mock).close()@@@23@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InternalWindowFunction.InternalWindowContext ctx = mock()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testInternalIterableProcessWindowFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Configuration config = new Configuration()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "windowFunction.open(config)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testInternalIterableProcessWindowFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "windowFunction.close()@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "TimeWindow w = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "verify(ctx).currentProcessingTime()@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Collector<String> c = (Collector<String>)mock()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "StreamingFunctionUtils.setOutputType(windowFunction,stringType,execConf)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(mock).setRuntimeContext(rCtx)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "InternalIterableProcessWindowFunction<Long,String,Long,TimeWindow> windowFunction = new InternalIterableProcessWindowFunction<>(mock)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "execConf.setParallelism(42)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "doAnswer(new Answer(){@Override public Object answer(InvocationOnMock invocationOnMock){ProcessWindowFunctionMock.Context c = (ProcessWindowFunction.Context)invocationOnMock.getArguments()(1(c.currentProcessingTime()c.currentWatermark()c.windowState()c.globalState()return null}}).when(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),eq(i),eq(c))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "ProcessWindowFunctionMock mock = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "windowFunction.setRuntimeContext(rCtx)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(mock).setOutputType(stringType,execConf)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "verify(ctx).globalState()@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "verify(ctx).windowState()@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "verify(mock).open(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Iterable<Long> i = (Iterable<Long>)mock()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(ctx).currentWatermark()@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "TypeInformation<String> stringType = BasicTypeInfo.STRING_TYPE_INFO@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "verify(mock).close()@@@37@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "windowFunction.process(42L,w,ctx,i,c)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "WindowFunctionMock mock = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "windowFunction.close()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testInternalIterableWindowFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verify(mock).process(eq(42L),(ProcessWindowFunctionMock.Context)anyObject(),eq(i),eq(c))@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "verify(mock).apply(eq(42L),eq(w),eq(i),eq(c))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->13 [style = solid, label="mock"];
10->3 [style = solid, label="config"];
23->25 [style = bold, label=""];
19->33 [style = solid, label="c"];
11->21 [style = bold, label=""];
18->1 [style = solid, label="mock"];
20->16 [style = bold, label=""];
19->1 [style = bold, label=""];
24->23 [style = bold, label=""];
15->33 [style = bold, label=""];
7->18 [style = bold, label=""];
1->28 [style = bold, label=""];
2->11 [style = solid, label="i"];
6->0 [style = bold, label=""];
19->11 [style = solid, label="c"];
2->15 [style = solid, label="i"];
17->10 [style = bold, label=""];
12->16 [style = solid, label="execConf"];
6->5 [style = solid, label="rCtx"];
18->13 [style = bold, label=""];
25->26 [style = bold, label=""];
32->6 [style = solid, label="mock"];
13->16 [style = solid, label="windowFunction"];
14->12 [style = bold, label=""];
13->31 [style = dashed, label="0"];
8->6 [style = bold, label=""];
12->17 [style = solid, label="execConf"];
28->15 [style = bold, label=""];
5->4 [style = bold, label=""];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
1->15 [style = solid, label="ctx"];
33->21 [style = bold, label=""];
15->27 [style = bold, label=""];
18->6 [style = solid, label="mock"];
27->24 [style = bold, label=""];
2->19 [style = bold, label=""];
2->28 [style = solid, label="i"];
32->2 [style = solid, label="mock"];
31->16 [style = solid, label="windowFunction"];
15->11 [style = bold, label=""];
32->31 [style = bold, label=""];
30->32 [style = bold, label=""];
4->33 [style = solid, label="w"];
3->8 [style = bold, label=""];
12->20 [style = bold, label=""];
22->18 [style = bold, label=""];
1->15 [style = bold, label=""];
32->1 [style = solid, label="mock"];
18->2 [style = solid, label="mock"];
19->28 [style = solid, label="c"];
16->17 [style = bold, label=""];
21->9 [style = bold, label=""];
10->8 [style = solid, label="config"];
2->33 [style = solid, label="i"];
0->5 [style = bold, label=""];
13->14 [style = bold, label=""];
32->19 [style = solid, label="mock"];
32->31 [style = solid, label="mock"];
31->14 [style = bold, label=""];
4->15 [style = solid, label="w"];
14->17 [style = solid, label="stringType"];
32->4 [style = solid, label="mock"];
26->29 [style = bold, label=""];
18->32 [style = dashed, label="0"];
14->16 [style = solid, label="stringType"];
19->15 [style = solid, label="c"];
18->4 [style = solid, label="mock"];
18->19 [style = solid, label="mock"];
6->0 [style = solid, label="rCtx"];
}
