digraph {
7 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),inputType.createSerializer(new ExecutionConfig()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),7000))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-3\",10000L,17500L),17499))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,actual,new Tuple3ResultSortComparator())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "expected.add(new Watermark(14600))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "expected.add(new Watermark(20000))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),11600))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testNotSideOutputDueToLatenessSessionWithLateness['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertEquals(null,sideActual)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expected.add(new Watermark(7400))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple3<String,Long,Long>> testHarness = createTestHarness(operator)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),10000))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ConcurrentLinkedQueue<Object> actual = testHarness.getOutput()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ConcurrentLinkedQueue<StreamRecord<Tuple2<String,Integer>>> sideActual = testHarness.getSideOutput(lateOutputTag)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expected.add(new Watermark(1999))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expected.add(new Watermark(11501))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1000))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testHarness.processWatermark(new Watermark(20000))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "actual = testHarness.getOutput()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.processWatermark(new Watermark(11501))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHarness.close()@@@45@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-5\",1000L,11500L),11499))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expected.add(new Watermark(4998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final int gapSize = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-8\",1000L,17500L),17499))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ConcurrentLinkedQueue<Object> expected = new ConcurrentLinkedQueue<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testHarness.processWatermark(new Watermark(1999))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple3<String,Long,Long>> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(operator,new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.close()@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final long lateness = 10000@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,actual,new Tuple3ResultSortComparator())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "sideActual = testHarness.getSideOutput(lateOutputTag)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(null,sideActual)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testNotSideOutputDueToLatenessSessionWithLateness['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),8500))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),14500))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testHarness.processWatermark(new Watermark(100000))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.processWatermark(new Watermark(4998))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),2000))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness.processWatermark(new Watermark(7400))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(gapSize)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new ReducedSessionWindowFunction()),EventTimeTrigger.create(),lateness,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ConcurrentLinkedQueue<StreamRecord<Tuple2<String,Integer>>> sideActual = testHarness.getSideOutput(lateOutputTag)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",11600L,14600L),14599))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-7\",1000L,14600L),14599))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final long lateness = 10@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.processWatermark(new Watermark(14600))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testNotSideOutputDueToLatenessSessionWithHugeLateness['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),14500))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-2\",10000L,14600L),14599))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expected.add(new Watermark(100000))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testHarness.open()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),4500))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36->6 [style = bold, label=""];
13->25 [style = bold, label=""];
16->3 [style = bold, label=""];
9->44 [style = solid, label="operator"];
15->13 [style = bold, label=""];
36->51 [style = bold, label=""];
4->24 [style = bold, label=""];
33->52 [style = bold, label=""];
50->23 [style = bold, label=""];
3->37 [style = bold, label=""];
50->46 [style = solid, label="actual"];
46->43 [style = bold, label=""];
22->16 [style = bold, label=""];
48->9 [style = solid, label="lateness"];
31->0 [style = bold, label=""];
28->11 [style = bold, label=""];
42->20 [style = bold, label=""];
34->15 [style = bold, label=""];
12->32 [style = bold, label=""];
41->4 [style = bold, label=""];
44->15 [style = bold, label=""];
23->46 [style = bold, label=""];
23->43 [style = solid, label="actual"];
14->38 [style = bold, label=""];
26->8 [style = bold, label=""];
20->9 [style = solid, label="gapSize"];
24->29 [style = bold, label=""];
19->33 [style = solid, label="sideActual"];
45->20 [style = bold, label=""];
18->9 [style = solid, label="lateness"];
29->16 [style = solid, label="sideActual"];
18->48 [style = dashed, label="0"];
48->27 [style = bold, label=""];
34->44 [style = dashed, label="0"];
49->50 [style = bold, label=""];
39->30 [style = bold, label=""];
13->43 [style = solid, label="expected"];
20->18 [style = bold, label=""];
7->9 [style = bold, label=""];
8->17 [style = bold, label=""];
35->23 [style = bold, label=""];
17->28 [style = bold, label=""];
24->22 [style = solid, label="actual"];
13->16 [style = solid, label="expected"];
19->23 [style = dashed, label="0"];
10->39 [style = bold, label=""];
38->49 [style = bold, label=""];
18->27 [style = bold, label=""];
5->12 [style = bold, label=""];
13->22 [style = solid, label="expected"];
11->10 [style = bold, label=""];
23->43 [style = solid, label="sideActual"];
6->36 [style = dashed, label="0"];
20->48 [style = bold, label=""];
23->19 [style = bold, label=""];
32->1 [style = bold, label=""];
27->7 [style = bold, label=""];
25->26 [style = bold, label=""];
2->14 [style = bold, label=""];
33->36 [style = bold, label=""];
6->41 [style = bold, label=""];
9->44 [style = bold, label=""];
47->20 [style = bold, label=""];
29->16 [style = solid, label="actual"];
43->33 [style = bold, label=""];
38->21 [style = bold, label=""];
30->40 [style = bold, label=""];
9->34 [style = solid, label="operator"];
7->9 [style = solid, label="stateDesc"];
22->3 [style = solid, label="sideActual"];
1->2 [style = bold, label=""];
13->46 [style = solid, label="expected"];
40->31 [style = bold, label=""];
52->36 [style = bold, label=""];
29->22 [style = bold, label=""];
21->49 [style = dashed, label="0"];
21->35 [style = bold, label=""];
19->43 [style = bold, label=""];
51->41 [style = bold, label=""];
0->5 [style = bold, label=""];
9->34 [style = bold, label=""];
}
