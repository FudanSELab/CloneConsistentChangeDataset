digraph {
1 [style = filled, label = "project.scheduleBuild2(0).waitForStart()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String stdout = runWith(Collections.singletonList(TEST_JOB_NAME)).stdout()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldStopSeveralWorkingBuilds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final FreeStyleProject project = createLongRunningProject(TEST_JOB_NAME)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(stdout,equalTo(\"Build '#1' stopped for job 'jobName'\" + LN))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "setupSlaveWithTwoExecutors()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "project.setConcurrentBuild(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldStopSeveralWorkingBuilds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "shouldStopLastBuild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "waitForLastBuildToStop(project)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "project.scheduleBuild2(0).waitForStart()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(stdout,equalTo(\"Build '#2' stopped for job 'jobName'\" + LN + \"Build '#1' stopped for job 'jobName'\" + LN))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->2 [style = solid, label="stdout"];
6->1 [style = bold, label=""];
2->11 [style = dashed, label="0"];
8->6 [style = bold, label=""];
7->11 [style = bold, label=""];
8->4 [style = bold, label=""];
5->6 [style = bold, label=""];
6->7 [style = bold, label=""];
10->8 [style = bold, label=""];
9->8 [style = bold, label=""];
11->3 [style = bold, label=""];
4->6 [style = bold, label=""];
4->5 [style = bold, label=""];
1->7 [style = bold, label=""];
7->2 [style = bold, label=""];
8->3 [style = solid, label="project"];
7->11 [style = solid, label="stdout"];
2->3 [style = bold, label=""];
0->8 [style = bold, label=""];
}
