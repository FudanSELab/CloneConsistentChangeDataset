digraph {
26 [style = filled, label = "assertEquals(1,rawInput.available())@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "InputStream rawInput = new ByteArrayInputStream(longerData)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertReadLittleEndian32['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(inputType.name(),input.isAtEnd())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "byte(( data@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertDataConsumed(data,input)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertDataConsumed(data,input)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertDataConsumed(data,input)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "int blockSize = 1@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CodedInputStream input = inputType.newDecoder(data,blockSize)@@@7@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertTrue(input.skipField(WireFormat.WIRETYPE_VARINT))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int blockSize = 1@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(value,input.readRawVarint64SlowPath())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertDataConsumed(data,input)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals((int)value,CodedInputStream.readRawVarint32(rawInput))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "byte(( data@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CodedInputStream input = CodedInputStream.newInstance(data)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int value@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "blockSize *= 2@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "byte(( longerData = new byte((((@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(value,input.readRawVarint64())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "input = CodedInputStream.newInstance(data)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(value,input.readRawVarint64())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals((int)value,input.readRawVarint32())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(value,input.readRawLittleEndian32())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertDataConsumed(data,input)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertDataConsumed(data,input)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(value,input.readRawVarint64SlowPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertDataConsumed(data,input)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "input = CodedInputStream.newInstance(new SmallBlockInputStream(data,blockSize))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "blockSize *= 2@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(input.skipField(WireFormat.WIRETYPE_VARINT))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertReadVarint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(inputType.name(),value,input.readRawLittleEndian32())@@@8@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(input.isAtEnd())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertTrue(input.isAtEnd())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "System.arraycopy(data,0,longerData,0,data.length)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(value,input.readRawLittleEndian32())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "blockSize <= 16@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "blockSize <= 16@@@5@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "long value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "byte(( data@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals((int)value,input.readRawVarint32())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertReadLittleEndian32['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertDataConsumed(data,input)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34->11 [style = solid, label="data"];
35->20 [style = dotted, label="true"];
34->43 [style = solid, label="data"];
49->43 [style = solid, label="blockSize"];
34->29 [style = solid, label="data"];
0->5 [style = dotted, label="true"];
43->45 [style = solid, label="input"];
41->19 [style = bold, label=""];
34->21 [style = solid, label="data"];
14->0 [style = dotted, label="true"];
13->2 [style = solid, label="value"];
16->13 [style = dotted, label="true"];
35->41 [style = bold, label=""];
7->9 [style = solid, label="value"];
8->14 [style = solid, label="blockSize"];
11->9 [style = bold, label=""];
36->11 [style = bold, label=""];
21->28 [style = bold, label=""];
34->46 [style = solid, label="data"];
8->0 [style = bold, label=""];
31->50 [style = bold, label=""];
16->7 [style = dotted, label="true"];
35->47 [style = dotted, label="true"];
34->19 [style = solid, label="data"];
34->45 [style = solid, label="data"];
32->25 [style = bold, label=""];
27->33 [style = solid, label="value"];
2->15 [style = bold, label=""];
30->40 [style = bold, label=""];
1->6 [style = dotted, label="true"];
27->31 [style = solid, label="value"];
7->34 [style = dashed, label="0"];
27->40 [style = solid, label="value"];
10->15 [style = dashed, label="0"];
5->10 [style = bold, label=""];
14->2 [style = dotted, label="true"];
11->38 [style = solid, label="input"];
23->30 [style = bold, label=""];
2->4 [style = solid, label="blockSize"];
0->10 [style = dotted, label="true"];
49->35 [style = solid, label="blockSize"];
35->20 [style = bold, label=""];
34->50 [style = solid, label="data"];
50->18 [style = bold, label=""];
3->38 [style = dashed, label="0"];
24->44 [style = bold, label=""];
27->22 [style = solid, label="value"];
42->43 [style = solid, label="blockSize"];
8->0 [style = solid, label="blockSize"];
37->29 [style = bold, label=""];
39->45 [style = bold, label=""];
35->49 [style = dotted, label="true"];
27->28 [style = solid, label="value"];
48->33 [style = solid, label="rawInput"];
1->11 [style = bold, label=""];
34->32 [style = solid, label="data"];
2->0 [style = solid, label="blockSize"];
35->44 [style = dotted, label="true"];
22->38 [style = bold, label=""];
34->30 [style = solid, label="data"];
25->29 [style = solid, label="input"];
25->37 [style = bold, label=""];
12->14 [style = bold, label=""];
34->38 [style = solid, label="data"];
48->33 [style = bold, label=""];
35->46 [style = dotted, label="true"];
27->24 [style = solid, label="value"];
10->2 [style = bold, label=""];
49->20 [style = solid, label="blockSize"];
35->18 [style = dotted, label="true"];
17->46 [style = bold, label=""];
18->24 [style = bold, label=""];
21->23 [style = solid, label="input"];
49->18 [style = solid, label="blockSize"];
12->0 [style = solid, label="blockSize"];
49->35 [style = bold, label=""];
47->31 [style = bold, label=""];
0->4 [style = dotted, label="true"];
4->0 [style = dashed, label="0"];
8->14 [style = bold, label=""];
9->22 [style = dashed, label="0"];
5->2 [style = dashed, label="0"];
41->48 [style = solid, label="longerData"];
35->31 [style = dotted, label="true"];
33->26 [style = bold, label=""];
47->50 [style = solid, label="input"];
34->25 [style = solid, label="data"];
10->46 [style = dashed, label="0"];
2->0 [style = bold, label=""];
5->17 [style = dashed, label="0"];
34->23 [style = solid, label="data"];
42->35 [style = solid, label="blockSize"];
42->20 [style = solid, label="blockSize"];
28->23 [style = bold, label=""];
42->47 [style = solid, label="blockSize"];
3->8 [style = bold, label=""];
29->42 [style = bold, label=""];
6->4 [style = solid, label="data"];
40->32 [style = bold, label=""];
11->22 [style = bold, label=""];
14->8 [style = dotted, label="true"];
9->3 [style = bold, label=""];
41->19 [style = solid, label="longerData"];
8->4 [style = solid, label="blockSize"];
34->20 [style = solid, label="data"];
35->43 [style = dotted, label="true"];
43->39 [style = bold, label=""];
4->5 [style = bold, label=""];
12->14 [style = solid, label="blockSize"];
15->8 [style = bold, label=""];
35->45 [style = dotted, label="true"];
35->39 [style = dotted, label="true"];
7->0 [style = solid, label="data"];
20->17 [style = bold, label=""];
36->27 [style = dotted, label="true"];
19->48 [style = bold, label=""];
34->44 [style = solid, label="data"];
35->24 [style = dotted, label="true"];
49->47 [style = solid, label="blockSize"];
45->49 [style = bold, label=""];
0->2 [style = bold, label=""];
6->11 [style = solid, label="data"];
34->18 [style = solid, label="data"];
27->17 [style = solid, label="value"];
46->47 [style = bold, label=""];
20->46 [style = solid, label="input"];
42->18 [style = solid, label="blockSize"];
44->43 [style = bold, label=""];
42->35 [style = bold, label=""];
1->7 [style = dotted, label="true"];
18->44 [style = solid, label="input"];
14->15 [style = dotted, label="true"];
14->0 [style = bold, label=""];
0->4 [style = bold, label=""];
7->5 [style = solid, label="value"];
30->32 [style = solid, label="input"];
14->12 [style = bold, label=""];
38->21 [style = bold, label=""];
35->17 [style = dotted, label="true"];
34->47 [style = solid, label="data"];
35->50 [style = dotted, label="true"];
0->2 [style = dotted, label="true"];
36->34 [style = dotted, label="true"];
16->12 [style = bold, label=""];
}
