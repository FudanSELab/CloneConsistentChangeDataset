digraph {
5 [style = filled, label = "client.create().forPath(\"/foo\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.fail()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.inTransaction().check().withVersion(stat.getVersion() + 1).forPath(\"/foo\").and().create().forPath(\"/bar\").and().commit()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Stat stat = client.setData().forPath(\"/foo\",\"new\".getBytes())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CuratorOp statOp = client.transactionOp().check().withVersion(stat.getVersion() + 1).forPath(\"/foo\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "client.transaction().forOperations(statOp,createOp)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "KeeperException.BadVersionException correct@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "KeeperException.BadVersionException correct@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCheckVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertNull(client.checkExists().forPath(\"/bar\"))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{}@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertNull(client.checkExists().forPath(\"/bar\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testCheckVersion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CuratorOp createOp = client.transactionOp().create().forPath(\"/bar\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testCheckVersion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "fail()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->3 [style = bold, label=""];
5->10 [style = bold, label=""];
8->16 [style = bold, label=""];
0->9 [style = bold, label=""];
1->8 [style = bold, label=""];
10->15 [style = bold, label=""];
8->3 [style = bold, label=""];
0->11 [style = bold, label=""];
3->13 [style = dashed, label="0"];
17->19 [style = bold, label=""];
15->19 [style = solid, label="statOp"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
15->17 [style = bold, label=""];
3->2 [style = bold, label=""];
19->9 [style = bold, label=""];
18->6 [style = bold, label=""];
17->19 [style = solid, label="createOp"];
11->13 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
6->2 [style = solid, label="client"];
9->3 [style = bold, label=""];
9->11 [style = dashed, label="0"];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
13->2 [style = bold, label=""];
}
