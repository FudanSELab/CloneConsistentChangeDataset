digraph {
9 [style = filled, label = "List<SpellCheckResponse.Suggestion> sugs = response.getSuggestions()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "query.set(SpellingParams.SPELLCHECK_EXTENDED_RESULTS,true)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SpellCheckResponse.Suggestion sug = response.getSuggestion(\"samsang\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"samsung\",response.getFirstSuggestion(\"samsang\"))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "server.commit(true,true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SolrQuery query = new SolrQuery(\"*:*\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "QueryRequest request = new QueryRequest(query)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(sug.getToken().length() > 0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(sug.getAlternatives().size(),sug.getAlternativeFrequencies().size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "server.commit(true,true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(sug.getEndOffset() > 0)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SpellCheckResponse response = request.process(server).getSpellCheckResponse()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "query.set(SpellingParams.SPELLCHECK_Q,\"samsang\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "doc.setField(\"id\",\"111\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"samsung\",sugs.get(0).getAlternatives().get(0))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "query.set(SpellingParams.SPELLCHECK_Q,\"samsang\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "server.add(doc)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "SolrQuery query = new SolrQuery(\"*:*\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testSpellCheckResponse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "query.set(SpellingParams.SPELLCHECK_BUILD,true)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doc.setField(field,\"Samsung\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSpellCheckResponse_Extended['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"samsung\",response.getFirstSuggestion(\"samsang\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "getSolrServer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SolrQuery query = new SolrQuery(\"name:samsang\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "query.set(\"spellcheck\",true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SolrInputDocument doc = new SolrInputDocument()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(sugs.get(0).getAlternatives().size(),sugs.get(0).getAlternativeFrequencies().size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testSpellCheckResponse_Extended['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertTrue(sug.getNumFound() > 0)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "response.getSuggestions().get(0).getAlternatives().get(0)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"samsung\",sug.getAlternatives().get(0))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "query.set(CommonParams.QT,\"/spell\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "server.deleteByQuery(\"*:*\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24->10 [style = bold, label=""];
6->17 [style = bold, label=""];
23->31 [style = bold, label=""];
8->33 [style = bold, label=""];
15->23 [style = bold, label=""];
20->13 [style = bold, label=""];
4->24 [style = bold, label=""];
23->5 [style = bold, label=""];
1->15 [style = bold, label=""];
27->28 [style = bold, label=""];
32->0 [style = bold, label=""];
32->15 [style = solid, label="query"];
29->0 [style = bold, label=""];
3->11 [style = bold, label=""];
12->32 [style = bold, label=""];
19->29 [style = dashed, label="0"];
33->1 [style = bold, label=""];
25->2 [style = bold, label=""];
9->16 [style = bold, label=""];
26->11 [style = bold, label=""];
19->0 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
18->20 [style = bold, label=""];
30->11 [style = bold, label=""];
22->18 [style = bold, label=""];
13->12 [style = bold, label=""];
12->29 [style = bold, label=""];
29->15 [style = solid, label="query"];
16->21 [style = bold, label=""];
2->15 [style = bold, label=""];
0->8 [style = bold, label=""];
19->15 [style = solid, label="query"];
11->22 [style = bold, label=""];
5->31 [style = dashed, label="0"];
11->27 [style = bold, label=""];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
19->32 [style = dashed, label="0"];
12->19 [style = bold, label=""];
1->25 [style = dashed, label="0"];
8->25 [style = bold, label=""];
22->13 [style = solid, label="doc"];
14->6 [style = bold, label=""];
17->4 [style = bold, label=""];
28->22 [style = bold, label=""];
21->14 [style = bold, label=""];
}
