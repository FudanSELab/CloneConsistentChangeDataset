digraph {
25 [style = filled, label = "assertEquals(ko1,ko2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ko1.addObject(\"Key 3\",\"Object 2\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "KeyedObject ko2 = (KeyedObject)ko1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertTrue(ko2.getObject() == obj1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "KeyedObject<String> ko2 = (KeyedObject)ko1.clone()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ko1.addObject(\"Key 1\",\"Object 1\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)TestUtils.serialised(ko1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Object obj1 = new ArrayList<String>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ko1 = new KeyedObject(\"Test\",obj1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "KeyedObject<String> ko1 = new KeyedObject<>(\"Test\",obj1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ko1.addObject(\"Key 2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ko1 = new KeyedObject<>(\"Test\",obj1)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "KeyedObject ko1 = new KeyedObject(\"Test\",obj1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(ko1 != ko2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Object obj1 = new ArrayList()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->1 [style = solid, label="ko2"];
5->3 [style = bold, label=""];
22->26 [style = bold, label=""];
0->6 [style = solid, label="ko2"];
4->18 [style = solid, label="obj1"];
21->26 [style = solid, label="ko1"];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
17->19 [style = solid, label="obj1"];
0->6 [style = bold, label=""];
4->8 [style = solid, label="obj1"];
26->25 [style = bold, label=""];
21->25 [style = solid, label="ko1"];
10->11 [style = solid, label="ko2"];
4->18 [style = bold, label=""];
4->2 [style = bold, label=""];
18->6 [style = solid, label="ko1"];
24->22 [style = bold, label=""];
1->13 [style = bold, label=""];
17->19 [style = bold, label=""];
19->16 [style = bold, label=""];
3->19 [style = dashed, label="0"];
3->10 [style = bold, label=""];
0->14 [style = solid, label="ko2"];
16->11 [style = solid, label="ko2"];
15->17 [style = bold, label=""];
4->2 [style = solid, label="obj1"];
5->3 [style = solid, label="obj1"];
26->25 [style = solid, label="ko2"];
2->0 [style = bold, label=""];
21->20 [style = bold, label=""];
5->17 [style = dashed, label="0"];
23->21 [style = bold, label=""];
3->11 [style = solid, label="ko1"];
12->14 [style = bold, label=""];
2->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
5->21 [style = dashed, label="0"];
5->13 [style = solid, label="obj1"];
14->8 [style = bold, label=""];
10->16 [style = dashed, label="0"];
20->24 [style = bold, label=""];
1->25 [style = dashed, label="0"];
17->13 [style = solid, label="obj1"];
13->4 [style = bold, label=""];
6->12 [style = bold, label=""];
11->7 [style = bold, label=""];
18->0 [style = bold, label=""];
19->11 [style = solid, label="ko1"];
10->1 [style = solid, label="ko2"];
10->11 [style = bold, label=""];
2->6 [style = solid, label="ko1"];
}
