digraph {
89 [style = filled, label = "testRebalanceWithIgnoredUnassignedShards['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(numStarted,1)@@@74@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@87@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int numStarted = 0@@@78@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "int numRelocating = 0@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "numStarted++@@@63@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "allocateTest1.set(true)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "assertEquals(numStarted,1)@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "int i = 0@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "logger.debug(\"reroute and check that nothing has changed\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final AtomicBoolean hasFetches = new AtomicBoolean(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@84@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "numStarted++@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == STARTED@@@61@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "i++@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test1\",INITIALIZING))@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertEquals(numRelocating,1)@@@92@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "i++@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "clusterState.routingTable().index(\"test\").shard(i).primaryShard().state() == RELOCATING@@@64@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "logger.info(\"start two nodes\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test\",INITIALIZING))@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "int i = 0@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "logger.info(\"start two nodes\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@73@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i++@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "clusterState = resultingState@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "logger.debug(\"start all the primary shards for test\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "final AtomicBoolean allocateTest1 = new AtomicBoolean(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "int i = 0@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "i++@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "int i = 0@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(UNASSIGNED))@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.EMPTY,new TestGatewayAllocator(){@Override public void allocateUnassigned(RoutingAllocation allocation){if (allocateTest1.get() == false) {RoutingNodes.UnassignedShards unassigned = allocation.routingNodes().unassigned()RoutingNodes.UnassignedShards.UnassignedIterator iterator = unassigned.iterator()while (iterator.hasNext()) {ShardRouting next = iterator.next()if (\"test1\".equals(next.index().getName())) {iterator.removeAndIgnore(UnassignedInfo.AllocationStatus.NO_ATTEMPT,allocation.changes())}}}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13e0ff3allocation}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "i++@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(numRelocating,1)@@@75@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).build()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "int i = 0@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "i++@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertThat(resultingState,equalTo(clusterState))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString()).build(),new TestGatewayAllocator(){@Override public void allocateUnassigned(RoutingAllocation allocation){if (hasFetches.get()) {allocation.setHasPendingAsyncFetch()}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13e0d10allocation}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "numRelocating++@@@66@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "int i = 0@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "logger.debug(\"now, start 1 more node, check that rebalancing will not happen since we have shard sync going on\")@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "testRebalanceWhileShardFetching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
107 [style = filled, label = "int i = 0@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assertThat(resultingState,not(equalTo(clusterState)))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(2).numberOfReplicas(0)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT).put(IndexMetaData.INDEX_ROUTING_EXCLUDE_GROUP_SETTING.getKey() + \"_id\",\"node1,node2\")).numberOfShards(2).numberOfReplicas(0)).build()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "int i = 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
86 [style = filled, label = "ClusterState resultingState = strategy.reroute(clusterState,\"reroute\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@73@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "numRelocating++@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "int i = 0@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "i++@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(1))@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@53@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(1))@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "logger.debug(\"now set allocateTest1 to true and reroute we should see the (test1( index initializing\")@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test\")).addAsNew(metaData.index(\"test1\")).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@81@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@64@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "resultingState = strategy.reroute(clusterState,\"reroute\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "logger.debug(\"now start initializing shards and expect exactly one rebalance\" + \" from node1 to node 2 since index (test( is all on node1\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test\")).addAsNew(metaData.index(\"test1\")).build()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "numRelocating++@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "logger.debug(\"now set hasFetches to true and reroute we should now see exactly one relocating shard\")@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "numStarted++@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int numRelocating = 0@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int numStarted = 0@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "logger.debug(\"now, start 1 more node, check that rebalancing will not happen since we unassigned shards\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "int i = 0@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testRebalanceWhileShardFetching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->30 [style = bold, label=""];
82->79 [style = solid, label="resultingState"];
22->29 [style = bold, label=""];
23->70 [style = solid, label="clusterState"];
32->23 [style = bold, label=""];
43->46 [style = dotted, label="true"];
68->72 [style = bold, label=""];
43->4 [style = bold, label=""];
23->32 [style = bold, label=""];
75->77 [style = dotted, label="true"];
14->65 [style = dashed, label="0"];
54->72 [style = dashed, label="0"];
20->7 [style = bold, label=""];
53->55 [style = bold, label=""];
71->75 [style = bold, label=""];
23->44 [style = dotted, label="true"];
60->16 [style = dotted, label="true"];
19->30 [style = solid, label="i"];
3->64 [style = bold, label=""];
52->26 [style = bold, label=""];
69->94 [style = solid, label="numStarted"];
47->98 [style = bold, label=""];
60->16 [style = bold, label=""];
89->96 [style = bold, label=""];
20->5 [style = solid, label="i"];
48->0 [style = dotted, label="true"];
62->46 [style = bold, label=""];
15->22 [style = bold, label=""];
73->83 [style = bold, label=""];
18->41 [style = solid, label="numStarted"];
19->23 [style = bold, label=""];
21->66 [style = solid, label="numStarted"];
23->32 [style = dotted, label="true"];
40->81 [style = bold, label=""];
22->15 [style = solid, label="i"];
19->32 [style = dotted, label="true"];
62->46 [style = solid, label="i"];
3->6 [style = bold, label=""];
19->23 [style = dotted, label="true"];
13->51 [style = dotted, label="true"];
43->14 [style = bold, label=""];
83->78 [style = solid, label="i"];
65->62 [style = bold, label=""];
58->48 [style = solid, label="i"];
31->34 [style = dotted, label="true"];
39->24 [style = bold, label=""];
7->56 [style = bold, label=""];
46->37 [style = bold, label=""];
64->34 [style = solid, label="i"];
53->34 [style = bold, label=""];
26->40 [style = bold, label=""];
36->46 [style = bold, label=""];
21->18 [style = bold, label=""];
59->13 [style = bold, label=""];
102->84 [style = solid, label="i"];
54->27 [style = bold, label=""];
44->30 [style = bold, label=""];
23->82 [style = solid, label="clusterState"];
34->55 [style = bold, label=""];
16->6 [style = bold, label=""];
1->16 [style = dotted, label="false"];
3->6 [style = dotted, label="true"];
90->75 [style = bold, label=""];
4->37 [style = solid, label="i"];
52->43 [style = bold, label=""];
70->107 [style = bold, label=""];
93->13 [style = bold, label=""];
51->82 [style = dashed, label="0"];
84->95 [style = bold, label=""];
80->92 [style = bold, label=""];
10->11 [style = solid, label="resultState"];
82->105 [style = solid, label="resultingState"];
13->10 [style = bold, label=""];
11->105 [style = dashed, label="0"];
5->7 [style = solid, label="clusterState"];
46->63 [style = bold, label=""];
31->34 [style = bold, label=""];
43->14 [style = dotted, label="true"];
104->106 [style = bold, label=""];
22->13 [style = bold, label=""];
85->78 [style = bold, label=""];
37->47 [style = dotted, label="true"];
21->79 [style = dashed, label="0"];
47->4 [style = bold, label=""];
63->5 [style = bold, label=""];
6->48 [style = bold, label=""];
13->51 [style = bold, label=""];
35->6 [style = bold, label=""];
83->80 [style = bold, label=""];
38->25 [style = bold, label=""];
57->22 [style = solid, label="i"];
40->50 [style = bold, label=""];
77->104 [style = bold, label=""];
97->103 [style = bold, label=""];
0->1 [style = dotted, label="true"];
58->33 [style = solid, label="numRelocating"];
14->43 [style = solid, label="i"];
14->43 [style = bold, label=""];
22->28 [style = dotted, label="true"];
80->17 [style = bold, label=""];
76->106 [style = solid, label="numRelocating"];
94->88 [style = bold, label=""];
6->48 [style = solid, label="i"];
39->24 [style = solid, label="clusterState"];
79->73 [style = solid, label="clusterState"];
91->84 [style = solid, label="i"];
20->11 [style = solid, label="clusterState"];
75->90 [style = dotted, label="true"];
53->34 [style = solid, label="i"];
24->65 [style = solid, label="clusterState"];
28->57 [style = bold, label=""];
107->22 [style = solid, label="i"];
12->37 [style = bold, label=""];
67->22 [style = solid, label="i"];
13->10 [style = dotted, label="true"];
20->51 [style = solid, label="clusterState"];
12->47 [style = bold, label=""];
51->11 [style = bold, label=""];
75->87 [style = dotted, label="true"];
31->66 [style = bold, label=""];
58->17 [style = solid, label="numRelocating"];
33->6 [style = bold, label=""];
10->51 [style = bold, label=""];
18->16 [style = solid, label="numRelocating"];
77->69 [style = dotted, label="true"];
51->21 [style = solid, label="resultState"];
22->29 [style = dotted, label="true"];
50->26 [style = bold, label=""];
46->12 [style = dotted, label="true"];
42->52 [style = bold, label=""];
101->91 [style = bold, label=""];
16->41 [style = solid, label="numRelocating"];
13->97 [style = dashed, label="0"];
37->5 [style = bold, label=""];
0->60 [style = dotted, label="false"];
30->23 [style = bold, label=""];
15->57 [style = bold, label=""];
4->12 [style = bold, label=""];
84->99 [style = dotted, label="true"];
19->23 [style = solid, label="i"];
90->75 [style = solid, label="i"];
7->56 [style = solid, label="resultState"];
31->53 [style = dotted, label="true"];
26->40 [style = solid, label="clusterState"];
17->94 [style = solid, label="numStarted"];
78->80 [style = bold, label=""];
48->6 [style = dotted, label="true"];
2->68 [style = dashed, label="0"];
15->59 [style = bold, label=""];
8->53 [style = bold, label=""];
21->1 [style = solid, label="numStarted"];
52->26 [style = dotted, label="true"];
20->49 [style = solid, label="clusterState"];
23->86 [style = solid, label="clusterState"];
5->7 [style = bold, label=""];
30->86 [style = bold, label=""];
14->36 [style = bold, label=""];
46->4 [style = bold, label=""];
77->69 [style = bold, label=""];
2->54 [style = bold, label=""];
91->84 [style = bold, label=""];
52->40 [style = dotted, label="true"];
56->49 [style = bold, label=""];
48->0 [style = bold, label=""];
60->48 [style = bold, label=""];
18->41 [style = solid, label="numRelocating"];
22->57 [style = dotted, label="true"];
31->34 [style = solid, label="i"];
80->92 [style = dotted, label="true"];
23->15 [style = bold, label=""];
37->12 [style = dotted, label="true"];
46->37 [style = solid, label="i"];
31->53 [style = solid, label="i"];
84->99 [style = bold, label=""];
102->84 [style = bold, label=""];
64->31 [style = solid, label="i"];
84->101 [style = dotted, label="true"];
27->38 [style = bold, label=""];
20->5 [style = bold, label=""];
6->0 [style = bold, label=""];
30->23 [style = solid, label="i"];
3->48 [style = dotted, label="true"];
50->52 [style = solid, label="i"];
87->77 [style = bold, label=""];
23->19 [style = solid, label="i"];
13->11 [style = dotted, label="true"];
10->13 [style = solid, label="i"];
42->50 [style = solid, label="i"];
71->75 [style = solid, label="i"];
24->42 [style = bold, label=""];
77->104 [style = dotted, label="false"];
56->20 [style = bold, label=""];
86->70 [style = bold, label=""];
82->105 [style = bold, label=""];
13->97 [style = bold, label=""];
43->65 [style = bold, label=""];
46->4 [style = solid, label="i"];
49->23 [style = solid, label="i"];
1->35 [style = dotted, label="true"];
20->56 [style = solid, label="clusterState"];
81->43 [style = bold, label=""];
83->80 [style = solid, label="i"];
93->10 [style = solid, label="i"];
66->41 [style = bold, label=""];
49->19 [style = bold, label=""];
11->10 [style = bold, label=""];
34->31 [style = solid, label="i"];
81->43 [style = solid, label="i"];
46->14 [style = bold, label=""];
10->13 [style = bold, label=""];
37->4 [style = dotted, label="true"];
37->12 [style = bold, label=""];
34->31 [style = bold, label=""];
30->32 [style = bold, label=""];
34->41 [style = bold, label=""];
76->71 [style = bold, label=""];
93->13 [style = solid, label="i"];
3->48 [style = bold, label=""];
67->15 [style = bold, label=""];
43->36 [style = bold, label=""];
96->68 [style = bold, label=""];
107->15 [style = solid, label="i"];
45->96 [style = dashed, label="0"];
107->15 [style = bold, label=""];
75->87 [style = bold, label=""];
69->90 [style = bold, label=""];
43->36 [style = dotted, label="true"];
37->46 [style = bold, label=""];
78->80 [style = solid, label="i"];
15->22 [style = dotted, label="true"];
61->45 [style = bold, label=""];
71->90 [style = solid, label="i"];
1->66 [style = solid, label="numStarted"];
41->17 [style = bold, label=""];
1->48 [style = bold, label=""];
5->100 [style = dashed, label="0"];
31->53 [style = bold, label=""];
95->74 [style = bold, label=""];
23->30 [style = dotted, label="true"];
15->57 [style = dotted, label="true"];
34->55 [style = dotted, label="true"];
5->56 [style = dotted, label="true"];
0->60 [style = bold, label=""];
106->88 [style = solid, label="numRelocating"];
58->3 [style = bold, label=""];
11->21 [style = bold, label=""];
105->79 [style = bold, label=""];
23->19 [style = bold, label=""];
15->22 [style = solid, label="i"];
58->3 [style = solid, label="i"];
19->30 [style = bold, label=""];
104->90 [style = bold, label=""];
48->1 [style = dotted, label="true"];
31->55 [style = dotted, label="true"];
52->50 [style = dotted, label="true"];
75->94 [style = bold, label=""];
16->33 [style = dotted, label="true"];
92->85 [style = bold, label=""];
33->17 [style = solid, label="numRelocating"];
37->46 [style = solid, label="i"];
76->88 [style = solid, label="numRelocating"];
56->86 [style = dashed, label="0"];
29->28 [style = bold, label=""];
98->20 [style = solid, label="i"];
55->8 [style = bold, label=""];
2->65 [style = solid, label="strategy"];
34->8 [style = dotted, label="true"];
23->105 [style = solid, label="clusterState"];
10->103 [style = dashed, label="0"];
51->11 [style = solid, label="resultState"];
16->33 [style = bold, label=""];
18->35 [style = solid, label="numStarted"];
5->51 [style = solid, label="clusterState"];
52->50 [style = bold, label=""];
22->15 [style = bold, label=""];
46->37 [style = dotted, label="true"];
17->76 [style = bold, label=""];
81->14 [style = solid, label="i"];
5->7 [style = dotted, label="true"];
4->37 [style = bold, label=""];
16->48 [style = bold, label=""];
0->1 [style = bold, label=""];
24->36 [style = solid, label="clusterState"];
40->47 [style = solid, label="clusterState"];
49->70 [style = dashed, label="0"];
48->31 [style = bold, label=""];
80->85 [style = dotted, label="true"];
5->56 [style = solid, label="clusterState"];
57->22 [style = bold, label=""];
25->39 [style = bold, label=""];
3->0 [style = dotted, label="true"];
45->2 [style = bold, label=""];
98->5 [style = solid, label="i"];
35->41 [style = solid, label="numStarted"];
5->100 [style = bold, label=""];
15->93 [style = bold, label=""];
46->4 [style = dotted, label="true"];
86->70 [style = solid, label="resultingState"];
48->3 [style = solid, label="i"];
84->91 [style = dotted, label="true"];
1->35 [style = bold, label=""];
79->102 [style = bold, label=""];
67->15 [style = solid, label="i"];
100->23 [style = bold, label=""];
5->20 [style = bold, label=""];
49->19 [style = solid, label="i"];
9->45 [style = bold, label=""];
102->91 [style = solid, label="i"];
98->5 [style = bold, label=""];
104->106 [style = dotted, label="true"];
103->82 [style = bold, label=""];
32->44 [style = bold, label=""];
29->22 [style = bold, label=""];
15->57 [style = solid, label="i"];
3->48 [style = solid, label="i"];
50->52 [style = bold, label=""];
62->37 [style = solid, label="i"];
17->69 [style = solid, label="numStarted"];
106->90 [style = bold, label=""];
56->49 [style = solid, label="resultState"];
15->29 [style = dotted, label="true"];
64->31 [style = bold, label=""];
19->30 [style = dotted, label="true"];
1->16 [style = bold, label=""];
48->3 [style = bold, label=""];
99->101 [style = bold, label=""];
74->73 [style = bold, label=""];
3->6 [style = solid, label="i"];
19->67 [style = bold, label=""];
5->10 [style = solid, label="clusterState"];
57->29 [style = bold, label=""];
34->53 [style = dotted, label="true"];
18->58 [style = bold, label=""];
72->42 [style = bold, label=""];
42->52 [style = solid, label="i"];
55->34 [style = bold, label=""];
80->78 [style = dotted, label="true"];
5->20 [style = dotted, label="true"];
10->51 [style = solid, label="resultState"];
}
