digraph {
33 [style = filled, label = "IdealState idealState = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,TEST_DB)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "_gSetupTool.addResourceToCluster(CLUSTER_NAME,TEST_DB,100,\"OnlineOffline\",RebalanceMode.FULL_AUTO.name(),0,25)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "_controller.syncStart()@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(ev.getPartitionSet().size(),100)@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "_participants(i( = new MockParticipantManager(ZK_ADDR,CLUSTER_NAME,instanceName)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "i < NODE_NR@@@19@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "System.out.println(\"START \" + CLASS_NAME + \" at \" + new Date(System.currentTimeMillis()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < NODE_NR@@@7@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "_gSetupTool.addCluster(CLUSTER_NAME,true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByPolling(new ExternalViewBalancedVerifier(_gZkClient,CLUSTER_NAME,TEST_DB),10000,100)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "i++@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "_participants(i(.syncStart()@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "_gSetupTool.rebalanceStorageCluster(CLUSTER_NAME,TEST_DB,3)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "_controller = new ClusterControllerManager(ZK_ADDR,CLUSTER_NAME,controllerName)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "_controller = new ClusterControllerManager(ZK_ADDR,CLUSTER_NAME,controllerName)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new ExternalViewBalancedVerifier(_gZkClient,CLUSTER_NAME,TEST_DB))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "beforeClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "_gSetupTool.addInstanceToCluster(CLUSTER_NAME,storageNodeName)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(ev.getPartitionSet().size(),25 * (i + 1))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "_gSetupTool.addResourceToCluster(CLUSTER_NAME,TEST_DB,20,STATE_MODEL)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String storageNodeName = PARTICIPANT_PREFIX + \"_\" + (START_PORT + i)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "ExternalView ev = manager.getHelixDataAccessor().getProperty(accessor.keyBuilder().externalView(TEST_DB))@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "_gSetupTool.rebalanceStorageCluster(CLUSTER_NAME,TEST_DB,1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "beforeClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "i++@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String controllerName = CONTROLLER_PREFIX + \"_0\"@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_gSetupTool.addResourceToCluster(CLUSTER_NAME,TEST_DB,100,\"OnlineOffline\",RebalanceMode.FULL_AUTO + \"\",0,25)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "String instanceName = PARTICIPANT_PREFIX + \"_\" + (START_PORT + i)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Thread.sleep(100)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "String storageNodeName = \"localhost_\" + (START_PORT + i)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < 3@@@28@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "setupCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "idealState.setRebalancerClassName(.getName())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "_gSetupTool.addInstanceToCluster(CLUSTER_NAME,storageNodeName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(result)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(result)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "int i = 0@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "_gSetupTool.getClusterManagementTool().setResourceIdealState(CLUSTER_NAME,TEST_DB,idealState)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8->26 [style = solid, label="i"];
16->9 [style = dotted, label="true"];
37->11 [style = bold, label=""];
14->0 [style = dotted, label="true"];
26->38 [style = dashed, label="0"];
8->15 [style = solid, label="i"];
10->19 [style = bold, label=""];
10->35 [style = bold, label=""];
20->12 [style = solid, label="instanceName"];
16->20 [style = dotted, label="true"];
23->3 [style = solid, label="result"];
7->15 [style = solid, label="i"];
18->13 [style = solid, label="controllerName"];
21->2 [style = bold, label=""];
15->8 [style = dotted, label="true"];
15->0 [style = bold, label=""];
7->38 [style = solid, label="i"];
2->24 [style = bold, label=""];
0->36 [style = dashed, label="0"];
15->26 [style = dotted, label="true"];
6->16 [style = solid, label="i"];
11->28 [style = bold, label=""];
15->38 [style = bold, label=""];
12->21 [style = bold, label=""];
1->34 [style = dashed, label="0"];
34->33 [style = bold, label=""];
14->22 [style = bold, label=""];
26->14 [style = bold, label=""];
35->14 [style = solid, label="i"];
23->3 [style = bold, label=""];
27->16 [style = bold, label=""];
15->14 [style = dotted, label="true"];
16->4 [style = dotted, label="true"];
32->26 [style = bold, label=""];
31->11 [style = bold, label=""];
26->14 [style = solid, label="storageNodeName"];
0->10 [style = solid, label="storageNodeName"];
22->18 [style = bold, label=""];
5->6 [style = bold, label=""];
26->0 [style = solid, label="i"];
39->7 [style = bold, label=""];
27->16 [style = solid, label="i"];
33->30 [style = bold, label=""];
16->21 [style = dotted, label="true"];
14->8 [style = bold, label=""];
10->19 [style = solid, label="controllerName"];
8->38 [style = solid, label="i"];
16->20 [style = bold, label=""];
19->22 [style = bold, label=""];
16->24 [style = dotted, label="true"];
15->36 [style = bold, label=""];
4->5 [style = dotted, label="true"];
1->39 [style = dashed, label="0"];
6->20 [style = solid, label="i"];
8->15 [style = bold, label=""];
4->17 [style = bold, label=""];
17->6 [style = bold, label=""];
28->39 [style = bold, label=""];
30->32 [style = bold, label=""];
38->14 [style = solid, label="storageNodeName"];
16->23 [style = bold, label=""];
1->7 [style = bold, label=""];
35->14 [style = bold, label=""];
4->17 [style = dotted, label="false"];
12->6 [style = solid, label="i"];
13->27 [style = bold, label=""];
26->35 [style = solid, label="i"];
7->15 [style = bold, label=""];
35->0 [style = solid, label="i"];
7->8 [style = solid, label="i"];
16->29 [style = dotted, label="true"];
33->32 [style = solid, label="idealState"];
4->5 [style = bold, label=""];
26->14 [style = solid, label="i"];
16->12 [style = dotted, label="true"];
16->2 [style = dotted, label="true"];
28->34 [style = bold, label=""];
24->29 [style = solid, label="result"];
9->4 [style = bold, label=""];
29->9 [style = bold, label=""];
28->1 [style = bold, label=""];
24->29 [style = bold, label=""];
27->20 [style = solid, label="i"];
14->10 [style = dotted, label="true"];
38->14 [style = bold, label=""];
15->26 [style = bold, label=""];
0->10 [style = bold, label=""];
12->5 [style = solid, label="i"];
14->0 [style = bold, label=""];
6->16 [style = bold, label=""];
25->11 [style = bold, label=""];
12->4 [style = solid, label="i"];
20->12 [style = bold, label=""];
18->13 [style = bold, label=""];
15->38 [style = dotted, label="true"];
14->35 [style = dotted, label="true"];
7->26 [style = solid, label="i"];
16->6 [style = dotted, label="true"];
19->18 [style = solid, label="_controller"];
}
