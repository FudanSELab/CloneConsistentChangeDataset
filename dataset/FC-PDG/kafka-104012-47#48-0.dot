digraph {
19 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(getAdded(owned,oldAssigned),rebalanceListener.assigned)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topic1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(3,rebalanceListener.assignedCount)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testMetadataRefreshDuringRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Collection<TopicPartition> added = getAdded(assigned,assigned)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "testRejoinGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "rebalanceListener.revoked = null@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(toSet(newAssigned),subscriptions.assignedPartitions())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Collection<TopicPartition> added = getAdded(newAssigned,oldAssigned)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(toSet(updatedSubscription),subscriptions.subscription())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int revokedCount = revoked.isEmpty()? 0: 1@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(assigned,assigned)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "joinAsFollowerAndReceiveAssignment(coordinator,assigned)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(revoked.isEmpty()? 0: 1,rebalanceListener.revokedCount)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(oldAssigned,Errors.NONE))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "coordinator.maybeUpdateSubscriptionMetadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "final List<TopicPartition> assigned = Arrays.asList(t1p)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertFalse(revoked.isEmpty())@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(0,rebalanceListener.lostCount)@@@85@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "client.updateMetadata(RequestTestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,consumerId,\"leader\",Errors.NONE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "rebalanceListener.assigned = null@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "client.prepareResponse(syncGroupResponse(assigned,Errors.NONE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(oldAssigned,newAssigned)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(getAdded(owned,assigned),rebalanceListener.assigned)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "client.prepareResponse(syncGroupResponse(oldAssigned,Errors.NONE))@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<TopicPartition> newAssigned = Arrays.asList(t1p,t2p)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "revoked = getRevoked(newAssigned,oldAssigned)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topic1,otherTopic)),rebalanceListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssigned))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "revokedCount += 1@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topic1,topic2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final List<TopicPartition> owned = Collections.emptyList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final List<TopicPartition> oldAssigned = singletonList(t1p)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(3,consumerId,initialSubscription,Errors.NONE))@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "coordinator.joinGroupIfNeeded(time.timer(Long.MAX_VALUE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "subscriptions.subscribe(singleton(topic1),rebalanceListener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(getAdded(oldAssigned,newAssigned),rebalanceListener.assigned)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->44 [style = bold, label=""];
16->47 [style = solid, label="newAssigned"];
20->9 [style = bold, label=""];
28->66 [style = dashed, label="0"];
36->53 [style = bold, label=""];
9->49 [style = solid, label="initialSubscription"];
67->71 [style = bold, label=""];
30->49 [style = bold, label=""];
43->67 [style = solid, label="owned"];
26->22 [style = bold, label=""];
19->1 [style = bold, label=""];
21->31 [style = bold, label=""];
28->36 [style = solid, label="oldAssigned"];
1->21 [style = bold, label=""];
16->0 [style = solid, label="newAssigned"];
32->64 [style = dashed, label="0"];
74->70 [style = bold, label=""];
28->3 [style = bold, label=""];
75->59 [style = solid, label="assigned"];
64->43 [style = bold, label=""];
35->12 [style = bold, label=""];
49->36 [style = bold, label=""];
25->40 [style = bold, label=""];
7->29 [style = bold, label=""];
3->69 [style = dashed, label="0"];
73->67 [style = bold, label=""];
16->12 [style = solid, label="newAssigned"];
8->18 [style = bold, label=""];
40->51 [style = bold, label=""];
53->52 [style = bold, label=""];
41->37 [style = bold, label=""];
66->67 [style = solid, label="assigned"];
57->60 [style = bold, label=""];
9->17 [style = bold, label=""];
75->62 [style = bold, label=""];
71->75 [style = bold, label=""];
75->65 [style = solid, label="assigned"];
28->17 [style = solid, label="oldAssigned"];
38->32 [style = bold, label=""];
66->69 [style = bold, label=""];
29->20 [style = bold, label=""];
23->41 [style = solid, label="revoked"];
16->52 [style = solid, label="newAssigned"];
43->66 [style = bold, label=""];
75->74 [style = solid, label="assigned"];
31->33 [style = bold, label=""];
10->0 [style = bold, label=""];
44->41 [style = bold, label=""];
9->18 [style = solid, label="initialSubscription"];
2->27 [style = bold, label=""];
32->30 [style = solid, label="consumerId"];
65->61 [style = bold, label=""];
39->25 [style = bold, label=""];
51->42 [style = bold, label=""];
32->18 [style = solid, label="consumerId"];
6->7 [style = bold, label=""];
61->72 [style = bold, label=""];
37->47 [style = bold, label=""];
28->39 [style = solid, label="oldAssigned"];
52->26 [style = bold, label=""];
17->8 [style = bold, label=""];
32->2 [style = solid, label="consumerId"];
46->16 [style = bold, label=""];
22->45 [style = bold, label=""];
27->14 [style = bold, label=""];
22->19 [style = solid, label="revokedCount"];
2->58 [style = dashed, label="0"];
76->56 [style = bold, label=""];
16->23 [style = solid, label="newAssigned"];
23->15 [style = bold, label=""];
63->57 [style = bold, label=""];
32->0 [style = solid, label="consumerId"];
70->76 [style = bold, label=""];
28->52 [style = solid, label="oldAssigned"];
48->6 [style = bold, label=""];
3->55 [style = bold, label=""];
52->1 [style = solid, label="revoked"];
75->72 [style = solid, label="assigned"];
28->23 [style = solid, label="oldAssigned"];
32->49 [style = solid, label="consumerId"];
14->23 [style = bold, label=""];
18->39 [style = bold, label=""];
15->44 [style = solid, label="revokedCount"];
55->6 [style = bold, label=""];
32->17 [style = solid, label="consumerId"];
43->46 [style = solid, label="owned"];
46->67 [style = dashed, label="0"];
56->59 [style = bold, label=""];
16->45 [style = solid, label="newAssigned"];
58->65 [style = bold, label=""];
28->47 [style = solid, label="oldAssigned"];
68->64 [style = bold, label=""];
42->34 [style = bold, label=""];
72->74 [style = bold, label=""];
28->11 [style = solid, label="oldAssigned"];
8->35 [style = solid, label="updatedSubscription"];
48->55 [style = dashed, label="0"];
16->10 [style = bold, label=""];
24->35 [style = bold, label=""];
34->5 [style = bold, label=""];
50->46 [style = bold, label=""];
64->62 [style = solid, label="otherTopic"];
0->2 [style = bold, label=""];
62->58 [style = bold, label=""];
66->63 [style = solid, label="assigned"];
45->13 [style = bold, label=""];
10->2 [style = solid, label="updatedSubscriptions"];
32->43 [style = bold, label=""];
11->19 [style = bold, label=""];
28->45 [style = solid, label="oldAssigned"];
43->28 [style = bold, label=""];
47->30 [style = bold, label=""];
28->30 [style = solid, label="oldAssigned"];
3->48 [style = bold, label=""];
74->59 [style = solid, label="added"];
60->73 [style = bold, label=""];
15->24 [style = bold, label=""];
32->10 [style = solid, label="consumerId"];
28->46 [style = solid, label="oldAssigned"];
54->32 [style = bold, label=""];
32->9 [style = solid, label="consumerId"];
28->42 [style = solid, label="oldAssigned"];
5->50 [style = bold, label=""];
4->11 [style = bold, label=""];
72->76 [style = solid, label="revoked"];
45->31 [style = solid, label="added"];
69->63 [style = bold, label=""];
16->27 [style = solid, label="newAssigned"];
13->4 [style = bold, label=""];
}
