digraph {
32 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(1,stat.getNumChildren())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(s.size(),stat.getNumChildren())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "s = zk.getChildren(childname,false,stat)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(stat.getCzxid() + i + 1,stat.getPzxid())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "stat = newStat()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String childname = name + \"/bar\" + i@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(i + 1,stat.getNumChildren())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Stat stat@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testChildren['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Assert.assertEquals(childname.length(),stat.getDataLength())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(i + 1,stat.getCversion())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testChildren['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String name = \"/foo\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0,stat.getVersion())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "Assert.assertEquals(s.size(),stat.getNumChildren())@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testChild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "String childname = name + \"/bar\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertEquals(1,stat.getCversion())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 0@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "List<String> s = zk.getChildren(name,false,stat)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(i + 1,stat.getNumChildren())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(i + 1,stat.getCversion())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,stat.getAversion())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "i < 10@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + i + 1,stat.getPzxid())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "Stat stat = new Stat()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "zk.getData(name,false,stat)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
13->24 [style = dotted, label="true"];
8->26 [style = solid, label="i"];
14->25 [style = bold, label=""];
13->28 [style = dotted, label="true"];
5->9 [style = bold, label=""];
12->8 [style = solid, label="i"];
13->20 [style = dotted, label="true"];
42->9 [style = bold, label=""];
14->17 [style = bold, label=""];
8->20 [style = solid, label="i"];
13->5 [style = dotted, label="true"];
36->33 [style = bold, label=""];
0->37 [style = solid, label="name"];
1->45 [style = dashed, label="0"];
21->28 [style = bold, label=""];
24->30 [style = bold, label=""];
19->5 [style = bold, label=""];
5->46 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
37->31 [style = bold, label=""];
13->21 [style = dotted, label="true"];
10->12 [style = bold, label=""];
9->21 [style = dashed, label="0"];
6->11 [style = bold, label=""];
15->0 [style = bold, label=""];
16->14 [style = bold, label=""];
8->6 [style = solid, label="i"];
27->26 [style = solid, label="i"];
4->16 [style = bold, label=""];
13->4 [style = dotted, label="true"];
13->9 [style = dotted, label="true"];
13->6 [style = dotted, label="true"];
19->42 [style = bold, label=""];
13->17 [style = dotted, label="true"];
12->37 [style = dashed, label="0"];
13->3 [style = dotted, label="true"];
13->25 [style = dotted, label="true"];
30->26 [style = bold, label=""];
13->19 [style = dotted, label="true"];
13->7 [style = dotted, label="true"];
2->30 [style = dashed, label="0"];
34->0 [style = bold, label=""];
2->39 [style = bold, label=""];
35->40 [style = bold, label=""];
16->48 [style = dashed, label="0"];
13->22 [style = dotted, label="true"];
7->2 [style = bold, label=""];
13->29 [style = dotted, label="true"];
39->35 [style = bold, label=""];
12->27 [style = dashed, label="0"];
28->24 [style = bold, label=""];
32->36 [style = bold, label=""];
1->19 [style = bold, label=""];
18->7 [style = bold, label=""];
0->14 [style = solid, label="name"];
13->16 [style = dotted, label="true"];
13->18 [style = dotted, label="true"];
17->1 [style = bold, label=""];
3->26 [style = dashed, label="0"];
4->38 [style = dashed, label="0"];
27->22 [style = solid, label="i"];
0->6 [style = solid, label="name"];
13->26 [style = dotted, label="true"];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
6->11 [style = solid, label="childname"];
26->8 [style = bold, label=""];
31->38 [style = bold, label=""];
38->48 [style = bold, label=""];
23->0 [style = bold, label=""];
17->25 [style = dashed, label="0"];
27->8 [style = solid, label="i"];
13->2 [style = dotted, label="true"];
12->6 [style = solid, label="i"];
12->13 [style = bold, label=""];
25->20 [style = bold, label=""];
37->7 [style = solid, label="childname"];
13->30 [style = dotted, label="true"];
9->18 [style = bold, label=""];
17->49 [style = bold, label=""];
13->8 [style = dotted, label="true"];
48->11 [style = bold, label=""];
3->8 [style = bold, label=""];
33->43 [style = bold, label=""];
49->19 [style = bold, label=""];
12->1 [style = solid, label="i"];
40->32 [style = bold, label=""];
18->28 [style = dashed, label="0"];
43->41 [style = bold, label=""];
13->11 [style = dotted, label="true"];
13->6 [style = bold, label=""];
13->14 [style = dotted, label="true"];
8->13 [style = bold, label=""];
10->37 [style = bold, label=""];
5->22 [style = dashed, label="0"];
8->3 [style = solid, label="i"];
16->14 [style = solid, label="stat"];
38->48 [style = solid, label="stat"];
27->6 [style = solid, label="i"];
20->29 [style = bold, label=""];
38->7 [style = solid, label="stat"];
10->27 [style = bold, label=""];
8->22 [style = solid, label="i"];
11->45 [style = bold, label=""];
22->21 [style = bold, label=""];
19->29 [style = dashed, label="0"];
47->46 [style = bold, label=""];
27->20 [style = solid, label="i"];
8->13 [style = solid, label="i"];
1->20 [style = dashed, label="0"];
13->1 [style = dotted, label="true"];
0->10 [style = bold, label=""];
12->5 [style = solid, label="i"];
7->24 [style = dashed, label="0"];
8->5 [style = solid, label="i"];
8->1 [style = solid, label="i"];
12->13 [style = solid, label="i"];
45->47 [style = bold, label=""];
37->31 [style = solid, label="childname"];
0->10 [style = solid, label="name"];
29->22 [style = bold, label=""];
12->3 [style = solid, label="i"];
0->48 [style = solid, label="name"];
27->13 [style = solid, label="i"];
46->17 [style = bold, label=""];
41->44 [style = bold, label=""];
}
