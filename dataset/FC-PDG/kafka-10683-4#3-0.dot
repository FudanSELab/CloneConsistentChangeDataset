digraph {
30 [style = filled, label = "Runtime.getRuntime().addShutdownHook(new Thread(\"streams-wordcount-shutdown-hook\"){@Override public void run(){streams.close()latch.countDown()}})@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "props.put(StreamsConfig.CACHE_MAX_BYTES_BUFFERING_CONFIG,0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final KafkaStreams streams = new KafkaStreams(builder.build(),props)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Runtime.getRuntime().addShutdownHook(new Thread(\"streams-temperature-shutdown-hook\"){@Override public void run(){streams.close()latch.countDown()}})@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG,Serdes.String().getClass().getName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "props.put(StreamsConfig.APPLICATION_ID_CONFIG,\"streams-temperature\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "WindowedSerializer<String> windowedSerializer = new WindowedSerializer<>(Serdes.String().serializer())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "latch.await()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Exit.exit(0)@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "WindowedDeserializer<String> windowedDeserializer = new WindowedDeserializer<>(Serdes.String().deserializer())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Exit.exit(0)@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final KafkaStreams streams = new KafkaStreams(builder.build(),props)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "streams.start()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "System.exit(1)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "props.put(StreamsConfig.APPLICATION_ID_CONFIG,\"streams-wordcount\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "props.put(StreamsConfig.DEFAULT_VALUE_SERDE_CLASS_CONFIG,Serdes.String().getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "latch.await()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Serde<Windowed<String>> windowedSerde = Serdes.serdeFrom(windowedSerializer,windowedDeserializer)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KStream<Windowed<String>,String> max = source.selectKey(new KeyValueMapper<String,String,String>(){@Override public String apply(String key,String value){return \"temp\"}}).groupByKey().reduce(new Reducer<String>(){@Override public String apply(String value1,String value2){if (Integer.parseInt(value1) > Integer.parseInt(value2)) return value1return value2}},TimeWindows.of(TimeUnit.SECONDS.toMillis(TEMPERATURE_WINDOW_SIZE))).toStream().filter(new Predicate<Windowed<String>,String>(){@Override public boolean test(Windowed<String> key,String value){return Integer.parseInt(value) > TEMPERATURE_THRESHOLD}})@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "KStream<String,String> source = builder.stream(\"streams-wordcount-input\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG,Serdes.String().getClass().getName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Exit.exit(1)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "max.to(windowedSerde,Serdes.String(),\"iot-temperature-max\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "System.exit(0)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG,\"earliest\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "props.put(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,\"localhost:9092\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "props.put(StreamsConfig.DEFAULT_KEY_SERDE_CLASS_CONFIG,Serdes.String().getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Exit.exit(1)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "KStream<String,String> source = builder.stream(\"iot-temperature\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "props.put(ConsumerConfig.AUTO_OFFSET_RESET_CONFIG,\"earliest\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "KTable<String,Long> counts = source.flatMapValues(new ValueMapper<String,Iterable<String>>(){@Override public Iterable<String> apply(String value){return Arrays.asList(value.toLowerCase(Locale.getDefault()).split(\" \"))}}).map(new KeyValueMapper<String,String,KeyValue<String,String>>(){@Override public KeyValue<String,String> apply(String key,String value){return new KeyValue<>(value,value)}}).groupByKey().count(\"Counts\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Throwable e@@@46@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "streams.start()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Throwable e@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "counts.to(Serdes.String(),Serdes.Long(),\"streams-wordcount-output\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18->38 [style = bold, label=""];
27->18 [style = bold, label=""];
28->40 [style = bold, label=""];
0->13 [style = bold, label=""];
8->31 [style = bold, label=""];
20->9 [style = bold, label=""];
7->12 [style = bold, label=""];
11->1 [style = bold, label=""];
12->21 [style = bold, label=""];
18->28 [style = solid, label="props"];
6->23 [style = bold, label=""];
1->30 [style = dashed, label="0"];
33->28 [style = bold, label=""];
3->24 [style = dashed, label="0"];
25->18 [style = bold, label=""];
22->41 [style = bold, label=""];
5->26 [style = bold, label=""];
38->12 [style = bold, label=""];
5->15 [style = bold, label=""];
4->18 [style = bold, label=""];
11->32 [style = bold, label=""];
19->17 [style = bold, label=""];
32->34 [style = bold, label=""];
29->37 [style = bold, label=""];
18->10 [style = solid, label="props"];
29->37 [style = dotted, label="true"];
9->8 [style = bold, label=""];
2->10 [style = bold, label=""];
23->0 [style = bold, label=""];
15->3 [style = bold, label=""];
26->24 [style = bold, label=""];
5->15 [style = dotted, label="true"];
27->16 [style = dotted, label="true"];
39->33 [style = bold, label=""];
8->22 [style = bold, label=""];
30->11 [style = bold, label=""];
0->14 [style = solid, label="windowedSerializer"];
17->24 [style = bold, label=""];
21->20 [style = bold, label=""];
31->35 [style = bold, label=""];
12->8 [style = bold, label=""];
37->34 [style = bold, label=""];
7->38 [style = dashed, label="0"];
6->41 [style = dashed, label="0"];
17->3 [style = bold, label=""];
15->26 [style = dashed, label="0"];
5->26 [style = dotted, label="true"];
40->30 [style = bold, label=""];
14->2 [style = bold, label=""];
4->16 [style = dotted, label="true"];
35->36 [style = bold, label=""];
41->39 [style = bold, label=""];
18->7 [style = bold, label=""];
1->19 [style = bold, label=""];
14->2 [style = solid, label="windowedSerde"];
13->14 [style = bold, label=""];
13->14 [style = solid, label="windowedDeserializer"];
25->16 [style = dotted, label="true"];
22->6 [style = bold, label=""];
10->11 [style = bold, label=""];
36->22 [style = bold, label=""];
}
