digraph {
8 [style = filled, label = "assertFalse(command.isTrackingRepairedStatus())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "dontSetRepairedDataTrackingFlagIfHeadersEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SinglePartitionReadCommand command = command(metadata)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "handler.doVerb(MessageIn.create(peer(),command,ImmutableMap.of(),MessagingService.Verb.READ,MessagingService.current_version),messageId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ReadCommand command = command(key())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "dontSetRepairedDataTrackingFlagUnlessHeaderPresent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Map<ParameterType,Object> params = ImmutableMap.of(ParameterType.TRACE_SESSION,UUID.randomUUID())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "dontSetRepairedDataTrackingFlagUnlessHeaderPresent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(command.isTrackingRepairedStatus())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(command.isTrackingRepairedStatus())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "handler.doVerb(MessageIn.create(peer(),command,params,MessagingService.Verb.READ,MessagingService.current_version),messageId())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->5 [style = bold, label=""];
0->10 [style = bold, label=""];
7->0 [style = bold, label=""];
7->3 [style = solid, label="command"];
5->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
10->8 [style = bold, label=""];
2->3 [style = solid, label="params"];
4->5 [style = bold, label=""];
5->10 [style = solid, label="command"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
5->3 [style = solid, label="command"];
}
