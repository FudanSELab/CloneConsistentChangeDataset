digraph {
28 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "user = iterator.next()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(\"User1\",user.getName())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "User user = iterator.next()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Cursor<User> usersCursor = mapper.getAllUsers()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "user = iterator.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "usersCursor.close()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "{sqlSession.close()}@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "shouldGetAllUser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "testCursorMultipleCloseCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(3,user.getGroups().size())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(1,user.getRoles().size())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(usersCursor.isConsumed())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "usersCursor.close()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(2,user.getRoles().size())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(1,user.getGroups().size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "user = iterator.next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "shouldGetAllUser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28->29 [style = bold, label=""];
11->20 [style = bold, label=""];
30->24 [style = bold, label=""];
19->18 [style = bold, label=""];
0->37 [style = dashed, label="0"];
17->1 [style = bold, label=""];
11->33 [style = dashed, label="0"];
6->23 [style = bold, label=""];
0->12 [style = bold, label=""];
9->4 [style = bold, label=""];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
23->15 [style = bold, label=""];
34->33 [style = bold, label=""];
29->25 [style = bold, label=""];
36->32 [style = bold, label=""];
21->24 [style = bold, label=""];
27->16 [style = bold, label=""];
25->17 [style = bold, label=""];
5->25 [style = bold, label=""];
20->22 [style = bold, label=""];
26->27 [style = bold, label=""];
2->0 [style = bold, label=""];
16->28 [style = bold, label=""];
18->10 [style = bold, label=""];
3->19 [style = bold, label=""];
10->13 [style = bold, label=""];
31->35 [style = bold, label=""];
15->9 [style = bold, label=""];
18->36 [style = dashed, label="0"];
37->34 [style = bold, label=""];
7->16 [style = bold, label=""];
16->5 [style = bold, label=""];
33->31 [style = bold, label=""];
4->8 [style = bold, label=""];
1->14 [style = bold, label=""];
14->2 [style = bold, label=""];
35->36 [style = bold, label=""];
2->37 [style = bold, label=""];
24->7 [style = bold, label=""];
16->28 [style = dashed, label="0"];
22->6 [style = bold, label=""];
}
