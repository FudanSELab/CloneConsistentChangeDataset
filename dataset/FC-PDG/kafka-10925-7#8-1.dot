digraph {
3 [style = filled, label = "metrics.config().recordLevel(Sensor.RecordingLevel.DEBUG)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expect(context.metrics()).andReturn(new MockStreamsMetrics(metrics))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expect(inner.name()).andReturn(\"metered\").anyTimes()@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "before['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expect(context.appConfigs()).andReturn(new HashMap<>())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "metered = new MeteredSessionStore<>(inner,\"scope\",Serdes.String(),Serdes.String(),new MockTime())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "metered = new MeteredKeyValueStore<>(inner,\"scope\",new MockTime(),Serdes.String(),Serdes.String())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "before['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "expect(context.taskId()).andReturn(taskId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "before['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
9->3 [style = bold, label=""];
6->5 [style = bold, label=""];
1->2 [style = bold, label=""];
7->0 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->1 [style = bold, label=""];
2->6 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
8->9 [style = bold, label=""];
}
