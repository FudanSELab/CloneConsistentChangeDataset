digraph {
14 [style = filled, label = "mapper.insertAuthor(expected)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Author expected = new Author(500,\"cbegin\",\"******\",\"cbegin@somewhere.com\",\"Something...\",null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "AuthorMapper mapper = session.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(expected.getBio(),actual.getBio())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldInsertAuthorUsingMapperClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(expected.getBio(),actual.getBio())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expected.getUsername(),actual.getUsername())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Author actual = session.selectOne(\"org.apache.ibatis.domain.blog.mappers.AuthorMapper.selectAuthor\",new Author(500))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Author actual = mapper.selectAuthor(500)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldInsertAuthor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "int updates = session.insert(\"org.apache.ibatis.domain.blog.mappers.AuthorMapper.insertAuthor\",expected)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expected.getId(),actual.getId())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(expected.getPassword(),actual.getPassword())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,updates)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(expected.getEmail(),actual.getEmail())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shouldInsertAuthor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNotNull(actual)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = bold, label=""];
4->6 [style = bold, label=""];
6->8 [style = solid, label="actual"];
2->3 [style = bold, label=""];
7->4 [style = bold, label=""];
7->4 [style = solid, label="updates"];
9->7 [style = bold, label=""];
11->9 [style = bold, label=""];
1->9 [style = bold, label=""];
8->0 [style = bold, label=""];
12->13 [style = bold, label=""];
9->7 [style = solid, label="expected"];
0->10 [style = bold, label=""];
5->2 [style = bold, label=""];
10->5 [style = bold, label=""];
9->14 [style = solid, label="expected"];
15->9 [style = bold, label=""];
14->12 [style = bold, label=""];
12->13 [style = solid, label="actual"];
6->8 [style = bold, label=""];
9->14 [style = bold, label=""];
13->8 [style = bold, label=""];
}
