digraph {
1 [style = filled, label = "val domainTypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final LinkBuilder linkBuilder = LinkBuilder.newBuilder(resourceContext,Rel.SELF.getName(),RepresentationType.TYPE_ACTION_RESULT,url)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "domainTypeIsSubtypeOf['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "val subtypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(subtype))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final JsonRepresentation selfLink = linkBuilder.withArguments(arguments).build()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final boolean value = subtypeSpec.isOfType(domainTypeSpec)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return Responses.ofOk(renderer,Caching.ONE_DAY).build()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "val supertypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(supertype))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final TypeActionResultReprRenderer renderer = new TypeActionResultReprRenderer(resourceContext,null,JsonRepresentation.newMap())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "val supertypeSpec = getSpecificationLoader().specForLogicalTypeName(supertype).orElse(null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "domainTypeIsSupertypeOf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "throw RestfulObjectsApplicationException.create(HttpStatusCode.NOT_FOUND)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "final String subtype = domainTypeFor(subTypeStr,argsUrlEncoded,\"subtype\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String supertype = domainTypeFor(superTypeStr,argsUrlEncoded,\"supertype\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String url = \"domain-types/\" + domainType + \"/type-actions/isSupertypeOf/invoke\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "renderer.with(domainTypeSpec).withSelf(selfLink).withValue(value)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "return Responses.ofOk(renderer,Caching.ONE_DAY).build()@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "val resourceContext = createResourceContext(ResourceDescriptor.generic(Where.ANYWHERE,RepresentationService.Intent.NOT_APPLICABLE))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "@QueryParam(\"supertype\") final String superTypeStr@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "@QueryParam(\"subtype\") final String subTypeStr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final TypeActionResultReprRenderer renderer = new TypeActionResultReprRenderer(resourceContext,null,JsonRepresentation.newMap())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "renderer.with(domainTypeSpec).withSelf(selfLink).withValue(value)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final LinkBuilder linkBuilder = LinkBuilder.newBuilder(resourceContext,Rel.SELF.getName(),RepresentationType.TYPE_ACTION_RESULT,url)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String url = \"domain-types/\" + domainType + \"/type-actions/isSubtypeOf/invoke\"@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final JsonRepresentation arguments = DomainTypeReprRenderer.argumentsTo(resourceContext,\"subtype\",subtypeSpec)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "domainTypeSpec == null || supertypeSpec == null@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final boolean value = domainTypeSpec.isOfType(supertypeSpec)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "domainTypeIsSubtypeOf['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "val domainTypeSpec = getSpecificationLoader().specForLogicalTypeName(domainType).orElse(null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->31 [style = dashed, label="0"];
4->3 [style = bold, label=""];
29->8 [style = bold, label=""];
14->13 [style = solid, label="supertype"];
9->0 [style = dotted, label="true"];
22->19 [style = dotted, label="true"];
18->25 [style = dotted, label="true"];
8->31 [style = bold, label=""];
30->31 [style = solid, label="argsUrlEncoded"];
12->15 [style = solid, label="url"];
22->19 [style = bold, label=""];
8->11 [style = solid, label="resourceContext"];
8->6 [style = solid, label="resourceContext"];
31->27 [style = solid, label="subtype"];
32->1 [style = solid, label="domainType"];
1->26 [style = solid, label="domainTypeSpec"];
12->15 [style = bold, label=""];
1->27 [style = bold, label=""];
8->34 [style = solid, label="resourceContext"];
8->14 [style = bold, label=""];
3->6 [style = bold, label=""];
10->33 [style = dashed, label="0"];
32->28 [style = solid, label="domainType"];
31->1 [style = bold, label=""];
12->26 [style = bold, label=""];
6->34 [style = dashed, label="0"];
16->20 [style = solid, label="value"];
5->28 [style = bold, label=""];
9->8 [style = bold, label=""];
19->6 [style = bold, label=""];
10->14 [style = solid, label="superTypeStr"];
34->12 [style = bold, label=""];
1->13 [style = bold, label=""];
26->11 [style = bold, label=""];
14->1 [style = bold, label=""];
4->28 [style = dashed, label="0"];
8->3 [style = solid, label="resourceContext"];
3->34 [style = bold, label=""];
18->10 [style = dotted, label="true"];
8->5 [style = solid, label="resourceContext"];
8->15 [style = solid, label="resourceContext"];
21->22 [style = solid, label="supertypeSpec"];
13->15 [style = solid, label="supertypeSpec"];
21->11 [style = solid, label="supertypeSpec"];
28->3 [style = solid, label="url"];
2->1 [style = solid, label="domainType"];
15->11 [style = bold, label=""];
14->23 [style = bold, label=""];
23->21 [style = bold, label=""];
13->21 [style = dashed, label="0"];
17->12 [style = solid, label="domainType"];
15->11 [style = solid, label="value"];
21->22 [style = bold, label=""];
13->27 [style = dashed, label="0"];
9->2 [style = dotted, label="true"];
21->16 [style = solid, label="supertypeSpec"];
27->34 [style = solid, label="subtypeSpec"];
5->4 [style = bold, label=""];
11->7 [style = bold, label=""];
7->16 [style = bold, label=""];
29->30 [style = dotted, label="true"];
13->5 [style = bold, label=""];
15->26 [style = dashed, label="0"];
2->4 [style = solid, label="domainType"];
29->33 [style = dotted, label="true"];
26->11 [style = solid, label="value"];
0->14 [style = solid, label="argsUrlEncoded"];
4->3 [style = solid, label="url"];
18->8 [style = bold, label=""];
27->5 [style = bold, label=""];
28->3 [style = bold, label=""];
18->17 [style = dotted, label="true"];
13->6 [style = solid, label="supertypeSpec"];
20->24 [style = bold, label=""];
16->20 [style = bold, label=""];
9->10 [style = dotted, label="true"];
1->23 [style = dashed, label="0"];
29->32 [style = dotted, label="true"];
25->14 [style = solid, label="argsUrlEncoded"];
33->31 [style = solid, label="subTypeStr"];
22->6 [style = bold, label=""];
23->22 [style = solid, label="domainTypeSpec"];
6->12 [style = bold, label=""];
}
