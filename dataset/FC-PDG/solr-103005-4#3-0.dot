digraph {
25 [style = filled, label = "assertSingleParentOf(searcher,one(\"yz\"),\"X\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String xml_doc1 = \"<doc >\" + \" <field name=\"id\">1</field>\" + \" <field name=\"empty_s\"></field>\" + \" <field name=\"parent_s\">X</field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >2</field>\" + \" <field name=\"child_s\">y</field>\" + \" </doc>\" + \" <doc> \" + \" <field name=\"id\" >3</field>\" + \" <field name=\"child_s\">z</field>\" + \" </doc>\" + \" </field> \" + \"</doc>\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String xml_doc1 = \"<doc >\" + \" <field name=\"id\">1</field>\" + \" <field name=\"parent_s\">X</field>\" + \"<doc> \" + \" <field name=\"id\" >2</field>\" + \" <field name=\"child_s\">y</field>\" + \"</doc>\" + \"<doc> \" + \" <field name=\"id\" >3</field>\" + \" <field name=\"child_s\">z</field>\" + \"</doc>\" + \"</doc>\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "UpdateRequest req = new UpdateRequest()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "OutputStream os = new ByteArrayOutputStream()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "XMLStreamReader parser = inputFactory.createXMLStreamReader(new StringReader(xml_doc1))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "parser.next()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SolrInputDocument document2 = loader.readDoc(parser2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(document2.hasChildDocuments())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertBlockU(os.toString())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "String xml_doc2 = \"<doc >\" + \" <field name=\"id\">4</field>\" + \" <field name=\"parent_s\">A</field>\" + \"<doc> \" + \" <field name=\"id\" >5</field>\" + \" <field name=\"child_s\">b</field>\" + \"</doc>\" + \"<doc> \" + \" <field name=\"id\" >6</field>\" + \" <field name=\"child_s\">c</field>\" + \"</doc>\" + \"</doc>\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testXML['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SolrInputDocument document1 = loader.readDoc(parser)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String xml_doc2 = \"<doc >\" + \" <field name=\"id\">4</field>\" + \" <field name=\"parent_s\">A</field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >5</field>\" + \" <field name=\"child_s\">b</field>\" + \" <field name=\"grandChild\">\" + \" <doc> \" + \" <field name=\"id\" >7</field>\" + \" <field name=\"child_s\">d</field>\" + \" </doc>\" + \" </field>\" + \" </doc>\" + \" </field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >6</field>\" + \" <field name=\"child_s\">c</field>\" + \" </doc>\" + \" </field> \" + \"</doc>\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testXMLMultiLevelLabeledChildren['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final SolrIndexSearcher searcher = getSearcher()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(document2.toString(),sdoc(\"id\",\"4\",\"parent_s\",\"A\",\"test\",sdocs(sdoc(\"id\",\"5\",\"child_s\",\"b\",\"grandChild\",Collections.singleton(sdoc(\"id\",\"7\",\"child_s\",\"d\"))),sdoc(\"id\",\"6\",\"child_s\",\"c\"))).toString())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "XMLStreamReader parser = inputFactory.createXMLStreamReader(new StringReader(xml_doc1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "XMLLoader loader = new XMLLoader()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "docs.add(document1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "req.add(docs)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SolrInputDocument document2 = loader.readDoc(parser2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "parser2.next()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RequestWriter requestWriter = new RequestWriter()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "docs.add(document2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "parser.next()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<SolrInputDocument> docs = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "requestWriter.write(req,os)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testXMLMultiLevelLabeledChildren['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Collections.shuffle(docs,random())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertU(commit())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "XMLStreamReader parser2 = inputFactory.createXMLStreamReader(new StringReader(xml_doc2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "parser2.next()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertSingleParentOf(searcher,one(\"bc\"),\"A\")@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "XMLLoader loader = new XMLLoader()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(document1.toString(),sdoc(\"id\",\"1\",\"empty_s\",\"\",\"parent_s\",\"X\",\"test\",sdocs(sdoc(\"id\",\"2\",\"child_s\",\"y\"),sdoc(\"id\",\"3\",\"child_s\",\"z\"))).toString())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->31 [style = bold, label=""];
29->21 [style = bold, label=""];
26->6 [style = bold, label=""];
33->27 [style = bold, label=""];
22->19 [style = bold, label=""];
4->11 [style = solid, label="parser"];
1->10 [style = solid, label="parser2"];
18->33 [style = solid, label="req"];
30->17 [style = solid, label="docs"];
9->11 [style = bold, label=""];
10->6 [style = bold, label=""];
16->26 [style = bold, label=""];
24->21 [style = solid, label="document2"];
30->15 [style = bold, label=""];
16->29 [style = solid, label="document1"];
8->4 [style = solid, label="xml_doc1"];
6->0 [style = bold, label=""];
15->23 [style = bold, label=""];
21->17 [style = bold, label=""];
25->34 [style = bold, label=""];
32->33 [style = solid, label="os"];
11->1 [style = bold, label=""];
6->24 [style = bold, label=""];
23->26 [style = solid, label="xml_doc2"];
19->25 [style = solid, label="searcher"];
31->32 [style = bold, label=""];
8->3 [style = bold, label=""];
4->2 [style = bold, label=""];
27->22 [style = bold, label=""];
15->20 [style = solid, label="xml_doc1"];
19->25 [style = bold, label=""];
2->9 [style = bold, label=""];
10->24 [style = dashed, label="0"];
6->29 [style = dashed, label="0"];
23->20 [style = bold, label=""];
11->16 [style = dashed, label="0"];
30->28 [style = solid, label="docs"];
26->24 [style = solid, label="parser2"];
14->8 [style = bold, label=""];
17->28 [style = bold, label=""];
35->18 [style = bold, label=""];
19->34 [style = solid, label="searcher"];
32->33 [style = bold, label=""];
0->5 [style = bold, label=""];
13->10 [style = bold, label=""];
1->16 [style = bold, label=""];
24->29 [style = bold, label=""];
20->16 [style = solid, label="parser"];
12->8 [style = bold, label=""];
18->30 [style = bold, label=""];
3->1 [style = solid, label="xml_doc2"];
3->4 [style = bold, label=""];
5->7 [style = bold, label=""];
1->26 [style = dashed, label="0"];
1->13 [style = bold, label=""];
20->11 [style = bold, label=""];
}
