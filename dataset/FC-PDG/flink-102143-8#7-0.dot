digraph {
10 [style = filled, label = "ObjectMapper objectMapper = new ObjectMapper()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "root.put(\"timestamp_with_local_timezone9\",\"1990-10-14 12:12:43.123456789Z\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "RowType rowType = (RowType)ROW(FIELD(\"timestamp3\",TIMESTAMP(3)),FIELD(\"timestamp9\",TIMESTAMP(9))).getLogicalType()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "root.put(\"timestamp_with_local_timezone3\",\"1990-10-14 12:12:43.123Z\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "byte(( serializedJson = objectMapper.writeValueAsBytes(root)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ObjectNode root = objectMapper.createObjectNode()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "root.put(\"timestamp9\",\"1990-10-14 12:12:43.123456789\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSerDeSQLTimestampFormat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testSerDeSQLTimestampFormat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new String(serializedJson),new String(actual))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JsonRowDataSerializationSchema serializationSchema = new JsonRowDataSerializationSchema(rowType,TimestampFormat.SQL)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSerDeMultiRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "JsonRowDataDeserializationSchema deserializationSchema = new JsonRowDataDeserializationSchema(rowType,InternalTypeInfo.of(rowType),false,false,TimestampFormat.ISO_8601)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "{ObjectNode root = objectMapper.createObjectNode()root.put(\"f1\",1)root.put(\"f2\",true)root.put(\"f3\",\"str\")byte(( serializedJson = objectMapper.writeValueAsBytes(root)RowData rowData = deserializationSchema.deserialize(serializedJson)byte(( actual = serializationSchema.serialize(rowData)assertEquals(new String(serializedJson),new String(actual))}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "JsonRowDataSerializationSchema serializationSchema = new JsonRowDataSerializationSchema(rowType,TimestampFormat.ISO_8601)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RowType rowType = (RowType)ROW(FIELD(\"f1\",INT()),FIELD(\"f2\",BOOLEAN()),FIELD(\"f3\",STRING())).getLogicalType()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "byte(( actual = serializationSchema.serialize(rowData)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JsonRowDataDeserializationSchema deserializationSchema = new JsonRowDataDeserializationSchema(rowType,InternalTypeInfo.of(rowType),false,false,TimestampFormat.SQL)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RowData rowData = deserializationSchema.deserialize(serializedJson)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RowType rowType = (RowType)ROW(FIELD(\"timestamp3\",TIMESTAMP(3)),FIELD(\"timestamp9\",TIMESTAMP(9)),FIELD(\"timestamp_with_local_timezone3\",TIMESTAMP_WITH_LOCAL_TIME_ZONE(3)),FIELD(\"timestamp_with_local_timezone9\",TIMESTAMP_WITH_LOCAL_TIME_ZONE(9))).getLogicalType()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "{ObjectNode root = objectMapper.createObjectNode()root.put(\"f1\",10)root.put(\"f2\",false)root.put(\"f3\",\"newStr\")byte(( serializedJson = objectMapper.writeValueAsBytes(root)RowData rowData = deserializationSchema.deserialize(serializedJson)byte(( actual = serializationSchema.serialize(rowData)assertEquals(new String(serializedJson),new String(actual))}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "root.put(\"timestamp3\",\"1990-10-14 12:12:43.123\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->20 [style = solid, label="actual"];
5->9 [style = solid, label="root"];
4->10 [style = bold, label=""];
4->16 [style = dashed, label="0"];
15->14 [style = bold, label=""];
3->21 [style = dashed, label="0"];
16->10 [style = bold, label=""];
2->6 [style = bold, label=""];
21->16 [style = solid, label="rowType"];
10->17 [style = bold, label=""];
14->4 [style = solid, label="rowType"];
3->4 [style = solid, label="rowType"];
3->0 [style = solid, label="rowType"];
21->18 [style = solid, label="rowType"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
8->1 [style = solid, label="actual"];
21->18 [style = bold, label=""];
3->0 [style = bold, label=""];
9->7 [style = solid, label="serializedJson"];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
5->2 [style = bold, label=""];
18->16 [style = bold, label=""];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
0->18 [style = dashed, label="0"];
17->20 [style = bold, label=""];
19->21 [style = bold, label=""];
13->9 [style = bold, label=""];
7->8 [style = solid, label="rowData"];
6->9 [style = bold, label=""];
3->14 [style = dashed, label="0"];
9->1 [style = solid, label="serializedJson"];
14->0 [style = solid, label="rowType"];
6->12 [style = bold, label=""];
}
