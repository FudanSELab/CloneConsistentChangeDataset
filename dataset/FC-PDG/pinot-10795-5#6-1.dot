digraph {
18 [style = filled, label = "List<TransformExpressionTree> expressions = SelectionOperatorUtils.extractExpressions(selection.getSelectionColumns(),indexSegment)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "int numExpressions = expressions.size()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Selection selection@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "_dataSchema = new DataSchema(columnNames,columnDataTypes)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String(( columnNames = new String((((@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IndexSegment indexSegment@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "_indexSegment = indexSegment@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DataSchema.ColumnDataType(( columnDataTypes = new DataSchema.ColumnDataType((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TransformOperator transformOperator@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Selection selection@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String(( columnNames = new String((((@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TransformResultMetadata expressionMetadata = _transformOperator.getResultMetadata(expression)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "EmptySelectionOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "columnDataTypes(i( = DataSchema.ColumnDataType.fromDataType(expressionMetadata.getDataType(),expressionMetadata.isSingleValue())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IndexSegment indexSegment@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "_rows = new ArrayList<>(Math.min(_numRowsToKeep,SelectionOperatorUtils.MAX_ROW_HOLDER_INITIAL_CAPACITY))@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "_expressions = SelectionOperatorUtils.extractExpressions(selection.getSelectionColumns(),indexSegment,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DataSchema.ColumnDataType(( columnDataTypes = new DataSchema.ColumnDataType((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int numExpressions = _expressions.size()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int i = 0@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TransformExpressionTree expression = _expressions.get(i)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "columnNames(i( = expression.toString()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Selection selection@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "_transformOperator = transformOperator@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "columnDataTypes(i( = DataSchema.ColumnDataType.fromDataType(expressionMetadata.getDataType(),expressionMetadata.isSingleValue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TransformOperator transformOperator@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "i < numExpressions@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "_numRowsToKeep = selection.getSize()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<TransformExpressionTree> expressions = SelectionOperatorUtils.extractExpressions(selection.getSelectionColumns(),indexSegment,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "_blockValSets = new BlockValSet((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "SelectionOnlyOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "IndexSegment indexSegment@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "EmptySelectionOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17->20 [style = dotted, label="true"];
8->11 [style = solid, label="numExpressions"];
16->15 [style = bold, label=""];
4->11 [style = solid, label="i"];
12->25 [style = solid, label="columnDataTypes"];
0->16 [style = bold, label=""];
6->3 [style = bold, label=""];
27->32 [style = bold, label=""];
24->28 [style = bold, label=""];
30->22 [style = bold, label=""];
16->12 [style = dotted, label="true"];
7->9 [style = solid, label="indexSegment"];
11->1 [style = bold, label=""];
6->1 [style = solid, label="columnDataTypes"];
24->16 [style = solid, label="numExpressions"];
30->22 [style = solid, label="expression"];
12->15 [style = solid, label="i"];
16->30 [style = dotted, label="true"];
9->18 [style = dashed, label="0"];
28->11 [style = bold, label=""];
16->15 [style = dotted, label="true"];
12->15 [style = bold, label=""];
3->11 [style = bold, label=""];
10->31 [style = dashed, label="0"];
8->14 [style = bold, label=""];
16->25 [style = bold, label=""];
3->25 [style = solid, label="columnDataTypes"];
15->6 [style = bold, label=""];
13->5 [style = dotted, label="true"];
31->27 [style = solid, label="transformOperator"];
13->7 [style = dotted, label="true"];
29->23 [style = dotted, label="true"];
29->34 [style = bold, label=""];
16->22 [style = dotted, label="true"];
21->34 [style = solid, label="indexSegment"];
9->8 [style = bold, label=""];
15->16 [style = bold, label=""];
15->1 [style = solid, label="columnNames"];
2->4 [style = bold, label=""];
13->10 [style = dotted, label="true"];
3->0 [style = bold, label=""];
3->0 [style = solid, label="i"];
17->10 [style = dotted, label="true"];
0->16 [style = solid, label="expression"];
2->1 [style = solid, label="columnDataTypes"];
11->0 [style = bold, label=""];
14->1 [style = solid, label="columnNames"];
11->25 [style = solid, label="columnNames"];
16->1 [style = dotted, label="true"];
0->16 [style = solid, label="i"];
11->3 [style = bold, label=""];
0->30 [style = solid, label="i"];
11->6 [style = dotted, label="true"];
15->16 [style = solid, label="i"];
11->0 [style = dotted, label="true"];
1->25 [style = solid, label="columnNames"];
16->30 [style = bold, label=""];
25->26 [style = bold, label=""];
0->30 [style = dashed, label="0"];
17->19 [style = dotted, label="true"];
1->12 [style = bold, label=""];
15->30 [style = solid, label="i"];
11->16 [style = dotted, label="true"];
4->0 [style = solid, label="i"];
29->21 [style = dotted, label="true"];
21->32 [style = solid, label="indexSegment"];
3->11 [style = solid, label="i"];
14->2 [style = bold, label=""];
19->18 [style = solid, label="indexSegment"];
26->33 [style = solid, label="_numRowsToKeep"];
13->9 [style = bold, label=""];
18->8 [style = bold, label=""];
22->1 [style = bold, label=""];
4->11 [style = bold, label=""];
11->15 [style = dotted, label="true"];
11->3 [style = dotted, label="true"];
32->24 [style = bold, label=""];
26->33 [style = bold, label=""];
6->3 [style = solid, label="i"];
17->18 [style = bold, label=""];
16->22 [style = dashed, label="0"];
34->27 [style = bold, label=""];
29->31 [style = dotted, label="true"];
}
