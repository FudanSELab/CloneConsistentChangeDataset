digraph {
8 [style = filled, label = "final JobVertex source2Vertex = verticesSorted.get(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertDistinctSharingGroups(source1Vertex,source2Vertex,map2Vertex)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "streamGraph.setAllVerticesInSameSlotSharingGroupByDefault(true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "streamGraph.getExecutionConfig().disableAllVerticesInSameSlotSharingGroupByDefault()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final JobGraph jobGraph = StreamingJobGraphGenerator.createJobGraph(streamGraph)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(4,verticesSorted.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSlotSharingOnAllVerticesInSameSlotSharingGroupByDefaultEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertSameSlotSharingGroup(source1Vertex,map1Vertex)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "streamGraph.getExecutionConfig().enableAllVerticesInSameSlotSharingGroupByDefault()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final StreamGraph streamGraph = createStreamGraphForSlotSharingTest()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final JobVertex map1Vertex = verticesSorted.get(2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "streamGraph.getStreamNodes().stream().filter(null).findFirst().get().setSlotSharingGroup(\"testSlotSharingGroup\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final JobVertex source1Vertex = verticesSorted.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertDistinctSharingGroups(source1Vertex,map1Vertex)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testSlotSharingOnAllVerticesInSameSlotSharingGroupByDefaultEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testSlotSharingOnAllVerticesInSameSlotSharingGroupByDefaultDisabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<JobVertex> verticesSorted = jobGraph.getVerticesSortedTopologicallyFromSources()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertSameSlotSharingGroup(source1Vertex,source2Vertex,map2Vertex)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final JobVertex map2Vertex = verticesSorted.get(3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
6->3 [style = bold, label=""];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
8->0 [style = solid, label="source1Vertex"];
1->5 [style = solid, label="map1Vertex"];
4->15 [style = solid, label="streamGraph"];
11->18 [style = solid, label="map2Vertex"];
9->2 [style = bold, label=""];
2->6 [style = bold, label=""];
7->5 [style = solid, label="source1Vertex"];
8->18 [style = solid, label="source2Vertex"];
15->6 [style = bold, label=""];
5->18 [style = bold, label=""];
5->10 [style = solid, label="map2Vertex"];
7->8 [style = bold, label=""];
1->11 [style = bold, label=""];
8->1 [style = bold, label=""];
11->5 [style = bold, label=""];
11->0 [style = solid, label="map1Vertex"];
2->14 [style = dashed, label="0"];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
8->10 [style = solid, label="source1Vertex"];
1->10 [style = solid, label="source2Vertex"];
4->6 [style = solid, label="streamGraph"];
10->0 [style = bold, label=""];
9->14 [style = bold, label=""];
0->18 [style = dashed, label="0"];
10->5 [style = dashed, label="0"];
14->6 [style = bold, label=""];
17->4 [style = bold, label=""];
4->16 [style = bold, label=""];
13->4 [style = bold, label=""];
7->18 [style = solid, label="source1Vertex"];
}
