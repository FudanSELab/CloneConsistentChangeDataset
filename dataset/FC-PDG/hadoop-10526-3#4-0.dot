digraph {
37 [style = filled, label = "Path TEST_ROOT_DIR = new Path(System.getProperty(\"test.build.data\",\"test/build/data\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MockFileSystem fs1 = createFileSystemForServiceName(\"service1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testBinaryCredentials['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Token<?> newerToken1 = fs1.getDelegationToken(renewer)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotSame(newerToken1,token1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "creds.addToken(newerToken1.getService(),newerToken1)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkToken(creds,newerToken1,token2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertTrue(token3 != null)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "conf.set(MRJobConfig.MAPREDUCE_JOB_CREDENTIALS_BINARY,binaryTokenFile)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "checkToken(creds,newerToken1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Token<?> token2 = fs2.getDelegationToken(renewer)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Token<?> token1 = fs1.getDelegationToken(renewer)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TokenCache.obtainTokensForNamenodesInternal(fs2,creds,conf,renewer)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TokenCache.obtainTokensForNamenodesInternal(fs3,creds,conf,renewer)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Path TEST_ROOT_DIR = new Path(System.getProperty(\"test.build.data\",\"test/build/data\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkToken(creds,newerToken1,token2,token3)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TokenCache.obtainTokensForNamenodesInternal(fs3,creds,conf,renewer)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkToken(creds,newerToken1,token2,token3)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkToken(creds,newerToken1,token2)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertNotNull(\"Token for nn is null\",nnt)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "creds.writeTokenStorageFile(new Path(binaryTokenFile),conf)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Credentials creds = new Credentials()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Token<?> token3 = creds.getToken(new Text(fs3.getCanonicalServiceName()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testGetTokensForNamenodes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "boolean hasScheme@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String fs_addr = fs1.getCanonicalServiceName()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testBinaryCredentials['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TokenCache.obtainTokensForNamenodesInternal(fs2,creds,conf,renewer)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TokenCache.obtainTokensForNamenodesInternal(fs1,creds,conf,renewer)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "creds = new Credentials()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "creds.addToken(token2.getService(),token2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Token<?> nnt = TokenCache.getDelegationToken(creds,fs_addr)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertThat(token3).isNotNull()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "MockFileSystem fs2 = createFileSystemForServiceName(\"service2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String binaryTokenFile = hasScheme? FileSystem.getLocal(conf).makeQualified(new Path(TEST_ROOT_DIR,\"tokenFile\")).toString(): FileSystem.getLocal(conf).makeQualified(new Path(TEST_ROOT_DIR,\"tokenFile\")).toUri().getPath()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String binaryTokenFile = FileSystem.getLocal(conf).makeQualified(new Path(TEST_ROOT_DIR,\"tokenFile\")).toUri().getPath()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "creds.addToken(token1.getService(),token1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TokenCache.obtainTokensForNamenodesInternal(fs1,creds,conf,renewer)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MockFileSystem fs3 = createFileSystemForServiceName(\"service3\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->17 [style = solid, label="token3"];
7->0 [style = solid, label="binaryTokenFile"];
18->30 [style = bold, label=""];
10->35 [style = bold, label=""];
26->27 [style = solid, label="creds"];
8->19 [style = solid, label="token3"];
9->10 [style = solid, label="fs1"];
21->2 [style = bold, label=""];
15->16 [style = solid, label="newerToken1"];
7->9 [style = bold, label=""];
9->12 [style = solid, label="fs1"];
26->10 [style = solid, label="creds"];
15->6 [style = solid, label="newerToken1"];
26->14 [style = solid, label="creds"];
35->38 [style = solid, label="fs_addr"];
26->15 [style = bold, label=""];
23->14 [style = solid, label="fs2"];
35->38 [style = bold, label=""];
8->29 [style = solid, label="token3"];
37->33 [style = bold, label=""];
32->11 [style = bold, label=""];
9->24 [style = bold, label=""];
26->28 [style = solid, label="creds"];
20->19 [style = solid, label="token2"];
26->12 [style = solid, label="creds"];
25->16 [style = solid, label="token1"];
26->22 [style = solid, label="creds"];
5->28 [style = solid, label="fs3"];
3->11 [style = bold, label=""];
20->17 [style = solid, label="token2"];
26->19 [style = solid, label="creds"];
15->22 [style = solid, label="newerToken1"];
20->21 [style = solid, label="token2"];
5->1 [style = solid, label="fs3"];
15->18 [style = solid, label="newerToken1"];
26->1 [style = solid, label="creds"];
4->7 [style = solid, label="hasScheme"];
20->6 [style = solid, label="token2"];
30->10 [style = bold, label=""];
23->27 [style = solid, label="fs2"];
22->14 [style = bold, label=""];
1->19 [style = bold, label=""];
15->19 [style = solid, label="newerToken1"];
14->6 [style = bold, label=""];
16->18 [style = bold, label=""];
20->13 [style = bold, label=""];
29->17 [style = bold, label=""];
23->5 [style = bold, label=""];
8->31 [style = bold, label=""];
32->4 [style = dotted, label="true"];
26->17 [style = solid, label="creds"];
15->17 [style = solid, label="newerToken1"];
24->38 [style = solid, label="creds"];
25->20 [style = bold, label=""];
2->0 [style = bold, label=""];
17->12 [style = bold, label=""];
24->25 [style = bold, label=""];
5->24 [style = bold, label=""];
28->8 [style = bold, label=""];
31->17 [style = bold, label=""];
24->10 [style = solid, label="creds"];
12->27 [style = bold, label=""];
26->6 [style = solid, label="creds"];
13->2 [style = bold, label=""];
10->22 [style = bold, label=""];
27->1 [style = bold, label=""];
0->26 [style = bold, label=""];
25->13 [style = bold, label=""];
20->22 [style = solid, label="token2"];
26->30 [style = solid, label="creds"];
38->36 [style = solid, label="nnt"];
3->4 [style = dotted, label="true"];
38->36 [style = bold, label=""];
15->30 [style = solid, label="newerToken1"];
25->13 [style = solid, label="token1"];
15->16 [style = bold, label=""];
33->9 [style = bold, label=""];
29->31 [style = dashed, label="0"];
33->0 [style = solid, label="binaryTokenFile"];
9->23 [style = bold, label=""];
0->10 [style = bold, label=""];
34->37 [style = bold, label=""];
33->2 [style = solid, label="binaryTokenFile"];
11->37 [style = dashed, label="0"];
7->2 [style = solid, label="binaryTokenFile"];
13->21 [style = bold, label=""];
8->29 [style = bold, label=""];
11->7 [style = bold, label=""];
6->28 [style = bold, label=""];
}
