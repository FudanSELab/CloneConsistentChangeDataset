digraph {
13 [style = filled, label = "return write.asStreamingOverwrite()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Broadcast<FileIO> io = lazySparkContext().broadcast(SparkUtil.serializableFileIO(table))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String wapId = spark.conf().get(\"spark.wap.id\",null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Schema writeSchema = SparkSchemaUtil.convert(table.schema(),dsSchema)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TypeUtil.validateWriteSchema(table.schema(),writeSchema,checkNullability(spark,options),checkOrdering(spark,options))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Broadcast<EncryptionManager> encryptionManager = lazySparkContext().broadcast(table.encryption())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String appId = spark.sparkContext().applicationId()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "buildForStreaming['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "buildForStreaming['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Preconditions.checkState(!overwriteByFilter || overwriteExpr == Expressions.alwaysTrue(),\"Unsupported streaming operation: overwrite by filter: %s\",overwriteExpr)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new SparkStreamingWrite(table,io,encryptionManager,options,overwriteByFilter,writeQueryId,appId,wapId,writeSchema,dsSchema)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "return write.asStreamingAppend()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Preconditions.checkState(!overwriteDynamic,\"Unsupported streaming operation: dynamic partition overwrite\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "buildForBatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return new SparkBatchWrite(table,io,encryptionManager,options,overwriteDynamic,overwriteByFilter,overwriteExpr,appId,wapId,writeSchema,dsSchema)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "SparkUtil.validatePartitionTransforms(table.spec())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SparkWrite write = new SparkWrite(table,io,encryptionManager,writeInfo,appId,wapId,writeSchema,dsSchema)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "overwriteByFilter@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
5->8 [style = bold, label=""];
5->12 [style = solid, label="writeSchema"];
9->12 [style = solid, label="io"];
15->13 [style = bold, label=""];
7->17 [style = bold, label=""];
0->17 [style = solid, label="appId"];
9->6 [style = solid, label="io"];
7->12 [style = bold, label=""];
7->17 [style = solid, label="encryptionManager"];
8->3 [style = bold, label=""];
9->17 [style = solid, label="io"];
12->15 [style = bold, label=""];
6->17 [style = dashed, label="0"];
5->17 [style = solid, label="writeSchema"];
1->6 [style = solid, label="wapId"];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
1->17 [style = solid, label="wapId"];
1->9 [style = bold, label=""];
3->0 [style = bold, label=""];
4->0 [style = bold, label=""];
15->13 [style = dotted, label="true"];
6->12 [style = dashed, label="0"];
0->6 [style = solid, label="appId"];
15->11 [style = dotted, label="false"];
7->6 [style = solid, label="encryptionManager"];
0->12 [style = solid, label="appId"];
10->5 [style = bold, label=""];
3->2 [style = bold, label=""];
15->11 [style = bold, label=""];
0->1 [style = bold, label=""];
1->12 [style = solid, label="wapId"];
7->6 [style = bold, label=""];
7->12 [style = solid, label="encryptionManager"];
16->5 [style = bold, label=""];
5->8 [style = solid, label="writeSchema"];
5->6 [style = solid, label="writeSchema"];
14->5 [style = bold, label=""];
}
