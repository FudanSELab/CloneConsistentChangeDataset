digraph {
19 [style = filled, label = "files++@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LifecycleTransaction.waitForDeletions()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "files++@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFileCounts(s.descriptor.directory.list())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rewriter.append(ci.next())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testNumberOfFiles_finish_empty_new_writer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(files,cfs.getLiveSSTables().size())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFileCounts(s.descriptor.directory.list())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "files == 3@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "truncate(cfs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cfs.addSSTable(s)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 2500000@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testNumberOfFiles_finish_empty_new_writer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sstables = rewriter.finish()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(files - 1,cfs.getLiveSSTables().size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(files,sstables.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "SSTableReader s = writeFile(cfs,400)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "rewriter.finish()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int files = 1@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cfs.addSSTable(s)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "cfs.disableAutoCompaction()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "validateCFS(cfs)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ci.hasNext()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory,txn))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<SSTableReader> sstables@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LifecycleTransaction.waitForDeletions()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testSmallFiles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(files,cfs.getLiveSSTables().size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->20 [style = solid, label="files"];
11->28 [style = bold, label=""];
7->9 [style = solid, label="cfs"];
19->6 [style = solid, label="files"];
19->4 [style = solid, label="files"];
7->6 [style = solid, label="cfs"];
15->14 [style = bold, label=""];
16->8 [style = bold, label=""];
24->32 [style = solid, label="files"];
9->2 [style = bold, label=""];
7->30 [style = solid, label="cfs"];
27->23 [style = solid, label="files"];
31->32 [style = bold, label=""];
26->25 [style = bold, label=""];
30->13 [style = solid, label="s"];
31->6 [style = dotted, label="true"];
18->17 [style = bold, label=""];
8->15 [style = dotted, label="true"];
14->19 [style = bold, label=""];
33->5 [style = bold, label=""];
15->14 [style = dotted, label="true"];
1->26 [style = bold, label=""];
19->6 [style = bold, label=""];
7->14 [style = solid, label="cfs"];
22->23 [style = bold, label=""];
34->30 [style = bold, label=""];
13->16 [style = bold, label=""];
31->11 [style = bold, label=""];
32->6 [style = bold, label=""];
11->15 [style = bold, label=""];
2->12 [style = bold, label=""];
4->0 [style = bold, label=""];
7->2 [style = solid, label="cfs"];
7->8 [style = solid, label="cfs"];
31->32 [style = dotted, label="true"];
27->22 [style = solid, label="files"];
7->9 [style = bold, label=""];
8->17 [style = bold, label=""];
6->20 [style = bold, label=""];
20->18 [style = bold, label=""];
21->5 [style = bold, label=""];
13->29 [style = bold, label=""];
20->8 [style = bold, label=""];
6->27 [style = bold, label=""];
2->12 [style = solid, label="s"];
11->31 [style = dotted, label="true"];
24->23 [style = solid, label="files"];
10->5 [style = bold, label=""];
27->11 [style = bold, label=""];
30->3 [style = bold, label=""];
15->31 [style = bold, label=""];
15->19 [style = dotted, label="true"];
15->20 [style = bold, label=""];
0->1 [style = bold, label=""];
7->16 [style = solid, label="cfs"];
15->6 [style = dotted, label="true"];
7->25 [style = solid, label="cfs"];
31->27 [style = dotted, label="true"];
2->3 [style = solid, label="s"];
24->22 [style = solid, label="files"];
15->31 [style = dashed, label="0"];
20->18 [style = dotted, label="true"];
3->13 [style = bold, label=""];
23->1 [style = bold, label=""];
19->20 [style = solid, label="files"];
5->7 [style = bold, label=""];
7->1 [style = solid, label="cfs"];
30->3 [style = solid, label="s"];
8->11 [style = dotted, label="true"];
8->20 [style = dotted, label="true"];
12->3 [style = bold, label=""];
13->4 [style = solid, label="files"];
24->8 [style = bold, label=""];
11->15 [style = dotted, label="true"];
29->24 [style = bold, label=""];
8->11 [style = bold, label=""];
27->32 [style = solid, label="files"];
17->4 [style = bold, label=""];
28->22 [style = bold, label=""];
13->19 [style = solid, label="files"];
24->27 [style = solid, label="files"];
9->34 [style = bold, label=""];
}
