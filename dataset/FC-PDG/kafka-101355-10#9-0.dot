digraph {
8 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "context.setTime(startTime + incr * 7)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "File baseDir2 = Files.createTempDirectory(\"test\").toFile()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "store.put(2,\"two\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{Utils.delete(baseDir2)}@@@76@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(Utils.mkSet(4L,5L,6L),inner.segmentIds())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "context.setTime(startTime + incr * 8)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@69@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "store.put(4,\"four\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "store.put(5,\"five\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "long startTime = segmentSize * 2@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,serdes)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
80 [style = filled, label = "assertEquals(Utils.mkSet(2L),inner.segmentIds())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,serdes)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "store.flush()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@72@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "{store.close()}@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "store.put(3,\"three\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L),inner.segmentIds())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "RocksDBWindowStore<Integer,String> inner = (RocksDBWindowStore<Integer,String>)((MeteredWindowStore<Integer,String>)store).inner()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "context.setTime(startTime + incr)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "{Utils.delete(baseDir)}@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "{store.close()}@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Utils.mkSet(2L),inner.segmentIds())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "context.setTime(startTime + incr * 3)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "{store.close()}@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(Utils.mkSet(3L,4L,5L),inner.segmentIds())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "store.put(6,\"six\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "RocksDBWindowStore<Integer,String> inner = (RocksDBWindowStore<Integer,String>)((MeteredWindowStore<Integer,String>)store).inner()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context)@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Utils.mkSet(inner.segmentName(4L),inner.segmentName(5L),inner.segmentName(6L)),segmentDirs(baseDir))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L),inner.segmentIds())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "store.put(1,\"one\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "context.setTime(startTime)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "long incr = segmentSize / 2@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "store.put(7,\"seven\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "context.restore(windowName,changeLog)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "store.put(8,\"eight\")@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(Utils.mkSet(3L,4L,5L),inner.segmentIds())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L,4L),inner.segmentIds())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "context.setTime(startTime + incr * 6)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RecordCollector recordCollector = new RecordCollector(producer){@Override public void send(ProducerRecord<K1,V1> record,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(record.topic(),record.key()),valueSerializer.serialize(record.topic(),record.value())))}}@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(null,baseDir,byteArraySerde,byteArraySerde,recordCollector)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "store.flush()@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "context.setTime(startTime + incr * 4)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "{Utils.delete(baseDir)}@@@82@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "context.setTime(startTime + incr * 2)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Utils.mkSet(inner.segmentName(4L),inner.segmentName(5L),inner.segmentName(6L)),segmentDirs(baseDir))@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "long incr = segmentSize / 2@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "store.put(0,\"zero\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "context.setTime(startTime + incr * 5)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Utils.mkSet(2L,3L,4L),inner.segmentIds())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "long startTime = segmentSize * 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->53 [style = bold, label=""];
8->30 [style = bold, label=""];
61->26 [style = solid, label="incr"];
73->65 [style = bold, label=""];
76->90 [style = bold, label=""];
5->9 [style = bold, label=""];
83->88 [style = bold, label=""];
14->35 [style = bold, label=""];
20->11 [style = solid, label="baseDir"];
29->34 [style = solid, label="startTime"];
19->25 [style = solid, label="incr"];
30->52 [style = bold, label=""];
61->0 [style = solid, label="incr"];
22->10 [style = solid, label="startTime"];
5->9 [style = solid, label="recordCollector"];
40->55 [style = bold, label=""];
19->17 [style = solid, label="incr"];
69->15 [style = bold, label=""];
22->62 [style = solid, label="startTime"];
59->62 [style = bold, label=""];
11->46 [style = bold, label=""];
47->33 [style = bold, label=""];
80->49 [style = bold, label=""];
19->31 [style = solid, label="incr"];
22->52 [style = dashed, label="0"];
27->49 [style = bold, label=""];
33->5 [style = solid, label="producer"];
39->45 [style = solid, label="changeLog"];
29->21 [style = solid, label="startTime"];
22->72 [style = solid, label="startTime"];
90->70 [style = bold, label=""];
12->40 [style = bold, label=""];
40->11 [style = bold, label=""];
64->31 [style = bold, label=""];
22->68 [style = solid, label="startTime"];
22->75 [style = solid, label="startTime"];
28->43 [style = bold, label=""];
91->20 [style = bold, label=""];
85->71 [style = bold, label=""];
19->16 [style = solid, label="incr"];
41->64 [style = bold, label=""];
22->21 [style = solid, label="startTime"];
2->63 [style = bold, label=""];
51->39 [style = bold, label=""];
82->75 [style = bold, label=""];
1->12 [style = bold, label=""];
22->90 [style = solid, label="startTime"];
22->35 [style = solid, label="startTime"];
23->17 [style = bold, label=""];
58->84 [style = bold, label=""];
35->38 [style = bold, label=""];
61->18 [style = solid, label="incr"];
61->93 [style = solid, label="incr"];
22->84 [style = solid, label="startTime"];
13->69 [style = bold, label=""];
19->21 [style = solid, label="incr"];
53->48 [style = bold, label=""];
39->29 [style = bold, label=""];
2->16 [style = bold, label=""];
10->50 [style = bold, label=""];
61->16 [style = solid, label="incr"];
94->22 [style = bold, label=""];
29->6 [style = solid, label="startTime"];
19->0 [style = solid, label="incr"];
75->59 [style = bold, label=""];
19->1 [style = solid, label="incr"];
61->25 [style = solid, label="incr"];
22->25 [style = solid, label="startTime"];
35->44 [style = bold, label=""];
88->73 [style = solid, label="baseDir"];
38->28 [style = bold, label=""];
22->67 [style = solid, label="startTime"];
19->20 [style = bold, label=""];
20->79 [style = solid, label="producer"];
73->65 [style = solid, label="context"];
19->14 [style = solid, label="incr"];
88->55 [style = solid, label="baseDir"];
15->66 [style = bold, label=""];
68->82 [style = bold, label=""];
29->26 [style = solid, label="startTime"];
61->58 [style = solid, label="incr"];
22->78 [style = solid, label="startTime"];
61->44 [style = solid, label="incr"];
19->49 [style = solid, label="incr"];
22->59 [style = solid, label="startTime"];
29->42 [style = solid, label="startTime"];
22->16 [style = solid, label="startTime"];
54->58 [style = bold, label=""];
22->4 [style = solid, label="startTime"];
22->37 [style = solid, label="startTime"];
18->92 [style = bold, label=""];
61->6 [style = solid, label="incr"];
22->0 [style = solid, label="startTime"];
29->16 [style = solid, label="startTime"];
26->27 [style = bold, label=""];
61->90 [style = solid, label="incr"];
61->87 [style = solid, label="incr"];
43->47 [style = bold, label=""];
29->15 [style = solid, label="startTime"];
22->42 [style = solid, label="startTime"];
62->93 [style = bold, label=""];
29->0 [style = solid, label="startTime"];
22->18 [style = solid, label="startTime"];
22->61 [style = bold, label=""];
66->25 [style = bold, label=""];
20->9 [style = solid, label="baseDir"];
74->77 [style = bold, label=""];
22->49 [style = solid, label="startTime"];
89->17 [style = bold, label=""];
61->4 [style = solid, label="incr"];
61->10 [style = solid, label="incr"];
13->15 [style = bold, label=""];
61->49 [style = solid, label="incr"];
24->8 [style = bold, label=""];
29->37 [style = solid, label="startTime"];
63->16 [style = bold, label=""];
29->14 [style = solid, label="startTime"];
61->57 [style = solid, label="incr"];
22->69 [style = solid, label="startTime"];
22->57 [style = solid, label="startTime"];
22->82 [style = solid, label="startTime"];
29->50 [style = solid, label="startTime"];
60->56 [style = bold, label=""];
52->26 [style = bold, label=""];
22->26 [style = bold, label=""];
22->50 [style = solid, label="startTime"];
44->42 [style = bold, label=""];
16->13 [style = bold, label=""];
92->68 [style = bold, label=""];
36->53 [style = dashed, label="0"];
6->34 [style = bold, label=""];
22->93 [style = solid, label="startTime"];
67->54 [style = bold, label=""];
22->31 [style = solid, label="startTime"];
61->84 [style = solid, label="incr"];
4->57 [style = bold, label=""];
61->76 [style = solid, label="incr"];
25->41 [style = bold, label=""];
78->87 [style = bold, label=""];
19->50 [style = solid, label="incr"];
9->36 [style = solid, label="context"];
61->75 [style = solid, label="incr"];
56->37 [style = bold, label=""];
61->62 [style = solid, label="incr"];
87->81 [style = bold, label=""];
20->30 [style = solid, label="baseDir"];
84->60 [style = bold, label=""];
61->42 [style = solid, label="incr"];
33->5 [style = bold, label=""];
19->37 [style = solid, label="incr"];
15->3 [style = bold, label=""];
45->44 [style = bold, label=""];
61->35 [style = solid, label="incr"];
42->0 [style = bold, label=""];
24->8 [style = solid, label="producer"];
61->21 [style = solid, label="incr"];
22->23 [style = solid, label="startTime"];
93->74 [style = bold, label=""];
61->81 [style = solid, label="incr"];
29->19 [style = bold, label=""];
61->68 [style = solid, label="incr"];
7->39 [style = bold, label=""];
61->72 [style = solid, label="incr"];
9->53 [style = solid, label="context"];
22->76 [style = solid, label="startTime"];
61->69 [style = solid, label="incr"];
49->2 [style = bold, label=""];
41->31 [style = bold, label=""];
29->49 [style = solid, label="startTime"];
61->78 [style = solid, label="incr"];
46->32 [style = bold, label=""];
23->78 [style = bold, label=""];
61->67 [style = solid, label="incr"];
61->50 [style = solid, label="incr"];
29->1 [style = solid, label="startTime"];
17->4 [style = bold, label=""];
47->32 [style = solid, label="baseDir2"];
9->36 [style = bold, label=""];
71->26 [style = bold, label=""];
61->82 [style = solid, label="incr"];
30->22 [style = bold, label=""];
31->23 [style = bold, label=""];
29->17 [style = solid, label="startTime"];
30->22 [style = solid, label="context"];
22->54 [style = solid, label="startTime"];
20->43 [style = solid, label="baseDir"];
22->6 [style = solid, label="startTime"];
70->89 [style = bold, label=""];
21->6 [style = bold, label=""];
77->14 [style = bold, label=""];
1->40 [style = bold, label=""];
61->86 [style = bold, label=""];
3->25 [style = bold, label=""];
34->1 [style = bold, label=""];
79->73 [style = solid, label="recordCollector"];
61->54 [style = solid, label="incr"];
19->15 [style = solid, label="incr"];
19->34 [style = solid, label="incr"];
19->6 [style = solid, label="incr"];
30->52 [style = solid, label="context"];
22->26 [style = solid, label="startTime"];
57->72 [style = bold, label=""];
79->73 [style = bold, label=""];
65->94 [style = bold, label=""];
29->25 [style = solid, label="startTime"];
22->92 [style = solid, label="startTime"];
0->10 [style = bold, label=""];
48->45 [style = bold, label=""];
8->30 [style = solid, label="recordCollector"];
88->1 [style = solid, label="baseDir"];
86->85 [style = bold, label=""];
4->37 [style = bold, label=""];
20->79 [style = bold, label=""];
61->59 [style = solid, label="incr"];
22->58 [style = solid, label="startTime"];
81->76 [style = bold, label=""];
36->48 [style = bold, label=""];
19->12 [style = solid, label="incr"];
88->91 [style = bold, label=""];
37->18 [style = bold, label=""];
72->67 [style = bold, label=""];
22->14 [style = solid, label="startTime"];
22->86 [style = solid, label="startTime"];
22->44 [style = solid, label="startTime"];
29->31 [style = solid, label="startTime"];
29->10 [style = solid, label="startTime"];
29->12 [style = solid, label="startTime"];
50->21 [style = bold, label=""];
20->24 [style = bold, label=""];
61->23 [style = solid, label="incr"];
61->92 [style = solid, label="incr"];
18->14 [style = bold, label=""];
19->10 [style = solid, label="incr"];
22->17 [style = solid, label="startTime"];
27->80 [style = bold, label=""];
22->87 [style = solid, label="startTime"];
22->81 [style = solid, label="startTime"];
}
