digraph {
29 [style = filled, label = "expressions = expressionResolver.resolve(context,expressions)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "indexAbstraction.getIndices().size() > 1 && !options.allowAliasesToMultipleIndices()@@@84@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.getOptions().ignoreAliases()@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "writeIndex == null@@@70@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Metadata metadata = context.getState().metadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expressions.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "throw infe@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "IndicesOptions options@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "return false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "excludedDataStreams@@@102@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "Metadata metadata@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "IndexMetadata indexMetadata@@@85@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "!options.allowNoIndices()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "throw new IllegalArgumentException(\"no write index is defined for alias (\" + indexAbstraction.getName() + \"(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "failNoIndices@@@57@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "IndexNotFoundException infe@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "infe.addMetadata(EXCLUDED_DATA_STREAMS_KEY,\"true\")@@@103@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "excludedDataStreams = true@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",expression)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throw infe@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && options.ignoreAliases()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "indexAbstraction.getIndices()@@@87@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final Set<Index> concreteIndices = new HashSet<>(expressions.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw infe@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String indexExpressions@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "indexAbstraction.getIndices()@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()@@@77@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String indexExpressions@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Context context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "indexExpressions == null || indexExpressions.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "aliasOrIndexExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "indexAbstraction == null@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "concreteIndices.add(index.getIndex())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "IndicesOptions options = context.getOptions()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "indexNames(i++( = indexMetadata.getIndex().getName()@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "boolean excludedDataStreams = false@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "indexExpressions = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13a2443@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "shouldTrackConcreteIndex(context,options,index)@@@93@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "indexAbstraction == null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one index associated with it \" + Arrays.toString(indexNames) + \", can't execute a single index op\")@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",(String)null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "infe = new IndexNotFoundException(expression)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "IndexMetadata indexMetadata@@@87@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "options.allowNoIndices() == false && concreteIndices.isEmpty()@@@99@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "infe.setResources(\"index_expression\",expression)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@107@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return Index.EMPTY_ARRAY@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@64@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "indexExpressions.length == 1@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "concreteIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "IndexMetadata index@@@92@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "addIndex(writeIndex,context)@@@73@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "concreteIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "expression.equals(Metadata.ALL)@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "IndexNotFoundException infe@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? !options.allowNoIndices(): !options.ignoreUnavailable()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<String> expressions = Arrays.asList(indexExpressions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "addIndex(writeIndex,context)@@@79@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "return false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "return true@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "String expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "failNoIndices@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "indexExpressions(0(.equals(Metadata.ALL)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String(( indexNames = new String((((@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "indexAbstraction.getIndices()@@@90@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "throw aliasesNotSupportedException(expression)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->57 [style = bold, label=""];
42->29 [style = solid, label="expressions"];
11->23 [style = dotted, label="true"];
59->23 [style = bold, label=""];
72->76 [style = dotted, label="true"];
38->47 [style = bold, label=""];
73->75 [style = bold, label=""];
75->71 [style = bold, label=""];
33->4 [style = bold, label=""];
53->42 [style = solid, label="indexExpressions"];
50->35 [style = dotted, label="true"];
8->54 [style = dotted, label="true"];
78->75 [style = bold, label=""];
11->15 [style = dotted, label="false"];
49->36 [style = bold, label=""];
43->60 [style = solid, label="indexNames"];
47->21 [style = bold, label=""];
22->20 [style = bold, label=""];
57->55 [style = dotted, label="true"];
6->19 [style = bold, label=""];
14->31 [style = solid, label="writeIndex"];
40->53 [style = dotted, label="true"];
10->32 [style = dotted, label="true"];
20->1 [style = bold, label=""];
53->29 [style = solid, label="context"];
4->2 [style = bold, label=""];
13->38 [style = bold, label=""];
57->39 [style = bold, label=""];
44->66 [style = bold, label=""];
28->49 [style = bold, label=""];
55->37 [style = solid, label="indexExpressions"];
44->2 [style = bold, label=""];
62->29 [style = solid, label="context"];
11->50 [style = dotted, label="true"];
18->41 [style = bold, label=""];
46->37 [style = bold, label=""];
53->23 [style = solid, label="context"];
66->2 [style = bold, label=""];
40->16 [style = dotted, label="true"];
18->0 [style = solid, label="infe"];
55->41 [style = solid, label="indexExpressions"];
33->28 [style = dotted, label="true"];
49->18 [style = dotted, label="false"];
55->39 [style = bold, label=""];
21->51 [style = bold, label=""];
57->55 [style = bold, label=""];
45->26 [style = bold, label=""];
27->19 [style = bold, label=""];
65->48 [style = bold, label=""];
79->73 [style = bold, label=""];
73->78 [style = bold, label=""];
81->71 [style = bold, label=""];
37->63 [style = bold, label=""];
35->50 [style = bold, label=""];
35->26 [style = bold, label=""];
75->81 [style = dotted, label="true"];
26->46 [style = bold, label=""];
37->48 [style = bold, label=""];
8->26 [style = bold, label=""];
74->69 [style = solid, label="expression"];
24->0 [style = solid, label="infe"];
50->19 [style = bold, label=""];
56->31 [style = bold, label=""];
16->42 [style = solid, label="indexExpressions"];
33->58 [style = dotted, label="true"];
72->69 [style = bold, label=""];
53->80 [style = dashed, label="0"];
67->62 [style = dotted, label="true"];
5->43 [style = bold, label=""];
51->30 [style = dotted, label="true"];
31->27 [style = dotted, label="true"];
16->37 [style = solid, label="indexExpressions"];
72->80 [style = dotted, label="true"];
51->11 [style = bold, label=""];
8->20 [style = dotted, label="true"];
31->26 [style = bold, label=""];
45->68 [style = dotted, label="true"];
46->48 [style = solid, label="infe"];
23->26 [style = bold, label=""];
68->19 [style = bold, label=""];
30->31 [style = bold, label=""];
36->41 [style = bold, label=""];
12->42 [style = bold, label=""];
50->26 [style = bold, label=""];
10->43 [style = dotted, label="true"];
14->30 [style = bold, label=""];
38->45 [style = dotted, label="false"];
50->35 [style = bold, label=""];
10->64 [style = dotted, label="true"];
27->26 [style = bold, label=""];
63->48 [style = bold, label=""];
22->1 [style = solid, label="infe"];
33->0 [style = dotted, label="true"];
51->11 [style = dotted, label="false"];
79->70 [style = bold, label=""];
12->8 [style = solid, label="failNoIndices"];
11->17 [style = dotted, label="false"];
30->56 [style = bold, label=""];
10->52 [style = dotted, label="true"];
49->36 [style = dotted, label="true"];
33->41 [style = dotted, label="true"];
42->29 [style = bold, label=""];
8->19 [style = bold, label=""];
51->14 [style = dotted, label="true"];
51->14 [style = bold, label=""];
38->45 [style = bold, label=""];
48->7 [style = bold, label=""];
43->60 [style = bold, label=""];
11->10 [style = dotted, label="false"];
3->1 [style = solid, label="infe"];
62->23 [style = solid, label="context"];
23->6 [style = dotted, label="true"];
11->59 [style = bold, label=""];
26->46 [style = dotted, label="true"];
53->50 [style = solid, label="context"];
6->26 [style = bold, label=""];
73->78 [style = dotted, label="true"];
47->19 [style = bold, label=""];
41->0 [style = bold, label=""];
38->47 [style = dotted, label="true"];
28->24 [style = dotted, label="false"];
67->57 [style = bold, label=""];
55->42 [style = solid, label="indexExpressions"];
62->31 [style = solid, label="context"];
13->79 [style = dashed, label="0"];
72->74 [style = dotted, label="true"];
19->13 [style = bold, label=""];
47->26 [style = bold, label=""];
68->26 [style = bold, label=""];
13->38 [style = dotted, label="false"];
45->68 [style = bold, label=""];
2->19 [style = bold, label=""];
23->6 [style = bold, label=""];
11->10 [style = bold, label=""];
66->63 [style = solid, label="excludedDataStreams"];
30->56 [style = dotted, label="true"];
79->70 [style = dotted, label="true"];
45->19 [style = bold, label=""];
26->37 [style = dotted, label="true"];
53->41 [style = solid, label="indexExpressions"];
13->8 [style = bold, label=""];
16->41 [style = solid, label="indexExpressions"];
9->3 [style = dotted, label="false"];
8->1 [style = dotted, label="true"];
8->54 [style = bold, label=""];
31->19 [style = bold, label=""];
4->66 [style = bold, label=""];
67->53 [style = dotted, label="true"];
9->22 [style = dotted, label="true"];
47->21 [style = dotted, label="true"];
53->31 [style = solid, label="context"];
9->22 [style = bold, label=""];
69->79 [style = solid, label="indexAbstraction"];
1->51 [style = bold, label=""];
10->32 [style = bold, label=""];
12->47 [style = solid, label="failNoIndices"];
53->37 [style = solid, label="indexExpressions"];
63->65 [style = dotted, label="true"];
0->66 [style = bold, label=""];
23->19 [style = bold, label=""];
34->50 [style = solid, label="options"];
39->34 [style = bold, label=""];
32->5 [style = bold, label=""];
68->63 [style = solid, label="excludedDataStreams"];
53->57 [style = solid, label="indexExpressions"];
26->63 [style = dotted, label="true"];
9->3 [style = bold, label=""];
75->81 [style = bold, label=""];
70->73 [style = bold, label=""];
13->8 [style = dotted, label="true"];
16->57 [style = solid, label="indexExpressions"];
36->0 [style = solid, label="infe"];
14->30 [style = solid, label="writeIndex"];
3->20 [style = bold, label=""];
72->77 [style = dotted, label="true"];
10->50 [style = bold, label=""];
60->50 [style = bold, label=""];
54->9 [style = bold, label=""];
49->18 [style = bold, label=""];
28->24 [style = bold, label=""];
24->41 [style = bold, label=""];
10->25 [style = dotted, label="true"];
33->58 [style = bold, label=""];
28->49 [style = dotted, label="true"];
63->65 [style = bold, label=""];
45->51 [style = bold, label=""];
62->50 [style = solid, label="context"];
33->4 [style = dotted, label="false"];
34->12 [style = bold, label=""];
11->61 [style = dotted, label="false"];
19->13 [style = solid, label="indexAbstraction"];
26->7 [style = bold, label=""];
51->31 [style = dotted, label="true"];
59->23 [style = solid, label="writeIndex"];
10->60 [style = dotted, label="true"];
44->33 [style = dotted, label="true"];
0->2 [style = bold, label=""];
29->44 [style = bold, label=""];
26->48 [style = dotted, label="true"];
44->33 [style = bold, label=""];
35->19 [style = bold, label=""];
69->79 [style = bold, label=""];
58->28 [style = bold, label=""];
11->59 [style = dotted, label="true"];
31->27 [style = bold, label=""];
10->5 [style = dotted, label="true"];
8->9 [style = dotted, label="true"];
}
