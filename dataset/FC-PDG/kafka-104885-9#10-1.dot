digraph {
13 [style = filled, label = "PowerMock.replayAll()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectInitializeTask()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerCurrentOffsets = new HashMap<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){callback.getValue().onComplete(committableOffsets,null)return null}})@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "taskOffsets.put(new TopicPartition(TOPIC,3),new OffsetAndMetadata(FIRST_OFFSET))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expectConversionAndTransformation(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Capture<OffsetCommitCallback> callback = EasyMock.newCapture()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> committableOffsets = new HashMap<>()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "workerTask.iteration()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "workerTask.iteration()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "workerTask.iteration()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "workerTask.initializeAndStart()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PowerMock.verifyAll()@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "workerTask.iteration()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "workerStartingOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(workerCurrentOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testPreCommit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "committableOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EasyMock.expectLastCall().andReturn(taskOffsets)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "consumer.commitAsync(EasyMock.eq(committableOffsets),EasyMock.capture(callback))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "createTask(initialState)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectTaskGetTopic(true)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "EasyMock.expect(consumer.assignment()).andReturn(workerCurrentOffsets.keySet())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "taskOffsets.put(TOPIC_PARTITION2,new OffsetAndMetadata(FIRST_OFFSET + 1))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "EasyMock.expectLastCall()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "workerTask.iteration()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expectPollInitialAssignment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "workerCurrentOffsets.put(TOPIC_PARTITION,new OffsetAndMetadata(FIRST_OFFSET + 2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> taskOffsets = new HashMap<>()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testIgnoredCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "sinkTask.preCommit(workerCurrentOffsets)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sinkTaskContext.getValue().requestCommit()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expectConsumerPoll(0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final Map<TopicPartition,OffsetAndMetadata> workerStartingOffsets = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "sinkTask.put(EasyMock.anyObject())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "workerTask.iteration()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expectConsumerPoll(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PowerMock.verifyAll()@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testPreCommit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "expectConsumerPoll(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "expectConversionAndTransformation(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "EasyMock.expectLastCall()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(committableOffsets,Whitebox.getInternalState(workerTask,\"lastCommittedOffsets\"))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "PowerMock.replayAll()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(workerStartingOffsets,Whitebox.getInternalState(workerTask,\"currentOffsets\"))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "workerTask.initializeAndStart()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "EasyMock.expectLastCall().andReturn(workerStartingOffsets)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44->54 [style = bold, label=""];
41->0 [style = bold, label=""];
2->46 [style = bold, label=""];
15->28 [style = solid, label="workerStartingOffsets"];
2->26 [style = bold, label=""];
22->15 [style = bold, label=""];
54->49 [style = bold, label=""];
9->11 [style = bold, label=""];
27->12 [style = bold, label=""];
14->35 [style = bold, label=""];
34->5 [style = bold, label=""];
36->29 [style = bold, label=""];
4->39 [style = bold, label=""];
2->39 [style = solid, label="workerCurrentOffsets"];
33->4 [style = bold, label=""];
12->17 [style = bold, label=""];
25->53 [style = dashed, label="0"];
28->7 [style = bold, label=""];
36->38 [style = solid, label="taskOffsets"];
8->6 [style = bold, label=""];
15->6 [style = solid, label="workerStartingOffsets"];
0->16 [style = solid, label="committableOffsets"];
45->53 [style = bold, label=""];
57->58 [style = bold, label=""];
17->32 [style = bold, label=""];
50->48 [style = bold, label=""];
15->56 [style = solid, label="workerStartingOffsets"];
5->28 [style = bold, label=""];
7->8 [style = bold, label=""];
52->17 [style = bold, label=""];
42->40 [style = bold, label=""];
11->2 [style = bold, label=""];
14->43 [style = bold, label=""];
47->50 [style = bold, label=""];
24->41 [style = bold, label=""];
38->1 [style = bold, label=""];
15->50 [style = solid, label="workerStartingOffsets"];
49->55 [style = bold, label=""];
3->34 [style = bold, label=""];
6->20 [style = bold, label=""];
48->52 [style = bold, label=""];
53->37 [style = bold, label=""];
37->22 [style = bold, label=""];
51->40 [style = bold, label=""];
55->57 [style = bold, label=""];
58->47 [style = bold, label=""];
0->33 [style = bold, label=""];
31->27 [style = bold, label=""];
13->3 [style = bold, label=""];
10->25 [style = bold, label=""];
25->37 [style = bold, label=""];
15->9 [style = bold, label=""];
43->35 [style = bold, label=""];
16->21 [style = bold, label=""];
26->23 [style = bold, label=""];
39->56 [style = bold, label=""];
38->56 [style = dashed, label="0"];
18->13 [style = bold, label=""];
39->38 [style = bold, label=""];
35->45 [style = bold, label=""];
40->14 [style = bold, label=""];
23->39 [style = bold, label=""];
0->12 [style = solid, label="committableOffsets"];
23->36 [style = bold, label=""];
35->10 [style = bold, label=""];
32->18 [style = bold, label=""];
19->40 [style = bold, label=""];
1->31 [style = bold, label=""];
20->30 [style = bold, label=""];
29->24 [style = bold, label=""];
30->16 [style = bold, label=""];
2->8 [style = solid, label="workerCurrentOffsets"];
0->27 [style = solid, label="committableOffsets"];
46->23 [style = bold, label=""];
56->44 [style = bold, label=""];
10->45 [style = dashed, label="0"];
31->27 [style = solid, label="callback"];
15->48 [style = solid, label="workerStartingOffsets"];
26->46 [style = dashed, label="0"];
}
