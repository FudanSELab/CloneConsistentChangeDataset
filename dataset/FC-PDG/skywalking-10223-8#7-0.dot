digraph {
9 [style = filled, label = "notify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stream.processor().equals()@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RecordStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TopNStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Class aClass@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ManagementStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "stream.processor().equals()@@@17@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Stream stream = (Stream)aClass.getAnnotation()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "aClass.isAnnotationPresent()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "NoneStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "stream.processor().equals()@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "notify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "throw new UnexpectedException(\"Stream annotation listener could only parse the class present stream annotation.\")@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stream.processor().equals()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "notify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "stream.processor().equals()@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "MetricsStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "stream.processor().equals()@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "NoneStreamingProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@9@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throw new UnexpectedException(\"Unknown stream processor.\")@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12->3 [style = solid, label="aClass"];
2->11 [style = solid, label="stream"];
8->5 [style = dotted, label="false"];
5->11 [style = dotted, label="true"];
7->8 [style = bold, label=""];
13->4 [style = bold, label=""];
8->5 [style = bold, label=""];
17->16 [style = dotted, label="true"];
2->7 [style = bold, label=""];
10->14 [style = dashed, label="0"];
7->6 [style = dotted, label="false"];
6->0 [style = bold, label=""];
9->13 [style = bold, label=""];
2->10 [style = solid, label="stream"];
18->13 [style = bold, label=""];
7->6 [style = bold, label=""];
17->0 [style = dotted, label="false"];
13->4 [style = dotted, label="false"];
5->15 [style = dotted, label="false"];
2->1 [style = solid, label="stream"];
12->11 [style = solid, label="aClass"];
18->12 [style = dotted, label="true"];
19->13 [style = bold, label=""];
15->17 [style = dotted, label="false"];
6->10 [style = bold, label=""];
7->3 [style = bold, label=""];
8->1 [style = bold, label=""];
13->2 [style = dotted, label="true"];
6->10 [style = dotted, label="true"];
2->16 [style = solid, label="stream"];
19->12 [style = dotted, label="true"];
5->11 [style = bold, label=""];
2->3 [style = solid, label="stream"];
15->14 [style = bold, label=""];
12->14 [style = solid, label="aClass"];
12->16 [style = solid, label="aClass"];
5->6 [style = dotted, label="false"];
7->8 [style = dotted, label="false"];
6->15 [style = dashed, label="0"];
6->0 [style = dotted, label="false"];
9->12 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
13->2 [style = bold, label=""];
17->16 [style = bold, label=""];
8->1 [style = dotted, label="true"];
12->10 [style = solid, label="aClass"];
13->7 [style = dotted, label="true"];
17->0 [style = bold, label=""];
5->6 [style = bold, label=""];
7->3 [style = dotted, label="true"];
5->15 [style = bold, label=""];
12->1 [style = solid, label="aClass"];
2->14 [style = solid, label="stream"];
15->17 [style = bold, label=""];
}
