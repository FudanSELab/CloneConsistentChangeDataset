digraph {
3 [style = filled, label = "TextFlowEqualityHelper.assertEquals(expectedTexts,description)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TextFlow description = new ContainsAndRegexBasedSearchRuleDescriber(true,false,query).getDescription()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testNoAstRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TextFlow description = new ContainsAndRegexBasedSearchRuleDescriber(EnumSet.of(SearchRules.SearchFlags.REGULAR_EXPRESSION),query).getDescription()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "List<Text> expectedTexts = List.of(TooltipTextUtil.createText(\"This search contains entries in which any field contains the term \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" (case sensitive). \"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String query = \"a b\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TextFlow description = new ContainsAndRegexBasedSearchRuleDescriber(false,true,query).getDescription()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testNoAstCaseSensitive['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Text> expectedTexts = List.of(TooltipTextUtil.createText(\"This search contains entries in which any field contains the regular expression \"),TooltipTextUtil.createText(\"a\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" and \"),TooltipTextUtil.createText(\"b\",TooltipTextUtil.TextType.BOLD),TooltipTextUtil.createText(\" (case insensitive). \"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNoAstRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
6->4 [style = bold, label=""];
2->3 [style = solid, label="description"];
2->5 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
8->3 [style = solid, label="expectedTexts"];
1->8 [style = dashed, label="0"];
5->3 [style = solid, label="description"];
7->4 [style = bold, label=""];
9->3 [style = solid, label="description"];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
2->3 [style = bold, label=""];
1->3 [style = solid, label="expectedTexts"];
8->9 [style = bold, label=""];
}
