digraph {
5 [style = filled, label = "assertTrue(\"^starttest in multi line mode\",reg.matches(text,RegexpMatcher.MATCH_MULTILINE))@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String text@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String text@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(\"endtest$ in default mode\",!reg.matches(text))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "doStartTest1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertFalse(\"^starttest in single line mode\",reg.matches(text,RegexpMatcher.MATCH_SINGLELINE))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertTrue(\"^starttest in default mode\",!reg.matches(text))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "doEndTest1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(\"^starttest in default mode\",reg.matches(text))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(\"endtest$ in multi line mode\",reg.matches(text,RegexpMatcher.MATCH_MULTILINE))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "reg.setPattern(\"endtest$\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(\"endtest$ in single line mode\",!reg.matches(text,RegexpMatcher.MATCH_SINGLELINE))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(\"^starttest in single line mode\",!reg.matches(text,RegexpMatcher.MATCH_SINGLELINE))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "doStartTest1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "reg.setPattern(\"^starttest\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->7 [style = solid, label="text"];
11->10 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
5->9 [style = dashed, label="0"];
4->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
0->14 [style = dashed, label="0"];
6->4 [style = bold, label=""];
2->12 [style = dashed, label="0"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
11->13 [style = bold, label=""];
12->14 [style = bold, label=""];
1->5 [style = solid, label="text"];
10->9 [style = solid, label="text"];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
4->13 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
1->8 [style = solid, label="text"];
3->1 [style = dotted, label="true"];
0->5 [style = bold, label=""];
}
