digraph {
3 [style = filled, label = "kafkaProducer.initTransactions()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long,KafkaRecordEntity>> polledRecords = recordSupplier.poll(poll_timeout_millis)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int i = 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long,KafkaRecordEntity>> initialRecords = createOrderedPartitionableRecords()@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final int polledRecordsPartition1Size = polledRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testPollAfterMoreDataAdded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "kafkaProducer.send(record).get()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(200)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "kafkaProducer.beginTransaction()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int polledRecordsPartition0Size = polledRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "polledRecords.size() != 13 && i < pollRetry@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "recordSupplier.seekToEarliest(partitions)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(initialRecordsPartition1Size,polledRecordsPartition1Size)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "polledRecords.addAll(recordSupplier.poll(poll_timeout_millis))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "KafkaRecordSupplier recordSupplier = new KafkaRecordSupplier(kafkaServer.consumerProperties(),OBJECT_MAPPER)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "insertData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Thread.sleep(200)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "kafkaProducer.commitTransaction()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "kafkaProducer.commitTransaction()@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Set<StreamPartition<Integer>> partitions = ImmutableSet.of(StreamPartition.of(topic,0),StreamPartition.of(topic,1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(initialRecordsPartition0Size,polledRecordsPartition0Size)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "kafkaProducer.beginTransaction()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long>> initialRecords = createOrderedPartitionableRecords()@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(records.size(),polledRecords.size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "polledRecords.size() != records.size() && i < pollRetry@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "kafkaProducer.initTransactions()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "recordSupplier.close()@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "kafkaProducer.send(record).get()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "polledRecords.addAll(recordSupplier.poll(poll_timeout_millis))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int initialRecordsPartition1Size = initialRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(partitions,recordSupplier.getAssignment())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "recordSupplier.assign(partitions)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testPollAfterMoreDataAdded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "final int initialRecordsPartition0Size = initialRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long>> polledRecords = recordSupplier.poll(poll_timeout_millis)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->31 [style = solid, label="i"];
11->16 [style = bold, label=""];
21->32 [style = solid, label="partitions"];
4->18 [style = dotted, label="true"];
21->16 [style = solid, label="partitions"];
12->5 [style = bold, label=""];
4->17 [style = bold, label=""];
28->20 [style = bold, label=""];
26->10 [style = bold, label=""];
25->13 [style = bold, label=""];
32->12 [style = bold, label=""];
8->19 [style = bold, label=""];
9->4 [style = bold, label=""];
26->6 [style = solid, label="polledRecordsPartition0Size"];
21->12 [style = solid, label="partitions"];
30->32 [style = bold, label=""];
31->2 [style = bold, label=""];
16->25 [style = bold, label=""];
4->29 [style = bold, label=""];
33->1 [style = bold, label=""];
12->34 [style = bold, label=""];
13->33 [style = solid, label="initialRecordsPartition1Size"];
21->30 [style = bold, label=""];
10->6 [style = bold, label=""];
22->7 [style = bold, label=""];
27->15 [style = bold, label=""];
34->0 [style = bold, label=""];
36->11 [style = bold, label=""];
37->7 [style = bold, label=""];
20->4 [style = bold, label=""];
29->18 [style = bold, label=""];
5->34 [style = dashed, label="0"];
7->14 [style = bold, label=""];
4->29 [style = dotted, label="true"];
0->15 [style = solid, label="i"];
23->24 [style = bold, label=""];
10->33 [style = solid, label="polledRecordsPartition1Size"];
14->23 [style = bold, label=""];
5->0 [style = bold, label=""];
24->21 [style = bold, label=""];
15->31 [style = bold, label=""];
13->26 [style = bold, label=""];
6->33 [style = bold, label=""];
3->8 [style = bold, label=""];
25->6 [style = solid, label="initialRecordsPartition0Size"];
31->27 [style = dotted, label="true"];
18->9 [style = bold, label=""];
31->15 [style = dotted, label="true"];
2->27 [style = bold, label=""];
31->2 [style = dotted, label="true"];
4->36 [style = bold, label=""];
15->31 [style = solid, label="i"];
20->4 [style = solid, label="i"];
19->28 [style = bold, label=""];
31->3 [style = bold, label=""];
9->4 [style = solid, label="i"];
4->9 [style = dotted, label="true"];
17->36 [style = dashed, label="0"];
35->7 [style = bold, label=""];
20->9 [style = solid, label="i"];
0->31 [style = bold, label=""];
17->11 [style = bold, label=""];
}
