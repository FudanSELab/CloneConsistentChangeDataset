digraph {
22 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "queueHandles(0(.remove()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(new String(data,UTF_8),testString + (m - 1))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < m@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "fail()@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "String dir@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "byte(( data = null@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String dir = \"/testRemove1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testRemove1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i < n@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final int numClients = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNotNull(data)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "return@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "NoSuchElementException e@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int numClients = 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes(UTF_8))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(new String(data),testString + (m - 1))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16->6 [style = solid, label="i"];
3->16 [style = solid, label="dir"];
15->25 [style = bold, label=""];
22->29 [style = dashed, label="0"];
14->25 [style = solid, label="testString"];
10->3 [style = dotted, label="true"];
13->5 [style = dotted, label="true"];
32->34 [style = bold, label=""];
23->12 [style = solid, label="i"];
20->25 [style = dashed, label="0"];
15->20 [style = bold, label=""];
26->28 [style = dotted, label="true"];
0->24 [style = bold, label=""];
12->18 [style = bold, label=""];
23->12 [style = bold, label=""];
21->20 [style = solid, label="m"];
6->12 [style = solid, label="i"];
11->0 [style = solid, label="i"];
0->11 [style = dotted, label="true"];
8->2 [style = solid, label="i"];
0->7 [style = dotted, label="true"];
7->29 [style = bold, label=""];
10->14 [style = bold, label=""];
16->6 [style = bold, label=""];
14->20 [style = solid, label="testString"];
1->31 [style = dashed, label="0"];
26->14 [style = bold, label=""];
12->18 [style = dotted, label="true"];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
21->16 [style = solid, label="dir"];
5->15 [style = solid, label="data"];
12->6 [style = dotted, label="true"];
13->5 [style = bold, label=""];
33->30 [style = bold, label=""];
4->0 [style = solid, label="i"];
13->15 [style = bold, label=""];
34->35 [style = bold, label=""];
28->13 [style = solid, label="m"];
24->8 [style = bold, label=""];
36->35 [style = bold, label=""];
1->19 [style = bold, label=""];
22->11 [style = bold, label=""];
29->11 [style = bold, label=""];
21->13 [style = solid, label="m"];
4->7 [style = solid, label="i"];
5->20 [style = solid, label="data"];
32->34 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
12->36 [style = bold, label=""];
2->13 [style = solid, label="i"];
19->17 [style = bold, label=""];
10->9 [style = dotted, label="true"];
17->23 [style = bold, label=""];
13->2 [style = dotted, label="true"];
7->22 [style = bold, label=""];
5->25 [style = solid, label="data"];
30->31 [style = bold, label=""];
14->7 [style = solid, label="testString"];
31->19 [style = bold, label=""];
8->13 [style = bold, label=""];
18->16 [style = bold, label=""];
6->12 [style = bold, label=""];
24->25 [style = solid, label="data"];
4->11 [style = solid, label="i"];
27->0 [style = solid, label="n"];
24->15 [style = solid, label="data"];
18->16 [style = solid, label="clients"];
11->7 [style = solid, label="i"];
14->1 [style = bold, label=""];
8->13 [style = solid, label="i"];
0->22 [style = dotted, label="true"];
2->13 [style = bold, label=""];
5->2 [style = bold, label=""];
30->16 [style = solid, label="dir"];
11->0 [style = bold, label=""];
0->29 [style = dotted, label="true"];
12->4 [style = bold, label=""];
12->16 [style = dotted, label="true"];
26->21 [style = dotted, label="true"];
28->25 [style = solid, label="m"];
14->30 [style = dashed, label="0"];
10->21 [style = dotted, label="true"];
24->20 [style = solid, label="data"];
9->0 [style = solid, label="n"];
}
