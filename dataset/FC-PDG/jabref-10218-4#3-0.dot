digraph {
21 [style = filled, label = "testImportEntriesBookExample['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(\"author\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),be.getField(\"edition\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(\"pages\"))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),be.getField(\"keywords\"))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,entries.size())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),be.getField(\"publisher\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(\"publisher\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(\"address\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(\"title\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"book\",entry.getType())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestEmpty.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"book\",be.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),be.getField(\"address\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"2016\"),be.getField(\"year\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),be.getField(\"author\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(\"year\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "BibEntry be = bibEntries.get(0)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),be.getField(\"url\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(\"keywords\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),be.getField(\"pages\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(\"edition\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testImportEntriesBookExample['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testImportEntriesEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(\"url\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),be.getField(\"title\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10->22 [style = bold, label=""];
4->18 [style = dashed, label="0"];
23->20 [style = bold, label=""];
8->16 [style = dashed, label="0"];
3->28 [style = dashed, label="0"];
22->15 [style = bold, label=""];
5->9 [style = bold, label=""];
29->30 [style = bold, label=""];
3->25 [style = bold, label=""];
20->26 [style = bold, label=""];
0->19 [style = dashed, label="0"];
7->4 [style = bold, label=""];
16->23 [style = bold, label=""];
10->27 [style = dashed, label="0"];
26->24 [style = bold, label=""];
24->18 [style = bold, label=""];
13->23 [style = dashed, label="0"];
17->19 [style = bold, label=""];
13->1 [style = bold, label=""];
2->12 [style = bold, label=""];
19->16 [style = bold, label=""];
1->20 [style = dashed, label="0"];
3->10 [style = bold, label=""];
15->17 [style = bold, label=""];
21->9 [style = bold, label=""];
1->6 [style = bold, label=""];
30->28 [style = bold, label=""];
14->0 [style = bold, label=""];
7->24 [style = dashed, label="0"];
6->26 [style = dashed, label="0"];
12->14 [style = bold, label=""];
0->8 [style = bold, label=""];
12->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
14->17 [style = dashed, label="0"];
25->10 [style = bold, label=""];
10->2 [style = bold, label=""];
28->27 [style = bold, label=""];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
9->30 [style = dashed, label="0"];
8->13 [style = bold, label=""];
}
