digraph {
8 [style = filled, label = "verify(objectSubscriber,times(1)).onComplete()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(objectObserver,times(1)).onComplete()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "mapped.subscribe(objectObserver)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Observable<Map<Integer,String>> mapped = source.toMap(lengthFunc).toObservable()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expected.put(3,\"cccccc\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(objectSubscriber,times(1)).onNext(expected)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<Integer,String> expected = new HashMap<Integer,String>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expected.put(3,\"ccc\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<Integer,String> expected = new HashMap<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expected.put(1,\"a\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "toMapWithValueSelectorFlowable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(objectSubscriber,never()).onError(any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Flowable<String> source = Flowable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Flowable<Map<Integer,String>> mapped = source.toMap(lengthFunc,duplicate).toFlowable()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expected.put(2,\"bb\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "verify(objectObserver,never()).onError(any())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "toMapObservable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expected.put(1,\"aa\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mapped.subscribe(objectSubscriber)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expected.put(4,\"dddd\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Observable<String> source = Observable.just(\"a\",\"bb\",\"ccc\",\"dddd\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expected.put(4,\"dddddddd\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expected.put(2,\"bbbb\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "toMapWithValueSelectorFlowable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "verify(objectObserver,times(1)).onNext(expected)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
0->7 [style = solid, label="expected"];
0->16 [style = bold, label=""];
22->15 [style = bold, label=""];
7->18 [style = dashed, label="0"];
21->0 [style = bold, label=""];
4->6 [style = bold, label=""];
11->15 [style = dashed, label="0"];
1->21 [style = dashed, label="0"];
12->7 [style = solid, label="expected"];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
0->12 [style = dashed, label="0"];
8->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
19->24 [style = bold, label=""];
6->2 [style = bold, label=""];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
23->22 [style = bold, label=""];
5->17 [style = dashed, label="0"];
20->23 [style = bold, label=""];
24->21 [style = bold, label=""];
4->20 [style = dashed, label="0"];
0->18 [style = solid, label="expected"];
6->23 [style = dashed, label="0"];
1->12 [style = bold, label=""];
5->7 [style = bold, label=""];
12->3 [style = bold, label=""];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
2->22 [style = dashed, label="0"];
18->14 [style = bold, label=""];
2->11 [style = bold, label=""];
10->24 [style = dashed, label="0"];
17->18 [style = bold, label=""];
3->16 [style = dashed, label="0"];
}
