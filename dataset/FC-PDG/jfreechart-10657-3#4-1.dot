digraph {
0 [style = filled, label = "assertEquals(2.0,DataUtils.calculateColumnTotal(table,1),EPSILON)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(4.0,DataUtils.calculateRowTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5af1),EPSILON)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "table.addValue(new Double(2.0),\"R0\",\"C1\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "table.addValue(1.0,\"R0\",\"C0\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "table.addValue(new Double(3.0),\"R1\",\"C0\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "table.setValue(null,\"R1\",\"C1\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(4.0,DataUtils.calculateColumnTotal(table,0),EPSILON)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0.0,DataUtils.calculateRowTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5aff),EPSILON)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testCalculateColumnTotal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCalculateColumnTotal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "table.addValue(new Double(1.0),\"R0\",\"C0\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "table.addValue(new Double(4.0),\"R1\",\"C1\")@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(3.0,DataUtils.calculateRowTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5ae3),EPSILON)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(3.0,DataUtils.calculateRowTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5a9c),EPSILON)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(3.0,DataUtils.calculateRowTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5b13),EPSILON)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "table.setValue(null,\"R1\",\"C1\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(0.0,DataUtils.calculateRowTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5ac7),EPSILON)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(7.0,DataUtils.calculateRowTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5ad4),EPSILON)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "table.addValue(3.0,\"R1\",\"C0\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(0.0,DataUtils.calculateRowTotal(table,1,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5b22),EPSILON)@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(2.0,DataUtils.calculateRowTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5ab9),EPSILON)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "table.addValue(4.0,\"R1\",\"C1\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(1.0,DataUtils.calculateRowTotal(table,0,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1e5aab),EPSILON)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "table.addValue(2.0,\"R0\",\"C1\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testCalculateRowTotal2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DefaultKeyedValues2D table = new DefaultKeyedValues2D()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(6.0,DataUtils.calculateColumnTotal(table,1),EPSILON)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
17->25 [style = bold, label=""];
20->17 [style = bold, label=""];
10->14 [style = bold, label=""];
19->20 [style = bold, label=""];
16->24 [style = bold, label=""];
0->16 [style = dashed, label="0"];
5->22 [style = solid, label="table"];
5->17 [style = solid, label="table"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
3->22 [style = bold, label=""];
22->23 [style = bold, label=""];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
15->5 [style = bold, label=""];
9->6 [style = bold, label=""];
6->10 [style = dashed, label="0"];
8->22 [style = dashed, label="0"];
5->1 [style = bold, label=""];
21->26 [style = bold, label=""];
12->10 [style = bold, label=""];
5->16 [style = solid, label="table"];
5->20 [style = solid, label="table"];
1->11 [style = dashed, label="0"];
3->8 [style = bold, label=""];
23->19 [style = bold, label=""];
5->0 [style = solid, label="table"];
5->21 [style = solid, label="table"];
5->25 [style = solid, label="table"];
13->5 [style = bold, label=""];
5->19 [style = solid, label="table"];
5->26 [style = solid, label="table"];
5->4 [style = solid, label="table"];
5->11 [style = bold, label=""];
14->8 [style = bold, label=""];
9->12 [style = dashed, label="0"];
8->4 [style = bold, label=""];
3->14 [style = dashed, label="0"];
5->23 [style = solid, label="table"];
5->8 [style = solid, label="table"];
5->24 [style = solid, label="table"];
25->21 [style = bold, label=""];
2->5 [style = bold, label=""];
26->18 [style = bold, label=""];
18->16 [style = bold, label=""];
}
