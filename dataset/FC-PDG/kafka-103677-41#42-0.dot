digraph {
18 [style = filled, label = "selector.clear()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ProduceResponse response = produceResponse(tp0,i,Errors.NONE,throttleTimeMs)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "int v = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final long offset = 0@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "i < 4@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "selector.clear()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(3,records.size())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "client.respond(produceResponse(tp0,offset,Errors.NONE,100 * i))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(400,maxMetric.value(),EPS)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i++@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "client.send(request,time.milliseconds())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "buffer = response.serialize(ApiKeys.PRODUCE.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "builder.appendWithOffset(i * 3 + v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "subscriptions.assignFromUser(singleton(tp1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 1@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int throttleTimeMs = 100 * i@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "int i = 1@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(metrics)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "v < 3@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 1@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "subscriptions.seek(tp1,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records = fetchRecords(builder.build(),Errors.NONE,100L,100 * i).get(tp1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "client.close()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "client.poll(1,time.milliseconds())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "v++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "ProduceRequest.Builder builder = new ProduceRequest.Builder(RecordBatch.CURRENT_MAGIC_VALUE,(short)1,1000,Collections.emptyMap())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(250,avgMetric.value(),EPS)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i <= 3@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1->55 [style = dashed, label="0"];
1->55 [style = bold, label=""];
24->40 [style = solid, label="selector"];
12->8 [style = solid, label="i"];
4->1 [style = solid, label="i"];
30->16 [style = solid, label="builder"];
53->54 [style = bold, label=""];
12->9 [style = bold, label=""];
9->35 [style = bold, label=""];
55->45 [style = dotted, label="true"];
1->3 [style = dotted, label="true"];
17->38 [style = bold, label=""];
0->13 [style = solid, label="offset"];
1->13 [style = dotted, label="true"];
55->48 [style = bold, label=""];
8->54 [style = dashed, label="0"];
51->50 [style = bold, label=""];
43->1 [style = bold, label=""];
49->56 [style = bold, label=""];
3->56 [style = solid, label="i"];
1->3 [style = solid, label="i"];
36->15 [style = solid, label="buffer"];
55->48 [style = dotted, label="true"];
9->41 [style = dotted, label="true"];
35->31 [style = bold, label=""];
22->25 [style = bold, label=""];
22->33 [style = bold, label=""];
50->43 [style = bold, label=""];
20->34 [style = bold, label=""];
26->14 [style = bold, label=""];
37->21 [style = bold, label=""];
56->46 [style = bold, label=""];
22->33 [style = dotted, label="true"];
11->12 [style = bold, label=""];
1->4 [style = dotted, label="true"];
9->8 [style = bold, label=""];
9->38 [style = dotted, label="true"];
1->11 [style = bold, label=""];
19->37 [style = bold, label=""];
9->8 [style = dotted, label="true"];
41->30 [style = bold, label=""];
3->55 [style = solid, label="i"];
3->7 [style = bold, label=""];
2->1 [style = solid, label="i"];
2->4 [style = solid, label="i"];
28->19 [style = bold, label=""];
29->40 [style = bold, label=""];
16->39 [style = bold, label=""];
55->44 [style = dotted, label="true"];
31->28 [style = bold, label=""];
8->38 [style = solid, label="i"];
49->46 [style = dotted, label="true"];
5->37 [style = dashed, label="0"];
13->10 [style = bold, label=""];
12->41 [style = solid, label="i"];
46->56 [style = solid, label="v"];
38->20 [style = bold, label=""];
1->10 [style = dotted, label="true"];
55->49 [style = dotted, label="true"];
10->39 [style = dashed, label="0"];
2->1 [style = bold, label=""];
49->44 [style = bold, label=""];
1->3 [style = bold, label=""];
2->13 [style = solid, label="i"];
27->36 [style = solid, label="apiVersionsResponseVersion"];
16->39 [style = solid, label="request"];
3->55 [style = bold, label=""];
15->22 [style = bold, label=""];
49->56 [style = dotted, label="true"];
24->26 [style = bold, label=""];
12->42 [style = dashed, label="0"];
1->55 [style = solid, label="i"];
39->17 [style = bold, label=""];
9->23 [style = dotted, label="true"];
40->27 [style = bold, label=""];
9->20 [style = dotted, label="true"];
14->29 [style = bold, label=""];
34->23 [style = bold, label=""];
4->1 [style = bold, label=""];
18->8 [style = bold, label=""];
9->16 [style = dotted, label="true"];
20->34 [style = solid, label="buffer"];
9->30 [style = dotted, label="true"];
23->18 [style = bold, label=""];
33->22 [style = bold, label=""];
7->13 [style = bold, label=""];
8->19 [style = dashed, label="0"];
1->56 [style = solid, label="i"];
12->9 [style = solid, label="i"];
26->40 [style = solid, label="throttleTimeSensor"];
27->36 [style = bold, label=""];
55->3 [style = dotted, label="true"];
5->47 [style = dashed, label="0"];
45->49 [style = bold, label=""];
9->17 [style = dotted, label="true"];
46->49 [style = bold, label=""];
0->2 [style = bold, label=""];
36->15 [style = bold, label=""];
41->38 [style = solid, label="throttleTimeMs"];
6->0 [style = bold, label=""];
8->9 [style = solid, label="i"];
8->41 [style = solid, label="i"];
4->13 [style = solid, label="i"];
55->52 [style = dotted, label="true"];
1->7 [style = dotted, label="true"];
9->41 [style = bold, label=""];
45->56 [style = solid, label="v"];
54->47 [style = bold, label=""];
48->45 [style = bold, label=""];
8->42 [style = bold, label=""];
8->5 [style = bold, label=""];
25->12 [style = bold, label=""];
9->34 [style = dotted, label="true"];
45->46 [style = solid, label="v"];
44->52 [style = bold, label=""];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
45->49 [style = solid, label="v"];
9->39 [style = dotted, label="true"];
9->18 [style = dotted, label="true"];
46->49 [style = solid, label="v"];
52->3 [style = bold, label=""];
30->16 [style = bold, label=""];
9->53 [style = dashed, label="0"];
32->24 [style = bold, label=""];
55->8 [style = bold, label=""];
42->53 [style = bold, label=""];
12->38 [style = solid, label="i"];
}
