digraph {
5 [style = filled, label = "testMatchedOperandsDifferent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testMatchedOperandsDifferent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planner.addRule(AssertOperandsDifferentRule.INSTANCE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "PhysLeafRel rightPhy = new PhysLeafRel(cluster,PHYS_CALLING_CONVENTION,\"b\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testMultiInputsParentOpMatching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "NoneLeafRel leftRel = new NoneLeafRel(cluster,\"a\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "planner.addRule(new AssertOperandsDifferentRule())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "planner.addRule(PhysLeafRule.INSTANCE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "planner.setRoot(new EnumerableUnion(cluster,cluster.traitSetOf(PHYS_CALLING_CONVENTION),Arrays.asList(leftPhy,rightPhy),false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "NoneLeafRel leftRel = new NoneLeafRel(cluster,\"b\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PhysLeafRel rightPhy = new PhysLeafRel(cluster,PHYS_CALLING_CONVENTION_2,\"b\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "planner.chooseDelegate().findBestExp()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "planner.ensureRegistered(leftPhy,rightPhy)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "planner.setRoot(parent)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "planner.addRule(new ThreeInputsUnionRule())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "PhysBiRel parent = new PhysBiRel(cluster,cluster.traitSetOf(PHYS_CALLING_CONVENTION),leftPhy,rightPhy)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "planner.chooseDelegate().findBestExp()@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RelNode leftPhy = planner.changeTraits(leftRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
15->2 [style = bold, label=""];
4->20 [style = solid, label="leftPhy"];
11->20 [style = dashed, label="0"];
21->4 [style = solid, label="leftRel"];
1->15 [style = dashed, label="0"];
6->21 [style = solid, label="cluster"];
12->17 [style = bold, label=""];
3->16 [style = dashed, label="0"];
3->11 [style = bold, label=""];
8->6 [style = bold, label=""];
4->10 [style = solid, label="leftPhy"];
16->20 [style = solid, label="rightPhy"];
4->11 [style = solid, label="leftPhy"];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
11->9 [style = bold, label=""];
2->4 [style = solid, label="leftRel"];
6->2 [style = solid, label="cluster"];
6->14 [style = bold, label=""];
20->18 [style = bold, label=""];
6->16 [style = solid, label="cluster"];
3->10 [style = solid, label="rightPhy"];
1->17 [style = dashed, label="0"];
6->20 [style = solid, label="cluster"];
11->9 [style = solid, label="parent"];
12->14 [style = dashed, label="0"];
2->21 [style = dashed, label="0"];
13->7 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = solid, label="planner"];
5->7 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
6->3 [style = solid, label="cluster"];
6->11 [style = solid, label="cluster"];
16->20 [style = bold, label=""];
17->21 [style = bold, label=""];
19->7 [style = bold, label=""];
3->11 [style = solid, label="rightPhy"];
4->16 [style = bold, label=""];
21->4 [style = bold, label=""];
6->12 [style = bold, label=""];
}
