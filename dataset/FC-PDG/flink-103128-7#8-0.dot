digraph {
5 [style = filled, label = "queue.put(entry)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Thread.sleep(10L)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testCompletionOrder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Thread.sleep(10L)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(expected,actual)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "StreamRecordQueueEntry<Integer> record4 = new StreamRecordQueueEntry<>(new StreamRecord<>(4,4L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testCompletionOrder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(4,queue.size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "entry4.complete(Collections.emptyList())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(1 == queue.size())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertFalse(thirdPoll.isDone())@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "CompletableFuture<AsyncResult> secondPoll = CompletableFuture.supplyAsync(null,executor)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "OperatorActions operatorActions = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Set<AsyncResult> actual = new HashSet<>(2)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "List<StreamElementQueueEntry<?>> entries = Arrays.asList(record1,record2,watermark1,record3,record4,watermark2,record5,record6)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StreamRecordQueueEntry<Integer> entry1 = new StreamRecordQueueEntry<>(new StreamRecord<>(1,0L))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "StreamRecordQueueEntry<Integer> record1 = new StreamRecordQueueEntry<>(new StreamRecord<>(1,0L))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "verify(operatorActions,never()).failOperator(any())@@@72@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertEquals(watermark2,queue.poll())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(record1,secondPoll.get())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Thread.sleep(10L)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "record2.complete(Collections.emptyList())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Assert.assertEquals(record2,firstPoll.get())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertEquals(record5,thirdPoll.get())@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertFalse(pollOperation.isDone())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertFalse(firstPoll.isDone())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(operatorActions,never()).failOperator(any())@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CompletableFuture<AsyncResult> firstPoll = CompletableFuture.supplyAsync(null,executor)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StreamRecordQueueEntry<Integer> entry4 = new StreamRecordQueueEntry<>(new StreamRecord<>(3,3L))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "StreamRecordQueueEntry<Integer> record6 = new StreamRecordQueueEntry<>(new StreamRecord<>(6,7L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "actual.add(queue.poll())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "StreamRecordQueueEntry<Integer> record3 = new StreamRecordQueueEntry<>(new StreamRecord<>(3,3L))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "WatermarkQueueEntry watermark2 = new WatermarkQueueEntry(new Watermark(5L))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "record3.complete(Collections.emptyList())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(expected,pollOperation.get())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "record6.complete(Collections.emptyList())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "WatermarkQueueEntry watermark1 = new WatermarkQueueEntry(new Watermark(2L))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(record6,queue.poll())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "StreamRecordQueueEntry<Integer> record5 = new StreamRecordQueueEntry<>(new StreamRecord<>(5,6L))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "actual.add(queue.poll())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "WatermarkQueueEntry entry3 = new WatermarkQueueEntry(new Watermark(2L))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamRecordQueueEntry<Integer> entry2 = new StreamRecordQueueEntry<>(new StreamRecord<>(2,1L))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CompletableFuture<List<AsyncResult>> pollOperation = CompletableFuture.supplyAsync(null,executor)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "record1.complete(Collections.emptyList())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "queue.put(entry)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "expected.add(record4)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final UnorderedStreamElementQueue queue = new UnorderedStreamElementQueue(8,executor,operatorActions)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(watermark1,queue.poll())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final OrderedStreamElementQueue queue = new OrderedStreamElementQueue(4,executor,operatorActions)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Thread.sleep(10L)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "record5.complete(Collections.emptyList())@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "StreamRecordQueueEntry<Integer> record2 = new StreamRecordQueueEntry<>(new StreamRecord<>(2,1L))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "expected.add(record3)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "entry2.complete(Collections.emptyList())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Set<AsyncResult> expected = new HashSet<>(2)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Assert.assertTrue(8 == queue.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertFalse(secondPoll.isDone())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Assert.assertTrue(queue.isEmpty())@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "record4.complete(Collections.emptyList())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "CompletableFuture<AsyncResult> thirdPoll = CompletableFuture.supplyAsync(null,executor)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Thread.sleep(10L)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCompletionOrder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "entry1.complete(Collections.emptyList())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<StreamElementQueueEntry<?>> expected = Arrays.asList(entry1,entry2,entry3,entry4)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->21 [style = bold, label=""];
59->56 [style = bold, label=""];
32->60 [style = bold, label=""];
61->29 [style = bold, label=""];
47->33 [style = bold, label=""];
54->60 [style = solid, label="record3"];
27->53 [style = bold, label=""];
14->43 [style = dashed, label="0"];
4->2 [style = bold, label=""];
58->62 [style = bold, label=""];
2->1 [style = bold, label=""];
54->27 [style = solid, label="record3"];
44->37 [style = solid, label="expected"];
25->37 [style = bold, label=""];
42->47 [style = solid, label="watermark2"];
46->63 [style = bold, label=""];
60->39 [style = bold, label=""];
4->17 [style = solid, label="entry1"];
14->7 [style = bold, label=""];
0->54 [style = dashed, label="0"];
4->21 [style = dashed, label="0"];
18->24 [style = solid, label="operatorActions"];
41->44 [style = bold, label=""];
35->41 [style = solid, label="watermark1"];
56->22 [style = bold, label=""];
50->20 [style = bold, label=""];
36->40 [style = solid, label="record5"];
39->61 [style = bold, label=""];
11->18 [style = bold, label=""];
52->25 [style = bold, label=""];
35->54 [style = bold, label=""];
12->9 [style = bold, label=""];
44->27 [style = bold, label=""];
38->23 [style = bold, label=""];
21->48 [style = bold, label=""];
3->8 [style = bold, label=""];
0->17 [style = bold, label=""];
32->33 [style = solid, label="record6"];
45->52 [style = bold, label=""];
32->60 [style = solid, label="record6"];
48->35 [style = bold, label=""];
19->18 [style = bold, label=""];
1->0 [style = bold, label=""];
18->15 [style = bold, label=""];
10->16 [style = bold, label=""];
22->38 [style = bold, label=""];
30->34 [style = bold, label=""];
49->59 [style = bold, label=""];
43->51 [style = bold, label=""];
15->4 [style = bold, label=""];
2->48 [style = dashed, label="0"];
55->60 [style = solid, label="record4"];
45->37 [style = solid, label="actual"];
51->40 [style = bold, label=""];
9->6 [style = bold, label=""];
23->31 [style = bold, label=""];
40->46 [style = bold, label=""];
9->30 [style = dashed, label="0"];
53->45 [style = bold, label=""];
34->41 [style = bold, label=""];
42->60 [style = solid, label="watermark2"];
42->36 [style = bold, label=""];
36->32 [style = bold, label=""];
21->60 [style = solid, label="record1"];
12->31 [style = dashed, label="0"];
31->30 [style = bold, label=""];
5->3 [style = bold, label=""];
0->17 [style = solid, label="entry4"];
37->47 [style = bold, label=""];
20->43 [style = bold, label=""];
28->50 [style = bold, label=""];
48->60 [style = solid, label="record2"];
54->55 [style = bold, label=""];
48->59 [style = solid, label="record2"];
62->49 [style = bold, label=""];
8->12 [style = bold, label=""];
26->58 [style = bold, label=""];
7->10 [style = bold, label=""];
18->24 [style = bold, label=""];
55->42 [style = bold, label=""];
35->60 [style = solid, label="watermark1"];
6->13 [style = bold, label=""];
57->18 [style = bold, label=""];
36->60 [style = solid, label="record5"];
33->28 [style = bold, label=""];
10->40 [style = dashed, label="0"];
7->51 [style = dashed, label="0"];
18->15 [style = solid, label="operatorActions"];
21->34 [style = solid, label="record1"];
55->53 [style = solid, label="record4"];
1->17 [style = solid, label="entry3"];
2->17 [style = solid, label="entry2"];
1->35 [style = dashed, label="0"];
17->10 [style = solid, label="expected"];
13->14 [style = bold, label=""];
15->24 [style = dashed, label="0"];
17->5 [style = bold, label=""];
29->26 [style = bold, label=""];
}
