digraph {
18 [style = filled, label = "Map<String,Object> content = invokeContributor(this.context.getBean(\"buildInfoContributor\",))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Map<String,Object> content = invokeContributor(this.context.getBean(\"gitInfoContributor\",))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(beans).containsKeys(\"gitInfoContributor\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "load()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "gitPropertiesDefaultMode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<String,Object> buildInfo = (Map<String,Object>)build@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<String,InfoContributor> beans = this.context.getBeansOfType()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Object build = content.get(\"build\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Map<String,Object> gitInfo = (Map<String,Object>)git@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(build).isInstanceOf()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "gitPropertiesDefaultMode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "load()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "buildProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(buildInfo).containsOnlyKeys(\"group\",\"artifact\",\"foo\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(gitInfo).containsOnlyKeys(\"branch\",\"commit\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(buildInfo.get(\"foo\")).isEqualTo(\"bar\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(git).isInstanceOf()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Object git = content.get(\"git\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(beans).containsKeys(\"buildInfoContributor\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->17 [style = dashed, label="0"];
4->6 [style = bold, label=""];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
16->17 [style = bold, label=""];
8->13 [style = bold, label=""];
6->14 [style = dashed, label="0"];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
2->12 [style = dashed, label="0"];
17->14 [style = bold, label=""];
0->1 [style = bold, label=""];
14->12 [style = bold, label=""];
0->13 [style = dashed, label="0"];
5->7 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = solid, label="build"];
3->6 [style = solid, label="git"];
3->16 [style = dashed, label="0"];
13->18 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
