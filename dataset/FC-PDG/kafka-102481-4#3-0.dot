digraph {
5 [style = filled, label = "assertNull(callback.restoreTopicPartition)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,11L,\"key\".getBytes(),\"value\".getBytes()))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final MockConsumer<byte((,byte((> consumer = new MockConsumer<byte((,byte((>(OffsetResetStrategy.EARLIEST){@Override public Map<TopicPartition,OffsetAndMetadata> committed(final Set<TopicPartition> partitions){throw new AssertionError(\"Should not try to fetch committed offsets\")}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.expect(standbyStateManager.changelogAsSource(tp)).andReturn(false).anyTimes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_START))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(changelogReader.changelogMetadata(tp).bufferedRecords().isEmpty())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "changelogReader.restore()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Properties properties = new Properties()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldNotUpdateLimitForNonSourceStandbyChangelog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "changelogReader.restore()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "changelogReader.restore()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(5L,changelogReader.changelogMetadata(tp).totalRestored())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,10L,\"key\".getBytes(),\"value\".getBytes()))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,consumer,callback)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,5L,\"key\".getBytes(),\"value\".getBytes()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedLimitIndex())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(6L,changelogReader.changelogMetadata(tp).totalRestored())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final StreamsConfig config = new StreamsConfig(StreamsTestUtils.getStreamsConfig(\"test-reader\",properties))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "changelogReader.setMainConsumer(consumer)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EasyMock.replay(standbyStateManager,storeMetadata,store)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "properties.put(StreamsConfig.COMMIT_INTERVAL_MS_CONFIG,100L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "changelogReader.register(tp,standbyStateManager)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(changelogReader.changelogMetadata(tp).bufferedRecords().isEmpty())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "shouldOnlyRestoreStandbyChangelogInUpdateStandbyState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@41@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "shouldNotUpdateLimitForNonSourceStandbyChangelog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->5 [style = bold, label=""];
35->31 [style = bold, label=""];
33->16 [style = bold, label=""];
29->17 [style = bold, label=""];
4->44 [style = dashed, label="0"];
12->5 [style = bold, label=""];
8->23 [style = bold, label=""];
28->34 [style = bold, label=""];
5->33 [style = bold, label=""];
3->24 [style = bold, label=""];
10->19 [style = solid, label="properties"];
16->6 [style = bold, label=""];
31->13 [style = bold, label=""];
41->37 [style = bold, label=""];
14->42 [style = bold, label=""];
23->4 [style = bold, label=""];
1->20 [style = bold, label=""];
38->45 [style = bold, label=""];
19->35 [style = solid, label="config"];
26->35 [style = dashed, label="0"];
25->14 [style = bold, label=""];
2->26 [style = solid, label="consumer"];
2->10 [style = bold, label=""];
39->11 [style = bold, label=""];
42->40 [style = bold, label=""];
11->2 [style = bold, label=""];
11->18 [style = bold, label=""];
8->42 [style = dashed, label="0"];
17->7 [style = bold, label=""];
30->19 [style = bold, label=""];
29->27 [style = bold, label=""];
26->31 [style = bold, label=""];
36->24 [style = bold, label=""];
22->0 [style = bold, label=""];
7->28 [style = bold, label=""];
18->1 [style = bold, label=""];
15->14 [style = dashed, label="0"];
24->11 [style = bold, label=""];
19->26 [style = bold, label=""];
37->38 [style = bold, label=""];
19->35 [style = bold, label=""];
21->32 [style = bold, label=""];
20->12 [style = bold, label=""];
32->25 [style = bold, label=""];
27->17 [style = bold, label=""];
44->41 [style = bold, label=""];
2->31 [style = solid, label="consumer"];
14->15 [style = bold, label=""];
2->35 [style = solid, label="consumer"];
6->9 [style = bold, label=""];
9->29 [style = bold, label=""];
43->39 [style = bold, label=""];
10->30 [style = bold, label=""];
15->8 [style = bold, label=""];
4->22 [style = bold, label=""];
34->21 [style = bold, label=""];
19->26 [style = solid, label="config"];
13->18 [style = bold, label=""];
40->44 [style = bold, label=""];
}
