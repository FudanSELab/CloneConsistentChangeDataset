digraph {
8 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i > 1@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "consumerClient.poll(0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "subscriptions.assignFromUser(Arrays.asList(tp))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "v < 3@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i < 4@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i <= 3@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "this.records = MemoryRecords.emptyRecords(ByteBuffer.allocate(1024),CompressionType.NONE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int v = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "this.records.close()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final long offset = 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fetcher.initFetches(cluster)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "v++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "this.records.append((long)i * 3 + v,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "int i = 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->36 [style = dashed, label="0"];
21->35 [style = solid, label="v"];
2->19 [style = dashed, label="0"];
25->33 [style = bold, label=""];
11->14 [style = bold, label=""];
11->1 [style = dotted, label="true"];
13->7 [style = solid, label="offset"];
26->34 [style = bold, label=""];
30->6 [style = bold, label=""];
33->26 [style = dotted, label="true"];
6->11 [style = bold, label=""];
11->0 [style = dotted, label="true"];
27->17 [style = bold, label=""];
33->16 [style = dotted, label="true"];
4->8 [style = bold, label=""];
1->25 [style = solid, label="i"];
4->23 [style = dashed, label="0"];
6->1 [style = solid, label="i"];
11->7 [style = dotted, label="true"];
15->13 [style = bold, label=""];
1->22 [style = solid, label="i"];
12->11 [style = bold, label=""];
11->14 [style = dotted, label="true"];
6->7 [style = solid, label="i"];
2->4 [style = bold, label=""];
35->21 [style = bold, label=""];
18->28 [style = bold, label=""];
29->26 [style = bold, label=""];
33->29 [style = bold, label=""];
21->34 [style = solid, label="v"];
6->33 [style = solid, label="i"];
13->12 [style = bold, label=""];
31->27 [style = bold, label=""];
25->20 [style = dotted, label="true"];
12->11 [style = solid, label="i"];
6->22 [style = solid, label="i"];
34->35 [style = bold, label=""];
16->20 [style = bold, label=""];
17->1 [style = bold, label=""];
25->31 [style = dotted, label="true"];
25->9 [style = bold, label=""];
21->34 [style = bold, label=""];
26->35 [style = solid, label="v"];
3->6 [style = bold, label=""];
6->35 [style = solid, label="i"];
32->30 [style = bold, label=""];
1->7 [style = bold, label=""];
1->35 [style = solid, label="i"];
28->32 [style = bold, label=""];
26->34 [style = solid, label="v"];
12->6 [style = solid, label="i"];
11->5 [style = bold, label=""];
10->13 [style = bold, label=""];
34->35 [style = dotted, label="true"];
11->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
34->16 [style = bold, label=""];
11->25 [style = dashed, label="0"];
33->29 [style = dotted, label="true"];
9->19 [style = bold, label=""];
11->3 [style = dotted, label="true"];
1->25 [style = bold, label=""];
12->7 [style = solid, label="i"];
25->1 [style = dotted, label="true"];
34->21 [style = dotted, label="true"];
26->21 [style = solid, label="v"];
25->33 [style = dotted, label="true"];
33->20 [style = bold, label=""];
33->34 [style = dotted, label="true"];
22->31 [style = bold, label=""];
8->24 [style = dashed, label="0"];
7->3 [style = bold, label=""];
14->1 [style = bold, label=""];
1->33 [style = solid, label="i"];
20->22 [style = bold, label=""];
0->14 [style = dashed, label="0"];
24->36 [style = bold, label=""];
5->2 [style = bold, label=""];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
6->11 [style = solid, label="i"];
6->25 [style = solid, label="i"];
25->17 [style = dotted, label="true"];
19->23 [style = bold, label=""];
8->9 [style = bold, label=""];
25->22 [style = dotted, label="true"];
25->27 [style = dotted, label="true"];
6->25 [style = bold, label=""];
}
