digraph {
1 [style = filled, label = "int h1 = c1.hashCode()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "OHLCSeries<String> s1 = new OHLCSeries<>(\"S\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(c1.equals(c2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"S\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "int h2 = c2.hashCode()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "OHLCSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "OHLCSeriesCollection c2 = new OHLCSeriesCollection()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testHashcode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "s1.add(new Year(2009),1.0,4.0,0.5,2.0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "s2.add(new Year(2009),1.0,4.0,0.5,2.0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "OHLCSeries<String> s2 = new OHLCSeries<>(\"S\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testHashcode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(h1,h2)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "c2.addSeries(s2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "OHLCSeries s2 = new OHLCSeries(\"S\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10->15 [style = dashed, label="0"];
16->0 [style = bold, label=""];
2->19 [style = dashed, label="0"];
12->5 [style = bold, label=""];
1->4 [style = solid, label="h1"];
0->19 [style = bold, label=""];
6->4 [style = solid, label="h2"];
0->2 [style = bold, label=""];
0->20 [style = solid, label="c1"];
3->15 [style = bold, label=""];
19->17 [style = bold, label=""];
2->9 [style = bold, label=""];
7->20 [style = bold, label=""];
15->12 [style = solid, label="s2"];
20->18 [style = solid, label="c2"];
9->7 [style = bold, label=""];
7->3 [style = bold, label=""];
10->12 [style = solid, label="s2"];
17->7 [style = bold, label=""];
20->18 [style = bold, label=""];
0->18 [style = solid, label="c1"];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
0->14 [style = bold, label=""];
11->0 [style = bold, label=""];
1->6 [style = bold, label=""];
2->14 [style = dashed, label="0"];
10->8 [style = bold, label=""];
3->5 [style = solid, label="c2"];
9->17 [style = dashed, label="0"];
3->20 [style = dashed, label="0"];
14->7 [style = solid, label="s1"];
14->9 [style = bold, label=""];
19->7 [style = solid, label="s1"];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
2->7 [style = solid, label="s1"];
13->0 [style = bold, label=""];
}
