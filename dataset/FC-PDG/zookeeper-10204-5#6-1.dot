digraph {
26 [style = filled, label = "socket.getOutputStream().flush()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "byte(( buf = new byte((((@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(handshakeCompleted)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Socket sslSocket = connectWithSSL()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!handshakeCompleted@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT,0,2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testConnectWithoutSSLToNonStrictServerPartialWrite['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "sslSocket.getOutputStream().flush()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sslSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Socket socket = connectWithoutSSL()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "{forceClose(socket)serverThread.shutdown(TIMEOUT)}@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "{forceClose(sslSocket)serverThread.shutdown(TIMEOUT)}@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testConnectWithSSLToNonStrictServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "int bytesRead = socket.getInputStream().read(buf,0,buf.length)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "serverThread.start()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "socket.getOutputStream().write(DATA_FROM_CLIENT,2,DATA_FROM_CLIENT.length - 2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testConnectWithSSLToNonStrictServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sslSocket.getOutputStream().flush()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "serverThread.start()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "socket.getOutputStream().flush()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Thread.sleep(TIMEOUT / 2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->12 [style = dotted, label="true"];
23->16 [style = bold, label=""];
8->15 [style = bold, label=""];
4->17 [style = bold, label=""];
23->22 [style = dotted, label="true"];
8->17 [style = solid, label="sslSocket"];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
25->13 [style = bold, label=""];
19->16 [style = solid, label="caKeyType"];
24->16 [style = solid, label="paramIndex"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->5 [style = solid, label="buf"];
0->31 [style = solid, label="buf"];
14->10 [style = bold, label=""];
3->7 [style = solid, label="buf"];
8->34 [style = dashed, label="0"];
20->16 [style = solid, label="hostnameVerification"];
16->25 [style = bold, label=""];
15->32 [style = dashed, label="0"];
23->19 [style = dotted, label="true"];
5->28 [style = bold, label=""];
12->9 [style = bold, label=""];
31->7 [style = bold, label=""];
11->2 [style = bold, label=""];
33->27 [style = solid, label="socket"];
3->0 [style = bold, label=""];
22->16 [style = solid, label="certKeyType"];
11->2 [style = solid, label="buf"];
21->12 [style = bold, label=""];
32->29 [style = bold, label=""];
7->5 [style = dotted, label="true"];
2->31 [style = dashed, label="0"];
5->21 [style = bold, label=""];
26->0 [style = bold, label=""];
7->5 [style = bold, label=""];
21->9 [style = bold, label=""];
23->20 [style = dotted, label="true"];
15->11 [style = bold, label=""];
10->13 [style = bold, label=""];
5->12 [style = bold, label=""];
13->4 [style = solid, label="sslSocket"];
6->7 [style = dotted, label="true"];
13->33 [style = dashed, label="0"];
30->14 [style = bold, label=""];
5->9 [style = dotted, label="true"];
5->21 [style = dotted, label="true"];
34->32 [style = bold, label=""];
1->14 [style = bold, label=""];
10->33 [style = bold, label=""];
18->8 [style = bold, label=""];
11->0 [style = solid, label="buf"];
29->35 [style = bold, label=""];
28->27 [style = bold, label=""];
0->6 [style = solid, label="bytesRead"];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
6->12 [style = dotted, label="true"];
31->7 [style = solid, label="bytesRead"];
8->11 [style = bold, label=""];
33->34 [style = bold, label=""];
35->26 [style = bold, label=""];
2->3 [style = solid, label="bytesRead"];
23->24 [style = dotted, label="true"];
3->0 [style = solid, label="buf"];
13->18 [style = bold, label=""];
0->31 [style = bold, label=""];
}
