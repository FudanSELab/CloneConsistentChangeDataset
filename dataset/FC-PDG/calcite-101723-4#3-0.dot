digraph {
8 [style = filled, label = "Predicate.of(t) != null@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "simplifyAndTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "simplifyOrTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "terms.set(i,t2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "terms.set(i,simplify.simplify(t))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final RexNode t2 = simplify.simplify(t,RexUnknownAs.UNKNOWN)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "terms.set(i,simplify.simplify(t))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "simplifyOrTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.NOT,t2),RexUnknownAs.UNKNOWN)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.NOT,t2))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "RexSimplify simplify = withUnknownAsFalse(false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Predicate.of(t) == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "terms.set(i,simplify.simplify(t,RexUnknownAs.UNKNOWN))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final RexNode t2 = simplify.simplify(t)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i < terms.size()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "terms.set(i,simplify.simplify(t))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Predicate.of(t) != null@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RexNode t = terms.get(i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->15 [style = bold, label=""];
9->12 [style = dotted, label="true"];
3->22 [style = solid, label="i"];
11->1 [style = dotted, label="true"];
20->0 [style = solid, label="inverse"];
20->0 [style = bold, label=""];
12->9 [style = dashed, label="0"];
1->27 [style = bold, label=""];
28->9 [style = bold, label=""];
16->9 [style = solid, label="i"];
5->25 [style = dashed, label="0"];
30->1 [style = solid, label="t"];
25->6 [style = bold, label=""];
9->7 [style = bold, label=""];
6->13 [style = solid, label="i"];
31->29 [style = solid, label="newPredicates"];
13->1 [style = bold, label=""];
7->9 [style = solid, label="i"];
3->28 [style = solid, label="i"];
7->26 [style = bold, label=""];
5->10 [style = solid, label="simplify"];
7->9 [style = bold, label=""];
19->5 [style = bold, label=""];
5->17 [style = solid, label="simplify"];
16->3 [style = solid, label="i"];
7->17 [style = solid, label="i"];
3->9 [style = solid, label="i"];
11->31 [style = dotted, label="true"];
15->11 [style = bold, label=""];
3->26 [style = solid, label="i"];
1->21 [style = bold, label=""];
18->21 [style = dashed, label="0"];
6->11 [style = bold, label=""];
0->16 [style = solid, label="newPredicates"];
11->13 [style = bold, label=""];
11->0 [style = dotted, label="true"];
28->7 [style = dotted, label="true"];
10->20 [style = dashed, label="0"];
16->28 [style = solid, label="i"];
13->21 [style = solid, label="t"];
11->15 [style = dotted, label="true"];
14->20 [style = bold, label=""];
17->22 [style = dashed, label="0"];
12->17 [style = solid, label="t"];
11->16 [style = bold, label=""];
23->25 [style = bold, label=""];
5->22 [style = solid, label="simplify"];
30->27 [style = solid, label="t"];
11->10 [style = dotted, label="true"];
11->14 [style = dotted, label="true"];
14->10 [style = bold, label=""];
27->31 [style = bold, label=""];
31->29 [style = bold, label=""];
11->13 [style = dotted, label="true"];
22->7 [style = bold, label=""];
1->11 [style = bold, label=""];
8->22 [style = bold, label=""];
6->31 [style = solid, label="i"];
16->26 [style = solid, label="i"];
9->8 [style = dotted, label="true"];
8->17 [style = bold, label=""];
7->12 [style = solid, label="i"];
5->6 [style = bold, label=""];
15->27 [style = solid, label="i"];
10->0 [style = bold, label=""];
28->9 [style = dotted, label="true"];
15->30 [style = solid, label="i"];
29->26 [style = solid, label="simplify"];
11->16 [style = dotted, label="true"];
16->20 [style = solid, label="simplify"];
15->31 [style = solid, label="i"];
6->15 [style = solid, label="i"];
2->24 [style = dashed, label="0"];
16->18 [style = solid, label="simplify"];
23->24 [style = dotted, label="true"];
11->30 [style = bold, label=""];
4->2 [style = dotted, label="true"];
15->11 [style = solid, label="i"];
14->31 [style = dashed, label="0"];
12->8 [style = solid, label="t"];
0->16 [style = bold, label=""];
5->18 [style = solid, label="simplify"];
15->14 [style = solid, label="i"];
21->20 [style = solid, label="t2"];
25->26 [style = solid, label="simplify"];
13->1 [style = solid, label="t"];
11->30 [style = dotted, label="true"];
16->17 [style = solid, label="simplify"];
28->3 [style = dotted, label="true"];
26->3 [style = bold, label=""];
18->27 [style = dashed, label="0"];
11->29 [style = dotted, label="true"];
16->10 [style = solid, label="simplify"];
3->9 [style = bold, label=""];
3->12 [style = solid, label="i"];
11->20 [style = dotted, label="true"];
3->28 [style = bold, label=""];
25->27 [style = solid, label="simplify"];
11->27 [style = dotted, label="true"];
7->28 [style = bold, label=""];
11->3 [style = bold, label=""];
9->7 [style = solid, label="t"];
12->8 [style = bold, label=""];
9->12 [style = bold, label=""];
9->7 [style = dotted, label="true"];
9->22 [style = dotted, label="true"];
4->5 [style = bold, label=""];
6->14 [style = solid, label="i"];
21->14 [style = bold, label=""];
16->15 [style = bold, label=""];
10->0 [style = solid, label="inverse"];
12->22 [style = solid, label="t"];
30->1 [style = bold, label=""];
7->22 [style = solid, label="i"];
29->27 [style = solid, label="simplify"];
19->2 [style = dotted, label="true"];
16->22 [style = solid, label="simplify"];
18->14 [style = solid, label="t2"];
9->26 [style = solid, label="t"];
3->7 [style = solid, label="i"];
9->17 [style = dotted, label="true"];
15->13 [style = solid, label="i"];
1->18 [style = bold, label=""];
18->10 [style = solid, label="t2"];
11->18 [style = dotted, label="true"];
13->18 [style = solid, label="t"];
21->14 [style = solid, label="t2"];
17->7 [style = bold, label=""];
3->17 [style = solid, label="i"];
6->27 [style = solid, label="i"];
16->28 [style = bold, label=""];
6->11 [style = solid, label="i"];
6->30 [style = solid, label="i"];
5->20 [style = solid, label="simplify"];
5->21 [style = solid, label="simplify"];
28->26 [style = dotted, label="true"];
8->9 [style = bold, label=""];
16->21 [style = solid, label="simplify"];
11->21 [style = dotted, label="true"];
18->14 [style = bold, label=""];
13->30 [style = dashed, label="0"];
}
