digraph {
16 [style = filled, label = "assertFalse(futNode0.isDone())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node0.getId()))))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SimpleFuture futNode1 = joinNodeAsync(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "joinNodeAndRun(new JoinRequest(node0,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DiscoveryNode node0 = newNode(0,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testJoinAccumulation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "DiscoveryNode node1 = newNode(1,true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DiscoveryNode node2 = newNode(2,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SimpleFuture futNode0 = joinNodeAsync(new JoinRequest(node0,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testJoinElectedLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "FutureUtils.get(futNode0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testJoinAccumulation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(clusterStateHasNode(node1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(clusterStateHasNode(node1))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "long initialTerm = randomLongBetween(1,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "long initialVersion = randomLongBetween(1,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "joinNodeAndRun(new JoinRequest(node2,Optional.of(new Join(node2,node0,newTerm,initialTerm,initialVersion))))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "long newTerm = initialTerm + randomLongBetween(1,10)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SimpleFuture futNode1 = joinNodeAsync(new JoinRequest(node1,newTerm,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "FutureUtils.get(futNode1)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "joinNodeAndRun(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "joinNodeAndRun(new JoinRequest(node2,newTerm,Optional.of(new Join(node2,node0,newTerm,initialTerm,initialVersion))))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node2.getId()))))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertFalse(clusterStateHasNode(node1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "SimpleFuture futNode0 = joinNodeAsync(new JoinRequest(node0,newTerm,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(clusterStateHasNode(node2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(futNode1.isDone())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->28 [style = solid, label="newTerm"];
15->17 [style = solid, label="initialVersion"];
10->19 [style = bold, label=""];
27->28 [style = bold, label=""];
5->24 [style = dashed, label="0"];
8->6 [style = bold, label=""];
15->4 [style = solid, label="initialVersion"];
9->7 [style = bold, label=""];
19->2 [style = solid, label="initialTerm"];
4->25 [style = dashed, label="0"];
21->17 [style = solid, label="newTerm"];
0->14 [style = bold, label=""];
10->27 [style = solid, label="node1"];
20->16 [style = bold, label=""];
10->31 [style = solid, label="node1"];
5->0 [style = bold, label=""];
10->5 [style = solid, label="node1"];
10->6 [style = solid, label="node1"];
19->25 [style = solid, label="initialTerm"];
19->15 [style = bold, label=""];
19->4 [style = solid, label="initialTerm"];
1->23 [style = solid, label="node0"];
28->30 [style = bold, label=""];
19->28 [style = solid, label="initialTerm"];
24->0 [style = bold, label=""];
26->1 [style = bold, label=""];
1->4 [style = solid, label="node0"];
18->19 [style = bold, label=""];
1->25 [style = solid, label="node0"];
21->25 [style = solid, label="newTerm"];
21->25 [style = bold, label=""];
23->8 [style = bold, label=""];
33->13 [style = bold, label=""];
22->5 [style = bold, label=""];
24->3 [style = solid, label="futNode1"];
15->25 [style = solid, label="initialVersion"];
21->29 [style = bold, label=""];
29->32 [style = bold, label=""];
18->23 [style = solid, label="node2"];
19->23 [style = solid, label="initialTerm"];
15->2 [style = solid, label="initialVersion"];
2->33 [style = dashed, label="0"];
17->23 [style = dashed, label="0"];
21->23 [style = solid, label="newTerm"];
15->33 [style = bold, label=""];
21->4 [style = bold, label=""];
17->8 [style = bold, label=""];
10->18 [style = bold, label=""];
4->7 [style = solid, label="futNode0"];
21->4 [style = solid, label="newTerm"];
1->2 [style = solid, label="node0"];
21->5 [style = solid, label="newTerm"];
19->24 [style = solid, label="initialTerm"];
19->5 [style = solid, label="initialTerm"];
1->28 [style = solid, label="node0"];
1->24 [style = solid, label="node0"];
12->17 [style = bold, label=""];
32->27 [style = bold, label=""];
19->33 [style = solid, label="initialTerm"];
25->20 [style = bold, label=""];
15->23 [style = solid, label="initialVersion"];
15->28 [style = solid, label="initialVersion"];
30->31 [style = bold, label=""];
4->20 [style = bold, label=""];
10->24 [style = solid, label="node1"];
19->21 [style = solid, label="initialTerm"];
15->33 [style = solid, label="initialVersion"];
10->28 [style = solid, label="node1"];
21->29 [style = solid, label="newTerm"];
15->29 [style = solid, label="initialVersion"];
18->9 [style = solid, label="node2"];
15->2 [style = bold, label=""];
5->3 [style = solid, label="futNode1"];
18->17 [style = solid, label="node2"];
11->1 [style = bold, label=""];
34->1 [style = bold, label=""];
25->7 [style = solid, label="futNode0"];
19->29 [style = solid, label="initialTerm"];
16->22 [style = bold, label=""];
7->3 [style = bold, label=""];
2->13 [style = bold, label=""];
1->5 [style = solid, label="node0"];
15->24 [style = solid, label="initialVersion"];
1->17 [style = solid, label="node0"];
14->12 [style = bold, label=""];
15->5 [style = solid, label="initialVersion"];
1->33 [style = solid, label="node0"];
12->23 [style = bold, label=""];
1->29 [style = solid, label="node0"];
22->24 [style = bold, label=""];
4->29 [style = dashed, label="0"];
6->9 [style = bold, label=""];
13->21 [style = bold, label=""];
1->10 [style = bold, label=""];
21->24 [style = solid, label="newTerm"];
19->17 [style = solid, label="initialTerm"];
}
