digraph {
0 [style = filled, label = "windowStore.put(6,\"six\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@60@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "windowStore.put(1,\"one\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "changeLog.add(new KeyValue<>(((Bytes)record.key()).get(),(byte(()record.value()))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "windowStore.put(8,\"eight\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "windowStore.put(2,\"two\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final long increment = SEGMENT_INTERVAL / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "setCurrentTime(startTime)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "windowStore.put(3,\"three\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@52@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"two\")),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "windowStore.flush()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "windowStore.flush()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"zero\")),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "windowStore.init(context,windowStore)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "windowStore.init((StateStoreContext)context,windowStore)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "windowStore = buildWindowStore(RETENTION_PERIOD,WINDOW_SIZE,false,Serdes.Integer(),Serdes.String())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "windowStore.put(0,\"zero\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"one\")),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"eight\")),valuesToSet(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 8 + WINDOW_SIZE))))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(1,ofEpochMilli(startTime + increment - WINDOW_SIZE),ofEpochMilli(startTime + increment + WINDOW_SIZE))))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"seven\")),valuesToSet(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 7 + WINDOW_SIZE))))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "windowStore.flush()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final long startTime = SEGMENT_INTERVAL * 2@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "windowStore.close()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "windowStore.put(8,\"eight\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "context.restore(STORE_NAME,changeLog)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"four\")),valuesToSet(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 4 + WINDOW_SIZE))))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(0,ofEpochMilli(startTime - WINDOW_SIZE),ofEpochMilli(startTime + WINDOW_SIZE))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"six\")),valuesToSet(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 6 + WINDOW_SIZE))))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 2 + WINDOW_SIZE))))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(new HashSet<>(Collections.singletonList(\"five\")),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "windowStore.put(5,\"five\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Utils.delete(baseDir)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "windowStore.put(7,\"seven\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 3 + WINDOW_SIZE))))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(new HashSet<>(Collections.emptyList()),valuesToSet(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - WINDOW_SIZE),ofEpochMilli(startTime + increment * 5 + WINDOW_SIZE))))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70->88 [style = bold, label=""];
9->89 [style = solid, label="startTime"];
9->2 [style = solid, label="startTime"];
25->34 [style = bold, label=""];
9->79 [style = solid, label="startTime"];
58->0 [style = bold, label=""];
27->7 [style = solid, label="increment"];
46->2 [style = bold, label=""];
9->22 [style = solid, label="startTime"];
59->9 [style = bold, label=""];
9->47 [style = solid, label="startTime"];
44->7 [style = bold, label=""];
9->39 [style = solid, label="startTime"];
27->80 [style = solid, label="increment"];
85->67 [style = bold, label=""];
57->58 [style = bold, label=""];
3->38 [style = bold, label=""];
10->41 [style = bold, label=""];
44->53 [style = bold, label=""];
27->81 [style = solid, label="increment"];
19->71 [style = bold, label=""];
27->10 [style = solid, label="increment"];
27->72 [style = solid, label="increment"];
9->46 [style = solid, label="startTime"];
9->51 [style = solid, label="startTime"];
9->54 [style = solid, label="startTime"];
27->37 [style = solid, label="increment"];
27->56 [style = solid, label="increment"];
18->49 [style = bold, label=""];
9->0 [style = solid, label="startTime"];
9->55 [style = solid, label="startTime"];
8->20 [style = bold, label=""];
12->49 [style = dashed, label="0"];
33->42 [style = bold, label=""];
29->63 [style = bold, label=""];
72->73 [style = bold, label=""];
45->0 [style = bold, label=""];
0->8 [style = bold, label=""];
66->31 [style = bold, label=""];
27->0 [style = solid, label="increment"];
27->75 [style = solid, label="increment"];
27->26 [style = solid, label="increment"];
21->72 [style = dashed, label="0"];
33->85 [style = bold, label=""];
27->15 [style = solid, label="increment"];
27->73 [style = solid, label="increment"];
32->11 [style = bold, label=""];
76->75 [style = bold, label=""];
9->42 [style = solid, label="startTime"];
23->44 [style = bold, label=""];
27->58 [style = solid, label="increment"];
27->30 [style = solid, label="increment"];
9->57 [style = solid, label="startTime"];
9->31 [style = solid, label="startTime"];
9->73 [style = solid, label="startTime"];
28->5 [style = bold, label=""];
27->78 [style = solid, label="increment"];
27->66 [style = solid, label="increment"];
9->56 [style = solid, label="startTime"];
27->11 [style = solid, label="increment"];
79->84 [style = bold, label=""];
9->21 [style = solid, label="startTime"];
18->12 [style = bold, label=""];
9->78 [style = solid, label="startTime"];
81->51 [style = bold, label=""];
27->42 [style = solid, label="increment"];
9->88 [style = solid, label="startTime"];
75->62 [style = bold, label=""];
27->52 [style = solid, label="increment"];
27->74 [style = solid, label="increment"];
4->65 [style = bold, label=""];
9->24 [style = solid, label="startTime"];
12->37 [style = bold, label=""];
84->69 [style = bold, label=""];
9->85 [style = solid, label="startTime"];
9->70 [style = solid, label="startTime"];
27->89 [style = solid, label="increment"];
27->57 [style = solid, label="increment"];
9->83 [style = solid, label="startTime"];
27->21 [style = solid, label="increment"];
9->87 [style = solid, label="startTime"];
47->25 [style = bold, label=""];
9->37 [style = solid, label="startTime"];
32->77 [style = bold, label=""];
88->64 [style = bold, label=""];
27->62 [style = solid, label="increment"];
27->20 [style = solid, label="increment"];
48->16 [style = bold, label=""];
9->48 [style = solid, label="startTime"];
40->17 [style = bold, label=""];
74->86 [style = bold, label=""];
9->26 [style = solid, label="startTime"];
62->68 [style = bold, label=""];
73->81 [style = bold, label=""];
15->47 [style = bold, label=""];
8->76 [style = bold, label=""];
27->54 [style = solid, label="increment"];
27->24 [style = solid, label="increment"];
55->87 [style = bold, label=""];
9->11 [style = solid, label="startTime"];
9->80 [style = solid, label="startTime"];
27->64 [style = solid, label="increment"];
9->74 [style = solid, label="startTime"];
27->35 [style = solid, label="increment"];
9->67 [style = solid, label="startTime"];
2->48 [style = bold, label=""];
65->26 [style = bold, label=""];
17->46 [style = bold, label=""];
18->49 [style = solid, label="windowStore"];
49->37 [style = bold, label=""];
34->40 [style = bold, label=""];
27->28 [style = solid, label="increment"];
6->18 [style = bold, label=""];
31->32 [style = bold, label=""];
37->30 [style = bold, label=""];
16->24 [style = bold, label=""];
9->15 [style = solid, label="startTime"];
9->63 [style = solid, label="startTime"];
9->75 [style = solid, label="startTime"];
19->10 [style = bold, label=""];
27->68 [style = solid, label="increment"];
89->57 [style = bold, label=""];
7->4 [style = bold, label=""];
27->84 [style = solid, label="increment"];
27->36 [style = solid, label="increment"];
83->70 [style = bold, label=""];
26->19 [style = bold, label=""];
43->9 [style = bold, label=""];
80->37 [style = bold, label=""];
9->68 [style = solid, label="startTime"];
82->83 [style = bold, label=""];
9->27 [style = bold, label=""];
9->17 [style = solid, label="startTime"];
9->20 [style = solid, label="startTime"];
27->82 [style = solid, label="increment"];
30->21 [style = bold, label=""];
9->86 [style = solid, label="startTime"];
86->82 [style = bold, label=""];
63->52 [style = bold, label=""];
22->39 [style = bold, label=""];
42->81 [style = dashed, label="0"];
64->61 [style = bold, label=""];
41->31 [style = bold, label=""];
9->1 [style = solid, label="startTime"];
27->33 [style = solid, label="increment"];
77->11 [style = bold, label=""];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
27->1 [style = solid, label="increment"];
9->58 [style = solid, label="startTime"];
27->77 [style = solid, label="increment"];
9->36 [style = solid, label="startTime"];
45->79 [style = bold, label=""];
87->78 [style = bold, label=""];
71->66 [style = bold, label=""];
54->89 [style = bold, label=""];
9->72 [style = solid, label="startTime"];
1->80 [style = dashed, label="0"];
27->2 [style = solid, label="increment"];
9->52 [style = solid, label="startTime"];
25->40 [style = solid, label="changeLog"];
9->64 [style = solid, label="startTime"];
9->23 [style = solid, label="startTime"];
50->9 [style = bold, label=""];
27->83 [style = solid, label="increment"];
9->35 [style = solid, label="startTime"];
27->39 [style = solid, label="increment"];
9->81 [style = solid, label="startTime"];
20->29 [style = bold, label=""];
27->70 [style = solid, label="increment"];
24->35 [style = bold, label=""];
15->37 [style = dashed, label="0"];
35->22 [style = bold, label=""];
1->15 [style = bold, label=""];
21->33 [style = bold, label=""];
27->69 [style = solid, label="increment"];
67->74 [style = bold, label=""];
69->54 [style = bold, label=""];
27->87 [style = solid, label="increment"];
27->86 [style = solid, label="increment"];
11->45 [style = bold, label=""];
4->26 [style = bold, label=""];
27->31 [style = solid, label="increment"];
39->3 [style = bold, label=""];
52->72 [style = bold, label=""];
9->10 [style = solid, label="startTime"];
38->17 [style = dashed, label="0"];
5->14 [style = bold, label=""];
42->36 [style = bold, label=""];
27->22 [style = solid, label="increment"];
9->33 [style = solid, label="startTime"];
27->88 [style = solid, label="increment"];
9->77 [style = solid, label="startTime"];
36->1 [style = bold, label=""];
9->16 [style = solid, label="startTime"];
27->51 [style = solid, label="increment"];
29->28 [style = bold, label=""];
9->62 [style = solid, label="startTime"];
27->67 [style = solid, label="increment"];
18->12 [style = solid, label="windowStore"];
60->33 [style = bold, label=""];
9->82 [style = solid, label="startTime"];
53->7 [style = bold, label=""];
27->48 [style = solid, label="increment"];
27->46 [style = solid, label="increment"];
68->55 [style = bold, label=""];
9->84 [style = solid, label="startTime"];
9->30 [style = solid, label="startTime"];
27->23 [style = bold, label=""];
78->56 [style = bold, label=""];
56->20 [style = bold, label=""];
9->76 [style = solid, label="startTime"];
36->51 [style = dashed, label="0"];
27->47 [style = solid, label="increment"];
27->16 [style = solid, label="increment"];
51->80 [style = bold, label=""];
9->7 [style = solid, label="startTime"];
9->66 [style = solid, label="startTime"];
27->55 [style = solid, label="increment"];
61->17 [style = bold, label=""];
9->69 [style = solid, label="startTime"];
9->28 [style = solid, label="startTime"];
30->60 [style = bold, label=""];
}
