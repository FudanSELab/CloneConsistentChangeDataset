digraph {
3 [style = filled, label = "return result@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "each instanceof AddConstraintDefinitionSegment@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "result.getDropConstraintDefinitions().add((DropConstraintDefinitionSegment)each)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "final CreateTableContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result.getAddConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "AlterDefinitionSegment each@@@6@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "each instanceof AddColumnDefinitionSegment@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "CreateDefinitionSegment each@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "createDefinitions.getValue()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "result.getAddColumnDefinitions().add((AddColumnDefinitionSegment)each)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result.setTable((SimpleTableSegment)visit(ctx.tableName()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "null != ctx.alterDefinitionClause()@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MySQLCreateTableStatement result = new MySQLCreateTableStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "result.getAddConstraintDefinitions().add((AddConstraintDefinitionSegment)each)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "visitAlterTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "visitCreateTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final AlterTableContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SQL92AlterTableStatement result = new SQL92AlterTableStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "each instanceof ColumnDefinitionSegment@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "result.setContainsNotExistClause(null != ctx.notExistClause())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "CollectionValue<CreateDefinitionSegment> createDefinitions = (CollectionValue<CreateDefinitionSegment>)visit(ctx.createDefinitionClause())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return result@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "result.getDropColumnDefinitions().add((DropColumnDefinitionSegment)each)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "each instanceof DropColumnDefinitionSegment@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "each instanceof ModifyColumnDefinitionSegment@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "null != ctx.createDefinitionClause()@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "each instanceof DropConstraintDefinitionSegment@@@19@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "each instanceof ConstraintDefinitionSegment@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "result.getModifyColumnDefinitions().add((ModifyColumnDefinitionSegment)each)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "visitAlterTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "((CollectionValue<AlterDefinitionSegment>)visit(ctx.alterDefinitionClause())).getValue()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "result.getConstraintDefinitions().add((ConstraintDefinitionSegment)each)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "result.getColumnDefinitions().add((ColumnDefinitionSegment)each)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
16->3 [style = bold, label=""];
13->18 [style = dotted, label="true"];
25->32 [style = dotted, label="true"];
34->25 [style = bold, label=""];
31->22 [style = bold, label=""];
21->19 [style = bold, label=""];
5->26 [style = dashed, label="0"];
25->31 [style = dotted, label="true"];
9->14 [style = dotted, label="false"];
0->15 [style = dotted, label="true"];
2->3 [style = bold, label=""];
0->12 [style = bold, label=""];
8->3 [style = bold, label=""];
9->17 [style = dotted, label="false"];
22->29 [style = bold, label=""];
22->31 [style = bold, label=""];
5->11 [style = dotted, label="false"];
20->15 [style = dotted, label="true"];
10->3 [style = bold, label=""];
9->17 [style = bold, label=""];
13->5 [style = dotted, label="true"];
15->30 [style = dashed, label="0"];
31->22 [style = dotted, label="false"];
24->29 [style = bold, label=""];
22->24 [style = dotted, label="true"];
9->10 [style = bold, label=""];
25->29 [style = bold, label=""];
21->3 [style = bold, label=""];
11->9 [style = bold, label=""];
31->33 [style = dotted, label="true"];
11->2 [style = bold, label=""];
12->7 [style = bold, label=""];
33->29 [style = bold, label=""];
17->16 [style = dotted, label="true"];
13->4 [style = dotted, label="true"];
19->5 [style = bold, label=""];
21->5 [style = bold, label=""];
13->1 [style = dotted, label="true"];
6->5 [style = bold, label=""];
28->30 [style = dotted, label="true"];
26->31 [style = bold, label=""];
11->2 [style = dotted, label="true"];
6->16 [style = dashed, label="0"];
7->34 [style = bold, label=""];
8->32 [style = dashed, label="0"];
10->5 [style = bold, label=""];
13->3 [style = bold, label=""];
8->5 [style = bold, label=""];
24->31 [style = bold, label=""];
17->21 [style = dotted, label="false"];
6->24 [style = dashed, label="0"];
31->33 [style = bold, label=""];
11->9 [style = dotted, label="false"];
27->7 [style = bold, label=""];
25->26 [style = bold, label=""];
20->12 [style = bold, label=""];
12->3 [style = solid, label="result"];
27->29 [style = solid, label="result"];
9->14 [style = bold, label=""];
13->5 [style = bold, label=""];
16->5 [style = bold, label=""];
33->31 [style = bold, label=""];
12->27 [style = dashed, label="0"];
14->17 [style = dashed, label="0"];
5->11 [style = bold, label=""];
21->19 [style = dotted, label="true"];
28->27 [style = bold, label=""];
22->24 [style = bold, label=""];
25->23 [style = dotted, label="true"];
5->8 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
13->34 [style = dashed, label="0"];
17->21 [style = bold, label=""];
19->3 [style = bold, label=""];
14->6 [style = bold, label=""];
25->26 [style = dotted, label="true"];
17->16 [style = bold, label=""];
2->5 [style = bold, label=""];
14->5 [style = bold, label=""];
14->6 [style = dotted, label="true"];
}
