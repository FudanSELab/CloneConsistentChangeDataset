digraph {
10 [style = filled, label = "final MemberIdentifierFactory memberFactory = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final DistributionConfigImpl config@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "TcpClient client = new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "DistributionLocatorConfigImpl config = new DistributionLocatorConfigImpl()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "createConfigFor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final SecurityService securityService = SecurityServiceFactory.create()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final DistributionConfigImpl config@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return Pair.of(m1,messageListener)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final InternalDistributedSystem mockSystem = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "config.setWorkingDirectory(info(0()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "when(memberFactory.create(isA())).thenAnswer(new Answer<MemberIdentifier>(){@Override public MemberIdentifier answer(InvocationOnMock invocation){return new InternalDistributedMember((GMSMemberData)invocation.getArgument(0))}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Membership m1 = MembershipBuilder.newMembershipBuilder().setAuthenticator(new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setSerializer(serializer).setLifecycleListener(lifeCycleListener).setMemberIDFactory(new MemberIdentifierFactoryImpl()).setLocatorClient(new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())).create()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "InetAddress bindAddress@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "doAnswer(null).when(lifeCycleListener).started()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Membership m1 = MembershipBuilder.newMembershipBuilder().setAuthenticator(new GMSAuthenticator(config.getSecurityProps(),securityService,mockSystem.getSecurityLogWriter(),mockSystem.getInternalLogWriter())).setStatistics(stats1).setMessageListener(messageListener).setMembershipListener(listener).setConfig(new ServiceConfig(transport,config)).setSerializer(serializer).setLifecycleListener(lifeCycleListener).setLocatorClient(new TcpClient(asTcpSocketCreator(SocketCreatorFactory.getSocketCreatorForComponent(SecurableCommunicationChannel.LOCATOR)),InternalDataSerializer.getDSFIDSerializer().getObjectSerializer(),InternalDataSerializer.getDSFIDSerializer().getObjectDeserializer())).create()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final MembershipListener listener = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "config.setPort(port)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "String host@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "createMembershipManager['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "return config@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "config.setBindAddress(bindAddress.getHostAddress())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "info = client.getInfo(toInetAddress(host),port)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "bindAddress != null@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "createMembershipManager['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RemoteTransportConfig transport@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final DMStats stats1 = mock()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "m1.startEventProcessing()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "LifecycleListener lifeCycleListener = mock()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MessageListener messageListener = mock()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "info == null@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "config.setProductDirectory(info(1()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "config.setHost(host)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "GemFireConfigException e@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "bindAddress != null@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DSFIDSerializer serializer = InternalDataSerializer.getDSFIDSerializer()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int port@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return null@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "m1.start()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "info = client.getInfo(bindAddress,port)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "{}@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "String(( info = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@12fd5c@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31->37 [style = bold, label=""];
38->24 [style = solid, label="host"];
30->36 [style = solid, label="info"];
30->22 [style = bold, label=""];
8->15 [style = solid, label="messageListener"];
11->15 [style = solid, label="m1"];
29->28 [style = solid, label="port"];
25->33 [style = bold, label=""];
35->21 [style = solid, label="config"];
10->14 [style = bold, label=""];
20->33 [style = solid, label="bindAddress"];
2->3 [style = bold, label=""];
0->12 [style = bold, label=""];
11->6 [style = bold, label=""];
4->15 [style = bold, label=""];
40->38 [style = dotted, label="true"];
2->13 [style = dotted, label="true"];
5->18 [style = bold, label=""];
1->0 [style = bold, label=""];
32->34 [style = bold, label=""];
9->10 [style = bold, label=""];
29->25 [style = solid, label="port"];
12->9 [style = bold, label=""];
40->20 [style = dotted, label="true"];
28->36 [style = solid, label="info"];
30->22 [style = solid, label="info"];
27->35 [style = bold, label=""];
35->24 [style = bold, label=""];
40->29 [style = dotted, label="true"];
26->30 [style = bold, label=""];
38->30 [style = solid, label="host"];
8->1 [style = bold, label=""];
18->15 [style = solid, label="m1"];
26->30 [style = dotted, label="false"];
28->22 [style = solid, label="info"];
29->30 [style = solid, label="port"];
11->18 [style = dashed, label="0"];
33->39 [style = bold, label=""];
36->23 [style = bold, label=""];
22->27 [style = bold, label=""];
34->26 [style = bold, label=""];
18->6 [style = bold, label=""];
23->21 [style = bold, label=""];
6->16 [style = bold, label=""];
20->28 [style = solid, label="bindAddress"];
24->25 [style = bold, label=""];
3->8 [style = bold, label=""];
28->23 [style = solid, label="info"];
33->36 [style = bold, label=""];
2->7 [style = dotted, label="true"];
30->23 [style = solid, label="info"];
26->28 [style = dotted, label="true"];
17->19 [style = dotted, label="true"];
22->27 [style = dotted, label="true"];
40->32 [style = bold, label=""];
17->3 [style = bold, label=""];
5->11 [style = bold, label=""];
26->28 [style = bold, label=""];
37->35 [style = bold, label=""];
16->4 [style = bold, label=""];
22->35 [style = bold, label=""];
17->13 [style = dotted, label="true"];
39->36 [style = bold, label=""];
28->22 [style = bold, label=""];
14->5 [style = bold, label=""];
33->39 [style = dotted, label="true"];
20->26 [style = solid, label="bindAddress"];
}
