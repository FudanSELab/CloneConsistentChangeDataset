digraph {
0 [style = filled, label = "insertStatement.setInsertColumns(insertColumnsSegment)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertGetInsertColumnNamesForInsertColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "InsertStatementContext insertStatementContext = createInsertStatementContext(Collections.emptyList(),insertStatement)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertNotUseDefaultColumnsWithColumns['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "List<String> columnNames = insertStatementContext.getInsertColumnNames()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final InsertStatement insertStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(columnNames.size(),is(1))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InsertColumnsSegment insertColumnsSegment = new InsertColumnsSegment(0,0,Collections.singletonList(new ColumnSegment(0,0,new IdentifierValue(\"col\"))))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "insertStatement.setTable(new SimpleTableSegment(0,0,new IdentifierValue(\"\")))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(insertStatementContext.useDefaultColumns())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotUseDefaultColumnsWithColumns['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final InsertStatement insertStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(columnNames.iterator().next(),is(\"col\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "InsertStatementContext insertStatementContext = new InsertStatementContext(new ShardingSphereSchema(),Collections.emptyList(),insertStatement)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->8 [style = bold, label=""];
9->11 [style = bold, label=""];
2->6 [style = bold, label=""];
6->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
4->0 [style = solid, label="insertColumnsSegment"];
7->4 [style = bold, label=""];
5->8 [style = solid, label="insertStatement"];
2->9 [style = bold, label=""];
13->10 [style = dotted, label="true"];
5->2 [style = solid, label="insertStatement"];
3->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
4->0 [style = bold, label=""];
7->5 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
5->10 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->2 [style = solid, label="insertStatement"];
1->2 [style = bold, label=""];
13->4 [style = bold, label=""];
}
