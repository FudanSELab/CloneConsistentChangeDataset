digraph {
30 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@85@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@126@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "return filter@@@109@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "final DimFilter equalFilter@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "column.equals(ColumnHolder.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@86@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "return null@@@141@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "kind == SqlKind.IS_TRUE || kind == SqlKind.IS_NOT_FALSE@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "return toSimpleLeafFilter(plannerContext,querySignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "flip@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "final String val@@@96@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boolean flip = false@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "final String column@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@13@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "queryGranularity != null@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@83@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final SqlKind kind = rexNode.getKind()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "kind == SqlKind.IS_NULL || kind == SqlKind.IS_NOT_NULL@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@104@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return filter@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@35@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
145 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@102@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "RexNode rhs = operands.get(1)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "toSimpleLeafFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@101@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "extractionFn = null@@@84@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "return getBoundTimeDimFilter(flippedKind,boundRefKey,rhsInterval,rhsAligned)@@@74@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "conversion == null@@@133@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "filter != null@@@119@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
130 [style = filled, label = "equalFilter = new SelectorDimFilter(virtualColumn.getOutputName(),NullHandling.defaultStringValue(),null)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
147 [style = filled, label = "final DruidQuerySignature querySignature@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
128 [style = filled, label = "final Granularity granularity = ExtractionFns.toQueryGranularity(extractionFn)@@@87@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "return null@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final ExtractionFn extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@66@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@73@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "lhs = rhs@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@80@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "flippedKind = kind@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,querySignature.getRowSignature(),operand)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
146 [style = filled, label = "equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "expression != null@@@123@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "return null@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "return buildTimeFloorFilter(ColumnHolder.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,rowSignature,lhs)@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "return null@@@63@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final DimFilter equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "granularity != null@@@88@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@72@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "RexNode lhs = operands.get(0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "kind@@@43@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "throw new ISE(\"WTF?! Kind(%s( not expected here\",kind)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final RowSignature rowSignature@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "return null@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@103@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,extractionFn,comparator)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,querySignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
150 [style = filled, label = "final Granularity granularity@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "rhs = x@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return null@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@95@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "rexNode instanceof RexCall@@@130@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN_OR_EQUAL@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
101 [style = filled, label = "return null@@@81@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "flippedKind@@@113@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@90@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
136 [style = filled, label = "virtualColumn == null@@@22@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "!lhsExpression.isSimpleExtraction()@@@62@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "final long rhsMillis@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "flippedKind = SqlKind.LESS_THAN_OR_EQUAL@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "flip = true@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
129 [style = filled, label = "column = virtualLhs.getOutputName()@@@83@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
121 [style = filled, label = "return null@@@144@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
153 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "virtualLhs == null@@@80@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@71@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "final VirtualColumn virtualColumn = querySignature.getOrCreateVirtualColumnForExpression(plannerContext,druidExpression,operand.getType().getSqlTypeName())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "rhs = x@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "lhsExpression.isSimpleExtraction()@@@74@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "return getBoundTimeDimFilter(flippedKind,boundRefKey,rhsInterval,rhsAligned)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "filter != null@@@138@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "return null@@@134@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
125 [style = filled, label = "VirtualColumn virtualLhs = querySignature.getOrCreateVirtualColumnForExpression(plannerContext,lhsExpression,lhs.getType().getSqlTypeName())@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "final SqlKind flippedKind@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@116@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
131 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@98@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
117 [style = filled, label = "flippedKind = SqlKind.LESS_THAN@@@46@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operand)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@79@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "toSimpleLeafFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "flippedKind@@@94@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "lhsExpression == null@@@64@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
154 [style = filled, label = "buildTimeFloorFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "return null@@@115@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "final DimFilter filter@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "return filter@@@139@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@25@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@82@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "DimFilter filter = conversion.toDruidFilter(plannerContext,querySignature,rexNode)@@@137@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "final ExtractionFn extractionFn@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@19@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "return null@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "kind == SqlKind.IS_FALSE || kind == SqlKind.IS_NOT_TRUE@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "final String column@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
99 [style = filled, label = "return null@@@108@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
112 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForSqlTypeName(lhs.getType().getSqlTypeName())@@@110@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "return getBoundTimeDimFilter(operatorKind,boundRefKey,rhsInterval,rhsAligned)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "final SqlOperatorConversion conversion = plannerContext.getOperatorTable().lookupOperatorConversion(operator)@@@132@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
80 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "final RexNode rexNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "RexNode x = lhs@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "final SqlOperator operator = ((RexCall)rexNode).getOperator()@@@131@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "RexNode x = lhs@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "druidExpression == null@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "boolean flip = false@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,querySignature.getRowSignature(),lhs)@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
97 [style = filled, label = "column = lhsExpression.getSimpleExtraction().getColumn()@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "flippedKind = kind@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@78@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rhs.getKind() != SqlKind.LITERAL@@@60@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "druidExpression.isSimpleExtraction()@@@17@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
134 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "final String val@@@77@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "final SqlKind operatorKind@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "val = String.valueOf(Calcites.calciteDateTimeLiteralToJoda(rhsLiteral,plannerContext.getTimeZone()).getMillis())@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RexNode lhs = operands.get(0)@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@107@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return null@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final RexNode operand = Iterables.getOnlyElement(((RexCall)rexNode).getOperands())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "RexNode rhs = operands.get(1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52->137 [style = bold, label=""];
9->67 [style = solid, label="x"];
8->142 [style = dashed, label="0"];
109->114 [style = dotted, label="true"];
28->35 [style = dotted, label="true"];
116->40 [style = solid, label="flip"];
26->34 [style = bold, label=""];
113->116 [style = dotted, label="true"];
55->22 [style = solid, label="val"];
45->120 [style = dotted, label="false"];
134->84 [style = bold, label=""];
66->111 [style = dotted, label="false"];
77->81 [style = dotted, label="true"];
31->45 [style = solid, label="boundRefKey"];
92->117 [style = bold, label=""];
92->117 [style = dotted, label="true"];
43->19 [style = solid, label="queryGranularity"];
26->131 [style = bold, label=""];
52->36 [style = solid, label="rhsMillis"];
139->121 [style = bold, label=""];
13->142 [style = bold, label=""];
0->24 [style = bold, label=""];
28->100 [style = dotted, label="true"];
16->51 [style = solid, label="rowSignature"];
75->52 [style = bold, label=""];
83->57 [style = dotted, label="true"];
9->0 [style = solid, label="flippedKind"];
42->67 [style = bold, label=""];
58->77 [style = solid, label="kind"];
44->114 [style = solid, label="rhsMillis"];
3->52 [style = solid, label="flippedKind"];
71->47 [style = dotted, label="true"];
20->73 [style = solid, label="queryGranularity"];
40->92 [style = dotted, label="true"];
79->17 [style = bold, label=""];
74->10 [style = bold, label=""];
71->15 [style = dotted, label="true"];
66->123 [style = dotted, label="true"];
118->143 [style = solid, label="plannerContext"];
15->34 [style = bold, label=""];
28->90 [style = dotted, label="true"];
97->48 [style = solid, label="column"];
129->31 [style = solid, label="column"];
28->80 [style = dotted, label="true"];
83->27 [style = dotted, label="true"];
37->79 [style = solid, label="val"];
66->134 [style = bold, label=""];
109->44 [style = bold, label=""];
1->42 [style = bold, label=""];
67->0 [style = solid, label="flippedKind"];
145->80 [style = solid, label="val"];
27->78 [style = solid, label="rhs"];
22->34 [style = solid, label="filter"];
83->48 [style = bold, label=""];
42->40 [style = bold, label=""];
156->149 [style = solid, label="rhsMillis"];
100->17 [style = bold, label=""];
117->28 [style = solid, label="flippedKind"];
89->15 [style = solid, label="val"];
48->79 [style = solid, label="boundRefKey"];
23->43 [style = solid, label="lhsExpression"];
145->112 [style = bold, label=""];
145->70 [style = solid, label="val"];
108->26 [style = bold, label=""];
149->153 [style = bold, label=""];
86->62 [style = dotted, label="true"];
58->69 [style = solid, label="kind"];
71->37 [style = bold, label=""];
74->52 [style = solid, label="flippedKind"];
61->62 [style = solid, label="x"];
115->106 [style = bold, label=""];
40->92 [style = bold, label=""];
19->87 [style = bold, label=""];
114->12 [style = bold, label=""];
10->0 [style = bold, label=""];
60->33 [style = solid, label="flippedKind"];
69->4 [style = dotted, label="true"];
48->79 [style = dotted, label="true"];
19->52 [style = solid, label="flippedKind"];
113->9 [style = bold, label=""];
120->99 [style = bold, label=""];
55->15 [style = solid, label="val"];
48->80 [style = solid, label="boundRefKey"];
71->45 [style = dotted, label="true"];
131->37 [style = dotted, label="true"];
118->144 [style = solid, label="plannerContext"];
74->21 [style = solid, label="flippedKind"];
92->74 [style = bold, label=""];
28->90 [style = bold, label=""];
104->141 [style = bold, label=""];
46->35 [style = dotted, label="true"];
138->141 [style = solid, label="filter"];
89->47 [style = solid, label="val"];
16->59 [style = solid, label="rowSignature"];
67->33 [style = solid, label="flippedKind"];
58->60 [style = solid, label="kind"];
32->27 [style = bold, label=""];
92->107 [style = dotted, label="true"];
16->80 [style = solid, label="rowSignature"];
3->33 [style = solid, label="flippedKind"];
110->129 [style = dotted, label="false"];
117->0 [style = bold, label=""];
106->65 [style = dotted, label="true"];
92->74 [style = dotted, label="true"];
75->6 [style = dotted, label="true"];
81->106 [style = dashed, label="0"];
10->21 [style = solid, label="flippedKind"];
156->153 [style = solid, label="rhsMillis"];
100->17 [style = solid, label="filter"];
135->138 [style = bold, label=""];
31->47 [style = solid, label="boundRefKey"];
86->61 [style = dotted, label="true"];
105->111 [style = solid, label="rexNode"];
110->125 [style = dotted, label="false"];
23->143 [style = dashed, label="0"];
48->100 [style = solid, label="boundRefKey"];
71->7 [style = dotted, label="true"];
15->79 [style = solid, label="val"];
79->53 [style = bold, label=""];
28->94 [style = bold, label=""];
83->19 [style = dotted, label="true"];
66->0 [style = dotted, label="true"];
81->41 [style = bold, label=""];
9->33 [style = solid, label="flippedKind"];
123->28 [style = solid, label="flippedKind"];
30->72 [style = bold, label=""];
1->3 [style = dotted, label="false"];
33->89 [style = bold, label=""];
86->61 [style = bold, label=""];
71->22 [style = bold, label=""];
66->1 [style = dotted, label="true"];
95->136 [style = dotted, label="false"];
66->110 [style = dotted, label="true"];
85->17 [style = solid, label="filter"];
31->26 [style = solid, label="boundRefKey"];
83->10 [style = dotted, label="true"];
68->38 [style = bold, label=""];
113->9 [style = dotted, label="true"];
72->26 [style = solid, label="val"];
110->119 [style = dotted, label="false"];
48->35 [style = solid, label="boundRefKey"];
48->85 [style = dotted, label="true"];
114->21 [style = solid, label="rhsInterval"];
89->45 [style = solid, label="val"];
125->119 [style = solid, label="virtualLhs"];
50->0 [style = solid, label="flippedKind"];
154->155 [style = bold, label=""];
50->71 [style = solid, label="flippedKind"];
49->37 [style = solid, label="val"];
120->99 [style = dotted, label="false"];
140->124 [style = bold, label=""];
17->121 [style = bold, label=""];
77->95 [style = dotted, label="true"];
53->17 [style = bold, label=""];
66->112 [style = dotted, label="true"];
133->38 [style = dotted, label="true"];
110->91 [style = dotted, label="false"];
60->10 [style = bold, label=""];
58->92 [style = solid, label="kind"];
60->26 [style = solid, label="rhs"];
110->97 [style = dotted, label="true"];
78->56 [style = bold, label=""];
66->137 [style = dotted, label="true"];
58->29 [style = solid, label="kind"];
23->69 [style = solid, label="lhsExpression"];
66->20 [style = dotted, label="true"];
80->138 [style = dashed, label="0"];
41->5 [style = bold, label=""];
83->56 [style = dotted, label="true"];
66->40 [style = dotted, label="true"];
16->23 [style = solid, label="rowSignature"];
83->71 [style = dotted, label="true"];
76->90 [style = bold, label=""];
80->17 [style = solid, label="filter"];
154->150 [style = dotted, label="true"];
104->141 [style = dotted, label="true"];
87->0 [style = bold, label=""];
58->83 [style = solid, label="kind"];
19->28 [style = solid, label="flippedKind"];
42->9 [style = bold, label=""];
69->4 [style = bold, label=""];
91->72 [style = bold, label=""];
124->135 [style = bold, label=""];
83->78 [style = dotted, label="true"];
104->139 [style = bold, label=""];
42->60 [style = bold, label=""];
31->21 [style = bold, label=""];
9->10 [style = bold, label=""];
21->71 [style = bold, label=""];
73->75 [style = bold, label=""];
58->74 [style = solid, label="kind"];
36->11 [style = bold, label=""];
50->33 [style = solid, label="flippedKind"];
37->90 [style = solid, label="val"];
77->106 [style = dotted, label="true"];
49->45 [style = solid, label="val"];
28->100 [style = bold, label=""];
66->72 [style = dotted, label="true"];
45->145 [style = dotted, label="true"];
109->108 [style = bold, label=""];
34->17 [style = bold, label=""];
141->139 [style = bold, label=""];
132->58 [style = bold, label=""];
18->32 [style = bold, label=""];
3->71 [style = solid, label="flippedKind"];
47->34 [style = bold, label=""];
62->78 [style = solid, label="rhs"];
29->51 [style = bold, label=""];
82->54 [style = dotted, label="true"];
75->52 [style = dotted, label="true"];
143->133 [style = bold, label=""];
147->138 [style = solid, label="querySignature"];
127->143 [style = bold, label=""];
49->12 [style = bold, label=""];
77->39 [style = dotted, label="true"];
73->137 [style = bold, label=""];
79->53 [style = dotted, label="true"];
75->33 [style = dotted, label="true"];
10->28 [style = solid, label="flippedKind"];
83->31 [style = dotted, label="true"];
66->133 [style = dotted, label="true"];
122->67 [style = bold, label=""];
48->28 [style = dotted, label="true"];
24->38 [style = bold, label=""];
131->45 [style = dotted, label="false"];
48->17 [style = bold, label=""];
5->17 [style = bold, label=""];
109->21 [style = dotted, label="true"];
43->0 [style = solid, label="queryGranularity"];
136->96 [style = bold, label=""];
26->37 [style = solid, label="rhsLiteral"];
8->17 [style = bold, label=""];
3->10 [style = bold, label=""];
40->19 [style = dotted, label="false"];
37->100 [style = solid, label="val"];
63->62 [style = bold, label=""];
45->145 [style = bold, label=""];
27->86 [style = bold, label=""];
15->70 [style = solid, label="val"];
117->21 [style = solid, label="flippedKind"];
54->147 [style = dashed, label="0"];
90->17 [style = bold, label=""];
66->126 [style = dotted, label="true"];
38->25 [style = bold, label=""];
107->0 [style = bold, label=""];
123->40 [style = bold, label=""];
91->48 [style = solid, label="extractionFn"];
15->34 [style = solid, label="filter"];
83->86 [style = dotted, label="true"];
40->0 [style = solid, label="flippedKind"];
15->35 [style = solid, label="val"];
61->63 [style = bold, label=""];
67->26 [style = solid, label="rhs"];
12->31 [style = bold, label=""];
133->38 [style = bold, label=""];
0->143 [style = bold, label=""];
10->52 [style = solid, label="flippedKind"];
126->110 [style = bold, label=""];
125->119 [style = bold, label=""];
66->73 [style = dotted, label="true"];
108->100 [style = solid, label="val"];
92->3 [style = dotted, label="true"];
30->72 [style = dotted, label="true"];
60->71 [style = solid, label="flippedKind"];
138->104 [style = bold, label=""];
65->41 [style = bold, label=""];
79->80 [style = bold, label=""];
20->73 [style = dotted, label="true"];
89->26 [style = solid, label="val"];
15->80 [style = solid, label="val"];
67->116 [style = bold, label=""];
108->70 [style = solid, label="val"];
83->43 [style = dotted, label="true"];
31->15 [style = solid, label="boundRefKey"];
98->72 [style = solid, label="extractionFn"];
77->66 [style = bold, label=""];
25->20 [style = bold, label=""];
14->23 [style = bold, label=""];
83->48 [style = dotted, label="false"];
13->8 [style = dotted, label="true"];
28->94 [style = dotted, label="true"];
119->101 [style = bold, label=""];
108->90 [style = solid, label="val"];
44->114 [style = bold, label=""];
76->70 [style = bold, label=""];
83->84 [style = dotted, label="true"];
37->35 [style = solid, label="val"];
76->90 [style = dotted, label="true"];
118->142 [style = solid, label="plannerContext"];
20->89 [style = bold, label=""];
28->79 [style = bold, label=""];
64->30 [style = bold, label=""];
66->28 [style = dotted, label="true"];
105->138 [style = solid, label="rexNode"];
58->66 [style = solid, label="kind"];
79->80 [style = dotted, label="false"];
19->87 [style = dotted, label="true"];
32->61 [style = solid, label="lhs"];
118->115 [style = solid, label="plannerContext"];
29->51 [style = dotted, label="true"];
87->0 [style = solid, label="rhsMillis"];
72->37 [style = solid, label="val"];
103->136 [style = bold, label=""];
92->69 [style = bold, label=""];
83->23 [style = dotted, label="true"];
106->93 [style = bold, label=""];
75->11 [style = dotted, label="true"];
55->37 [style = solid, label="val"];
56->49 [style = bold, label=""];
155->149 [style = bold, label=""];
2->70 [style = solid, label="rexNode"];
74->0 [style = bold, label=""];
66->108 [style = dotted, label="true"];
99->112 [style = bold, label=""];
90->17 [style = solid, label="filter"];
129->91 [style = bold, label=""];
66->26 [style = dotted, label="true"];
83->24 [style = dotted, label="true"];
49->15 [style = solid, label="val"];
109->44 [style = dotted, label="true"];
66->143 [style = dotted, label="true"];
38->31 [style = solid, label="column"];
79->46 [style = dotted, label="false"];
52->11 [style = solid, label="rhsMillis"];
10->14 [style = dotted, label="true"];
37->80 [style = solid, label="val"];
21->34 [style = solid, label="filter"];
49->26 [style = solid, label="val"];
29->77 [style = dotted, label="false"];
65->93 [style = bold, label=""];
20->75 [style = dotted, label="true"];
22->34 [style = bold, label=""];
23->69 [style = bold, label=""];
113->67 [style = dotted, label="true"];
2->48 [style = solid, label="rexNode"];
31->37 [style = solid, label="boundRefKey"];
13->8 [style = bold, label=""];
77->93 [style = dotted, label="true"];
73->52 [style = dotted, label="true"];
79->17 [style = solid, label="filter"];
115->106 [style = solid, label="druidExpression"];
45->34 [style = bold, label=""];
29->77 [style = bold, label=""];
149->152 [style = solid, label="rhsInterval"];
107->21 [style = solid, label="flippedKind"];
37->70 [style = solid, label="val"];
119->129 [style = bold, label=""];
59->115 [style = dashed, label="0"];
79->70 [style = dotted, label="false"];
95->146 [style = bold, label=""];
63->121 [style = bold, label=""];
56->64 [style = bold, label=""];
69->0 [style = bold, label=""];
39->59 [style = bold, label=""];
111->121 [style = bold, label=""];
116->123 [style = bold, label=""];
136->96 [style = dotted, label="true"];
75->36 [style = dotted, label="true"];
25->73 [style = solid, label="extractionFn"];
79->76 [style = dotted, label="false"];
147->142 [style = solid, label="querySignature"];
16->8 [style = solid, label="rowSignature"];
153->152 [style = solid, label="rhsAligned"];
90->70 [style = bold, label=""];
35->17 [style = solid, label="filter"];
66->85 [style = dotted, label="true"];
51->144 [style = dashed, label="0"];
71->47 [style = bold, label=""];
77->39 [style = bold, label=""];
51->17 [style = bold, label=""];
50->10 [style = bold, label=""];
45->34 [style = solid, label="filter"];
146->63 [style = solid, label="equalFilter"];
2->80 [style = solid, label="rexNode"];
28->79 [style = dotted, label="true"];
82->16 [style = dotted, label="true"];
88->57 [style = bold, label=""];
75->52 [style = solid, label="rhsMillis"];
55->12 [style = bold, label=""];
143->125 [style = solid, label="lhsExpression"];
54->23 [style = solid, label="plannerContext"];
55->45 [style = solid, label="val"];
28->80 [style = bold, label=""];
0->127 [style = dotted, label="true"];
77->59 [style = dotted, label="true"];
142->121 [style = bold, label=""];
118->138 [style = solid, label="plannerContext"];
71->45 [style = bold, label=""];
15->112 [style = bold, label=""];
70->17 [style = solid, label="filter"];
42->74 [style = dotted, label="true"];
77->41 [style = dotted, label="true"];
112->48 [style = bold, label=""];
42->60 [style = dotted, label="true"];
20->52 [style = solid, label="queryGranularity"];
77->5 [style = dotted, label="true"];
72->128 [style = bold, label=""];
3->0 [style = bold, label=""];
154->156 [style = dotted, label="true"];
129->48 [style = solid, label="column"];
128->109 [style = bold, label=""];
1->42 [style = dotted, label="true"];
107->52 [style = solid, label="flippedKind"];
71->7 [style = bold, label=""];
28->35 [style = bold, label=""];
29->144 [style = bold, label=""];
25->20 [style = solid, label="extractionFn"];
47->34 [style = solid, label="filter"];
19->0 [style = dotted, label="true"];
132->147 [style = dotted, label="true"];
66->134 [style = dotted, label="true"];
30->44 [style = bold, label=""];
48->85 [style = bold, label=""];
67->10 [style = bold, label=""];
113->122 [style = dotted, label="true"];
0->127 [style = bold, label=""];
38->20 [style = bold, label=""];
66->60 [style = dotted, label="true"];
40->33 [style = solid, label="flippedKind"];
11->33 [style = solid, label="rhsAligned"];
67->71 [style = solid, label="flippedKind"];
72->47 [style = solid, label="val"];
147->144 [style = solid, label="querySignature"];
118->103 [style = solid, label="plannerContext"];
15->100 [style = solid, label="val"];
64->55 [style = bold, label=""];
6->33 [style = solid, label="boundRefKey"];
1->3 [style = bold, label=""];
72->12 [style = bold, label=""];
135->102 [style = dotted, label="true"];
71->15 [style = bold, label=""];
70->46 [style = bold, label=""];
62->66 [style = bold, label=""];
48->90 [style = solid, label="boundRefKey"];
83->20 [style = dotted, label="true"];
42->40 [style = dotted, label="true"];
42->143 [style = solid, label="lhs"];
19->0 [style = bold, label=""];
71->26 [style = dotted, label="true"];
93->95 [style = bold, label=""];
110->97 [style = bold, label=""];
143->20 [style = solid, label="lhsExpression"];
92->107 [style = bold, label=""];
6->33 [style = bold, label=""];
110->98 [style = dotted, label="true"];
72->109 [style = dotted, label="true"];
46->35 [style = bold, label=""];
58->3 [style = solid, label="kind"];
77->83 [style = bold, label=""];
41->5 [style = solid, label="equalFilter"];
73->75 [style = dotted, label="true"];
144->121 [style = bold, label=""];
130->63 [style = bold, label=""];
102->121 [style = bold, label=""];
58->13 [style = solid, label="kind"];
54->80 [style = solid, label="plannerContext"];
72->22 [style = solid, label="val"];
145->100 [style = solid, label="val"];
71->26 [style = bold, label=""];
40->10 [style = bold, label=""];
72->15 [style = solid, label="val"];
12->21 [style = solid, label="rhsAligned"];
42->50 [style = bold, label=""];
98->72 [style = bold, label=""];
111->140 [style = bold, label=""];
42->50 [style = dotted, label="true"];
58->19 [style = solid, label="kind"];
101->129 [style = bold, label=""];
32->23 [style = solid, label="lhs"];
98->128 [style = solid, label="extractionFn"];
20->73 [style = bold, label=""];
57->18 [style = bold, label=""];
63->23 [style = solid, label="lhs"];
84->33 [style = solid, label="flippedKind"];
77->115 [style = dotted, label="true"];
95->103 [style = dotted, label="false"];
66->84 [style = dotted, label="true"];
40->71 [style = solid, label="flippedKind"];
133->20 [style = bold, label=""];
21->108 [style = bold, label=""];
97->31 [style = solid, label="column"];
28->70 [style = bold, label=""];
110->125 [style = bold, label=""];
9->122 [style = bold, label=""];
103->136 [style = solid, label="virtualColumn"];
7->34 [style = bold, label=""];
66->42 [style = dotted, label="true"];
111->124 [style = dotted, label="true"];
42->9 [style = dotted, label="true"];
74->28 [style = solid, label="flippedKind"];
3->21 [style = solid, label="flippedKind"];
154->148 [style = dotted, label="true"];
85->28 [style = bold, label=""];
131->37 [style = bold, label=""];
3->28 [style = solid, label="flippedKind"];
91->72 [style = solid, label="extractionFn"];
96->130 [style = bold, label=""];
56->49 [style = dotted, label="true"];
84->71 [style = solid, label="flippedKind"];
3->0 [style = solid, label="flippedKind"];
37->112 [style = bold, label=""];
77->83 [style = dotted, label="false"];
78->55 [style = solid, label="rhsLiteral"];
46->17 [style = bold, label=""];
83->38 [style = dotted, label="true"];
108->80 [style = solid, label="val"];
92->3 [style = bold, label=""];
83->12 [style = dotted, label="true"];
108->35 [style = solid, label="val"];
136->130 [style = bold, label=""];
92->69 [style = dotted, label="true"];
143->133 [style = solid, label="lhsExpression"];
84->1 [style = bold, label=""];
83->88 [style = bold, label=""];
94->17 [style = bold, label=""];
120->15 [style = dotted, label="true"];
109->12 [style = dotted, label="true"];
130->63 [style = solid, label="equalFilter"];
37->34 [style = solid, label="filter"];
45->120 [style = bold, label=""];
39->115 [style = bold, label=""];
132->105 [style = dotted, label="true"];
55->47 [style = solid, label="val"];
54->8 [style = solid, label="plannerContext"];
43->19 [style = bold, label=""];
39->59 [style = solid, label="operand"];
19->24 [style = bold, label=""];
75->89 [style = bold, label=""];
59->81 [style = solid, label="druidExpression"];
83->34 [style = dotted, label="true"];
13->142 [style = dotted, label="true"];
83->88 [style = dotted, label="true"];
19->21 [style = solid, label="flippedKind"];
42->67 [style = dotted, label="true"];
82->2 [style = dotted, label="true"];
82->58 [style = bold, label=""];
131->45 [style = bold, label=""];
135->138 [style = dotted, label="false"];
66->111 [style = bold, label=""];
97->98 [style = bold, label=""];
146->63 [style = bold, label=""];
24->68 [style = dotted, label="true"];
1->40 [style = solid, label="flip"];
145->35 [style = solid, label="val"];
135->139 [style = dotted, label="false"];
98->48 [style = solid, label="extractionFn"];
48->70 [style = solid, label="boundRefKey"];
70->17 [style = bold, label=""];
151->152 [style = solid, label="operatorKind"];
106->65 [style = bold, label=""];
135->102 [style = bold, label=""];
18->1 [style = solid, label="flip"];
84->0 [style = solid, label="flippedKind"];
10->14 [style = bold, label=""];
54->59 [style = solid, label="plannerContext"];
31->21 [style = solid, label="boundRefKey"];
49->22 [style = solid, label="val"];
49->47 [style = solid, label="val"];
66->113 [style = dotted, label="true"];
92->10 [style = dotted, label="true"];
25->31 [style = solid, label="extractionFn"];
60->0 [style = solid, label="flippedKind"];
44->12 [style = bold, label=""];
56->64 [style = dotted, label="false"];
120->15 [style = bold, label=""];
31->22 [style = solid, label="boundRefKey"];
38->6 [style = solid, label="column"];
111->140 [style = dotted, label="true"];
42->9 [style = solid, label="lhs"];
72->45 [style = solid, label="val"];
12->31 [style = solid, label="comparator"];
128->109 [style = solid, label="granularity"];
83->89 [style = dotted, label="true"];
155->152 [style = solid, label="boundRefKey"];
27->63 [style = solid, label="rhs"];
59->81 [style = bold, label=""];
71->22 [style = dotted, label="true"];
36->33 [style = solid, label="rhsInterval"];
89->78 [style = bold, label=""];
145->90 [style = solid, label="val"];
35->17 [style = bold, label=""];
95->103 [style = bold, label=""];
112->48 [style = solid, label="comparator"];
80->76 [style = bold, label=""];
39->115 [style = solid, label="operand"];
52->36 [style = bold, label=""];
83->18 [style = dotted, label="true"];
113->123 [style = bold, label=""];
148->155 [style = solid, label="column"];
108->79 [style = solid, label="val"];
26->34 [style = solid, label="filter"];
54->70 [style = solid, label="plannerContext"];
123->52 [style = solid, label="flippedKind"];
153->152 [style = bold, label=""];
95->146 [style = dotted, label="true"];
66->131 [style = dotted, label="true"];
28->70 [style = dotted, label="true"];
69->43 [style = bold, label=""];
64->55 [style = dotted, label="true"];
28->79 [style = solid, label="conversion"];
70->46 [style = solid, label="expression"];
66->17 [style = dotted, label="true"];
29->144 [style = dotted, label="true"];
89->37 [style = solid, label="val"];
140->124 [style = solid, label="operator"];
72->108 [style = bold, label=""];
24->68 [style = bold, label=""];
119->101 [style = dotted, label="true"];
40->19 [style = bold, label=""];
30->44 [style = dotted, label="false"];
58->63 [style = solid, label="kind"];
92->10 [style = bold, label=""];
86->84 [style = bold, label=""];
80->76 [style = solid, label="filter"];
83->69 [style = dotted, label="true"];
81->65 [style = bold, label=""];
55->26 [style = solid, label="val"];
66->84 [style = bold, label=""];
10->23 [style = bold, label=""];
107->28 [style = solid, label="flippedKind"];
42->74 [style = bold, label=""];
145->79 [style = solid, label="val"];
80->90 [style = solid, label="filter"];
122->143 [style = solid, label="lhs"];
58->13 [style = bold, label=""];
64->30 [style = dotted, label="false"];
54->51 [style = solid, label="plannerContext"];
4->43 [style = bold, label=""];
135->104 [style = dotted, label="false"];
13->29 [style = dotted, label="false"];
16->70 [style = solid, label="rowSignature"];
77->63 [style = dotted, label="true"];
115->103 [style = solid, label="druidExpression"];
83->21 [style = dotted, label="true"];
11->6 [style = bold, label=""];
77->66 [style = dotted, label="false"];
85->28 [style = solid, label="operator"];
71->37 [style = dotted, label="true"];
109->31 [style = dotted, label="true"];
78->49 [style = solid, label="rhsLiteral"];
89->22 [style = solid, label="val"];
123->21 [style = solid, label="flippedKind"];
66->48 [style = dotted, label="true"];
86->63 [style = dotted, label="true"];
72->128 [style = dotted, label="true"];
124->135 [style = solid, label="conversion"];
44->12 [style = solid, label="rhsMillis"];
154->151 [style = dotted, label="true"];
86->66 [style = dotted, label="true"];
73->75 [style = solid, label="granularity"];
83->32 [style = dotted, label="true"];
60->113 [style = bold, label=""];
13->29 [style = bold, label=""];
26->145 [style = solid, label="rhsLiteral"];
83->25 [style = dotted, label="true"];
95->130 [style = dotted, label="false"];
81->65 [style = dotted, label="true"];
60->122 [style = solid, label="rhs"];
37->34 [style = bold, label=""];
15->90 [style = solid, label="val"];
118->125 [style = solid, label="plannerContext"];
111->135 [style = dotted, label="true"];
66->1 [style = solid, label="flip"];
58->5 [style = solid, label="kind"];
83->1 [style = dotted, label="true"];
117->52 [style = solid, label="flippedKind"];
138->104 [style = solid, label="filter"];
80->17 [style = bold, label=""];
137->126 [style = bold, label=""];
132->118 [style = dotted, label="true"];
9->71 [style = solid, label="flippedKind"];
58->42 [style = solid, label="kind"];
91->128 [style = solid, label="extractionFn"];
}
