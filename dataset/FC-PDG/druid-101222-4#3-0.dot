digraph {
10 [style = filled, label = "equals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this == o@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Object o@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return hasMultipleValues == that.hasMultipleValues && size == that.size && Objects.equals(type,that.type) && Objects.equals(cardinality,that.cardinality) && Objects.equals(minValue,that.minValue) && Objects.equals(maxValue,that.maxValue) && Objects.equals(errorMessage,that.errorMessage)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "equals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return true@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return Objects.equals(dataSource,that.dataSource) && Objects.equals(baseDataSource,that.baseDataSource) && Objects.equals(baseQuerySegmentSpec,that.baseQuerySegmentSpec) && Objects.equals(preJoinableClauses,that.preJoinableClauses)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "return Objects.equals(dataSource,that.dataSource)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ColumnAnalysis that = (ColumnAnalysis)o@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "o == null || getClass() != o.getClass()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "equals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return false@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DataSourceAnalysis that = (DataSourceAnalysis)o@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
7->6 [style = dotted, label="true"];
7->11 [style = bold, label=""];
0->5 [style = dotted, label="true"];
9->0 [style = bold, label=""];
11->12 [style = bold, label=""];
1->0 [style = bold, label=""];
2->7 [style = solid, label="o"];
3->4 [style = bold, label=""];
7->3 [style = bold, label=""];
2->11 [style = solid, label="o"];
0->7 [style = bold, label=""];
2->0 [style = solid, label="o"];
10->2 [style = dotted, label="true"];
9->2 [style = dotted, label="true"];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
10->0 [style = bold, label=""];
7->6 [style = bold, label=""];
4->8 [style = dashed, label="0"];
5->7 [style = bold, label=""];
1->2 [style = dotted, label="true"];
3->11 [style = dashed, label="0"];
0->5 [style = bold, label=""];
2->3 [style = solid, label="o"];
}
