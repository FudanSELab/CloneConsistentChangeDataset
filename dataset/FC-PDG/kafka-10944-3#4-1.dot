digraph {
5 [style = filled, label = "shouldStoreDifferentValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final byte(( oldValue = {(byte)1}@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertSame(oldValue,bufferValue.oldValue())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertSame(oldValue,bufferValue.oldValue())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final byte(( priorValue = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final byte(( oldValue = {(byte)1}@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldStoreDifferentValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "shouldStoreDifferentValuesWithPriorNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNotEquals(bufferValue.priorValue(),bufferValue.oldValue())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final BufferValue bufferValue = new BufferValue(priorValue,oldValue,null,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNull(bufferValue.priorValue())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertSame(priorValue,bufferValue.priorValue())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final byte(( priorValue = {(byte)0}@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->9 [style = solid, label="priorValue"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
0->6 [style = bold, label=""];
8->12 [style = solid, label="priorValue"];
11->9 [style = bold, label=""];
1->3 [style = solid, label="priorValue"];
4->6 [style = solid, label="oldValue"];
11->3 [style = solid, label="oldValue"];
5->1 [style = bold, label=""];
1->6 [style = solid, label="priorValue"];
2->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
1->2 [style = solid, label="priorValue"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
4->3 [style = solid, label="oldValue"];
1->8 [style = dashed, label="0"];
12->3 [style = bold, label=""];
9->12 [style = bold, label=""];
4->0 [style = solid, label="oldValue"];
11->9 [style = solid, label="oldValue"];
8->11 [style = bold, label=""];
}
