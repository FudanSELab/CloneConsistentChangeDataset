digraph {
24 [style = filled, label = "nodeEntriesToAssign.add(treeIterator.next())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "AttributeFetcher attributeFetcher@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Iterator<Map.Entry<Integer,Node>> treeIterator = nodesByCores.entries().iterator()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AttributeFetcher attributeFetcher@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "placeReplicas(request.getCollection(),nodeEntriesToAssign,placementPlanFactory,replicaPlacements,shardName,request,replicaType)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Set<ReplicaPlacement> replicaPlacements = new HashSet<>(totalReplicasPerShard * request.getShardNames().size())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "placeForReplicaType(request.getCollection(),nodesToAssign,placementPlanFactory,replicaPlacements,shardName,request,rt)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "PlacementRequest request@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Collections.shuffle(nodesToAssign,replicaPlacementRandom)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ArrayList<Map.Entry<Integer,Node>> nodeEntriesToAssign = new ArrayList<>(totalReplicasPerShard)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "totalReplicasPerShard += request.getCountReplicasToCreate(rt)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < totalReplicasPerShard@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "return placementPlanFactory.createPlacementPlan(request,replicaPlacements)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TreeMultimap<Integer,Node> nodesByCores = TreeMultimap.create(Comparator.naturalOrder(),Ordering.arbitrary())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "attributeFetcher.requestNodeCoreCount()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Node node = e.getValue()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nodesByCores.put(attrValues.getCoresCount(node).get(),node)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "attributeFetcher.fetchFrom(nodes)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Set<Node> nodes = request.getTargetNodes()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "PlacementPlanFactory placementPlanFactory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "nodesByCores.remove(coreCount,node)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "attrValues.getNodeMetric(node,NodeMetricImpl.NUM_CORES).isEmpty()@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "cluster.getLiveNodes().size() < totalReplicasPerShard@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "computePlacement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "ArrayList<Node> nodesToAssign = new ArrayList<>(cluster.getLiveNodes())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "throw new PlacementException(\"Can't get number of cores in \" + node)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "computePlacement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "attributeFetcher.requestNodeMetric(NodeMetricImpl.NUM_CORES)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "PlacementRequest request@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "PlacementPlanFactory placementPlanFactory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "AttributeValues attrValues = attributeFetcher.fetchAttributes()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PlacementPlanFactory placementPlanFactory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AttributeFetcher attributeFetcher@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "attrValues.getCoresCount(node).isEmpty()@@@16@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "throw new PlacementException(\"Cluster size too small for number of replicas per shard\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "nodesByCores.put(coreCount + 1,node)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i++@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int totalReplicasPerShard = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int coreCount = e.getKey()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Cluster cluster@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "nodesByCores.put(attrValues.getNodeMetric(node,NodeMetricImpl.NUM_CORES).get(),node)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "int i = 0@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PlacementRequest request@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "computePlacement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return placementPlanFactory.createPlacementPlan(request,replicaPlacements)@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36->6 [style = dotted, label="true"];
17->15 [style = solid, label="nodeEntriesToAssign"];
15->10 [style = bold, label=""];
38->41 [style = dotted, label="true"];
1->27 [style = bold, label=""];
41->39 [style = solid, label="placementPlanFactory"];
11->29 [style = bold, label=""];
36->33 [style = bold, label=""];
28->14 [style = bold, label=""];
2->10 [style = solid, label="replicaPlacements"];
23->28 [style = bold, label=""];
42->39 [style = solid, label="nodesToAssign"];
19->17 [style = solid, label="totalReplicasPerShard"];
15->17 [style = bold, label=""];
42->44 [style = bold, label=""];
19->9 [style = bold, label=""];
28->5 [style = solid, label="coreCount"];
23->39 [style = dashed, label="0"];
25->19 [style = bold, label=""];
16->33 [style = dashed, label="0"];
38->40 [style = dotted, label="true"];
36->6 [style = bold, label=""];
9->2 [style = bold, label=""];
27->21 [style = solid, label="nodes"];
28->13 [style = solid, label="coreCount"];
18->8 [style = dotted, label="true"];
29->23 [style = bold, label=""];
35->21 [style = bold, label=""];
0->15 [style = solid, label="request"];
19->2 [style = solid, label="totalReplicasPerShard"];
26->23 [style = solid, label="i"];
12->6 [style = dotted, label="true"];
33->36 [style = bold, label=""];
0->10 [style = solid, label="request"];
18->25 [style = bold, label=""];
30->32 [style = dotted, label="true"];
38->25 [style = bold, label=""];
21->7 [style = bold, label=""];
18->0 [style = dotted, label="true"];
13->15 [style = bold, label=""];
9->1 [style = bold, label=""];
39->42 [style = bold, label=""];
23->24 [style = dotted, label="true"];
2->15 [style = solid, label="replicaPlacements"];
2->17 [style = bold, label=""];
31->10 [style = solid, label="request"];
38->37 [style = dotted, label="true"];
3->35 [style = dashed, label="0"];
34->15 [style = solid, label="placementPlanFactory"];
19->23 [style = solid, label="totalReplicasPerShard"];
38->22 [style = dotted, label="true"];
9->20 [style = bold, label=""];
20->1 [style = bold, label=""];
17->42 [style = dashed, label="0"];
30->34 [style = dotted, label="true"];
27->35 [style = bold, label=""];
19->9 [style = solid, label="totalReplicasPerShard"];
24->26 [style = bold, label=""];
37->43 [style = solid, label="request"];
6->33 [style = bold, label=""];
5->13 [style = bold, label=""];
9->20 [style = dotted, label="true"];
3->21 [style = bold, label=""];
33->2 [style = bold, label=""];
7->36 [style = bold, label=""];
30->31 [style = dotted, label="true"];
14->5 [style = bold, label=""];
18->22 [style = dotted, label="true"];
7->12 [style = bold, label=""];
27->3 [style = bold, label=""];
39->43 [style = bold, label=""];
30->25 [style = bold, label=""];
8->15 [style = solid, label="placementPlanFactory"];
12->16 [style = bold, label=""];
29->26 [style = solid, label="i"];
14->5 [style = solid, label="node"];
2->39 [style = solid, label="replicaPlacements"];
16->2 [style = bold, label=""];
44->39 [style = bold, label=""];
12->6 [style = bold, label=""];
37->39 [style = solid, label="request"];
20->2 [style = bold, label=""];
23->24 [style = bold, label=""];
23->26 [style = dotted, label="true"];
12->36 [style = dashed, label="0"];
6->16 [style = bold, label=""];
26->23 [style = bold, label=""];
29->23 [style = solid, label="i"];
31->15 [style = solid, label="request"];
14->13 [style = solid, label="node"];
2->43 [style = solid, label="replicaPlacements"];
18->4 [style = dotted, label="true"];
30->22 [style = dotted, label="true"];
16->12 [style = bold, label=""];
2->42 [style = bold, label=""];
42->44 [style = solid, label="nodesToAssign"];
13->28 [style = bold, label=""];
17->11 [style = bold, label=""];
}
