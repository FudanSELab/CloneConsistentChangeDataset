digraph {
5 [style = filled, label = "context.checking(new Expectations(){})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Annotations.MethodEvaluator<Title> titleEvaluator = (Annotations.MethodEvaluator<Title>)titleFacetViaTitleAnnotation.getComponents().get(i).getTitleEvaluator()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleEvaluator.getMethod())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"someTitle\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final Facet facet = facetedMethod.getFacet()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final List<TitleComponent> components = titleFacetViaTitleAnnotation.getComponents()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testTitleAnnotatedMethodsPickedUpOnClass['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TitleFacetViaTitleAnnotation titleFacetViaTitleAnnotation = (TitleFacetViaTitleAnnotation)facet@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i < titleMethods.size()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int i = 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final List<Method> titleMethods = Arrays.asList(.getMethod(\"titleElement1\"),.getMethod(\"titleElement3\"),.getMethod(\"titleElement2\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(titleMethods.get(i),titleEvaluator.getMethod())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(facet instanceof TitleFacetViaTitleAnnotation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String title = titleFacetViaTitleAnnotation.title(mockObjectAdapter)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNotNull(facet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(title,is(\"titleElement1. titleElement3,titleElement2\"))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetedMethod))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testTitleAnnotatedMethodPickedUpOnClassRemoved['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Customer2 customer = new Customer2()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
11->10 [style = solid, label="i"];
10->12 [style = solid, label="i"];
10->6 [style = dotted, label="true"];
19->18 [style = bold, label=""];
10->12 [style = dotted, label="true"];
0->6 [style = bold, label=""];
11->10 [style = dotted, label="true"];
11->6 [style = bold, label=""];
11->12 [style = dotted, label="true"];
16->3 [style = solid, label="title"];
14->20 [style = dashed, label="0"];
4->8 [style = solid, label="facet"];
7->20 [style = bold, label=""];
9->7 [style = bold, label=""];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
10->11 [style = solid, label="i"];
6->0 [style = solid, label="i"];
7->14 [style = bold, label=""];
20->21 [style = bold, label=""];
5->16 [style = bold, label=""];
21->12 [style = solid, label="i"];
12->10 [style = bold, label=""];
11->6 [style = solid, label="i"];
15->11 [style = bold, label=""];
17->2 [style = bold, label=""];
10->13 [style = bold, label=""];
18->4 [style = bold, label=""];
21->11 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
4->7 [style = solid, label="facet"];
11->6 [style = dotted, label="true"];
6->10 [style = bold, label=""];
4->9 [style = solid, label="facet"];
6->10 [style = solid, label="i"];
8->9 [style = bold, label=""];
2->18 [style = dashed, label="0"];
13->5 [style = bold, label=""];
4->8 [style = bold, label=""];
10->0 [style = dotted, label="true"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
21->10 [style = solid, label="i"];
11->0 [style = solid, label="i"];
14->11 [style = bold, label=""];
21->11 [style = solid, label="i"];
10->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
