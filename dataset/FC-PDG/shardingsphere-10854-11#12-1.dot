digraph {
7 [style = filled, label = "when(executeEngine.getCommandPacketType(eq(payload))).thenReturn(commandPacketType)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CommandExecutorTask actual = new CommandExecutorTask(engine,backendConnection,handlerContext,message)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "actual.run()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(statusHandler).switchToUsing()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "verify(statusHandler).waitUntilConnectionReleasedIfNecessary()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(backendConnection.getConnectionSize()).thenReturn(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(codecEngine.createPacketPayload(eq(message))).thenReturn(payload)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertRunNeedFlushByFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(engine.getCodecEngine()).thenReturn(codecEngine)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(backendConnection.getStatusHandler()).thenReturn(statusHandler)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(handlerContext).write(databasePacket)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertRunNeedFlushByTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(executeEngine.getCommandPacket(eq(payload),eq(commandPacketType),eq(backendConnection))).thenReturn(commandPacket)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.emptyList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(statusHandler).switchUsingStatus()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertRunNeedFlushByFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "verify(executeEngine).writeQueryData(handlerContext,backendConnection,queryCommandExecutor,1)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(queryCommandExecutor)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(backendConnection.getStatusManager()).thenReturn(statusHandler)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "verify(handlerContext).flush()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
4->18 [style = dashed, label="0"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
18->3 [style = bold, label=""];
16->0 [style = bold, label=""];
21->19 [style = bold, label=""];
1->14 [style = dashed, label="0"];
19->20 [style = bold, label=""];
8->14 [style = bold, label=""];
3->12 [style = bold, label=""];
12->7 [style = bold, label=""];
15->5 [style = bold, label=""];
9->6 [style = bold, label=""];
2->15 [style = dashed, label="0"];
8->1 [style = bold, label=""];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
0->4 [style = bold, label=""];
1->21 [style = bold, label=""];
6->8 [style = bold, label=""];
0->18 [style = bold, label=""];
10->9 [style = bold, label=""];
13->15 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
