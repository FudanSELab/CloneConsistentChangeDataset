digraph {
4 [style = filled, label = "final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final PodBuilder basicPodBuilder = new PodBuilder(flinkPod.getPodWithoutMainContainer())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "FlinkPod flinkPod@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "basicPodBuilder.withApiVersion(API_VERSION).editOrNewSpec().withServiceAccount(serviceAccountName).withServiceAccountName(serviceAccountName).endSpec()@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final Pod basicPod = new PodBuilder(flinkPod.getPodWithoutMainContainer()).withApiVersion(Constants.API_VERSION).editOrNewMetadata().withName(kubernetesTaskManagerParameters.getPodName()).withLabels(kubernetesTaskManagerParameters.getLabels()).withAnnotations(kubernetesTaskManagerParameters.getAnnotations()).endMetadata().editOrNewSpec().withServiceAccountName(kubernetesTaskManagerParameters.getServiceAccount()).withRestartPolicy(Constants.RESTART_POLICY_OF_NEVER).withImagePullSecrets(kubernetesTaskManagerParameters.getImagePullSecrets()).withNodeSelector(kubernetesTaskManagerParameters.getNodeSelector()).withTolerations(kubernetesTaskManagerParameters.getTolerations().stream().map(null).collect(Collectors.toList())).endSpec().build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final String serviceAccountName = KubernetesUtils.resolveUserDefinedValue(flinkConfig,KubernetesConfigOptions.JOB_MANAGER_SERVICE_ACCOUNT,kubernetesJobManagerParameters.getServiceAccount(),KubernetesUtils.getServiceAccount(flinkPod),\"service account\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "return new FlinkPod.Builder(flinkPod).withPod(basicPodBuilder.build()).withMainContainer(basicMainContainer).build()@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "flinkPod.getPodWithoutMainContainer().getSpec().getRestartPolicy() != null@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "decorateFlinkPod['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return new FlinkPod.Builder(flinkPod).withPod(basicPod).withMainContainer(basicMainContainer).build()@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Pod basicPod = new PodBuilder(flinkPod.getPodWithoutMainContainer()).withApiVersion(API_VERSION).editOrNewMetadata().withLabels(kubernetesJobManagerParameters.getLabels()).withAnnotations(kubernetesJobManagerParameters.getAnnotations()).endMetadata().editOrNewSpec().withServiceAccountName(kubernetesJobManagerParameters.getServiceAccount()).withImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets()).withNodeSelector(kubernetesJobManagerParameters.getNodeSelector()).withTolerations(kubernetesJobManagerParameters.getTolerations().stream().map(null).collect(Collectors.toList())).endSpec().build()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "decorateFlinkPod['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "basicPodBuilder.editOrNewMetadata().addToLabels(kubernetesJobManagerParameters.getLabels()).addToAnnotations(kubernetesJobManagerParameters.getAnnotations()).endMetadata().editOrNewSpec().addToImagePullSecrets(kubernetesJobManagerParameters.getImagePullSecrets()).addToNodeSelector(kubernetesJobManagerParameters.getNodeSelector()).addAllToTolerations(kubernetesJobManagerParameters.getTolerations().stream().map(null).collect(Collectors.toList())).endSpec()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final Container basicMainContainer = decorateMainContainer(flinkPod.getMainContainer())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "decorateFlinkPod['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "logger.info(\"The restart policy of JobManager pod will be overwritten to 'always' \" + \"since it is controlled by the Kubernetes deployment.\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13->5 [style = bold, label=""];
0->4 [style = bold, label=""];
8->12 [style = bold, label=""];
7->10 [style = bold, label=""];
14->1 [style = dotted, label="true"];
15->4 [style = bold, label=""];
12->13 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
3->11 [style = dashed, label="0"];
10->11 [style = bold, label=""];
1->8 [style = solid, label="flinkPod"];
12->13 [style = bold, label=""];
6->9 [style = bold, label=""];
2->1 [style = dotted, label="true"];
12->5 [style = bold, label=""];
2->0 [style = bold, label=""];
0->15 [style = dashed, label="0"];
9->8 [style = bold, label=""];
14->15 [style = bold, label=""];
4->3 [style = bold, label=""];
5->7 [style = bold, label=""];
}
