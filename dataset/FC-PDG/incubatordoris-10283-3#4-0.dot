digraph {
14 [style = filled, label = "@Mocked Backend myBackend2@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "@Mocked Backend myBackend5@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "System.out.println(unavailableBeIds)@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "@Mocked Backend myBackend3@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "@Mocked ColocateTableIndex colocateTableIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "testGetUnavailableBeIdsInGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "@Mocked Backend myBackend2@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<Long> clusterBackendIds = Lists.newArrayList(1L,2L,3L,4L,5L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "GroupId groupId = new GroupId(10000,10001)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "@Mocked SystemInfoService infoService@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "@Mocked Backend myBackend4@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "@Mocked Backend myBackend3@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "@Mocked SystemInfoService infoService@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "new Expectations(){}@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<Long> availableBeIds = Deencapsulation.invoke(balancer,\"getAvailableBeIds\",\"cluster1\",infoService)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "new Expectations(){}@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Set<Long> unavailableBeIds = Deencapsulation.invoke(balancer,\"getUnavailableBeIdsInGroup\",infoService,colocateTableIndex,groupId,Tag.DEFAULT_BACKEND_TAG)@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Assert.assertArrayEquals(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14c5c,availableBeIds.stream().mapToLong(null).sorted().toArray())@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "@Mocked Backend myBackend2@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertArrayEquals(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14c1f,unavailableBeIds.stream().mapToLong(null).sorted().toArray())@@@73@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "@Mocked Backend myBackend4@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Tag tag = Tag.DEFAULT_BACKEND_TAG@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "@Mocked SystemInfoService infoService@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "@Mocked Backend myBackend5@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testGetUnavailableBeIdsInGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "@Mocked Backend myBackend3@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Set<Long> unavailableBeIds = Deencapsulation.invoke(balancer,\"getUnavailableBeIdsInGroup\",infoService,colocateTableIndex,groupId)@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "@Mocked Backend myBackend5@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testGetAvailableBeIds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "@Mocked Backend myBackend4@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertArrayEquals(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14bc6,unavailableBeIds.stream().mapToLong(null).sorted().toArray())@@@60@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "System.out.println(unavailableBeIds)@@@72@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Set<Long> allBackendsInGroup = Sets.newHashSet(1L,2L,3L,4L,5L)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->32 [style = dashed, label="0"];
29->23 [style = solid, label="infoService"];
31->25 [style = dotted, label="true"];
8->10 [style = bold, label=""];
19->14 [style = dotted, label="true"];
9->0 [style = dotted, label="true"];
20->13 [style = bold, label=""];
22->2 [style = bold, label=""];
18->15 [style = solid, label="infoService"];
28->30 [style = bold, label=""];
19->17 [style = dotted, label="true"];
8->10 [style = solid, label="unavailableBeIds"];
2->3 [style = bold, label=""];
9->11 [style = dotted, label="true"];
8->15 [style = dashed, label="0"];
30->23 [style = bold, label=""];
11->8 [style = solid, label="colocateTableIndex"];
23->26 [style = bold, label=""];
19->18 [style = dotted, label="true"];
3->15 [style = bold, label=""];
19->21 [style = dotted, label="true"];
7->15 [style = solid, label="groupId"];
9->7 [style = bold, label=""];
9->6 [style = dotted, label="true"];
31->32 [style = dotted, label="true"];
7->22 [style = bold, label=""];
7->8 [style = solid, label="groupId"];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
3->8 [style = bold, label=""];
19->11 [style = dotted, label="true"];
31->27 [style = dotted, label="true"];
9->1 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
4->8 [style = solid, label="infoService"];
9->4 [style = dotted, label="true"];
16->15 [style = solid, label="colocateTableIndex"];
31->24 [style = dotted, label="true"];
31->28 [style = bold, label=""];
31->29 [style = dotted, label="true"];
19->7 [style = bold, label=""];
15->20 [style = solid, label="unavailableBeIds"];
8->23 [style = dashed, label="0"];
9->5 [style = dotted, label="true"];
}
