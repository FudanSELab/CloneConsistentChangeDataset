digraph {
8 [style = filled, label = "BinaryInputArchive ia@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "serializeTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int count = tree.getNodeCount()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "long end = System.nanoTime()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int width@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int width@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int depth@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "LOG.info(\"Serialized \" + count + \" nodes in \" + durationms + \" ms (\" + pernodeus + \"us/node), depth=\" + depth + \" width=\" + width + \" datalen=\" + len)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int count@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int width@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "BinaryOutputArchive oa = BinaryOutputArchive.getArchive(new NullOutputStream())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long pernodeus = ((end - start) / 1000L) / count@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "long start = System.nanoTime()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DataTree dserTree = new DataTree()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "DataTree tree = new DataTree()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createNodes(tree,\"/\",depth,width,tree.getNode(\"/\").stat.getCversion(),new byte(((()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "dserTree.deserialize(ia,\"test\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int len@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "{DataTree tree = new DataTree()SerializationPerfTest.createNodes(tree,\"/\",depth,width,tree.getNode(\"/\").stat.getCversion(),new byte(((()count = tree.getNodeCount()ByteArrayOutputStream baos = new ByteArrayOutputStream()BinaryOutputArchive oa = BinaryOutputArchive.getArchive(baos)tree.serialize(oa,\"test\")baos.flush()ByteArrayInputStream bais = new ByteArrayInputStream(baos.toByteArray())ia = BinaryInputArchive.getArchive(bais)}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tree.serialize(oa,\"test\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "int len@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "System.gc()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "deserializeTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "int depth@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "long durationms = (end - start) / 1000000L@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "LOG.info(\"Deserialized \" + count + \" nodes in \" + durationms + \" ms (\" + pernodeus + \"us/node), depth=\" + depth + \" width=\" + width + \" datalen=\" + len)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long end = System.nanoTime()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.gc()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "long start = System.nanoTime()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "deserializeTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "long durationms = (end - start) / 1000000L@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(count,dserTree.getNodeCount())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "long pernodeus = ((end - start) / 1000L) / count@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(count,dserTree.getNodeCount())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "int len@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13->14 [style = solid, label="start"];
14->3 [style = bold, label=""];
28->29 [style = bold, label=""];
12->9 [style = solid, label="count"];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
0->12 [style = solid, label="width"];
11->12 [style = solid, label="width"];
4->14 [style = bold, label=""];
31->25 [style = dotted, label="true"];
14->9 [style = solid, label="durationms"];
2->19 [style = dashed, label="0"];
5->9 [style = solid, label="len"];
16->8 [style = bold, label=""];
3->9 [style = solid, label="pernodeus"];
0->9 [style = solid, label="width"];
20->34 [style = bold, label=""];
16->17 [style = dotted, label="true"];
12->3 [style = solid, label="count"];
34->33 [style = bold, label=""];
12->15 [style = bold, label=""];
12->1 [style = solid, label="ia"];
1->24 [style = dashed, label="0"];
4->3 [style = solid, label="end"];
21->26 [style = solid, label="end"];
15->6 [style = bold, label=""];
3->22 [style = dashed, label="0"];
2->9 [style = bold, label=""];
11->9 [style = solid, label="width"];
7->0 [style = dotted, label="true"];
11->12 [style = solid, label="depth"];
7->8 [style = bold, label=""];
27->30 [style = solid, label="width"];
25->30 [style = solid, label="len"];
22->30 [style = bold, label=""];
13->1 [style = bold, label=""];
26->22 [style = bold, label=""];
26->30 [style = solid, label="durationms"];
18->9 [style = solid, label="len"];
14->26 [style = dashed, label="0"];
7->5 [style = dotted, label="true"];
23->29 [style = solid, label="depth"];
28->29 [style = solid, label="tree"];
21->26 [style = bold, label=""];
22->30 [style = solid, label="pernodeus"];
7->11 [style = dotted, label="true"];
11->9 [style = solid, label="depth"];
17->9 [style = solid, label="depth"];
17->12 [style = solid, label="depth"];
27->29 [style = solid, label="width"];
13->3 [style = solid, label="start"];
3->2 [style = bold, label=""];
32->22 [style = solid, label="count"];
10->12 [style = bold, label=""];
4->14 [style = solid, label="end"];
3->19 [style = bold, label=""];
6->13 [style = bold, label=""];
19->9 [style = bold, label=""];
33->26 [style = solid, label="start"];
20->24 [style = solid, label="oa"];
23->30 [style = solid, label="depth"];
29->32 [style = bold, label=""];
33->24 [style = bold, label=""];
31->23 [style = dotted, label="true"];
31->27 [style = dotted, label="true"];
12->2 [style = solid, label="count"];
31->28 [style = bold, label=""];
11->27 [style = dashed, label="0"];
21->22 [style = solid, label="end"];
33->22 [style = solid, label="start"];
16->11 [style = dotted, label="true"];
24->21 [style = bold, label=""];
32->20 [style = bold, label=""];
32->30 [style = solid, label="count"];
12->19 [style = solid, label="count"];
16->18 [style = dotted, label="true"];
}
