digraph {
22 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+null\")@@@69@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey,expectedKey * 5L))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\",73L))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
104 [style = filled, label = "processor.checkAndClearProcessResult(\"0:B0+a0 (ts: 0)\",\"1:B1+a1 (ts: 0)\",\"2:B2+null (ts: 0)\",\"3:B3+null (ts: 0)\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+null\",7L)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
118 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+null (ts: 0)\",\"1:A1+null (ts: 0)\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(1(,null,7L))@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+null\",6L)@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
115 [style = filled, label = "i++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+Y0\",7L)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(1(,null,42L))@@@71@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+null\",7L)@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
113 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+Y0\",5L)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
122 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "i < 2@@@58@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
87 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+null\",6L)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
59 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXXX\" + expectedKey,13L))@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+null\")@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
114 [style = filled, label = "joined.process(supplier)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+YY2\",10L)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
116 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"X1+Y1\",10L)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey,7L))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertNull(driver.readOutput(output))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertNull(driver.readOutput(output))@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
98 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXX3+YY3\",15L)@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
95 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XX0+YY0\",7L)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@be73b2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,null,20L)@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "i++@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(2(,null,5L))@@@72@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
106 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"C\" + expectedKey))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXX1+YY1\",6L)@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "i++@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "i < 2@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i(,5L + i))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final KTable<Integer,String> table1 = builder.table(topic1,consumed)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int i = 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
121 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@71@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXXX2+YY2\",13L)@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
109 [style = filled, label = "int i = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@60@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+c0 (ts: 0)\",\"0:B0+c0 (ts: 0)\",\"0:C0+c0 (ts: 0)\",\"1:A1+c1 (ts: 0)\",\"1:B1+c1 (ts: 0)\",\"1:C1+c1 (ts: 0)\")@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"B\" + expectedKey))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXXX0+null\",13L)@@@65@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XX2+null\",7L)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(0(,null,0L))@@@70@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+null\")@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
78 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "joined.toStream().to(output)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"a\" + expectedKeys(i())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+Y1\",10L)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertNull(driver.readOutput(output))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertNull(driver.readOutput(output))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@70@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "i < 2@@@21@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "int i = 0@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
105 [style = filled, label = "int i = 0@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+b0 (ts: 0)\",\"0:B0+b0 (ts: 0)\",\"1:A1+b1 (ts: 0)\",\"1:B1+b1 (ts: 0)\",\"2:B2+b2 (ts: 0)\",\"3:B3+b3 (ts: 0)\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,\"XXX2+YY2\",10L)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
102 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"b\" + expectedKey))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "processor.checkAndClearProcessResult(\"0:A0+a0 (ts: 0)\",\"1:A1+a1 (ts: 0)\")@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(3(,null,20L))@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"X0+null\",5L)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertNull(driver.readOutput(output))@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\",42L))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
91 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i(,10L * i))@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "i < 2@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "i < 2@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+null\")@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+null\")@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
111 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"c\" + expectedKeys(i())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XXXX3+YY3\",15L)@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertOutputKeyValueTimestamp(driver,3,\"XX3+YY3\",15L)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "i++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertNull(driver.readOutput(output))@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "assertOutputKeyValueTimestamp(driver,2,null,10L)@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XXX\" + expectedKey,6L))@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+null\")@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,null,42L)@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XX1+YY1\",7L)@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "assertOutputKeyValueTimestamp(driver,1,\"XXXX1+null\",13L)@@@66@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertNull(driver.readOutput(output))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "final KTable<Integer,String> table2 = builder.table(topic2,consumed)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(0(,null,5L))@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "assertNull(driver.readOutput(output))@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
75 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,\"XXX0+YY0\",6L)@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "assertOutputKeyValueTimestamp(driver,0,null,0L)@@@74@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
107 [style = filled, label = "processor.checkAndClearProcessResult(\"0:C0+a0 (ts: 0)\",\"0:C0+b0 (ts: 0)\",\"1:C1+a1 (ts: 0)\",\"1:C1+b1 (ts: 0)\",\"2:C2+b2 (ts: 0)\",\"3:C3+b3 (ts: 0)\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"A\" + expectedKeys(i())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36->6 [style = dotted, label="true"];
57->96 [style = bold, label=""];
68->95 [style = bold, label=""];
112->117 [style = bold, label=""];
25->80 [style = dashed, label="0"];
49->16 [style = bold, label=""];
46->34 [style = bold, label=""];
49->108 [style = bold, label=""];
49->101 [style = solid, label="expectedKeys"];
125->114 [style = solid, label="supplier"];
124->43 [style = bold, label=""];
74->82 [style = bold, label=""];
94->61 [style = bold, label=""];
81->83 [style = bold, label=""];
30->20 [style = bold, label=""];
22->37 [style = bold, label=""];
113->123 [style = solid, label="stream2"];
90->86 [style = bold, label=""];
17->101 [style = dashed, label="0"];
36->53 [style = bold, label=""];
65->98 [style = bold, label=""];
70->97 [style = bold, label=""];
53->119 [style = dotted, label="true"];
20->98 [style = dashed, label="0"];
5->45 [style = bold, label=""];
105->103 [style = bold, label=""];
53->11 [style = bold, label=""];
47->21 [style = solid, label="table2"];
7->36 [style = solid, label="i"];
115->124 [style = solid, label="i"];
38->15 [style = bold, label=""];
64->73 [style = bold, label=""];
59->66 [style = bold, label=""];
1->59 [style = dashed, label="0"];
118->109 [style = bold, label=""];
5->69 [style = dashed, label="0"];
31->50 [style = bold, label=""];
48->12 [style = bold, label=""];
109->124 [style = bold, label=""];
15->17 [style = bold, label=""];
71->67 [style = bold, label=""];
83->63 [style = bold, label=""];
38->17 [style = solid, label="i"];
49->85 [style = solid, label="expectedKeys"];
107->105 [style = bold, label=""];
104->102 [style = bold, label=""];
110->3 [style = bold, label=""];
88->80 [style = bold, label=""];
45->0 [style = bold, label=""];
12->18 [style = bold, label=""];
38->15 [style = solid, label="i"];
103->29 [style = dotted, label="true"];
42->3 [style = bold, label=""];
105->111 [style = solid, label="i"];
4->8 [style = bold, label=""];
7->6 [style = solid, label="i"];
41->22 [style = bold, label=""];
46->102 [style = dashed, label="0"];
80->39 [style = bold, label=""];
54->5 [style = bold, label=""];
47->121 [style = dashed, label="0"];
43->44 [style = bold, label=""];
11->119 [style = solid, label="i"];
100->125 [style = bold, label=""];
0->97 [style = dashed, label="0"];
52->35 [style = bold, label=""];
6->36 [style = solid, label="i"];
36->6 [style = bold, label=""];
5->54 [style = dashed, label="0"];
53->118 [style = bold, label=""];
6->26 [style = solid, label="i"];
1->41 [style = bold, label=""];
6->106 [style = bold, label=""];
85->77 [style = bold, label=""];
29->89 [style = dashed, label="0"];
29->103 [style = solid, label="i"];
63->54 [style = bold, label=""];
26->119 [style = dashed, label="0"];
105->29 [style = solid, label="i"];
15->81 [style = bold, label=""];
115->101 [style = solid, label="i"];
20->31 [style = bold, label=""];
49->84 [style = solid, label="expectedKeys"];
23->81 [style = dashed, label="0"];
49->57 [style = solid, label="expectedKeys"];
26->6 [style = bold, label=""];
116->11 [style = solid, label="i"];
31->85 [style = bold, label=""];
36->84 [style = bold, label=""];
53->74 [style = dashed, label="0"];
8->38 [style = bold, label=""];
11->82 [style = dashed, label="0"];
16->108 [style = dashed, label="0"];
15->13 [style = dotted, label="true"];
101->115 [style = bold, label=""];
56->10 [style = bold, label=""];
97->88 [style = bold, label=""];
49->76 [style = solid, label="expectedKeys"];
15->17 [style = dotted, label="true"];
29->111 [style = solid, label="i"];
51->14 [style = bold, label=""];
51->60 [style = bold, label=""];
19->57 [style = bold, label=""];
18->1 [style = bold, label=""];
79->59 [style = bold, label=""];
36->84 [style = dotted, label="true"];
13->15 [style = solid, label="i"];
52->48 [style = bold, label=""];
78->3 [style = bold, label=""];
125->122 [style = bold, label=""];
49->119 [style = solid, label="expectedKeys"];
99->62 [style = bold, label=""];
109->101 [style = solid, label="i"];
108->121 [style = bold, label=""];
6->84 [style = solid, label="i"];
13->15 [style = bold, label=""];
96->58 [style = bold, label=""];
113->123 [style = bold, label=""];
32->75 [style = dashed, label="0"];
122->113 [style = bold, label=""];
124->101 [style = dotted, label="true"];
91->13 [style = bold, label=""];
109->115 [style = solid, label="i"];
13->91 [style = solid, label="i"];
87->8 [style = bold, label=""];
116->53 [style = solid, label="i"];
44->54 [style = bold, label=""];
34->29 [style = bold, label=""];
24->51 [style = bold, label=""];
15->91 [style = dotted, label="true"];
9->88 [style = dashed, label="0"];
95->89 [style = bold, label=""];
39->46 [style = bold, label=""];
25->39 [style = bold, label=""];
40->92 [style = dashed, label="0"];
77->94 [style = bold, label=""];
73->51 [style = bold, label=""];
50->27 [style = solid, label="i"];
11->4 [style = bold, label=""];
23->43 [style = bold, label=""];
49->35 [style = solid, label="expectedKeys"];
49->77 [style = solid, label="expectedKeys"];
43->83 [style = dashed, label="0"];
15->91 [style = bold, label=""];
109->124 [style = solid, label="i"];
27->52 [style = bold, label=""];
53->119 [style = bold, label=""];
21->55 [style = bold, label=""];
103->111 [style = bold, label=""];
89->64 [style = bold, label=""];
27->35 [style = solid, label="i"];
14->60 [style = dashed, label="0"];
38->13 [style = solid, label="i"];
49->17 [style = solid, label="expectedKeys"];
34->95 [style = dashed, label="0"];
38->91 [style = solid, label="i"];
37->62 [style = dashed, label="0"];
33->24 [style = bold, label=""];
32->40 [style = bold, label=""];
103->111 [style = dotted, label="true"];
121->100 [style = bold, label=""];
40->30 [style = bold, label=""];
37->2 [style = bold, label=""];
17->13 [style = bold, label=""];
115->124 [style = bold, label=""];
27->52 [style = solid, label="i"];
47->21 [style = bold, label=""];
39->68 [style = bold, label=""];
58->90 [style = bold, label=""];
49->91 [style = solid, label="expectedKeys"];
98->31 [style = bold, label=""];
33->64 [style = dashed, label="0"];
14->32 [style = bold, label=""];
30->65 [style = dashed, label="0"];
43->54 [style = bold, label=""];
124->115 [style = dotted, label="true"];
7->36 [style = bold, label=""];
114->7 [style = bold, label=""];
105->103 [style = solid, label="i"];
36->26 [style = dotted, label="true"];
67->76 [style = bold, label=""];
14->117 [style = dashed, label="0"];
117->107 [style = bold, label=""];
49->111 [style = solid, label="expectedKeys"];
15->23 [style = bold, label=""];
72->19 [style = bold, label=""];
0->9 [style = bold, label=""];
35->27 [style = bold, label=""];
2->19 [style = bold, label=""];
82->87 [style = bold, label=""];
10->28 [style = bold, label=""];
13->17 [style = solid, label="i"];
50->52 [style = solid, label="i"];
102->112 [style = bold, label=""];
50->35 [style = solid, label="i"];
16->47 [style = bold, label=""];
45->70 [style = dashed, label="0"];
61->79 [style = bold, label=""];
11->53 [style = solid, label="i"];
28->7 [style = bold, label=""];
54->69 [style = bold, label=""];
2->71 [style = dashed, label="0"];
124->101 [style = bold, label=""];
44->63 [style = dashed, label="0"];
36->26 [style = bold, label=""];
66->99 [style = bold, label=""];
6->36 [style = bold, label=""];
50->52 [style = bold, label=""];
46->68 [style = dashed, label="0"];
55->56 [style = bold, label=""];
103->120 [style = bold, label=""];
52->27 [style = dotted, label="true"];
22->99 [style = dashed, label="0"];
49->26 [style = solid, label="expectedKeys"];
11->53 [style = bold, label=""];
119->11 [style = bold, label=""];
49->72 [style = solid, label="expectedKeys"];
4->87 [style = dashed, label="0"];
86->93 [style = bold, label=""];
106->116 [style = bold, label=""];
76->72 [style = bold, label=""];
29->103 [style = bold, label=""];
29->33 [style = bold, label=""];
49->19 [style = solid, label="expectedKeys"];
62->71 [style = bold, label=""];
111->29 [style = bold, label=""];
36->74 [style = bold, label=""];
53->11 [style = dotted, label="true"];
35->111 [style = dashed, label="0"];
116->53 [style = bold, label=""];
9->25 [style = bold, label=""];
26->84 [style = dashed, label="0"];
84->6 [style = bold, label=""];
92->65 [style = bold, label=""];
52->35 [style = dotted, label="true"];
21->100 [style = dashed, label="0"];
41->66 [style = dashed, label="0"];
116->119 [style = solid, label="i"];
3->49 [style = bold, label=""];
69->70 [style = bold, label=""];
60->75 [style = bold, label=""];
24->73 [style = dashed, label="0"];
75->92 [style = bold, label=""];
7->26 [style = solid, label="i"];
123->114 [style = bold, label=""];
7->84 [style = solid, label="i"];
54->104 [style = bold, label=""];
17->91 [style = dashed, label="0"];
}
