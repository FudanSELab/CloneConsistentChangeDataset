digraph {
29 [style = filled, label = "generateComparator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "return Pair.of(selector,Expressions.new_(,Collections.emptyList(),memberDeclarations))@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "generateCollationKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "final Expression selector@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "collations.size() == 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "RelCollation collation@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(method.getDeclaringClass(),method.getName(),arg0,arg1))))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "arg0 = Types.castIfNecessary(,arg0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "generateComparator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final Method method = (fieldNullable(index)? (nullsFirst ^ descending? BuiltInMethod.COMPARE_NULLS_FIRST: BuiltInMethod.COMPARE_NULLS_LAST): BuiltInMethod.COMPARE).method@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "return Expressions.new_(,ImmutableList.of(),memberDeclarations)@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38->51 [style = solid, label="parameter"];
23->9 [style = bold, label=""];
3->24 [style = bold, label=""];
18->3 [style = dotted, label="true"];
15->1 [style = bold, label=""];
38->9 [style = solid, label="parameter"];
11->16 [style = solid, label="arg0"];
5->11 [style = solid, label="descending"];
9->11 [style = solid, label="parameterV0"];
19->8 [style = bold, label=""];
38->35 [style = solid, label="parameter"];
51->35 [style = solid, label="parameterO0"];
26->30 [style = solid, label="parameterV1"];
55->35 [style = bold, label=""];
1->23 [style = bold, label=""];
25->4 [style = solid, label="arg1"];
18->28 [style = bold, label=""];
24->21 [style = solid, label="parameterO1"];
25->1 [style = bold, label=""];
33->31 [style = dotted, label="true"];
53->43 [style = bold, label=""];
13->26 [style = solid, label="javaRowClass"];
19->25 [style = solid, label="parameterC"];
25->16 [style = bold, label=""];
46->38 [style = bold, label=""];
17->13 [style = bold, label=""];
26->9 [style = solid, label="parameterV1"];
4->40 [style = solid, label="arg1"];
29->17 [style = bold, label=""];
34->55 [style = bold, label=""];
18->24 [style = dotted, label="true"];
6->5 [style = bold, label=""];
20->4 [style = solid, label="parameterV0"];
16->40 [style = solid, label="arg0"];
34->36 [style = solid, label="parameterO1"];
9->39 [style = solid, label="parameterV0"];
49->33 [style = bold, label=""];
30->28 [style = solid, label="memberDeclarations"];
13->20 [style = bold, label=""];
45->55 [style = dotted, label="true"];
26->4 [style = solid, label="parameterV1"];
8->15 [style = solid, label="mod"];
41->1 [style = bold, label=""];
38->2 [style = solid, label="parameter"];
39->37 [style = solid, label="memberDeclarations"];
1->23 [style = solid, label="index"];
1->9 [style = bold, label=""];
2->44 [style = solid, label="parameterC"];
16->4 [style = bold, label=""];
50->11 [style = bold, label=""];
33->38 [style = dotted, label="true"];
42->47 [style = dotted, label="true"];
33->46 [style = bold, label=""];
2->40 [style = solid, label="parameterC"];
13->20 [style = solid, label="javaRowClass"];
33->54 [style = dotted, label="true"];
43->35 [style = solid, label="method"];
41->37 [style = solid, label="selector"];
42->49 [style = bold, label=""];
24->0 [style = bold, label=""];
52->16 [style = bold, label=""];
26->19 [style = bold, label=""];
53->21 [style = solid, label="descending"];
18->21 [style = dotted, label="true"];
0->12 [style = bold, label=""];
31->41 [style = bold, label=""];
27->17 [style = bold, label=""];
5->53 [style = dashed, label="0"];
29->14 [style = dotted, label="true"];
44->50 [style = bold, label=""];
7->39 [style = bold, label=""];
2->32 [style = bold, label=""];
35->36 [style = bold, label=""];
19->15 [style = solid, label="parameterC"];
9->22 [style = solid, label="arg1"];
48->53 [style = bold, label=""];
22->11 [style = solid, label="arg1"];
9->10 [style = bold, label=""];
19->11 [style = solid, label="parameterC"];
11->25 [style = bold, label=""];
1->10 [style = solid, label="index"];
45->36 [style = dotted, label="true"];
1->11 [style = solid, label="index"];
20->30 [style = solid, label="parameterV0"];
7->28 [style = dashed, label="0"];
22->6 [style = bold, label=""];
30->18 [style = bold, label=""];
21->50 [style = bold, label=""];
50->43 [style = solid, label="index"];
4->39 [style = dashed, label="0"];
3->21 [style = solid, label="parameterO0"];
51->34 [style = bold, label=""];
52->4 [style = dotted, label="true"];
50->52 [style = solid, label="index"];
33->41 [style = bold, label=""];
39->45 [style = bold, label=""];
5->25 [style = solid, label="descending"];
23->2 [style = solid, label="arg0"];
50->11 [style = solid, label="index"];
4->48 [style = bold, label=""];
25->52 [style = bold, label=""];
8->32 [style = dashed, label="0"];
18->0 [style = dotted, label="true"];
43->40 [style = bold, label=""];
45->51 [style = dotted, label="true"];
38->10 [style = solid, label="parameter"];
21->7 [style = bold, label=""];
45->35 [style = dotted, label="true"];
7->37 [style = dashed, label="0"];
24->12 [style = solid, label="parameterO1"];
16->30 [style = bold, label=""];
33->46 [style = dotted, label="true"];
50->25 [style = solid, label="index"];
4->18 [style = bold, label=""];
54->31 [style = bold, label=""];
18->7 [style = bold, label=""];
18->3 [style = bold, label=""];
10->2 [style = dotted, label="true"];
32->44 [style = solid, label="mod"];
6->48 [style = dashed, label="0"];
36->37 [style = bold, label=""];
10->2 [style = bold, label=""];
27->14 [style = dotted, label="true"];
53->43 [style = solid, label="descending"];
54->31 [style = solid, label="selector"];
13->12 [style = solid, label="javaRowClass"];
2->11 [style = solid, label="arg0"];
43->36 [style = solid, label="method"];
38->54 [style = solid, label="parameter"];
4->7 [style = solid, label="memberDeclarations"];
12->21 [style = bold, label=""];
1->9 [style = solid, label="index"];
45->34 [style = dotted, label="true"];
3->12 [style = solid, label="parameterO0"];
38->54 [style = bold, label=""];
10->22 [style = dotted, label="true"];
18->12 [style = dotted, label="true"];
40->21 [style = bold, label=""];
4->30 [style = dashed, label="0"];
34->35 [style = solid, label="parameterO1"];
2->21 [style = solid, label="parameterC"];
5->11 [style = bold, label=""];
45->51 [style = bold, label=""];
2->22 [style = bold, label=""];
1->50 [style = dashed, label="0"];
8->15 [style = bold, label=""];
52->16 [style = dotted, label="true"];
10->39 [style = solid, label="parameterV1"];
32->44 [style = bold, label=""];
51->36 [style = solid, label="parameterO0"];
45->37 [style = bold, label=""];
20->23 [style = solid, label="parameterV0"];
38->34 [style = solid, label="parameter"];
20->26 [style = bold, label=""];
10->25 [style = solid, label="parameterV1"];
21->28 [style = bold, label=""];
}
