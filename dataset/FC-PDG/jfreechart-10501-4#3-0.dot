digraph {
9 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertTrue(b1 != b2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CloneNotSupportedException e@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EmptyBlock b2 = null@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "b1.setBounds(bounds1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fail(e.toString())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EmptyBlock b1 = new EmptyBlock(1.0,2.0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(b1.equals(b2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "b2 = CloneUtils.clone(b1)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "b2.setBounds(new Rectangle2D.Double(2.0,4.0,6.0,8.0))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Rectangle2D bounds1 = new Rectangle2D.Double(1.0,2.0,3.0,4.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(b1.equals(b2))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "b2 = (EmptyBlock)b1.clone()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "bounds1.setFrame(2.0,4.0,6.0,8.0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(b1.equals(b2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->8 [style = dotted, label="true"];
14->17 [style = bold, label=""];
5->8 [style = bold, label=""];
14->17 [style = solid, label="bounds1"];
7->10 [style = bold, label=""];
2->7 [style = bold, label=""];
12->2 [style = bold, label=""];
4->10 [style = dashed, label="0"];
9->2 [style = bold, label=""];
10->1 [style = solid, label="b2"];
1->6 [style = bold, label=""];
4->1 [style = bold, label=""];
10->3 [style = solid, label="b2"];
8->1 [style = bold, label=""];
2->10 [style = solid, label="b1"];
10->1 [style = bold, label=""];
4->1 [style = solid, label="b2"];
4->3 [style = solid, label="b2"];
15->11 [style = bold, label=""];
7->4 [style = bold, label=""];
13->16 [style = bold, label=""];
6->3 [style = bold, label=""];
11->13 [style = bold, label=""];
4->11 [style = solid, label="b2"];
3->15 [style = bold, label=""];
4->16 [style = solid, label="b2"];
2->14 [style = bold, label=""];
0->2 [style = bold, label=""];
17->7 [style = bold, label=""];
2->1 [style = solid, label="b1"];
}
