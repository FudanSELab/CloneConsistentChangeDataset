digraph {
12 [style = filled, label = "TaskInformation taskInformation = new TaskInformation(new JobVertexID(),\"Test Task\",1,1,invokableClass.getName(),new Configuration())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ResultPartitionManager partitionManager = mock()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Executor executor = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Class<? extends AbstractInvokable> invokableClass@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "NetworkEnvironment networkEnvironment = new NetworkEnvironmentBuilder().build()@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ResultPartitionConsumableNotifier consumableNotifier = new NoOpResultPartitionConsumableNotifier()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new Task(jobInformation,taskInformation,new ExecutionAttemptID(),new AllocationID(),0,0,Collections.emptyList(),Collections.emptyList(),0,mock(),mock(),networkEnvironment,new KvStateService(new KvStateRegistry(),null,null),mock(),new TaskEventDispatcher(),new TestTaskStateManager(),mock(),mock(),mock(),new TestGlobalAggregateManager(),blobService,libCache,mock(),new TestingTaskManagerRuntimeInfo(),taskMetricGroup,consumableNotifier,partitionProducerStateChecker,executor)@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LibraryCacheManager libCache = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TaskMetricGroup taskMetricGroup = UnregisteredMetricGroups.createUnregisteredTaskMetricGroup()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "TaskMetricGroup taskMetricGroup = UnregisteredMetricGroups.createUnregisteredTaskMetricGroup()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "NetworkEnvironment networkEnvironment = mock()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "when(libCache.getClassLoader(any())).thenReturn(new TestUserCodeClassLoader())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "createTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JobInformation jobInformation = new JobInformation(new JobID(),\"Job Name\",new SerializedValue<>(new ExecutionConfig()),new Configuration(),Collections.emptyList(),Collections.emptyList())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "createTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "PartitionProducerStateChecker partitionProducerStateChecker = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BlobCacheService blobService = new BlobCacheService(mock(),mock())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(libCache.getClassLoader(any())).thenReturn(ClassLoader.getSystemClassLoader())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(networkEnvironment.getResultPartitionManager()).thenReturn(partitionManager)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->12 [style = solid, label="executor"];
13->6 [style = solid, label="libCache"];
0->19 [style = dashed, label="0"];
14->17 [style = bold, label=""];
8->14 [style = bold, label=""];
7->8 [style = bold, label=""];
7->12 [style = solid, label="consumableNotifier"];
15->12 [style = solid, label="taskMetricGroup"];
15->9 [style = bold, label=""];
18->2 [style = bold, label=""];
13->19 [style = bold, label=""];
19->5 [style = bold, label=""];
13->12 [style = solid, label="libCache"];
2->6 [style = solid, label="blobService"];
13->0 [style = bold, label=""];
9->6 [style = solid, label="taskMetricGroup"];
0->7 [style = bold, label=""];
2->13 [style = bold, label=""];
1->12 [style = bold, label=""];
10->17 [style = dashed, label="0"];
4->11 [style = dotted, label="true"];
8->6 [style = solid, label="partitionProducerStateChecker"];
2->12 [style = solid, label="blobService"];
9->12 [style = solid, label="jobInformation"];
14->6 [style = solid, label="executor"];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
18->11 [style = dotted, label="true"];
16->2 [style = bold, label=""];
5->3 [style = solid, label="partitionManager"];
7->6 [style = solid, label="consumableNotifier"];
17->15 [style = bold, label=""];
3->9 [style = bold, label=""];
12->6 [style = solid, label="taskInformation"];
1->12 [style = solid, label="taskInformation"];
16->11 [style = dotted, label="true"];
17->12 [style = solid, label="networkEnvironment"];
1->6 [style = solid, label="jobInformation"];
10->6 [style = solid, label="networkEnvironment"];
0->5 [style = bold, label=""];
14->10 [style = bold, label=""];
9->1 [style = bold, label=""];
5->7 [style = bold, label=""];
12->6 [style = bold, label=""];
8->12 [style = solid, label="partitionProducerStateChecker"];
}
