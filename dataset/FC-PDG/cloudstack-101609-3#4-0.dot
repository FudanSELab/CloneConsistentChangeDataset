digraph {
5 [style = filled, label = "int requiredCpu@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "int requiredCpu@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "long vmId@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<Long> clusterIdsOrderedByAggregateCapacity = result.first()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<Long> clusterIdswithEnoughCapacity = capacityDao.listClustersInZoneOrPodByHostCapacities(id,vmId,requiredCpu,requiredRam,capacityType,isZone)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "long requiredRam@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "long requiredRam@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<Long> podIdsOrderedByAggregateCapacity = result.first()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "s_logger.trace(\"ClusterId List having enough CPU and RAM capacity & in order of aggregate capacity: \" + clusterIdsOrderedByAggregateCapacity)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "listClustersByCapacity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "listClustersByCapacity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "short capacityType = Capacity.CAPACITY_TYPE_CPU@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "clusterIdsOrderedByAggregateCapacity.retainAll(clusterIdswithEnoughCapacity)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "boolean isZone@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "long id@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "ExcludeList avoid@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "s_logger.isTraceEnabled()@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "capacityType = Capacity.CAPACITY_TYPE_MEMORY@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "s_logger.trace(\"PodId List having enough CPU and RAM capacity & in order of aggregate capacity: \" + podIdsOrderedByAggregateCapacity)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "s_logger.isTraceEnabled()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "long zoneId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String capacityTypeToOrder = configDao.getValue(Config.HostCapacityTypeToOrderClusters.key())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "s_logger.debug(\"Listing pods in order of aggregate capacity, that have (atleast one host with) enough CPU and RAM capacity under this Zone: \" + zoneId)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "long requiredRam@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "long id@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "List<Long> podIdswithEnoughCapacity = capacityDao.listPodsByHostCapacities(zoneId,requiredCpu,requiredRam,capacityType)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int requiredCpu@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "s_logger.trace(\"PodId List having enough CPU and RAM capacity: \" + podIdswithEnoughCapacity)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Long> clusterIdswithEnoughCapacity = capacityDao.listClustersInZoneOrPodByHostCapacities(id,requiredCpu,requiredRam,capacityType,isZone)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "podIdsOrderedByAggregateCapacity.retainAll(podIdswithEnoughCapacity)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "s_logger.trace(\"ClusterId List having enough CPU and RAM capacity: \" + clusterIdswithEnoughCapacity)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "s_logger.isTraceEnabled()@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "s_logger.isDebugEnabled()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean isZone@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "s_logger.trace(\"PodId List in order of aggregate capacity: \" + podIdsOrderedByAggregateCapacity)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Pair<List<Long>,Map<Long,Double>> result = capacityDao.orderClustersByAggregateCapacity(id,capacityType,isZone)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Pair<List<Long>,Map<Long,Double>> result = capacityDao.orderPodsByAggregateCapacity(zoneId,capacityType)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "\"RAM\".equalsIgnoreCase(capacityTypeToOrder)@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Pair<List<Long>,Map<Long,Double>> result = capacityDao.orderClustersByAggregateCapacity(id,vmId,capacityType,isZone)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "s_logger.trace(\"ClusterId List in order of aggregate capacity: \" + clusterIdsOrderedByAggregateCapacity)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "s_logger.debug(\"Listing clusters in order of aggregate capacity, that have (at least one host with) enough CPU and RAM capacity under this \" + (isZone? \"Zone: \": \"Pod: \") + id)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "listPodsByCapacity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ExcludeList avoid@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return result@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
39->16 [style = solid, label="result"];
3->24 [style = bold, label=""];
11->40 [style = dashed, label="0"];
6->19 [style = solid, label="isZone"];
10->24 [style = bold, label=""];
10->19 [style = bold, label=""];
10->3 [style = dotted, label="true"];
25->24 [style = solid, label="isZone"];
25->21 [style = solid, label="isZone"];
15->9 [style = dotted, label="true"];
9->1 [style = solid, label="capacityType"];
22->42 [style = dashed, label="0"];
13->39 [style = solid, label="capacityType"];
27->24 [style = solid, label="vmId"];
0->21 [style = dotted, label="true"];
12->20 [style = dotted, label="true"];
3->19 [style = bold, label=""];
10->39 [style = bold, label=""];
38->7 [style = bold, label=""];
36->32 [style = solid, label="zoneId"];
8->22 [style = dotted, label="true"];
39->38 [style = bold, label=""];
43->0 [style = bold, label=""];
28->2 [style = solid, label="clusterIdswithEnoughCapacity"];
17->15 [style = solid, label="capacityTypeToOrder"];
1->2 [style = solid, label="clusterIdswithEnoughCapacity"];
28->3 [style = solid, label="clusterIdswithEnoughCapacity"];
7->11 [style = bold, label=""];
9->19 [style = solid, label="capacityType"];
0->17 [style = bold, label=""];
7->40 [style = dotted, label="true"];
9->32 [style = bold, label=""];
12->18 [style = dotted, label="true"];
0->21 [style = bold, label=""];
32->10 [style = bold, label=""];
26->28 [style = solid, label="id"];
8->22 [style = bold, label=""];
7->33 [style = bold, label=""];
30->29 [style = dotted, label="true"];
25->28 [style = solid, label="isZone"];
13->19 [style = solid, label="capacityType"];
38->40 [style = solid, label="podIdsOrderedByAggregateCapacity"];
12->6 [style = dotted, label="true"];
20->41 [style = dashed, label="0"];
15->9 [style = bold, label=""];
7->2 [style = bold, label=""];
30->23 [style = dotted, label="true"];
35->17 [style = bold, label=""];
6->21 [style = solid, label="isZone"];
2->33 [style = dashed, label="0"];
13->15 [style = bold, label=""];
4->11 [style = solid, label="clusterIdsOrderedByAggregateCapacity"];
27->28 [style = solid, label="vmId"];
9->1 [style = bold, label=""];
33->8 [style = bold, label=""];
26->24 [style = solid, label="id"];
23->28 [style = solid, label="requiredCpu"];
41->32 [style = solid, label="requiredRam"];
5->1 [style = solid, label="requiredCpu"];
4->38 [style = dashed, label="0"];
22->16 [style = bold, label=""];
3->37 [style = dashed, label="0"];
20->31 [style = dashed, label="0"];
8->42 [style = dotted, label="true"];
42->16 [style = bold, label=""];
32->37 [style = solid, label="podIdswithEnoughCapacity"];
9->32 [style = solid, label="capacityType"];
1->28 [style = dashed, label="0"];
1->32 [style = dashed, label="0"];
4->7 [style = bold, label=""];
38->42 [style = solid, label="podIdsOrderedByAggregateCapacity"];
9->28 [style = bold, label=""];
1->3 [style = solid, label="clusterIdswithEnoughCapacity"];
40->33 [style = bold, label=""];
7->11 [style = dotted, label="true"];
30->25 [style = dotted, label="true"];
19->39 [style = dashed, label="0"];
13->32 [style = solid, label="capacityType"];
15->28 [style = bold, label=""];
13->28 [style = solid, label="capacityType"];
4->22 [style = solid, label="clusterIdsOrderedByAggregateCapacity"];
17->13 [style = bold, label=""];
30->0 [style = bold, label=""];
6->1 [style = solid, label="isZone"];
19->24 [style = dashed, label="0"];
21->35 [style = dashed, label="0"];
43->36 [style = dotted, label="true"];
10->37 [style = dotted, label="true"];
37->39 [style = bold, label=""];
7->40 [style = bold, label=""];
30->31 [style = dotted, label="true"];
19->16 [style = solid, label="result"];
10->37 [style = bold, label=""];
15->1 [style = bold, label=""];
24->16 [style = solid, label="result"];
20->21 [style = solid, label="id"];
13->24 [style = solid, label="capacityType"];
28->10 [style = bold, label=""];
30->27 [style = dotted, label="true"];
36->35 [style = solid, label="zoneId"];
29->28 [style = solid, label="requiredRam"];
0->35 [style = dotted, label="true"];
20->1 [style = solid, label="id"];
10->3 [style = bold, label=""];
9->28 [style = solid, label="capacityType"];
30->26 [style = dotted, label="true"];
12->0 [style = bold, label=""];
43->34 [style = dotted, label="true"];
11->2 [style = bold, label=""];
32->33 [style = solid, label="podIdswithEnoughCapacity"];
12->14 [style = dotted, label="true"];
14->1 [style = solid, label="requiredRam"];
24->4 [style = bold, label=""];
8->42 [style = bold, label=""];
12->5 [style = dotted, label="true"];
13->1 [style = solid, label="capacityType"];
20->19 [style = solid, label="id"];
43->41 [style = dotted, label="true"];
0->35 [style = bold, label=""];
34->32 [style = solid, label="requiredCpu"];
9->39 [style = solid, label="capacityType"];
19->4 [style = bold, label=""];
36->39 [style = solid, label="zoneId"];
15->32 [style = bold, label=""];
9->24 [style = solid, label="capacityType"];
1->10 [style = bold, label=""];
21->17 [style = bold, label=""];
26->21 [style = solid, label="id"];
2->8 [style = bold, label=""];
}
