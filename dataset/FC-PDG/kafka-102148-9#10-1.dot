digraph {
10 [style = filled, label = "shouldEncodeAndDecodeVersion1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(1,decoded.version())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,decoded.version())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldEncodeAndDecodeVersion1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(SubscriptionInfo.UNKNOWN,decoded.latestSupportedVersion())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(UUID_1,decoded.processId())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final SubscriptionInfo info = new SubscriptionInfo(1,LATEST_SUPPORTED_VERSION,UUID_1,IGNORED_USER_ENDPOINT,TASK_OFFSET_SUMS,IGNORED_UNIQUE_FIELD)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "final SubscriptionInfo info = new SubscriptionInfo(2,LATEST_SUPPORTED_VERSION,UUID_1,\"localhost:80\",TASK_OFFSET_SUMS,IGNORED_UNIQUE_FIELD)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldEncodeAndDecodeVersion2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"localhost:80\",decoded.userEndPoint())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final SubscriptionInfo decoded = SubscriptionInfo.decode(info.encode())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final SubscriptionInfo info = new SubscriptionInfo(1,LATEST_SUPPORTED_VERSION,UUID_1,IGNORED_USER_ENDPOINT,TASK_OFFSET_SUMS,IGNORED_UNIQUE_FIELD,IGNORED_ERROR_CODE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(ACTIVE_TASKS,decoded.prevTasks())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(STANDBY_TASKS,decoded.standbyTasks())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(decoded.userEndPoint())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9->5 [style = bold, label=""];
4->9 [style = dashed, label="0"];
11->5 [style = bold, label=""];
10->9 [style = bold, label=""];
6->0 [style = bold, label=""];
8->4 [style = bold, label=""];
4->11 [style = dashed, label="0"];
5->6 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
1->7 [style = bold, label=""];
7->2 [style = bold, label=""];
2->12 [style = bold, label=""];
2->3 [style = bold, label=""];
13->0 [style = bold, label=""];
5->13 [style = bold, label=""];
}
