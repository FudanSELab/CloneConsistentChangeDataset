digraph {
43 [style = filled, label = "{batch.close()}@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(iterator.next())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(checkValue(value1,1,1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(checkValue(value1,1,1))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertTrue(checkKey(key3,33,33))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "UnsafeRow key3 = iterator.getKey()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "org.apache.spark.unsafe.KVIterator<UnsafeRow,UnsafeRow> iterator = batch.rowIterator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(iterator.next())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(checkKey(retrievedKey1,11,11))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(3,batch.numRows())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "UnsafeRow value1 = iterator.getValue()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RowBasedKeyValueBatch batch = RowBasedKeyValueBatch.allocate(keySchema,valueSchema,taskMemoryManager,DEFAULT_CAPACITY)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "iteratorTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(iterator.next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "UnsafeRow key2 = iterator.getKey()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "UnsafeRow key2 = iterator.getKey()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "UnsafeRow retrievedValue1 = batch.getValueRow(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "UnsafeRow key1 = iterator.getKey()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "UnsafeRow value1 = iterator.getValue()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(checkValue(retrievedValue1,2,2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(3,batch.numRows())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "UnsafeRow value3 = iterator.getValue()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(checkValue(value3,3,3))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "iteratorTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "UnsafeRow retrievedKey2 = batch.getKeyRow(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "UnsafeRow value2 = iterator.getValue()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "RowBasedKeyValueBatch batch = RowBasedKeyValueBatch.allocate(fixedKeySchema,valueSchema,taskMemoryManager,DEFAULT_CAPACITY)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "UnsafeRow key1 = iterator.getKey()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "appendRow(batch,makeKeyRow(3,\"C\"),makeValueRow(3,3))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertTrue(checkKey(key2,22,22))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(iterator.next())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(checkValue(retrievedValue2,3,3))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(checkKey(retrievedKey2,22,22))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "appendRow(batch,makeKeyRow(1,\"A\"),makeValueRow(1,1))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "fixedLengthTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(iterator.next())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "UnsafeRow value3 = iterator.getValue()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertTrue(checkKey(key1,11,11))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertTrue(checkKey(key1,1,\"A\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "appendRow(batch,makeKeyRow(2,\"B\"),makeValueRow(2,2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "org.apache.spark.unsafe.KVIterator<UnsafeRow,UnsafeRow> iterator = batch.rowIterator()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertFalse(iterator.next())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "UnsafeRow retrievedValue2 = batch.getValueRow(2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "appendRow(batch,makeKeyRow(11,11),makeValueRow(1,1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "UnsafeRow retrievedKey1 = batch.getKeyRow(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(checkValue(value2,2,2))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "appendRow(batch,makeKeyRow(33,33),makeValueRow(3,3))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "appendRow(batch,makeKeyRow(22,22),makeValueRow(2,2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->40 [style = bold, label=""];
23->42 [style = solid, label="key2"];
17->15 [style = solid, label="key2"];
28->38 [style = solid, label="batch"];
15->10 [style = bold, label=""];
30->41 [style = bold, label=""];
7->19 [style = solid, label="value1"];
9->2 [style = solid, label="key3"];
12->16 [style = solid, label="value3"];
28->45 [style = solid, label="batch"];
18->4 [style = solid, label="value2"];
11->13 [style = solid, label="key2"];
47->27 [style = solid, label="key3"];
5->20 [style = bold, label=""];
7->1 [style = bold, label=""];
25->22 [style = bold, label=""];
26->17 [style = bold, label=""];
21->28 [style = dashed, label="0"];
16->27 [style = dashed, label="0"];
28->35 [style = solid, label="batch"];
7->19 [style = solid, label="key1"];
17->15 [style = solid, label="value2"];
6->0 [style = bold, label=""];
13->10 [style = solid, label="value2"];
20->6 [style = bold, label=""];
0->1 [style = solid, label="key1"];
16->23 [style = bold, label=""];
32->43 [style = bold, label=""];
46->29 [style = bold, label=""];
15->42 [style = dashed, label="0"];
0->7 [style = bold, label=""];
34->26 [style = solid, label="retrievedValue2"];
9->2 [style = solid, label="value1"];
22->3 [style = bold, label=""];
21->22 [style = solid, label="batch"];
42->4 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
28->35 [style = bold, label=""];
36->37 [style = solid, label="value3"];
29->33 [style = bold, label=""];
9->39 [style = bold, label=""];
19->14 [style = bold, label=""];
18->4 [style = bold, label=""];
36->27 [style = bold, label=""];
27->37 [style = bold, label=""];
34->26 [style = bold, label=""];
19->39 [style = dashed, label="0"];
21->22 [style = bold, label=""];
41->44 [style = solid, label="retrievedValue1"];
24->25 [style = bold, label=""];
39->2 [style = bold, label=""];
3->45 [style = dashed, label="0"];
10->39 [style = solid, label="key1"];
45->38 [style = bold, label=""];
44->34 [style = bold, label=""];
40->47 [style = bold, label=""];
22->35 [style = dashed, label="0"];
1->14 [style = solid, label="value1"];
35->45 [style = bold, label=""];
8->21 [style = bold, label=""];
33->30 [style = bold, label=""];
33->30 [style = solid, label="retrievedKey2"];
12->16 [style = solid, label="key3"];
11->17 [style = bold, label=""];
38->46 [style = bold, label=""];
17->13 [style = bold, label=""];
10->9 [style = bold, label=""];
13->15 [style = bold, label=""];
9->12 [style = bold, label=""];
31->28 [style = bold, label=""];
5->38 [style = dashed, label="0"];
1->19 [style = bold, label=""];
21->3 [style = solid, label="batch"];
14->11 [style = bold, label=""];
41->44 [style = bold, label=""];
47->36 [style = bold, label=""];
23->18 [style = bold, label=""];
37->32 [style = bold, label=""];
2->23 [style = solid, label="value3"];
21->5 [style = solid, label="batch"];
46->29 [style = solid, label="retrievedKey1"];
18->42 [style = bold, label=""];
2->16 [style = bold, label=""];
}
