digraph {
27 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < 4@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "v < 3@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client.prepareResponse(fetchResponse(this.records,Errors.NONE.code(),100L,100 * i))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "builder.appendWithOffset((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "v++@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(3,records.size())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "builder.appendWithOffset((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.records = builder.build()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "int v = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "subscriptions.assignFromUser(singleton(tp))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "i > 1@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "subscriptions.seek(tp,0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "v++@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records = fetchRecords(builder.build(),Errors.NONE.code(),100L,100 * i).get(tp)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6->3 [style = bold, label=""];
9->12 [style = solid, label="v"];
38->14 [style = dotted, label="true"];
25->22 [style = bold, label=""];
43->42 [style = bold, label=""];
38->41 [style = bold, label=""];
15->9 [style = dotted, label="true"];
19->5 [style = bold, label=""];
19->34 [style = dashed, label="0"];
38->21 [style = dotted, label="true"];
20->38 [style = dashed, label="0"];
5->35 [style = dashed, label="0"];
17->14 [style = bold, label=""];
27->7 [style = bold, label=""];
32->25 [style = bold, label=""];
0->8 [style = bold, label=""];
20->18 [style = dotted, label="true"];
9->25 [style = solid, label="v"];
13->22 [style = bold, label=""];
21->15 [style = solid, label="i"];
14->4 [style = solid, label="i"];
9->22 [style = solid, label="v"];
10->4 [style = solid, label="records"];
20->15 [style = bold, label=""];
20->15 [style = dotted, label="true"];
14->20 [style = bold, label=""];
16->39 [style = dashed, label="0"];
22->33 [style = bold, label=""];
15->18 [style = dotted, label="true"];
22->32 [style = bold, label=""];
14->38 [style = bold, label=""];
15->10 [style = dotted, label="true"];
14->12 [style = solid, label="i"];
15->36 [style = dashed, label="0"];
13->32 [style = dashed, label="0"];
33->29 [style = bold, label=""];
42->14 [style = solid, label="i"];
20->18 [style = bold, label=""];
21->37 [style = bold, label=""];
22->13 [style = dotted, label="true"];
18->9 [style = bold, label=""];
14->21 [style = solid, label="i"];
20->3 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
20->22 [style = dotted, label="true"];
31->28 [style = bold, label=""];
34->35 [style = bold, label=""];
9->13 [style = solid, label="v"];
22->32 [style = dotted, label="true"];
42->38 [style = bold, label=""];
20->6 [style = dotted, label="true"];
8->4 [style = solid, label="records"];
42->38 [style = solid, label="i"];
14->32 [style = solid, label="i"];
21->32 [style = solid, label="i"];
9->22 [style = bold, label=""];
38->37 [style = dotted, label="true"];
30->24 [style = bold, label=""];
7->17 [style = bold, label=""];
20->9 [style = dotted, label="true"];
21->4 [style = solid, label="i"];
35->39 [style = bold, label=""];
22->25 [style = dotted, label="true"];
38->44 [style = dotted, label="true"];
44->14 [style = bold, label=""];
29->21 [style = bold, label=""];
25->22 [style = solid, label="v"];
5->16 [style = bold, label=""];
21->12 [style = solid, label="i"];
12->13 [style = bold, label=""];
24->26 [style = bold, label=""];
26->31 [style = bold, label=""];
1->6 [style = bold, label=""];
20->1 [style = dotted, label="true"];
14->38 [style = solid, label="i"];
20->33 [style = dotted, label="true"];
10->23 [style = bold, label=""];
20->4 [style = dotted, label="true"];
20->23 [style = dotted, label="true"];
22->10 [style = bold, label=""];
37->44 [style = bold, label=""];
14->20 [style = solid, label="i"];
13->22 [style = solid, label="v"];
3->21 [style = bold, label=""];
6->4 [style = solid, label="records"];
4->1 [style = bold, label=""];
40->43 [style = bold, label=""];
41->34 [style = bold, label=""];
38->36 [style = dotted, label="true"];
20->11 [style = bold, label=""];
9->32 [style = solid, label="v"];
15->23 [style = bold, label=""];
23->4 [style = bold, label=""];
21->20 [style = solid, label="i"];
38->36 [style = bold, label=""];
15->22 [style = dotted, label="true"];
20->21 [style = dotted, label="true"];
11->19 [style = bold, label=""];
16->2 [style = bold, label=""];
39->11 [style = bold, label=""];
15->18 [style = bold, label=""];
8->7 [style = bold, label=""];
22->12 [style = dotted, label="true"];
25->32 [style = solid, label="v"];
36->21 [style = bold, label=""];
21->20 [style = bold, label=""];
13->12 [style = solid, label="v"];
20->29 [style = dotted, label="true"];
22->12 [style = bold, label=""];
14->37 [style = solid, label="i"];
14->15 [style = solid, label="i"];
20->30 [style = bold, label=""];
43->37 [style = solid, label="offset"];
42->37 [style = solid, label="i"];
}
