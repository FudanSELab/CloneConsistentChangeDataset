digraph {
11 [style = filled, label = "assertEquals(stats.pendingKeys,40)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "generateSStable(store,Integer.toString(table))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "table++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertOnDiskState(store,10)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "store.disableAutoCompaction()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(10,stats.numLiveSSTables)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SSTableStats stats = antiCompactRanges(store,atEndpoint(NO_RANGES,range(0,4)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ColumnFamilyStore store = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int table = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "antiCompactTenFull['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(stats.pendingKeys,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "table < 10@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(stats.transKeys,40)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SSTableStats stats = antiCompactRanges(store,atEndpoint(range(0,4),NO_RANGES))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "antiCompactTenTrans['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(stats.transKeys,0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "antiCompactTenFull['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(stats.unrepairedKeys,60)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
16->15 [style = bold, label=""];
7->11 [style = bold, label=""];
5->9 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
11->16 [style = dashed, label="0"];
9->18 [style = dashed, label="0"];
3->5 [style = solid, label="table"];
10->0 [style = solid, label="table"];
1->0 [style = solid, label="store"];
8->14 [style = bold, label=""];
10->5 [style = solid, label="table"];
5->18 [style = bold, label=""];
1->14 [style = solid, label="store"];
5->0 [style = dotted, label="true"];
5->3 [style = dotted, label="true"];
9->7 [style = bold, label=""];
1->18 [style = solid, label="store"];
11->2 [style = bold, label=""];
3->0 [style = solid, label="table"];
10->3 [style = solid, label="table"];
2->15 [style = dashed, label="0"];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
12->10 [style = bold, label=""];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
7->16 [style = bold, label=""];
1->12 [style = bold, label=""];
13->6 [style = bold, label=""];
18->7 [style = bold, label=""];
15->8 [style = bold, label=""];
2->8 [style = bold, label=""];
1->9 [style = solid, label="store"];
}
