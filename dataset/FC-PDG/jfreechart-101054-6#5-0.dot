digraph {
14 [style = filled, label = "assertTrue(v1.equals(v2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "v1 = new DefaultKeyedValue(\"Test\",45.5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "v2.setValue(12.3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DefaultKeyedValue v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "v1 = new DefaultKeyedValue(\"Test 1\",45.5)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "DefaultKeyedValue v2 = new DefaultKeyedValue(\"Test\",45.5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test 2\",45.5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "v2 = new DefaultKeyedValue(\"Test\",45.6)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DefaultKeyedValue<String> v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",45.5)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(v2.equals(v1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
16->11 [style = bold, label=""];
0->2 [style = bold, label=""];
3->2 [style = solid, label="v2"];
6->0 [style = bold, label=""];
6->19 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
17->18 [style = solid, label="v2"];
3->5 [style = solid, label="v2"];
19->16 [style = bold, label=""];
8->2 [style = solid, label="v2"];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
12->14 [style = solid, label="v2"];
3->12 [style = dashed, label="0"];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
4->5 [style = solid, label="v1"];
3->6 [style = solid, label="v2"];
10->5 [style = solid, label="v1"];
12->14 [style = bold, label=""];
15->4 [style = bold, label=""];
4->12 [style = bold, label=""];
4->13 [style = solid, label="v1"];
11->17 [style = bold, label=""];
8->6 [style = solid, label="v2"];
3->8 [style = dashed, label="0"];
14->13 [style = bold, label=""];
13->6 [style = bold, label=""];
4->10 [style = dashed, label="0"];
19->16 [style = solid, label="v2"];
17->18 [style = bold, label=""];
8->5 [style = solid, label="v2"];
}
