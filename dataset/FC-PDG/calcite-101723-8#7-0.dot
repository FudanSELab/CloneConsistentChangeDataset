digraph {
21 [style = filled, label = "simplifyOrTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final RexNode t2 = simplify.simplify(t,RexUnknownAs.UNKNOWN)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "simplifyAndTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Predicate.of(t) != null@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "RexNode t = terms.get(i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "terms.set(i,simplify.simplify(t,RexUnknownAs.UNKNOWN))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final RexNode t2 = simplify.simplify(t,unknownAs)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "terms.set(i,t2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "terms.set(i,simplify.simplify(t,UNKNOWN))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Predicate.of(t) == null@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "simplifyOrTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Predicate.of(t) != null@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_TRUE,t2),RexUnknownAs.UNKNOWN)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "i < terms.size()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
0->30 [style = bold, label=""];
18->3 [style = bold, label=""];
16->23 [style = solid, label="t"];
11->20 [style = dashed, label="0"];
0->18 [style = solid, label="i"];
16->27 [style = dashed, label="0"];
4->15 [style = bold, label=""];
23->2 [style = solid, label="t2"];
1->30 [style = solid, label="i"];
7->15 [style = solid, label="i"];
16->12 [style = solid, label="t"];
9->10 [style = bold, label=""];
10->22 [style = dashed, label="0"];
15->7 [style = dotted, label="true"];
8->10 [style = solid, label="simplify"];
7->16 [style = solid, label="i"];
29->18 [style = bold, label=""];
4->2 [style = solid, label="i"];
25->28 [style = solid, label="newPredicates"];
12->26 [style = dashed, label="0"];
17->22 [style = solid, label="simplify"];
12->2 [style = bold, label=""];
22->0 [style = bold, label=""];
15->8 [style = dotted, label="true"];
4->15 [style = solid, label="i"];
2->14 [style = bold, label=""];
3->22 [style = solid, label="t"];
18->3 [style = dotted, label="true"];
8->14 [style = solid, label="simplify"];
6->11 [style = dotted, label="true"];
1->3 [style = solid, label="i"];
18->0 [style = bold, label=""];
15->26 [style = dotted, label="true"];
29->18 [style = dotted, label="true"];
25->28 [style = bold, label=""];
21->20 [style = dotted, label="true"];
1->22 [style = solid, label="i"];
15->2 [style = dotted, label="true"];
23->14 [style = solid, label="t2"];
0->29 [style = bold, label=""];
8->22 [style = solid, label="simplify"];
15->16 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
17->14 [style = solid, label="simplify"];
5->8 [style = solid, label="newPredicates"];
1->18 [style = solid, label="i"];
28->30 [style = solid, label="simplify"];
15->13 [style = dotted, label="true"];
15->27 [style = dotted, label="true"];
18->30 [style = solid, label="t"];
13->12 [style = bold, label=""];
8->29 [style = solid, label="i"];
10->0 [style = bold, label=""];
1->10 [style = solid, label="i"];
7->27 [style = solid, label="i"];
15->12 [style = dotted, label="true"];
18->0 [style = dotted, label="true"];
28->26 [style = solid, label="simplify"];
13->15 [style = bold, label=""];
27->13 [style = solid, label="t"];
9->22 [style = bold, label=""];
6->17 [style = bold, label=""];
4->7 [style = solid, label="i"];
18->0 [style = solid, label="t"];
15->5 [style = dotted, label="true"];
29->0 [style = dotted, label="true"];
29->1 [style = dotted, label="true"];
16->13 [style = bold, label=""];
1->29 [style = solid, label="i"];
12->23 [style = dashed, label="0"];
7->2 [style = solid, label="i"];
12->2 [style = solid, label="t2"];
16->13 [style = solid, label="t"];
8->23 [style = solid, label="simplify"];
27->26 [style = solid, label="t"];
12->14 [style = solid, label="t2"];
17->12 [style = solid, label="simplify"];
0->22 [style = solid, label="i"];
8->30 [style = solid, label="i"];
18->10 [style = dotted, label="true"];
3->9 [style = bold, label=""];
0->10 [style = solid, label="i"];
15->28 [style = dotted, label="true"];
10->30 [style = dashed, label="0"];
9->18 [style = bold, label=""];
4->16 [style = solid, label="i"];
17->26 [style = solid, label="simplify"];
13->26 [style = bold, label=""];
19->23 [style = solid, label="unknownAs"];
18->9 [style = dotted, label="true"];
0->3 [style = solid, label="i"];
2->25 [style = dashed, label="0"];
17->30 [style = solid, label="simplify"];
7->15 [style = bold, label=""];
0->18 [style = bold, label=""];
3->10 [style = solid, label="t"];
23->2 [style = bold, label=""];
4->26 [style = solid, label="i"];
31->17 [style = bold, label=""];
1->29 [style = bold, label=""];
15->23 [style = dotted, label="true"];
15->25 [style = dotted, label="true"];
17->10 [style = solid, label="simplify"];
15->8 [style = bold, label=""];
17->4 [style = bold, label=""];
14->5 [style = bold, label=""];
15->1 [style = bold, label=""];
18->22 [style = dotted, label="true"];
5->8 [style = bold, label=""];
8->12 [style = solid, label="simplify"];
30->1 [style = bold, label=""];
17->23 [style = solid, label="simplify"];
8->18 [style = solid, label="i"];
3->18 [style = dashed, label="0"];
26->25 [style = bold, label=""];
28->7 [style = bold, label=""];
1->18 [style = bold, label=""];
3->9 [style = solid, label="t"];
4->27 [style = solid, label="i"];
15->16 [style = bold, label=""];
4->25 [style = solid, label="i"];
7->25 [style = solid, label="i"];
8->7 [style = bold, label=""];
1->0 [style = solid, label="i"];
8->1 [style = solid, label="i"];
21->19 [style = dotted, label="true"];
11->24 [style = dashed, label="0"];
13->23 [style = bold, label=""];
19->22 [style = solid, label="unknownAs"];
14->5 [style = solid, label="inverse"];
29->30 [style = dotted, label="true"];
31->24 [style = dotted, label="true"];
15->27 [style = bold, label=""];
21->17 [style = bold, label=""];
8->29 [style = bold, label=""];
7->26 [style = solid, label="i"];
}
