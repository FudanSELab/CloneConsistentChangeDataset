digraph {
2 [style = filled, label = "request.add(new TermVectorsRequest(\"index1\",\"1\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testTransportMultiGetAction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Task task = createTask()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final MultiTermVectorsRequestBuilder request = new MultiTermVectorsRequestBuilder(client,MultiTermVectorsAction.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "transportAction = new TransportMultiTermVectorsAction(transportService,clusterService,client,new ActionFilters(emptySet()),new Resolver()){@Override protected void executeShardAction(final ActionListener<MultiTermVectorsResponse> listener,final AtomicArray<MultiTermVectorsItemResponse> responses,final Map<ShardId,MultiTermVectorsShardRequest> shardRequests){shardActionInvoked.set(true)assertEquals(2,responses.length())assertNull(responses.get(0))assertNull(responses.get(1))}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "request.add(new MultiGetRequest.Item(\"index1\",\"_doc\",\"1\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testTransportMultiGetAction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "request.add(new TermVectorsRequest(\"index2\",\"2\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testTransportMultiGetAction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final AtomicBoolean shardActionInvoked = new AtomicBoolean(false)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "transportAction = new TransportMultiGetAction(transportService,clusterService,shardAction,new ActionFilters(emptySet()),new Resolver()){@Override protected void executeShardAction(final ActionListener<MultiGetResponse> listener,final AtomicArray<MultiGetItemResponse> responses,final Map<ShardId,MultiGetShardRequest> shardRequests){shardActionInvoked.set(true)assertEquals(2,responses.length())assertNull(responses.get(0))assertNull(responses.get(1))}}@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(shardActionInvoked.get())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final NodeClient client = new NodeClient(Settings.EMPTY,threadPool)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final MultiGetRequestBuilder request = new MultiGetRequestBuilder(client,MultiGetAction.INSTANCE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "transportAction.execute(task,request.request(),new ActionListenerAdapter())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "transportAction = new TransportMultiTermVectorsAction(transportService,clusterService,shardAction,new ActionFilters(emptySet()),new Resolver()){@Override protected void executeShardAction(final ActionListener<MultiTermVectorsResponse> listener,final AtomicArray<MultiTermVectorsItemResponse> responses,final Map<ShardId,MultiTermVectorsShardRequest> shardRequests){shardActionInvoked.set(true)assertEquals(2,responses.length())assertNull(responses.get(0))assertNull(responses.get(1))}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "request.add(new MultiGetRequest.Item(\"index1\",\"_doc\",\"2\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
16->0 [style = bold, label=""];
15->13 [style = bold, label=""];
7->1 [style = bold, label=""];
4->16 [style = dashed, label="0"];
9->11 [style = bold, label=""];
0->6 [style = bold, label=""];
5->0 [style = solid, label="request"];
1->15 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
1->15 [style = solid, label="client"];
1->5 [style = solid, label="client"];
1->11 [style = solid, label="client"];
12->9 [style = bold, label=""];
10->7 [style = bold, label=""];
9->16 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
14->7 [style = bold, label=""];
3->9 [style = bold, label=""];
5->2 [style = bold, label=""];
11->0 [style = bold, label=""];
13->12 [style = bold, label=""];
3->12 [style = dashed, label="0"];
7->0 [style = solid, label="task"];
2->13 [style = dashed, label="0"];
15->0 [style = solid, label="request"];
4->11 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
}
