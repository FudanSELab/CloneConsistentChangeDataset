digraph {
3 [style = filled, label = "IterativeDataSet<Long> mainIteration = data2.map(new IdentityMapper<Long>()).iterate(100)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DataSet<Long> firstResult = firstIteration.closeWith(firstIteration.map(new IdMapper()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OptimizedPlan op = compileNoStats(p)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mainResult.output(new DiscardingOutputFormat<Long>())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testBulkIterationInClosure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Plan p = env.createProgramPlan()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testBulkIterationInClosure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "env.execute()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mainResult.output(new DiscardingOutputFormat<Long>())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "IterativeDataSet<Long> firstIteration = data1.iterate(100)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DataSet<Long> firstResult = firstIteration.closeWith(firstIteration.map(new IdentityMapper<Long>()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DataSet<Long> mainResult = mainIteration.closeWith(joined)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "DataSet<Long> data2 = env.generateSequence(1,100)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mainResult.print()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "testProgram['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "IterativeDataSet<Long> mainIteration = data2.map(new IdMapper()).iterate(100)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "new JobGraphGenerator().compileJobGraph(op)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DataSet<Long> data1 = env.generateSequence(1,100)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DataSet<Long> joined = mainIteration.join(firstResult).where(new IdKeyExtractor()).equalTo(new IdKeyExtractor()).with(new Joiner())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DataSet<Long> joined = mainIteration.join(firstResult).where(new IdentityKeyExtractor<Long>()).equalTo(new IdentityKeyExtractor<Long>()).with(new DummyFlatJoinFunction<Long>())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
0->3 [style = bold, label=""];
5->13 [style = dashed, label="0"];
18->16 [style = solid, label="joined"];
7->17 [style = bold, label=""];
8->15 [style = bold, label=""];
2->1 [style = bold, label=""];
19->20 [style = bold, label=""];
16->7 [style = bold, label=""];
6->7 [style = solid, label="joined"];
14->10 [style = bold, label=""];
12->2 [style = solid, label="p"];
3->6 [style = bold, label=""];
9->10 [style = bold, label=""];
15->18 [style = bold, label=""];
20->10 [style = bold, label=""];
6->18 [style = dashed, label="0"];
8->0 [style = bold, label=""];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
13->12 [style = bold, label=""];
5->12 [style = bold, label=""];
10->4 [style = bold, label=""];
3->15 [style = dashed, label="0"];
11->8 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
2->1 [style = solid, label="op"];
18->16 [style = bold, label=""];
}
