digraph {
2 [style = filled, label = "assertThat(this.context.getEnvironment().acceptsProfiles(\"node\")).isTrue()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "SpringApplicationBuilder application = new SpringApplicationBuilder().profiles(\"node\").properties(\"transport=redis\").child().web(WebApplicationType.NONE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "parentFirstCreationWithProfileAndDefaultArgs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(this.context.getEnvironment().getProperty(\"bar\")).isEqualTo(\"spam\")@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"admin\")).isTrue()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(this.context.getEnvironment().acceptsProfiles(Profiles.of(\"node\"))).isTrue()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(this.context.getEnvironment().getProperty(\"transport\")).isEqualTo(\"redis\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "parentFirstWithDifferentProfileAndExplicitEnvironment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(this.context.getEnvironment().acceptsProfiles(\"node\",\"admin\")).isTrue()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.context = application.run()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(this.context.getParent().getEnvironment().acceptsProfiles(Profiles.of(\"node\"))).isTrue()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "parentFirstCreationWithProfileAndDefaultArgs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertThat(this.context.getParent().getEnvironment().getProperty(\"transport\")).isEqualTo(\"redis\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SpringApplicationBuilder application = new SpringApplicationBuilder().environment(new StandardEnvironment()).profiles(\"node\").properties(\"transport=redis\").child().profiles(\"admin\").web(WebApplicationType.NONE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(this.context.getParent().getEnvironment().acceptsProfiles(\"node\")).isTrue()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->4 [style = bold, label=""];
5->12 [style = dashed, label="0"];
0->13 [style = bold, label=""];
3->1 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
1->9 [style = dashed, label="0"];
11->12 [style = bold, label=""];
12->0 [style = bold, label=""];
2->8 [style = dashed, label="0"];
4->7 [style = bold, label=""];
3->9 [style = bold, label=""];
6->5 [style = bold, label=""];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
2->13 [style = dashed, label="0"];
0->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
13->14 [style = bold, label=""];
}
