digraph {
7 [style = filled, label = "LocalSessionAccessor.prepareUnsafe(repairID,COORDINATOR,PARTICIPANTS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(pendingContains(sstable))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cleanupCompactionFailed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "AbstractCompactionTask compactionTask = csm.getNextBackgroundTask(FBUtilities.nowInSeconds())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertSame(,compactionTask.getClass())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "compactionTask.execute(null)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "LocalSessionAccessor.failUnsafe(repairID)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cleanupCompactionFailed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SSTableReader sstable = makeSSTable(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "cfs.getCompactionStrategyManager().enable()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertFalse(hasPendingStrategiesFor(repairID))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertFalse(pendingContains(sstable))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "SSTableDeletingNotification notification = new SSTableDeletingNotification(sstable)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "mutateRepaired(sstable,repairID,false)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(hasPendingStrategiesFor(repairID))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "UUID repairID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertNotNull(compactionTask)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sstableDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(unrepairedContains(sstable))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(ActiveRepairService.UNREPAIRED_SSTABLE,sstable.getSSTableMetadata().repairedAt)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "compactionTask.execute(ActiveCompactionsTracker.NOOP)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "csm.handleNotification(new SSTableAddedNotification(Collections.singleton(sstable),null),cfs.getTracker())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->25 [style = bold, label=""];
0->11 [style = solid, label="repairID"];
5->11 [style = solid, label="sstable"];
11->14 [style = bold, label=""];
20->9 [style = bold, label=""];
17->6 [style = bold, label=""];
24->0 [style = bold, label=""];
5->9 [style = solid, label="sstable"];
0->6 [style = solid, label="repairID"];
5->30 [style = solid, label="sstable"];
27->30 [style = bold, label=""];
18->15 [style = bold, label=""];
5->8 [style = solid, label="sstable"];
23->3 [style = bold, label=""];
9->10 [style = bold, label=""];
0->18 [style = solid, label="repairID"];
22->23 [style = bold, label=""];
0->15 [style = solid, label="repairID"];
0->7 [style = solid, label="repairID"];
2->4 [style = bold, label=""];
5->21 [style = solid, label="sstable"];
19->0 [style = bold, label=""];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
29->26 [style = bold, label=""];
28->0 [style = bold, label=""];
12->13 [style = bold, label=""];
29->26 [style = solid, label="notification"];
26->27 [style = bold, label=""];
5->14 [style = solid, label="sstable"];
5->31 [style = solid, label="sstable"];
7->5 [style = bold, label=""];
0->17 [style = solid, label="repairID"];
30->31 [style = bold, label=""];
15->20 [style = bold, label=""];
3->8 [style = bold, label=""];
1->12 [style = bold, label=""];
8->21 [style = bold, label=""];
14->18 [style = bold, label=""];
25->8 [style = bold, label=""];
5->11 [style = bold, label=""];
14->9 [style = bold, label=""];
13->22 [style = bold, label=""];
5->29 [style = solid, label="sstable"];
13->22 [style = solid, label="compactionTask"];
10->1 [style = bold, label=""];
5->27 [style = solid, label="sstable"];
9->29 [style = bold, label=""];
21->17 [style = bold, label=""];
4->16 [style = bold, label=""];
0->20 [style = solid, label="repairID"];
3->25 [style = dashed, label="0"];
}
