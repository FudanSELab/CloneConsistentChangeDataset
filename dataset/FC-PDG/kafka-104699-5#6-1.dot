digraph {
2 [style = filled, label = "expectedConfigs.put(\"linger.ms\",\"1000\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PowerMock.replayAll()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testProducerConfigsWithOverrides['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(new HashMap<>())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_PRODUCER_OVERRIDES_PREFIX)).andReturn(connConfig)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testProducerConfigsWithClientOverrides['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultProducerConfigs)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "props.put(\"producer.client.id\",\"producer-test-id\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "props.put(\"producer.linger.ms\",\"1000\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectedConfigs.put(\"client.id\",\"producer-test-id\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "connConfig.put(\"batch.size\",\"1000\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(expectedConfigs,Worker.producerConfigs(TASK_ID,\"connector-producer-\" + TASK_ID,configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expectedConfigs.put(\"client.id\",\"producer-test-id\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedConfigs.put(\"acks\",\"-1\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\",CLUSTER_ID)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "connConfig.put(\"linger.ms\",\"5000\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "PowerMock.replayAll()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "WorkerConfig configWithOverrides = new StandaloneConfig(props)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testProducerConfigsWithOverrides['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedConfigs,Worker.producerConfigs(TASK_ID,\"connector-producer-\" + TASK_ID,configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expectedConfigs.put(\"linger.ms\",\"5000\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expectedConfigs.put(\"batch.size\",\"1000\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,String> props = new HashMap<>(workerProps)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "props.put(\"producer.acks\",\"-1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Object> connConfig = new HashMap<String,Object>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->19 [style = solid, label="expectedConfigs"];
5->3 [style = bold, label=""];
6->17 [style = bold, label=""];
12->11 [style = solid, label="expectedConfigs"];
15->10 [style = bold, label=""];
18->24 [style = bold, label=""];
7->11 [style = bold, label=""];
20->13 [style = bold, label=""];
21->19 [style = bold, label=""];
16->10 [style = bold, label=""];
0->2 [style = bold, label=""];
17->23 [style = solid, label="connConfig"];
6->17 [style = dashed, label="0"];
2->9 [style = bold, label=""];
6->14 [style = dashed, label="0"];
12->0 [style = bold, label=""];
14->7 [style = bold, label=""];
4->11 [style = solid, label="configWithOverrides"];
10->5 [style = bold, label=""];
22->20 [style = bold, label=""];
23->21 [style = bold, label=""];
3->8 [style = bold, label=""];
0->22 [style = bold, label=""];
4->12 [style = bold, label=""];
10->4 [style = solid, label="props"];
8->4 [style = bold, label=""];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
1->10 [style = bold, label=""];
2->22 [style = dashed, label="0"];
13->14 [style = bold, label=""];
4->19 [style = solid, label="configWithOverrides"];
17->18 [style = bold, label=""];
9->13 [style = bold, label=""];
24->23 [style = bold, label=""];
}
