digraph {
9 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getLiveInstances().size(),_instances.size())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "_participants.get(1).syncStop()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getInstanceConfigs().size(),_instances.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getLiveInstances().size(),_instances.size())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testRoutingTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "validateRoutingTable(_routingTableProvider2,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(_routingTableProvider.getLiveInstances().size(),_instances.size() - 1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "validateRoutingTable(_routingTableProvider,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(1),_instances.get(2)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getInstanceConfigs().size(),_instances.size())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testShutdownInstance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Collection<String> databases = _routingTableProvider.getResources()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(databases.size(),1)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(_routingTableProvider2.getLiveInstances().size(),_instances.size() - 1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "validateRoutingTable(_routingTableProvider2,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(2)))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testShutdownInstance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "validateRoutingTable(_routingTableProvider,Sets.newSet(_instances.get(0)),Sets.newSet(_instances.get(2)))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->2 [style = bold, label=""];
8->15 [style = dashed, label="0"];
12->11 [style = bold, label=""];
3->6 [style = bold, label=""];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
10->7 [style = bold, label=""];
0->15 [style = bold, label=""];
7->3 [style = bold, label=""];
9->6 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
14->0 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
11->13 [style = bold, label=""];
5->7 [style = bold, label=""];
4->14 [style = dashed, label="0"];
1->2 [style = dashed, label="0"];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
2->16 [style = bold, label=""];
}
