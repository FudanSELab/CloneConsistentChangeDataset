digraph {
5 [style = filled, label = "final SolrException e = expectThrows(,null)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertTrue(exceptionMessage.contains(\"Invalid collection\"))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "createRequest.setCollectionName(\"invalid$collection@name\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(exceptionMessage.contains(\"must consist entirely of periods, underscores, hyphens, and alphanumerics\"))@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testInvalidCoreNamesAreRejectedWhenCreatingCore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(exceptionMessage.contains(\"invalid$collection@name\"))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testInvalidCollectionNameRejectedWhenCreatingCollection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testInvalidCollectionNameRejectedWhenCreatingCollection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fail()@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String exceptionMessage = e.getMessage()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final Create createRequest = new Create()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createRequest.setCoreName(\"invalid$core@name\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
4->9 [style = bold, label=""];
5->7 [style = bold, label=""];
6->4 [style = bold, label=""];
10->3 [style = bold, label=""];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
8->5 [style = bold, label=""];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
}
