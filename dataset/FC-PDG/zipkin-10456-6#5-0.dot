digraph {
13 [style = filled, label = "collector.start()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(activemqMetrics.messages()).isEqualTo(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(receivedSpans.take()).isEqualTo(spans)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(activemqMetrics.spansDropped()).isZero()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(activemqMetrics.messagesDropped()).isZero()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "SpanBytesEncoder encoder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(rabbitmqMetrics.messages()).isEqualTo(1)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(receivedSpans.take()).containsAll(spans)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "messageWithMultipleSpans['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(rabbitmqMetrics.messagesDropped()).isZero()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "activemq.pushMessage(collector.queue,message)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RabbitMQCollector.Builder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertThat(rabbitmqMetrics.messagesDropped()).isZero()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(activemqMetrics.spans()).isEqualTo(spans.size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "messageWithMultipleSpans['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(storage.acceptedSpanCount()).isEqualTo(spans.size())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "byte(( message = encoder.encodeList(spans)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(rabbitmqMetrics.spans()).isEqualTo(spans.size())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "SpanBytesEncoder encoder@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(rabbitmqMetrics.messages()).isEqualTo(1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(rabbitmqMetrics.bytes()).isEqualTo(message.length)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(activemqMetrics.bytes()).isEqualTo(message.length)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Thread.sleep(200L)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(rabbitmqMetrics.spansDropped()).isZero()@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "publish(message)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "produceSpans(message,builder.queue)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "messageWithMultipleSpans['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10->18 [style = bold, label=""];
8->10 [style = bold, label=""];
16->13 [style = bold, label=""];
24->19 [style = bold, label=""];
3->25 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
0->23 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->0 [style = solid, label="message"];
0->16 [style = dashed, label="0"];
6->1 [style = dotted, label="true"];
12->15 [style = dotted, label="true"];
18->17 [style = bold, label=""];
7->3 [style = bold, label=""];
19->25 [style = bold, label=""];
20->22 [style = bold, label=""];
6->2 [style = bold, label=""];
12->11 [style = dotted, label="true"];
3->9 [style = bold, label=""];
2->23 [style = bold, label=""];
8->22 [style = dashed, label="0"];
26->2 [style = bold, label=""];
12->2 [style = bold, label=""];
23->24 [style = bold, label=""];
2->23 [style = solid, label="message"];
2->0 [style = bold, label=""];
21->20 [style = bold, label=""];
7->19 [style = dashed, label="0"];
9->21 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
26->1 [style = dotted, label="true"];
2->16 [style = solid, label="message"];
5->7 [style = bold, label=""];
4->8 [style = bold, label=""];
13->14 [style = bold, label=""];
25->21 [style = bold, label=""];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
2->16 [style = bold, label=""];
}
