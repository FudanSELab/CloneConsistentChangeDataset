digraph {
35 [style = filled, label = "queryBuilder.fields().size() == 0@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "(DisjunctionMaxQuery)query@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Map.Entry<String,Float> field = queryBuilder.fields().entrySet().iterator().next()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "termQuery instanceof TermQuery@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "doAssertLuceneQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Query query@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "doAssertLuceneQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "queryBuilder.value().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "disjunct instanceof BoostQuery@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(queryBuilder.zeroTermsQuery(),equalTo(ZeroTermsQuery.ALL))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "TermQuery inner = (TermQuery)termQuery@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "query instanceof MatchNoDocsQuery == false@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(termQuery,instanceOf())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "queryBuilder.fields().size() == 1@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()).or(instanceOf()))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Query query@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(disjunct,either(instanceOf()).or(instanceOf()))@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(query,notNullValue())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "DisjunctionMaxQuery maxQuery = (DisjunctionMaxQuery)query@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Query disjunct@@@34@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(query,instanceOf())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Query termQuery = disjunct@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "maxQuery.getDisjuncts()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(queryBuilder.zeroTermsQuery(),equalTo(ZeroTermsQueryOption.ALL))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "query instanceof MatchAllDocsQuery@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(query,either(instanceOf()).or(instanceOf()).or(instanceOf()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "fail(\"Encountered lucene query type we do not have a validation implementation for in our \" + .getSimpleName())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "termQuery = ((BoostQuery)disjunct).getQuery()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "SearchExecutionContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SearchExecutionContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertThat(query,instanceOf())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SearchExecutionContext context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTermOrBoostQuery(query,field.getKey(),queryBuilder.value(),field.getValue())@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Query query@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertThat(disjunct,either(instanceOf()).or(instanceOf()).or(instanceOf()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "queryBuilder.fields().size() > 1@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(inner.getTerm().bytes().toString(),is(inner.getTerm().bytes().toString().toLowerCase(Locale.ROOT)))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "SimpleQueryStringBuilder queryBuilder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "query instanceof DisjunctionMaxQuery@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "doAssertLuceneQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MatchPhraseQueryBuilder queryBuilder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Query disjunct@@@10@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
27->28 [style = bold, label=""];
39->18 [style = dotted, label="true"];
24->39 [style = bold, label=""];
25->26 [style = solid, label="query"];
21->30 [style = bold, label=""];
40->36 [style = dotted, label="true"];
28->39 [style = solid, label="termQuery"];
19->24 [style = bold, label=""];
20->27 [style = bold, label=""];
39->20 [style = dotted, label="false"];
13->17 [style = bold, label=""];
42->35 [style = dotted, label="false"];
32->25 [style = dotted, label="true"];
6->13 [style = dashed, label="0"];
25->34 [style = solid, label="query"];
33->18 [style = bold, label=""];
10->6 [style = solid, label="query"];
9->5 [style = bold, label=""];
31->40 [style = bold, label=""];
25->5 [style = solid, label="query"];
8->0 [style = dotted, label="true"];
13->22 [style = bold, label=""];
42->21 [style = bold, label=""];
25->31 [style = solid, label="query"];
35->31 [style = bold, label=""];
13->17 [style = dotted, label="true"];
22->19 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
7->17 [style = dashed, label="0"];
35->16 [style = dotted, label="false"];
3->38 [style = dashed, label="0"];
19->39 [style = bold, label=""];
24->33 [style = solid, label="termQuery"];
30->34 [style = bold, label=""];
4->2 [style = bold, label=""];
13->22 [style = dotted, label="false"];
6->2 [style = bold, label=""];
5->6 [style = bold, label=""];
28->19 [style = bold, label=""];
6->7 [style = dotted, label="true"];
42->30 [style = dotted, label="true"];
6->12 [style = dotted, label="true"];
6->7 [style = bold, label=""];
39->20 [style = bold, label=""];
9->10 [style = dotted, label="true"];
40->15 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
22->42 [style = bold, label=""];
22->26 [style = bold, label=""];
35->40 [style = dotted, label="true"];
10->5 [style = solid, label="query"];
24->39 [style = solid, label="termQuery"];
0->6 [style = solid, label="query"];
9->11 [style = dotted, label="true"];
25->23 [style = solid, label="query"];
22->37 [style = dotted, label="true"];
7->4 [style = bold, label=""];
19->24 [style = dotted, label="true"];
0->5 [style = solid, label="query"];
30->34 [style = dotted, label="true"];
35->31 [style = dotted, label="true"];
8->3 [style = dotted, label="true"];
39->33 [style = bold, label=""];
40->14 [style = dotted, label="true"];
22->26 [style = dotted, label="true"];
40->36 [style = bold, label=""];
10->2 [style = solid, label="query"];
22->41 [style = dotted, label="true"];
5->13 [style = bold, label=""];
22->27 [style = dotted, label="true"];
32->38 [style = dotted, label="true"];
25->40 [style = solid, label="query"];
32->29 [style = dotted, label="true"];
22->42 [style = dotted, label="false"];
6->12 [style = bold, label=""];
32->5 [style = bold, label=""];
28->33 [style = solid, label="termQuery"];
24->20 [style = solid, label="termQuery"];
35->16 [style = bold, label=""];
23->27 [style = bold, label=""];
25->30 [style = solid, label="query"];
22->39 [style = dotted, label="true"];
22->28 [style = dotted, label="true"];
28->20 [style = solid, label="termQuery"];
42->35 [style = bold, label=""];
8->1 [style = dotted, label="true"];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
18->27 [style = bold, label=""];
6->4 [style = dotted, label="true"];
26->23 [style = bold, label=""];
25->17 [style = solid, label="query"];
0->2 [style = solid, label="query"];
7->12 [style = dashed, label="0"];
42->21 [style = dotted, label="true"];
39->33 [style = dotted, label="true"];
}
