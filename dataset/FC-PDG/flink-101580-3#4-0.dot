digraph {
22 [style = filled, label = "0 < maxParallelism@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "int numberKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int checkpointingInterval@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.setParallelism(parallelism)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int numberElements@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "int checkpointingInterval@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int checkpointingInterval@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result.addSink(new CollectionSink<Tuple2<Integer,Integer>>())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createJobGraphWithKeyedState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SubtaskIndexFlatMapper.workCompletedLatch = new CountDownLatch(numberKeys)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return env.getStreamGraph().getJobGraph()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int numberElements@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int parallelism@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "DataStream<Tuple2<Integer,Integer>> result = input.flatMap(new SubtaskIndexFlatMapper(numberElements))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int fixedParallelism@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "createJobGraphWithKeyedState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "DataStream<Integer> input = env.addSource(new SubtaskIndexNonPartitionedStateSource(numberKeys,numberElements,terminateAfterEmission)).setParallelism(fixedParallelism).keyBy(new KeySelector<Integer,Integer>(){@Override public Integer getKey(Integer value){return value}})@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int parallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int parallelism@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int maxParallelism@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "createJobGraphWithKeyedAndNonPartitionedOperatorState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "int maxParallelism@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "env.enableCheckpointing(checkpointingInterval)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "env.setRestartStrategy(RestartStrategies.noRestart())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "boolean terminateAfterEmission@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "boolean terminateAfterEmission@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "env.getConfig().setMaxParallelism(maxParallelism)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int numberKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int numberKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DataStream<Integer> input = env.addSource(new SubtaskIndexSource(numberKeys,numberElements,terminateAfterEmission)).keyBy(new KeySelector<Integer,Integer>(){@Override public Integer getKey(Integer value){return value}})@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int numberElements@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int maxParallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31->25 [style = dotted, label="true"];
21->7 [style = solid, label="numberElements"];
22->5 [style = bold, label=""];
32->13 [style = bold, label=""];
18->20 [style = dotted, label="true"];
13->7 [style = bold, label=""];
18->15 [style = dotted, label="true"];
10->2 [style = bold, label=""];
31->24 [style = dotted, label="true"];
17->13 [style = solid, label="numberKeys"];
7->10 [style = bold, label=""];
0->22 [style = bold, label=""];
20->22 [style = solid, label="maxParallelism"];
24->7 [style = solid, label="numberElements"];
31->28 [style = dotted, label="true"];
15->5 [style = solid, label="checkpointingInterval"];
29->5 [style = solid, label="checkpointingInterval"];
9->11 [style = dotted, label="true"];
18->23 [style = dotted, label="true"];
16->8 [style = bold, label=""];
12->5 [style = solid, label="checkpointingInterval"];
31->27 [style = dotted, label="true"];
11->13 [style = solid, label="numberKeys"];
14->0 [style = bold, label=""];
19->0 [style = solid, label="parallelism"];
15->30 [style = dashed, label="0"];
0->1 [style = bold, label=""];
9->6 [style = dotted, label="true"];
4->7 [style = solid, label="numberElements"];
18->17 [style = dotted, label="true"];
18->21 [style = dotted, label="true"];
8->32 [style = dashed, label="0"];
26->13 [style = solid, label="numberKeys"];
9->4 [style = dotted, label="true"];
31->26 [style = dotted, label="true"];
25->1 [style = solid, label="maxParallelism"];
22->1 [style = dotted, label="true"];
8->13 [style = bold, label=""];
3->1 [style = solid, label="maxParallelism"];
18->19 [style = dotted, label="true"];
9->14 [style = bold, label=""];
31->30 [style = dotted, label="true"];
31->29 [style = dotted, label="true"];
20->1 [style = solid, label="maxParallelism"];
27->0 [style = solid, label="parallelism"];
9->3 [style = dotted, label="true"];
9->15 [style = dotted, label="true"];
6->0 [style = solid, label="parallelism"];
9->12 [style = dotted, label="true"];
18->14 [style = bold, label=""];
22->1 [style = bold, label=""];
31->14 [style = bold, label=""];
5->16 [style = bold, label=""];
16->32 [style = bold, label=""];
1->5 [style = bold, label=""];
}
