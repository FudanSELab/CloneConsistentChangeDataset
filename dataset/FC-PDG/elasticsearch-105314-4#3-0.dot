digraph {
4 [style = filled, label = "fieldType.setName(\"not_a_number\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "BoxplotAggregationBuilder aggregationBuilder = new BoxplotAggregationBuilder(\"boxplot\").field(\"not_a_number\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MappedFieldType fieldType = new KeywordFieldMapper.KeywordFieldType()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MinAggregationBuilder aggregationBuilder = new MinAggregationBuilder(\"min\").field(\"not_a_number\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testUnsupportedType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testUnsupportedType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testUnsupportedType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(e.getMessage(),\"Field (not_a_number( of type (keyword(indexed,tokenized)( \" + \"is not supported for aggregation (boxplot(\")@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "fieldType.setHasDocValues(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(e.getMessage(),\"Expected numeric type on field (not_a_number(, but got (keyword(\")@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->5 [style = bold, label=""];
10->1 [style = bold, label=""];
2->7 [style = dashed, label="0"];
9->10 [style = bold, label=""];
0->10 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->0 [style = bold, label=""];
8->0 [style = bold, label=""];
0->1 [style = bold, label=""];
5->6 [style = bold, label=""];
6->2 [style = bold, label=""];
1->4 [style = bold, label=""];
}
