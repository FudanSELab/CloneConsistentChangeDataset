digraph {
7 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.0)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(membership.get(1).get(1).doubleValue(),0.0,0.001)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.001)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testMultiKmeans['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.0)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(membership.get(2).get(0).doubleValue(),0.0,0.001)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.001)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.0)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "labels1.contains(\"doc1\")@@@28@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(!(labels1.contains(\"doc3\") && labels2.contains(\"doc3\")))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),1.0,0.0)@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "assertEquals(membership.get(3).get(0).doubleValue(),0.0,0.001)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.001)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "List<String> labels1 = (List<String>)tuples.get(0).get(\"j\")@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(membership.get(0).get(1).doubleValue(),0.0,0.001)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertTrue(!(labels1.contains(\"doc1\") && labels2.contains(\"doc1\")))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.0)@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "solrStream.setStreamContext(context)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.001)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(\"doc1\", \"doc2\", \"doc3\", \"doc4\")),\" + \" f=fuzzyKmeans(e, 2),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h),\" + \" l=getMembershipMatrix(f))\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(membership.get(1).get(0).doubleValue(),0.0,0.001)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.0)@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.0)@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.0)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(membership.get(0).get(0).doubleValue(),1.0,0.001)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.001)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<List<Number>> cluster2 = (List<List<Number>>)tuples.get(0).get(\"h\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(!(labels1.contains(\"doc4\") && labels2.contains(\"doc4\")))@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "List<String> labels2 = (List<String>)tuples.get(0).get(\"k\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.0)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "testFuzzyKmeans['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(membership.get(2).get(1).doubleValue(),1.0,0.001)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(membership.get(0).get(0).doubleValue(),0.0,0.001)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<List<Number>> cluster1 = (List<List<Number>>)tuples.get(0).get(\"g\")@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue((labels2.contains(\"doc1\") && labels2.contains(\"doc2\")) || ((labels2.contains(\"doc3\") && labels2.contains(\"doc4\"))))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),0.0,0.0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.001)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),1.0,0.001)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),0.0,0.0)@@@63@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
101 [style = filled, label = "assertEquals(membership.get(1).get(1).doubleValue(),1.0,0.001)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.0)@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(centroids.get(0).get(1).doubleValue(),0.0,0.001)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.001)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.0)@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.0)@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(cluster1.size(),2)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "List<List<Number>> membership = (List<List<Number>>)tuples.get(0).get(\"l\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "assertEquals(membership.get(3).get(0).doubleValue(),1.0,0.001)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(cluster1.size(),2)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.001)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "paramsLoc.set(\"qt\",\"/stream\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.0)@@@54@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertTrue((labels1.contains(\"doc1\") && labels1.contains(\"doc2\")) || ((labels1.contains(\"doc3\") && labels1.contains(\"doc4\"))))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.0)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
107 [style = filled, label = "assertEquals(membership.get(3).get(1).doubleValue(),0.0,0.001)@@@70@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(cluster2.size(),2)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(membership.get(0).get(1).doubleValue(),1.0,0.001)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),0.0,0.001)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "assertEquals(membership.get(3).get(1).doubleValue(),1.0,0.001)@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(tuples.size() == 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.001)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.001)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "paramsLoc.set(\"expr\",cexpr)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertEquals(centroids.get(1).get(4).doubleValue(),1.0,0.001)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.001)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(centroids.get(1).get(1).doubleValue(),0.0,0.0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.0)@@@55@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "testMultiKmeans['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "List<List<Number>> centroids = (List<List<Number>>)tuples.get(0).get(\"i\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),1.0,0.001)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertEquals(membership.get(1).get(0).doubleValue(),1.0,0.001)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "labels1.contains(\"doc1\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamContext context = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<String> labels2 = (List<String>)tuples.get(0).get(\"k\")@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertTrue(!(labels1.contains(\"doc2\") && labels2.contains(\"doc2\")))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertEquals(centroids.get(0).get(2).doubleValue(),0.0,0.001)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(cluster2.size(),2)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),0.0,0.0)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(membership.get(2).get(0).doubleValue(),1.0,0.001)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),0.0,0.0)@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
99 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.001)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ModifiableSolrParams paramsLoc = new ModifiableSolrParams()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<List<Number>> cluster1 = (List<List<Number>>)tuples.get(0).get(\"g\")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertEquals(centroids.get(1).get(5).doubleValue(),1.0,0.0)@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),0.0,0.001)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<List<Number>> cluster2 = (List<List<Number>>)tuples.get(0).get(\"h\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),0.0,0.001)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "assertEquals(centroids.get(1).get(2).doubleValue(),1.0,0.001)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),1.0,0.001)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(centroids.get(0).get(4).doubleValue(),1.0,0.0)@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(centroids.size(),2)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(centroids.get(1).get(3).doubleValue(),1.0,0.0)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<String> labels1 = (List<String>)tuples.get(0).get(\"j\")@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "String url = cluster.getJettySolrRunners().get(0).getBaseUrl().toString() + \"/\" + COLLECTIONORALIAS@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertEquals(centroids.get(0).get(0).doubleValue(),1.0,0.001)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(!(labels1.contains(\"doc3\") && labels2.contains(\"doc3\")))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(centroids.get(1).get(0).doubleValue(),0.0,0.0)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "@SuppressWarnings({\"unchecked\"}) List<List<Number>> centroids = (List<List<Number>>)tuples.get(0).get(\"i\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertTrue(!(labels1.contains(\"doc1\") && labels2.contains(\"doc1\")))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(membership.get(2).get(1).doubleValue(),0.0,0.001)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(!(labels1.contains(\"doc2\") && labels2.contains(\"doc2\")))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String cexpr = \"let(echo=true,\" + \" a=array(1,1,1,0,0,0),\" + \" b=array(1,1,1,0,0,0),\" + \" c=array(0,0,0,1,1,1),\" + \" d=array(0,0,0,1,1,1),\" + \" e=setRowLabels(matrix(a,b,c,d), \" + \" array(\"doc1\", \"doc2\", \"doc3\", \"doc4\")),\" + \" f=multiKmeans(e, 2, 5),\" + \" g=getCluster(f, 0),\" + \" h=getCluster(f, 1),\" + \" i=getCentroids(f),\" + \" j=getRowLabels(g),\" + \" k=getRowLabels(h))\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "TupleStream solrStream = new SolrStream(url,paramsLoc)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue((labels2.contains(\"doc1\") && labels2.contains(\"doc2\")) || ((labels2.contains(\"doc3\") && labels2.contains(\"doc4\"))))@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "assertEquals(centroids.get(0).get(3).doubleValue(),1.0,0.001)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertTrue(!(labels1.contains(\"doc4\") && labels2.contains(\"doc4\")))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),1.0,0.0)@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertTrue((labels1.contains(\"doc1\") && labels1.contains(\"doc2\")) || ((labels1.contains(\"doc3\") && labels1.contains(\"doc4\"))))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Tuple> tuples = getTuples(solrStream)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(centroids.get(0).get(5).doubleValue(),0.0,0.0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(centroids.size(),2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86->104 [style = bold, label=""];
100->84 [style = bold, label=""];
28->72 [style = dotted, label="true"];
28->88 [style = dotted, label="false"];
46->25 [style = bold, label=""];
29->30 [style = bold, label=""];
28->89 [style = dotted, label="true"];
28->109 [style = dotted, label="false"];
26->34 [style = bold, label=""];
28->38 [style = bold, label=""];
23->42 [style = solid, label="paramsLoc"];
28->77 [style = dotted, label="false"];
33->66 [style = dotted, label="false"];
56->67 [style = bold, label=""];
39->24 [style = bold, label=""];
61->57 [style = bold, label=""];
93->36 [style = bold, label=""];
33->50 [style = dotted, label="true"];
20->70 [style = dashed, label="0"];
85->110 [style = bold, label=""];
42->29 [style = bold, label=""];
33->59 [style = dotted, label="false"];
3->27 [style = bold, label=""];
32->63 [style = bold, label=""];
28->6 [style = dotted, label="true"];
82->76 [style = bold, label=""];
48->12 [style = bold, label=""];
24->49 [style = bold, label=""];
22->0 [style = bold, label=""];
15->11 [style = bold, label=""];
28->105 [style = dotted, label="true"];
37->31 [style = bold, label=""];
28->18 [style = dotted, label="true"];
28->47 [style = dotted, label="false"];
33->2 [style = dotted, label="true"];
18->104 [style = dashed, label="0"];
19->75 [style = dashed, label="0"];
44->1 [style = bold, label=""];
63->50 [style = bold, label=""];
28->79 [style = dotted, label="true"];
28->92 [style = dotted, label="true"];
53->60 [style = bold, label=""];
28->13 [style = dotted, label="true"];
7->82 [style = dashed, label="0"];
28->96 [style = dotted, label="false"];
4->16 [style = bold, label=""];
28->24 [style = dotted, label="false"];
47->76 [style = dashed, label="0"];
31->14 [style = bold, label=""];
6->32 [style = bold, label=""];
48->73 [style = dashed, label="0"];
5->10 [style = bold, label=""];
73->89 [style = bold, label=""];
70->82 [style = bold, label=""];
106->75 [style = bold, label=""];
24->85 [style = dashed, label="0"];
72->97 [style = bold, label=""];
11->84 [style = dashed, label="0"];
33->32 [style = dotted, label="true"];
16->45 [style = bold, label=""];
28->86 [style = dotted, label="true"];
28->90 [style = dotted, label="true"];
19->20 [style = bold, label=""];
102->94 [style = bold, label=""];
28->87 [style = dotted, label="false"];
39->95 [style = dashed, label="0"];
28->103 [style = bold, label=""];
17->97 [style = dashed, label="0"];
9->17 [style = bold, label=""];
88->81 [style = bold, label=""];
28->95 [style = dotted, label="false"];
8->80 [style = dashed, label="0"];
28->17 [style = dotted, label="true"];
98->99 [style = bold, label=""];
35->21 [style = bold, label=""];
50->39 [style = bold, label=""];
43->46 [style = bold, label=""];
41->61 [style = bold, label=""];
66->54 [style = bold, label=""];
28->78 [style = dotted, label="true"];
28->106 [style = dotted, label="false"];
28->81 [style = dotted, label="false"];
2->106 [style = dashed, label="0"];
42->35 [style = solid, label="solrStream"];
81->96 [style = bold, label=""];
33->61 [style = dotted, label="false"];
28->8 [style = dotted, label="false"];
49->110 [style = dashed, label="0"];
28->108 [style = dotted, label="true"];
28->44 [style = dotted, label="true"];
101->88 [style = bold, label=""];
40->93 [style = bold, label=""];
89->102 [style = bold, label=""];
83->77 [style = bold, label=""];
27->91 [style = dashed, label="0"];
28->9 [style = dotted, label="true"];
64->66 [style = bold, label=""];
33->62 [style = dotted, label="false"];
69->98 [style = bold, label=""];
54->59 [style = bold, label=""];
28->20 [style = dotted, label="false"];
28->103 [style = dotted, label="true"];
28->102 [style = dotted, label="true"];
41->68 [style = dashed, label="0"];
28->82 [style = dotted, label="false"];
28->38 [style = dotted, label="true"];
36->37 [style = bold, label=""];
65->53 [style = bold, label=""];
79->105 [style = bold, label=""];
20->7 [style = bold, label=""];
33->8 [style = bold, label=""];
32->99 [style = dashed, label="0"];
27->8 [style = bold, label=""];
33->67 [style = dotted, label="false"];
28->2 [style = dotted, label="false"];
33->57 [style = dotted, label="false"];
71->78 [style = bold, label=""];
94->86 [style = bold, label=""];
14->4 [style = bold, label=""];
33->39 [style = dotted, label="true"];
92->74 [style = bold, label=""];
76->109 [style = bold, label=""];
47->3 [style = bold, label=""];
8->41 [style = bold, label=""];
62->51 [style = bold, label=""];
87->83 [style = bold, label=""];
33->6 [style = dotted, label="true"];
29->30 [style = solid, label="context"];
28->3 [style = dotted, label="false"];
1->86 [style = dashed, label="0"];
28->39 [style = bold, label=""];
68->87 [style = bold, label=""];
78->79 [style = bold, label=""];
18->33 [style = bold, label=""];
23->43 [style = bold, label=""];
38->9 [style = bold, label=""];
28->104 [style = dotted, label="true"];
28->83 [style = dotted, label="false"];
74->90 [style = bold, label=""];
28->41 [style = dotted, label="false"];
104->69 [style = bold, label=""];
33->49 [style = dotted, label="true"];
25->42 [style = solid, label="url"];
33->41 [style = dotted, label="false"];
28->85 [style = dotted, label="false"];
60->38 [style = bold, label=""];
28->1 [style = dotted, label="true"];
28->99 [style = dotted, label="true"];
33->47 [style = dotted, label="true"];
3->109 [style = dashed, label="0"];
28->68 [style = dotted, label="false"];
21->55 [style = bold, label=""];
21->5 [style = bold, label=""];
12->13 [style = bold, label=""];
28->107 [style = dotted, label="false"];
28->32 [style = dotted, label="true"];
30->35 [style = bold, label=""];
40->36 [style = bold, label=""];
80->68 [style = bold, label=""];
51->64 [style = bold, label=""];
28->94 [style = dotted, label="true"];
103->72 [style = bold, label=""];
33->54 [style = dotted, label="false"];
28->101 [style = dotted, label="false"];
77->101 [style = bold, label=""];
28->76 [style = dotted, label="false"];
10->40 [style = bold, label=""];
25->42 [style = bold, label=""];
49->2 [style = bold, label=""];
33->24 [style = dotted, label="true"];
9->72 [style = dashed, label="0"];
28->95 [style = bold, label=""];
28->19 [style = dotted, label="false"];
58->65 [style = bold, label=""];
28->12 [style = dotted, label="true"];
33->69 [style = dashed, label="0"];
33->7 [style = dotted, label="true"];
28->39 [style = dotted, label="false"];
28->71 [style = dotted, label="true"];
52->11 [style = bold, label=""];
97->73 [style = bold, label=""];
84->23 [style = bold, label=""];
75->70 [style = bold, label=""];
2->19 [style = bold, label=""];
90->71 [style = bold, label=""];
110->106 [style = bold, label=""];
84->43 [style = solid, label="cexpr"];
33->8 [style = dotted, label="false"];
7->47 [style = bold, label=""];
28->70 [style = dotted, label="false"];
28->97 [style = dotted, label="true"];
28->33 [style = dotted, label="true"];
33->6 [style = bold, label=""];
13->44 [style = bold, label=""];
11->43 [style = solid, label="cexpr"];
28->98 [style = dotted, label="true"];
28->49 [style = dotted, label="false"];
33->64 [style = dotted, label="false"];
28->69 [style = dotted, label="true"];
1->18 [style = bold, label=""];
95->85 [style = bold, label=""];
96->107 [style = bold, label=""];
28->48 [style = dotted, label="true"];
6->98 [style = dashed, label="0"];
34->22 [style = bold, label=""];
33->20 [style = dotted, label="true"];
67->62 [style = bold, label=""];
57->56 [style = bold, label=""];
33->63 [style = dotted, label="true"];
28->73 [style = dotted, label="true"];
44->94 [style = dashed, label="0"];
13->102 [style = dashed, label="0"];
105->108 [style = bold, label=""];
12->89 [style = dashed, label="0"];
109->91 [style = bold, label=""];
28->110 [style = dotted, label="false"];
28->7 [style = dotted, label="false"];
91->80 [style = bold, label=""];
99->92 [style = bold, label=""];
17->48 [style = bold, label=""];
28->27 [style = dotted, label="false"];
33->56 [style = dotted, label="false"];
33->19 [style = dotted, label="true"];
33->51 [style = dotted, label="false"];
28->80 [style = dotted, label="false"];
45->26 [style = bold, label=""];
28->91 [style = dotted, label="false"];
28->75 [style = dotted, label="false"];
38->103 [style = dashed, label="0"];
11->23 [style = bold, label=""];
28->74 [style = dotted, label="true"];
55->58 [style = bold, label=""];
0->28 [style = bold, label=""];
}
