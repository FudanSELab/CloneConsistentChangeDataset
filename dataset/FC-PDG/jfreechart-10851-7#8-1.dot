digraph {
16 [style = filled, label = "XYSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "XYSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "s1.add(1.0,1.1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotSame(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "XYSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertSame(c1.getClass(),c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(c1,c2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
8->10 [style = bold, label=""];
3->2 [style = solid, label="c1"];
2->4 [style = solid, label="c2"];
2->7 [style = solid, label="c2"];
13->12 [style = solid, label="c1"];
12->7 [style = solid, label="c2"];
3->16 [style = solid, label="c1"];
11->6 [style = solid, label="s1"];
13->7 [style = solid, label="c1"];
3->6 [style = bold, label=""];
7->0 [style = bold, label=""];
12->4 [style = solid, label="c2"];
16->17 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->7 [style = bold, label=""];
6->2 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
2->10 [style = solid, label="c2"];
0->4 [style = bold, label=""];
6->16 [style = bold, label=""];
1->6 [style = solid, label="s1"];
1->11 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
5->13 [style = bold, label=""];
3->7 [style = solid, label="c1"];
13->4 [style = solid, label="c1"];
3->4 [style = solid, label="c1"];
16->17 [style = solid, label="c2"];
3->17 [style = solid, label="c1"];
4->8 [style = bold, label=""];
2->7 [style = bold, label=""];
13->6 [style = bold, label=""];
9->1 [style = bold, label=""];
14->11 [style = bold, label=""];
12->10 [style = solid, label="c2"];
15->1 [style = bold, label=""];
6->12 [style = bold, label=""];
}
