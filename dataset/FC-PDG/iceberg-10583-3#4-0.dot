digraph {
5 [style = filled, label = "parquetFile.deleteOnExit()@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i += 1@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.set(\"_id\",INT_MIN_VALUE + i)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "File parquetFile = temp.newFile()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "createParquetInputFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "Assert.assertTrue(PARQUET_FILE.delete())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "structNotNull.put(\"_int_field\",INT_MIN_VALUE + i)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Record structNotNull = new Record(structSchema)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(parquetFile.delete())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "builder.set(\"_struct_not_null\",structNotNull)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.set(\"_some_nulls\",(i % 10 == 0)? null: \"some\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builder.set(\"_all_nulls\",null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GenericRecordBuilder builder = new GenericRecordBuilder(convert(FILE_SCHEMA,\"table\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "createParquetInputFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "InputFile inFile = Files.localInput(parquetFile)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "PARQUET_FILE.exists()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < INT_MAX_VALUE - INT_MIN_VALUE + 1@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(\"Should create only one row group\",1,reader.getRowGroups().size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "appender.addAll(records)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "List<Record> records@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "rowGroupMetadata = reader.getRowGroups().get(0)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "InputFile inFile = Files.localInput(PARQUET_FILE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.set(\"_no_nulls\",\"\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "OutputFile outFile = Files.localOutput(parquetFile)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "appender.add(builder.build())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "parquetSchema = reader.getFileMetaData().getSchema()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "createParquetInputFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "builder.set(\"_required\",\"req\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "OutputFile outFile = Files.localOutput(PARQUET_FILE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "builder.set(\"_no_stats_parquet\",TOO_LONG_FOR_STATS_PARQUET)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "org.apache.avro.Schema structSchema = AvroSchemaUtil.convert(_structFieldType)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "parquetFile.exists()@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "PARQUET_FILE.deleteOnExit()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "builder.set(\"_str\",i + \"str\" + i)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
1->4 [style = bold, label=""];
26->22 [style = solid, label="parquetFile"];
35->36 [style = solid, label="records"];
28->34 [style = bold, label=""];
7->20 [style = solid, label="i"];
16->6 [style = bold, label=""];
9->17 [style = dotted, label="true"];
9->11 [style = dotted, label="true"];
27->30 [style = bold, label=""];
7->1 [style = solid, label="i"];
37->29 [style = bold, label=""];
27->31 [style = bold, label=""];
31->36 [style = bold, label=""];
36->32 [style = bold, label=""];
16->30 [style = dashed, label="0"];
10->1 [style = solid, label="i"];
12->16 [style = bold, label=""];
6->19 [style = bold, label=""];
7->15 [style = solid, label="i"];
5->29 [style = dashed, label="0"];
4->23 [style = solid, label="structNotNull"];
12->6 [style = bold, label=""];
33->27 [style = bold, label=""];
10->13 [style = solid, label="i"];
10->20 [style = solid, label="i"];
9->14 [style = dotted, label="true"];
2->12 [style = bold, label=""];
19->0 [style = bold, label=""];
7->9 [style = solid, label="i"];
14->7 [style = bold, label=""];
7->13 [style = solid, label="i"];
23->14 [style = bold, label=""];
22->8 [style = bold, label=""];
7->9 [style = bold, label=""];
12->26 [style = dashed, label="0"];
21->5 [style = bold, label=""];
26->16 [style = bold, label=""];
27->30 [style = dotted, label="true"];
15->17 [style = bold, label=""];
0->10 [style = bold, label=""];
26->19 [style = solid, label="parquetFile"];
33->35 [style = dotted, label="true"];
20->23 [style = bold, label=""];
12->16 [style = dotted, label="true"];
18->1 [style = bold, label=""];
11->3 [style = bold, label=""];
24->21 [style = bold, label=""];
9->23 [style = dotted, label="true"];
9->15 [style = bold, label=""];
30->31 [style = bold, label=""];
34->37 [style = bold, label=""];
10->15 [style = solid, label="i"];
9->13 [style = dotted, label="true"];
25->26 [style = bold, label=""];
9->20 [style = dotted, label="true"];
4->20 [style = bold, label=""];
9->1 [style = dotted, label="true"];
6->4 [style = solid, label="structSchema"];
12->27 [style = dashed, label="0"];
3->13 [style = bold, label=""];
9->4 [style = dotted, label="true"];
9->18 [style = dotted, label="true"];
10->9 [style = solid, label="i"];
9->15 [style = dotted, label="true"];
10->9 [style = bold, label=""];
9->7 [style = dotted, label="true"];
32->28 [style = bold, label=""];
9->3 [style = dotted, label="true"];
13->18 [style = bold, label=""];
17->11 [style = bold, label=""];
8->24 [style = bold, label=""];
}
