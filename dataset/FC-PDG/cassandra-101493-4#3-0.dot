digraph {
20 [style = filled, label = "createTable(\"CREATE TABLE %s (\" + \"k int, \" + \"c int, \" + \"sval text static, \" + \"val text, \" + \"PRIMARY KEY(k,c))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "execute(\"USE \" + keyspace())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertRows(execute(\"SELECT sval from %s\"),row(\"bar99\"),row(\"bar99\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.fail(\"Explicit select of static column in MV should fail\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.fail(\"MV on duration should fail\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "createView(\"mv_static\",\"CREATE MATERIALIZED VIEW %%s AS SELECT val, sval FROM %s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val, k, c)\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "updateView(\"INSERT into %s (k,c,sval,val)VALUES(?,?,?,?)\",0,i % 2,\"bar\" + i,\"baz\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "createView(\"mv_static\",\"CREATE MATERIALIZED VIEW %s AS SELECT val,k,c FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createTable(\"CREATE TABLE %s (\" + \"k int PRIMARY KEY, \" + \"result duration)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testDurationsTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.fail(\"Implicit select of static column in MV should fail\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.fail(\"Use of static column in a MV primary key should fail\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "{}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testDurationsTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "createView(\"mv_static\",\"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE val IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (val,k,c)\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testStaticTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(2,execute(\"select * from %s\").size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{}@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "InvalidQueryException e@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "InvalidQueryException e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i < 100@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "{}@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(2,execute(\"select * from mv_static\").size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertInvalid(\"SELECT sval from mv_static\")@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "executeNet(protocolVersion,\"USE \" + keyspace())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "createView(\"mv_duration\",\"CREATE MATERIALIZED VIEW %s AS SELECT * FROM %%s WHERE result IS NOT NULL AND k IS NOT NULL PRIMARY KEY (result,k)\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "InvalidQueryException e@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createView(\"mv_static\",\"CREATE MATERIALIZED VIEW %%s AS SELECT * FROM %s WHERE sval IS NOT NULL AND k IS NOT NULL AND c IS NOT NULL PRIMARY KEY (sval,k,c)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->21 [style = bold, label=""];
10->9 [style = solid, label="i"];
10->16 [style = solid, label="i"];
26->24 [style = bold, label=""];
3->20 [style = dashed, label="0"];
27->12 [style = bold, label=""];
18->22 [style = bold, label=""];
10->9 [style = bold, label=""];
17->19 [style = bold, label=""];
0->29 [style = bold, label=""];
20->4 [style = bold, label=""];
9->16 [style = bold, label=""];
12->21 [style = bold, label=""];
1->29 [style = dashed, label="0"];
11->15 [style = bold, label=""];
13->9 [style = solid, label="i"];
13->16 [style = solid, label="i"];
25->17 [style = bold, label=""];
0->1 [style = bold, label=""];
16->10 [style = bold, label=""];
9->10 [style = dotted, label="true"];
2->7 [style = dashed, label="0"];
13->10 [style = solid, label="i"];
15->26 [style = bold, label=""];
8->25 [style = bold, label=""];
6->3 [style = bold, label=""];
19->26 [style = bold, label=""];
28->18 [style = bold, label=""];
29->7 [style = bold, label=""];
9->16 [style = dotted, label="true"];
7->17 [style = bold, label=""];
5->3 [style = bold, label=""];
13->9 [style = bold, label=""];
9->28 [style = bold, label=""];
22->23 [style = bold, label=""];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
14->20 [style = bold, label=""];
4->0 [style = bold, label=""];
21->13 [style = bold, label=""];
}
