digraph {
2 [style = filled, label = "mockConsumer.setPollException(new InvalidOffsetException(\"Try Again!\"){@Override public Set<TopicPartition> partitions(){return Collections.singleton(topicPartition)}})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "initializeConsumer()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestUtils.waitForCondition(null,10 * 1000,\"GlobalStreamThread should have died.\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldDieOnInvalidOffsetExceptionWhileRunning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "mockConsumer.updateEndOffsets(Collections.singletonMap(topicPartition,1L))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "startAndSwallowError()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TestUtils.waitForCondition(null,10 * 1000,\"Thread never started.\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldDieOnInvalidOffsetExceptionWhileRunning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestUtils.waitForCondition(null,10 * 1000,\"Input record never consumed\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(new File(baseDirectoryName + File.separator + \"testAppId\" + File.separator + \"global\").exists())@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldDieOnInvalidOffsetExceptionDuringStartup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "mockConsumer.addRecord(record(GLOBAL_STORE_TOPIC_NAME,0,0L,\"K1\".getBytes(),\"V1\".getBytes()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "startAndSwallowError()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "mockConsumer.addRecord(new ConsumerRecord<>(GLOBAL_STORE_TOPIC_NAME,0,0L,\"K1\".getBytes(),\"V1\".getBytes()))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->10 [style = bold, label=""];
6->4 [style = bold, label=""];
13->0 [style = bold, label=""];
7->0 [style = bold, label=""];
11->0 [style = bold, label=""];
9->10 [style = dashed, label="0"];
10->8 [style = bold, label=""];
5->9 [style = bold, label=""];
3->1 [style = bold, label=""];
9->8 [style = bold, label=""];
8->2 [style = bold, label=""];
12->6 [style = bold, label=""];
2->6 [style = bold, label=""];
2->12 [style = bold, label=""];
0->2 [style = bold, label=""];
}
