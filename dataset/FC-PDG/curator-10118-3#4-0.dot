digraph {
2 [style = filled, label = "newCluster.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(((CuratorFrameworkImpl)client).getEnsembleTracker(),null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "testAddWithoutEnsembleTracker['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "CountDownLatch latch = setChangeWaiter(client)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testAddAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "BackgroundCallback callback = new BackgroundCallback(){@Override public void processResult(CuratorFramework client,CuratorEvent event){if (event.getType() == CuratorEventType.RECONFIG) {callbackLatch.countDown()}}}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(reconnectLatch.await(2,TimeUnit.SECONDS))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "newConfigData = client.getConfig().forEnsemble()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "client.start()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testAddWithoutEnsembleTracker['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(newConfigData)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "assertTrue(reconnectLatch.await(2,TimeUnit.SECONDS))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(callbackLatch))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(newConfigData)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "final CountDownLatch callbackLatch = new CountDownLatch(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@27@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(((CuratorFrameworkImpl)client).getEnsembleTracker(),null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final CountDownLatch reconnectLatch = new CountDownLatch(1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final String initialClusterCS = cluster.getConnectString()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertConfig(newConfig,newInstances)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertConfig(newConfig,newInstances)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->23 [style = solid, label="newConfig"];
41->16 [style = solid, label="oldConfig"];
28->20 [style = bold, label=""];
20->31 [style = solid, label="initialClusterCS"];
18->30 [style = dashed, label="0"];
17->35 [style = dashed, label="0"];
2->18 [style = solid, label="latch"];
38->15 [style = bold, label=""];
0->15 [style = bold, label=""];
42->0 [style = solid, label="newConfigData"];
0->15 [style = solid, label="newConfig"];
20->27 [style = bold, label=""];
23->29 [style = bold, label=""];
44->46 [style = bold, label=""];
15->17 [style = bold, label=""];
19->9 [style = bold, label=""];
21->16 [style = bold, label=""];
20->29 [style = solid, label="initialClusterCS"];
20->8 [style = solid, label="initialClusterCS"];
33->7 [style = bold, label=""];
35->31 [style = bold, label=""];
46->42 [style = bold, label=""];
17->5 [style = bold, label=""];
3->11 [style = bold, label=""];
18->12 [style = bold, label=""];
7->0 [style = bold, label=""];
1->14 [style = solid, label="oldConfig"];
27->16 [style = bold, label=""];
23->8 [style = bold, label=""];
25->7 [style = bold, label=""];
3->10 [style = solid, label="newConfig"];
15->35 [style = bold, label=""];
24->32 [style = dashed, label="0"];
29->32 [style = bold, label=""];
37->44 [style = solid, label="callbackLatch"];
4->34 [style = dashed, label="0"];
39->41 [style = bold, label=""];
4->22 [style = bold, label=""];
8->24 [style = bold, label=""];
22->26 [style = bold, label=""];
20->34 [style = solid, label="initialClusterCS"];
1->46 [style = solid, label="latch"];
3->24 [style = solid, label="newConfig"];
2->30 [style = solid, label="latch"];
21->27 [style = dashed, label="0"];
6->23 [style = bold, label=""];
0->43 [style = bold, label=""];
43->36 [style = bold, label=""];
20->25 [style = solid, label="initialClusterCS"];
45->44 [style = bold, label=""];
32->33 [style = bold, label=""];
42->0 [style = bold, label=""];
31->34 [style = bold, label=""];
19->45 [style = bold, label=""];
20->33 [style = solid, label="initialClusterCS"];
30->12 [style = bold, label=""];
9->18 [style = bold, label=""];
40->39 [style = bold, label=""];
16->1 [style = bold, label=""];
24->25 [style = bold, label=""];
5->4 [style = bold, label=""];
22->10 [style = bold, label=""];
5->31 [style = dashed, label="0"];
20->4 [style = solid, label="initialClusterCS"];
41->16 [style = bold, label=""];
3->26 [style = solid, label="newConfig"];
14->2 [style = bold, label=""];
12->3 [style = bold, label=""];
1->2 [style = bold, label=""];
3->32 [style = solid, label="newConfig"];
20->5 [style = solid, label="initialClusterCS"];
8->29 [style = dashed, label="0"];
11->23 [style = solid, label="newInstances"];
2->19 [style = bold, label=""];
11->6 [style = bold, label=""];
8->15 [style = dashed, label="0"];
9->30 [style = bold, label=""];
34->22 [style = bold, label=""];
20->21 [style = bold, label=""];
10->26 [style = dashed, label="0"];
0->38 [style = solid, label="newConfig"];
25->33 [style = dashed, label="0"];
1->14 [style = bold, label=""];
12->3 [style = solid, label="newConfigData"];
37->19 [style = bold, label=""];
36->38 [style = bold, label=""];
2->37 [style = bold, label=""];
43->38 [style = solid, label="newInstances"];
13->20 [style = bold, label=""];
}
