digraph {
11 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final int size = (int)(offsetAndSize & ((1L << 32) - 1))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "int ordinal@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return null@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final long offsetAndSize = getLong(ordinal)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "getBinary['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int ordinal@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final int size = (int)(offsetAndSize & ((1L << 32) - 1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "getUTF8String['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return bytes@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final byte(( bytes = new byte((((@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return null@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Platform.copyMemory(baseObject,baseOffset + offset,bytes,Platform.BYTE_ARRAY_OFFSET,size)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "getUTF8String['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int offset = (int)(offsetAndSize >> 32)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final int size = (int)offsetAndSize@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "isNullAt(ordinal)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return null@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "isNullAt(ordinal)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
15->13 [style = bold, label=""];
4->16 [style = dashed, label="0"];
4->6 [style = solid, label="ordinal"];
15->14 [style = dotted, label="false"];
10->0 [style = solid, label="size"];
7->10 [style = bold, label=""];
12->15 [style = bold, label=""];
6->1 [style = dotted, label="true"];
18->19 [style = bold, label=""];
16->0 [style = solid, label="ordinal"];
2->0 [style = solid, label="size"];
3->4 [style = dotted, label="true"];
3->6 [style = bold, label=""];
0->11 [style = bold, label=""];
8->6 [style = bold, label=""];
18->14 [style = solid, label="bytes"];
8->4 [style = dotted, label="true"];
2->10 [style = dashed, label="0"];
5->7 [style = solid, label="offsetAndSize"];
15->13 [style = dotted, label="true"];
6->1 [style = bold, label=""];
4->5 [style = solid, label="ordinal"];
6->5 [style = bold, label=""];
15->11 [style = dotted, label="false"];
15->17 [style = dotted, label="false"];
7->0 [style = solid, label="offset"];
2->0 [style = bold, label=""];
5->2 [style = solid, label="offsetAndSize"];
15->0 [style = dotted, label="false"];
19->14 [style = bold, label=""];
12->16 [style = dotted, label="true"];
6->9 [style = dotted, label="true"];
6->15 [style = dashed, label="0"];
7->2 [style = bold, label=""];
0->17 [style = solid, label="offsetAndSize"];
15->0 [style = bold, label=""];
11->19 [style = solid, label="offset"];
10->0 [style = bold, label=""];
18->19 [style = solid, label="bytes"];
15->19 [style = dotted, label="false"];
17->19 [style = solid, label="size"];
15->18 [style = dotted, label="false"];
5->7 [style = bold, label=""];
9->5 [style = bold, label=""];
11->17 [style = bold, label=""];
5->10 [style = solid, label="offsetAndSize"];
16->15 [style = solid, label="ordinal"];
6->9 [style = bold, label=""];
17->18 [style = bold, label=""];
0->11 [style = solid, label="offsetAndSize"];
}
