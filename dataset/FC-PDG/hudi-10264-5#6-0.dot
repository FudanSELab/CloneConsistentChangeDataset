digraph {
31 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_PARQUET,false,false,100000,false,null,null,\"timestamp\"),jsc)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "prepareParquetDFSFiles(parquetRecords,PARQUET_SOURCE_ROOT,FIRST_PARQUET_FILE_NAME,true,HoodieTestDataGenerator.TRIP_SCHEMA,HoodieTestDataGenerator.AVRO_TRIP_SCHEMA)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testNum++@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "totalExpectedRecords += 20@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),transformerClassNames,PROPS_FILENAME_TEST_PARQUET,false,useSchemaProvider,100000,false,null,null,\"timestamp\",null),jsc)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "prepareParquetDFSSource(true,false,\"source_uber.avsc\",\"target_uber.avsc\",PROPS_FILENAME_TEST_PARQUET,PARQUET_SOURCE_ROOT,false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "boolean useSchemaProvider@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "TestHelpers.assertRecordCount(parquetRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testParquetDFSSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "TestHelpers.assertRecordCount(PARQUET_NUM_RECORDS,tableBasePath + \"/*/*.parquet\",sqlContext)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "topicName = \"topic\" + testNum@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testParquetDFSSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int parquetRecords = 10@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "deltaStreamer.sync()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "int totalExpectedRecords = parquetRecords + ((autoResetToLatest)? 0: JSON_KAFKA_NUM_RECORDS)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.UPSERT,.getName(),Collections.EMPTY_LIST,PROPS_FILENAME_TEST_JSON_KAFKA,false,true,100000,false,null,null,\"timestamp\"),jsc)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "prepareJsonKafkaDFSFiles(20,false,topicName)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "deltaStreamer.sync()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "deltaStreamer.sync()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "prepareParquetDFSSource(useSchemaProvider,transformerClassNames != null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_parquet_table\" + testNum@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "deltaStreamer.sync()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "String tableBasePath = dfsBasePath + \"/test_dfs_to_kakfa\" + testNum@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "prepareJsonKafkaDFSSource(PROPS_FILENAME_TEST_JSON_KAFKA,autoResetToLatest? \"latest\": \"earliest\",topicName)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "List<String> transformerClassNames@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNum++@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TestHelpers.assertRecordCount(totalExpectedRecords,tableBasePath + \"/*/*.parquet\",sqlContext)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "boolean autoResetToLatest@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "HoodieDeltaStreamer deltaStreamer = new HoodieDeltaStreamer(TestHelpers.makeConfig(tableBasePath,WriteOperationType.INSERT,.getName(),transformerClassNames,PROPS_FILENAME_TEST_PARQUET,false,useSchemaProvider,100000,false,null,null,\"timestamp\"),jsc)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "PARQUET_SOURCE_ROOT = dfsBasePath + \"/parquetFilesDfsToKafka\" + testNum@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "boolean useSchemaProvider@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testDeltaStreamerTransitionFromParquetToKafkaSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "prepareJsonKafkaDFSFiles(JSON_KAFKA_NUM_RECORDS,true,topicName)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "deltaStreamer.shutdownGracefully()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->34 [style = solid, label="parquetRecords"];
6->3 [style = bold, label=""];
29->15 [style = bold, label=""];
19->21 [style = solid, label="parquetRecords"];
19->34 [style = bold, label=""];
7->21 [style = dashed, label="0"];
2->0 [style = solid, label="useSchemaProvider"];
33->30 [style = solid, label="PARQUET_SOURCE_ROOT"];
27->12 [style = bold, label=""];
9->11 [style = solid, label="useSchemaProvider"];
8->2 [style = dotted, label="true"];
18->29 [style = solid, label="topicName"];
5->0 [style = solid, label="transformerClassNames"];
28->16 [style = solid, label="tableBasePath"];
33->34 [style = solid, label="PARQUET_SOURCE_ROOT"];
1->6 [style = solid, label="tableBasePath"];
15->14 [style = solid, label="totalExpectedRecords"];
28->31 [style = bold, label=""];
31->13 [style = bold, label=""];
26->14 [style = bold, label=""];
23->32 [style = bold, label=""];
6->11 [style = dashed, label="0"];
20->12 [style = solid, label="autoResetToLatest"];
14->17 [style = bold, label=""];
12->16 [style = bold, label=""];
7->4 [style = bold, label=""];
16->23 [style = bold, label=""];
25->29 [style = bold, label=""];
18->27 [style = solid, label="topicName"];
2->6 [style = solid, label="useSchemaProvider"];
10->9 [style = dotted, label="true"];
10->5 [style = dotted, label="true"];
34->30 [style = bold, label=""];
32->25 [style = solid, label="totalExpectedRecords"];
28->25 [style = solid, label="tableBasePath"];
1->11 [style = bold, label=""];
15->26 [style = bold, label=""];
8->0 [style = bold, label=""];
9->0 [style = solid, label="useSchemaProvider"];
24->33 [style = bold, label=""];
22->18 [style = bold, label=""];
1->6 [style = bold, label=""];
30->28 [style = bold, label=""];
1->7 [style = solid, label="tableBasePath"];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
21->22 [style = bold, label=""];
18->27 [style = bold, label=""];
8->5 [style = dotted, label="true"];
0->1 [style = bold, label=""];
24->20 [style = dotted, label="true"];
10->0 [style = bold, label=""];
32->25 [style = bold, label=""];
18->12 [style = solid, label="topicName"];
5->11 [style = solid, label="transformerClassNames"];
28->21 [style = solid, label="tableBasePath"];
28->31 [style = solid, label="tableBasePath"];
28->14 [style = solid, label="tableBasePath"];
33->19 [style = bold, label=""];
13->21 [style = bold, label=""];
19->32 [style = solid, label="parquetRecords"];
5->6 [style = solid, label="transformerClassNames"];
1->11 [style = solid, label="tableBasePath"];
20->32 [style = solid, label="autoResetToLatest"];
}
