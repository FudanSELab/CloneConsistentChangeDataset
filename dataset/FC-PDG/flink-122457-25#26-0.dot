digraph {
4 [style = filled, label = "testListSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testMapSerialization(key,mapState)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ExecutionConfig executionConfig = new ExecutionConfig()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final KeyGroupRange keyGroupRange = new KeyGroupRange(0,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "longHeapKeyedStateBackend.setCurrentKey(key)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testMapSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "longHeapKeyedStateBackend.dispose()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend = new RocksDBKeyedStateBackendBuilder<>(\"no-op\",ClassLoader.getSystemClassLoader(),temporaryFolder.getRoot(),dbOptions,null,mock(),LongSerializer.INSTANCE,1,new KeyGroupRange(0,0),executionConfig,TestLocalRecoveryConfig.disabled(),RocksDBStateBackend.PriorityQueueStateType.HEAP,TtlTimeProvider.DEFAULT,new UnregisteredMetricsGroup(),Collections.emptyList(),AbstractStateBackend.getCompressionDecorator(executionConfig),new CloseableRegistry()).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "final InternalMapState<Long,VoidNamespace,Long,String> mapState = (InternalMapState<Long,VoidNamespace,Long,String>)longHeapKeyedStateBackend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,new MapStateDescriptor<>(\"test\",LongSerializer.INSTANCE,StringSerializer.INSTANCE))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final InternalListState<Long,VoidNamespace,Long> listState = longHeapKeyedStateBackend.createInternalState(VoidNamespaceSerializer.INSTANCE,new ListStateDescriptor<>(\"test\",LongSerializer.INSTANCE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "KvStateRequestSerializerTest.testListSerialization(key,listState)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RocksDBKeyedStateBackend<Long> longHeapKeyedStateBackend = new RocksDBKeyedStateBackendBuilder<>(\"no-op\",ClassLoader.getSystemClassLoader(),temporaryFolder.getRoot(),dbOptions,null,mock(),LongSerializer.INSTANCE,1,new KeyGroupRange(0,0),executionConfig,TestLocalRecoveryConfig.disabled(),RocksDBStateBackend.PriorityQueueStateType.HEAP,TtlTimeProvider.DEFAULT,new UnregisteredMetricsGroup(),Collections.emptyList(),RocksDBStateBackend.getCompressionDecorator(executionConfig),new CloseableRegistry()).build()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final long key = 0L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testListSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "dbOptions.setCreateIfMissing(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DBOptions dbOptions = PredefinedOptions.DEFAULT.createDBOptions()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final HeapKeyedStateBackend<Long> longHeapKeyedStateBackend = new HeapKeyedStateBackend<>(mock(),LongSerializer.INSTANCE,ClassLoader.getSystemClassLoader(),keyGroupRange.getNumberOfKeyGroups(),keyGroupRange,async,new ExecutionConfig(),TestLocalRecoveryConfig.disabled(),new HeapPriorityQueueSetFactory(keyGroupRange,keyGroupRange.getNumberOfKeyGroups(),128),TtlTimeProvider.DEFAULT,new CloseableRegistry())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->13 [style = bold, label=""];
5->3 [style = solid, label="key"];
8->10 [style = dashed, label="0"];
0->6 [style = bold, label=""];
5->15 [style = solid, label="key"];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
10->3 [style = bold, label=""];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
5->14 [style = bold, label=""];
9->7 [style = bold, label=""];
14->12 [style = solid, label="keyGroupRange"];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
2->9 [style = solid, label="listState"];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
2->13 [style = dashed, label="0"];
6->10 [style = bold, label=""];
14->12 [style = bold, label=""];
6->8 [style = bold, label=""];
16->5 [style = bold, label=""];
13->3 [style = solid, label="mapState"];
5->9 [style = solid, label="key"];
4->5 [style = bold, label=""];
9->3 [style = dashed, label="0"];
}
