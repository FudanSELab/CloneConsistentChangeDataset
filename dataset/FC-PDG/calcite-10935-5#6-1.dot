digraph {
17 [style = filled, label = "assertThat(b.toString(),is(maze))@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testScannableTableFunction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(Smalls.MAZE_METHOD)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final TableFunction table2 = TableFunctionImpl.create(SOLVE_METHOD)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:calcite:\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final StringBuilder b = new StringBuilder()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "b.append(resultSet.getString(1)).append(\"\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(MAZE_METHOD)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final String sql@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkMazeTableFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String maze@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1)) as t(s)\"@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "solution@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1))\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "schema.add(\"Maze\",table)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "resultSet.next()@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkMazeTableFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "SchemaPlus schema = rootSchema.add(\"s\",new AbstractSchema())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Boolean solution@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "final String result = \"S=abcde\" + \"S=xyz\" + \"S=generate(w=5, h=3, s=1)\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "schema.add(\"Solve\",table2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String maze@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "sql = \"select *\" + \"from table(\"s\".\"Solve\"(5, 3, 1)) as t(s)\"@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Boolean solution@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22->21 [style = dotted, label="true"];
0->15 [style = dotted, label="true"];
6->2 [style = dotted, label="false"];
23->28 [style = solid, label="sql"];
6->1 [style = dotted, label="true"];
9->27 [style = dashed, label="0"];
15->21 [style = dashed, label="0"];
9->17 [style = bold, label=""];
28->26 [style = bold, label=""];
11->19 [style = bold, label=""];
19->6 [style = bold, label=""];
21->6 [style = solid, label="solution"];
25->7 [style = bold, label=""];
24->18 [style = bold, label=""];
8->7 [style = bold, label=""];
14->26 [style = dashed, label="0"];
20->17 [style = solid, label="maze"];
6->2 [style = bold, label=""];
23->28 [style = bold, label=""];
6->1 [style = bold, label=""];
26->27 [style = bold, label=""];
7->5 [style = bold, label=""];
12->10 [style = bold, label=""];
22->18 [style = bold, label=""];
5->11 [style = solid, label="table2"];
22->20 [style = dotted, label="true"];
18->4 [style = bold, label=""];
10->8 [style = bold, label=""];
10->25 [style = bold, label=""];
1->16 [style = bold, label=""];
1->16 [style = solid, label="sql"];
3->6 [style = solid, label="solution"];
7->23 [style = bold, label=""];
8->7 [style = solid, label="table"];
9->13 [style = dotted, label="true"];
2->16 [style = solid, label="sql"];
4->12 [style = bold, label=""];
9->13 [style = bold, label=""];
28->27 [style = solid, label="resultSet"];
16->14 [style = bold, label=""];
14->9 [style = bold, label=""];
0->18 [style = bold, label=""];
5->11 [style = bold, label=""];
8->25 [style = dashed, label="0"];
13->9 [style = bold, label=""];
0->3 [style = dotted, label="true"];
25->7 [style = solid, label="table"];
26->27 [style = solid, label="result"];
15->17 [style = solid, label="maze"];
2->16 [style = bold, label=""];
}
