digraph {
6 [style = filled, label = "Assert.assertEquals(client.getChildren().forPath(\"/test/leases\").size(),1)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Future<Object> handle = Executors.newSingleThreadExecutor().submit(new Callable<Object>(){@Override public Object call(){s2.acquire()return null}})@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "InterProcessSemaphoreV2 semaphore = new InterProcessSemaphoreV2(client,\"/test\",1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Timing timing = new Timing()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Lease lease = s1.acquire(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testInterruptAcquire['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertNotNull(s3.acquire(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(debugWaitLatch))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertNull(semaphore.acquire(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertNotNull(lease)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "timing.sleepABit()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final CountDownLatch debugWaitLatch = s2.debugWaitLatch = new CountDownLatch(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final InterProcessSemaphoreV2 s3 = new InterProcessSemaphoreV2(client,\"/test\",1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNotNull(lease)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "final InterProcessSemaphoreV2 s2 = new InterProcessSemaphoreV2(client,\"/test\",1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "s1.returnLease(lease)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final InterProcessSemaphoreV2 s1 = new InterProcessSemaphoreV2(client,\"/test\",1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(timing.awaitLatch(debugWaitLatch))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testInterruptAcquire['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertNotNull(s3.acquire(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Timing timing = new Timing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(client.getChildren().forPath(\"/test/leases\").size(),1)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "handle.cancel(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertNotNull(semaphore.acquire(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->23 [style = dashed, label="0"];
9->20 [style = dashed, label="0"];
10->0 [style = solid, label="client"];
8->15 [style = bold, label=""];
3->1 [style = bold, label=""];
11->21 [style = solid, label="lease"];
0->17 [style = bold, label=""];
1->27 [style = dashed, label="0"];
21->15 [style = bold, label=""];
11->21 [style = bold, label=""];
11->14 [style = solid, label="lease"];
10->24 [style = solid, label="client"];
10->23 [style = solid, label="client"];
28->26 [style = bold, label=""];
8->21 [style = dashed, label="0"];
9->7 [style = bold, label=""];
15->16 [style = bold, label=""];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
26->24 [style = bold, label=""];
22->5 [style = bold, label=""];
17->22 [style = solid, label="debugWaitLatch"];
10->4 [style = solid, label="client"];
15->22 [style = bold, label=""];
4->0 [style = bold, label=""];
6->18 [style = dashed, label="0"];
6->14 [style = bold, label=""];
23->28 [style = bold, label=""];
25->27 [style = bold, label=""];
19->1 [style = bold, label=""];
10->13 [style = bold, label=""];
5->12 [style = bold, label=""];
27->10 [style = bold, label=""];
10->7 [style = solid, label="client"];
11->8 [style = solid, label="lease"];
12->18 [style = bold, label=""];
13->23 [style = bold, label=""];
16->5 [style = bold, label=""];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
20->7 [style = bold, label=""];
1->10 [style = bold, label=""];
17->16 [style = solid, label="debugWaitLatch"];
18->14 [style = bold, label=""];
14->20 [style = bold, label=""];
16->22 [style = dashed, label="0"];
13->2 [style = bold, label=""];
17->11 [style = bold, label=""];
10->2 [style = solid, label="client"];
}
