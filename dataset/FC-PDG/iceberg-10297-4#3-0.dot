digraph {
28 [style = filled, label = "i < expected.size()@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Schema nestedSchema = new Schema(optional(1,\"nested\",SUPPORTED_PRIMITIVES.asStruct()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Table table = tables.create(SUPPORTED_PRIMITIVES,spec,location.toString())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(location.toString()).collectAsList()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "HadoopTables tables = new HadoopTables(spark.sessionState().newHadoopConf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestHelpers.assertEqualsSafe(nestedSchema.asStruct(),expected.get(i),actual.get(i))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sourceDF.write().format(\"iceberg\").mode(\"append\").save(location.toString())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String sourceLocation = temp.newFolder(\"source_table\").toString()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assume.assumeTrue(\"ORC can't project nested partition values\",!format.equalsIgnoreCase(\"orc\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Table table = tables.create(nestedSchema,spec,location.toString())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File location = new File(parent,\"test\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PartitionSpec spec = PartitionSpec.builderFor(nestedSchema).identity(\"nested.\" + column).build()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNestedPartitionValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Number of rows should match\",expected.size(),actual.size())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{TestTables.clearTables()}@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testPartitionValueTypes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testNestedPartitionValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "source.newAppend().appendFile(DataFiles.fromInputFile(Files.localInput(avroData),10)).commit()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "table.updateProperties().set(TableProperties.DEFAULT_FILE_FORMAT,format).commit()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "File parent = temp.newFolder(desc)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "appender.addAll(expected)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "appender.addAll(expected)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String(( columnNames = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c40775@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Dataset<Row> sourceDF = spark.read().format(\"iceberg\").load(sourceLocation)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(avroData.delete())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(avroData.delete())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<GenericData.Record> expected = RandomData.generateList(source.schema(),2,128735L)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestHelpers.assertEqualsSafe(SUPPORTED_PRIMITIVES.asStruct(),expected.get(i),actual.get(i))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "File dataFolder = new File(location,\"data\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i += 1@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Table source = tables.create(nestedSchema,sourceLocation)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(\"mkdirs should succeed\",dataFolder.mkdirs())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Dataset<Row> sourceDF = spark.read().format(\"iceberg\").load(sourceLocation)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String desc = \"partition_by_\" + SUPPORTED_PRIMITIVES.findType(column).toString()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String(( columnNames = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c408a4@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Table source = tables.create(SUPPORTED_PRIMITIVES,sourceLocation)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "PartitionSpec spec = PartitionSpec.builderFor(SUPPORTED_PRIMITIVES).identity(column).build()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File avroData = temp.newFile(\"data.avro\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{TestTables.clearTables()}@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
5->3 [style = bold, label=""];
15->5 [style = dotted, label="true"];
16->36 [style = bold, label=""];
17->16 [style = solid, label="sourceLocation"];
23->28 [style = solid, label="i"];
28->15 [style = bold, label=""];
13->24 [style = bold, label=""];
0->37 [style = dashed, label="0"];
18->0 [style = solid, label="nestedSchema"];
3->5 [style = solid, label="i"];
24->37 [style = solid, label="spec"];
5->3 [style = dashed, label="0"];
28->3 [style = dotted, label="true"];
10->0 [style = solid, label="spec"];
28->5 [style = solid, label="i"];
28->38 [style = bold, label=""];
17->26 [style = solid, label="sourceLocation"];
28->15 [style = dotted, label="true"];
23->3 [style = solid, label="i"];
39->14 [style = bold, label=""];
3->15 [style = solid, label="i"];
4->12 [style = solid, label="location"];
3->15 [style = bold, label=""];
30->34 [style = bold, label=""];
16->20 [style = solid, label="sourceLocation"];
20->1 [style = bold, label=""];
11->19 [style = bold, label=""];
15->19 [style = bold, label=""];
36->1 [style = bold, label=""];
26->11 [style = bold, label=""];
36->30 [style = solid, label="expected"];
15->5 [style = bold, label=""];
38->19 [style = bold, label=""];
28->32 [style = bold, label=""];
38->19 [style = solid, label="desc"];
15->3 [style = solid, label="i"];
23->28 [style = bold, label=""];
26->38 [style = bold, label=""];
19->4 [style = solid, label="parent"];
12->13 [style = bold, label=""];
7->22 [style = bold, label=""];
21->26 [style = bold, label=""];
15->3 [style = dotted, label="true"];
0->14 [style = bold, label=""];
20->16 [style = dashed, label="0"];
31->35 [style = bold, label=""];
16->11 [style = solid, label="sourceLocation"];
4->12 [style = solid, label="parent"];
34->26 [style = bold, label=""];
15->28 [style = bold, label=""];
12->13 [style = solid, label="location"];
15->9 [style = bold, label=""];
28->15 [style = solid, label="i"];
10->0 [style = bold, label=""];
24->37 [style = bold, label=""];
35->17 [style = bold, label=""];
22->17 [style = bold, label=""];
4->12 [style = bold, label=""];
33->31 [style = bold, label=""];
27->23 [style = bold, label=""];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
19->4 [style = bold, label=""];
28->3 [style = bold, label=""];
29->22 [style = bold, label=""];
18->20 [style = solid, label="nestedSchema"];
15->28 [style = solid, label="i"];
6->7 [style = bold, label=""];
2->30 [style = bold, label=""];
19->4 [style = solid, label="desc"];
16->20 [style = bold, label=""];
2->25 [style = bold, label=""];
8->27 [style = bold, label=""];
10->24 [style = dashed, label="0"];
37->39 [style = bold, label=""];
17->18 [style = bold, label=""];
17->16 [style = bold, label=""];
25->21 [style = bold, label=""];
1->21 [style = solid, label="expected"];
18->16 [style = bold, label=""];
}
