digraph {
0 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testTooManyQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CountDownLatch waitOneScheduled = new CountDownLatch(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTooManyQueryInLaneImplicitFromDurationThreshold['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final QueryScheduler scheduler = new QueryScheduler(40,new ThresholdBasedQueryPrioritizationStrategy(null,\"P90D\",null,null),new HiLoQueryLaningStrategy(1),new ServerConfig())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CountDownLatch waitTwoStarted = new CountDownLatch(2)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "waitAllFinished.await()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "createScheduledQueryResource(laningScheduler,Collections.emptyList(),ImmutableList.of(waitTwoScheduled))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "waitTwoScheduled.await()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expectPermissiveHappyPathAuth()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final QueryScheduler laningScheduler = new QueryScheduler(2,ManualQueryPrioritizationStrategy.INSTANCE,NoQueryLaningStrategy.INSTANCE,new ServerConfig())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "waitOneScheduled.await()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY_SMALLISH_INTERVAL,waitAllFinished,null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final CountDownLatch waitTwoScheduled = new CountDownLatch(2)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "waitAllFinished.await()@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createScheduledQueryResource(scheduler,ImmutableList.of(waitTwoStarted),ImmutableList.of(waitOneScheduled))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertResponseAndCountdownOrBlockForever(SIMPLE_TIMESERIES_QUERY,waitAllFinished,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final CountDownLatch waitAllFinished = new CountDownLatch(3)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testTooManyQueryInLaneImplicitFromDurationThreshold['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->6 [style = bold, label=""];
3->8 [style = solid, label="waitTwoStarted"];
3->10 [style = bold, label=""];
2->1 [style = solid, label="waitAllFinished"];
3->20 [style = dashed, label="0"];
2->5 [style = solid, label="waitAllFinished"];
10->2 [style = bold, label=""];
2->4 [style = bold, label=""];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
15->12 [style = bold, label=""];
9->20 [style = bold, label=""];
9->3 [style = bold, label=""];
12->1 [style = bold, label=""];
4->8 [style = bold, label=""];
14->0 [style = bold, label=""];
17->0 [style = solid, label="waitAllFinished"];
4->8 [style = solid, label="scheduler"];
1->11 [style = bold, label=""];
20->19 [style = solid, label="waitTwoScheduled"];
10->8 [style = solid, label="waitOneScheduled"];
2->19 [style = bold, label=""];
8->19 [style = dashed, label="0"];
17->14 [style = solid, label="waitAllFinished"];
6->5 [style = bold, label=""];
20->17 [style = bold, label=""];
5->12 [style = bold, label=""];
2->0 [style = solid, label="waitAllFinished"];
19->14 [style = bold, label=""];
13->9 [style = bold, label=""];
17->15 [style = solid, label="waitAllFinished"];
0->18 [style = bold, label=""];
2->19 [style = solid, label="laningScheduler"];
17->2 [style = bold, label=""];
16->9 [style = bold, label=""];
18->15 [style = bold, label=""];
}
