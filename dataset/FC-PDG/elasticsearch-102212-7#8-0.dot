digraph {
23 [style = filled, label = "final float balanceThreshold = 1.0f@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertIndexBalance(clusterState.getRoutingTable(),clusterState.getRoutingNodes(),numberOfNodes,numberOfIndices,numberOfReplicas,numberOfShards,balanceThreshold)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "settings.put(BalancedShardsAllocator.SHARD_BALANCE_FACTOR_SETTING.getKey(),replicaBalance)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertIndexBalance(clusterState.getRoutingTable(),clusterState.getRoutingNodes(),numberOfNodes + 1,numberOfIndices,numberOfReplicas,numberOfShards,balanceThreshold)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testReplicaBalance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertIndexBalance(clusterState.getRoutingTable(),clusterState.getRoutingNodes(),(numberOfNodes + 1) - (numberOfNodes + 1) / 2,numberOfIndices,numberOfReplicas,numberOfShards,balanceThreshold)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertReplicaBalance(clusterState.getRoutingNodes(),numberOfNodes + 1,numberOfIndices,numberOfReplicas,numberOfShards,balanceThreshold)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "settings.put(BalancedShardsAllocator.INDEX_BALANCE_FACTOR_SETTING.getKey(),indexBalance)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertReplicaBalance(clusterState.getRoutingNodes(),numberOfNodes,numberOfIndices,numberOfReplicas,numberOfShards,balanceThreshold)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertIndexBalance(clusterState.getRoutingTable(),clusterState.getRoutingNodes(),(numberOfNodes + 1) - (numberOfNodes + 1) / 2,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertIndexBalance(clusterState.getRoutingTable(),clusterState.getRoutingNodes(),numberOfNodes + 1,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(),balanceThreshold)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "settings.put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.ALWAYS.toString())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Settings.Builder settings = Settings.builder()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testIndexBalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final float indexBalance = 1.0f@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final float balanceTreshold = 1.0f@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "ClusterState clusterState = initCluster(strategy)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final float replicaBalance = 1.0f@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(),balanceTreshold)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "clusterState = addNode(clusterState,strategy)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertIndexBalance(clusterState.getRoutingTable(),clusterState.getRoutingNodes(),numberOfNodes,numberOfIndices,numberOfReplicas,numberOfShards,balanceTreshold)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertReplicaBalance(clusterState.getRoutingNodes(),numberOfNodes + 1 - (numberOfNodes + 1) / 2,numberOfIndices,numberOfReplicas,numberOfShards,balanceThreshold)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final float replicaBalance = 0.0f@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "clusterState = removeNodes(clusterState,strategy)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AllocationService strategy = createAllocationService(settings.build(),new TestGatewayAllocator())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final float balanceThreshold = 1.0f@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "testIndexBalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "settings.put(BalancedShardsAllocator.THRESHOLD_SETTING.getKey(),balanceThreshold)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final float indexBalance = 0.0f@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
13->10 [style = bold, label=""];
22->26 [style = bold, label=""];
1->2 [style = solid, label="balanceTreshold"];
26->9 [style = solid, label="replicaBalance"];
1->13 [style = solid, label="balanceTreshold"];
3->24 [style = bold, label=""];
10->14 [style = bold, label=""];
23->24 [style = solid, label="balanceThreshold"];
15->21 [style = bold, label=""];
0->17 [style = bold, label=""];
14->15 [style = solid, label="clusterState"];
17->18 [style = solid, label="balanceThreshold"];
17->21 [style = solid, label="balanceThreshold"];
14->19 [style = bold, label=""];
23->27 [style = solid, label="balanceThreshold"];
0->26 [style = dashed, label="0"];
13->25 [style = dashed, label="0"];
3->16 [style = bold, label=""];
12->7 [style = bold, label=""];
27->15 [style = bold, label=""];
15->5 [style = bold, label=""];
11->15 [style = bold, label=""];
0->9 [style = solid, label="replicaBalance"];
8->0 [style = bold, label=""];
8->22 [style = dashed, label="0"];
20->8 [style = bold, label=""];
17->12 [style = bold, label=""];
1->17 [style = dashed, label="0"];
5->28 [style = dashed, label="0"];
9->18 [style = bold, label=""];
10->3 [style = solid, label="strategy"];
3->2 [style = bold, label=""];
18->10 [style = bold, label=""];
15->28 [style = bold, label=""];
8->6 [style = solid, label="indexBalance"];
23->28 [style = solid, label="balanceThreshold"];
11->19 [style = dashed, label="0"];
0->1 [style = bold, label=""];
2->16 [style = dashed, label="0"];
9->25 [style = bold, label=""];
26->23 [style = bold, label=""];
1->5 [style = solid, label="balanceTreshold"];
7->6 [style = bold, label=""];
10->15 [style = solid, label="strategy"];
1->12 [style = bold, label=""];
17->16 [style = solid, label="balanceThreshold"];
5->21 [style = dashed, label="0"];
4->8 [style = bold, label=""];
22->6 [style = solid, label="indexBalance"];
25->10 [style = bold, label=""];
23->12 [style = bold, label=""];
10->14 [style = solid, label="strategy"];
15->3 [style = solid, label="clusterState"];
14->27 [style = bold, label=""];
28->3 [style = bold, label=""];
29->22 [style = bold, label=""];
13->18 [style = dashed, label="0"];
6->9 [style = bold, label=""];
19->15 [style = bold, label=""];
23->25 [style = solid, label="balanceThreshold"];
11->27 [style = dashed, label="0"];
17->19 [style = solid, label="balanceThreshold"];
2->24 [style = dashed, label="0"];
14->11 [style = bold, label=""];
1->23 [style = dashed, label="0"];
1->11 [style = solid, label="balanceTreshold"];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
}
