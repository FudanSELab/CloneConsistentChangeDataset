digraph {
6 [style = filled, label = "Map<String,String> expectInstanceStateMap = new HashMap<String,String>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "command = \"--zkSvr \" + ZK_ADDR + \" --enableInstance \" + clusterName + \" \" + disableNode + \" true\"@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < n@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "controller.syncStart()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "participants(i(.syncStart()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "HelixClusterVerifier _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "ZKHelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,baseAccessor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "IdealState idealState = accessor.getProperty(keyBuilder.idealStates(\"TestDB0\"))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final int n = 5@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "Assert.assertTrue(result)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectStateMap.put(\".*\",expectInstanceStateMap)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertTrue(result,disableNode + \" should NOT be in OFFLINE\")@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(result,disableNode + \" should be in OFFLINE\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String command = \"--zkSvr \" + ZK_ADDR + \" --enableInstance \" + clusterName + \" \" + disableNode + \" false\"@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expectInstanceStateMap.put(disableNode,\"OFFLINE\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(result,disableNode + \" should be in OFFLINE\")@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ZkHelixClusterVerifier _clusterVerifier = new BestPossibleExternalViewVerifier.Builder(clusterName).setZkAddr(ZK_ADDR).build()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "String disableNode = \"localhost_12919\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertTrue(result,disableNode + \" should NOT be in OFFLINE\")@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "Assert.assertTrue(result)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "i++@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "accessor.setProperty(keyBuilder.idealStates(\"TestDB0\"),idealState)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "idealState.setRebalanceMode(RebalanceMode.CUSTOMIZED)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\" \"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,8,n,3,\"MasterSlave\",true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ZkBaseDataAccessor<ZNRecord> baseAccessor = new ZkBaseDataAccessor<ZNRecord>(_gZkClient)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String disableNode = \"localhost_12918\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "ClusterSetup.processCommandLineArgs(command.split(\"\s+\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<String,Map<String,String>>()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,Map<String,String>> expectStateMap = new HashMap<String,Map<String,String>>()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int i = 0@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testDisableNodeAutoIS['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"!=\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "participants(i(.syncStop()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verify())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "controller.syncStop()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testDisableNodeCustomIS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "Assert.assertTrue(result)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i < 5@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "result = ZkTestHelper.verifyState(_gZkClient,clusterName,\"TestDB0\",expectStateMap,\"==\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testDisableNodeCustomIS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14->3 [style = solid, label="clusterName"];
40->39 [style = dotted, label="true"];
14->9 [style = solid, label="clusterName"];
57->9 [style = solid, label="disableNode"];
57->18 [style = solid, label="disableNode"];
44->35 [style = bold, label=""];
25->3 [style = solid, label="expectStateMap"];
22->60 [style = dashed, label="0"];
7->35 [style = bold, label=""];
34->18 [style = bold, label=""];
14->4 [style = solid, label="clusterName"];
41->54 [style = solid, label="expectStateMap"];
30->49 [style = bold, label=""];
52->59 [style = bold, label=""];
40->38 [style = bold, label=""];
33->49 [style = dashed, label="0"];
38->39 [style = bold, label=""];
9->16 [style = bold, label=""];
59->12 [style = bold, label=""];
58->53 [style = solid, label="result"];
31->52 [style = dashed, label="0"];
39->51 [style = bold, label=""];
24->11 [style = bold, label=""];
35->8 [style = bold, label=""];
39->38 [style = bold, label=""];
0->40 [style = bold, label=""];
30->43 [style = dotted, label="true"];
17->44 [style = bold, label=""];
60->55 [style = solid, label="result"];
54->9 [style = solid, label="result"];
43->27 [style = solid, label="i"];
39->29 [style = bold, label=""];
15->10 [style = solid, label="i"];
0->38 [style = solid, label="i"];
38->61 [style = solid, label="i"];
19->42 [style = bold, label=""];
22->25 [style = bold, label=""];
14->12 [style = solid, label="clusterName"];
55->41 [style = bold, label=""];
61->39 [style = bold, label=""];
41->24 [style = solid, label="expectInstanceStateMap"];
11->54 [style = dashed, label="0"];
27->30 [style = bold, label=""];
18->56 [style = bold, label=""];
41->6 [style = bold, label=""];
30->58 [style = bold, label=""];
14->51 [style = solid, label="clusterName"];
14->52 [style = solid, label="clusterName"];
26->13 [style = bold, label=""];
3->20 [style = solid, label="result"];
39->29 [style = dotted, label="true"];
21->4 [style = solid, label="baseAccessor"];
60->55 [style = bold, label=""];
1->7 [style = solid, label="n"];
31->46 [style = dashed, label="0"];
23->37 [style = bold, label=""];
47->25 [style = bold, label=""];
13->14 [style = solid, label="className"];
30->10 [style = bold, label=""];
13->5 [style = bold, label=""];
15->30 [style = solid, label="i"];
39->61 [style = dotted, label="true"];
42->7 [style = bold, label=""];
48->13 [style = bold, label=""];
14->58 [style = solid, label="clusterName"];
61->39 [style = solid, label="i"];
31->3 [style = bold, label=""];
30->28 [style = dotted, label="true"];
14->35 [style = solid, label="clusterName"];
4->23 [style = bold, label=""];
40->29 [style = bold, label=""];
21->4 [style = bold, label=""];
29->61 [style = bold, label=""];
49->45 [style = bold, label=""];
8->15 [style = bold, label=""];
30->33 [style = bold, label=""];
10->43 [style = bold, label=""];
27->30 [style = solid, label="i"];
52->59 [style = solid, label="result"];
14->54 [style = solid, label="clusterName"];
31->52 [style = bold, label=""];
30->10 [style = dotted, label="true"];
25->41 [style = bold, label=""];
56->60 [style = bold, label=""];
10->43 [style = solid, label="instanceName"];
57->19 [style = bold, label=""];
40->38 [style = dotted, label="true"];
6->24 [style = bold, label=""];
11->32 [style = bold, label=""];
57->24 [style = solid, label="disableNode"];
50->13 [style = bold, label=""];
34->45 [style = dashed, label="0"];
32->9 [style = bold, label=""];
6->11 [style = solid, label="expectInstanceStateMap"];
40->39 [style = bold, label=""];
58->53 [style = bold, label=""];
1->57 [style = bold, label=""];
37->44 [style = solid, label="idealState"];
5->14 [style = solid, label="methodName"];
14->29 [style = solid, label="clusterName"];
41->12 [style = solid, label="expectStateMap"];
16->31 [style = bold, label=""];
14->19 [style = solid, label="clusterName"];
14->43 [style = solid, label="clusterName"];
1->2 [style = bold, label=""];
14->7 [style = solid, label="clusterName"];
38->40 [style = bold, label=""];
11->32 [style = solid, label="result"];
11->54 [style = bold, label=""];
46->3 [style = bold, label=""];
45->18 [style = bold, label=""];
16->46 [style = bold, label=""];
2->18 [style = solid, label="disableNode"];
22->47 [style = dashed, label="0"];
36->47 [style = bold, label=""];
2->19 [style = bold, label=""];
25->11 [style = solid, label="expectStateMap"];
1->30 [style = solid, label="n"];
27->10 [style = solid, label="i"];
57->16 [style = solid, label="disableNode"];
53->18 [style = bold, label=""];
30->27 [style = dotted, label="true"];
2->57 [style = dashed, label="0"];
2->32 [style = solid, label="disableNode"];
37->17 [style = bold, label=""];
0->40 [style = solid, label="i"];
12->0 [style = solid, label="result"];
18->36 [style = bold, label=""];
15->30 [style = bold, label=""];
38->40 [style = solid, label="i"];
5->14 [style = bold, label=""];
12->0 [style = bold, label=""];
57->0 [style = solid, label="disableNode"];
34->53 [style = dashed, label="0"];
14->1 [style = bold, label=""];
43->28 [style = bold, label=""];
14->60 [style = solid, label="clusterName"];
3->20 [style = bold, label=""];
36->56 [style = dashed, label="0"];
2->6 [style = solid, label="disableNode"];
14->18 [style = solid, label="clusterName"];
54->9 [style = bold, label=""];
20->12 [style = bold, label=""];
14->16 [style = solid, label="clusterName"];
7->21 [style = bold, label=""];
38->39 [style = solid, label="i"];
28->27 [style = bold, label=""];
14->11 [style = solid, label="clusterName"];
2->9 [style = solid, label="disableNode"];
2->20 [style = solid, label="disableNode"];
33->34 [style = bold, label=""];
36->22 [style = bold, label=""];
}
