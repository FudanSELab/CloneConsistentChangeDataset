digraph {
45 [style = filled, label = "assertEquals(1,borrows)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(thrown).isInstanceOf()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(4,invalidateConnections)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "ServerOperationException expected@@@42@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(4,exchanges)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "Throwable thrown = catchThrowable(null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "OpExecutorImpl exec = new OpExecutorImpl(manager,queueManager,endpointManager,riTracker,3,10,PoolFactory.DEFAULT_SERVER_CONNECTION_TIMEOUT,cancelCriterion,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(invalidateConnections).isEqualTo(6)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(0,invalidateConnections)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(1,returns)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(1,borrows)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "OpExecutorImpl exec = new OpExecutorImpl(manager,queueManager,endpointManager,riTracker,-1,10,PoolFactory.DEFAULT_SERVER_CONNECTION_TIMEOUT,cancelCriterion,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testExecuteOncePerServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,returns)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "manager.numServers = 5@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fail(\"Should have got an exception\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(3,exchanges)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new ServerOperationException(\"Something didn't work\")}})@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "fail(\"Should have got an exception\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Object result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){return \"hello\"}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testExecute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "{}@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(0,serverCrashes)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(serverCrashes).isEqualTo(6)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "fail(\"Should have got an exception\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(1,borrows)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(1,borrows)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(6,invalidateConnections)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertThat(borrows).isEqualTo(1)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(1,returns)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(3,exchanges)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(0,serverCrashes)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(0,invalidateConnections)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(6,serverCrashes)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(0,serverCrashes)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "{}@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"hello\",result)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "reset()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fail(\"Should have got an exception\")@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertEquals(1,returns)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "{}@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(4,serverCrashes)@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new IOException(\"Something didn't work\")}})@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(1,borrows)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(4,invalidateConnections)@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ServerConnectivityException expected@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new SocketTimeoutException()}})@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "reset()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new IOException(\"Something didn't work\")}})@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(1,returns)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ServerConnectivityException expected@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testExecuteOncePerServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "ServerConnectivityException expected@@@58@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(returns).isEqualTo(1)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ExecutablePool exec = new OpExecutorImpl(manager,queueManager,endpointManager,riTracker,-1,10,PoolFactory.DEFAULT_SERVER_CONNECTION_TIMEOUT,cancelCriterion,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "{}@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "reset()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(exchanges).isEqualTo(4)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->3 [style = bold, label=""];
46->38 [style = bold, label=""];
15->13 [style = bold, label=""];
1->8 [style = bold, label=""];
39->46 [style = bold, label=""];
48->41 [style = bold, label=""];
37->36 [style = bold, label=""];
4->16 [style = dashed, label="0"];
40->56 [style = bold, label=""];
21->27 [style = bold, label=""];
2->6 [style = bold, label=""];
8->18 [style = bold, label=""];
57->55 [style = bold, label=""];
24->29 [style = solid, label="result"];
11->4 [style = bold, label=""];
12->20 [style = bold, label=""];
28->54 [style = bold, label=""];
25->53 [style = bold, label=""];
53->40 [style = bold, label=""];
6->0 [style = bold, label=""];
24->29 [style = bold, label=""];
16->17 [style = bold, label=""];
29->49 [style = bold, label=""];
45->28 [style = bold, label=""];
56->57 [style = bold, label=""];
1->44 [style = dashed, label="0"];
32->26 [style = bold, label=""];
17->19 [style = bold, label=""];
50->39 [style = bold, label=""];
49->22 [style = bold, label=""];
26->21 [style = bold, label=""];
23->42 [style = bold, label=""];
1->13 [style = dashed, label="0"];
7->9 [style = bold, label=""];
55->48 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
27->46 [style = bold, label=""];
5->48 [style = dashed, label="0"];
19->14 [style = bold, label=""];
0->42 [style = dashed, label="0"];
51->55 [style = bold, label=""];
11->31 [style = dashed, label="0"];
14->12 [style = bold, label=""];
31->30 [style = bold, label=""];
54->33 [style = bold, label=""];
38->25 [style = bold, label=""];
9->3 [style = bold, label=""];
47->44 [style = bold, label=""];
33->32 [style = bold, label=""];
36->45 [style = bold, label=""];
13->8 [style = bold, label=""];
44->24 [style = bold, label=""];
35->34 [style = bold, label=""];
10->1 [style = bold, label=""];
22->35 [style = bold, label=""];
8->11 [style = bold, label=""];
34->43 [style = bold, label=""];
52->51 [style = bold, label=""];
41->23 [style = bold, label=""];
6->23 [style = dashed, label="0"];
30->45 [style = bold, label=""];
43->31 [style = bold, label=""];
18->16 [style = bold, label=""];
}
