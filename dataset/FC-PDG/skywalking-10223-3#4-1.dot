digraph {
21 [style = filled, label = "stream.processor().equals()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "notify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stream.processor().equals()@@@17@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new UnexpectedException(\"Stream annotation listener could only parse the class present stream annotation.\")@@@25@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MetricsStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "throw new UnexpectedException(\"Stream annotation listener could only parse the class present stream annotation.\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "notify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "stream.processor().equals()@@@8@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "throw new UnexpectedException(\"Unknown stream processor.\")@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "NoneStreamingProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stream.processor().equals()@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "notify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RecordStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Class aClass@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InventoryStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "stream.processor().equals()@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "RecordStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "stream.processor().equals()@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "aClass.isAnnotationPresent()@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "stream.processor().equals()@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "TopNStreamProcessor.getInstance().create(moduleDefineHolder,stream,aClass)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Stream stream = (Stream)aClass.getAnnotation()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->5 [style = dotted, label="true"];
8->16 [style = bold, label=""];
10->6 [style = dotted, label="false"];
15->10 [style = bold, label=""];
3->1 [style = bold, label=""];
2->1 [style = solid, label="stream"];
7->10 [style = bold, label=""];
3->4 [style = dotted, label="false"];
0->5 [style = solid, label="aClass"];
20->0 [style = dotted, label="true"];
2->3 [style = bold, label=""];
18->19 [style = dotted, label="true"];
18->19 [style = bold, label=""];
2->19 [style = solid, label="stream"];
4->21 [style = bold, label=""];
10->3 [style = dotted, label="true"];
0->17 [style = solid, label="aClass"];
11->5 [style = dotted, label="true"];
21->17 [style = dotted, label="true"];
0->1 [style = solid, label="aClass"];
7->0 [style = dotted, label="true"];
15->0 [style = dotted, label="true"];
4->8 [style = dotted, label="false"];
10->6 [style = bold, label=""];
3->4 [style = bold, label=""];
21->18 [style = bold, label=""];
14->13 [style = dotted, label="true"];
20->10 [style = bold, label=""];
10->14 [style = dotted, label="true"];
6->12 [style = dashed, label="0"];
10->12 [style = dotted, label="false"];
2->17 [style = solid, label="stream"];
11->5 [style = bold, label=""];
2->5 [style = solid, label="stream"];
0->9 [style = solid, label="aClass"];
2->13 [style = solid, label="stream"];
4->21 [style = dotted, label="false"];
0->19 [style = solid, label="aClass"];
10->2 [style = dotted, label="true"];
18->8 [style = dotted, label="false"];
10->12 [style = bold, label=""];
2->14 [style = bold, label=""];
2->9 [style = solid, label="stream"];
8->9 [style = bold, label=""];
4->8 [style = bold, label=""];
10->2 [style = bold, label=""];
0->13 [style = solid, label="aClass"];
18->8 [style = bold, label=""];
8->9 [style = dotted, label="true"];
14->13 [style = bold, label=""];
3->14 [style = dashed, label="0"];
21->18 [style = dotted, label="false"];
14->11 [style = dotted, label="false"];
14->11 [style = bold, label=""];
3->1 [style = dotted, label="true"];
4->5 [style = bold, label=""];
21->17 [style = bold, label=""];
8->16 [style = dotted, label="false"];
}
