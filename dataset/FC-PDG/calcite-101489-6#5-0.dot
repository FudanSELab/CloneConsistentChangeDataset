digraph {
16 [style = filled, label = "assertThat(DateRangeRules.extractTimeUnits(f.literal(1)),is(set()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "checkDateRange(f,f.ge(f.exYear,f.literal(2014)),is(\">=($9, 2014-01-01)\"))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RexNode e = f.eq(f.literal(2014),f.exYear)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "checkDateRange(f,f.ne(f.exYear,f.literal(2014)),is(\"<>(EXTRACT(FLAG(YEAR), $9), 2014)\"))@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testExtractYearFromTimestampColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final Fixture2 f = new Fixture2()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkDateRange(f,f.le(f.exYear,f.literal(2014)),is(\"<($9, 2015-01-01)\"))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkDateRange(f,f.eq(f.exYear,f.literal(2014)),is(\"AND(>=($9, 2014-01-01), <($9, 2015-01-01))\"))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkDateRange(f,e,is(\"AND(>=($9, 2014-01-01), <($9, 2015-01-01))\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testExtractYearFromDateColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testExtractYearFromTimestampColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "checkDateRange(f,f.eq(f.exYearTs,f.literal(2014)),is(\"AND(>=($9, 2014-01-01 00:00:00), <($9, 2015-01-01 00:00:00))\"))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "checkDateRange(f,f.gt(f.exYearTs,f.literal(2014)),is(\">=($9, 2015-01-01 00:00:00)\"))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "checkDateRange(f,f.le(f.exYearTs,f.literal(2014)),is(\"<($9, 2015-01-01 00:00:00)\"))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertThat(DateRangeRules.extractTimeUnits(f.dec),is(set()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "checkDateRange(f,f.ge(f.exYearTs,f.literal(2014)),is(\">=($9, 2014-01-01 00:00:00)\"))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "checkDateRange(f,f.ne(f.exYearTs,f.literal(2014)),is(\"<>(EXTRACT(FLAG(YEAR), $9), 2014)\"))@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertThat(DateRangeRules.extractTimeUnits(e),is(set(TimeUnitRange.YEAR)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "checkDateRange(f,f.lt(f.exYearTs,f.literal(2014)),is(\"<($9, 2014-01-01 00:00:00)\"))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "checkDateRange(f,f.lt(f.exYear,f.literal(2014)),is(\"<($9, 2014-01-01)\"))@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "checkDateRange(f,f.gt(f.exYear,f.literal(2014)),is(\">=($9, 2015-01-01)\"))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->11 [style = dashed, label="0"];
0->4 [style = bold, label=""];
3->2 [style = bold, label=""];
15->18 [style = bold, label=""];
2->7 [style = solid, label="f"];
6->14 [style = dashed, label="0"];
10->9 [style = bold, label=""];
9->13 [style = bold, label=""];
19->15 [style = bold, label=""];
2->10 [style = solid, label="f"];
2->4 [style = solid, label="f"];
14->12 [style = bold, label=""];
2->1 [style = solid, label="f"];
5->9 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
2->13 [style = solid, label="f"];
12->10 [style = bold, label=""];
2->19 [style = bold, label=""];
5->0 [style = bold, label=""];
13->11 [style = bold, label=""];
2->6 [style = solid, label="f"];
8->2 [style = bold, label=""];
17->6 [style = bold, label=""];
2->17 [style = solid, label="f"];
2->11 [style = solid, label="f"];
18->16 [style = bold, label=""];
2->0 [style = solid, label="f"];
1->12 [style = dashed, label="0"];
2->14 [style = solid, label="f"];
2->6 [style = bold, label=""];
7->5 [style = bold, label=""];
2->14 [style = bold, label=""];
2->5 [style = solid, label="f"];
16->17 [style = bold, label=""];
20->2 [style = bold, label=""];
1->7 [style = bold, label=""];
2->9 [style = solid, label="f"];
2->12 [style = solid, label="f"];
6->1 [style = bold, label=""];
7->10 [style = dashed, label="0"];
19->17 [style = solid, label="e"];
19->15 [style = solid, label="e"];
}
