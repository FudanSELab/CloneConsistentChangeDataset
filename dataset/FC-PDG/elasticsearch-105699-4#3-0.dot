digraph {
1 [style = filled, label = "transport.handleResponse(capturedRequest.requestId,response)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setState(clusterService,ClusterStateCreationUtils.state(localNode,localNode,allNodes))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "new Action(Settings.EMPTY,\"testAction\",transportService,clusterService,threadPool).execute(request,listener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(listener.isDone())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(listener.isDone())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "listener.get()@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "setState(clusterService,ClusterStateCreationUtils.state(localNode,localNode,allNodes))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Request request = new Request().masterNodeTimeout(TimeValue.timeValueHours(1))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"testAction\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertFalse(listener.isDone())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PlainActionFuture<Response> listener = new PlainActionFuture<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CapturingTransport.CapturedRequest capturedRequest = transport.capturedRequests()(0(@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(listener.get(),equalTo(response))@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "new Action(Settings.EMPTY,\"testAction\",transportService,clusterService,threadPool){@Override protected void masterOperation(Request request,ClusterState state,ActionListener<Response> listener){setState(clusterService,ClusterStateCreationUtils.state(localNode,remoteNode,allNodes))Exception failure = randomBoolean()? new Discovery.FailedToCommitClusterStateException(\"Fake error\"): new NotMasterException(\"Fake error\")listener.onFailure(failure)}}.execute(request,listener)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(capturedRequest.request,equalTo(request))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(capturedRequest.action,equalTo(\"internal:testAction\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "PlainActionFuture<Response> listener = new PlainActionFuture<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(capturedRequest.node.isMasterNode())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testMasterBecomesAvailable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testMasterFailoverAfterStepDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(transport.capturedRequests().length,equalTo(1))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testMasterFailoverAfterStepDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "new Action(Settings.EMPTY,\"internal:testAction\",transportService,clusterService,threadPool){@Override protected void masterOperation(Request request,ClusterState state,ActionListener<Response> listener){setState(clusterService,ClusterStateCreationUtils.state(localNode,remoteNode,allNodes))Exception failure = randomBoolean()? new Discovery.FailedToCommitClusterStateException(\"Fake error\"): new NotMasterException(\"Fake error\")listener.onFailure(failure)}}.execute(request,listener)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "setState(clusterService,ClusterStateCreationUtils.state(localNode,null,allNodes))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Request request = new Request()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->3 [style = bold, label=""];
6->11 [style = solid, label="response"];
6->1 [style = solid, label="response"];
19->18 [style = bold, label=""];
6->20 [style = solid, label="listener"];
12->5 [style = bold, label=""];
17->6 [style = bold, label=""];
7->10 [style = bold, label=""];
12->16 [style = solid, label="request"];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
5->16 [style = solid, label="listener"];
21->24 [style = bold, label=""];
1->0 [style = bold, label=""];
5->10 [style = solid, label="listener"];
3->4 [style = bold, label=""];
22->20 [style = solid, label="request"];
13->15 [style = dashed, label="0"];
13->1 [style = bold, label=""];
2->12 [style = bold, label=""];
6->20 [style = bold, label=""];
12->10 [style = solid, label="request"];
23->22 [style = bold, label=""];
5->6 [style = bold, label=""];
9->15 [style = bold, label=""];
14->12 [style = bold, label=""];
7->16 [style = bold, label=""];
12->22 [style = dashed, label="0"];
11->24 [style = dashed, label="0"];
8->9 [style = bold, label=""];
22->17 [style = bold, label=""];
4->8 [style = bold, label=""];
10->16 [style = dashed, label="0"];
18->21 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
12->9 [style = solid, label="request"];
9->13 [style = bold, label=""];
15->1 [style = bold, label=""];
}
