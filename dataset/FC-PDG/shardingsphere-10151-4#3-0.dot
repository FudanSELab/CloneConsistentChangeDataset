digraph {
17 [style = filled, label = "final InsertValueContext insertValueContext@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "addPlainColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final InsertValueContext insertValueContext@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Object originalValue@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "final String tableName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "addAssistedQueryColumn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final InsertValue insertValueToken@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DerivedSimpleExpressionSegment derivedExpressionSegment = isAddLiteralExpressionSegment(insertValueContext,columnIndex)? new DerivedLiteralExpressionSegment(((QueryAssistedEncryptAlgorithm)encryptAlgorithm).queryAssistedEncrypt(null == originalValue? null: originalValue.toString())): new DerivedParameterMarkerExpressionSegment(getParameterIndexCount(insertValueToken))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "getEncryptRule().findPlainColumn(tableName,columnName).isPresent()@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final int columnIndex@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "addAssistedQueryColumn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Object originalValue@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String tableName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final InsertValue insertValueToken@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final String tableName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "DerivedSimpleExpressionSegment derivedExpressionSegment = isAddLiteralExpressionSegment(insertValueContext,columnIndex)? new DerivedLiteralExpressionSegment(((QueryAssistedEncryptAlgorithm)encryptAlgorithm).queryAssistedEncrypt(null == originalValue? null: originalValue)): new DerivedParameterMarkerExpressionSegment(getParameterIndexCount(insertValueToken))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "final InsertValueContext insertValueContext@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final String columnName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final InsertValue insertValueToken@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String columnName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int columnIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "getEncryptRule().findAssistedQueryColumn(tableName,columnName).isPresent()@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String columnName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final EncryptAlgorithm encryptAlgorithm@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final Object originalValue@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "DerivedSimpleExpressionSegment derivedExpressionSegment = isAddLiteralExpressionSegment(insertValueContext,columnIndex)? new DerivedLiteralExpressionSegment(originalValue): new DerivedParameterMarkerExpressionSegment(getParameterIndexCount(insertValueToken))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final EncryptAlgorithm encryptAlgorithm@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "insertValueToken.getValues().add(columnIndex + 1,derivedExpressionSegment)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->18 [style = dashed, label="0"];
10->8 [style = dotted, label="true"];
12->18 [style = solid, label="columnIndex"];
22->25 [style = bold, label=""];
2->4 [style = solid, label="insertValueToken"];
10->6 [style = dotted, label="true"];
22->19 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
12->1 [style = solid, label="columnIndex"];
23->1 [style = solid, label="columnIndex"];
6->4 [style = solid, label="originalValue"];
11->12 [style = dotted, label="true"];
11->14 [style = dotted, label="true"];
11->17 [style = dotted, label="true"];
10->3 [style = dotted, label="true"];
9->27 [style = dashed, label="0"];
26->21 [style = solid, label="originalValue"];
9->4 [style = solid, label="columnIndex"];
11->9 [style = dotted, label="true"];
21->1 [style = solid, label="derivedExpressionSegment"];
11->13 [style = dotted, label="true"];
22->24 [style = dotted, label="true"];
7->4 [style = bold, label=""];
17->18 [style = solid, label="insertValueContext"];
10->9 [style = dotted, label="true"];
10->5 [style = dotted, label="true"];
4->21 [style = dashed, label="0"];
23->21 [style = solid, label="columnIndex"];
10->7 [style = bold, label=""];
27->21 [style = solid, label="insertValueContext"];
14->18 [style = solid, label="insertValueToken"];
13->18 [style = solid, label="originalValue"];
22->20 [style = dotted, label="true"];
18->1 [style = bold, label=""];
20->21 [style = solid, label="insertValueToken"];
10->2 [style = dotted, label="true"];
22->26 [style = dotted, label="true"];
18->1 [style = solid, label="derivedExpressionSegment"];
22->27 [style = dotted, label="true"];
7->4 [style = dotted, label="true"];
21->1 [style = bold, label=""];
7->18 [style = dotted, label="true"];
7->18 [style = bold, label=""];
11->16 [style = dotted, label="true"];
7->25 [style = dashed, label="0"];
10->0 [style = dotted, label="true"];
4->1 [style = bold, label=""];
9->1 [style = solid, label="columnIndex"];
7->1 [style = dotted, label="true"];
11->15 [style = dotted, label="true"];
8->4 [style = solid, label="insertValueContext"];
4->1 [style = solid, label="derivedExpressionSegment"];
11->7 [style = bold, label=""];
25->21 [style = bold, label=""];
25->21 [style = dotted, label="true"];
25->1 [style = dotted, label="true"];
}
