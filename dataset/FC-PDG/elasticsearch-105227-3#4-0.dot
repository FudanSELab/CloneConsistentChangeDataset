digraph {
7 [style = filled, label = "GeoBoundsAggregationBuilder aggBuilder = new GeoBoundsAggregationBuilder(\"my_agg\").field(\"field\").wrapLongitude(false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(Double.isInfinite(bounds.bottom))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(AggregationInspectionHelper.hasValue(bounds))@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(Double.isInfinite(bounds.negRight))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "fieldType.setName(\"field\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertTrue(Double.isInfinite(bounds.negLeft))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "fieldType.setHasDocValues(true)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(Double.isInfinite(bounds.posRight))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "testEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MappedFieldType fieldType = new GeoShapeWithDocValuesFieldMapper.GeoShapeWithDocValuesFieldType()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(Double.isInfinite(bounds.top))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(Double.isInfinite(bounds.posLeft))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "MappedFieldType fieldType = new GeoPointFieldMapper.GeoPointFieldType(\"field\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "InternalGeoBounds bounds = search(searcher,new MatchAllDocsQuery(),aggBuilder,fieldType)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "InternalGeoBounds bounds = search(searcher,new MatchAllDocsQuery(),aggBuilder,fieldType)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->17 [style = solid, label="searcher"];
16->15 [style = bold, label=""];
1->4 [style = bold, label=""];
19->12 [style = bold, label=""];
12->11 [style = bold, label=""];
16->17 [style = solid, label="fieldType"];
3->6 [style = bold, label=""];
19->6 [style = solid, label="fieldType"];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
7->17 [style = solid, label="aggBuilder"];
5->6 [style = solid, label="fieldType"];
3->6 [style = solid, label="searcher"];
14->7 [style = bold, label=""];
0->7 [style = bold, label=""];
7->6 [style = solid, label="aggBuilder"];
5->16 [style = dashed, label="0"];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
6->13 [style = bold, label=""];
7->16 [style = bold, label=""];
17->3 [style = bold, label=""];
4->8 [style = bold, label=""];
18->7 [style = bold, label=""];
6->8 [style = solid, label="bounds"];
10->1 [style = bold, label=""];
17->1 [style = solid, label="bounds"];
5->19 [style = dashed, label="0"];
7->19 [style = bold, label=""];
13->2 [style = bold, label=""];
}
