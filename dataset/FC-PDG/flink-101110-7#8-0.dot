digraph {
7 [style = filled, label = "client.dropDatabase(name,true,ignoreIfNotExists,cascade)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "boolean cascade@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "boolean ignoreIfNotExists@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "dropDatabase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkArgument(!StringUtils.isNullOrWhitespaceOnly(databaseName),\"databaseName cannot be null or empty\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return client.getAllTables(databaseName)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "listTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean ignoreIfNotExists@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "dropDatabase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "String databaseName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.dropDatabase(name,true,ignoreIfNotExists)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
2->1 [style = solid, label="ignoreIfNotExists"];
5->6 [style = dotted, label="true"];
3->1 [style = solid, label="name"];
9->11 [style = solid, label="databaseName"];
6->7 [style = solid, label="ignoreIfNotExists"];
5->7 [style = bold, label=""];
3->8 [style = dashed, label="0"];
12->10 [style = bold, label=""];
0->3 [style = dotted, label="true"];
0->2 [style = dotted, label="true"];
5->8 [style = dotted, label="true"];
1->7 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
12->9 [style = dotted, label="true"];
0->1 [style = bold, label=""];
5->4 [style = dotted, label="true"];
4->7 [style = solid, label="cascade"];
8->7 [style = solid, label="name"];
10->11 [style = bold, label=""];
}
