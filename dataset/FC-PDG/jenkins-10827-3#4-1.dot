digraph {
4 [style = filled, label = "performedAtThirdAttemptTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String text = Messages.Retrier_Success(ACTION,SUCCESSFUL_ATTEMPT)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String ACTION = \"print\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Retrier<Boolean> r = new Retrier.Builder<>(null,null,ACTION).withAttempts(ATTEMPTS).withDelay(100).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Boolean finalResult = r.start()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(finalResult != null && finalResult)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "String text = Messages.Retrier_NoSuccess(ACTION,ATTEMPTS)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Logger.getLogger(.getName()).addHandler(handler)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "failedActionAfterThreeAttemptsTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "performedAtThirdAttemptTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RingBufferLogHandler handler = new RingBufferLogHandler(20)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int SUCCESSFUL_ATTEMPT = 3@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertFalse(finalResult == null? false: finalResult)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(finalResult == null? false: finalResult)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(String.format(\"The log should contain '%s'\",text),handler.getView().stream().anyMatch(null))@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int ATTEMPTS = 3@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
5->3 [style = bold, label=""];
4->9 [style = bold, label=""];
5->12 [style = dashed, label="0"];
7->11 [style = bold, label=""];
9->5 [style = solid, label="SUCCESSFUL_ATTEMPT"];
7->11 [style = solid, label="finalResult"];
5->3 [style = solid, label="text"];
15->12 [style = solid, label="ATTEMPTS"];
15->6 [style = bold, label=""];
1->0 [style = bold, label=""];
6->5 [style = solid, label="ACTION"];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
6->1 [style = bold, label=""];
7->13 [style = solid, label="finalResult"];
11->5 [style = bold, label=""];
7->2 [style = solid, label="finalResult"];
13->12 [style = bold, label=""];
9->15 [style = dashed, label="0"];
1->0 [style = solid, label="handler"];
7->2 [style = bold, label=""];
12->3 [style = solid, label="text"];
2->13 [style = dashed, label="0"];
0->8 [style = bold, label=""];
2->11 [style = dashed, label="0"];
14->15 [style = bold, label=""];
10->9 [style = bold, label=""];
12->3 [style = bold, label=""];
6->12 [style = solid, label="ACTION"];
2->5 [style = bold, label=""];
}
