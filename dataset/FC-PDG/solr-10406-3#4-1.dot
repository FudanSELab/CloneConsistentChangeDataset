digraph {
17 [style = filled, label = "assertTrue(IOUtils.contentEquals(fis2,s))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(file.length(),stream.getSize().intValue())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(IOUtils.contentEquals(isr,r))@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "IOUtils.copy(is,zos)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "IOUtils.copy(is,zos)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testFileStreamGZIP['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertTrue(IOUtils.contentEquals(isr,r))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IOUtils.copy(is,os)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "File file = new File(createTempDir().toFile(),\"README\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(\"text/html\",stream.getContentType())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ContentStreamBase stream = new ContentStreamBase.URLStream(new URL(file.toURI().toASCIIString()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(IOUtils.contentEquals(zis2,s))@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "File file = new File(createTempDir().toFile(),\"README.gz\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ContentStreamBase stream = new ContentStreamBase.FileStream(file)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(file.length(),stream.getSize().intValue())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testFileStreamGZIP['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ContentStreamBase stream = new ContentStreamBase.FileStream(file)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testURLStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(file.length(),stream.getSize().intValue())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->18 [style = bold, label=""];
9->11 [style = bold, label=""];
12->17 [style = bold, label=""];
1->3 [style = bold, label=""];
18->12 [style = bold, label=""];
10->3 [style = bold, label=""];
3->5 [style = solid, label="file"];
5->18 [style = dashed, label="0"];
15->16 [style = bold, label=""];
3->4 [style = bold, label=""];
3->11 [style = solid, label="file"];
6->2 [style = bold, label=""];
3->9 [style = bold, label=""];
2->0 [style = bold, label=""];
5->6 [style = bold, label=""];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
0->8 [style = bold, label=""];
3->15 [style = dashed, label="0"];
13->15 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
14->6 [style = bold, label=""];
11->7 [style = bold, label=""];
}
