digraph {
2 [style = filled, label = "basicTestWithRecompactionAndBasicSchemaEvolution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String minutelyPath = \"Identity/MemberAccount/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertNull(result.get(2).getFieldValue(\"k\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String hourlyPath = \"Identity/MemberAccount_2/hourly/2017/04/03/10/\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(3))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "orcStruct_5.setFieldValue(\"j\",new IntWritable(11))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "writeOrcRecordsInFile(new Path(file_2.getAbsolutePath()),evolvedSchema,ImmutableList.of(orcStruct_4))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "reloadFolder(statuses,outputDir,fs)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OrcStruct orcStruct_5 = (OrcStruct)OrcStruct.createValue(evolvedSchema)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "File basePath = Files.createTempDir()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(3))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String hourlyPath = \"Identity/MemberAccount/hourly/2017/04/03/10/\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "File outputDir = new File(basePath,hourlyPath)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "orcStruct_4.setFieldValue(\"i\",new IntWritable(5))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"i\"),new IntWritable(4))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "File outputDir = new File(basePath,hourlyPath)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "String minutelyPath = \"Identity/MemberAccount_2/minutely/2017/04/03/10/20_30/run_2017-04-03-10-20\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertNull(result.get(0).getFieldValue(\"k\"))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"i\"),new IntWritable(2))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Assert.assertEquals(result.size(),4)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"i\"),new IntWritable(5))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"j\"),new IntWritable(2))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<FileStatus> statuses = new ArrayList<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "orcStruct_5.setFieldValue(\"k\",new IntWritable(12))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(1))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"i\"),new IntWritable(1))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(result.size(),4)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "List<FileStatus> statuses = new ArrayList<>()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "basicTestWithRecompactionAndBasicSchemaEvolution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "Assert.assertEquals(result.size(),4 + 1)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertTrue(jobDir.mkdirs())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(result.get(2).getFieldValue(\"j\"),new IntWritable(5))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "orcStruct_4.setFieldValue(\"k\",new IntWritable(7))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "File file_late = new File(jobDir,\"file_late.1.\" + extensionName)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"j\"),new IntWritable(6))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "file_2.setLastModified(Long.MAX_VALUE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"j\"),new IntWritable(2))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "List<OrcStruct> result = readOrcFile(statuses.get(0).getPath())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "execution = embeddedGobblin.run()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "result = readOrcFile(statuses.get(0).getPath())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "result.sort(new Comparator<OrcStruct>(){@Override public int compare(OrcStruct o1,OrcStruct o2){return o1.compareTo(o2)}})@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "writeOrcRecordsInFile(new Path(file_late.getAbsolutePath()),evolvedSchema,ImmutableList.of(orcStruct_5))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "EmbeddedGobblin embeddedGobblin_nondedup = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,\"orc\").setConfiguration(COMPACTION_SHOULD_DEDUPLICATE,\"false\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"i\"),new IntWritable(1))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "orcStruct_4.setFieldValue(\"j\",new IntWritable(6))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblin(\"basic\",basePath.getAbsolutePath().toString()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,extensionName).setConfiguration(COMPACTION_LATEDATA_THRESHOLD_FOR_RECOMPACT_PER_DATASET,\"Identity.*:0.1\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "JobExecutionResult execution = embeddedGobblin.run()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "EmbeddedGobblin embeddedGobblin = createEmbeddedGobblinCompactionJob(\"basic\",basePath.getAbsolutePath()).setConfiguration(CompactionJobConfigurator.COMPACTION_JOB_CONFIGURATOR_FACTORY_CLASS_KEY,.getName()).setConfiguration(COMPACTION_OUTPUT_EXTENSION,extensionName).setConfiguration(COMPACTION_LATEDATA_THRESHOLD_FOR_RECOMPACT_PER_DATASET,\"Identity.*:0.1\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "statuses.add(status)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(result.get(0).getFieldValue(\"j\"),new IntWritable(2))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(execution.isSuccessful())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "createTestingData(jobDir)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "reloadFolder(statuses,outputDir,fs)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"j\"),new IntWritable(5))@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "JobExecutionResult execution = embeddedGobblin_nondedup.run()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(result.get(1).getFieldValue(\"i\"),new IntWritable(2))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "basePath.deleteOnExit()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertTrue(statuses.size() == 1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "OrcStruct orcStruct_4 = (OrcStruct)OrcStruct.createValue(evolvedSchema)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(result.get(3).getFieldValue(\"k\"),new IntWritable(7))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "File file_2 = new File(jobDir,\"file_2.1.\" + extensionName)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TypeDescription evolvedSchema = TypeDescription.fromString(\"struct<i:int,j:int,k:int>\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertTrue(statuses.size() == 1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "orcStruct_5.setFieldValue(\"i\",new IntWritable(10))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "testNonDedup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "File jobDir = new File(basePath,minutelyPath)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55->68 [style = bold, label=""];
46->34 [style = bold, label=""];
37->11 [style = bold, label=""];
25->22 [style = bold, label=""];
40->13 [style = solid, label="basePath"];
57->33 [style = bold, label=""];
65->56 [style = bold, label=""];
47->10 [style = bold, label=""];
40->23 [style = bold, label=""];
33->24 [style = solid, label="fs"];
33->18 [style = bold, label=""];
20->48 [style = bold, label=""];
45->38 [style = bold, label=""];
52->69 [style = bold, label=""];
26->15 [style = bold, label=""];
33->19 [style = solid, label="fs"];
27->17 [style = bold, label=""];
63->13 [style = bold, label=""];
62->40 [style = bold, label=""];
49->40 [style = bold, label=""];
8->39 [style = bold, label=""];
67->58 [style = bold, label=""];
9->3 [style = solid, label="evolvedSchema"];
48->1 [style = bold, label=""];
64->60 [style = bold, label=""];
7->13 [style = solid, label="minutelyPath"];
28->45 [style = bold, label=""];
17->35 [style = bold, label=""];
36->9 [style = bold, label=""];
24->44 [style = bold, label=""];
18->19 [style = bold, label=""];
22->32 [style = bold, label=""];
9->46 [style = solid, label="evolvedSchema"];
19->37 [style = bold, label=""];
18->19 [style = solid, label="statuses"];
35->28 [style = bold, label=""];
7->5 [style = bold, label=""];
13->30 [style = solid, label="jobDir"];
46->0 [style = solid, label="orcStruct_4"];
7->59 [style = dashed, label="0"];
13->43 [style = bold, label=""];
59->63 [style = bold, label=""];
66->51 [style = bold, label=""];
0->20 [style = bold, label=""];
23->7 [style = bold, label=""];
31->47 [style = bold, label=""];
23->59 [style = bold, label=""];
15->33 [style = bold, label=""];
54->64 [style = bold, label=""];
44->42 [style = bold, label=""];
40->52 [style = solid, label="basePath"];
10->55 [style = dashed, label="0"];
13->38 [style = solid, label="jobDir"];
43->36 [style = bold, label=""];
9->46 [style = bold, label=""];
59->13 [style = solid, label="minutelyPath"];
27->56 [style = dashed, label="0"];
38->3 [style = bold, label=""];
12->67 [style = dashed, label="0"];
3->21 [style = solid, label="orcStruct_5"];
13->36 [style = solid, label="jobDir"];
11->41 [style = bold, label=""];
40->15 [style = solid, label="basePath"];
12->8 [style = bold, label=""];
5->13 [style = bold, label=""];
16->30 [style = bold, label=""];
14->29 [style = bold, label=""];
5->15 [style = solid, label="hourlyPath"];
4->12 [style = bold, label=""];
41->31 [style = bold, label=""];
30->0 [style = bold, label=""];
15->24 [style = solid, label="outputDir"];
60->52 [style = bold, label=""];
51->8 [style = bold, label=""];
4->68 [style = dashed, label="0"];
58->65 [style = bold, label=""];
21->14 [style = bold, label=""];
63->52 [style = solid, label="hourlyPath"];
20->50 [style = bold, label=""];
33->61 [style = bold, label=""];
32->21 [style = bold, label=""];
39->55 [style = bold, label=""];
68->67 [style = bold, label=""];
3->25 [style = bold, label=""];
69->57 [style = bold, label=""];
8->58 [style = dashed, label="0"];
2->40 [style = bold, label=""];
39->27 [style = bold, label=""];
1->26 [style = bold, label=""];
9->0 [style = solid, label="evolvedSchema"];
15->19 [style = solid, label="outputDir"];
5->63 [style = dashed, label="0"];
39->65 [style = dashed, label="0"];
61->53 [style = bold, label=""];
6->16 [style = bold, label=""];
50->1 [style = bold, label=""];
53->66 [style = bold, label=""];
48->50 [style = dashed, label="0"];
34->6 [style = bold, label=""];
10->4 [style = bold, label=""];
18->24 [style = solid, label="statuses"];
36->54 [style = bold, label=""];
29->24 [style = bold, label=""];
9->21 [style = solid, label="evolvedSchema"];
}
