digraph {
6 [style = filled, label = "createMockAncestors(req,createAncestor(j,\"../..\"),createAncestor(view,\".\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TopLevelItem i = createMockItem(parent,\"job/i/\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(view.getOwner().getItemGroup()).thenReturn(parent)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Computer computer = mock()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "when(Stapler.getCurrentRequest()).thenReturn(req)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ItemGroup parent = j@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGetRelativeLinkTo_JobNotContainedInView['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String result = Functions.getRelativeLinkTo(i)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String contextPath = \"/jenkins\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "View view = mock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Jenkins j = createMockJenkins()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StaplerRequest req = createMockRequest(contextPath)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(view.getItems()).thenReturn(Collections.emptyList())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testGetRelativeLinkTo_JobNotContainedInView['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testGetRelativeLinkTo_JobFromComputer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(view.getItems()).thenReturn(Collections.emptyList())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "createMockAncestors(req,createAncestor(computer,\".\"),createAncestor(j,\"../..\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mockStatic()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"/jenkins/job/i/\",result)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
1->8 [style = bold, label=""];
12->5 [style = bold, label=""];
8->11 [style = solid, label="parent"];
8->19 [style = solid, label="parent"];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
9->3 [style = solid, label="req"];
18->19 [style = bold, label=""];
19->11 [style = bold, label=""];
12->5 [style = solid, label="result"];
8->0 [style = solid, label="parent"];
11->12 [style = bold, label=""];
9->7 [style = bold, label=""];
2->17 [style = dashed, label="0"];
2->6 [style = solid, label="view"];
7->3 [style = bold, label=""];
13->14 [style = dashed, label="0"];
1->6 [style = solid, label="j"];
2->0 [style = bold, label=""];
11->12 [style = solid, label="result"];
13->12 [style = bold, label=""];
11->12 [style = solid, label="i"];
3->2 [style = bold, label=""];
16->1 [style = bold, label=""];
9->18 [style = solid, label="req"];
6->11 [style = bold, label=""];
14->12 [style = bold, label=""];
11->13 [style = bold, label=""];
1->18 [style = solid, label="j"];
17->18 [style = bold, label=""];
10->9 [style = solid, label="contextPath"];
3->17 [style = bold, label=""];
10->9 [style = bold, label=""];
19->11 [style = solid, label="i"];
4->1 [style = bold, label=""];
9->6 [style = solid, label="req"];
17->18 [style = solid, label="computer"];
1->8 [style = solid, label="j"];
15->1 [style = bold, label=""];
}
