digraph {
1 [style = filled, label = "assertTrue(result instanceof PhysLeafRel)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "planner.setRoot(convertedRel)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"c\",resultLeaf.label)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRemoveSingleReformed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "planner.addRule(new ReformedRemoveSingleRule())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PhysLeafRel resultLeaf = (PhysLeafRel)result@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planner.addRule(new GoodSingleRule())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "planner.addRule(new GoodRemoveSingleRule())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testRemoveSingleReformed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RelNode convertedRel = planner.changeTraits(singleRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NoneLeafRel leafRel = new NoneLeafRel(cluster,\"a\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "NoneSingleRel singleRel = new NoneSingleRel(cluster,leafRel)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "RelNode result = planner.chooseDelegate().findBestExp()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testRemoveSingleGood['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10->15 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
3->11 [style = bold, label=""];
10->3 [style = bold, label=""];
12->8 [style = solid, label="singleRel"];
13->1 [style = solid, label="result"];
6->0 [style = bold, label=""];
16->2 [style = bold, label=""];
15->16 [style = bold, label=""];
1->7 [style = bold, label=""];
8->9 [style = solid, label="singleRel"];
11->2 [style = bold, label=""];
2->12 [style = bold, label=""];
12->8 [style = solid, label="leafRel"];
5->1 [style = bold, label=""];
11->2 [style = solid, label="cluster"];
0->10 [style = bold, label=""];
2->12 [style = solid, label="cluster"];
12->8 [style = bold, label=""];
13->5 [style = solid, label="result"];
2->8 [style = solid, label="cluster"];
8->9 [style = bold, label=""];
8->9 [style = solid, label="convertedRel"];
13->5 [style = bold, label=""];
7->18 [style = bold, label=""];
2->12 [style = solid, label="leafRel"];
11->12 [style = solid, label="cluster"];
9->13 [style = solid, label="convertedRel"];
5->1 [style = solid, label="result"];
3->15 [style = dashed, label="0"];
6->2 [style = solid, label="planner"];
5->7 [style = solid, label="result"];
6->11 [style = solid, label="planner"];
14->6 [style = bold, label=""];
9->13 [style = bold, label=""];
}
