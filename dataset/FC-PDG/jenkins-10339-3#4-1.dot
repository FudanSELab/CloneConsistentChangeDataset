digraph {
4 [style = filled, label = "Future<FreeStyleBuild> f = p.scheduleBuild2(0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "plc.next()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"123$$$456$$$789\",plc.next())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final SequenceLock lock = new SequenceLock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FreeStyleBuild b = p.getBuildByNumber(1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ProgressiveLogClient plc = new ProgressiveLogClient(wc,b)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "progressiveOutput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "lock.phase(1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "FreeStyleBuild b = p.getBuildByNumber(1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "consoleAnnotation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "JenkinsRule.WebClient wc = r.createWebClient()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "lock.phase(3)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "lock.phase(1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "progressiveOutput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(\"abc$$$def\",plc.next())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Future<FreeStyleBuild> f = p.scheduleBuild2(0)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "plc.next()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "r.assertBuildStatusSuccess(f)@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "lock.done()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ProgressiveLogClient plc = new ProgressiveLogClient(wc,b)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "lock.phase(3)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "p.getBuildersList().add(new TestBuilder(){public boolean perform(AbstractBuild<?,?> build,Launcher launcher,BuildListener listener){lock.phase(0)lock.phase(2)listener.getLogger().print(\"abc\")listener.annotate(new DollarMark())listener.getLogger().println(\"def\")lock.phase(4)listener.getLogger().print(\"123\")listener.annotate(new DollarMark())listener.getLogger().print(\"456\")listener.annotate(new DollarMark())listener.getLogger().println(\"789\")lock.phase(6)return true}})@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "lock.phase(5)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->20 [style = bold, label=""];
5->2 [style = solid, label="b"];
22->19 [style = bold, label=""];
17->6 [style = bold, label=""];
7->12 [style = bold, label=""];
15->2 [style = solid, label="wc"];
16->6 [style = bold, label=""];
1->3 [style = bold, label=""];
15->14 [style = solid, label="wc"];
8->6 [style = bold, label=""];
3->12 [style = bold, label=""];
2->10 [style = bold, label=""];
12->9 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
21->18 [style = bold, label=""];
4->11 [style = solid, label="f"];
6->15 [style = bold, label=""];
12->21 [style = dashed, label="0"];
4->0 [style = bold, label=""];
20->21 [style = bold, label=""];
5->2 [style = bold, label=""];
18->22 [style = bold, label=""];
12->23 [style = solid, label="f"];
19->23 [style = bold, label=""];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
13->22 [style = dashed, label="0"];
13->14 [style = solid, label="b"];
0->5 [style = bold, label=""];
9->13 [style = bold, label=""];
15->1 [style = bold, label=""];
}
