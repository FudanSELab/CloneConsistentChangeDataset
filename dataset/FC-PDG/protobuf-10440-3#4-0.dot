digraph {
7 [style = filled, label = "String error@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "fail(\"Expected parse exception.\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TextFormat.merge(text,TestUtil.getExtensionRegistry(),builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "parserWithOverwriteForbidden.merge(input,TestUtil.getExtensionRegistry(),builder)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertParseError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestOneof2.Builder builder = TestOneof2.newBuilder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String input = \"foo_string: \"stringvalue\" foo_int: 123\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testOneofOverwriteForbidden['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "fail(\"Expected parse exception.\")@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String error@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String text@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(error,e.getMessage())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertParseError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "fail(\"Expected parse exception.\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TextFormat.parse(text,TestUtil.getExtensionRegistry(),)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "TestAllTypes.Builder builder = TestAllTypes.newBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TextFormat.ParseException e@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0->4 [style = bold, label=""];
9->7 [style = dotted, label="true"];
12->15 [style = bold, label=""];
3->4 [style = solid, label="text"];
6->11 [style = bold, label=""];
4->5 [style = bold, label=""];
10->8 [style = bold, label=""];
14->15 [style = solid, label="input"];
4->15 [style = dashed, label="0"];
14->12 [style = bold, label=""];
9->0 [style = bold, label=""];
8->6 [style = bold, label=""];
1->3 [style = dotted, label="true"];
12->15 [style = solid, label="builder"];
0->4 [style = solid, label="builder"];
10->8 [style = dotted, label="true"];
16->14 [style = bold, label=""];
15->13 [style = bold, label=""];
1->2 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
3->6 [style = solid, label="text"];
5->6 [style = bold, label=""];
1->0 [style = bold, label=""];
}
