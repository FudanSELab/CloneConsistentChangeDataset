digraph {
4 [style = filled, label = "directedGraph.putEdgeValue(N1,N1,E11)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "MutableValueGraph<Integer,String> directedGraph = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectedTranspose.putEdgeValue(N2,N1,E12)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "transpose_directedValueGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "inducedSubgraph_valueGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "inducedSubgraph_valueGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertThat(Graphs.equivalent(transpose,expectedTranspose)).isTrue()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isEqualTo(E21)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(inducedSubgraph(directedGraph,nodeSubset)).isEqualTo(expectedSubgraph)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "ValueGraph<Integer,String> transpose = Graphs.transpose(directedGraph)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expectedTranspose.putEdgeValue(N4,N3,E34)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedSubgraph.putEdgeValue(N4,N4,E44)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N3,E31)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "MutableValueGraph<Integer,String> expectedTranspose = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N1,E11)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(transpose(transpose)).isSameAs(directedGraph)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Set<Integer> nodeSubset = ImmutableSet.of(N1,N2,N4)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AbstractGraphTest.validateGraph(transpose.asGraph())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "directedGraph.putEdgeValue(N1,N3,E13)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expectedTranspose.putEdgeValue(N3,N1,E13)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "directedGraph.putEdgeValue(N4,N4,E44)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isNull()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expectedSubgraph.putEdgeValue(N1,N2,E12)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "directedGraph.putEdgeValue(5,6,\"5-6\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "AbstractGraphTest.validateGraph(transpose.asGraph())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(Graphs.equivalent(inducedSubgraph(directedGraph,nodeSubset),expectedSubgraph)).isTrue()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "directedGraph.putEdgeValue(N3,N4,E34)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expectedSubgraph.putEdgeValue(N2,N1,E21)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "directedGraph.putEdgeValue(N1,N3,E13)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MutableValueGraph<Integer,String> expectedSubgraph = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "directedGraph.putEdgeValue(N1,N2,E12)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "directedGraph.putEdgeValue(N3,N1,E31)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
4->6 [style = bold, label=""];
31->16 [style = bold, label=""];
6->22 [style = bold, label=""];
9->31 [style = bold, label=""];
9->4 [style = bold, label=""];
27->9 [style = bold, label=""];
30->27 [style = bold, label=""];
7->0 [style = bold, label=""];
4->29 [style = bold, label=""];
3->12 [style = bold, label=""];
25->6 [style = bold, label=""];
17->19 [style = bold, label=""];
27->15 [style = solid, label="directedGraph"];
29->26 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->1 [style = bold, label=""];
18->20 [style = bold, label=""];
12->10 [style = bold, label=""];
20->23 [style = bold, label=""];
14->0 [style = bold, label=""];
24->21 [style = bold, label=""];
11->3 [style = bold, label=""];
27->21 [style = solid, label="directedGraph"];
6->11 [style = bold, label=""];
15->24 [style = bold, label=""];
21->32 [style = bold, label=""];
28->25 [style = bold, label=""];
23->17 [style = bold, label=""];
10->2 [style = bold, label=""];
10->13 [style = solid, label="expectedSubgraph"];
16->4 [style = bold, label=""];
19->15 [style = bold, label=""];
32->28 [style = bold, label=""];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
26->18 [style = bold, label=""];
}
