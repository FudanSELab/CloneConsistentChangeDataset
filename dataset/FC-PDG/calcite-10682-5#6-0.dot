digraph {
64 [style = filled, label = "checkSimplify(eq(hRef,hRef),\"true\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkSimplify3(case_(aRef,trueLiteral,bRef,trueLiteral,cRef,falseLiteral,nullBool),\"OR(?0.a, ?0.b, AND(null, NOT(?0.a), NOT(?0.b), NOT(?0.c)))\",\"OR(?0.a, ?0.b)\",\"OR(?0.a, ?0.b, NOT(?0.c))\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vInt(1))),\"OR(IS NULL(?0.int0), IS NULL(?0.int1))\")@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkSimplifyUnchanged(ge(iRef,hRef))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NULL,aRef),\"false\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vIntNotNull(1))),\"IS NOT NULL(?0.int0)\")@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkSimplify3(ne(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "checkSimplify(or(aRef,bRef,aRef),\"OR(?0.a, ?0.b)\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "checkSimplify(le(literal1,literal1),\"true\")@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "final RexNode iRef = rexBuilder.makeFieldAccess(range,8)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,falseLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)))\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final RelDataType intNullableType = typeFactory.createTypeWithNullability(intType,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "checkSimplify(case_(aRef,literal(1),bRef,literal(1),cRef,literal(1),dRef,literal(1),literal(1)),\"1\")@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "checkSimplify(isNull(plus(vInt(0),vIntNotNull(1))),\"IS NULL(?0.int0)\")@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,or(trueLiteral,falseLiteral))),\"true\")@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "checkSimplify2(and(lt(hRef,literal1),eq(hRef,literal1),ge(hRef,literal1)),\"AND(<(?0.h, 1), =(?0.h, 1), >=(?0.h, 1))\",\"false\")@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "checkSimplify(case_(aRef,trueLiteral,bRef,falseLiteral,cRef,falseLiteral,dRef,trueLiteral,eRef,falseLiteral,trueLiteral),\"OR(?0.a, AND(?0.d, NOT(?0.b), NOT(?0.c)), AND(NOT(?0.b), NOT(?0.c), NOT(?0.e)))\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "checkSimplify(ge(hRef,hRef),\"true\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final RexNode eRef = rexBuilder.makeFieldAccess(range,4)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "checkSimplify3(le(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "checkSimplify(and(aRef,bRef,falseLiteral),\"false\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(cRef,or(dRef,eRef)))),\"AND(?0.a, ?0.b, NOT(?0.c), NOT(?0.d), NOT(?0.e))\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "checkSimplify3(lt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "checkSimplify(eq(literal(1),literal(1)),\"true\")@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.a, <>(?0.b, ?0.c)))\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "checkSimplify(case_(aRef,literal1,bRef,literal1,cRef,literal1,dRef,literal1,literal1),\"1\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "checkSimplify3(ge(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "checkSimplify(gt(literal1,literal1),\"false\")@@@68@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "final RexNode cRef = rexBuilder.makeFieldAccess(range,2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "checkSimplify(isNotNull(lt(vIntNotNull(2),vIntNotNull(3))),\"true\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "checkSimplifyUnchanged(lt(iRef,hRef))@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,or(trueLiteral,falseLiteral))),\"true\")@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vInt(1))),\"IS NULL(?0.int1)\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "checkSimplify(ne(literal1,literal1),\"false\")@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "checkSimplify(isNull(not(vBoolNotNull())),\"false\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vIntNotNull(2))),\"IS NOT NULL(?0.int0)\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "checkSimplify(lt(literal(1),literal(1)),\"false\")@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
95 [style = filled, label = "checkSimplify(ge(literal(1),literal(1)),\"true\")@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "checkSimplify(isNull(plus(vIntNotNull(0),vIntNotNull(1))),\"false\")@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "checkSimplify(and(lt(hRef,literal1),or(falseLiteral,gt(jRef,kRef))),\"AND(<(?0.h, 1), >(?0.j, ?0.k))\")@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testSimplify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "checkSimplify2(and(le(hRef,literal1),ge(hRef,literal1)),\"AND(<=(?0.h, 1), >=(?0.h, 1))\",\"=(?0.h, 1)\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "checkSimplify(and(aRef,bRef,not(or(not(cRef),dRef,not(eRef)))),\"AND(?0.a, ?0.b, ?0.c, ?0.e, NOT(?0.d))\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "checkSimplify(isNull(nullBool),\"true\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "checkSimplify2(and(le(hRef,literal1),gt(hRef,literal1)),\"AND(<=(?0.h, 1), >(?0.h, 1))\",\"false\")@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "checkSimplify(or(aRef,bRef,falseLiteral),\"OR(?0.a, ?0.b)\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "checkSimplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_NULL,aRef),\"true\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "checkSimplify3(eq(iRef,iRef),\"OR(null, IS NOT NULL(?0.i))\",\"IS NOT NULL(?0.i)\",\"true\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,trueLiteral)),\"true\")@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "final RexNode bRef = rexBuilder.makeFieldAccess(range,1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "checkSimplify(and(aRef,bRef,aRef),\"AND(?0.a, ?0.b)\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "checkSimplify(lt(literal1,literal1),\"false\")@@@64@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
84 [style = filled, label = "checkSimplify(and(lt(hRef,literal(1)),or(falseLiteral,gt(jRef,kRef))),\"AND(<(?0.h, 1), >(?0.j, ?0.k))\")@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vIntNotNull(1))),\"true\")@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "checkSimplify3(gt(iRef,iRef),\"AND(null, IS NULL(?0.i))\",\"false\",\"IS NULL(?0.i)\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final RelDataType booleanType = typeFactory.createSqlType(SqlTypeName.BOOLEAN)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "checkSimplify(eq(literal1,literal1),\"true\")@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "checkSimplify2(and(le(hRef,literal(1)),gt(hRef,literal(1))),\"AND(<=(?0.h, 1), >(?0.h, 1))\",\"false\")@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "checkSimplify(and(aRef,bRef,trueLiteral),\"AND(?0.a, ?0.b)\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "checkSimplify(isNotNull(not(vBool())),\"IS NOT NULL(?0.bool0)\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "checkSimplify2(and(le(hRef,literal(1)),ge(hRef,literal(1))),\"AND(<=(?0.h, 1), >=(?0.h, 1))\",\"=(?0.h, 1)\")@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "testSimplify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "checkSimplifyDynamicParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "checkSimplify(le(literal(1),literal(1)),\"true\")@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(trueLiteral)),\"false\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "checkSimplify2(and(lt(hRef,literal(1)),eq(hRef,literal(1)),ge(hRef,literal(1))),\"AND(<(?0.h, 1), =(?0.h, 1), >=(?0.h, 1))\",\"false\")@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "final RexDynamicParam range = rexBuilder.makeDynamicParam(rowType,0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkSimplifyUnchanged(le(iRef,hRef))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RelDataType intType = typeFactory.createSqlType(SqlTypeName.INTEGER)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "checkSimplify(ne(hRef,hRef),\"false\")@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexNode hRef = rexBuilder.makeFieldAccess(range,7)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "checkSimplify(le(hRef,hRef),\"true\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final RexNode kRef = rexBuilder.makeFieldAccess(range,10)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),null_(tInt()))),\"false\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "final RexNode aRef = rexBuilder.makeFieldAccess(range,0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,or(falseLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "checkSimplify(and(lt(hRef,literal1),or(falseLiteral,falseLiteral)),\"false\")@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "checkSimplify(isNotNull(not(vBoolNotNull())),\"true\")@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "checkSimplify(case_(eq(bRef,cRef),dRef,falseLiteral,aRef,eRef),\"OR(AND(=(?0.b, ?0.c), ?0.d), AND(?0.e, <>(?0.b, ?0.c)))\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "checkSimplify(and(aRef,and(and(bRef,not(cRef),dRef,not(eRef)),not(eRef))),\"AND(?0.a, ?0.b, ?0.d, NOT(?0.c), NOT(?0.e))\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "checkSimplify(isNotNull(plus(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "checkSimplify(case_(trueLiteral,aRef,eq(cRef,dRef),eRef,cRef),\"?0.a\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "checkSimplify(ne(literal(1),literal(1)),\"false\")@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "checkSimplifyUnchanged(eq(iRef,hRef))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "checkSimplify(and(not(aRef),bRef,not(cRef),not(aRef)),\"AND(?0.b, NOT(?0.a), NOT(?0.c))\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final RexLiteral literal1 = rexBuilder.makeExactLiteral(BigDecimal.ONE)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,trueLiteral)),\"true\")@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
100 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),vInt(1))),\"AND(IS NOT NULL(?0.int0), IS NOT NULL(?0.int1))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "checkSimplifyUnchanged(gt(iRef,hRef))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "checkSimplify(and(lt(hRef,literal(1)),or(falseLiteral,falseLiteral)),\"false\")@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,or(falseLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "checkSimplify(ge(literal1,literal1),\"true\")@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "checkSimplify(case_(eq(falseLiteral,falseLiteral),falseLiteral,eq(falseLiteral,falseLiteral),trueLiteral,trueLiteral),\"false\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "checkSimplify(isNotNull(lt(vInt(0),literal(BigDecimal.ONE))),\"IS NOT NULL(?0.int0)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "checkSimplify(or(lt(hRef,literal1),and(trueLiteral,and(trueLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "final RelDataType rowType = typeFactory.builder().add(\"a\",booleanType).add(\"b\",booleanType).add(\"c\",booleanType).add(\"d\",booleanType).add(\"e\",booleanType).add(\"f\",booleanType).add(\"g\",booleanType).add(\"h\",intType).add(\"i\",intNullableType).add(\"j\",intType).add(\"k\",intType).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "checkSimplify(lt(hRef,hRef),\"false\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "checkSimplify(gt(literal(1),literal(1)),\"false\")@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "checkSimplify(or(aRef,bRef,trueLiteral),\"true\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "final RexNode jRef = rexBuilder.makeFieldAccess(range,9)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "final RexNode dRef = rexBuilder.makeFieldAccess(range,3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "checkSimplify(or(lt(hRef,literal(1)),and(trueLiteral,and(trueLiteral,falseLiteral))),\"<(?0.h, 1)\")@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "checkSimplifyUnchanged(ne(iRef,hRef))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "checkSimplify(gt(hRef,hRef),\"false\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "checkSimplify(isNotNull(plus(vIntNotNull(0),vInt(1))),\"IS NOT NULL(?0.int1)\")@@@83@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "checkSimplify(isNull(not(vBool())),\"IS NULL(?0.bool0)\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104->103 [style = bold, label=""];
8->5 [style = solid, label="hRef"];
69->72 [style = solid, label="cRef"];
15->84 [style = dashed, label="0"];
61->91 [style = dashed, label="0"];
8->84 [style = solid, label="hRef"];
57->45 [style = solid, label="aRef"];
57->72 [style = solid, label="aRef"];
79->14 [style = solid, label="dRef"];
27->93 [style = dashed, label="0"];
58->32 [style = bold, label=""];
55->62 [style = bold, label=""];
37->85 [style = bold, label=""];
8->23 [style = solid, label="hRef"];
42->9 [style = bold, label=""];
36->37 [style = solid, label="iRef"];
36->29 [style = solid, label="iRef"];
16->90 [style = dashed, label="0"];
24->34 [style = bold, label=""];
73->21 [style = bold, label=""];
7->67 [style = bold, label=""];
26->10 [style = solid, label="bRef"];
39->16 [style = solid, label="literal1"];
57->0 [style = solid, label="aRef"];
93->86 [style = bold, label=""];
25->6 [style = bold, label=""];
94->68 [style = bold, label=""];
20->6 [style = solid, label="eRef"];
26->0 [style = solid, label="bRef"];
8->31 [style = solid, label="hRef"];
84->93 [style = bold, label=""];
26->12 [style = solid, label="bRef"];
59->12 [style = bold, label=""];
9->58 [style = bold, label=""];
57->6 [style = solid, label="aRef"];
8->16 [style = solid, label="hRef"];
66->0 [style = bold, label=""];
8->29 [style = solid, label="hRef"];
19->5 [style = bold, label=""];
39->35 [style = solid, label="literal1"];
35->23 [style = bold, label=""];
57->66 [style = solid, label="aRef"];
8->36 [style = bold, label=""];
79->72 [style = solid, label="dRef"];
69->0 [style = solid, label="cRef"];
8->90 [style = solid, label="hRef"];
8->88 [style = solid, label="hRef"];
79->20 [style = bold, label=""];
10->75 [style = bold, label=""];
67->4 [style = bold, label=""];
65->37 [style = bold, label=""];
48->26 [style = solid, label="range"];
78->15 [style = solid, label="jRef"];
74->70 [style = bold, label=""];
78->80 [style = bold, label=""];
95->74 [style = bold, label=""];
80->84 [style = solid, label="kRef"];
57->77 [style = solid, label="aRef"];
52->74 [style = bold, label=""];
80->15 [style = solid, label="kRef"];
23->88 [style = dashed, label="0"];
26->72 [style = solid, label="bRef"];
79->25 [style = solid, label="dRef"];
57->99 [style = solid, label="aRef"];
26->75 [style = solid, label="bRef"];
80->39 [style = bold, label=""];
35->86 [style = dashed, label="0"];
79->44 [style = solid, label="dRef"];
105->100 [style = bold, label=""];
8->68 [style = solid, label="hRef"];
39->46 [style = solid, label="literal1"];
40->98 [style = dashed, label="0"];
57->60 [style = solid, label="aRef"];
70->17 [style = bold, label=""];
8->61 [style = solid, label="hRef"];
8->87 [style = solid, label="hRef"];
98->82 [style = bold, label=""];
36->70 [style = solid, label="iRef"];
76->48 [style = solid, label="rowType"];
48->79 [style = solid, label="range"];
8->35 [style = solid, label="hRef"];
41->92 [style = dashed, label="0"];
69->99 [style = solid, label="cRef"];
69->14 [style = solid, label="cRef"];
8->82 [style = solid, label="hRef"];
72->14 [style = bold, label=""];
23->61 [style = bold, label=""];
69->10 [style = solid, label="cRef"];
57->14 [style = solid, label="aRef"];
76->48 [style = bold, label=""];
69->6 [style = solid, label="cRef"];
8->27 [style = solid, label="hRef"];
39->81 [style = bold, label=""];
36->62 [style = solid, label="iRef"];
39->23 [style = solid, label="literal1"];
78->84 [style = solid, label="jRef"];
69->34 [style = solid, label="cRef"];
4->18 [style = bold, label=""];
38->45 [style = bold, label=""];
60->41 [style = bold, label=""];
39->54 [style = solid, label="literal1"];
54->97 [style = dashed, label="0"];
69->25 [style = solid, label="cRef"];
48->69 [style = solid, label="range"];
101->104 [style = bold, label=""];
36->47 [style = solid, label="iRef"];
69->53 [style = solid, label="cRef"];
26->81 [style = solid, label="bRef"];
6->53 [style = bold, label=""];
90->87 [style = bold, label=""];
39->61 [style = solid, label="literal1"];
20->8 [style = bold, label=""];
46->85 [style = dashed, label="0"];
62->43 [style = bold, label=""];
37->46 [style = bold, label=""];
40->82 [style = bold, label=""];
57->33 [style = solid, label="aRef"];
96->90 [style = bold, label=""];
8->91 [style = solid, label="hRef"];
53->99 [style = dashed, label="0"];
36->78 [style = bold, label=""];
79->99 [style = solid, label="dRef"];
28->19 [style = bold, label=""];
71->42 [style = bold, label=""];
26->44 [style = solid, label="bRef"];
8->21 [style = solid, label="hRef"];
5->52 [style = bold, label=""];
39->27 [style = solid, label="literal1"];
26->59 [style = solid, label="bRef"];
20->72 [style = solid, label="eRef"];
79->6 [style = solid, label="dRef"];
45->60 [style = bold, label=""];
57->10 [style = solid, label="aRef"];
53->10 [style = bold, label=""];
26->25 [style = solid, label="bRef"];
48->8 [style = solid, label="range"];
57->13 [style = solid, label="aRef"];
32->51 [style = bold, label=""];
3->29 [style = bold, label=""];
57->75 [style = solid, label="aRef"];
20->13 [style = solid, label="eRef"];
8->17 [style = solid, label="hRef"];
30->87 [style = dashed, label="0"];
30->15 [style = bold, label=""];
8->96 [style = solid, label="hRef"];
26->66 [style = solid, label="bRef"];
4->18 [style = solid, label="intType"];
54->64 [style = bold, label=""];
63->11 [style = bold, label=""];
80->81 [style = bold, label=""];
77->44 [style = bold, label=""];
82->3 [style = bold, label=""];
92->96 [style = bold, label=""];
46->28 [style = bold, label=""];
87->84 [style = bold, label=""];
97->64 [style = bold, label=""];
22->68 [style = bold, label=""];
57->24 [style = solid, label="aRef"];
48->57 [style = solid, label="range"];
39->22 [style = solid, label="literal1"];
26->99 [style = solid, label="bRef"];
26->33 [style = solid, label="bRef"];
57->26 [style = bold, label=""];
69->79 [style = bold, label=""];
17->40 [style = bold, label=""];
17->98 [style = bold, label=""];
69->75 [style = solid, label="cRef"];
60->92 [style = bold, label=""];
69->13 [style = solid, label="cRef"];
79->13 [style = solid, label="dRef"];
39->41 [style = solid, label="literal1"];
36->2 [style = solid, label="iRef"];
27->35 [style = bold, label=""];
99->10 [style = bold, label=""];
21->55 [style = bold, label=""];
8->37 [style = solid, label="hRef"];
91->97 [style = bold, label=""];
36->65 [style = solid, label="iRef"];
26->34 [style = solid, label="bRef"];
102->101 [style = bold, label=""];
39->15 [style = solid, label="literal1"];
36->3 [style = solid, label="iRef"];
8->62 [style = solid, label="hRef"];
33->24 [style = bold, label=""];
64->65 [style = bold, label=""];
16->30 [style = bold, label=""];
8->41 [style = solid, label="hRef"];
31->96 [style = dashed, label="0"];
47->83 [style = bold, label=""];
8->92 [style = solid, label="hRef"];
5->95 [style = bold, label=""];
36->55 [style = solid, label="iRef"];
11->50 [style = bold, label=""];
48->36 [style = solid, label="range"];
44->25 [style = bold, label=""];
83->21 [style = bold, label=""];
41->31 [style = bold, label=""];
100->102 [style = bold, label=""];
8->93 [style = solid, label="hRef"];
20->14 [style = solid, label="eRef"];
56->63 [style = bold, label=""];
61->54 [style = bold, label=""];
26->13 [style = solid, label="bRef"];
0->72 [style = bold, label=""];
48->20 [style = solid, label="range"];
57->12 [style = solid, label="aRef"];
36->17 [style = solid, label="iRef"];
26->69 [style = bold, label=""];
2->47 [style = bold, label=""];
39->40 [style = solid, label="literal1"];
57->25 [style = solid, label="aRef"];
26->77 [style = solid, label="bRef"];
39->52 [style = solid, label="literal1"];
22->94 [style = dashed, label="0"];
69->44 [style = solid, label="cRef"];
34->66 [style = bold, label=""];
75->13 [style = bold, label=""];
48->80 [style = solid, label="range"];
48->78 [style = solid, label="range"];
20->44 [style = solid, label="eRef"];
89->67 [style = bold, label=""];
48->57 [style = bold, label=""];
57->53 [style = solid, label="aRef"];
31->16 [style = bold, label=""];
47->73 [style = bold, label=""];
36->5 [style = solid, label="iRef"];
86->88 [style = bold, label=""];
20->25 [style = solid, label="eRef"];
8->86 [style = solid, label="hRef"];
79->0 [style = solid, label="dRef"];
26->24 [style = solid, label="bRef"];
1->71 [style = bold, label=""];
51->49 [style = bold, label=""];
39->73 [style = solid, label="literal1"];
36->19 [style = solid, label="iRef"];
20->0 [style = solid, label="eRef"];
18->76 [style = bold, label=""];
8->64 [style = solid, label="hRef"];
26->53 [style = solid, label="bRef"];
52->95 [style = dashed, label="0"];
39->31 [style = solid, label="literal1"];
8->28 [style = solid, label="hRef"];
73->83 [style = dashed, label="0"];
8->15 [style = solid, label="hRef"];
8->74 [style = solid, label="hRef"];
50->1 [style = bold, label=""];
6->99 [style = bold, label=""];
68->2 [style = bold, label=""];
79->75 [style = solid, label="dRef"];
29->94 [style = bold, label=""];
88->91 [style = bold, label=""];
85->28 [style = bold, label=""];
79->53 [style = solid, label="dRef"];
57->34 [style = solid, label="aRef"];
13->38 [style = bold, label=""];
57->81 [style = solid, label="aRef"];
39->30 [style = solid, label="literal1"];
81->33 [style = bold, label=""];
14->59 [style = bold, label=""];
29->22 [style = bold, label=""];
8->30 [style = solid, label="hRef"];
57->44 [style = solid, label="aRef"];
26->14 [style = solid, label="bRef"];
15->27 [style = bold, label=""];
12->77 [style = bold, label=""];
39->53 [style = solid, label="literal1"];
43->56 [style = bold, label=""];
8->47 [style = solid, label="hRef"];
57->59 [style = solid, label="aRef"];
}
