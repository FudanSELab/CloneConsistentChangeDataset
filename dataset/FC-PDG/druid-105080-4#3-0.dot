digraph {
3 [style = filled, label = "EasyMock.replay(resourceFactory)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "resourceFactory.close(\"billy0\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "latch3.countDown()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"billy1\",billy1Thread.getValue())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "EasyMock.reset(resourceFactory)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "CountDownLatch latch1 = new CountDownLatch(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "EasyMock.expect(resourceFactory.isGood(\"billy0\")).andReturn(true).times(1)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "blockedThread.waitForValueToBeGotten(1,TimeUnit.SECONDS)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "latch2.countDown()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "billy1Thread.start()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.verify(resourceFactory)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "primePool()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.reset(resourceFactory)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.expectLastCall().times(1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "MyThread billy1Thread = new MyThread(latch1,\"billy\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "EasyMock.expect(resourceFactory.isGood(\"billy1\")).andReturn(true).times(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CountDownLatch latch2 = new CountDownLatch(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"billy0\",billy0Thread.getValue())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testCloseUnblocks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CountDownLatch latch3 = new CountDownLatch(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "latch1.countDown()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "EasyMock.verify(resourceFactory)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "billy0Thread.join()@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "blockedThread.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "billy0Thread.waitForValueToBeGotten(1,TimeUnit.SECONDS)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Assert.assertEquals(\"billy0\",blockedThread.getValue())@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "blockedThread.join()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "billy0Thread.start()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "resourceFactory.close(\"sally1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "blockedThread.waitForValueToBeGotten(1,TimeUnit.SECONDS)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "resourceFactory.close(\"sally0\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "billy1Thread.waitForValueToBeGotten(1,TimeUnit.SECONDS)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.expect(resourceFactory.isGood(\"billy0\")).andReturn(true).times(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "EasyMock.expectLastCall().times(1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testCloseUnblocks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "EasyMock.replay(resourceFactory)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "MyThread billy0Thread = new MyThread(latch2,\"billy\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "MyThread blockedThread = new MyThread(latch3,\"billy\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(null,blockedThread.getValue())@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "pool.close()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testTakeMoreThanAllowed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "EasyMock.expectLastCall().once()@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31->21 [style = bold, label=""];
22->2 [style = bold, label=""];
25->23 [style = bold, label=""];
27->14 [style = bold, label=""];
35->3 [style = bold, label=""];
16->40 [style = bold, label=""];
12->28 [style = bold, label=""];
8->41 [style = bold, label=""];
21->34 [style = solid, label="latch2"];
23->15 [style = bold, label=""];
37->24 [style = bold, label=""];
2->26 [style = bold, label=""];
8->12 [style = bold, label=""];
31->33 [style = solid, label="latch1"];
7->9 [style = bold, label=""];
20->5 [style = bold, label=""];
24->4 [style = bold, label=""];
9->31 [style = bold, label=""];
38->29 [style = bold, label=""];
1->29 [style = bold, label=""];
10->27 [style = bold, label=""];
5->34 [style = bold, label=""];
14->0 [style = bold, label=""];
33->20 [style = bold, label=""];
26->10 [style = bold, label=""];
16->36 [style = bold, label=""];
12->41 [style = dashed, label="0"];
19->33 [style = bold, label=""];
29->25 [style = bold, label=""];
19->26 [style = solid, label="latch3"];
32->18 [style = bold, label=""];
3->6 [style = bold, label=""];
21->19 [style = bold, label=""];
39->24 [style = bold, label=""];
15->11 [style = bold, label=""];
11->8 [style = bold, label=""];
16->3 [style = bold, label=""];
4->13 [style = bold, label=""];
18->17 [style = bold, label=""];
1->38 [style = bold, label=""];
13->9 [style = bold, label=""];
17->7 [style = bold, label=""];
34->22 [style = bold, label=""];
13->32 [style = bold, label=""];
40->3 [style = bold, label=""];
6->1 [style = bold, label=""];
30->24 [style = bold, label=""];
36->35 [style = bold, label=""];
10->0 [style = bold, label=""];
0->16 [style = bold, label=""];
}
