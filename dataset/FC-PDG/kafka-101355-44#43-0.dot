digraph {
86 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final long startTime = segmentInterval * 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "windowStore.put(1,\"one\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "windowStore.put(4,\"four\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "windowStore.flush()@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@61@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "setCurrentTime(startTime + increment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(asList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "windowStore.close()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "windowStore.put(6,\"six\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "windowStore.flush()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "windowStore.put(2,\"two\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
95 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "windowStore.put(5,\"five\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "windowStore.flush()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "windowStore.put(7,\"seven\")@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@58@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
65 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "windowStore.put(8,\"eight\")@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
101 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
94 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@59@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@57@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final long increment = segmentInterval / 2@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32->35 [style = bold, label=""];
8->16 [style = bold, label=""];
2->80 [style = solid, label="increment"];
26->46 [style = solid, label="startTime"];
0->93 [style = solid, label="startTime"];
100->72 [style = bold, label=""];
92->80 [style = bold, label=""];
0->51 [style = solid, label="increment"];
0->37 [style = solid, label="increment"];
75->6 [style = bold, label=""];
0->52 [style = solid, label="increment"];
26->63 [style = solid, label="startTime"];
90->99 [style = bold, label=""];
62->54 [style = bold, label=""];
55->49 [style = bold, label=""];
0->21 [style = solid, label="increment"];
50->44 [style = bold, label=""];
0->61 [style = solid, label="increment"];
12->65 [style = dashed, label="0"];
59->51 [style = bold, label=""];
0->46 [style = solid, label="increment"];
2->41 [style = solid, label="increment"];
0->49 [style = solid, label="increment"];
0->80 [style = solid, label="startTime"];
31->21 [style = bold, label=""];
19->36 [style = bold, label=""];
0->29 [style = solid, label="increment"];
0->65 [style = solid, label="increment"];
52->59 [style = bold, label=""];
25->95 [style = bold, label=""];
26->47 [style = solid, label="startTime"];
11->60 [style = bold, label=""];
33->63 [style = bold, label=""];
68->73 [style = bold, label=""];
0->41 [style = solid, label="increment"];
99->97 [style = bold, label=""];
26->25 [style = solid, label="startTime"];
48->62 [style = bold, label=""];
0->14 [style = solid, label="increment"];
63->55 [style = bold, label=""];
2->68 [style = solid, label="increment"];
65->50 [style = bold, label=""];
26->21 [style = solid, label="startTime"];
34->26 [style = bold, label=""];
2->66 [style = solid, label="increment"];
78->75 [style = bold, label=""];
26->12 [style = solid, label="startTime"];
29->46 [style = bold, label=""];
2->76 [style = solid, label="increment"];
25->19 [style = bold, label=""];
54->33 [style = bold, label=""];
96->10 [style = bold, label=""];
7->43 [style = bold, label=""];
32->55 [style = dashed, label="0"];
84->91 [style = bold, label=""];
2->92 [style = solid, label="increment"];
0->42 [style = solid, label="startTime"];
26->50 [style = solid, label="startTime"];
30->8 [style = bold, label=""];
79->46 [style = bold, label=""];
1->31 [style = bold, label=""];
26->35 [style = solid, label="startTime"];
20->47 [style = dashed, label="0"];
46->64 [style = dashed, label="0"];
26->20 [style = solid, label="startTime"];
26->55 [style = solid, label="startTime"];
0->64 [style = solid, label="increment"];
93->84 [style = bold, label=""];
21->13 [style = bold, label=""];
2->101 [style = solid, label="increment"];
2->31 [style = bold, label=""];
82->92 [style = bold, label=""];
0->82 [style = solid, label="startTime"];
0->78 [style = solid, label="startTime"];
0->41 [style = solid, label="startTime"];
47->53 [style = bold, label=""];
2->93 [style = solid, label="increment"];
0->62 [style = solid, label="increment"];
22->33 [style = bold, label=""];
26->5 [style = solid, label="startTime"];
26->14 [style = solid, label="startTime"];
26->59 [style = solid, label="startTime"];
0->18 [style = solid, label="increment"];
89->42 [style = bold, label=""];
0->72 [style = solid, label="startTime"];
35->49 [style = dashed, label="0"];
85->77 [style = bold, label=""];
0->6 [style = solid, label="startTime"];
49->58 [style = bold, label=""];
0->59 [style = solid, label="increment"];
44->3 [style = bold, label=""];
81->13 [style = bold, label=""];
0->101 [style = solid, label="startTime"];
77->74 [style = bold, label=""];
0->15 [style = solid, label="increment"];
0->54 [style = solid, label="increment"];
26->38 [style = solid, label="startTime"];
38->45 [style = bold, label=""];
87->101 [style = bold, label=""];
0->48 [style = solid, label="increment"];
2->90 [style = solid, label="increment"];
26->9 [style = solid, label="startTime"];
101->66 [style = bold, label=""];
0->76 [style = solid, label="startTime"];
0->97 [style = solid, label="startTime"];
2->79 [style = solid, label="increment"];
0->20 [style = solid, label="startTime"];
15->50 [style = dashed, label="0"];
74->98 [style = bold, label=""];
0->47 [style = solid, label="increment"];
0->38 [style = solid, label="increment"];
26->22 [style = solid, label="startTime"];
13->37 [style = bold, label=""];
35->40 [style = bold, label=""];
26->0 [style = bold, label=""];
21->81 [style = bold, label=""];
45->14 [style = bold, label=""];
0->74 [style = solid, label="startTime"];
0->27 [style = solid, label="increment"];
26->60 [style = solid, label="startTime"];
26->62 [style = solid, label="startTime"];
0->7 [style = solid, label="increment"];
9->94 [style = bold, label=""];
0->50 [style = solid, label="increment"];
43->12 [style = bold, label=""];
0->69 [style = solid, label="startTime"];
71->93 [style = bold, label=""];
2->96 [style = solid, label="increment"];
7->59 [style = dashed, label="0"];
98->78 [style = bold, label=""];
0->43 [style = solid, label="increment"];
26->51 [style = solid, label="startTime"];
88->70 [style = bold, label=""];
26->18 [style = solid, label="startTime"];
0->96 [style = solid, label="startTime"];
70->0 [style = bold, label=""];
0->84 [style = solid, label="startTime"];
56->48 [style = bold, label=""];
2->13 [style = solid, label="increment"];
28->85 [style = bold, label=""];
53->64 [style = bold, label=""];
14->39 [style = bold, label=""];
26->7 [style = solid, label="startTime"];
0->86 [style = solid, label="startTime"];
2->74 [style = solid, label="increment"];
22->54 [style = dashed, label="0"];
91->90 [style = bold, label=""];
26->15 [style = solid, label="startTime"];
26->58 [style = solid, label="startTime"];
0->6 [style = solid, label="increment"];
0->20 [style = solid, label="increment"];
27->18 [style = bold, label=""];
18->24 [style = bold, label=""];
0->35 [style = solid, label="startTime"];
72->69 [style = bold, label=""];
46->78 [style = dashed, label="0"];
76->35 [style = bold, label=""];
0->75 [style = solid, label="startTime"];
2->1 [style = bold, label=""];
42->25 [style = bold, label=""];
2->75 [style = solid, label="increment"];
6->61 [style = dashed, label="0"];
46->83 [style = bold, label=""];
66->39 [style = bold, label=""];
11->4 [style = bold, label=""];
57->26 [style = bold, label=""];
0->91 [style = solid, label="startTime"];
0->67 [style = solid, label="startTime"];
0->92 [style = solid, label="startTime"];
2->98 [style = solid, label="increment"];
15->44 [style = bold, label=""];
0->12 [style = solid, label="increment"];
2->69 [style = solid, label="increment"];
27->56 [style = dashed, label="0"];
0->55 [style = solid, label="increment"];
18->48 [style = dashed, label="0"];
33->5 [style = bold, label=""];
0->87 [style = solid, label="startTime"];
97->45 [style = bold, label=""];
0->32 [style = solid, label="increment"];
0->77 [style = solid, label="startTime"];
26->41 [style = solid, label="startTime"];
27->75 [style = dashed, label="0"];
6->20 [style = bold, label=""];
5->32 [style = bold, label=""];
83->100 [style = bold, label=""];
26->64 [style = solid, label="startTime"];
0->56 [style = solid, label="increment"];
26->52 [style = solid, label="startTime"];
0->85 [style = solid, label="startTime"];
0->40 [style = solid, label="startTime"];
60->61 [style = bold, label=""];
2->42 [style = solid, label="increment"];
2->86 [style = solid, label="increment"];
2->6 [style = solid, label="increment"];
26->1 [style = solid, label="startTime"];
80->68 [style = bold, label=""];
0->13 [style = solid, label="startTime"];
26->65 [style = solid, label="startTime"];
2->35 [style = solid, label="increment"];
0->25 [style = solid, label="increment"];
51->65 [style = bold, label=""];
28->17 [style = bold, label=""];
2->73 [style = solid, label="increment"];
0->24 [style = solid, label="increment"];
10->9 [style = bold, label=""];
26->56 [style = solid, label="startTime"];
2->99 [style = solid, label="increment"];
41->52 [style = dashed, label="0"];
29->53 [style = dashed, label="0"];
37->42 [style = bold, label=""];
26->54 [style = solid, label="startTime"];
26->29 [style = solid, label="startTime"];
0->73 [style = solid, label="startTime"];
67->76 [style = bold, label=""];
36->10 [style = bold, label=""];
2->91 [style = solid, label="increment"];
2->72 [style = solid, label="increment"];
26->24 [style = solid, label="startTime"];
26->40 [style = solid, label="startTime"];
26->27 [style = solid, label="startTime"];
16->11 [style = bold, label=""];
0->90 [style = solid, label="startTime"];
41->7 [style = bold, label=""];
2->94 [style = solid, label="increment"];
20->29 [style = bold, label=""];
4->6 [style = bold, label=""];
24->62 [style = dashed, label="0"];
0->31 [style = solid, label="startTime"];
0->2 [style = bold, label=""];
0->28 [style = solid, label="increment"];
12->15 [style = bold, label=""];
26->53 [style = solid, label="startTime"];
2->78 [style = solid, label="increment"];
2->20 [style = solid, label="increment"];
24->20 [style = dashed, label="0"];
73->87 [style = bold, label=""];
14->82 [style = bold, label=""];
26->36 [style = solid, label="startTime"];
0->22 [style = solid, label="increment"];
0->94 [style = solid, label="startTime"];
17->30 [style = bold, label=""];
0->98 [style = solid, label="startTime"];
26->28 [style = solid, label="startTime"];
2->67 [style = solid, label="increment"];
24->22 [style = bold, label=""];
20->74 [style = dashed, label="0"];
26->4 [style = solid, label="startTime"];
39->28 [style = bold, label=""];
0->68 [style = solid, label="startTime"];
0->66 [style = solid, label="startTime"];
26->6 [style = solid, label="startTime"];
18->6 [style = dashed, label="0"];
9->23 [style = bold, label=""];
0->9 [style = solid, label="increment"];
0->100 [style = solid, label="startTime"];
26->61 [style = solid, label="startTime"];
5->63 [style = dashed, label="0"];
26->48 [style = solid, label="startTime"];
0->53 [style = solid, label="increment"];
0->35 [style = solid, label="increment"];
64->56 [style = bold, label=""];
20->79 [style = bold, label=""];
26->49 [style = solid, label="startTime"];
4->60 [style = dashed, label="0"];
0->40 [style = solid, label="increment"];
94->23 [style = bold, label=""];
61->47 [style = bold, label=""];
0->36 [style = solid, label="increment"];
40->58 [style = dashed, label="0"];
46->27 [style = bold, label=""];
23->38 [style = bold, label=""];
3->43 [style = dashed, label="0"];
40->41 [style = bold, label=""];
95->96 [style = bold, label=""];
2->84 [style = solid, label="increment"];
0->79 [style = solid, label="startTime"];
0->99 [style = solid, label="startTime"];
37->89 [style = bold, label=""];
58->52 [style = bold, label=""];
43->51 [style = dashed, label="0"];
26->43 [style = solid, label="startTime"];
26->37 [style = solid, label="startTime"];
2->77 [style = solid, label="increment"];
69->86 [style = bold, label=""];
0->71 [style = solid, label="startTime"];
2->97 [style = solid, label="increment"];
26->32 [style = solid, label="startTime"];
2->87 [style = solid, label="increment"];
2->40 [style = solid, label="increment"];
86->67 [style = bold, label=""];
0->58 [style = solid, label="increment"];
38->71 [style = bold, label=""];
}
