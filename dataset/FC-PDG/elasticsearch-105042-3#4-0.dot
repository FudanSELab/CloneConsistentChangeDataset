digraph {
15 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(2).getKey())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fieldType.setName(\"field\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(-10d,histogram.getBuckets().get(0).getKey())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Document doc = new Document()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(3).getKey())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(6,histogram.getBuckets().size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(45d,histogram.getBuckets().get(5).getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "w.addDocument(doc)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,fieldType)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "RangeType rangeType = RangeType.LONG@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "doc.add(new SortedNumericDocValuesField(\"field\",NumericUtils.doubleToSortableLong(value)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testMultipleRanges['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(1).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testMultipleRanges['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(2).getDocCount())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testDoubles['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(50d,histogram.getBuckets().get(3).getKey())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(4,histogram.getBuckets().size())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Set.of(new RangeFieldMapper.Range(rangeType,1L,5L,true,true),new RangeFieldMapper.Range(rangeType,-3L,4L,true,true),new RangeFieldMapper.Range(rangeType,4L,13L,true,true),new RangeFieldMapper.Range(rangeType,42L,49L,true,true)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(0).getDocCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "MappedFieldType fieldType = new NumberFieldMapper.NumberFieldType(NumberFieldMapper.NumberType.DOUBLE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(40d,histogram.getBuckets().get(4).getKey())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MappedFieldType fieldType = new RangeFieldMapper.Builder(\"field\",rangeType).fieldType()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertTrue(AggregationInspectionHelper.hasValue(histogram))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(-5d,histogram.getBuckets().get(0).getKey())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->26 [style = bold, label=""];
15->30 [style = solid, label="searcher"];
4->11 [style = solid, label="aggBuilder"];
23->20 [style = bold, label=""];
18->9 [style = dashed, label="0"];
8->15 [style = bold, label=""];
21->1 [style = solid, label="rangeType"];
18->23 [style = bold, label=""];
6->34 [style = bold, label=""];
35->3 [style = bold, label=""];
0->11 [style = solid, label="searcher"];
9->31 [style = bold, label=""];
31->32 [style = bold, label=""];
4->15 [style = bold, label=""];
21->24 [style = solid, label="rangeType"];
30->32 [style = solid, label="histogram"];
6->30 [style = solid, label="aggBuilder"];
0->11 [style = bold, label=""];
8->34 [style = dashed, label="0"];
17->0 [style = dashed, label="0"];
5->18 [style = bold, label=""];
15->30 [style = bold, label=""];
3->16 [style = bold, label=""];
26->6 [style = bold, label=""];
19->6 [style = bold, label=""];
4->24 [style = solid, label="aggBuilder"];
12->7 [style = bold, label=""];
7->3 [style = bold, label=""];
33->26 [style = solid, label="doc"];
4->0 [style = bold, label=""];
20->10 [style = bold, label=""];
7->27 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
6->4 [style = bold, label=""];
12->11 [style = dashed, label="0"];
17->12 [style = bold, label=""];
28->33 [style = bold, label=""];
21->22 [style = bold, label=""];
22->6 [style = solid, label="doc"];
0->24 [style = solid, label="searcher"];
15->0 [style = bold, label=""];
0->24 [style = bold, label=""];
2->14 [style = bold, label=""];
11->24 [style = dashed, label="0"];
24->17 [style = bold, label=""];
9->5 [style = bold, label=""];
34->4 [style = bold, label=""];
4->8 [style = bold, label=""];
11->17 [style = bold, label=""];
10->2 [style = bold, label=""];
30->0 [style = bold, label=""];
22->1 [style = bold, label=""];
29->35 [style = bold, label=""];
27->29 [style = bold, label=""];
34->30 [style = solid, label="fieldType"];
1->19 [style = bold, label=""];
1->19 [style = solid, label="encodedRange"];
13->21 [style = bold, label=""];
26->33 [style = bold, label=""];
16->9 [style = bold, label=""];
33->22 [style = bold, label=""];
25->21 [style = bold, label=""];
8->11 [style = solid, label="fieldType"];
11->27 [style = bold, label=""];
}
