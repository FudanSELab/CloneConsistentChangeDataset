digraph {
6 [style = filled, label = "task.suspend()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "task.initializeIfNeeded()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.replay(stateManager)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "task.closeDirty()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.expect(stateManager.changelogPartitions()).andReturn(Collections.emptySet()).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(getTaskMetrics(),empty())@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldUnregisterMetricsInCloseClean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andStubReturn(Collections.emptyMap())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "shouldUnregisterMetricsInCloseDirty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "task.closeClean()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "shouldUnregisterMetricsInCloseClean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "task = createStandbyTask()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->3 [style = bold, label=""];
6->1 [style = bold, label=""];
4->3 [style = bold, label=""];
0->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->6 [style = bold, label=""];
11->3 [style = bold, label=""];
1->7 [style = bold, label=""];
10->7 [style = bold, label=""];
6->10 [style = bold, label=""];
3->0 [style = bold, label=""];
2->5 [style = bold, label=""];
8->9 [style = bold, label=""];
}
