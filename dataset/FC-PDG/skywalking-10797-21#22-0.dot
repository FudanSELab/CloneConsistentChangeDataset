digraph {
0 [style = filled, label = "final String group@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sql.append(\" and \").append(ServiceTraffic.NAME).append(\" like concat('%',?,'%')\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "sql.append(\" and \").append(ServiceTraffic.GROUP).append(\"=?\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "sql.append(ServiceTraffic.GROUP).append(\"=?\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "return buildServices(resultSet)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!Strings.isNullOrEmpty(keyword)@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Object> condition = new ArrayList<>(5)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String keyword@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "StringBuilder sql = new StringBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StringUtil.isNotEmpty(group)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "condition.add(keyword)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "getAllServices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "getAllServices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sql.append(\" limit \").append(metadataQueryMaxSize)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "condition.add(group)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "condition.add(NodeType.Normal.value())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "searchServices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sql.append(ServiceTraffic.NODE_TYPE).append(\"=?\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sql.append(\"select * from \").append(ServiceTraffic.INDEX_NAME).append(\" where \")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
13->10 [style = bold, label=""];
5->10 [style = bold, label=""];
15->2 [style = bold, label=""];
14->17 [style = solid, label="keyword"];
16->18 [style = bold, label=""];
3->1 [style = bold, label=""];
17->6 [style = bold, label=""];
16->18 [style = dotted, label="true"];
0->9 [style = solid, label="group"];
16->6 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
18->17 [style = bold, label=""];
4->2 [style = bold, label=""];
15->14 [style = dotted, label="true"];
5->18 [style = dashed, label="0"];
10->6 [style = bold, label=""];
9->6 [style = bold, label=""];
1->11 [style = bold, label=""];
0->10 [style = solid, label="group"];
7->9 [style = bold, label=""];
0->14 [style = dashed, label="0"];
12->2 [style = bold, label=""];
9->13 [style = dotted, label="true"];
6->8 [style = bold, label=""];
7->16 [style = bold, label=""];
10->17 [style = dashed, label="0"];
9->5 [style = bold, label=""];
12->0 [style = dotted, label="true"];
9->10 [style = dotted, label="true"];
11->7 [style = bold, label=""];
9->13 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
