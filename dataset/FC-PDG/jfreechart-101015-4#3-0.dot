digraph {
0 [style = filled, label = "DefaultHighLowDataset d2 = (DefaultHighLowDataset)TestUtilities.serialised(d1)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(d1,d2)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(d1.equals(d2))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DefaultHighLowDataset d1 = new DefaultHighLowDataset(\"Series 1\",new Date((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@264798,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@26479e,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2647a2,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2647a6,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2647aa,new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2647ae)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(d1 != d2)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DefaultHighLowDataset d2 = (DefaultHighLowDataset)TestUtils.serialised(d1)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DefaultHighLowDataset d2 = (DefaultHighLowDataset)d1.clone()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->5 [style = dashed, label="0"];
2->0 [style = solid, label="d1"];
9->2 [style = bold, label=""];
0->1 [style = solid, label="d2"];
5->1 [style = solid, label="d2"];
4->2 [style = bold, label=""];
2->10 [style = bold, label=""];
0->10 [style = dashed, label="0"];
8->7 [style = bold, label=""];
5->1 [style = bold, label=""];
2->5 [style = solid, label="d1"];
2->0 [style = bold, label=""];
10->6 [style = solid, label="d2"];
2->1 [style = solid, label="d1"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
10->8 [style = solid, label="d2"];
2->8 [style = solid, label="d1"];
1->8 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
