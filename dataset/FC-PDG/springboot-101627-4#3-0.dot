digraph {
7 [style = filled, label = "ConfigDataEnvironmentContributor contributor = createBoundContributor(location,configData,0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "bindCreatesImportedContributor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(contributor.getImports()).isEmpty()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(contributor.getKind()).isEqualTo(Kind.UNBOUND_IMPORT)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "ConfigDataEnvironmentContributor contributor = ConfigDataEnvironmentContributor.ofUnboundImport(location,configData,0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "propertySource.setProperty(\"spring.config.import\",\"test\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestLocation location = new TestLocation(\"test\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "bindCreatesImportedContributor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(contributor.getImports()).containsExactly(TEST_LOCATION)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(contributor.getResource()).isSameAs(location)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(contributor.getLocation()).isSameAs(location)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ofUnboundImportCreatesImportedContributor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(contributor.getConfigurationPropertySource()).isNotNull()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(contributor.getImports()).containsExactly(\"test\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(contributor.getChildren(ImportPhase.BEFORE_PROFILE_ACTIVATION)).isEmpty()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConfigData configData = new ConfigData(Collections.singleton(propertySource))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(contributor.getKind()).isEqualTo(Kind.BOUND_IMPORT)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(contributor.isActive(this.activationContext)).isTrue()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestResource location = new TestResource(\"test\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(contributor.getPropertySource()).isEqualTo(propertySource)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MockPropertySource propertySource = new MockPropertySource()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
8->10 [style = bold, label=""];
16->13 [style = bold, label=""];
7->18 [style = dashed, label="0"];
17->1 [style = bold, label=""];
3->0 [style = solid, label="propertySource"];
18->19 [style = bold, label=""];
3->6 [style = bold, label=""];
3->11 [style = solid, label="propertySource"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
2->9 [style = bold, label=""];
1->0 [style = bold, label=""];
19->2 [style = bold, label=""];
15->3 [style = bold, label=""];
11->18 [style = bold, label=""];
13->1 [style = bold, label=""];
11->7 [style = solid, label="configData"];
15->16 [style = solid, label="location"];
5->12 [style = bold, label=""];
2->16 [style = dashed, label="0"];
6->11 [style = bold, label=""];
9->17 [style = dashed, label="0"];
12->2 [style = solid, label="location"];
20->12 [style = bold, label=""];
0->8 [style = bold, label=""];
9->13 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
11->18 [style = solid, label="configData"];
4->19 [style = dashed, label="0"];
12->7 [style = solid, label="location"];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
15->7 [style = solid, label="location"];
9->1 [style = bold, label=""];
12->18 [style = solid, label="location"];
11->7 [style = bold, label=""];
4->16 [style = bold, label=""];
}
