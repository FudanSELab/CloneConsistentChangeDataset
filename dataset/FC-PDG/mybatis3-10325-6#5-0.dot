digraph {
3 [style = filled, label = "parameter.put(\"orderId\",99)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,parameter.get(\"detailCount\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "mapper.getOrder1(parameter)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldNullResultSetNotCauseNpe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(Integer.valueOf(0),parameter.get(\"detailCount\"))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "mapper.getOrder3(parameter,new ResultHandler<Order>(){@Override public void handleResult(ResultContext<? extends Order> resultContext){}})@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "OrdersMapper mapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "@SuppressWarnings(\"unchecked\") List<Order> orders = (List<Order>)parameter.get(\"order\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Order order = orders.get(0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "parameter.put(\"orderId\",1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,orders.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "shouldNullResultSetNotCauseNpe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(parameter.get(\"order\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testRefCursor1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "mapper.getOrder3(parameter,null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Map<String,Object> parameter = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(3,order.getDetailLines().size())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
2->1 [style = bold, label=""];
12->11 [style = bold, label=""];
1->0 [style = bold, label=""];
4->6 [style = dashed, label="0"];
8->1 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
0->5 [style = solid, label="parameter"];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
3->10 [style = dashed, label="0"];
0->13 [style = solid, label="parameter"];
5->7 [style = dashed, label="0"];
9->1 [style = bold, label=""];
0->7 [style = solid, label="parameter"];
13->14 [style = bold, label=""];
}
