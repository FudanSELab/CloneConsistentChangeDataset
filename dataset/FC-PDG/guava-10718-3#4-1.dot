digraph {
3 [style = filled, label = "putEdge(1,1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assume().that(incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assume().that(graph.incidentEdgeOrder().type()).isEqualTo(ElementOrder.Type.STABLE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "putEdge(1,3)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assume().that(graph.allowsSelfLoops()).isTrue()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "putEdge(2,1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(graph.incidentEdges(1)).containsExactly(EndpointPair.unordered(2,1),EndpointPair.unordered(1,1),EndpointPair.unordered(1,3)).inOrder()@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "stableIncidentEdgeOrder_incidentEdges_withSelfLoop_returnsInEdgeInsertionOrder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assume().that(allowsSelfLoops()).isTrue()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
6->1 [style = bold, label=""];
1->8 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
1->4 [style = bold, label=""];
9->0 [style = bold, label=""];
3->2 [style = bold, label=""];
10->1 [style = bold, label=""];
7->8 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
8->9 [style = bold, label=""];
}
