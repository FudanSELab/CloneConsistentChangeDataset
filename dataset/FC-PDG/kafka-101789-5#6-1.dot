digraph {
6 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "finalResultsShouldDropTombstonesForTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "processor.process(key,value)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "finalResultsShouldDropTombstonesForTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(untilTimeLimit(ofMillis(0),maxRecords(0)),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0L,100L))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Windowed<String> key = new Windowed<>(\"hey\",new TimeWindow(0,100L))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "suppressShouldNotDropTombstonesForTimeWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final Harness<Windowed<String>,Long> harness = new Harness<>(finalResults(ofMillis(0L)),timeWindowedSerdeFrom(,100L),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final long timestamp = 100L@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,null,timestamp)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(context.forwarded(),hasSize(0))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final KTableSuppressProcessor<Windowed<String>,Long> processor = harness.processor@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->8 [style = solid, label="key"];
5->10 [style = bold, label=""];
5->8 [style = bold, label=""];
8->10 [style = dashed, label="0"];
0->6 [style = bold, label=""];
5->8 [style = solid, label="value"];
5->18 [style = solid, label="value"];
2->3 [style = bold, label=""];
0->12 [style = dashed, label="0"];
1->2 [style = solid, label="timestamp"];
12->6 [style = bold, label=""];
10->7 [style = bold, label=""];
15->18 [style = bold, label=""];
3->8 [style = solid, label="key"];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
1->14 [style = solid, label="timestamp"];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
11->0 [style = bold, label=""];
17->12 [style = bold, label=""];
5->10 [style = solid, label="value"];
16->18 [style = solid, label="key"];
7->13 [style = dashed, label="0"];
16->5 [style = bold, label=""];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
3->10 [style = solid, label="key"];
18->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
8->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
