digraph {
5 [style = filled, label = "locked@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "removeRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "classOperands.put(subClass,operand)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "ruleTraitDef.deregisterConverterRule(this,converterRule)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "RelOptRule rule@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "classOperands.values().removeIf(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String ruleName = rule.toString()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "rule instanceof ConverterRule@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "rule instanceof ConverterRule@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "ruleNames.put(ruleName,rule) != null@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "return false@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "unmapRuleDescription(rule)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RelOptRule rule@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "addRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "return false@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "traitDefs.contains(ruleTraitDef)@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "ConverterRule converterRule = (ConverterRule)rule@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return true@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "return true@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "throw new RuntimeException(\"Rule description '\" + ruleName + \"' is not unique. \")@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assert added@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final boolean added = ruleSet.add(rule)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "mapRuleDescription(rule)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "final RelTraitDef ruleTraitDef = ruleTrait.getTraitDef()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final RelTrait ruleTrait = converterRule.getInTrait()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ruleSet.contains(rule)@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "addRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "!ruleSet.remove(rule)@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return false@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ruleTraitDef.registerConverterRule(this,converterRule)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29->30 [style = bold, label=""];
14->5 [style = bold, label=""];
3->12 [style = dotted, label="true"];
3->10 [style = bold, label=""];
14->0 [style = dotted, label="true"];
22->23 [style = dotted, label="true"];
0->10 [style = solid, label="rule"];
10->2 [style = bold, label=""];
11->20 [style = bold, label=""];
18->20 [style = bold, label=""];
22->32 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
2->7 [style = bold, label=""];
0->16 [style = solid, label="rule"];
9->16 [style = bold, label=""];
16->19 [style = bold, label=""];
25->22 [style = solid, label="rule"];
22->27 [style = bold, label=""];
32->27 [style = bold, label=""];
26->33 [style = bold, label=""];
33->32 [style = bold, label=""];
0->11 [style = solid, label="rule"];
13->9 [style = dotted, label="true"];
11->17 [style = bold, label=""];
8->18 [style = solid, label="ruleTraitDef"];
11->17 [style = dotted, label="true"];
33->32 [style = solid, label="ruleTraitDef"];
0->17 [style = solid, label="rule"];
4->20 [style = bold, label=""];
21->29 [style = bold, label=""];
24->22 [style = bold, label=""];
23->26 [style = bold, label=""];
30->31 [style = bold, label=""];
7->13 [style = bold, label=""];
8->18 [style = bold, label=""];
28->27 [style = bold, label=""];
5->6 [style = dotted, label="true"];
12->10 [style = bold, label=""];
7->13 [style = solid, label="ruleName"];
11->8 [style = dotted, label="true"];
32->28 [style = dotted, label="true"];
0->25 [style = dashed, label="0"];
23->28 [style = solid, label="converterRule"];
18->4 [style = dotted, label="true"];
19->11 [style = bold, label=""];
3->12 [style = bold, label=""];
13->16 [style = bold, label=""];
17->15 [style = bold, label=""];
32->28 [style = bold, label=""];
29->30 [style = dotted, label="true"];
6->3 [style = bold, label=""];
29->31 [style = bold, label=""];
11->18 [style = dotted, label="true"];
17->4 [style = solid, label="converterRule"];
11->15 [style = dotted, label="true"];
25->23 [style = solid, label="rule"];
0->13 [style = solid, label="rule"];
25->31 [style = solid, label="rule"];
0->3 [style = solid, label="rule"];
7->9 [style = solid, label="ruleName"];
5->3 [style = bold, label=""];
13->9 [style = bold, label=""];
31->24 [style = bold, label=""];
22->23 [style = bold, label=""];
15->8 [style = bold, label=""];
22->33 [style = dotted, label="true"];
21->25 [style = dotted, label="true"];
5->6 [style = bold, label=""];
18->4 [style = bold, label=""];
22->26 [style = dotted, label="true"];
}
