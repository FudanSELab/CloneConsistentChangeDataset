digraph {
10 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",INT_MAX_VALUE + 1)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (29 < 30)\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",79)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",80)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testStructFieldGtEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertFalse(\"Should not read: id range below lower bound (5 < 30)\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testStructFieldGtEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertTrue(\"Should read: may possible ids\",shouldRead)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",75)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testStructFieldLtEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"struct_not_null.int_field\",29)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",85)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"struct_not_null.int_field\",30)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",INT_MAX_VALUE)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"struct_not_null.int_field\",5)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "boolean shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",INT_MAX_VALUE + 6)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,greaterThanOrEqual(\"struct_not_null.int_field\",INT_MAX_VALUE - 4)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertTrue(\"Should read: one possible id\",shouldRead)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (80 > 79)\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(\"Should not read: id range above upper bound (85 < 79)\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "shouldRead = new ParquetDictionaryRowGroupFilter(SCHEMA,lessThanOrEqual(\"struct_not_null.int_field\",79)).shouldRead(parquetSchema,rowGroupMetadata,dictionaryStore)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(\"Should read: many possible ids\",shouldRead)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7->3 [style = solid, label="shouldRead"];
4->10 [style = bold, label=""];
18->14 [style = solid, label="shouldRead"];
5->8 [style = bold, label=""];
15->2 [style = bold, label=""];
12->11 [style = solid, label="shouldRead"];
18->20 [style = solid, label="shouldRead"];
12->2 [style = solid, label="shouldRead"];
7->16 [style = dashed, label="0"];
21->15 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
6->9 [style = dashed, label="0"];
7->11 [style = dashed, label="0"];
0->15 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
10->12 [style = solid, label="shouldRead"];
8->21 [style = dashed, label="0"];
16->19 [style = bold, label=""];
5->0 [style = solid, label="shouldRead"];
6->5 [style = solid, label="shouldRead"];
7->3 [style = bold, label=""];
5->20 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
3->19 [style = dashed, label="0"];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
15->2 [style = solid, label="shouldRead"];
6->4 [style = bold, label=""];
12->2 [style = bold, label=""];
1->6 [style = bold, label=""];
16->19 [style = solid, label="shouldRead"];
5->8 [style = solid, label="shouldRead"];
10->8 [style = bold, label=""];
5->10 [style = dashed, label="0"];
11->3 [style = bold, label=""];
9->10 [style = solid, label="shouldRead"];
17->18 [style = bold, label=""];
20->15 [style = solid, label="shouldRead"];
0->2 [style = solid, label="shouldRead"];
11->3 [style = solid, label="shouldRead"];
20->21 [style = solid, label="shouldRead"];
15->16 [style = solid, label="shouldRead"];
4->14 [style = dashed, label="0"];
13->9 [style = bold, label=""];
2->7 [style = bold, label=""];
9->4 [style = solid, label="shouldRead"];
6->4 [style = solid, label="shouldRead"];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
8->12 [style = bold, label=""];
10->8 [style = solid, label="shouldRead"];
18->14 [style = bold, label=""];
14->20 [style = bold, label=""];
0->7 [style = solid, label="shouldRead"];
2->16 [style = bold, label=""];
}
