digraph {
3 [style = filled, label = "rm.apply()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "reTest(keyspace.getColumnFamilyStore(\"Standard1\"),verify)@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "rm = new Mutation(KEYSPACE1,ROW.getKey())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "rm.delete(\"Standard1\",cellname(\"col4\"),2L)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Runnable verify = new WrappedRunnable(){public void runMayThrow(){ColumnFamily cfcf = cfStore.getColumnFamily(ROW,cellname(\"col5\"),Composites.EMPTY,false,2,System.currentTimeMillis())assertColumns(cf,\"col5\",\"col7\")cf = cfStore.getColumnFamily(ROW,cellname(\"col4\"),Composites.EMPTY,false,2,System.currentTimeMillis())assertColumns(cf,\"col4\",\"col5\",\"col7\")assertColumns(ColumnFamilyStore.removeDeleted(cf,Integer.MAX_VALUE),\"col5\",\"col7\")cf = cfStore.getColumnFamily(ROW,cellname(\"col5\"),Composites.EMPTY,true,2,System.currentTimeMillis())assertColumns(cf,\"col3\",\"col4\",\"col5\")cf = cfStore.getColumnFamily(ROW,cellname(\"col6\"),Composites.EMPTY,true,2,System.currentTimeMillis())assertColumns(cf,\"col3\",\"col4\",\"col5\")cf = cfStore.getColumnFamily(ROW,Composites.EMPTY,Composites.EMPTY,true,2,System.currentTimeMillis())assertColumns(cf,\"col7\",\"col9\")cf = cfStore.getColumnFamily(ROW,cellname(\"col95\"),Composites.EMPTY,false,2,System.currentTimeMillis())assertColumns(cf)cf = cfStore.getColumnFamily(ROW,cellname(\"col0\"),Composites.EMPTY,true,2,System.currentTimeMillis())assertColumns(cf)}}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final DecoratedKey ROW = Util.dk(\"row1\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "reTest(keyspace.getColumnFamilyStore(\"Standard1\"),verify)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Keyspace keyspace = Keyspace.open(KEYSPACE1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ColumnFamilyStore cfStore = keyspace.getColumnFamilyStore(\"Standard1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cf.addColumn(column(\"col4\",\"val4\",1L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ColumnFamily cf = ArrayBackedSortedColumns.factory.create(KEYSPACE1,\"Standard1\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mutation rm = new Mutation(KEYSPACE1,ROW.getKey(),cf)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rm.applyUnsafe()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "cf.addColumn(column(\"col1\",\"val1\",1L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cf.addColumn(column(\"col3\",\"val3\",1L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cf.addColumn(column(\"col9\",\"val9\",1L))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final DecoratedKey ROW = Util.dk(\"row5\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testGetSliceWithExpiration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "cf.addColumn(expiringColumn(\"col2\",\"val2\",1L,60))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testGetSliceFromBasic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "cf.addColumn(column(\"col5\",\"val5\",1L))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cf.addColumn(column(\"col7\",\"val7\",1L))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testGetSliceWithExpiration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "rm.apply()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->17 [style = bold, label=""];
9->11 [style = solid, label="ROW"];
11->4 [style = bold, label=""];
22->5 [style = bold, label=""];
3->11 [style = bold, label=""];
8->9 [style = bold, label=""];
11->4 [style = solid, label="verify"];
13->0 [style = bold, label=""];
20->15 [style = bold, label=""];
5->11 [style = solid, label="cf"];
11->18 [style = bold, label=""];
0->8 [style = bold, label=""];
23->11 [style = bold, label=""];
2->3 [style = bold, label=""];
19->16 [style = bold, label=""];
22->11 [style = solid, label="ROW"];
16->23 [style = bold, label=""];
15->14 [style = bold, label=""];
11->18 [style = solid, label="verify"];
8->22 [style = bold, label=""];
3->19 [style = bold, label=""];
12->11 [style = bold, label=""];
7->1 [style = bold, label=""];
6->7 [style = bold, label=""];
1->20 [style = bold, label=""];
21->0 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->6 [style = bold, label=""];
9->5 [style = bold, label=""];
6->1 [style = bold, label=""];
5->2 [style = solid, label="cf"];
1->2 [style = bold, label=""];
10->0 [style = bold, label=""];
2->12 [style = bold, label=""];
9->22 [style = dashed, label="0"];
17->2 [style = bold, label=""];
}
