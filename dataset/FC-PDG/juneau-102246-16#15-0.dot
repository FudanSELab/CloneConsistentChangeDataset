digraph {
14 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String v = StringUtils.trim(string(a.value()))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "i == -1@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AnnotationInfo<RestPut> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "b.set(REST_parsers,merge(ConverterUtils.toType(b.peek(REST_parsers),),a.parsers()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "b.prependTo(REST_converters,a.converters())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,contentType(string(a.defaultContentType())))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "b.setIfNotEmpty(RESTOP_path,a.value())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "b.prependTo(RESTOP_matchers,a.matchers())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "b.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b.setIfNotEmpty(REST_maxInput,string(a.maxInput()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RestOp a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "b.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "b.httpMethod(\"put\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "stringStream(a.path()).forEach(null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "RestOperationContextBuilder b@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RestPut a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "b.prependTo(REST_guards,reverse(a.guards()))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = v.indexOf(' ')@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "b.prependTo(RESTOP_path,v.substring(i).trim())@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "v != null@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "b.set(REST_serializers,merge(ConverterUtils.toType(b.peek(REST_serializers),),a.serializers()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "b.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "b.setIfNotEmpty(REST_consumes,stringList(a.consumes()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "RestOperationContextBuilder b@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,string(a.method()))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "b.set(RESTOP_httpMethod,v.substring(0,i).trim())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "b.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "b.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "stringStream(a.defaultFormData()).map(null).forEach(null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AnnotationInfo<RestPut> ai@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "b.set(RESTOP_httpMethod,v)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "b.setIfNotEmpty(RESTOP_httpMethod,\"put\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "b.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->17 [style = bold, label=""];
14->3 [style = bold, label=""];
23->25 [style = bold, label=""];
1->4 [style = bold, label=""];
16->0 [style = bold, label=""];
4->14 [style = bold, label=""];
42->41 [style = bold, label=""];
39->42 [style = solid, label="i"];
31->22 [style = bold, label=""];
5->23 [style = bold, label=""];
22->33 [style = dashed, label="0"];
42->41 [style = dotted, label="false"];
42->36 [style = dotted, label="false"];
30->27 [style = bold, label=""];
18->19 [style = bold, label=""];
38->27 [style = bold, label=""];
28->1 [style = bold, label=""];
19->6 [style = bold, label=""];
15->18 [style = bold, label=""];
10->7 [style = bold, label=""];
43->9 [style = bold, label=""];
22->30 [style = bold, label=""];
34->39 [style = dotted, label="true"];
9->34 [style = solid, label="v"];
42->35 [style = bold, label=""];
9->35 [style = solid, label="v"];
7->9 [style = bold, label=""];
13->2 [style = dotted, label="true"];
26->16 [style = bold, label=""];
24->26 [style = bold, label=""];
31->21 [style = dotted, label="true"];
3->20 [style = bold, label=""];
17->12 [style = bold, label=""];
41->36 [style = bold, label=""];
34->42 [style = dotted, label="true"];
8->5 [style = bold, label=""];
37->32 [style = dotted, label="true"];
13->21 [style = dotted, label="true"];
12->8 [style = bold, label=""];
34->39 [style = bold, label=""];
21->40 [style = dashed, label="0"];
23->10 [style = bold, label=""];
7->43 [style = bold, label=""];
42->35 [style = dotted, label="true"];
33->38 [style = bold, label=""];
25->10 [style = bold, label=""];
27->24 [style = bold, label=""];
13->22 [style = bold, label=""];
37->40 [style = dotted, label="true"];
37->33 [style = bold, label=""];
31->29 [style = dotted, label="true"];
11->30 [style = dashed, label="0"];
39->42 [style = bold, label=""];
20->15 [style = bold, label=""];
22->11 [style = bold, label=""];
0->28 [style = bold, label=""];
11->27 [style = bold, label=""];
9->34 [style = bold, label=""];
}
