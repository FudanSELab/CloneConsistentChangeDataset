digraph {
5 [style = filled, label = "testConcurrency['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "maybeDelayNextIteration(i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Future<?>> futures = new ArrayList<>(NUM_QUERIES)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "getFuturesAndAssertAftermathIsChill(futures,scheduler,false,false)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "getFuturesAndAssertAftermathIsChill(futures,scheduler,false)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertHiLoHasAllCapacity(TEST_HI_CAPACITY,TEST_LO_CAPACITY)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testConcurrencyHi['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Future<?>> futures = new ArrayList<>(NUM_CONCURRENT_QUERIES)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "futures.add(makeQueryFuture(executorService,scheduler,makeInteractiveQuery(),NUM_ROWS))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i < NUM_QUERIES@@@5@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testConcurrency['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "i < NUM_CONCURRENT_QUERIES@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "getFuturesAndAssertAftermathIsChill(futures,scheduler,true)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "futures.add(makeQueryFuture(executorService,scheduler,makeRandomQuery(),NUM_ROWS))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->13 [style = solid, label="futures"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
9->2 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
4->1 [style = solid, label="i"];
3->4 [style = dotted, label="true"];
3->6 [style = bold, label=""];
8->6 [style = bold, label=""];
3->15 [style = bold, label=""];
4->3 [style = solid, label="i"];
3->6 [style = dotted, label="true"];
0->7 [style = solid, label="futures"];
2->3 [style = solid, label="i"];
8->4 [style = dotted, label="true"];
2->8 [style = solid, label="i"];
4->8 [style = solid, label="i"];
8->1 [style = dotted, label="true"];
6->1 [style = bold, label=""];
8->6 [style = dotted, label="true"];
14->0 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
6->15 [style = dashed, label="0"];
3->15 [style = dotted, label="true"];
2->1 [style = solid, label="i"];
2->4 [style = solid, label="i"];
7->13 [style = dashed, label="0"];
3->13 [style = bold, label=""];
7->12 [style = dashed, label="0"];
3->8 [style = dashed, label="0"];
4->8 [style = bold, label=""];
9->12 [style = solid, label="futures"];
10->9 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->1 [style = dotted, label="true"];
8->12 [style = bold, label=""];
2->8 [style = bold, label=""];
15->1 [style = bold, label=""];
}
