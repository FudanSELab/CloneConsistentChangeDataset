digraph {
2 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.add(unionExp)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()).append(Expressions.constant(all)))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "unionExp = all? Expressions.call(unionExp,BuiltInMethod.CONCAT.method,childExp): Expressions.call(unionExp,BuiltInMethod.UNION.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Expression intersectExp = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.add(intersectExp)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Prefer pref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "unionExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Expression unionExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "intersectExp == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "intersectExp = childExp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "unionExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "builder.add(requireNonNull(intersectExp,\"intersectExp\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Prefer pref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17->8 [style = bold, label=""];
19->20 [style = solid, label="unionExp"];
9->0 [style = bold, label=""];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
11->16 [style = solid, label="intersectExp"];
12->13 [style = solid, label="intersectExp"];
22->0 [style = solid, label="pref"];
2->6 [style = bold, label=""];
8->19 [style = bold, label=""];
4->10 [style = dotted, label="true"];
8->3 [style = bold, label=""];
1->23 [style = solid, label="childExp"];
19->24 [style = solid, label="unionExp"];
21->8 [style = bold, label=""];
1->20 [style = bold, label=""];
5->0 [style = solid, label="pref"];
4->7 [style = dotted, label="true"];
21->22 [style = dotted, label="true"];
14->20 [style = dashed, label="0"];
11->23 [style = dashed, label="0"];
21->10 [style = dotted, label="true"];
16->2 [style = bold, label=""];
18->2 [style = bold, label=""];
24->18 [style = bold, label=""];
11->14 [style = solid, label="intersectExp"];
3->19 [style = dashed, label="0"];
3->12 [style = solid, label="intersectExp"];
5->16 [style = bold, label=""];
3->9 [style = bold, label=""];
14->12 [style = dotted, label="false"];
1->24 [style = solid, label="childExp"];
17->10 [style = dotted, label="true"];
11->5 [style = bold, label=""];
3->14 [style = solid, label="intersectExp"];
17->15 [style = dotted, label="true"];
23->18 [style = solid, label="unionExp"];
0->6 [style = solid, label="result"];
12->14 [style = solid, label="intersectExp"];
1->11 [style = solid, label="childExp"];
20->23 [style = bold, label=""];
15->0 [style = solid, label="pref"];
19->9 [style = bold, label=""];
24->18 [style = solid, label="unionExp"];
0->1 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
12->24 [style = dashed, label="0"];
20->23 [style = dotted, label="true"];
13->16 [style = dashed, label="0"];
9->0 [style = solid, label="input"];
11->12 [style = solid, label="intersectExp"];
23->24 [style = solid, label="unionExp"];
4->8 [style = bold, label=""];
14->11 [style = dotted, label="true"];
1->14 [style = bold, label=""];
11->13 [style = solid, label="intersectExp"];
13->18 [style = dashed, label="0"];
23->20 [style = solid, label="unionExp"];
20->24 [style = bold, label=""];
2->6 [style = solid, label="physType"];
23->9 [style = bold, label=""];
24->20 [style = solid, label="unionExp"];
14->11 [style = bold, label=""];
20->24 [style = dotted, label="false"];
23->18 [style = bold, label=""];
24->9 [style = bold, label=""];
13->2 [style = bold, label=""];
10->0 [style = solid, label="pref"];
12->16 [style = solid, label="intersectExp"];
}
