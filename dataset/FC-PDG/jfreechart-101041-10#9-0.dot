digraph {
1 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ko1.addObject(\"Key 1\",\"Object 1\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(ko1.getClass() == ko2.getClass())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ko1.addObject(\"Key 2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "obj1 = new DefaultPieDataset<String>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "KeyedObject<String> ko1 = new KeyedObject<>(\"Test\",obj1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "KeyedObjects<String> ko1 = new KeyedObjects<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ko1.addObject(\"Key 3\",\"Object 2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(ko2.getObject() != obj1)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "KeyedObjects ko1 = new KeyedObjects()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Object obj1 = new ArrayList<String>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "KeyedObjects ko2 = (KeyedObjects)TestUtils.serialised(ko1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ko1 = new KeyedObject<>(\"Test\",obj1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(ko1,ko2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(ko1 != ko2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "KeyedObjects<String> ko2 = TestUtils.serialised(ko1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "KeyedObject<String> ko2 = (KeyedObject)ko1.clone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(ko1.equals(ko2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCloning2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(ko2.getObject() == obj1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ko2 = (KeyedObject)ko1.clone()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(ko1 != ko2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
4->3 [style = bold, label=""];
10->20 [style = bold, label=""];
9->0 [style = bold, label=""];
2->0 [style = solid, label="ko1"];
24->11 [style = solid, label="ko2"];
12->19 [style = solid, label="ko1"];
18->16 [style = solid, label="obj1"];
3->24 [style = dashed, label="0"];
12->15 [style = bold, label=""];
14->22 [style = bold, label=""];
8->0 [style = solid, label="ko1"];
18->12 [style = bold, label=""];
3->6 [style = bold, label=""];
5->9 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
15->19 [style = solid, label="ko2"];
19->17 [style = bold, label=""];
9->0 [style = solid, label="ko2"];
15->19 [style = bold, label=""];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
2->8 [style = dashed, label="0"];
8->9 [style = solid, label="ko1"];
2->10 [style = dashed, label="0"];
24->14 [style = bold, label=""];
5->0 [style = solid, label="ko2"];
20->14 [style = solid, label="ko1"];
6->5 [style = bold, label=""];
5->0 [style = bold, label=""];
10->23 [style = solid, label="obj1"];
18->12 [style = solid, label="obj1"];
2->5 [style = solid, label="ko1"];
21->16 [style = bold, label=""];
1->2 [style = bold, label=""];
10->20 [style = solid, label="obj1"];
15->21 [style = solid, label="ko2"];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
20->24 [style = bold, label=""];
11->23 [style = bold, label=""];
17->21 [style = bold, label=""];
24->14 [style = solid, label="ko2"];
22->11 [style = bold, label=""];
23->18 [style = bold, label=""];
}
