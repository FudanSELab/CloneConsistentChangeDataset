digraph {
1 [style = filled, label = "testReadWriteCsvWithProctime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean isStreaming@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testReadWriteCsvWithProctime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "ArrayList<Row> rows = Lists.newArrayList(tableEnv.executeSql(\"SELECT * FROM proctime_src\").collect())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(5,rows.size())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean isStreaming@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ArrayList<Row> rows = Lists.newArrayList(tableEnv.from(\"proctime_src\").select($(\"price\"),$(\"ts\"),$(\"l_proctime\")).execute().collect())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tableEnv.executeSql(\"DROP TABLE proctime_src\")@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TableEnvironment tableEnv = prepareTable(isStreaming)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Row> rows = CollectionUtil.iteratorToList(tableEnv.executeSql(\"SELECT * FROM proctime_src\").collect())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testTableApiWithProctime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
8->0 [style = bold, label=""];
3->5 [style = solid, label="isStreaming"];
9->5 [style = solid, label="isStreaming"];
5->8 [style = bold, label=""];
7->5 [style = bold, label=""];
6->0 [style = bold, label=""];
4->8 [style = dashed, label="0"];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
4->6 [style = dashed, label="0"];
10->9 [style = dotted, label="true"];
7->3 [style = dotted, label="true"];
3->9 [style = dashed, label="0"];
5->4 [style = bold, label=""];
4->0 [style = bold, label=""];
0->2 [style = bold, label=""];
1->3 [style = dotted, label="true"];
}
