digraph {
1 [style = filled, label = "final String dimName = \"dimUniform\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final BenchmarkSchemaInfo basicSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final QuerySegmentSpec intervalSpec = new MultipleIntervalSegmentSpec(Collections.singletonList(basicSchema.getDataInterval()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return Druids.newScanQueryBuilder().filters(new BoundDimFilter(dimName,\"100\",\"10000\",true,true,true,null,null)).intervals(intervalSpec).dataSource(\"blah\").order(ordering)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "basicD['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final QuerySegmentSpec intervalSpec = new MultipleIntervalSegmentSpec(Collections.singletonList(basicSchema.getDataInterval()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return Druids.newScanQueryBuilder().filters(new SelectorDimFilter(dimName,\"3\",StrlenExtractionFn.instance())).intervals(intervalSpec).dataSource(\"blah\").order(ordering)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "basicC['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final GeneratorSchemaInfo basicSchema@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "basicC['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final BenchmarkSchemaInfo basicSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
8->1 [style = bold, label=""];
10->7 [style = dotted, label="true"];
0->8 [style = dashed, label="0"];
2->5 [style = dashed, label="0"];
6->5 [style = dotted, label="true"];
6->0 [style = bold, label=""];
10->8 [style = bold, label=""];
2->7 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
4->2 [style = dotted, label="true"];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
}
