digraph {
5 [style = filled, label = "Map<String,Processor.Factory> processorRegistry = Collections.singletonMap(\"test\",new TestProcessor.Factory())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processorConfig.put(Pipeline.ON_FAILURE_KEY,Collections.emptyList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "pipelineConfig.put(Pipeline.DESCRIPTION_KEY,\"_description\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"(on_failure( processors list cannot be empty\"))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "pipelineConfig.put(Pipeline.VERSION_KEY,versionString)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,Object> processorConfig = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"processor (test( doesn't support one or more provided configuration parameters (unused(\"))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "processorConfig.put(\"unused\",\"value\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Exception e = expectThrows(,null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Pipeline.Factory factory = new Pipeline.Factory()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Exception e = expectThrows(,null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCreateWithPipelineEmptyOnFailureInProcessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testCreateUnusedProcessorOptions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testCreateWithPipelineEmptyOnFailureInProcessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "pipelineConfig.put(Pipeline.PROCESSORS_KEY,Collections.singletonList(Collections.singletonMap(\"test\",processorConfig)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
5->10 [style = bold, label=""];
1->4 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
10->12 [style = dashed, label="0"];
3->15 [style = bold, label=""];
7->8 [style = bold, label=""];
12->6 [style = bold, label=""];
10->6 [style = bold, label=""];
6->13 [style = dashed, label="0"];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
5->12 [style = bold, label=""];
11->3 [style = bold, label=""];
8->9 [style = bold, label=""];
7->15 [style = dashed, label="0"];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
3->1 [style = solid, label="processorConfig"];
}
