digraph {
4 [style = filled, label = "new Thread(\"canceler\"){@Override public void run(){try {Thread.sleep(200)}catch (InterruptedException ignored) operator.cancel()}}.start()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "setupSourceOperator(operator,TimeCharacteristic.EventTime,0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(output.isEmpty())@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "operator.run(new Object(),mock(),new CollectorOutput<String>(output))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "{}@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testNoMaxWatermarkOnImmediateCancel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "{operatorChain.releaseOutputs()}@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "OperatorChain<?,?> operatorChain = createOperatorChain(operator)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "{}@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testNoMaxWatermarkOnAsyncCancel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testNoMaxWatermarkOnAsyncCancel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "operator.cancel()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "InterruptedException ignored@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "operator.run(new Object(),mock(),new CollectorOutput<String>(output),operatorChain)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final StreamSource<String,InfiniteSource<String>> operator = new StreamSource<>(new InfiniteSource<String>())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<StreamElement> output = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
6->13 [style = dashed, label="0"];
10->11 [style = bold, label=""];
0->3 [style = bold, label=""];
15->6 [style = bold, label=""];
11->2 [style = bold, label=""];
6->2 [style = bold, label=""];
12->13 [style = bold, label=""];
14->1 [style = bold, label=""];
8->1 [style = bold, label=""];
13->11 [style = bold, label=""];
1->13 [style = solid, label="output"];
4->12 [style = bold, label=""];
3->15 [style = bold, label=""];
7->5 [style = bold, label=""];
12->13 [style = solid, label="operatorChain"];
9->1 [style = bold, label=""];
0->3 [style = solid, label="operator"];
1->6 [style = solid, label="output"];
3->4 [style = bold, label=""];
0->12 [style = solid, label="operator"];
1->0 [style = bold, label=""];
}
