digraph {
13 [style = filled, label = "final Harness<String,Long> harness = new Harness<>(untilTimeLimit(Duration.ofDays(100),maxBytes(60L)),String(),Long())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,null,timestamp)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String key = \"hey\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final MockProcessorContext.CapturedForward capturedForward = context.forwarded().get(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Harness<String,Long> harness = new Harness<>(untilTimeLimit(ofMillis(0),maxRecords(0)),String(),Long())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final long timestamp = 100L@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(capturedForward.keyValue(),is(new KeyValue<>(key,value)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "context.setRecordMetadata(\"\",0,1L,new RecordHeaders(),timestamp + 1)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(capturedForward.timestamp(),is(timestamp))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.setRecordMetadata(\"\",0,1L,null,timestamp + 1)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "harness.processor.process(key,value)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "context.setRecordMetadata(\"\",0,0L,new RecordHeaders(),timestamp)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertThat(context.forwarded(),hasSize(1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final MockInternalProcessorContext context = harness.context@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Change<Long> value = new Change<>(null,ARBITRARY_LONG)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "suppressShouldEmitWhenOverByteCapacity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "suppressShouldNotDropTombstonesForKTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "harness.processor.process(\"dummyKey\",value)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "suppressShouldEmitWhenOverByteCapacity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->8 [style = bold, label=""];
0->6 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
0->15 [style = dashed, label="0"];
10->8 [style = solid, label="value"];
3->15 [style = solid, label="timestamp"];
15->6 [style = bold, label=""];
3->15 [style = bold, label=""];
4->2 [style = bold, label=""];
9->16 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
3->5 [style = solid, label="timestamp"];
5->16 [style = dashed, label="0"];
13->7 [style = bold, label=""];
3->0 [style = solid, label="timestamp"];
6->8 [style = solid, label="key"];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
11->13 [style = bold, label=""];
6->9 [style = solid, label="key"];
10->9 [style = solid, label="value"];
10->4 [style = solid, label="value"];
9->5 [style = bold, label=""];
3->12 [style = solid, label="timestamp"];
10->9 [style = bold, label=""];
14->13 [style = bold, label=""];
13->18 [style = dashed, label="0"];
16->4 [style = bold, label=""];
18->7 [style = bold, label=""];
3->16 [style = solid, label="timestamp"];
8->12 [style = bold, label=""];
17->18 [style = bold, label=""];
}
