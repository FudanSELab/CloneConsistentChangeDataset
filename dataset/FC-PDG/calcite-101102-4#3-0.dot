digraph {
41 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testInduceGroupingType1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "groupSets = Lists.newArrayList()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "{}@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "groupSets = Lists.newArrayList()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "groupSets = Lists.newArrayList()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<ImmutableBitSet> groupSets = Lists.newArrayList()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "fail(\"expected error, got \" + x)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "groupSets = new ArrayList<>()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testInduceGroupingType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "groupSets = new ArrayList<>()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "groupSets = new ArrayList<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "groupSets = Lists.newArrayList()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "groupSets = Lists.newArrayList()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "groupSets = Lists.newArrayList()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "IllegalArgumentException ignore@@@38@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "groupSets = Lists.newArrayList()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testInduceGroupingType1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32->53 [style = bold, label=""];
4->9 [style = solid, label="groupSets"];
12->5 [style = bold, label=""];
42->45 [style = bold, label=""];
11->33 [style = dashed, label="0"];
22->28 [style = solid, label="groupSet"];
21->43 [style = bold, label=""];
1->19 [style = dashed, label="0"];
9->10 [style = bold, label=""];
53->54 [style = bold, label=""];
29->34 [style = bold, label=""];
11->9 [style = bold, label=""];
22->38 [style = solid, label="groupSet"];
9->16 [style = bold, label=""];
26->22 [style = bold, label=""];
22->33 [style = solid, label="groupSet"];
22->4 [style = bold, label=""];
4->33 [style = solid, label="groupSets"];
25->40 [style = solid, label="groupSets"];
45->6 [style = bold, label=""];
24->21 [style = bold, label=""];
43->25 [style = solid, label="groupSets"];
10->12 [style = bold, label=""];
37->32 [style = bold, label=""];
22->40 [style = solid, label="groupSet"];
6->8 [style = solid, label="groupSets"];
35->38 [style = bold, label=""];
16->5 [style = solid, label="groupSets"];
5->36 [style = bold, label=""];
0->2 [style = solid, label="groupSet"];
25->40 [style = bold, label=""];
0->8 [style = solid, label="groupSet"];
18->8 [style = solid, label="groupSets"];
7->11 [style = bold, label=""];
23->30 [style = bold, label=""];
22->6 [style = solid, label="groupSet"];
4->17 [style = dashed, label="0"];
0->17 [style = bold, label=""];
50->37 [style = bold, label=""];
1->21 [style = solid, label="groupSets"];
27->31 [style = bold, label=""];
33->41 [style = bold, label=""];
44->49 [style = bold, label=""];
10->5 [style = solid, label="groupSets"];
6->18 [style = dashed, label="0"];
0->7 [style = solid, label="groupSet"];
7->33 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
18->1 [style = bold, label=""];
15->2 [style = solid, label="groupSets"];
3->15 [style = dashed, label="0"];
51->25 [style = bold, label=""];
22->36 [style = solid, label="groupSet"];
1->19 [style = bold, label=""];
13->0 [style = bold, label=""];
22->54 [style = solid, label="groupSet"];
3->2 [style = solid, label="groupSets"];
1->8 [style = bold, label=""];
8->15 [style = bold, label=""];
40->35 [style = bold, label=""];
31->24 [style = bold, label=""];
0->9 [style = solid, label="groupSet"];
8->3 [style = bold, label=""];
43->20 [style = bold, label=""];
17->9 [style = solid, label="groupSets"];
5->18 [style = bold, label=""];
41->10 [style = bold, label=""];
43->54 [style = solid, label="groupSets"];
36->39 [style = bold, label=""];
4->7 [style = bold, label=""];
0->1 [style = solid, label="groupSet"];
34->28 [style = bold, label=""];
6->1 [style = bold, label=""];
47->5 [style = bold, label=""];
35->38 [style = solid, label="groupSets"];
10->16 [style = dashed, label="0"];
22->21 [style = solid, label="groupSet"];
20->50 [style = bold, label=""];
54->51 [style = bold, label=""];
49->42 [style = bold, label=""];
15->2 [style = bold, label=""];
39->44 [style = bold, label=""];
38->29 [style = bold, label=""];
12->36 [style = solid, label="groupSets"];
0->5 [style = solid, label="groupSet"];
46->52 [style = bold, label=""];
0->22 [style = dashed, label="0"];
17->7 [style = bold, label=""];
52->25 [style = bold, label=""];
14->0 [style = bold, label=""];
41->10 [style = solid, label="groupSets"];
0->4 [style = bold, label=""];
48->47 [style = bold, label=""];
29->28 [style = solid, label="groupSets"];
19->27 [style = bold, label=""];
22->10 [style = solid, label="groupSet"];
22->7 [style = solid, label="groupSet"];
12->23 [style = bold, label=""];
54->51 [style = solid, label="x"];
30->48 [style = bold, label=""];
16->12 [style = bold, label=""];
39->6 [style = solid, label="groupSets"];
}
