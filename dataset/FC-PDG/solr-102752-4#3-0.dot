digraph {
14 [style = filled, label = "output.writeInt(12345)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testRename['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "input1.close()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(input.getFilePointer(),input.length())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(slowFileExists(directory,\"testing.test\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "input2.close()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "directory.deleteFile(file)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "IndexInput input2 = (IndexInput)input1.clone()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "directory.deleteFile(\"testing.test\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(4,directory.fileLength(\"testing.test\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(slowFileExists(directory,\"testing.test.renamed\"))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "output.close()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "directory.rename(\"testing.test\",\"testing.test.renamed\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "listAll = directory.listAll()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String(( listAll = directory.listAll()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(\"testing.test\",listAll(0()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(slowFileExists(directory,\"testing.test.renamed\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(12345,input.readInt())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "directory.deleteFile(\"testing.test.renamed\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(12345,input2.readInt())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(slowFileExists(directory,\"testing.test\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "IndexOutput output = directory.createOutput(\"testing.test\",new IOContext())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(12345,input1.readInt())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "IndexInput input = directory.openInput(\"testing.test\",new IOContext())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "input.close()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "IndexInput input1 = directory.openInput(\"testing.test\",new IOContext())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertFalse(slowFileExists(directory,\"testing.test.other\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,listAll.length)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "directory.renameFile(\"testing.test\",\"testing.test.renamed\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "testWritingAndReadingAFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IndexInput input = directory.openInput(\"testing.test.renamed\",new IOContext())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRename['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertFalse(slowFileExists(directory,\"testing.test\"))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23->25 [style = bold, label=""];
25->28 [style = bold, label=""];
28->18 [style = bold, label=""];
30->17 [style = bold, label=""];
11->16 [style = dashed, label="0"];
20->26 [style = bold, label=""];
18->9 [style = solid, label="listAll"];
31->32 [style = bold, label=""];
17->31 [style = bold, label=""];
0->2 [style = bold, label=""];
11->4 [style = bold, label=""];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
11->23 [style = dashed, label="0"];
2->9 [style = bold, label=""];
21->30 [style = bold, label=""];
18->2 [style = bold, label=""];
26->19 [style = bold, label=""];
24->22 [style = bold, label=""];
13->11 [style = bold, label=""];
13->16 [style = bold, label=""];
12->7 [style = bold, label=""];
9->27 [style = bold, label=""];
6->14 [style = bold, label=""];
1->18 [style = solid, label="listAll"];
5->0 [style = bold, label=""];
8->9 [style = bold, label=""];
13->23 [style = bold, label=""];
12->18 [style = dashed, label="0"];
9->12 [style = bold, label=""];
14->13 [style = bold, label=""];
29->1 [style = bold, label=""];
16->4 [style = bold, label=""];
10->1 [style = bold, label=""];
32->24 [style = bold, label=""];
4->5 [style = bold, label=""];
27->20 [style = bold, label=""];
2->8 [style = bold, label=""];
15->1 [style = bold, label=""];
19->21 [style = bold, label=""];
}
