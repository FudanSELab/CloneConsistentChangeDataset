digraph {
4 [style = filled, label = "InputStream in = channel.getInputStream()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OutputStream out = channel.getOutputStream()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "waitForAck(in)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Channel channel = openExecChannel(cmd)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "channel.connect()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Directory current = (Directory)i.next()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Iterator i = directoryList.iterator()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i.hasNext()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "waitForAck(in)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String cmd = \"scp -t \" + remotePath@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "doSingleTransfer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "sendDirectory(current,in,out)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "doSingleTransfer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sendFileToRemote(localFile,in,out)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Channel channel = openExecChannel(\"scp -d -t \" + remotePath)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "doMultipleTransfer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{if (channel != null) {channel.disconnect()}}@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{if (channel != null) {channel.disconnect()}}@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "waitForAck(in)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->17 [style = solid, label="channel"];
15->13 [style = bold, label=""];
7->14 [style = dashed, label="0"];
16->12 [style = solid, label="current"];
11->4 [style = bold, label=""];
12->15 [style = bold, label=""];
4->12 [style = solid, label="in"];
7->3 [style = solid, label="cmd"];
8->2 [style = solid, label="in"];
4->13 [style = solid, label="in"];
15->16 [style = dotted, label="true"];
15->16 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
4->5 [style = solid, label="out"];
8->1 [style = bold, label=""];
3->0 [style = solid, label="channel"];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
8->9 [style = solid, label="in"];
2->0 [style = bold, label=""];
5->0 [style = bold, label=""];
9->15 [style = bold, label=""];
4->1 [style = solid, label="in"];
11->12 [style = solid, label="out"];
9->5 [style = bold, label=""];
15->12 [style = dotted, label="true"];
4->8 [style = bold, label=""];
6->7 [style = bold, label=""];
14->11 [style = bold, label=""];
16->12 [style = bold, label=""];
18->14 [style = bold, label=""];
8->5 [style = solid, label="in"];
}
