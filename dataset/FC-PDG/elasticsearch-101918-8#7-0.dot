digraph {
3 [style = filled, label = "final String dataStreamName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final String dataStreamName = \"my-data-stream\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"matching index template (template( for data stream (my-data-stream( has no data stream template\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName,TimeValue.ZERO,TimeValue.ZERO)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"),null,null,null,null,null,new ComposableIndexTemplate.DataStreamTemplate(),null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).metadata(Metadata.builder().put(\"template\",template).build()).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate.Builder().indexPatterns(List.of(dataStreamName + \"*\")).dataStreamTemplate(new ComposableIndexTemplate.DataStreamTemplate()).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"),null,null,null,null,null,null,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService,cs,req)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).metadata(Metadata.builder().put(\"template\",template).build()).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCreateDataStreamNoValidTemplate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createDataStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "Exception e = expectThrows(,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "createDataStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2->3 [style = dotted, label="true"];
4->1 [style = solid, label="metadataCreateIndexService"];
12->11 [style = solid, label="dataStreamName"];
0->6 [style = bold, label=""];
6->11 [style = dashed, label="0"];
0->1 [style = solid, label="cs"];
7->4 [style = bold, label=""];
6->1 [style = solid, label="req"];
12->9 [style = solid, label="dataStreamName"];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
9->6 [style = bold, label=""];
1->13 [style = dashed, label="0"];
8->0 [style = bold, label=""];
6->1 [style = bold, label=""];
3->5 [style = solid, label="dataStreamName"];
5->0 [style = bold, label=""];
7->3 [style = dotted, label="true"];
6->11 [style = bold, label=""];
11->13 [style = bold, label=""];
3->6 [style = solid, label="dataStreamName"];
10->4 [style = bold, label=""];
4->12 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->8 [style = bold, label=""];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
}
