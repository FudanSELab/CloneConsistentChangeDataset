digraph {
1 [style = filled, label = "shouldFindTimestampedKeyValueStores['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(2,tkvStores.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mockThread(true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(store,not(instanceOf()))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<ReadOnlyWindowStore<String,ValueAndTimestamp<String>>> windowStores = provider.stores(StoreQueryParams.fromNameAndType(\"timestamped-window-store\",QueryableStoreTypes.windowStore()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldFindTimestampedKeyValueStores['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(store,instanceOf())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(store,instanceOf())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(store,instanceOf())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<ReadOnlyKeyValueStore<String,ValueAndTimestamp<String>>> tkvStores = provider.stores(StoreQueryParameters.fromNameAndType(\"timestamped-kv-store\",QueryableStoreTypes.timestampedKeyValueStore()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final List<ReadOnlyKeyValueStore<String,ValueAndTimestamp<String>>> tkvStores = provider.stores(StoreQueryParams.fromNameAndType(\"timestamped-kv-store\",QueryableStoreTypes.timestampedKeyValueStore()))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(2,windowStores.size())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldFindTimestampedWindowStoresAsWindowStore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
9->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
8->10 [style = bold, label=""];
3->6 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
11->12 [style = bold, label=""];
12->10 [style = bold, label=""];
2->12 [style = dashed, label="0"];
5->6 [style = dashed, label="0"];
10->8 [style = bold, label=""];
5->11 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
2->4 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
}
