digraph {
23 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "v < 3@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-max\",metricGroup,\"\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "builder.append((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "subscriptions.assignFromUser(singleton(tp))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(3,records.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,0L,\"key\".getBytes(),\"value\".getBytes(),null,MAX_BLOCK_TIMEOUT).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "this.records = builder.build()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.appendWithOffset((long)i * 3 + v,Record.NO_TIMESTAMP,\"key\".getBytes(),String.format(\"value-%d\",v).getBytes())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.prepareResponse(fetchResponse(this.records,Errors.NONE.code(),100L,100 * i))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i > 1@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"fetch-throttle-time-avg\",metricGroup,\"\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "v++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int v = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "consumerClient.poll(0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->14 [style = solid, label="v"];
35->28 [style = solid, label="i"];
29->30 [style = bold, label=""];
14->25 [style = dashed, label="0"];
2->6 [style = bold, label=""];
36->29 [style = bold, label=""];
13->20 [style = dotted, label="true"];
4->30 [style = dashed, label="0"];
9->10 [style = bold, label=""];
17->8 [style = solid, label="i"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
6->19 [style = dotted, label="true"];
2->8 [style = solid, label="i"];
21->25 [style = solid, label="v"];
22->14 [style = dotted, label="true"];
15->11 [style = bold, label=""];
31->35 [style = bold, label=""];
34->2 [style = bold, label=""];
13->21 [style = dotted, label="true"];
35->32 [style = solid, label="i"];
17->32 [style = solid, label="i"];
13->20 [style = bold, label=""];
2->32 [style = bold, label=""];
6->11 [style = dotted, label="true"];
0->36 [style = dashed, label="0"];
16->9 [style = bold, label=""];
6->15 [style = dotted, label="true"];
0->3 [style = bold, label=""];
22->25 [style = bold, label=""];
11->8 [style = solid, label="records"];
6->13 [style = dotted, label="true"];
28->2 [style = dotted, label="true"];
17->25 [style = solid, label="i"];
19->2 [style = bold, label=""];
28->17 [style = dotted, label="true"];
1->17 [style = bold, label=""];
35->28 [style = bold, label=""];
9->8 [style = solid, label="records"];
22->18 [style = bold, label=""];
13->22 [style = dotted, label="true"];
21->22 [style = bold, label=""];
2->14 [style = solid, label="i"];
6->7 [style = dotted, label="true"];
22->14 [style = bold, label=""];
18->7 [style = bold, label=""];
10->1 [style = bold, label=""];
5->22 [style = bold, label=""];
28->34 [style = dotted, label="true"];
5->25 [style = solid, label="v"];
13->18 [style = dotted, label="true"];
12->23 [style = dashed, label="0"];
8->15 [style = bold, label=""];
17->6 [style = bold, label=""];
6->23 [style = bold, label=""];
22->25 [style = dotted, label="true"];
5->22 [style = solid, label="v"];
2->13 [style = solid, label="i"];
17->14 [style = solid, label="i"];
17->28 [style = solid, label="i"];
23->0 [style = bold, label=""];
31->32 [style = solid, label="offset"];
32->33 [style = bold, label=""];
22->5 [style = dotted, label="true"];
6->28 [style = dashed, label="0"];
26->31 [style = bold, label=""];
6->2 [style = dotted, label="true"];
28->32 [style = dotted, label="true"];
17->13 [style = solid, label="i"];
6->8 [style = dotted, label="true"];
6->13 [style = bold, label=""];
4->12 [style = bold, label=""];
25->5 [style = bold, label=""];
2->25 [style = solid, label="i"];
13->34 [style = dashed, label="0"];
18->8 [style = solid, label="records"];
24->9 [style = bold, label=""];
33->17 [style = bold, label=""];
14->5 [style = bold, label=""];
3->29 [style = dashed, label="0"];
27->36 [style = bold, label=""];
28->34 [style = bold, label=""];
2->6 [style = solid, label="i"];
28->33 [style = dotted, label="true"];
17->6 [style = solid, label="i"];
30->23 [style = bold, label=""];
21->22 [style = solid, label="v"];
11->19 [style = bold, label=""];
21->5 [style = solid, label="v"];
20->21 [style = bold, label=""];
17->28 [style = bold, label=""];
35->17 [style = solid, label="i"];
13->7 [style = bold, label=""];
28->27 [style = bold, label=""];
17->2 [style = solid, label="i"];
21->14 [style = solid, label="v"];
}
