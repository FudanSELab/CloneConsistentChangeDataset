digraph {
16 [style = filled, label = "c1 = new DialCap()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "c1.setOutlinePaint(new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.gray))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "c1.setFillPaint(new GradientPaint(1.0f,2.0f,Color.BLUE,3.0f,4.0f,Color.green))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(c1.equals(c2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "c1.setOutlinePaint(new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.GRAY))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "c1.setOutlineStroke(new BasicStroke(2.0f))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "c2 = (DialCap)c1.clone()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(c1.hasListener(l1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c1.setFillPaint(new GradientPaint(1.0f,2.0f,Color.BLUE,3.0f,4.0f,Color.GREEN))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(c1 != c2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(c1 != c2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "c1.addChangeListener(l1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MyDialLayerChangeListener l1 = new MyDialLayerChangeListener()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(c2.hasListener(l1))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DialCap c2 = (DialCap)c1.clone()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(c1.equals(c2))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "DialCap c1 = new DialCap()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
9->11 [style = bold, label=""];
6->15 [style = solid, label="l1"];
4->6 [style = bold, label=""];
19->20 [style = bold, label=""];
0->2 [style = bold, label=""];
3->6 [style = bold, label=""];
7->4 [style = bold, label=""];
16->2 [style = solid, label="c1"];
16->19 [style = bold, label=""];
0->3 [style = solid, label="c2"];
12->1 [style = bold, label=""];
6->15 [style = bold, label=""];
1->9 [style = bold, label=""];
5->20 [style = dashed, label="0"];
2->13 [style = bold, label=""];
20->10 [style = bold, label=""];
8->17 [style = bold, label=""];
9->11 [style = solid, label="c2"];
13->3 [style = bold, label=""];
18->1 [style = bold, label=""];
9->4 [style = solid, label="c2"];
10->0 [style = bold, label=""];
21->1 [style = bold, label=""];
6->17 [style = solid, label="l1"];
0->2 [style = solid, label="c2"];
16->14 [style = bold, label=""];
1->11 [style = solid, label="c1"];
14->19 [style = dashed, label="0"];
6->8 [style = solid, label="l1"];
15->8 [style = bold, label=""];
11->7 [style = bold, label=""];
4->16 [style = bold, label=""];
14->5 [style = bold, label=""];
}
