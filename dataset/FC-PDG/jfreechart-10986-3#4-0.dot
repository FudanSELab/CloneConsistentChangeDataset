digraph {
17 [style = filled, label = "XYBarDataset bd2 = CloneUtils.clone(bd1)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "XYBarDataset bd1 = new XYBarDataset(d1,5.0)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(bd1 != bd2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b0bd1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DefaultXYDataset d2 = (DefaultXYDataset)bd2.getUnderlyingDataset()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "d1.addSeries(\"S2\",new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b0b99)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(bd1.getClass() == bd2.getClass())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b0be5@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultXYDataset d1 = new DefaultXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "XYBarDataset bd2 = (XYBarDataset)bd1.clone()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(bd1 instanceof PublicCloneable)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(bd1.equals(bd2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(bd1.equals(bd2))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testPublicCloneable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "d2.addSeries(\"S2\",new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b0bb5)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2b0bdb@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertTrue(bd1.equals(bd2))@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "d1 = (DefaultXYDataset)bd1.getUnderlyingDataset()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->6 [style = solid, label="d1"];
6->17 [style = bold, label=""];
8->16 [style = bold, label=""];
4->14 [style = bold, label=""];
2->5 [style = solid, label="bd2"];
0->13 [style = bold, label=""];
3->4 [style = solid, label="y1"];
18->12 [style = bold, label=""];
10->3 [style = bold, label=""];
6->17 [style = solid, label="bd1"];
6->19 [style = bold, label=""];
4->14 [style = solid, label="data1"];
17->5 [style = solid, label="bd2"];
2->17 [style = dashed, label="0"];
3->4 [style = bold, label=""];
6->2 [style = bold, label=""];
17->13 [style = solid, label="bd2"];
2->13 [style = solid, label="bd2"];
12->10 [style = bold, label=""];
11->0 [style = bold, label=""];
6->19 [style = solid, label="bd1"];
17->9 [style = solid, label="bd2"];
17->11 [style = solid, label="bd2"];
15->9 [style = bold, label=""];
10->4 [style = solid, label="x1"];
20->12 [style = bold, label=""];
1->12 [style = bold, label=""];
16->5 [style = bold, label=""];
2->11 [style = solid, label="bd2"];
5->7 [style = bold, label=""];
7->15 [style = bold, label=""];
2->9 [style = solid, label="bd2"];
6->11 [style = solid, label="bd1"];
13->8 [style = bold, label=""];
14->6 [style = bold, label=""];
2->11 [style = bold, label=""];
17->11 [style = bold, label=""];
}
