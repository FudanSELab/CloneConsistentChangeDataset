digraph {
65 [style = filled, label = "assertOutputKeyValue(driver,2,\"X2+YY2\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+Y1\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertOutputKeyValue(driver,1,\"X1+YY1\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "doTestJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(driver.readOutput(output))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,null,\"AnotherVal\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNull(driver.readOutput(output))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testOuterJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertOutputKeyValue(driver,1,null)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "i < 2@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,null))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"XX\" + 1))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+Y0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "i < 2@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertNull(driver.readOutput(output))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i++@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,null,\"SomeVal\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertOutputKeyValue(driver,0,null)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0 (ts: 0)\",\"0:X0+YYY0 (ts: 0)\",\"0:XX0+YYY0 (ts: 0)\",\"1:X1+YYY1 (ts: 0)\",\"1:X1+YYY1 (ts: 0)\",\"1:XX1+YYY1 (ts: 0)\")@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "testOuterJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "assertOutputKeyValue(driver,3,\"XX3+YY3\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+YY0\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertNull(driver.readOutput(output))@@@60@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertNull(driver.readOutput(output))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertOutputKeyValue(driver,3,\"X3+YY3\")@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+YY1\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"X\" + expectedKey))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0 (ts: 0)\",\"0:XX0+YY0 (ts: 0)\",\"1:XX1+Y1 (ts: 0)\",\"1:XX1+YY1 (ts: 0)\",\"2:XX2+YY2 (ts: 0)\",\"3:XX3+YY3 (ts: 0)\")@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int i = 0@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertOutputKeyValue(driver,0,\"XX0+YY0\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i < 2@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertNull(driver.readOutput(output))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0 (ts: 0)\",\"1:X1+Y1 (ts: 0)\")@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "int i = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOutputKeyValue(driver,1,\"XX1+Y1\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertNull(driver.readOutput(output))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null (ts: 0)\",\"1:X1+null (ts: 0)\")@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKeys(i(,\"X\" + expectedKeys(i())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertOutputKeyValue(driver,0,\"X0+Y0\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0 (ts: 0)\",\"0:X0+YY0 (ts: 0)\",\"1:X1+YY1 (ts: 0)\",\"1:X1+YY1 (ts: 0)\",\"2:X2+YY2 (ts: 0)\",\"3:X3+YY3 (ts: 0)\")@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertNull(driver.readOutput(output))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "int i = 0@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c354f3@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertOutputKeyValue(driver,2,\"XX2+YY2\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0 (ts: 0)\",\"1:X1+Y1 (ts: 0)\",\"2:X2+null (ts: 0)\",\"3:X3+null (ts: 0)\")@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->42 [style = dashed, label="0"];
16->6 [style = solid, label="i"];
15->10 [style = bold, label=""];
27->38 [style = bold, label=""];
2->26 [style = bold, label=""];
16->52 [style = bold, label=""];
69->60 [style = bold, label=""];
52->66 [style = solid, label="i"];
78->61 [style = bold, label=""];
21->4 [style = solid, label="stream2"];
54->68 [style = bold, label=""];
63->80 [style = dotted, label="true"];
73->62 [style = bold, label=""];
27->28 [style = bold, label=""];
9->5 [style = solid, label="expectedKeys"];
66->53 [style = solid, label="i"];
25->35 [style = bold, label=""];
7->8 [style = bold, label=""];
8->40 [style = bold, label=""];
15->40 [style = dashed, label="0"];
61->64 [style = bold, label=""];
77->47 [style = bold, label=""];
19->1 [style = bold, label=""];
16->27 [style = solid, label="i"];
54->72 [style = solid, label="i"];
10->39 [style = bold, label=""];
33->18 [style = bold, label=""];
10->12 [style = bold, label=""];
2->36 [style = bold, label=""];
67->68 [style = bold, label=""];
18->32 [style = bold, label=""];
66->73 [style = bold, label=""];
14->9 [style = bold, label=""];
80->33 [style = solid, label="expectedKeys"];
32->18 [style = bold, label=""];
9->24 [style = bold, label=""];
68->72 [style = dotted, label="true"];
45->70 [style = bold, label=""];
2->31 [style = bold, label=""];
19->42 [style = bold, label=""];
22->46 [style = bold, label=""];
68->72 [style = bold, label=""];
34->19 [style = bold, label=""];
63->78 [style = bold, label=""];
73->66 [style = dotted, label="true"];
65->12 [style = bold, label=""];
52->73 [style = bold, label=""];
30->34 [style = bold, label=""];
1->0 [style = bold, label=""];
6->53 [style = dashed, label="0"];
63->81 [style = dotted, label="true"];
58->79 [style = bold, label=""];
23->14 [style = bold, label=""];
68->54 [style = dotted, label="true"];
31->36 [style = dashed, label="0"];
19->29 [style = dotted, label="true"];
3->7 [style = bold, label=""];
79->59 [style = bold, label=""];
18->33 [style = solid, label="i"];
71->32 [style = bold, label=""];
22->19 [style = solid, label="i"];
35->17 [style = bold, label=""];
19->22 [style = dotted, label="true"];
33->30 [style = bold, label=""];
56->75 [style = bold, label=""];
62->48 [style = bold, label=""];
22->29 [style = solid, label="i"];
31->3 [style = bold, label=""];
19->22 [style = bold, label=""];
67->54 [style = solid, label="i"];
12->39 [style = dashed, label="0"];
21->4 [style = bold, label=""];
13->6 [style = solid, label="i"];
59->50 [style = bold, label=""];
32->18 [style = dotted, label="true"];
39->16 [style = bold, label=""];
8->15 [style = bold, label=""];
16->27 [style = bold, label=""];
3->37 [style = bold, label=""];
18->32 [style = solid, label="i"];
22->19 [style = bold, label=""];
19->29 [style = bold, label=""];
71->18 [style = solid, label="i"];
11->21 [style = bold, label=""];
52->53 [style = solid, label="i"];
18->33 [style = bold, label=""];
5->26 [style = bold, label=""];
3->46 [style = dashed, label="0"];
73->53 [style = dotted, label="true"];
52->73 [style = solid, label="i"];
70->76 [style = bold, label=""];
27->13 [style = dotted, label="true"];
26->2 [style = solid, label="i"];
32->33 [style = bold, label=""];
74->34 [style = bold, label=""];
42->0 [style = bold, label=""];
9->29 [style = solid, label="expectedKeys"];
71->33 [style = solid, label="i"];
32->33 [style = dotted, label="true"];
26->55 [style = bold, label=""];
66->73 [style = solid, label="i"];
44->69 [style = bold, label=""];
13->27 [style = bold, label=""];
34->22 [style = solid, label="i"];
34->29 [style = solid, label="i"];
24->25 [style = bold, label=""];
13->27 [style = solid, label="i"];
6->13 [style = bold, label=""];
4->20 [style = bold, label=""];
51->65 [style = bold, label=""];
49->2 [style = bold, label=""];
55->43 [style = bold, label=""];
73->53 [style = bold, label=""];
76->57 [style = bold, label=""];
2->26 [style = dotted, label="true"];
64->67 [style = bold, label=""];
37->8 [style = bold, label=""];
2->5 [style = dotted, label="true"];
10->59 [style = dashed, label="0"];
28->38 [style = dashed, label="0"];
41->14 [style = bold, label=""];
9->6 [style = solid, label="expectedKeys"];
2->5 [style = bold, label=""];
0->2 [style = solid, label="i"];
40->10 [style = bold, label=""];
32->74 [style = bold, label=""];
80->53 [style = solid, label="expectedKeys"];
34->19 [style = solid, label="i"];
46->49 [style = bold, label=""];
0->2 [style = bold, label=""];
20->32 [style = bold, label=""];
72->54 [style = bold, label=""];
67->72 [style = solid, label="i"];
12->16 [style = bold, label=""];
0->26 [style = solid, label="i"];
17->20 [style = solid, label="supplier"];
71->32 [style = solid, label="i"];
27->6 [style = bold, label=""];
68->77 [style = bold, label=""];
47->71 [style = bold, label=""];
75->58 [style = bold, label=""];
0->5 [style = solid, label="i"];
26->2 [style = bold, label=""];
67->68 [style = solid, label="i"];
48->45 [style = bold, label=""];
80->72 [style = solid, label="expectedKeys"];
26->5 [style = solid, label="i"];
50->51 [style = bold, label=""];
53->66 [style = bold, label=""];
54->68 [style = solid, label="i"];
57->44 [style = bold, label=""];
7->37 [style = dashed, label="0"];
16->13 [style = solid, label="i"];
27->6 [style = dotted, label="true"];
29->22 [style = bold, label=""];
43->56 [style = bold, label=""];
17->11 [style = bold, label=""];
36->3 [style = bold, label=""];
}
