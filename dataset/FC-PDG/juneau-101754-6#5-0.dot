digraph {
8 [style = filled, label = "RestClient x = client().query(\"foo\",s).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RestClient x = client().formData(\"foo\",s,T_ARRAY_PIPES,new A8()).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "RestClient x = client().formData(serializedPart(\"foo\",s).schema(T_ARRAY_PIPES).serializer(new A8())).build()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "TestSupplier s = TestSupplier.of(l1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<String> l1 = AList.of(\"foo\",\"bar\"),l2 = AList.of(\"bar\",\"baz\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "a10_formData_String_Supplier_Schema_Serializer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "s.set(OList.of(\"bar\",\"baz\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "a06_query_String_Supplier['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "x.post(\"/formData\").run().assertBody().asString().urlDecode().is(\"foo=x('bar','baz'(\")@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "x.get(\"/query\").run().assertBody().asString().urlDecode().is(\"foo=foo,bar\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "a10_formData_String_Supplier_Schema_Serializer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "s.set(l2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "x.post(\"/formData\").run().assertBody().asString().urlDecode().is(\"foo=x('foo','bar'(\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "x.get(\"/query\").run().assertBody().asString().urlDecode().is(\"foo=bar,baz\")@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestSupplier s = TestSupplier.of(OList.of(\"foo\",\"bar\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
6->4 [style = bold, label=""];
1->4 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
7->0 [style = bold, label=""];
14->9 [style = bold, label=""];
0->11 [style = dashed, label="0"];
10->8 [style = bold, label=""];
0->6 [style = bold, label=""];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
13->14 [style = bold, label=""];
11->10 [style = solid, label="l1"];
11->14 [style = solid, label="l2"];
1->6 [style = dashed, label="0"];
8->13 [style = bold, label=""];
12->11 [style = bold, label=""];
}
