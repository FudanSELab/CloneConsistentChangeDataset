digraph {
17 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),!local),null)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final String path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "guaranteed@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "pathInForeground(path,unfixedPath)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "pathInForeground(path,unfixedPath)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "forPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "OperationAndData.ErrorCallback<String> errorCallback = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "OperationAndData<String> operationAndData = new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),null){@Override void callPerformBackgroundOperation(){if (failBeforeNextDeleteForTesting) {failBeforeNextDeleteForTesting = falsethrow new KeeperException.ConnectionLossException()}super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1200cb3}}@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "pathInBackground['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "errorCallback = new OperationAndData.ErrorCallback<String>(){@Override public void retriesExhausted(OperationAndData<String> operationAndData){client.getFailedDeleteManager().addFailedOperation(unfixedPath)}}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "errorCallback = new OperationAndData.ErrorCallback<String>(){@Override public void retriesExhausted(OperationAndData<String> operationAndData){client.getFailedRemoveWatcherManager().addFailedOperation(new FailedRemoveWatchManager.FailedRemoveWatchDetails(path,watcher))}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "backgrounding.inBackground()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String unfixedPath = path@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.processBackgroundOperation(operationAndData,null)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "path = client.fixForNamespace(path)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "forPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "OperationAndData.ErrorCallback<String> errorCallback = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.getSchemaSet().getSchema(path).validateDelete(path)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),null),null)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "guaranteed@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return null@@@31@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "return null@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
16->8 [style = dotted, label="true"];
16->0 [style = bold, label=""];
15->14 [style = bold, label=""];
2->15 [style = solid, label="path"];
2->6 [style = bold, label=""];
1->15 [style = bold, label=""];
22->21 [style = solid, label="path"];
18->19 [style = bold, label=""];
1->5 [style = solid, label="errorCallback"];
4->8 [style = dotted, label="true"];
2->12 [style = solid, label="path"];
6->7 [style = dotted, label="false"];
19->17 [style = bold, label=""];
19->21 [style = dotted, label="true"];
11->9 [style = bold, label=""];
7->3 [style = bold, label=""];
4->0 [style = bold, label=""];
21->17 [style = solid, label="errorCallback"];
6->12 [style = dotted, label="false"];
20->18 [style = bold, label=""];
8->22 [style = dashed, label="0"];
12->13 [style = bold, label=""];
9->19 [style = dashed, label="0"];
0->10 [style = bold, label=""];
6->14 [style = dotted, label="true"];
8->0 [style = solid, label="path"];
5->17 [style = dashed, label="0"];
18->17 [style = solid, label="errorCallback"];
6->9 [style = dotted, label="true"];
8->10 [style = solid, label="path"];
2->5 [style = solid, label="path"];
9->15 [style = bold, label=""];
15->14 [style = solid, label="operationAndData"];
6->11 [style = bold, label=""];
11->15 [style = solid, label="errorCallback"];
9->1 [style = dotted, label="true"];
22->17 [style = solid, label="path"];
9->5 [style = bold, label=""];
1->15 [style = solid, label="errorCallback"];
10->12 [style = solid, label="unfixedPath"];
10->2 [style = bold, label=""];
19->21 [style = bold, label=""];
11->5 [style = solid, label="errorCallback"];
20->22 [style = dotted, label="true"];
14->13 [style = bold, label=""];
6->11 [style = dotted, label="true"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
8->2 [style = solid, label="path"];
10->1 [style = solid, label="unfixedPath"];
5->15 [style = dashed, label="0"];
2->7 [style = solid, label="path"];
21->17 [style = bold, label=""];
6->12 [style = bold, label=""];
6->5 [style = dotted, label="true"];
6->15 [style = dotted, label="true"];
10->7 [style = solid, label="unfixedPath"];
}
