digraph {
0 [style = filled, label = "LatexParserResult parserResult = new DefaultLatexParser().parse(texFile)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDuplicateFiles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testDuplicateFiles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(expectedCrossingResult,crossingResult)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCrossRef['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedCrossingResult.addEntry(bibEntry)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Path texFile = Path.of(.getResource(\"paper.tex\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database,importFormatPreferences,timestampPreferences,fileMonitor).resolve(parserResult)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "LatexBibEntriesResolverResult crossingResult = new TexBibEntriesResolver(database,importFormatPreferences,fileMonitor).resolve(parserResult)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "LatexBibEntriesResolverResult expectedCrossingResult = new LatexBibEntriesResolverResult(parserResult)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Path texFile = Path.of(.getResource(\"crossref.tex\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
0->6 [style = bold, label=""];
6->2 [style = solid, label="crossingResult"];
4->2 [style = solid, label="crossingResult"];
0->5 [style = solid, label="parserResult"];
1->3 [style = bold, label=""];
9->10 [style = bold, label=""];
4->6 [style = dashed, label="0"];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
0->4 [style = solid, label="parserResult"];
10->0 [style = solid, label="texFile"];
5->2 [style = solid, label="expectedCrossingResult"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
8->2 [style = bold, label=""];
0->4 [style = bold, label=""];
0->6 [style = solid, label="parserResult"];
3->0 [style = solid, label="texFile"];
10->0 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
}
