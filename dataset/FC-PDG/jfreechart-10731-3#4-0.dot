digraph {
19 [style = filled, label = "s2.add(new Task(\"T3\",new Date(22),new Date(33)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(c1,c2)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "TaskSeriesCollection c2 = (TaskSeriesCollection)TestUtilities.serialised(c1)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertFalse(s1.equals(s2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TaskSeriesCollection c1 = new TaskSeriesCollection()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TaskSeries s1 = new TaskSeries(\"S\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "s2.add(new Task(\"T1\",new Date(1),new Date(2)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "c1.add(s1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "s2.add(new Task(\"T2\",new Date(11),new Date(22)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "s1.add(new Task(\"T1\",new Date(1),new Date(2)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(s1.getClass() == s2.getClass())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TaskSeries s2 = (TaskSeries)s1.clone()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(s1.equals(s2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TaskSeriesCollection c2 = (TaskSeriesCollection)TestUtils.serialised(c1)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertTrue(s1 != s2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "c1.add(s2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TaskSeries s2 = new TaskSeries(\"S\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(s1.equals(s2))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "s1.add(new Task(\"T3\",new Date(22),new Date(33)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "s1.add(new Task(\"T2\",new Date(11),new Date(22)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
8->16 [style = dashed, label="0"];
10->9 [style = solid, label="c1"];
0->6 [style = bold, label=""];
11->1 [style = bold, label=""];
7->12 [style = bold, label=""];
0->17 [style = bold, label=""];
21->15 [style = bold, label=""];
12->8 [style = solid, label="c2"];
14->22 [style = bold, label=""];
22->21 [style = bold, label=""];
20->14 [style = bold, label=""];
6->17 [style = dashed, label="0"];
4->2 [style = solid, label="s1"];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
17->20 [style = solid, label="s2"];
3->0 [style = bold, label=""];
17->15 [style = solid, label="s2"];
19->16 [style = bold, label=""];
7->9 [style = bold, label=""];
10->8 [style = solid, label="c1"];
18->4 [style = bold, label=""];
4->20 [style = solid, label="s1"];
2->21 [style = dashed, label="0"];
12->8 [style = bold, label=""];
6->11 [style = bold, label=""];
6->7 [style = solid, label="s2"];
5->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
10->2 [style = bold, label=""];
9->12 [style = dashed, label="0"];
2->7 [style = bold, label=""];
1->10 [style = bold, label=""];
9->8 [style = solid, label="c2"];
10->12 [style = solid, label="c1"];
17->22 [style = solid, label="s2"];
17->16 [style = solid, label="s2"];
17->20 [style = bold, label=""];
13->4 [style = bold, label=""];
}
