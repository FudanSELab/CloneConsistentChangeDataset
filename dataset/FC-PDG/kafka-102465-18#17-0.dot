digraph {
7 [style = filled, label = "shouldThrowProcessorStateExceptionOnCloseIfStoreThrowsAnException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final ProcessorStateException thrown = assertThrows(,null)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "shouldThrowProcessorStateExceptionOnFlushIfStoreThrowsAnException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ProcessorStateException thrown = assertThrows(,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final MockKeyValueStore stateStore = new MockKeyValueStore(persistentStoreName,true){@Override public void flush(){throw exception}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldThrowProcessorStateExceptionOnCloseIfStoreThrowsAnException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final ProcessorStateManager stateManager = getStateManager(Task.TaskType.ACTIVE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(exception,thrown.getCause())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final ProcessorStateException thrown = assertThrows(,null)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final RuntimeException exception = new RuntimeException(\"KABOOM!\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stateManager.registerStore(stateStore,stateStore.stateRestoreCallback)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
3->8 [style = dashed, label="0"];
6->3 [style = bold, label=""];
10->0 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
5->4 [style = bold, label=""];
4->2 [style = solid, label="exception"];
4->0 [style = solid, label="exception"];
7->4 [style = bold, label=""];
3->10 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->6 [style = bold, label=""];
2->6 [style = solid, label="stateStore"];
6->10 [style = bold, label=""];
3->0 [style = bold, label=""];
6->8 [style = bold, label=""];
}
