digraph {
43 [style = filled, label = "rm.drainEvents()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rm.drainEvents()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LOG.info(\"Running testSimple\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "MyContainerAllocator allocator = new MyContainerAllocator(rm,conf,appAttemptId,mockJob)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(3,rm.getMyFifoScheduler().lastAsk.size())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ContainerRequestEvent event3 = createReq(jobId,3,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebbe6)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "rm.drainEvents()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<TaskAttemptContainerAssignedEvent> assigned = allocator.schedule()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MyResourceManager rm = new MyResourceManager(conf)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebbb4)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(0,rm.getMyFifoScheduler().lastAsk.size())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "ContainerRequestEvent event2 = ContainerRequestCreator.createRequest(jobId,2,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebd1e)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "rm.drainEvents()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "allocator.sendRequest(event2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MockNM nodeManager2 = rm.registerNode(\"h2:1234\",10240)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ApplicationAttemptId appAttemptId = app.getCurrentAppAttempt().getAppAttemptId()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Job mockJob = mock()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "LOG.info(\"Running testResource\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "allocator.sendRequest(event1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "allocator.sendRequest(event3)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "JobId jobId = MRBuilderUtils.newJobId(appAttemptId.getApplicationId(),0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "MockNM amNodeManager = rm.registerNode(\"amNM:1234\",2048)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ContainerRequestEvent event1 = ContainerRequestCreator.createRequest(jobId,1,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebd07)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "testSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "rm.drainEvents()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ContainerRequestEvent event3 = ContainerRequestCreator.createRequest(jobId,3,Resource.newInstance(1024,1),new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebd55)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "testResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rm.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assigned = allocator.schedule()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "nodeManager2.nodeHeartbeat(true)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RMApp app = rm.submitApp(1024)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "rm.drainEvents()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "nodeManager1.nodeHeartbeat(true)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MockNM nodeManager3 = rm.registerNode(\"h3:1234\",10240)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rm.drainEvents()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "allocator.schedule()@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "MockNM nodeManager1 = rm.registerNode(\"h1:1234\",10240)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assigned = allocator.schedule()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Configuration conf = new Configuration()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "amNodeManager.nodeHeartbeat(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "rm.drainEvents()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "nodeManager3.nodeHeartbeat(true)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(4,rm.getMyFifoScheduler().lastAsk.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "when(mockJob.getReport()).thenReturn(MRBuilderUtils.newJobReport(jobId,\"job\",\"user\",JobState.RUNNING,0,0,0,0,0,0,0,\"jobfile\",null,false,\"\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkAssignments(new ContainerRequestEvent((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebec1,assigned,false)@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rm.sendAMLaunched(appAttemptId)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "rm.drainEvents()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(\"No of assignments must be 0\",0,assigned.size())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(5,rm.getMyFifoScheduler().lastAsk.size())@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ContainerRequestEvent event2 = createReq(jobId,2,2048,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebe83)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ContainerRequestEvent event1 = createReq(jobId,1,1024,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@4ebe71)@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = solid, label="conf"];
5->3 [style = bold, label=""];
1->12 [style = solid, label="event2"];
49->24 [style = solid, label="event3"];
46->15 [style = bold, label=""];
36->28 [style = bold, label=""];
21->30 [style = bold, label=""];
40->23 [style = bold, label=""];
14->7 [style = bold, label=""];
49->24 [style = bold, label=""];
32->24 [style = solid, label="event3"];
20->46 [style = dashed, label="0"];
45->43 [style = bold, label=""];
50->5 [style = bold, label=""];
33->25 [style = bold, label=""];
39->31 [style = bold, label=""];
49->25 [style = solid, label="event3"];
9->50 [style = dashed, label="0"];
1->12 [style = bold, label=""];
9->5 [style = bold, label=""];
23->36 [style = bold, label=""];
14->22 [style = solid, label="appAttemptId"];
30->46 [style = solid, label="jobId"];
20->15 [style = bold, label=""];
4->19 [style = bold, label=""];
1->25 [style = solid, label="event2"];
24->40 [style = bold, label=""];
12->35 [style = bold, label=""];
30->20 [style = solid, label="jobId"];
51->12 [style = solid, label="event2"];
30->1 [style = solid, label="jobId"];
13->11 [style = bold, label=""];
20->25 [style = solid, label="event1"];
25->27 [style = bold, label=""];
47->12 [style = solid, label="event2"];
20->15 [style = solid, label="event1"];
44->4 [style = bold, label=""];
1->47 [style = dashed, label="0"];
30->49 [style = solid, label="jobId"];
43->33 [style = bold, label=""];
39->41 [style = bold, label=""];
15->47 [style = bold, label=""];
16->20 [style = bold, label=""];
42->38 [style = bold, label=""];
30->47 [style = solid, label="jobId"];
22->44 [style = bold, label=""];
14->7 [style = solid, label="appAttemptId"];
30->17 [style = bold, label=""];
0->45 [style = bold, label=""];
32->25 [style = solid, label="event3"];
31->32 [style = bold, label=""];
51->12 [style = bold, label=""];
6->42 [style = bold, label=""];
8->14 [style = bold, label=""];
1->51 [style = dashed, label="0"];
31->49 [style = bold, label=""];
47->25 [style = solid, label="event2"];
30->51 [style = solid, label="jobId"];
28->41 [style = bold, label=""];
19->16 [style = bold, label=""];
17->22 [style = solid, label="mockJob"];
27->37 [style = bold, label=""];
2->0 [style = bold, label=""];
32->49 [style = dashed, label="0"];
52->50 [style = bold, label=""];
3->22 [style = solid, label="rm"];
10->9 [style = bold, label=""];
38->8 [style = bold, label=""];
46->15 [style = solid, label="event1"];
35->26 [style = bold, label=""];
41->18 [style = bold, label=""];
16->46 [style = bold, label=""];
15->1 [style = bold, label=""];
5->22 [style = solid, label="conf"];
47->12 [style = bold, label=""];
11->6 [style = bold, label=""];
48->9 [style = bold, label=""];
46->25 [style = solid, label="event1"];
18->2 [style = bold, label=""];
26->39 [style = bold, label=""];
51->25 [style = solid, label="event2"];
30->32 [style = solid, label="jobId"];
37->34 [style = bold, label=""];
3->13 [style = bold, label=""];
7->21 [style = bold, label=""];
29->22 [style = bold, label=""];
43->25 [style = bold, label=""];
17->29 [style = bold, label=""];
32->24 [style = bold, label=""];
45->25 [style = solid, label="assigned"];
30->29 [style = solid, label="jobId"];
15->51 [style = bold, label=""];
}
