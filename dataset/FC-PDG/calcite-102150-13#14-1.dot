digraph {
20 [style = filled, label = "final int index = fieldCollation.getFieldIndex()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "arg0 = RexToLixTranslator.convert(arg0,)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "generateComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "collations.size() == 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "generateCollationKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Method method = (fieldNullable(index)? (nullsFirst ^ descending? BuiltInMethod.COMPARE_NULLS_FIRST: BuiltInMethod.COMPARE_NULLS_LAST): BuiltInMethod.COMPARE).method@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(method.getDeclaringClass(),method.getName(),arg0,arg1))))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return Expressions.new_(,ImmutableList.of(),memberDeclarations)@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "arg1 = RexToLixTranslator.convert(arg1,)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final Expression selector@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "arg0 = EnumUtils.convert(arg0,)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "arg1 = EnumUtils.convert(arg1,)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "RelCollation collation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "generateCollationKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->16 [style = solid, label="selector"];
50->52 [style = dotted, label="true"];
15->18 [style = solid, label="parameter"];
29->33 [style = solid, label="arg1"];
20->32 [style = solid, label="index"];
20->51 [style = solid, label="index"];
18->30 [style = bold, label=""];
26->40 [style = bold, label=""];
31->20 [style = dashed, label="0"];
15->3 [style = solid, label="parameter"];
53->54 [style = bold, label=""];
5->28 [style = bold, label=""];
7->8 [style = bold, label=""];
17->6 [style = solid, label="selector"];
50->2 [style = dotted, label="true"];
29->12 [style = solid, label="memberDeclarations"];
8->36 [style = bold, label=""];
1->10 [style = solid, label="mod"];
38->45 [style = solid, label="parameterC"];
50->55 [style = bold, label=""];
11->0 [style = dotted, label="true"];
26->32 [style = solid, label="arg0"];
50->12 [style = bold, label=""];
46->45 [style = solid, label="mod"];
9->14 [style = bold, label=""];
11->28 [style = dotted, label="true"];
34->29 [style = dashed, label="0"];
34->6 [style = solid, label="memberDeclarations"];
9->15 [style = dotted, label="true"];
28->0 [style = solid, label="parameterO1"];
44->42 [style = solid, label="javaRowClass"];
20->18 [style = solid, label="index"];
24->33 [style = solid, label="arg0"];
49->18 [style = solid, label="parameterV1"];
43->44 [style = bold, label=""];
49->29 [style = solid, label="parameterV1"];
17->20 [style = bold, label=""];
2->31 [style = bold, label=""];
50->55 [style = dotted, label="true"];
13->25 [style = bold, label=""];
26->33 [style = solid, label="parameterC"];
26->10 [style = solid, label="parameterC"];
31->7 [style = solid, label="index"];
10->31 [style = bold, label=""];
18->34 [style = solid, label="parameterV0"];
15->28 [style = solid, label="parameter"];
42->51 [style = solid, label="parameterV0"];
55->54 [style = solid, label="parameterO0"];
26->1 [style = bold, label=""];
30->26 [style = bold, label=""];
4->19 [style = bold, label=""];
9->17 [style = bold, label=""];
49->38 [style = bold, label=""];
11->5 [style = dotted, label="true"];
32->7 [style = bold, label=""];
16->17 [style = bold, label=""];
27->16 [style = bold, label=""];
35->21 [style = bold, label=""];
3->0 [style = bold, label=""];
13->23 [style = dotted, label="true"];
32->36 [style = solid, label="arg0"];
52->54 [style = solid, label="parameterO1"];
20->18 [style = bold, label=""];
7->24 [style = bold, label=""];
15->30 [style = solid, label="parameter"];
28->3 [style = solid, label="parameterO1"];
1->46 [style = dashed, label="0"];
54->2 [style = bold, label=""];
51->18 [style = bold, label=""];
38->46 [style = bold, label=""];
14->15 [style = bold, label=""];
8->29 [style = dotted, label="true"];
36->35 [style = bold, label=""];
55->2 [style = solid, label="parameterO0"];
24->36 [style = dashed, label="0"];
30->7 [style = solid, label="parameterV1"];
29->35 [style = dashed, label="0"];
21->4 [style = bold, label=""];
8->24 [style = bold, label=""];
19->33 [style = bold, label=""];
44->42 [style = bold, label=""];
15->26 [style = solid, label="parameter"];
8->35 [style = dotted, label="true"];
50->54 [style = dotted, label="true"];
31->32 [style = bold, label=""];
7->29 [style = solid, label="arg1"];
37->25 [style = bold, label=""];
25->9 [style = bold, label=""];
32->24 [style = solid, label="arg0"];
7->20 [style = bold, label=""];
45->20 [style = bold, label=""];
18->32 [style = solid, label="parameterV0"];
29->21 [style = bold, label=""];
8->24 [style = dotted, label="true"];
50->53 [style = dotted, label="true"];
11->5 [style = bold, label=""];
40->32 [style = solid, label="arg1"];
47->32 [style = bold, label=""];
47->32 [style = solid, label="descending"];
44->54 [style = solid, label="javaRowClass"];
29->50 [style = bold, label=""];
39->48 [style = dotted, label="true"];
20->51 [style = bold, label=""];
5->0 [style = solid, label="parameterO0"];
41->47 [style = bold, label=""];
8->36 [style = dotted, label="true"];
55->52 [style = bold, label=""];
9->16 [style = dotted, label="true"];
5->3 [style = solid, label="parameterO0"];
11->3 [style = dotted, label="true"];
33->2 [style = bold, label=""];
28->22 [style = bold, label=""];
15->27 [style = solid, label="parameter"];
52->53 [style = bold, label=""];
19->3 [style = solid, label="method"];
31->8 [style = solid, label="index"];
0->6 [style = bold, label=""];
11->6 [style = bold, label=""];
39->43 [style = bold, label=""];
30->34 [style = solid, label="parameterV1"];
20->30 [style = solid, label="index"];
38->32 [style = solid, label="parameterC"];
4->47 [style = dashed, label="0"];
12->34 [style = bold, label=""];
24->29 [style = bold, label=""];
30->26 [style = dotted, label="true"];
7->35 [style = solid, label="arg1"];
11->22 [style = dotted, label="true"];
30->40 [style = dotted, label="true"];
52->2 [style = solid, label="parameterO1"];
34->11 [style = bold, label=""];
9->14 [style = dotted, label="true"];
2->12 [style = bold, label=""];
44->49 [style = solid, label="javaRowClass"];
6->12 [style = dashed, label="0"];
9->27 [style = dotted, label="true"];
22->3 [style = bold, label=""];
4->19 [style = solid, label="descending"];
15->5 [style = solid, label="parameter"];
21->41 [style = dashed, label="0"];
42->29 [style = solid, label="parameterV0"];
26->2 [style = solid, label="parameterC"];
4->2 [style = solid, label="descending"];
40->41 [style = bold, label=""];
51->26 [style = solid, label="arg0"];
36->33 [style = solid, label="arg0"];
18->40 [style = solid, label="arg1"];
47->7 [style = solid, label="descending"];
46->45 [style = bold, label=""];
42->49 [style = bold, label=""];
35->33 [style = solid, label="arg1"];
37->23 [style = dotted, label="true"];
31->19 [style = solid, label="index"];
38->7 [style = solid, label="parameterC"];
15->27 [style = bold, label=""];
1->10 [style = bold, label=""];
19->0 [style = solid, label="method"];
31->32 [style = solid, label="index"];
}
