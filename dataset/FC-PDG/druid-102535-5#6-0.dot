digraph {
10 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long>> polledRecords = recordSupplier.poll(poll_timeout_millis)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "kafkaProducer.beginTransaction()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "kafkaProducer.initTransactions()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "kafkaProducer.commitTransaction()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "recordSupplier.close()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testPollAfterMoreDataAdded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int i = 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Set<StreamPartition<Integer>> partitions = ImmutableSet.of(StreamPartition.of(topic,0),StreamPartition.of(topic,1))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "kafkaProducer.send(record).get()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "polledRecords.size() != records.size() && i < pollRetry@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "recordSupplier.seekToEarliest(partitions)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "kafkaProducer.initTransactions()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = 0@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "kafkaProducer.send(record).get()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(initialRecordsPartition0Size,polledRecordsPartition0Size)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final int initialRecordsPartition1Size = initialRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "insertData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "kafkaProducer.beginTransaction()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "polledRecords.size() != 13 && i < pollRetry@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final int polledRecordsPartition0Size = polledRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Thread.sleep(200)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "KafkaRecordSupplier recordSupplier = new KafkaRecordSupplier(kafkaServer.consumerProperties(),OBJECT_MAPPER)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(initialRecordsPartition1Size,polledRecordsPartition1Size)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Thread.sleep(200)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "kafkaProducer.commitTransaction()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Iterable<ProducerRecord<byte((,byte((>> records@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "polledRecords.addAll(recordSupplier.poll(poll_timeout_millis))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "recordSupplier.assign(partitions)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long>> initialRecords = createOrderedPartitionableRecords()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "insertData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(partitions,recordSupplier.getAssignment())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final int initialRecordsPartition0Size = initialRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(records.size(),polledRecords.size())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "polledRecords.addAll(recordSupplier.poll(poll_timeout_millis))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final int polledRecordsPartition1Size = polledRecords.stream().filter(null).collect(Collectors.toSet()).size()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34->13 [style = bold, label=""];
8->26 [style = solid, label="i"];
26->21 [style = bold, label=""];
23->19 [style = bold, label=""];
26->28 [style = dotted, label="true"];
20->29 [style = solid, label="initialRecordsPartition0Size"];
26->21 [style = dotted, label="true"];
21->28 [style = bold, label=""];
30->18 [style = bold, label=""];
8->26 [style = bold, label=""];
27->4 [style = bold, label=""];
22->26 [style = solid, label="i"];
9->31 [style = bold, label=""];
26->33 [style = bold, label=""];
13->29 [style = solid, label="polledRecordsPartition0Size"];
13->24 [style = bold, label=""];
30->35 [style = dotted, label="true"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
33->16 [style = bold, label=""];
14->30 [style = solid, label="i"];
11->30 [style = bold, label=""];
19->36 [style = bold, label=""];
28->22 [style = bold, label=""];
16->12 [style = bold, label=""];
5->6 [style = dotted, label="true"];
18->9 [style = bold, label=""];
14->11 [style = solid, label="i"];
14->30 [style = bold, label=""];
22->26 [style = bold, label=""];
23->32 [style = solid, label="partitions"];
15->11 [style = bold, label=""];
30->11 [style = dotted, label="true"];
32->10 [style = bold, label=""];
30->15 [style = dotted, label="true"];
11->30 [style = solid, label="i"];
12->20 [style = bold, label=""];
34->7 [style = solid, label="initialRecordsPartition1Size"];
35->15 [style = bold, label=""];
29->7 [style = bold, label=""];
2->23 [style = bold, label=""];
36->32 [style = bold, label=""];
7->17 [style = bold, label=""];
24->7 [style = solid, label="polledRecordsPartition1Size"];
25->8 [style = bold, label=""];
23->12 [style = solid, label="partitions"];
30->35 [style = bold, label=""];
8->22 [style = solid, label="i"];
23->36 [style = solid, label="partitions"];
24->29 [style = bold, label=""];
26->22 [style = dotted, label="true"];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
31->25 [style = bold, label=""];
10->14 [style = bold, label=""];
4->0 [style = bold, label=""];
20->34 [style = bold, label=""];
}
