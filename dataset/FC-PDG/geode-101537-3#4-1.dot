digraph {
10 [style = filled, label = "assertThat(evictionList.unlinkTailEntry()).isSameAs(node)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "unlinkHeadInListTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(evictionList.size()).isEqualTo(0)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(node.next()).thenReturn(null,evictionList.tail)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestEvictionList evictionList = new TestEvictionList(controller)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(evictionList.unlinkHeadEntry()).isSameAs(node)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(node.previous()).thenReturn(evictionList.head)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "unlinkTailInListTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EvictionNode node = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestEvictionList evictionList = new TestEvictionList(stats,bucketRegion)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "evictionList.appendEntry(node)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "unlinkHeadInListTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9->5 [style = bold, label=""];
5->3 [style = bold, label=""];
3->6 [style = bold, label=""];
5->7 [style = solid, label="node"];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
6->7 [style = bold, label=""];
0->10 [style = dashed, label="0"];
10->1 [style = bold, label=""];
5->10 [style = solid, label="node"];
7->10 [style = bold, label=""];
2->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
11->2 [style = bold, label=""];
5->0 [style = solid, label="node"];
2->5 [style = bold, label=""];
8->9 [style = bold, label=""];
}
