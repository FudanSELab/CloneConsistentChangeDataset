digraph {
16 [style = filled, label = "Iterable<FileAwareInputStream> iterable = converter.convertRecord(\"outputSchema\",fileAwareInputStream,new WorkUnitState())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(actual.trim(),expectedText)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "UnGzipConverter converter = new UnGzipConverter()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return Iterables.getFirst(iterable,null)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "getCompressedInputStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "FileStatus status = fs.getFileStatus(testTempPath)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String expectedText@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String filePath@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String filePath@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGz['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "FileAwareInputStream fileAwareInputStream = FileAwareInputStream.builder().file(cf).inputStream(fs.open(new Path(fullPath))).build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(cf,fs.open(new Path(fullPath)))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "final String filePath@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Iterable<FileAwareInputStream> iterable = converter.convertRecord(\"outputSchema\",fileAwareInputStream,new WorkUnitState())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final String newFileName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "FileSystem fs = FileSystem.getLocal(new Configuration())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "FileAwareInputStream fileAwareInputStream = new FileAwareInputStream(CopyableFileUtils.getTestCopyableFile(filePath),fs.open(new Path(fullPath)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String fullPath = getClass().getClassLoader().getResource(filePath).getFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OwnerAndPermission ownerAndPermission = new OwnerAndPermission(status.getOwner(),status.getGroup(),new FsPermission(FsAction.ALL,FsAction.ALL,FsAction.ALL))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String actual = readGzipStreamAsString(Iterables.getFirst(iterable,null).getInputStream())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "getCompressedInputStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CopyableFile cf = CopyableFileUtils.getTestCopyableFile(filePath,new Path(testTempPath,newFileName).toString(),newFileName,ownerAndPermission)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->20 [style = solid, label="expectedText"];
1->5 [style = bold, label=""];
11->7 [style = dotted, label="true"];
8->10 [style = bold, label=""];
12->5 [style = bold, label=""];
7->18 [style = dashed, label="0"];
5->9 [style = bold, label=""];
0->1 [style = solid, label="cf"];
19->16 [style = solid, label="fileAwareInputStream"];
0->12 [style = bold, label=""];
6->0 [style = solid, label="filePath"];
17->19 [style = solid, label="filePath"];
15->18 [style = dotted, label="true"];
7->0 [style = solid, label="filePath"];
10->3 [style = bold, label=""];
4->2 [style = bold, label=""];
5->9 [style = solid, label="iterable"];
2->0 [style = solid, label="ownerAndPermission"];
3->4 [style = bold, label=""];
7->0 [style = solid, label="newFileName"];
13->0 [style = solid, label="newFileName"];
14->13 [style = dotted, label="true"];
19->16 [style = bold, label=""];
15->17 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
21->20 [style = bold, label=""];
3->19 [style = bold, label=""];
9->21 [style = dashed, label="0"];
11->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
16->21 [style = bold, label=""];
3->19 [style = solid, label="fullPath"];
14->7 [style = dotted, label="true"];
11->8 [style = bold, label=""];
14->8 [style = bold, label=""];
1->5 [style = solid, label="fileAwareInputStream"];
15->8 [style = bold, label=""];
12->5 [style = solid, label="fileAwareInputStream"];
3->1 [style = solid, label="fullPath"];
}
