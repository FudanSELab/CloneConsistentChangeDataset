digraph {
22 [style = filled, label = "aggregationProjection2.setIndex(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "AggregationProjection aggregationProjection2 = new AggregationProjection(AggregationType.AVG,\"(num)\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertBuildGroupByStreamMergedResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AggregationProjection derivedAggregationProjection1 = new AggregationProjection(AggregationType.COUNT,\"(num)\",\"AVG_DERIVED_COUNT_0\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema()),instanceOf())@@@5@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AggregationProjection derivedAggregationProjection2 = new AggregationProjection(AggregationType.SUM,\"(num)\",\"AVG_DERIVED_SUM_0\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "aggregationProjection2.getDerivedAggregationProjections().add(derivedAggregationProjection1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "return new SelectStatementContext(selectStatement,new GroupByContext(Collections.singletonList(createOrderByItem(new IndexOrderByItemSegment(0,0,3,OrderDirection.ASC,OrderDirection.ASC)))),new OrderByContext(Collections.singletonList(createOrderByItem(new IndexOrderByItemSegment(0,0,3,OrderDirection.DESC,OrderDirection.ASC))),false),projectionsContext,new PaginationContext(null,null,Collections.emptyList()))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "aggregationProjection2.setIndex(5)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "aggregationProjection2.getDerivedAggregationProjections().add(derivedAggregationProjection2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema()),instanceOf())@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "selectStatement.setGroupBy(new GroupBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "ProjectionsContext projectionsContext = new ProjectionsContext(0,0,false,Arrays.asList(aggregationProjection1,aggregationProjection2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "createSelectStatementContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "aggregationProjection2.setIndex(4)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "selectStatement.setOrderBy(new OrderBySegment(0,0,Collections.singletonList(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "when(metaData.getSchema()).thenReturn(mock())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new MySQLSelectStatement()),new GroupByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC)))),new OrderByContext(Collections.singletonList(new OrderByItem(new IndexOrderByItemSegment(0,0,1,OrderDirection.DESC,OrderDirection.ASC))),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(null,null,Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AggregationProjection aggregationProjection1 = new AggregationProjection(AggregationType.COUNT,\"(*)\",null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertBuildGroupByStreamMergedResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "aggregationProjection1.setIndex(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SelectStatement selectStatement = new MySQLSelectStatement()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MySQLSelectStatement selectStatement = (MySQLSelectStatement)buildSelectStatement(new MySQLSelectStatement())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->12 [style = solid, label="metaData"];
23->16 [style = bold, label=""];
7->11 [style = bold, label=""];
24->19 [style = bold, label=""];
3->1 [style = bold, label=""];
21->27 [style = solid, label="aggregationProjection1"];
19->20 [style = bold, label=""];
2->0 [style = solid, label="selectStatementContext"];
4->13 [style = bold, label=""];
18->26 [style = bold, label=""];
20->28 [style = bold, label=""];
27->14 [style = solid, label="projectionsContext"];
11->12 [style = bold, label=""];
18->24 [style = solid, label="derivedAggregationProjection1"];
1->10 [style = dashed, label="0"];
21->25 [style = bold, label=""];
9->7 [style = bold, label=""];
26->24 [style = bold, label=""];
17->23 [style = bold, label=""];
29->21 [style = bold, label=""];
15->22 [style = bold, label=""];
13->12 [style = solid, label="selectStatement"];
2->0 [style = bold, label=""];
22->18 [style = bold, label=""];
10->5 [style = bold, label=""];
15->27 [style = solid, label="aggregationProjection2"];
12->8 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
27->17 [style = bold, label=""];
25->15 [style = bold, label=""];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
19->28 [style = solid, label="derivedAggregationProjection2"];
13->9 [style = bold, label=""];
28->27 [style = bold, label=""];
17->14 [style = solid, label="selectStatement"];
23->16 [style = solid, label="projectionsSegment"];
12->8 [style = solid, label="selectStatementContext"];
}
