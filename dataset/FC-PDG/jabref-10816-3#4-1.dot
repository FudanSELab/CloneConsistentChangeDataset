digraph {
14 [style = filled, label = "BibEntry firstEntry = new BibEntry()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(expectedEntry,tel.getAddedEntry())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "TestEventListener tel = new TestEventListener()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "BibEntry expectedEntry = new BibEntry()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "insertEntryPostsAddedEntryEvent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "insertMultipleEntriesPostsAddedEntryEvent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "insertEntryPostsAddedEntryEvent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "database.registerListener(tel)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(firstEntry,tel.getFirstInsertedEntry())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestEventListener tel = new TestEventListener()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Collections.singletonList(expectedEntry),tel.getAddedEntries())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "BibEntry secondEntry = new BibEntry()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "database.insertEntries(firstEntry,secondEntry)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(secondEntry,tel.getAddedEntry())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(expectedEntry,tel.getFirstInsertedEntry())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
0->3 [style = bold, label=""];
7->1 [style = bold, label=""];
11->10 [style = solid, label="secondEntry"];
2->6 [style = bold, label=""];
4->2 [style = solid, label="tel"];
3->7 [style = solid, label="expectedEntry"];
8->3 [style = bold, label=""];
11->9 [style = solid, label="secondEntry"];
1->9 [style = dashed, label="0"];
4->2 [style = bold, label=""];
3->1 [style = solid, label="expectedEntry"];
3->4 [style = bold, label=""];
11->2 [style = bold, label=""];
6->10 [style = dashed, label="0"];
3->5 [style = solid, label="expectedEntry"];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
10->13 [style = bold, label=""];
14->10 [style = solid, label="firstEntry"];
14->13 [style = solid, label="firstEntry"];
6->10 [style = bold, label=""];
12->14 [style = bold, label=""];
13->9 [style = bold, label=""];
2->6 [style = solid, label="tel"];
3->6 [style = solid, label="expectedEntry"];
6->7 [style = bold, label=""];
5->7 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
14->11 [style = bold, label=""];
}
