digraph {
0 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "YIntervalSeries<String> s1 = new YIntervalSeries<>(\"Series\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "OHLCSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "YIntervalSeriesCollection<String> c2 = new YIntervalSeriesCollection<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "c1.addSeries(new YIntervalSeries<>(\"Empty Series\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "s2.add(1.0,1.1,1.2,1.3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "YIntervalSeriesCollection<String> c1 = new YIntervalSeriesCollection<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "YIntervalSeries<String> s2 = new YIntervalSeries<>(\"Series\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "c2.addSeries(new YIntervalSeries<>(\"Empty Series\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "c2.addSeries(s2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
13->9 [style = solid, label="s1"];
23->25 [style = bold, label=""];
4->5 [style = solid, label="c2"];
20->9 [style = bold, label=""];
25->13 [style = bold, label=""];
16->24 [style = bold, label=""];
6->11 [style = dashed, label="0"];
23->14 [style = solid, label="c2"];
18->17 [style = bold, label=""];
11->8 [style = solid, label="s1"];
1->21 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
15->16 [style = bold, label=""];
21->25 [style = solid, label="c1"];
17->19 [style = bold, label=""];
23->25 [style = solid, label="c2"];
23->18 [style = solid, label="c2"];
23->24 [style = solid, label="c2"];
1->11 [style = bold, label=""];
14->26 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
9->18 [style = bold, label=""];
4->9 [style = solid, label="c2"];
4->10 [style = solid, label="c2"];
0->1 [style = bold, label=""];
26->15 [style = bold, label=""];
23->15 [style = solid, label="c2"];
9->3 [style = bold, label=""];
1->4 [style = solid, label="c1"];
6->8 [style = solid, label="s1"];
1->9 [style = solid, label="c1"];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
22->14 [style = bold, label=""];
27->21 [style = bold, label=""];
21->23 [style = bold, label=""];
19->22 [style = bold, label=""];
11->7 [style = bold, label=""];
17->22 [style = solid, label="s2"];
13->20 [style = bold, label=""];
}
