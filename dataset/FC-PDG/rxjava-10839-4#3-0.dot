digraph {
9 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "nullOnNext['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Disposable d = Disposables.empty()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(so.isDisposed())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "to.dispose()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "dispose['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "to.assertFailureAndMessage(,ExceptionHelper.nullWarning(\"onNext called with a null value.\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "SafeObserver<Integer> so = new SafeObserver<Integer>(to)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "nullOnNext['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "to.assertFailureAndMessage(,\"onNext called with null. Null values are generally not allowed in 2.x operators and sources.\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "so.onNext(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "so.onSubscribe(d)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final SerializedObserver<Integer> so = new SerializedObserver<Integer>(to)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d.isDisposed())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
6->5 [style = solid, label="d"];
2->0 [style = solid, label="to"];
12->13 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
14->9 [style = bold, label=""];
5->11 [style = bold, label=""];
2->0 [style = bold, label=""];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
9->10 [style = solid, label="to"];
8->2 [style = bold, label=""];
2->9 [style = dashed, label="0"];
0->6 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
3->7 [style = dashed, label="0"];
0->10 [style = dashed, label="0"];
}
