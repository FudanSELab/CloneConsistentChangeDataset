digraph {
15 [style = filled, label = "expected.add(j)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "j++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Set<Integer> expected = new HashSet<Integer>(i)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Flowable.merge(sourceList,i - 1).subscribe(ts)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Set<Integer> expected = new HashSet<>(i)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "List<Observable<Integer>> sourceList = new ArrayList<Observable<Integer>>(i)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<Flowable<Integer>> sourceList = new ArrayList<>(i)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "j <= i@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(expected,actual)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Set<Integer> actual = new HashSet<Integer>(ts.values())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "simpleOneLessAsync['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sourceList.add(Flowable.just(j).subscribeOn(Schedulers.io()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < 50@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Set<Integer> actual = new HashSet<>(ts.values())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long t = System.currentTimeMillis()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "to.awaitDone(1,TimeUnit.SECONDS)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int j = 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ts.awaitDone(1,TimeUnit.SECONDS)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "to.assertNoErrors()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "sourceList.add(Observable.just(j).subscribeOn(Schedulers.io()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "simpleOneLessAsync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "int i = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Observable.merge(sourceList,i - 1).subscribe(to)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Set<Integer> actual = new HashSet<Integer>(to.values())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "simpleOneLessAsync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "System.currentTimeMillis() - t > TimeUnit.SECONDS.toMillis(9)@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ts.assertNoErrors()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Flowable<Integer>> sourceList = new ArrayList<Flowable<Integer>>(i)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->24 [style = dotted, label="true"];
8->10 [style = bold, label=""];
29->15 [style = bold, label=""];
13->28 [style = dotted, label="true"];
13->27 [style = dotted, label="true"];
5->20 [style = bold, label=""];
14->17 [style = solid, label="i"];
27->28 [style = bold, label=""];
13->20 [style = dotted, label="true"];
9->27 [style = dashed, label="0"];
13->5 [style = dotted, label="true"];
10->22 [style = dashed, label="0"];
30->6 [style = bold, label=""];
13->10 [style = dotted, label="true"];
10->3 [style = solid, label="ts"];
18->2 [style = solid, label="actual"];
5->28 [style = dashed, label="0"];
7->15 [style = solid, label="j"];
13->21 [style = dotted, label="true"];
18->20 [style = dashed, label="0"];
2->14 [style = bold, label=""];
24->17 [style = bold, label=""];
9->5 [style = bold, label=""];
28->25 [style = bold, label=""];
19->2 [style = solid, label="expected"];
13->4 [style = dotted, label="true"];
18->25 [style = dashed, label="0"];
13->9 [style = dotted, label="true"];
12->24 [style = solid, label="i"];
13->17 [style = dotted, label="true"];
7->1 [style = bold, label=""];
21->19 [style = bold, label=""];
13->3 [style = dotted, label="true"];
12->19 [style = solid, label="i"];
13->25 [style = dotted, label="true"];
10->31 [style = dashed, label="0"];
13->19 [style = dotted, label="true"];
16->17 [style = bold, label=""];
16->21 [style = dashed, label="0"];
25->2 [style = bold, label=""];
1->11 [style = bold, label=""];
8->22 [style = bold, label=""];
4->1 [style = solid, label="j"];
26->27 [style = bold, label=""];
13->22 [style = dotted, label="true"];
12->14 [style = solid, label="i"];
14->24 [style = solid, label="i"];
1->15 [style = dotted, label="true"];
4->15 [style = solid, label="j"];
14->21 [style = solid, label="i"];
4->7 [style = solid, label="j"];
13->16 [style = dotted, label="true"];
13->18 [style = dotted, label="true"];
7->1 [style = solid, label="j"];
3->26 [style = dashed, label="0"];
8->31 [style = bold, label=""];
13->26 [style = dotted, label="true"];
31->24 [style = bold, label=""];
1->3 [style = bold, label=""];
5->18 [style = bold, label=""];
14->16 [style = solid, label="i"];
3->9 [style = bold, label=""];
13->2 [style = dotted, label="true"];
12->13 [style = bold, label=""];
10->16 [style = bold, label=""];
13->8 [style = dotted, label="true"];
23->6 [style = bold, label=""];
12->1 [style = solid, label="i"];
4->1 [style = bold, label=""];
14->13 [style = bold, label=""];
1->29 [style = bold, label=""];
13->14 [style = dotted, label="true"];
17->4 [style = bold, label=""];
6->12 [style = bold, label=""];
14->13 [style = solid, label="i"];
17->2 [style = solid, label="expected"];
12->16 [style = solid, label="i"];
15->7 [style = bold, label=""];
0->6 [style = bold, label=""];
16->24 [style = dashed, label="0"];
31->26 [style = solid, label="to"];
1->11 [style = dotted, label="true"];
22->21 [style = bold, label=""];
11->29 [style = dashed, label="0"];
22->3 [style = solid, label="ts"];
18->2 [style = bold, label=""];
1->26 [style = bold, label=""];
11->15 [style = bold, label=""];
20->2 [style = bold, label=""];
1->7 [style = dotted, label="true"];
25->2 [style = solid, label="actual"];
6->8 [style = solid, label="t"];
1->29 [style = dotted, label="true"];
13->1 [style = dotted, label="true"];
13->31 [style = dotted, label="true"];
20->2 [style = solid, label="actual"];
12->17 [style = solid, label="i"];
14->19 [style = solid, label="i"];
12->13 [style = solid, label="i"];
14->1 [style = solid, label="i"];
12->21 [style = solid, label="i"];
19->4 [style = bold, label=""];
13->8 [style = bold, label=""];
17->19 [style = dashed, label="0"];
}
