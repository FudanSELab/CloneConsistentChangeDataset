digraph {
32 [style = filled, label = "String(( p2_2 = {\"ERROR\",\"SLAVE\",\"ERROR\"}@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Map<String,String> healthStatus = OBJECT_MAPPER.readValue(node,new TypeReference<Map<String,String>>(){})@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "String(( p2_1 = {\"MASTER\",\"SLAVE\",\"ERROR\"}@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Map<String,List<String>> partitionReplicaStates = new LinkedHashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(healthStatus.get(resourceNamePartiallyHealthy),\"PARTIAL_HEALTHY\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String resourceNameUnhealthy = clusterName + \"_db_2\"@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JsonNode node = OBJECT_MAPPER.readTree(body)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "String(( p0_1 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "idealStateParams.put(\"Replicas\",\"3\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String body = get(\"clusters/\" + clusterName + \"/resources/\" + resourceName + \"/health\",null,Response.Status.OK.getStatusCode(),true)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "partitionReplicaStates.put(\"p0\",Arrays.asList(p0))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "JsonNode node = OBJECT_MAPPER.readTree(body)@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(healthStatus.get(resourceNameHealthy),\"HEALTHY\")@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "String(( p2 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> idealStateParams = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "partitionReplicaStates.put(\"p2\",Arrays.asList(p2))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "stopClustersControllers()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "System.out.println(\"End test :\" + TestHelper.getTestMethodName())@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "partitionReplicaStates.put(\"p1\",Arrays.asList(p1))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String(( p0_2 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "createDummyMapping(clusterName,resourceNameUnhealthy,idealStateParams,partitionReplicaStates_2)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Map<String,List<String>> partitionReplicaStates_2 = new LinkedHashMap<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "String resourceNameHealthy = clusterName + \"_db_0\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "partitionReplicaStates_1.put(\"p1\",Arrays.asList(p1_1))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "partitionReplicaStates_2.put(\"p1\",Arrays.asList(p1_2))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "System.out.println(\"End test :\" + TestHelper.getTestMethodName())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String resourceNamePartiallyHealthy = clusterName + \"_db_1\"@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "createDummyMapping(clusterName,resourceName,idealStateParams,partitionReplicaStates)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String(( p1_1 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertEquals(healthStatus.get(resourceNameUnhealthy),\"UNHEALTHY\")@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String(( p1 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String clusterName = \"TestCluster_1\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testPartitionHealth['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "startClustersControllers()@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "String(( p1_2 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(healthStatus.get(\"p1\"),\"PARTIAL_HEALTHY\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "createDummyMapping(clusterName,resourceNamePartiallyHealthy,idealStateParams,partitionReplicaStates_1)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "idealStateParams.put(\"MinActiveReplicas\",\"2\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String body = get(\"clusters/\" + clusterName + \"/resources/health\",null,Response.Status.OK.getStatusCode(),true)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "partitionReplicaStates_2.put(\"p2\",Arrays.asList(p2_2))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testResourceHealth['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "createDummyMapping(clusterName,resourceNameHealthy,idealStateParams,partitionReplicaStates)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String resourceName = clusterName + \"_db_0\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "System.out.println(\"Start test :\" + TestHelper.getTestMethodName())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "partitionReplicaStates_1.put(\"p2\",Arrays.asList(p2_1))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "idealStateParams.put(\"StateModelDefRef\",\"MasterSlave\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(healthStatus.get(\"p0\"),\"HEALTHY\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String(( p0 = {\"MASTER\",\"SLAVE\",\"SLAVE\"}@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "partitionReplicaStates_1.put(\"p0\",Arrays.asList(p0_1))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "partitionReplicaStates_2.put(\"p0\",Arrays.asList(p0_2))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,String> healthStatus = OBJECT_MAPPER.readValue(node,new TypeReference<Map<String,String>>(){})@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "idealStateParams.put(\"NumPartitions\",\"3\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Map<String,List<String>> partitionReplicaStates_1 = new LinkedHashMap<>()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testPartitionHealth['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "idealStateParams.put(\"MaxPartitionsPerInstance\",\"3\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(healthStatus.get(\"p2\"),\"UNHEALTHY\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->20 [style = solid, label="clusterName"];
34->46 [style = bold, label=""];
38->40 [style = solid, label="partitionReplicaStates_2"];
13->51 [style = solid, label="clusterName"];
35->55 [style = solid, label="p1_2"];
1->45 [style = dashed, label="0"];
36->54 [style = solid, label="body"];
26->12 [style = bold, label=""];
5->0 [style = bold, label=""];
21->23 [style = solid, label="p1"];
51->17 [style = bold, label=""];
2->49 [style = dashed, label="0"];
29->44 [style = bold, label=""];
0->50 [style = solid, label="idealStateParams"];
20->15 [style = bold, label=""];
48->34 [style = bold, label=""];
55->37 [style = bold, label=""];
18->29 [style = dashed, label="0"];
7->11 [style = bold, label=""];
21->19 [style = bold, label=""];
46->39 [style = solid, label="p2_1"];
54->30 [style = solid, label="node"];
41->33 [style = solid, label="resourceNamePartiallyHealthy"];
14->22 [style = bold, label=""];
38->53 [style = bold, label=""];
2->18 [style = bold, label=""];
13->33 [style = solid, label="clusterName"];
53->35 [style = bold, label=""];
32->37 [style = solid, label="p2_2"];
13->41 [style = solid, label="clusterName"];
0->20 [style = solid, label="idealStateParams"];
52->48 [style = bold, label=""];
18->9 [style = bold, label=""];
13->5 [style = bold, label=""];
22->17 [style = bold, label=""];
17->50 [style = solid, label="partitionReplicaStates"];
32->42 [style = bold, label=""];
50->41 [style = bold, label=""];
4->23 [style = bold, label=""];
13->0 [style = bold, label=""];
31->29 [style = solid, label="resourceNameUnhealthy"];
46->43 [style = bold, label=""];
17->8 [style = bold, label=""];
41->49 [style = solid, label="resourceNamePartiallyHealthy"];
28->39 [style = bold, label=""];
16->24 [style = bold, label=""];
35->32 [style = bold, label=""];
5->20 [style = solid, label="resourceName"];
31->38 [style = bold, label=""];
3->12 [style = bold, label=""];
13->36 [style = solid, label="clusterName"];
53->42 [style = solid, label="p0_2"];
42->55 [style = bold, label=""];
13->50 [style = solid, label="clusterName"];
39->33 [style = bold, label=""];
8->4 [style = solid, label="p0"];
9->27 [style = bold, label=""];
6->20 [style = bold, label=""];
12->13 [style = bold, label=""];
22->51 [style = bold, label=""];
10->16 [style = bold, label=""];
40->36 [style = bold, label=""];
23->6 [style = bold, label=""];
13->5 [style = solid, label="clusterName"];
30->45 [style = bold, label=""];
1->2 [style = bold, label=""];
5->15 [style = solid, label="resourceName"];
49->29 [style = bold, label=""];
15->7 [style = solid, label="body"];
15->7 [style = bold, label=""];
11->1 [style = bold, label=""];
25->13 [style = bold, label=""];
45->49 [style = bold, label=""];
47->12 [style = bold, label=""];
13->40 [style = solid, label="clusterName"];
0->33 [style = solid, label="idealStateParams"];
52->33 [style = solid, label="partitionReplicaStates_1"];
34->28 [style = solid, label="p1_1"];
54->30 [style = bold, label=""];
0->40 [style = solid, label="idealStateParams"];
13->31 [style = solid, label="clusterName"];
51->45 [style = solid, label="resourceNameHealthy"];
43->28 [style = bold, label=""];
24->14 [style = bold, label=""];
41->52 [style = bold, label=""];
20->50 [style = dashed, label="0"];
0->10 [style = bold, label=""];
31->40 [style = solid, label="resourceNameUnhealthy"];
12->25 [style = bold, label=""];
6->50 [style = bold, label=""];
17->20 [style = solid, label="partitionReplicaStates"];
48->43 [style = solid, label="p0_1"];
8->21 [style = bold, label=""];
33->31 [style = bold, label=""];
19->4 [style = bold, label=""];
36->54 [style = bold, label=""];
13->15 [style = solid, label="clusterName"];
37->40 [style = bold, label=""];
19->6 [style = solid, label="p2"];
7->11 [style = solid, label="node"];
51->50 [style = solid, label="resourceNameHealthy"];
}
