digraph {
26 [style = filled, label = "Config config = getConfig(\"default\",Optional.empty(),Optional.empty(),Optional.empty())@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "returnDoc.content().value1().readBytes(returnedBytes)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String testContent = \"hello world\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "returnDoc.content().value1().readBytes(returnedBytes)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testTupleDocumentWrite['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "TupleDocument returnDoc = recordConverter.convertRecord(\"\",testRecord,null).iterator().next()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int returnedFlags = returnDoc.content().value2()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "dataRecord.put(\"flags\",0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Schema dataRecordSchema = SchemaBuilder.record(\"Data\").fields().name(\"data\").type().bytesType().noDefault().name(\"flags\").type().intType().noDefault().endRecord()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(returnedBytes,testContent.getBytes(Charset.forName(\"UTF-8\")))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "byte(( returnedBytes = new byte((((@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Converter<Schema,String,GenericRecord,TupleDocument> recordConverter = new AvroToCouchbaseTupleConverter()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{writer.close()}@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "GenericData.Record testRecord = new GenericData.Record(schema)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "GenericData.Record dataRecord = new GenericData.Record(dataRecordSchema)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(returnedBytes,testContent.getBytes(Charset.forName(\"UTF-8\")))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String testContent = \"hello world\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Schema schema = SchemaBuilder.record(\"TestRecord\").fields().name(\"key\").type().stringType().noDefault().name(\"data\").type(dataRecordSchema).noDefault().endRecord()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "TupleDocument returnDoc = writer.getBucket().get(\"hello\",)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Schema schema = SchemaBuilder.record(\"TestRecord\").fields().name(\"key\").type().stringType().noDefault().name(\"data\").type(dataRecordSchema).noDefault().endRecord()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "dataRecord.put(\"data\",ByteBuffer.wrap(testContent.getBytes(Charset.forName(\"UTF-8\"))))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testTupleDocumentWrite['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "GenericData.Record testRecord = new GenericData.Record(schema)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Config config = ConfigFactory.parseProperties(props)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "{writer.close()}@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(returnedFlags,0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testRecord.put(\"data\",dataRecord)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "props.setProperty(CouchbaseWriterConfigurationKeys.BUCKET,\"default\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(returnedFlags,0)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "CouchbaseWriter writer = new CouchbaseWriter(_couchbaseEnvironment,config)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "Schema dataRecordSchema = SchemaBuilder.record(\"Data\").fields().name(\"data\").type().bytesType().noDefault().name(\"flags\").type().intType().noDefault().endRecord()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testRecord.put(\"key\",\"hello\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testBasicConvert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int returnedFlags = returnDoc.content().value2()@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "byte(( returnedBytes = new byte((((@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int returnedFlags = returnDoc.content().value2()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->14 [style = solid, label="props"];
16->3 [style = bold, label=""];
33->35 [style = bold, label=""];
13->32 [style = bold, label=""];
1->8 [style = bold, label=""];
10->14 [style = bold, label=""];
2->3 [style = solid, label="dataRecord"];
0->17 [style = bold, label=""];
19->16 [style = solid, label="returnedBytes"];
36->31 [style = bold, label=""];
4->21 [style = bold, label=""];
33->30 [style = solid, label="dataRecordSchema"];
7->4 [style = bold, label=""];
29->34 [style = bold, label=""];
12->2 [style = solid, label="dataRecordSchema"];
15->19 [style = bold, label=""];
4->21 [style = solid, label="returnedBytes"];
22->7 [style = solid, label="returnedBytes"];
12->0 [style = bold, label=""];
21->23 [style = solid, label="returnedFlags"];
22->7 [style = bold, label=""];
11->2 [style = bold, label=""];
17->11 [style = bold, label=""];
5->25 [style = bold, label=""];
30->29 [style = bold, label=""];
20->22 [style = bold, label=""];
19->16 [style = bold, label=""];
13->32 [style = solid, label="returnedFlags"];
6->1 [style = bold, label=""];
24->26 [style = bold, label=""];
26->27 [style = bold, label=""];
25->12 [style = solid, label="schema"];
9->18 [style = bold, label=""];
0->17 [style = solid, label="schema"];
28->33 [style = bold, label=""];
18->10 [style = bold, label=""];
5->17 [style = solid, label="dataRecordSchema"];
5->12 [style = bold, label=""];
25->12 [style = bold, label=""];
35->36 [style = solid, label="schema"];
19->3 [style = solid, label="returnedBytes"];
20->15 [style = dashed, label="0"];
14->5 [style = solid, label="config"];
23->6 [style = bold, label=""];
34->17 [style = bold, label=""];
4->23 [style = solid, label="returnedBytes"];
2->15 [style = bold, label=""];
31->30 [style = bold, label=""];
6->1 [style = solid, label="returnedFlags"];
3->13 [style = bold, label=""];
23->1 [style = bold, label=""];
27->5 [style = bold, label=""];
35->36 [style = bold, label=""];
22->4 [style = solid, label="returnedBytes"];
21->23 [style = bold, label=""];
30->11 [style = solid, label="dataRecord"];
26->27 [style = solid, label="config"];
14->5 [style = bold, label=""];
13->20 [style = bold, label=""];
17->19 [style = solid, label="dataRecord"];
}
