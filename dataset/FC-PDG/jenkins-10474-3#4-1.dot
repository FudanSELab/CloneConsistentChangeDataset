digraph {
1 [style = filled, label = "assertEquals(1,p.triggers().size())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "vectorTriggers['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "AbstractProject<?,?> p = (AbstractProject)j.jenkins.createProjectFromXML(\"foo\",getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "AbstractProject<?,?> p = (AbstractProject<?,?>)j.jenkins.createProjectFromXML(\"foo\",getClass().getResourceAsStream(\"AbstractProjectTest/vectorTriggers.xml\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Trigger<?> t = p.triggers().get(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"*/10 * * * *\",t.getSpec())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "addTriggerDifferentType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(2,p.triggers().size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Trigger<?> t = p.triggers().get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TimerTrigger newTrigger = new TimerTrigger(\"20 * * * *\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(newTrigger,t)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "p.addTrigger(newTrigger)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "vectorTriggers['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(,t.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
12->13 [style = bold, label=""];
10->9 [style = bold, label=""];
7->1 [style = bold, label=""];
4->11 [style = dashed, label="0"];
3->12 [style = bold, label=""];
6->7 [style = bold, label=""];
3->1 [style = bold, label=""];
12->9 [style = solid, label="newTrigger"];
11->10 [style = bold, label=""];
13->11 [style = bold, label=""];
3->7 [style = dashed, label="0"];
12->13 [style = solid, label="newTrigger"];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
8->3 [style = bold, label=""];
10->9 [style = solid, label="t"];
}
