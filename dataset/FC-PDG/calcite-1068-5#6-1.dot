digraph {
5 [style = filled, label = "final Enumerable<String> enumerable1 = Linq4j.asEnumerable(null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final EqualityComparer<String> equalityComparer = new EqualityComparer<String>(){public boolean equal(String v1,String v2){return !Objects.equals(v1,v2)}public int hashCode(String s){return Objects.hashCode(s)}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertFalse(enumerable1.sequenceEqual(enumerable2.skip(1)))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertTrue(enumerable1.sequenceEqual(enumerable3,equalityComparer))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "NullPointerException ignored@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertFalse(enumerable1.sequenceEqual(enumerable2.skip(1)))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "NullPointerException ignored@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EnumerableDefaults.sequenceEqual(enumerable1,null)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{}@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EnumerableDefaults.sequenceEqual(enumerable1,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "NullPointerException ignored@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "EnumerableDefaults.sequenceEqual(null,enumerable2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fail()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertFalse(enumerable1.sequenceEqual(enumerable2,equalityComparer))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final Enumerable<String> enumerable2 = Linq4j.asEnumerable(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{}@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "{}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertFalse(enumerable1.skip(1).sequenceEqual(enumerable2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(enumerable1.sequenceEqual(Linq4j.asEnumerable(null)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fail()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "NullPointerException ignored@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(enumerable1.sequenceEqual(enumerable2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Enumerable<String> enumerable3 = Linq4j.asEnumerable(null)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "EnumerableDefaults.sequenceEqual(null,enumerable2)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fail()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSequenceEqualWithComparerWithoutCollection['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testSequenceEqualWithoutCollection['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{}@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testSequenceEqualWithoutCollection['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "fail()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "NullPointerException ignored@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31->14 [style = bold, label=""];
22->26 [style = bold, label=""];
5->10 [style = bold, label=""];
8->16 [style = bold, label=""];
27->18 [style = bold, label=""];
14->25 [style = bold, label=""];
10->7 [style = solid, label="enumerable2"];
12->5 [style = bold, label=""];
20->26 [style = bold, label=""];
29->31 [style = bold, label=""];
3->14 [style = bold, label=""];
30->23 [style = bold, label=""];
10->31 [style = solid, label="enumerable2"];
6->0 [style = bold, label=""];
30->29 [style = solid, label="equalityComparer"];
24->22 [style = bold, label=""];
10->7 [style = bold, label=""];
15->5 [style = bold, label=""];
1->9 [style = bold, label=""];
8->1 [style = bold, label=""];
19->5 [style = bold, label=""];
10->14 [style = solid, label="enumerable2"];
13->17 [style = bold, label=""];
25->20 [style = bold, label=""];
21->29 [style = bold, label=""];
10->26 [style = solid, label="enumerable2"];
13->3 [style = bold, label=""];
23->21 [style = bold, label=""];
16->1 [style = bold, label=""];
0->4 [style = bold, label=""];
17->14 [style = bold, label=""];
7->6 [style = bold, label=""];
9->14 [style = bold, label=""];
18->25 [style = bold, label=""];
5->25 [style = solid, label="enumerable1"];
4->1 [style = bold, label=""];
5->1 [style = solid, label="enumerable1"];
26->28 [style = bold, label=""];
10->0 [style = solid, label="enumerable2"];
30->23 [style = solid, label="equalityComparer"];
10->23 [style = solid, label="enumerable2"];
14->11 [style = bold, label=""];
10->30 [style = bold, label=""];
2->8 [style = bold, label=""];
21->29 [style = solid, label="enumerable3"];
}
