digraph {
21 [style = filled, label = "someProperties.setProperty(someKey,String.valueOf(someValue))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testGetIntPropertyMultipleTimesWithPropertyChanges['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Properties anotherProperties = new Properties()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithShortExpireTime())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "someProperties = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "anotherProperties.setProperty(someKey,String.valueOf(anotherValue))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Integer someDefaultValue = -1@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "defaultConfig.onRepositoryChange(someNamespace,anotherProperties)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Integer anotherValue = 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "defineComponent(,)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(50)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "someProperties = new Properties()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->13 [style = solid, label="someDefaultValue"];
16->15 [style = bold, label=""];
24->12 [style = bold, label=""];
14->7 [style = solid, label="someDefaultValue"];
19->22 [style = solid, label="anotherValue"];
5->6 [style = solid, label="someValue"];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
5->13 [style = solid, label="someValue"];
5->21 [style = solid, label="someValue"];
23->15 [style = bold, label=""];
15->22 [style = solid, label="someKey"];
15->1 [style = solid, label="someKey"];
11->22 [style = dashed, label="0"];
5->8 [style = solid, label="someValue"];
8->18 [style = solid, label="anotherProperties"];
14->17 [style = bold, label=""];
5->1 [style = solid, label="someValue"];
21->24 [style = bold, label=""];
5->14 [style = bold, label=""];
5->10 [style = solid, label="someValue"];
4->21 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
2->4 [style = bold, label=""];
14->10 [style = solid, label="someDefaultValue"];
15->5 [style = bold, label=""];
1->11 [style = bold, label=""];
8->22 [style = bold, label=""];
14->8 [style = solid, label="someDefaultValue"];
15->0 [style = solid, label="someKey"];
20->21 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
5->19 [style = bold, label=""];
22->18 [style = bold, label=""];
4->12 [style = solid, label="someProperties"];
15->8 [style = solid, label="someKey"];
19->14 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
14->1 [style = solid, label="someDefaultValue"];
9->15 [style = bold, label=""];
10->0 [style = bold, label=""];
15->11 [style = solid, label="someKey"];
18->25 [style = bold, label=""];
7->25 [style = dashed, label="0"];
19->25 [style = solid, label="anotherValue"];
14->2 [style = bold, label=""];
15->10 [style = solid, label="someKey"];
15->25 [style = solid, label="someKey"];
5->7 [style = solid, label="someValue"];
14->25 [style = solid, label="someDefaultValue"];
13->8 [style = bold, label=""];
15->13 [style = solid, label="someKey"];
15->21 [style = solid, label="someKey"];
17->4 [style = bold, label=""];
15->7 [style = solid, label="someKey"];
14->20 [style = bold, label=""];
20->24 [style = solid, label="someProperties"];
6->12 [style = bold, label=""];
}
