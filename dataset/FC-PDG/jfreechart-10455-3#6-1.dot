digraph {
10 [style = filled, label = "CustomXYURLGenerator g1 = new CustomXYURLGenerator()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "u1.add(\"URL A3\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "u2.add(\"URL A2\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(g1.equals(g2))@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "CustomCategoryURLGenerator g1 = new CustomCategoryURLGenerator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(g1.equals(g2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CustomCategoryURLGenerator g2 = new CustomCategoryURLGenerator()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "u2.add(\"URL A3\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "u1.add(\"URL A1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(g1.equals(g2))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List u2 = new java.util.ArrayList()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CustomXYURLGenerator g2 = new CustomXYURLGenerator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<String> u1 = new ArrayList<>()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List u1 = new java.util.ArrayList()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "g1.addURLSeries(u1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "u2.add(\"URL A1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<String> u2 = new ArrayList<>()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "g2.addURLSeries(u2)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "u1.add(\"URL A2\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
0->16 [style = bold, label=""];
15->10 [style = bold, label=""];
16->13 [style = bold, label=""];
4->17 [style = dashed, label="0"];
21->7 [style = solid, label="g2"];
2->6 [style = bold, label=""];
10->19 [style = dashed, label="0"];
17->9 [style = bold, label=""];
12->17 [style = bold, label=""];
17->6 [style = solid, label="u1"];
3->5 [style = solid, label="u2"];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
11->12 [style = solid, label="g2"];
21->12 [style = bold, label=""];
8->1 [style = bold, label=""];
18->10 [style = bold, label=""];
12->4 [style = bold, label=""];
21->12 [style = solid, label="g2"];
11->7 [style = solid, label="g2"];
9->14 [style = bold, label=""];
3->13 [style = bold, label=""];
5->7 [style = bold, label=""];
16->5 [style = solid, label="u2"];
4->6 [style = solid, label="u1"];
14->2 [style = bold, label=""];
13->8 [style = bold, label=""];
11->0 [style = solid, label="g2"];
20->19 [style = bold, label=""];
11->21 [style = dashed, label="0"];
21->0 [style = solid, label="g2"];
3->16 [style = dashed, label="0"];
10->11 [style = bold, label=""];
19->21 [style = bold, label=""];
}
