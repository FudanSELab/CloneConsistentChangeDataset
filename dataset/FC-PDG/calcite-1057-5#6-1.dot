digraph {
8 [style = filled, label = "Predicate2<Department,Integer> function2 = Functions.falsePredicate2()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testTakeWhileN['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTakeWhileNNoMatch['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testTakeWhileN['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final Queryable<Department> queryableDepts = Linq4j.asEnumerable(depts).asQueryable()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,deptList.size())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final List<Department> deptList = QueryableDefaults.takeWhileN(queryableDepts,Expressions.lambda(function2)).toList()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(2,deptList.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final List<Department> deptList = QueryableDefaults.takeWhileN(queryableDepts,Expressions.lambda(function2)).toList()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Predicate2<Department,Integer> function2 = new Predicate2<Department,Integer>(){public boolean apply(Department v1,Integer v2){assertEquals(index++,(int)v2,\"Invalid index passed to function\")return v2 < 2}}@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(depts(1(,deptList.get(1))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(depts(0(,deptList.get(0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->10 [style = dashed, label="0"];
6->0 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
9->10 [style = bold, label=""];
2->4 [style = bold, label=""];
4->5 [style = bold, label=""];
0->1 [style = bold, label=""];
7->2 [style = bold, label=""];
11->2 [style = bold, label=""];
2->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
8->9 [style = bold, label=""];
}
