digraph {
55 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),(long)Math.ceil(summarySpace * 1.5))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int numRows = 256@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int numSSTables = 1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),(long)Math.ceil(summarySpace / 2.0))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "SSTableReader sstable = cfs.getSSTables().iterator().next()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() / 2)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testChangeMaxIndexInterval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "int previousSize = sstable.getIndexSummarySize()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long summarySpace = sstable.getIndexSummaryOffHeapSize()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),1)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(previousSize * 1.5,(double)sstable.getIndexSummarySize(),1)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createSSTables(ksname,cfname,numSSTables,numRows)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(originalMinIndexInterval,sstable.getEffectiveIndexInterval(),0.001)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Keyspace keyspace = Keyspace.open(ksname)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),summarySpace)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "double previousInterval = sstable.getEffectiveIndexInterval()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(cfs.metadata.getMaxIndexInterval(),sstable.getEffectiveIndexInterval(),0.01)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(previousInterval * (1.0 / 1.5),sstable.getEffectiveIndexInterval(),0.001)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "cfs.metadata.maxIndexInterval(originalMinIndexInterval * 4)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(numRows / originalMinIndexInterval,sstable.getIndexSummarySize())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(cfname)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testChangeMaxIndexInterval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,sstables,1)@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval * 4)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String cfname = CF_STANDARDLOWiINTERVAL@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "sstable = cfs.getSSTables().iterator().next()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() * 2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testChangeMinIndexInterval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "IndexSummaryManager.instance.redistributeSummaries()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(originalMinIndexInterval * 2,sstable.getEffectiveIndexInterval(),0.001)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "cfs.metadata.minIndexInterval(originalMinIndexInterval / 2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<SSTableReader> sstables = new ArrayList<>(cfs.getSSTables())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "sstables = new ArrayList<>(cfs.getSSTables())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMinIndexInterval(),sstable.getIndexSummarySize())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(numRows / (originalMinIndexInterval * 2),sstable.getIndexSummarySize())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "sstable.overrideReadMeter(new RestorableMeter(100.0,100.0))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "redistributeSummaries(Collections.EMPTY_LIST,of(cfs.metadata.cfId,txn),10)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(cfs.metadata.getMinIndexInterval(),sstable.getEffectiveIndexInterval(),0.001)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "cfs.metadata.maxIndexInterval(cfs.metadata.getMaxIndexInterval() * 2)@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String ksname = KEYSPACE1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "IndexSummaryManager.redistributeSummaries(Collections.EMPTY_LIST,Arrays.asList(sstable),10)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(numRows / cfs.metadata.getMaxIndexInterval(),sstable.getIndexSummarySize())@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14->39 [style = dashed, label="0"];
28->16 [style = bold, label=""];
4->26 [style = bold, label=""];
20->0 [style = solid, label="ksname"];
43->46 [style = bold, label=""];
33->62 [style = bold, label=""];
54->58 [style = bold, label=""];
13->6 [style = bold, label=""];
42->60 [style = bold, label=""];
34->49 [style = bold, label=""];
21->15 [style = solid, label="numRows"];
53->33 [style = bold, label=""];
50->53 [style = bold, label=""];
17->12 [style = solid, label="cfname"];
21->1 [style = solid, label="numRows"];
61->48 [style = solid, label="sstable"];
20->17 [style = bold, label=""];
10->15 [style = bold, label=""];
41->34 [style = bold, label=""];
7->19 [style = bold, label=""];
8->20 [style = bold, label=""];
21->40 [style = solid, label="numRows"];
52->59 [style = bold, label=""];
10->37 [style = dashed, label="0"];
30->43 [style = solid, label="summarySpace"];
21->53 [style = solid, label="numRows"];
36->61 [style = bold, label=""];
30->48 [style = bold, label=""];
57->52 [style = bold, label=""];
19->5 [style = bold, label=""];
55->56 [style = bold, label=""];
27->28 [style = bold, label=""];
9->27 [style = bold, label=""];
15->23 [style = bold, label=""];
59->43 [style = bold, label=""];
62->38 [style = bold, label=""];
9->16 [style = solid, label="sstables"];
46->38 [style = solid, label="sstable"];
37->40 [style = bold, label=""];
0->12 [style = bold, label=""];
15->40 [style = dashed, label="0"];
31->57 [style = solid, label="previousSize"];
51->31 [style = bold, label=""];
2->1 [style = solid, label="numSSTables"];
41->55 [style = solid, label="sstable"];
21->42 [style = solid, label="numRows"];
60->42 [style = bold, label=""];
2->21 [style = bold, label=""];
35->20 [style = bold, label=""];
58->60 [style = bold, label=""];
56->43 [style = solid, label="sstable"];
23->25 [style = bold, label=""];
16->45 [style = dashed, label="0"];
14->16 [style = bold, label=""];
24->20 [style = bold, label=""];
12->2 [style = bold, label=""];
22->16 [style = bold, label=""];
21->22 [style = solid, label="numRows"];
21->29 [style = solid, label="numRows"];
16->22 [style = bold, label=""];
31->55 [style = bold, label=""];
16->10 [style = bold, label=""];
61->30 [style = bold, label=""];
29->25 [style = bold, label=""];
30->55 [style = solid, label="summarySpace"];
39->45 [style = bold, label=""];
9->6 [style = bold, label=""];
21->1 [style = bold, label=""];
15->10 [style = bold, label=""];
3->4 [style = bold, label=""];
17->0 [style = bold, label=""];
30->48 [style = solid, label="summarySpace"];
4->18 [style = bold, label=""];
18->7 [style = bold, label=""];
42->39 [style = bold, label=""];
38->32 [style = bold, label=""];
25->29 [style = bold, label=""];
40->36 [style = bold, label=""];
49->51 [style = bold, label=""];
21->49 [style = solid, label="numRows"];
21->13 [style = solid, label="numRows"];
17->1 [style = solid, label="cfname"];
3->18 [style = solid, label="sstables"];
11->9 [style = bold, label=""];
6->13 [style = bold, label=""];
22->15 [style = bold, label=""];
7->11 [style = solid, label="sstables"];
48->41 [style = bold, label=""];
56->57 [style = bold, label=""];
51->52 [style = solid, label="previousInterval"];
1->3 [style = bold, label=""];
46->50 [style = bold, label=""];
26->5 [style = bold, label=""];
5->11 [style = bold, label=""];
40->37 [style = bold, label=""];
20->1 [style = solid, label="ksname"];
44->54 [style = bold, label=""];
45->37 [style = bold, label=""];
32->47 [style = bold, label=""];
13->14 [style = bold, label=""];
4->44 [style = bold, label=""];
}
