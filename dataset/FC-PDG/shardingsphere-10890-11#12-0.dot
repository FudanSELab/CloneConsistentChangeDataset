digraph {
2 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(null))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(metaDataMap,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertNull(ProxyContext.getInstance().getMetaData(null))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertNull(ProxyContext.getInstance().getMetaData(\"\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Map<String,ShardingSphereSchema> schemas = createSchemas()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertGetSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Map<String,ShardingSphereSchema> schemas = mockSchemas(Collections.emptyMap())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Field schemaContexts = ProxyContext.getInstance().getClass().getDeclaredField(\"schemaContexts\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertNull(ProxyContext.getInstance().getMetaData(\"schema1\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(new LinkedHashSet<>(ProxyContext.getInstance().getAllSchemaNames()),is(schemas.keySet()))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "schemaContexts.setAccessible(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(schemas.get(\"schema\"),is(ProxyContext.getInstance().getSchema(\"schema\")))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "schemaContexts.set(ProxyContext.getInstance(),new StandardSchemaContexts(schemas,mock(),new Authentication(),new ConfigurationProperties(new Properties()),new MySQLDatabaseType()))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNull(ProxyContext.getInstance().getSchema(\"schema1\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Map<String,ShardingSphereMetaData> metaDataMap = mockMetaDataMap(Collections.emptyMap())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertGetAllSchemaNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(metaDataMap.get(\"schema\"),is(ProxyContext.getInstance().getMetaData(\"schema\")))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertGetSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->7 [style = solid, label="schemas"];
4->14 [style = bold, label=""];
8->10 [style = dashed, label="0"];
10->15 [style = bold, label=""];
3->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
18->17 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
11->14 [style = solid, label="metaDataMap"];
6->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
1->17 [style = dashed, label="0"];
17->0 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
0->4 [style = bold, label=""];
2->9 [style = dashed, label="0"];
7->2 [style = bold, label=""];
1->11 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
17->7 [style = solid, label="schemas"];
7->16 [style = bold, label=""];
14->9 [style = bold, label=""];
15->12 [style = bold, label=""];
5->15 [style = dashed, label="0"];
2->8 [style = bold, label=""];
}
