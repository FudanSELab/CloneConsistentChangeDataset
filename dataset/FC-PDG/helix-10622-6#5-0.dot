digraph {
11 [style = filled, label = "verifyP2PMessage(DB_NAME_2,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "enableP2PInResource(CLUSTER_NAME,_configAccessor,DB_NAME_2,false)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "enableP2PInResource(DB_NAME_2,false)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "_gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME,prevMasterInstance,true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String prevMasterInstance = _instances.get(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testP2PStateTransitionEnabledInResource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testP2PStateTransitionEnabledInResource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "enableP2PInCluster(false)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "enableP2PInCluster(CLUSTER_NAME,_configAccessor,false)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "verifyP2PMessage(DB_NAME_1,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),prevMasterInstance)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verifyP2PMessage(DB_NAME_1,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "verifyP2PMessage(DB_NAME_1,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_instances.get(1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verifyP2PMessage(DB_NAME_1,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testP2PStateTransitionDisabled['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verifyP2PMessage(DB_NAME_2,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "enableP2PInResource(DB_NAME_1,true)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verifyP2PMessage(DB_NAME_2,prevMasterInstance,MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName(),1)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "enableP2PInResource(CLUSTER_NAME,_configAccessor,DB_NAME_1,true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "_gSetupTool.getClusterManagementTool().enableInstance(CLUSTER_NAME,prevMasterInstance,false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verifyP2PMessage(DB_NAME_2,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "verifyP2PMessage(DB_NAME_2,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName(),1)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "verifyP2PMessage(DB_NAME_2,_instances.get(1),MasterSlaveSMD.States.MASTER.name(),_controller.getInstanceName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->10 [style = bold, label=""];
4->1 [style = dashed, label="0"];
12->20 [style = dashed, label="0"];
4->17 [style = bold, label=""];
2->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
20->0 [style = bold, label=""];
12->11 [style = bold, label=""];
22->21 [style = bold, label=""];
1->13 [style = solid, label="prevMasterInstance"];
1->0 [style = solid, label="prevMasterInstance"];
6->24 [style = bold, label=""];
3->12 [style = bold, label=""];
1->11 [style = solid, label="prevMasterInstance"];
21->0 [style = solid, label="prevMasterInstance"];
9->8 [style = bold, label=""];
15->18 [style = bold, label=""];
10->2 [style = dashed, label="0"];
1->4 [style = solid, label="prevMasterInstance"];
24->20 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
19->1 [style = bold, label=""];
1->12 [style = solid, label="prevMasterInstance"];
11->13 [style = dashed, label="0"];
17->0 [style = bold, label=""];
1->2 [style = solid, label="prevMasterInstance"];
21->20 [style = solid, label="prevMasterInstance"];
18->1 [style = bold, label=""];
21->6 [style = solid, label="prevMasterInstance"];
23->19 [style = bold, label=""];
10->0 [style = bold, label=""];
10->17 [style = dashed, label="0"];
5->7 [style = bold, label=""];
16->14 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
21->23 [style = solid, label="prevMasterInstance"];
9->15 [style = dashed, label="0"];
21->23 [style = bold, label=""];
}
