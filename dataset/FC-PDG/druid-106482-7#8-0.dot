digraph {
18 [style = filled, label = "extractionMap.put(\"health\",\"health0\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "GroupByQuery query = makeQueryBuilder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"quality\",\"\",lookupExtractionFn,null)).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<Row> expectedResults@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "LookupExtractionFn lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Iterable<ResultRow> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "extractionMap.put(\"premium\",\"premium0\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "extractionMap.put(\"technology\",\"technology0\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "GroupByQuery query = makeQueryBuilder().setDataSource(QueryRunnerTestHelper.dataSource).setQuerySegmentSpec(QueryRunnerTestHelper.firstToThird).setDimensions(new DefaultDimensionSpec(\"quality\",\"alias\")).setAggregatorSpecs(QueryRunnerTestHelper.rowsCount,new LongSumAggregatorFactory(\"idx\",\"index\")).setGranularity(QueryRunnerTestHelper.dayGran).setDimFilter(new ExtractionDimFilter(\"quality\",\"newsANDmezzanine\",lookupExtractionFn,null)).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "NullHandling.replaceWithDefault()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "extractionMap.put(\"automotive\",\"automotive0\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"dim-extraction\")@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testGroupByWithExtractionDimFilterOptimazitionManyToOne['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "LookupExtractionFn lookupExtractionFn = new LookupExtractionFn(mapLookupExtractor,false,null,true,false)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Iterable<Row> results = GroupByQueryRunnerTestHelper.runQuery(factory,runner,query)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expectedResults = Arrays.asList(makeRow(query,\"2011-04-01\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2870L),makeRow(query,\"2011-04-01\",\"alias\",\"news\",\"rows\",1L,\"idx\",121L),makeRow(query,\"2011-04-02\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2447L),makeRow(query,\"2011-04-02\",\"alias\",\"news\",\"rows\",1L,\"idx\",114L))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "expectedResults = Arrays.asList(makeRow(query,\"2011-04-01\",\"alias\",\"news\",\"rows\",1L,\"idx\",121L),makeRow(query,\"2011-04-02\",\"alias\",\"news\",\"rows\",1L,\"idx\",114L))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testGroupByWithExtractionDimFilterCaseMappingValueIsNullOrEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "extractionMap.put(\"mezzanine\",\"newsANDmezzanine\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,String> extractionMap = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TestHelper.assertExpectedObjects(expectedResults,results,\"extraction-dim-filter\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "extractionMap.put(\"entertainment\",\"entertainment0\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<ResultRow> expectedResults@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "MapLookupExtractor mapLookupExtractor = new MapLookupExtractor(extractionMap,false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "extractionMap.put(\"business\",\"business0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "extractionMap.put(\"mezzanine\",null)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "extractionMap.put(\"news\",\"newsANDmezzanine\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"news\",\"rows\",1L,\"idx\",121L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"news\",\"rows\",1L,\"idx\",114L))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "testGroupByWithExtractionDimFilterCaseMappingValueIsNullOrEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<Row> expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2870L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"news\",\"rows\",1L,\"idx\",121L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2447L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"news\",\"rows\",1L,\"idx\",114L))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "extractionMap.put(\"news\",\"\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "extractionMap.put(\"travel\",\"travel0\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MapLookupExtractor mapLookupExtractor = new MapLookupExtractor(extractionMap,false)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expectedResults = Arrays.asList(GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2870L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-01\",\"alias\",\"news\",\"rows\",1L,\"idx\",121L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"mezzanine\",\"rows\",3L,\"idx\",2447L),GroupByQueryRunnerTestHelper.createExpectedRow(\"2011-04-02\",\"alias\",\"news\",\"rows\",1L,\"idx\",114L))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33->27 [style = solid, label="expectedResults"];
9->20 [style = dashed, label="0"];
5->20 [style = solid, label="query"];
16->0 [style = bold, label=""];
3->7 [style = dotted, label="true"];
3->9 [style = dotted, label="false"];
10->15 [style = bold, label=""];
3->24 [style = bold, label=""];
2->8 [style = solid, label="extractionMap"];
7->10 [style = bold, label=""];
31->32 [style = bold, label=""];
12->32 [style = dashed, label="0"];
2->26 [style = solid, label="extractionMap"];
23->15 [style = bold, label=""];
24->15 [style = solid, label="expectedResults"];
4->30 [style = dashed, label="0"];
5->10 [style = solid, label="query"];
14->17 [style = bold, label=""];
11->12 [style = bold, label=""];
23->15 [style = solid, label="results"];
9->10 [style = bold, label=""];
9->15 [style = solid, label="expectedResults"];
32->26 [style = bold, label=""];
7->15 [style = solid, label="expectedResults"];
2->31 [style = bold, label=""];
3->24 [style = dotted, label="true"];
21->2 [style = bold, label=""];
26->30 [style = bold, label=""];
10->15 [style = solid, label="results"];
6->14 [style = bold, label=""];
3->9 [style = bold, label=""];
5->19 [style = bold, label=""];
12->13 [style = bold, label=""];
22->3 [style = bold, label=""];
25->27 [style = bold, label=""];
3->20 [style = dotted, label="false"];
3->20 [style = bold, label=""];
29->2 [style = bold, label=""];
30->28 [style = bold, label=""];
5->28 [style = dashed, label="0"];
20->23 [style = bold, label=""];
28->33 [style = bold, label=""];
5->23 [style = solid, label="query"];
3->7 [style = bold, label=""];
18->6 [style = bold, label=""];
33->25 [style = bold, label=""];
11->31 [style = dashed, label="0"];
8->4 [style = solid, label="mapLookupExtractor"];
0->8 [style = bold, label=""];
25->27 [style = solid, label="results"];
5->24 [style = solid, label="query"];
1->2 [style = bold, label=""];
15->27 [style = dashed, label="0"];
8->4 [style = bold, label=""];
28->25 [style = solid, label="query"];
10->23 [style = dashed, label="0"];
19->33 [style = dashed, label="0"];
5->22 [style = bold, label=""];
4->5 [style = bold, label=""];
19->3 [style = bold, label=""];
2->11 [style = bold, label=""];
26->30 [style = solid, label="mapLookupExtractor"];
17->16 [style = bold, label=""];
13->18 [style = bold, label=""];
19->22 [style = dashed, label="0"];
20->15 [style = solid, label="expectedResults"];
24->23 [style = bold, label=""];
}
