digraph {
0 [style = filled, label = "CacheObserverHolder.setInstance(new CacheObserverAdapter(){@Override public void goingToFlush(){if (!alreadyComeHere) {region.put(\"Key\",\"Value2\")}alreadyComeHere = true}})@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "((LocalRegion)region).getDiskRegion().pauseFlusherForTesting()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "logWriter.error(\"Exception occurred\",e)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "putBeforeFlush['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Exception e@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "putAfterFlush['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final Region region@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"Value2\",region.get(\"Key\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "alreadyComeHere = false@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"Value2\",getValueOnDisk(region))@@@41@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "region.put(\"Key\",\"Value1\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final Region region@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "((LocalRegion)region).getDiskRegion().flushForTesting()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"Value2\",getValueOnDisk(region))@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "putAfterFlush['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "region.put(\"Key\",\"Value1\")@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "fail(\"Entry not found although was supposed to be there\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"Value2\",region.get(\"Key\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "logWriter.error(\"Exception occurred\",e)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17->18 [style = dotted, label="true"];
4->6 [style = bold, label=""];
9->4 [style = bold, label=""];
2->11 [style = bold, label=""];
4->7 [style = dotted, label="true"];
11->0 [style = bold, label=""];
7->12 [style = dotted, label="true"];
2->5 [style = dotted, label="true"];
10->8 [style = bold, label=""];
12->1 [style = bold, label=""];
5->1 [style = solid, label="region"];
14->12 [style = bold, label=""];
0->3 [style = bold, label=""];
5->18 [style = dashed, label="0"];
3->13 [style = bold, label=""];
4->1 [style = bold, label=""];
8->3 [style = bold, label=""];
7->14 [style = bold, label=""];
0->10 [style = bold, label=""];
5->15 [style = solid, label="region"];
7->12 [style = bold, label=""];
7->14 [style = dotted, label="true"];
3->9 [style = bold, label=""];
1->15 [style = bold, label=""];
17->11 [style = bold, label=""];
13->9 [style = bold, label=""];
18->1 [style = solid, label="region"];
6->7 [style = bold, label=""];
16->5 [style = dotted, label="true"];
4->6 [style = dotted, label="true"];
16->11 [style = bold, label=""];
9->1 [style = bold, label=""];
9->12 [style = bold, label=""];
}
