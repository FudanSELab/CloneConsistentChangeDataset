digraph {
11 [style = filled, label = "testDeprecationWarningEmittedForTotalWildcard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> result = TransportGetAliasesAction.postProcess(request,concreteIndices,aliases,state,SystemIndexAccessLevel.NONE,null,EmptySystemIndices.INSTANCE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(result.get(\"c\").size(),equalTo(1))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(result.get(\".b\").size(),equalTo(1))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(result.size(),equalTo(3))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> result = TransportGetAliasesAction.postProcess(request,concreteIndices,aliases,state,SystemIndexAccessLevel.ALL,\"\",EmptySystemIndices.INSTANCE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(state.metadata().findAliases(request,concreteIndices),aliases)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testDeprecationWarningNotEmittedWhenSystemAccessAllowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(result.get(\".b\").size(),equalTo(1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(result.get(\"a\").size(),equalTo(0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ClusterState state = systemIndexTestClusterState()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(result.size(),equalTo(1))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testDeprecationWarningNotEmittedWhenSystemAccessAllowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> aliases = ImmutableOpenMap.builder().fPut(\".b\",Collections.singletonList(new AliasMetadata.Builder(\".y\").build())).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> aliases = ImmutableOpenMap.builder().fPut(\".b\",Collections.singletonList(new AliasMetadata.Builder(\".y\").build())).fPut(\"c\",Collections.singletonList(new AliasMetadata.Builder(\"d\").build())).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "GetAliasesRequest request = new GetAliasesRequest()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertWarnings(\"this request accesses system indices: (.b(, but in a future major version, direct access to system \" + \"indices will be prevented by default\")@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "GetAliasesRequest request = new GetAliasesRequest(\".y\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String(( concreteIndices = {\"a\",\".b\",\"c\"}@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ImmutableOpenMap<String,List<AliasMetadata>> result = TransportGetAliasesAction.postProcess(request,concreteIndices,aliases,state,SystemIndexAccessLevel.ALL,new ThreadContext(Settings.EMPTY),EmptySystemIndices.INSTANCE)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
19->18 [style = bold, label=""];
15->0 [style = solid, label="aliases"];
3->1 [style = bold, label=""];
2->0 [style = solid, label="request"];
2->9 [style = solid, label="request"];
15->14 [style = solid, label="aliases"];
8->15 [style = dashed, label="0"];
12->17 [style = bold, label=""];
6->9 [style = solid, label="concreteIndices"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
15->6 [style = bold, label=""];
16->19 [style = bold, label=""];
8->0 [style = solid, label="aliases"];
4->9 [style = dashed, label="0"];
11->5 [style = bold, label=""];
5->2 [style = bold, label=""];
7->5 [style = bold, label=""];
0->14 [style = bold, label=""];
6->14 [style = solid, label="concreteIndices"];
10->5 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->4 [style = solid, label="state"];
0->4 [style = bold, label=""];
2->13 [style = dashed, label="0"];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
8->9 [style = solid, label="aliases"];
9->3 [style = bold, label=""];
5->9 [style = solid, label="state"];
8->4 [style = solid, label="aliases"];
6->4 [style = solid, label="concreteIndices"];
4->14 [style = dashed, label="0"];
13->15 [style = bold, label=""];
6->0 [style = solid, label="concreteIndices"];
2->4 [style = solid, label="request"];
13->0 [style = solid, label="request"];
17->16 [style = bold, label=""];
2->8 [style = bold, label=""];
13->14 [style = solid, label="request"];
5->14 [style = solid, label="state"];
}
