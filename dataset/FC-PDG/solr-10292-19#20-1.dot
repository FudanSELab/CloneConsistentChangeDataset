digraph {
13 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"overfetch\",Integer.toString(-1)))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expression.addParameter(metric.toExpression(factory))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expression.addParameter(collection)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sb.append(mapping.getKey())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(-1)))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (FieldComparator sort : bucketSorts){if (0 != builder.length()) {builder.append(\",\")}builder.append(sort.toExpression(factory))}expression.addParameter(new StreamExpressionNamedParameter(\"bucketSorts\",builder.toString()))}@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "overfetch == Integer.MAX_VALUE@@@54@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"rows\",Integer.toString(-1)))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"offset\",Integer.toString(offset)))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "fieldMappings.entrySet()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "sb.append(\"=\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "StreamExpression expression = new StreamExpression(\"search\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "sb.append(mapping.getValue())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Entry<String,String> mapping@@@13@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"bucketSizeLimit\",Integer.toString(bucketSizeLimit)))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"rows\",Integer.toString(rows)))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expression.addParameter(\"\"\" + collection + \"\"\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "return expression@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"aliases\",sb.toString()))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "bucketSizeLimit == Integer.MAX_VALUE@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "collection.indexOf(',') > -1@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "sb.length() > 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "sb.append(\",\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(param.getKey(),val.replace(\"\"\",\"\\\"\")))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "null != fieldMappings && 0 != fieldMappings.size()@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "serializeBucketSizeLimit@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return expression@@@65@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"zkHost\",zkHost))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"overfetch\",Integer.toString(overfetch)))@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"method\",this.method))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "method != null@@@61@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "{StringBuilder builder = new StringBuilder()for (Bucket bucket : buckets){if (0 != builder.length()) {builder.append(\",\")}builder.append(bucket.toString())}expression.addParameter(new StreamExpressionNamedParameter(\"buckets\",builder.toString()))}@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rows == Integer.MAX_VALUE@@@47@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
8->34 [style = bold, label=""];
15->10 [style = bold, label=""];
35->27 [style = bold, label=""];
4->17 [style = bold, label=""];
3->24 [style = bold, label=""];
11->14 [style = bold, label=""];
9->2 [style = bold, label=""];
14->0 [style = dotted, label="true"];
21->18 [style = dotted, label="true"];
29->27 [style = dotted, label="true"];
3->36 [style = dashed, label="0"];
28->31 [style = bold, label=""];
29->31 [style = bold, label=""];
25->3 [style = bold, label=""];
11->14 [style = dotted, label="true"];
9->2 [style = dotted, label="false"];
23->4 [style = bold, label=""];
41->38 [style = dotted, label="true"];
5->12 [style = dotted, label="true"];
18->22 [style = solid, label="factory"];
29->37 [style = dotted, label="true"];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
5->1 [style = dotted, label="false"];
10->7 [style = bold, label=""];
34->30 [style = bold, label=""];
17->19 [style = bold, label=""];
30->29 [style = bold, label=""];
32->26 [style = bold, label=""];
39->26 [style = bold, label=""];
39->28 [style = bold, label=""];
3->20 [style = solid, label="expression"];
25->18 [style = dotted, label="true"];
29->39 [style = dotted, label="true"];
18->38 [style = dashed, label="0"];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
26->27 [style = bold, label=""];
0->10 [style = bold, label=""];
27->37 [style = bold, label=""];
1->6 [style = bold, label=""];
41->36 [style = bold, label=""];
24->23 [style = dotted, label="true"];
18->19 [style = solid, label="factory"];
14->0 [style = bold, label=""];
5->12 [style = bold, label=""];
10->16 [style = bold, label=""];
29->28 [style = dotted, label="true"];
3->8 [style = bold, label=""];
29->32 [style = bold, label=""];
11->9 [style = dotted, label="false"];
11->6 [style = dotted, label="false"];
7->16 [style = bold, label=""];
26->35 [style = bold, label=""];
9->13 [style = dotted, label="true"];
29->40 [style = dotted, label="true"];
29->26 [style = dotted, label="true"];
4->34 [style = dashed, label="0"];
36->8 [style = bold, label=""];
36->31 [style = solid, label="expression"];
10->7 [style = dotted, label="true"];
14->15 [style = bold, label=""];
11->5 [style = dotted, label="false"];
29->33 [style = dotted, label="true"];
26->35 [style = dotted, label="true"];
8->4 [style = bold, label=""];
24->8 [style = bold, label=""];
6->9 [style = bold, label=""];
16->20 [style = bold, label=""];
17->30 [style = dashed, label="0"];
19->22 [style = bold, label=""];
29->32 [style = dotted, label="true"];
22->11 [style = bold, label=""];
37->39 [style = bold, label=""];
24->8 [style = dotted, label="false"];
14->15 [style = dotted, label="false"];
21->3 [style = bold, label=""];
9->13 [style = bold, label=""];
24->23 [style = bold, label=""];
}
