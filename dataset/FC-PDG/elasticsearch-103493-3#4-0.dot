digraph {
2 [style = filled, label = "QueryShardException e = expectThrows(,null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"Geometry fields do not support exact searching, use dedicated geometry queries instead: \" + \"(mapped_geo_point(\",e.getMessage())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testExactOnUnsupportedField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testExactOnUnsupportedField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertThat(query.toQuery(context),Matchers.instanceOf())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "query.lenient(true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MultiMatchQueryBuilder query = new MultiMatchQueryBuilder(\"test\",BINARY_FIELD_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"Field (mapped_binary( of type (binary does not support match queries\",e.getMessage())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MatchQueryBuilder query = new MatchQueryBuilder(GEO_POINT_FIELD_NAME,\"2,3\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testLenientFlag['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(query.toQuery(context),Matchers.instanceOf())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "query.toQuery(context)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"Field (mapped_geo_point( of type (geo_point( does not support match queries\",e.getMessage())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "QueryShardContext context = createShardContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
9->0 [style = bold, label=""];
2->3 [style = bold, label=""];
4->13 [style = bold, label=""];
0->15 [style = dashed, label="0"];
6->0 [style = bold, label=""];
4->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
4->12 [style = solid, label="context"];
2->7 [style = dashed, label="0"];
7->8 [style = bold, label=""];
4->7 [style = bold, label=""];
11->15 [style = bold, label=""];
4->1 [style = solid, label="context"];
1->12 [style = dashed, label="0"];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
8->5 [style = bold, label=""];
5->12 [style = bold, label=""];
0->4 [style = bold, label=""];
2->13 [style = dashed, label="0"];
4->10 [style = solid, label="context"];
15->4 [style = bold, label=""];
13->14 [style = bold, label=""];
14->5 [style = bold, label=""];
}
