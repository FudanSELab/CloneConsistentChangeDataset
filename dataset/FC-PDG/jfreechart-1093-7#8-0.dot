digraph {
13 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(b1 != b2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SimpleHistogramBin b1 = new SimpleHistogramBin(1.1,2.2,false,true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "b2.setItemCount(111)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(b1.hasListener(l1))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DialBackground b1 = new DialBackground()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(b1.equals(b2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(b1.equals(b2))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(b2.hasListener(l1))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DialBackground b2 = (DialBackground)b1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "b1.setPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.GREEN))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "SimpleHistogramBin b2 = (SimpleHistogramBin)b1.clone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(b1 != b2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b2 = (DialBackground)b1.clone()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DialBackground b2 = CloneUtils.clone(b1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "b1.addChangeListener(l1)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertFalse(b1.equals(b2))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "b1.setItemCount(99)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(b1 != b2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MyDialLayerChangeListener l1 = new MyDialLayerChangeListener()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15->10 [style = solid, label="l1"];
6->3 [style = bold, label=""];
15->5 [style = solid, label="l1"];
16->10 [style = bold, label=""];
6->23 [style = bold, label=""];
1->13 [style = solid, label="b2"];
0->2 [style = bold, label=""];
4->13 [style = bold, label=""];
9->17 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
1->14 [style = solid, label="b2"];
9->17 [style = solid, label="b1"];
17->13 [style = solid, label="b2"];
15->5 [style = bold, label=""];
11->15 [style = bold, label=""];
20->22 [style = bold, label=""];
22->4 [style = bold, label=""];
8->0 [style = bold, label=""];
5->16 [style = bold, label=""];
22->24 [style = solid, label="b2"];
9->14 [style = solid, label="b1"];
23->24 [style = bold, label=""];
1->17 [style = dashed, label="0"];
21->20 [style = bold, label=""];
3->7 [style = bold, label=""];
17->14 [style = bold, label=""];
9->21 [style = dashed, label="0"];
18->9 [style = bold, label=""];
6->0 [style = solid, label="b1"];
1->14 [style = bold, label=""];
17->14 [style = solid, label="b2"];
8->0 [style = solid, label="b2"];
13->6 [style = bold, label=""];
21->4 [style = solid, label="b1"];
9->1 [style = bold, label=""];
15->16 [style = solid, label="l1"];
2->11 [style = bold, label=""];
22->6 [style = solid, label="b2"];
22->4 [style = solid, label="b2"];
14->4 [style = bold, label=""];
8->11 [style = solid, label="b2"];
19->21 [style = bold, label=""];
}
