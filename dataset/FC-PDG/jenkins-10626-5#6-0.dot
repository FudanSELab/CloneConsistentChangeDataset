digraph {
0 [style = filled, label = "String resourceResponseUrl@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MockAuthorizationStrategy a = new MockAuthorizationStrategy()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertNull(\"no CSP headers\",page.getWebResponse().getResponseHeaderValue(\"Content-Security-Policy\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertTrue(\"Served from resource action\",resourceResponseUrl.contains(\"static-files\"))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Page page = webClient.goTo(\"userContent/readme.txt\",\"text/plain\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "webClient.login(\"foo:bar\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "webClient.setRedirectEnabled(true)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "secondDomainCannotBeFaked['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "JenkinsRule.WebClient webClient = j.createWebClient()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(\"Served from resource domain\",resourceResponseUrl.contains(RESOURCE_DOMAIN))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "{webClient.setRedirectEnabled(true)webClient.setThrowExceptionOnFailingStatusCode(false)Page page = webClient.goTo(\"userContent/readme.txt\",\"text/plain\")resourceResponseUrl = page.getUrl().toString()Assert.assertEquals(\"resource response success\",200,page.getWebResponse().getStatusCode())Assert.assertNull(\"no CSP headers\",page.getWebResponse().getResponseHeaderValue(\"Content-Security-Policy\"))Assert.assertTrue(\"Served from resource domain\",resourceResponseUrl.contains(RESOURCE_DOMAIN))Assert.assertTrue(\"Served from resource action\",resourceResponseUrl.contains(\"static-files\"))}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "secondDomainCannotBeFaked['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"resource response success\",200,page.getWebResponse().getStatusCode())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "a.grant(Jenkins.READ).everywhere().toEveryone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String resourceResponseUrl = page.getUrl().toString()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "j.jenkins.setSecurityRealm(j.createDummySecurityRealm())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "j.jenkins.setAuthorizationStrategy(a)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testColonUserName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "JenkinsRule.WebClient webClient = j.createWebClient()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
1->3 [style = bold, label=""];
13->9 [style = bold, label=""];
17->7 [style = bold, label=""];
18->14 [style = bold, label=""];
15->11 [style = bold, label=""];
11->16 [style = bold, label=""];
10->14 [style = solid, label="a"];
14->15 [style = bold, label=""];
8->12 [style = bold, label=""];
16->13 [style = bold, label=""];
6->3 [style = bold, label=""];
0->1 [style = bold, label=""];
7->10 [style = bold, label=""];
3->8 [style = bold, label=""];
4->2 [style = bold, label=""];
10->18 [style = bold, label=""];
9->6 [style = bold, label=""];
}
