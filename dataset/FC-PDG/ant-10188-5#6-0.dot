digraph {
7 [style = filled, label = "assertContains(\"Removed 1 dangling file from\",buildRule.getFullLog())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testCopyAndRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") > -1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertFileIsPresent(f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertContains(\"Removed 1 dangling directory from\",buildRule.getFullLog())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCopyAndRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(buildRule.getFullLog().indexOf(\"Removing orphan file:\") == -1)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "buildRule.executeTarget(\"copynoremove\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(buildRule.getFullLog().contains(\"Removing orphan file:\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String target@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "buildRule.executeTarget(target)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCopyNoRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFileIsPresent(d)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFileIsNotPresent(f)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->6 [style = solid, label="f"];
1->14 [style = dashed, label="0"];
4->6 [style = bold, label=""];
4->13 [style = bold, label=""];
12->15 [style = bold, label=""];
4->13 [style = solid, label="f"];
0->3 [style = solid, label="d"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
6->1 [style = bold, label=""];
10->5 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->0 [style = bold, label=""];
10->2 [style = dotted, label="true"];
2->5 [style = solid, label="target"];
1->11 [style = dashed, label="0"];
9->2 [style = dotted, label="true"];
15->0 [style = bold, label=""];
6->11 [style = bold, label=""];
9->5 [style = bold, label=""];
5->15 [style = dashed, label="0"];
13->14 [style = bold, label=""];
11->7 [style = bold, label=""];
}
