digraph {
12 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "expected.remove()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "getIdFetchersReturnsAllFetcherDerivingFromIdFetcher['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "getSearchBasedFetchersReturnsAllFetcherDerivingFromSearchBasedFetcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<IdFetcher> idFetchers = WebFetchers.getIdFetchers()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "expected.remove()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "expected.remove()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Set<Class<? extends SearchBasedFetcher>> expected = reflections.getSubTypesOf()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<IdBasedFetcher> idFetchers = WebFetchers.getIdBasedFetchers(importFormatPreferences)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "expected.remove()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "expected.remove()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Set<Class<? extends IdBasedFetcher>> expected = reflections.getSubTypesOf()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(expected,getClasses(idFetchers))@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<SearchBasedFetcher> idFetchers = WebFetchers.getSearchBasedFetchers(importFormatPreferences)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "expected.remove()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Set<Class<? extends IdFetcher>> expected = reflections.getSubTypesOf()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
8->10 [style = bold, label=""];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
2->3 [style = bold, label=""];
11->10 [style = solid, label="idFetchers"];
12->11 [style = bold, label=""];
3->5 [style = solid, label="idFetchers"];
14->17 [style = bold, label=""];
11->9 [style = bold, label=""];
9->8 [style = bold, label=""];
0->17 [style = dashed, label="0"];
3->0 [style = bold, label=""];
17->15 [style = solid, label="expected"];
0->4 [style = bold, label=""];
4->8 [style = dashed, label="0"];
16->14 [style = bold, label=""];
17->13 [style = bold, label=""];
0->5 [style = solid, label="expected"];
13->15 [style = bold, label=""];
0->9 [style = dashed, label="0"];
14->15 [style = solid, label="idFetchers"];
3->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
3->14 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
9->10 [style = solid, label="expected"];
}
