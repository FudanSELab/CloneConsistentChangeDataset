digraph {
69 [style = filled, label = "IndexSearcher s = newSearcher(r,false)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "docs.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "s.search(fullQuery.build(),c)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertFalse(Float.isNaN(results.maxScore))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "TopDocs matchingChildren = s.search(childrenQuery,1)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "childDoc = s.doc(hits.scoreDocs(0(.doc)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(asSet(\"Lisa\",\"Frank\"),asSet(s.doc(topDocs.scoreDocs(0(.doc).get(\"name\"),s.doc(topDocs.scoreDocs(1(.doc).get(\"name\")))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "ParentChildrenBlockJoinQuery childrenQuery = new ParentChildrenBlockJoinQuery(parentsFilter,childQuery.build(),topDocs.scoreDocs(0(.doc)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Query parentQuery = new TermQuery(new Term(\"country\",\"United Kingdom\"))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IndexSearcher s = newSearcher(r)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "r.close()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "dir.close()@@@43@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "childQuery.add(new BooleanClause(IntPoint.newRangeQuery(\"year\",2006,2011),Occur.MUST))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "r.close()@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "childQuery.add(new BooleanClause(new TermQuery(new Term(\"skill\",\"java\")),Occur.MUST))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "BooleanQuery.Builder fullChildQuery = new BooleanQuery.Builder()@@@46@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "w.addDocuments(docs)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(\"java\",s.doc(matchingChildren.scoreDocs(0(.doc).get(\"skill\"))@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "assertEquals(0,s.search(fullChildQuery.build(),1).totalHits)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testEmptyChildFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Document childDoc = s.doc(group.scoreDocs(0(.doc)@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexReader r = DirectoryReader.open(w)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "docs.add(makeJob(\"python\",2010))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "ToParentBlockJoinCollector c = new ToParentBlockJoinCollector(Sort.RELEVANCE,1,true,true)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final GroupDocs<Integer> group = results.groups(0(@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "w.close()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "docs.add(makeResume(\"Lisa\",\"United Kingdom\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final IndexWriterConfig config = new IndexWriterConfig(new MockAnalyzer(random()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "w.addDocuments(docs)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "config.setMergePolicy(NoMergePolicy.INSTANCE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(\"Lisa\",getParentDoc(r,parentsFilter,hits.scoreDocs(0(.doc).get(\"name\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Document parentDoc = s.doc(group.groupValue)@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "docs.add(makeResume(\"Frank\",\"United States\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final IndexWriter w = new IndexWriter(dir,config)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "CheckHits.checkHitCollector(random(),fullQuery.build(),\"country\",s,new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1ac20cf)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "IndexReader r = w.getReader()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "matchingChildren = s.search(childrenQuery,1)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "final List<Document> docs = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "docs.add(makeJob(\"java\",2006))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "dir.close()@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ToChildBlockJoinQuery parentJoinQuery = new ToChildBlockJoinQuery(parentQuery,parentsFilter)@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "fullQuery.add(new BooleanClause(parentQuery,Occur.MUST))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "BitSetProducer parentsFilter = new QueryBitSetProducer(new TermQuery(new Term(\"docType\",\"resume\")))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(1,matchingChildren.totalHits)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(2007,childDoc.getField(\"year\").numericValue())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ToParentBlockJoinCollector c = new ToParentBlockJoinCollector(Sort.RELEVANCE,1,true,true)@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"Lisa\",parentDoc.get(\"name\"))@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(Float.isNaN(group.score))@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testEmptyChildFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "fullQuery.add(new BooleanClause(childJoinQuery,Occur.MUST))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(1,results.totalGroupedHitCount)@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(\"java\",childDoc.get(\"skill\"))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "docs.add(makeJob(\"ruby\",2005))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "TopGroups<Integer> results = c.getTopGroups(childJoinQuery,null,0,10,0,true)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "fullQuery.add(new BooleanClause(childJoinQuery,Occur.MUST))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "BooleanQuery.Builder childQuery = new BooleanQuery.Builder()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "childrenQuery = new ParentChildrenBlockJoinQuery(parentsFilter,childQuery.build(),topDocs.scoreDocs(1(.doc)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(\"java\",s.doc(matchingChildren.scoreDocs(0(.doc).get(\"skill\"))@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "fullQuery.add(new BooleanClause(new MatchAllDocsQuery(),Occur.MUST))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "w.commit()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertNotNull(group.groupValue)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "fullChildQuery.add(new BooleanClause(childQuery.build(),Occur.MUST))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "TopDocs hits = s.search(fullChildQuery.build(),10)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(1,matchingChildren.totalHits)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "docs.add(makeJob(\"java\",2007))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(2,topDocs.totalHits)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "fullChildQuery.add(new TermQuery(new Term(\"skill\",\"foosball\")),Occur.FILTER)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,results.groups.length)@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "final RandomIndexWriter w = new RandomIndexWriter(random(),dir)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(1,hits.totalHits)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "ToParentBlockJoinQuery childJoinQuery = new ToParentBlockJoinQuery(childQuery.build(),parentsFilter,ScoreMode.Avg)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "fullChildQuery.add(new BooleanClause(parentJoinQuery,Occur.MUST))@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "TopDocs topDocs = s.search(fullQuery.build(),2)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "CheckJoinIndex.check(r,parentsFilter)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BooleanQuery.Builder fullQuery = new BooleanQuery.Builder()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IndexSearcher s = new IndexSearcher(r)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "dir.close()@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final Directory dir = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,group.totalHits)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79->8 [style = bold, label=""];
79->17 [style = solid, label="parentsFilter"];
43->55 [style = bold, label=""];
61->56 [style = bold, label=""];
29->20 [style = solid, label="docs"];
15->41 [style = solid, label="childJoinQuery"];
35->41 [style = bold, label=""];
17->16 [style = solid, label="parentJoinQuery"];
60->71 [style = bold, label=""];
28->9 [style = bold, label=""];
5->15 [style = bold, label=""];
56->67 [style = bold, label=""];
66->62 [style = bold, label=""];
25->29 [style = bold, label=""];
62->73 [style = bold, label=""];
7->69 [style = bold, label=""];
59->66 [style = bold, label=""];
77->70 [style = bold, label=""];
22->8 [style = bold, label=""];
13->17 [style = bold, label=""];
80->38 [style = bold, label=""];
71->58 [style = bold, label=""];
29->7 [style = solid, label="docs"];
51->50 [style = bold, label=""];
48->46 [style = solid, label="childrenQuery"];
14->15 [style = solid, label="parentsFilter"];
40->24 [style = bold, label=""];
69->75 [style = solid, label="s"];
24->25 [style = solid, label="dir"];
12->22 [style = bold, label=""];
72->37 [style = solid, label="docs"];
53->48 [style = bold, label=""];
24->28 [style = bold, label=""];
28->25 [style = solid, label="config"];
4->38 [style = bold, label=""];
8->23 [style = bold, label=""];
17->43 [style = dashed, label="0"];
8->64 [style = bold, label=""];
36->4 [style = bold, label=""];
68->80 [style = bold, label=""];
70->33 [style = bold, label=""];
39->68 [style = solid, label="childJoinQuery"];
30->34 [style = bold, label=""];
79->39 [style = solid, label="parentsFilter"];
33->13 [style = bold, label=""];
79->8 [style = solid, label="parentsFilter"];
15->35 [style = bold, label=""];
38->2 [style = bold, label=""];
23->14 [style = bold, label=""];
52->42 [style = bold, label=""];
45->14 [style = bold, label=""];
33->52 [style = dashed, label="0"];
23->69 [style = dashed, label="0"];
0->20 [style = bold, label=""];
64->14 [style = bold, label=""];
18->7 [style = bold, label=""];
29->11 [style = bold, label=""];
65->15 [style = bold, label=""];
17->10 [style = bold, label=""];
25->22 [style = solid, label="w"];
58->61 [style = bold, label=""];
36->51 [style = bold, label=""];
39->5 [style = bold, label=""];
31->0 [style = bold, label=""];
35->75 [style = bold, label=""];
22->26 [style = solid, label="r"];
69->79 [style = bold, label=""];
21->17 [style = solid, label="parentQuery"];
3->6 [style = bold, label=""];
39->15 [style = solid, label="childJoinQuery"];
6->77 [style = bold, label=""];
22->45 [style = solid, label="r"];
18->69 [style = solid, label="r"];
63->24 [style = bold, label=""];
76->29 [style = bold, label=""];
57->68 [style = bold, label=""];
26->21 [style = bold, label=""];
48->46 [style = bold, label=""];
11->31 [style = bold, label=""];
22->23 [style = solid, label="r"];
18->8 [style = solid, label="r"];
78->72 [style = bold, label=""];
72->31 [style = solid, label="docs"];
41->36 [style = bold, label=""];
14->48 [style = solid, label="parentsFilter"];
21->39 [style = bold, label=""];
10->16 [style = bold, label=""];
15->2 [style = solid, label="childJoinQuery"];
6->33 [style = bold, label=""];
8->45 [style = bold, label=""];
32->1 [style = bold, label=""];
16->30 [style = bold, label=""];
74->60 [style = bold, label=""];
44->24 [style = bold, label=""];
47->52 [style = bold, label=""];
1->37 [style = bold, label=""];
2->19 [style = bold, label=""];
42->43 [style = bold, label=""];
21->65 [style = solid, label="parentQuery"];
7->12 [style = bold, label=""];
24->78 [style = solid, label="dir"];
46->49 [style = bold, label=""];
27->3 [style = bold, label=""];
23->45 [style = dashed, label="0"];
24->78 [style = bold, label=""];
20->32 [style = bold, label=""];
54->30 [style = bold, label=""];
75->57 [style = bold, label=""];
5->65 [style = bold, label=""];
72->76 [style = bold, label=""];
49->47 [style = bold, label=""];
14->26 [style = bold, label=""];
16->74 [style = bold, label=""];
4->38 [style = solid, label="c"];
14->52 [style = solid, label="parentsFilter"];
3->49 [style = dashed, label="0"];
9->25 [style = bold, label=""];
19->27 [style = bold, label=""];
52->42 [style = solid, label="childrenQuery"];
37->18 [style = bold, label=""];
12->18 [style = dashed, label="0"];
14->26 [style = solid, label="parentsFilter"];
55->54 [style = bold, label=""];
35->57 [style = solid, label="c"];
50->53 [style = bold, label=""];
67->59 [style = bold, label=""];
}
