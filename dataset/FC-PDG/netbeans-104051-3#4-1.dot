digraph {
3 [style = filled, label = "ParserManager.parse(Collections.singleton(source),new UserTask(){@Override public void run(ResultIterator resultIterator){Result result = resultIterator.getParserResult()if (!(result instanceof HtmlParserResult)) {return}ModificationResult modification = new ModificationResult()if (HtmlSourceUtils.importStyleSheet(modification,(HtmlParserResult)result,externalStylesheet)) {modification.commit()}}})@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Document doc = source.getDocument(false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "externalStylesheet = FileUtil.createData(folder,NEW_STYLESHEET_NAME)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final Model newmodel = Utils.createCssSourceModel(Source.create(externalStylesheet))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "importStyleSheet@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FileObject folder = sourceFile.getParent()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Source source = Source.create(sourceFile)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final AtomicReference<ElementHandle> handleRef = new AtomicReference<>()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Model model = Utils.createCssSourceModel(Source.create(externalStylesheet))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "model.runReadTask(new Model.ModelTask(){@Override public void run(StyleSheet styleSheet){Rule rule = (Rule)handleRef.get().resolve(newmodel)if (rule != null) {openLocation(externalStylesheet,rule.getStartOffset())}}})@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createStyleSheet@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "model.runWriteTask(new Model.ModelTask(){@Override public void run(StyleSheet styleSheet){try {ModelUtils utils = new ModelUtils(model)Rule rule = utils.createRule(Collections.singleton(getSelectorText()),Collections.emptyList())utils.getBody().addRule(rule)handleRef.set(rule.getElementHandle())model.applyChanges()}catch (IOException|BadLocationException ex) }})@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
7->10 [style = bold, label=""];
7->13 [style = dotted, label="true"];
13->3 [style = solid, label="externalStylesheet"];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
10->3 [style = dotted, label="true"];
0->3 [style = solid, label="source"];
13->11 [style = solid, label="externalStylesheet"];
13->14 [style = solid, label="externalStylesheet"];
5->14 [style = bold, label=""];
7->9 [style = dotted, label="true"];
4->0 [style = bold, label=""];
7->9 [style = bold, label=""];
2->0 [style = bold, label=""];
9->13 [style = solid, label="folder"];
11->5 [style = solid, label="model"];
8->5 [style = bold, label=""];
0->1 [style = bold, label=""];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
11->8 [style = bold, label=""];
10->0 [style = dotted, label="true"];
14->12 [style = solid, label="newmodel"];
10->1 [style = dotted, label="true"];
6->7 [style = bold, label=""];
5->12 [style = solid, label="rule"];
13->12 [style = solid, label="externalStylesheet"];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
