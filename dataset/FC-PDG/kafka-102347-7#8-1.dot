digraph {
7 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(dummySensor)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final Sensor sensor = ThreadMetrics.commitSensor(THREAD_ID,streamsMetrics)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String totalDescription = \"The total number of poll calls\"@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "verify()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final String avgLatencyDescription = \"The average poll latency\"@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "replayAll()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "shouldGetCommitSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verifyAll()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldGetPollSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(dummyTagMap)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replay()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operation,totalDescription,rateDescription)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final String totalDescription = \"The total number of calls to poll\"@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "verify(,streamsMetrics)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "replay(,streamsMetrics)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final Sensor sensor = ThreadMetrics.pollSensor(THREAD_ID,streamsMetrics)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String rateDescription = \"The average per-second number of commit calls\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "shouldGetPollSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "mockStatic()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "final String rateDescription = \"The average per-second number of calls to poll\"@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final String operation = \"poll\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(sensor,is(dummySensor))@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operationLatency)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String operationLatency = operation + StreamsMetricsImpl.LATENCY_SUFFIX@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String rateDescription = \"The average per-second number of poll calls\"@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "final String operation = \"commit\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,threadLevelGroup,tagMap,operationLatency,avgLatencyDescription,maxLatencyDescription)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "final String totalDescription = \"The total number of commit calls\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final String maxLatencyDescription = \"The maximum poll latency\"@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
22->25 [style = bold, label=""];
29->15 [style = bold, label=""];
16->27 [style = bold, label=""];
1->4 [style = solid, label="operation"];
1->22 [style = solid, label="operation"];
7->10 [style = bold, label=""];
25->23 [style = bold, label=""];
1->30 [style = dashed, label="0"];
12->21 [style = solid, label="sensor"];
0->23 [style = dashed, label="0"];
0->12 [style = bold, label=""];
11->6 [style = bold, label=""];
29->3 [style = solid, label="sensor"];
12->15 [style = bold, label=""];
11->22 [style = dashed, label="0"];
2->11 [style = solid, label="operationLatency"];
18->17 [style = bold, label=""];
28->9 [style = bold, label=""];
2->18 [style = bold, label=""];
0->29 [style = bold, label=""];
6->0 [style = bold, label=""];
12->26 [style = bold, label=""];
10->27 [style = dashed, label="0"];
17->22 [style = solid, label="rateDescription"];
9->7 [style = bold, label=""];
8->28 [style = dashed, label="0"];
18->22 [style = solid, label="totalDescription"];
2->25 [style = solid, label="operationLatency"];
13->1 [style = bold, label=""];
15->5 [style = bold, label=""];
14->4 [style = solid, label="totalDescription"];
8->4 [style = solid, label="rateDescription"];
20->22 [style = bold, label=""];
26->21 [style = bold, label=""];
12->3 [style = solid, label="sensor"];
32->4 [style = solid, label="totalDescription"];
24->16 [style = bold, label=""];
19->1 [style = bold, label=""];
24->25 [style = solid, label="avgLatencyDescription"];
16->25 [style = solid, label="maxLatencyDescription"];
17->24 [style = bold, label=""];
14->32 [style = dashed, label="0"];
30->4 [style = solid, label="operation"];
28->4 [style = solid, label="rateDescription"];
30->2 [style = solid, label="operation"];
2->14 [style = bold, label=""];
31->30 [style = bold, label=""];
12->29 [style = dashed, label="0"];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
15->26 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
23->12 [style = bold, label=""];
1->2 [style = bold, label=""];
14->8 [style = bold, label=""];
2->32 [style = bold, label=""];
14->18 [style = dashed, label="0"];
30->2 [style = bold, label=""];
4->11 [style = bold, label=""];
32->28 [style = bold, label=""];
27->20 [style = bold, label=""];
1->2 [style = solid, label="operation"];
}
