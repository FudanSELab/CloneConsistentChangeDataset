digraph {
10 [style = filled, label = "expected += 100@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "builder.setField(UnittestProto.optionalNestedMessageExtension.getDescriptor(),nestedMessageBuilder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testGetFieldBuilderWithExistingBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestAllExtensions.Builder builder = TestAllExtensions.newBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb()).isEqualTo(expected)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fieldBuilder.setField(field,expected)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int expected = 7432@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "fieldBuilder.setField(field,expected)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Message.Builder fieldBuilder = builder.getFieldBuilder(UnittestProto.optionalNestedMessageExtension.getDescriptor())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testGetRepeatedFieldBuilderForExistingBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "builder.addRepeatedField(UnittestProto.repeatedNestedMessageExtension.getDescriptor(),nestedMessageBuilder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testGetFieldBuilderWithExistingBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "NestedMessage.Builder nestedMessageBuilder = NestedMessage.newBuilder().setBb(123)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "nestedMessageBuilder.setBb(expected)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.repeatedNestedMessageExtension,0).getBb())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FieldDescriptor field = NestedMessage.getDescriptor().findFieldByNumber(NestedMessage.BB_FIELD_NUMBER)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expected += 100@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb()).isEqualTo(expected)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb()).isEqualTo(expected)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Message.Builder fieldBuilder = builder.getRepeatedFieldBuilder(UnittestProto.repeatedNestedMessageExtension.getDescriptor(),0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24->10 [style = bold, label=""];
14->16 [style = bold, label=""];
7->11 [style = solid, label="expected"];
16->0 [style = bold, label=""];
7->13 [style = solid, label="expected"];
13->24 [style = bold, label=""];
4->17 [style = bold, label=""];
3->13 [style = solid, label="field"];
10->14 [style = bold, label=""];
6->20 [style = dashed, label="0"];
0->17 [style = solid, label="expected"];
2->6 [style = bold, label=""];
12->21 [style = bold, label=""];
4->19 [style = bold, label=""];
7->18 [style = solid, label="expected"];
0->19 [style = solid, label="expected"];
1->0 [style = bold, label=""];
9->8 [style = bold, label=""];
23->0 [style = bold, label=""];
13->11 [style = bold, label=""];
0->4 [style = solid, label="expected"];
10->16 [style = solid, label="expected"];
7->3 [style = bold, label=""];
14->1 [style = bold, label=""];
22->8 [style = bold, label=""];
12->2 [style = bold, label=""];
7->24 [style = solid, label="expected"];
21->20 [style = bold, label=""];
5->17 [style = dashed, label="0"];
18->10 [style = bold, label=""];
14->23 [style = bold, label=""];
12->2 [style = solid, label="nestedMessageBuilder"];
10->1 [style = solid, label="expected"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
10->14 [style = solid, label="expected"];
11->18 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
2->21 [style = dashed, label="0"];
10->23 [style = solid, label="expected"];
11->24 [style = dashed, label="0"];
12->21 [style = solid, label="nestedMessageBuilder"];
3->13 [style = bold, label=""];
0->5 [style = solid, label="expected"];
20->7 [style = bold, label=""];
6->7 [style = bold, label=""];
5->19 [style = dashed, label="0"];
1->23 [style = dashed, label="0"];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
3->4 [style = solid, label="field"];
13->18 [style = bold, label=""];
}
