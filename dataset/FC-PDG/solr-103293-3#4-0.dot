digraph {
8 [style = filled, label = "testDefaultField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"q\",\"t3\"),\"/response/numFound==0\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"df\",\"text0\",\"q\",\"t3\"),\"/response/numFound==0\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"df\",\"text1\",\"q\",\"t3\"),\"/response/numFound==1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"df\",\"text-keyword0\",\"q\",\"kw9 kw10 kw11\"),\"/response/numFound==0\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"df\",\"text0\",\"q\",\"t2 t9 t12\"),\"/response/numFound==1\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"df\",\"text-keyword0\",\"q\",\"\"kw9 kw10 kw11\"\"),\"/response/numFound==1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"qf\",\"text1\",\"q\",\"t2 t3\"),\"/response/numFound==2\")@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"qf\",\"text1 text-keyword0\",\"q\",\"t2 t3\",\"q.op\",\"AND\"),\"/response/numFound==0\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"df\",\"text1\",\"q\",\"t2 t9 t12\"),\"/response/numFound==3\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"q\",\"t2 t9 t12\"),\"/response/numFound==1\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testDefaultField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertJQ(req(\"defType\",\"simple\",\"qf\",\"text0 text-keyword0\",\"q\",\"t0 t2\",\"q.op\",\"AND\"),\"/response/numFound==1\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testDefaultOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
3->6 [style = bold, label=""];
1->4 [style = bold, label=""];
13->12 [style = bold, label=""];
6->13 [style = dashed, label="0"];
3->11 [style = dashed, label="0"];
9->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
11->13 [style = bold, label=""];
2->3 [style = bold, label=""];
4->0 [style = bold, label=""];
0->5 [style = bold, label=""];
6->9 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
