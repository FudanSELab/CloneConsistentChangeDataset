digraph {
4 [style = filled, label = "subscriptions = Collections.singletonMap(consumerId,new Subscription(Collections.emptyList()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "partitionsPerTopic.put(topic,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testOneConsumerNoTopic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testOneConsumerNoTopic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertTrue(assignment.get(consumerId).isEmpty())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testOneConsumerNonexistentTopic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(Collections.singleton(consumerId),assignment.keySet())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(assignor.partitionsTransferringOwnership.isEmpty())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions = Collections.singletonMap(consumerId,new Subscription(topics(topic)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = solid, label="assignment"];
13->1 [style = solid, label="subscriptions"];
1->11 [style = solid, label="assignment"];
3->6 [style = bold, label=""];
10->6 [style = bold, label=""];
6->7 [style = solid, label="partitionsPerTopic"];
13->1 [style = bold, label=""];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = solid, label="assignment"];
4->0 [style = bold, label=""];
13->5 [style = solid, label="subscriptions"];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
0->5 [style = solid, label="assignment"];
7->5 [style = bold, label=""];
0->1 [style = bold, label=""];
6->5 [style = solid, label="partitionsPerTopic"];
4->0 [style = solid, label="subscriptions"];
4->7 [style = solid, label="subscriptions"];
1->2 [style = bold, label=""];
5->11 [style = bold, label=""];
2->7 [style = bold, label=""];
6->0 [style = solid, label="partitionsPerTopic"];
6->1 [style = solid, label="partitionsPerTopic"];
2->8 [style = bold, label=""];
6->12 [style = bold, label=""];
}
