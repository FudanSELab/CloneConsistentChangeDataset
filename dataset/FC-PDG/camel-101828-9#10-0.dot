digraph {
13 [style = filled, label = "Repository repository = getTestRepository()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "repository.close()@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "logs = new Git(repository).log().call()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int count = 0@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "status = git.status().call()@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
75 [style = filled, label = "status = new Git(repository).status().call()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "MockEndpoint added = getMockEndpoint(\"mock:result-commit\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "count++@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "repository.close()@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "count++@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "count == 1@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(count,2)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "template.send(\"direct:commit-all-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessageAll)}})@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "count = 0@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "count == 0@@@27@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,\"Test test Commit\")}})@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "git = new Git(repository)@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "template.send(\"direct:add\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "count = 0@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Exchange ex2 = added.getExchanges().get(1)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "fileToAdd1.createNewFile()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "count++@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "removeFileBranchTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Status status = new Git(repository).status().call()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "count++@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "git.close()@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertFalse(status.getAdded().contains(filenameToAdd))@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Git git = new Git(repository)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@57@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertTrue(status.getAdded().contains(filenameBranchToAdd))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "logs = git.log().call()@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "logs = git.log().call()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessageAll)@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "git.checkout().setCreateBranch(true).setName(branchTest).setUpstreamMode(SetupUpstreamMode.SET_UPSTREAM).call()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(rev.getShortMessage(),commitMessage)@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "git.commit().setMessage(commitMessage).call()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "template.send(\"direct:commit\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_COMMIT_MESSAGE,commitMessage)}})@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "git.add().addFilepattern(filenameBranchToAdd).call()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "count == 1@@@51@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "count = 0@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "count++@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "removeFileBranchTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "template.send(\"direct:add-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameBranchToAdd)}})@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "fileToAdd.createNewFile()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Iterable<RevCommit> logs = new Git(repository).log().call()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(count,2)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "template.send(\"direct:remove-on-branch\",new Processor(){@Override public void process(Exchange exchange){exchange.getIn().setHeader(GitConstants.GIT_FILE_NAME,filenameToAdd)}})@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "fileToAdd1.createNewFile()@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(\"Test test Commit\",ex1.getOut().getBody().getShortMessage())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "fileToAdd.createNewFile()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(count,1)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "git.add().addFilepattern(filenameToAdd).call()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "Status status = git.status().call()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "commitConsumerTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "git.commit().setMessage(commitMessageAll).call()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Git git = getGitTestRepository()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertEquals(commitMessage,ex2.getOut().getBody().getShortMessage())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "git.checkout().setCreateBranch(false).setName(branchTest).call()@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "File fileToAdd = new File(gitLocalRepo,filenameToAdd)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(count,1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Thread.sleep(1 * 5000)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(gitDir.exists(),true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "status = git.status().call()@@@65@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "File fileToAdd1 = new File(gitLocalRepo,filenameBranchToAdd)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "File gitDir = new File(gitLocalRepo,\".git\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "Exchange ex1 = added.getExchanges().get(0)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(status.getAdded().contains(filenameToAdd))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->3 [style = bold, label=""];
1->14 [style = solid, label="count"];
14->32 [style = dotted, label="true"];
38->44 [style = bold, label=""];
44->35 [style = bold, label=""];
1->2 [style = solid, label="count"];
9->65 [style = bold, label=""];
2->72 [style = solid, label="count"];
9->16 [style = bold, label=""];
27->15 [style = bold, label=""];
36->55 [style = bold, label=""];
56->47 [style = bold, label=""];
8->0 [style = bold, label=""];
23->33 [style = bold, label=""];
39->51 [style = bold, label=""];
70->71 [style = bold, label=""];
36->42 [style = solid, label="count"];
21->1 [style = bold, label=""];
31->30 [style = bold, label=""];
3->74 [style = dashed, label="0"];
54->38 [style = bold, label=""];
24->27 [style = bold, label=""];
10->11 [style = bold, label=""];
68->14 [style = bold, label=""];
17->5 [style = bold, label=""];
77->64 [style = bold, label=""];
66->13 [style = bold, label=""];
48->41 [style = bold, label=""];
26->7 [style = bold, label=""];
53->52 [style = bold, label=""];
27->30 [style = bold, label=""];
30->42 [style = bold, label=""];
2->34 [style = bold, label=""];
45->59 [style = bold, label=""];
55->27 [style = dotted, label="true"];
27->31 [style = bold, label=""];
20->14 [style = bold, label=""];
63->69 [style = bold, label=""];
49->62 [style = bold, label=""];
42->30 [style = solid, label="count"];
62->39 [style = bold, label=""];
29->26 [style = bold, label=""];
61->48 [style = bold, label=""];
24->27 [style = solid, label="count"];
60->57 [style = bold, label=""];
71->68 [style = bold, label=""];
55->27 [style = bold, label=""];
58->46 [style = bold, label=""];
42->58 [style = solid, label="count"];
13->76 [style = bold, label=""];
14->21 [style = bold, label=""];
30->15 [style = bold, label=""];
21->6 [style = dotted, label="true"];
74->75 [style = bold, label=""];
7->17 [style = bold, label=""];
22->19 [style = bold, label=""];
38->54 [style = bold, label=""];
13->31 [style = solid, label="repository"];
19->10 [style = bold, label=""];
16->23 [style = bold, label=""];
3->12 [style = bold, label=""];
13->48 [style = dashed, label="0"];
42->55 [style = bold, label=""];
76->29 [style = bold, label=""];
24->33 [style = bold, label=""];
6->1 [style = bold, label=""];
34->28 [style = bold, label=""];
52->43 [style = bold, label=""];
51->37 [style = bold, label=""];
55->30 [style = bold, label=""];
42->58 [style = bold, label=""];
67->63 [style = bold, label=""];
40->36 [style = bold, label=""];
33->24 [style = bold, label=""];
5->38 [style = solid, label="count"];
4->20 [style = bold, label=""];
36->55 [style = solid, label="count"];
13->28 [style = solid, label="repository"];
1->2 [style = bold, label=""];
47->45 [style = bold, label=""];
14->2 [style = bold, label=""];
23->24 [style = solid, label="count"];
14->32 [style = bold, label=""];
4->68 [style = dashed, label="0"];
18->74 [style = bold, label=""];
28->22 [style = bold, label=""];
2->72 [style = bold, label=""];
75->70 [style = bold, label=""];
5->54 [style = bold, label=""];
5->8 [style = bold, label=""];
20->1 [style = solid, label="count"];
0->9 [style = bold, label=""];
32->21 [style = bold, label=""];
43->50 [style = bold, label=""];
21->6 [style = bold, label=""];
25->13 [style = bold, label=""];
37->17 [style = bold, label=""];
59->40 [style = bold, label=""];
46->53 [style = bold, label=""];
11->50 [style = dashed, label="0"];
20->21 [style = solid, label="count"];
41->60 [style = bold, label=""];
42->55 [style = solid, label="count"];
1->21 [style = solid, label="count"];
35->56 [style = bold, label=""];
15->18 [style = bold, label=""];
38->44 [style = solid, label="count"];
13->29 [style = bold, label=""];
14->2 [style = solid, label="count"];
12->4 [style = bold, label=""];
15->42 [style = bold, label=""];
72->67 [style = bold, label=""];
57->49 [style = bold, label=""];
73->77 [style = bold, label=""];
1->14 [style = bold, label=""];
69->73 [style = bold, label=""];
30->15 [style = dotted, label="true"];
36->30 [style = solid, label="count"];
20->14 [style = solid, label="count"];
16->65 [style = dashed, label="0"];
65->23 [style = bold, label=""];
}
