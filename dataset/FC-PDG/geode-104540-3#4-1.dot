digraph {
41 [style = filled, label = "assertEquals(100,keyIndexStats.getTotalUses())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "IndexManager.TEST_RANGEINDEX_ONLY = true@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "region.destroyRegion()@@@59@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(2,keyIndexStats.getNumberOfMapIndexKeys())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(250,keyIndexStats.getNumUpdates())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(0,keyIndexStats.getReadLockCount())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(100,keyIndexStats.getTotalUses())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testStatsForCompactMapRangeIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "i < 50@@@34@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "keyIndex3 = (IndexProtocol)qs.createIndex(\"multiKeyIndex3\",IndexType.FUNCTIONAL,\"positions('DELL', 'YHOO'(\",\"/portfolio p\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "region.destroy(Integer.toString(i))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "region.destroy(Integer.toString(i))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(300,keyIndexStats.getNumUpdates())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int i = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "String queryStr = \"select * from /portfolio where positions('DELL'( != NULL OR positions('YHOO'( != NULL\"@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(300,keyIndexStats.getNumUpdates())@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "query.execute()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testStatsForCompactMapRangeIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "region.put(Integer.toString(i),new Portfolio(i,i))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(400,keyIndexStats.getNumUpdates())@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i++@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Query query = qs.newQuery(queryStr)@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(100,keyIndexStats.getNumberOfValues())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(indexes(0( instanceof CompactRangeIndex)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "keyIndex3 = (IndexProtocol)qs.createIndex(\"multiKeyIndex3\",IndexType.FUNCTIONAL,\"positions('DELL', 'YHOO'(\",SEPARATOR + \"portfolio p\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "region.put(Integer.toString(i),new Portfolio(i,i))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < 50@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < 100@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "createAndPopulateRegion()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int i = 50@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(100,keyIndexStats.getNumberOfKeys())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(100,keyIndexStats.getNumberOfValues())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "query.execute()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int i = 0@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "keyIndex3 = (IndexProtocol)qs.createIndex(\"multiKeyIndex3\",IndexType.FUNCTIONAL,\"positions('DELL', 'YHOO'(\",\"/portfolio\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "IndexStatistics keyIndexStats = keyIndex3.getStatistics()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i++@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(200,keyIndexStats.getNumUpdates())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(300,keyIndexStats.getNumUpdates())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(100,keyIndexStats.getNumberOfKeys())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(100,keyIndexStats.getNumberOfKeys())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String queryStr = \"select * from \" + SEPARATOR + \"portfolio where positions('DELL'( != NULL OR positions('YHOO'( != NULL\"@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "int i = 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(2,keyIndexStats.getNumberOfMapIndexKeys())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(indexes(1( instanceof CompactRangeIndex)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(89,keyIndexStats.getNumberOfBucketIndexes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i++@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(50,keyIndexStats.getNumberOfValues())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(2,keyIndexStats.getNumberOfMapIndexKeys())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "qs.removeIndex(keyIndex3)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(2,keyIndexStats.getNumberOfMapIndexKeys())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "i++@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(50,keyIndexStats.getNumberOfValues())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(50,keyIndexStats.getNumberOfKeys())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "testStatsForMapRangeIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(100,keyIndexStats.getNumUpdates())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(250,keyIndexStats.getNumUpdates())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "region.destroyRegion()@@@60@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(2,keyIndexStats.getNumberOfMapIndexKeys())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "qs.removeIndex(keyIndex3)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "i < 100@@@52@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(50,keyIndexStats.getNumberOfKeys())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Position.cnt = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(keyIndex3 instanceof CompactMapRangeIndex)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(keyIndexStats instanceof IndexStatistics)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i++@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "region.invalidate(Integer.toString(i))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "int i = 0@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Object(( indexes = ((CompactMapRangeIndex)keyIndex3).getRangeIndexHolderForTesting().values().toArray()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "i < 50@@@43@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(0,keyIndexStats.getNumberOfKeys())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(89,keyIndexStats.getNumberOfBucketIndexes())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "i++@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(2,keyIndexStats.getNumberOfMapIndexKeys())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertTrue(keyIndex3 instanceof PartitionedIndex)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->50 [style = bold, label=""];
54->55 [style = bold, label=""];
27->31 [style = solid, label="i"];
29->59 [style = bold, label=""];
65->60 [style = bold, label=""];
64->36 [style = bold, label=""];
70->67 [style = bold, label=""];
59->4 [style = dotted, label="true"];
13->55 [style = dashed, label="0"];
37->50 [style = solid, label="i"];
27->44 [style = bold, label=""];
34->15 [style = bold, label=""];
39->36 [style = solid, label="i"];
47->33 [style = solid, label="i"];
31->27 [style = solid, label="i"];
55->30 [style = solid, label="keyIndex3"];
10->32 [style = bold, label=""];
21->52 [style = bold, label=""];
27->15 [style = dotted, label="true"];
47->33 [style = bold, label=""];
10->32 [style = dotted, label="true"];
37->25 [style = solid, label="i"];
39->18 [style = bold, label=""];
33->47 [style = solid, label="i"];
46->51 [style = bold, label=""];
55->48 [style = bold, label=""];
4->59 [style = bold, label=""];
12->38 [style = bold, label=""];
20->16 [style = bold, label=""];
57->63 [style = bold, label=""];
6->64 [style = bold, label=""];
62->9 [style = bold, label=""];
24->21 [style = bold, label=""];
38->7 [style = bold, label=""];
25->50 [style = dotted, label="true"];
37->62 [style = bold, label=""];
39->64 [style = bold, label=""];
22->47 [style = bold, label=""];
31->27 [style = dotted, label="true"];
65->60 [style = solid, label="keyIndex3"];
30->14 [style = bold, label=""];
28->32 [style = solid, label="i"];
18->17 [style = dashed, label="0"];
73->76 [style = bold, label=""];
19->22 [style = solid, label="i"];
68->19 [style = solid, label="i"];
29->10 [style = solid, label="i"];
43->27 [style = solid, label="i"];
56->65 [style = bold, label=""];
66->45 [style = bold, label=""];
37->9 [style = solid, label="i"];
6->36 [style = solid, label="i"];
16->3 [style = bold, label=""];
36->6 [style = bold, label=""];
36->0 [style = dotted, label="true"];
62->25 [style = dotted, label="true"];
6->26 [style = solid, label="i"];
72->1 [style = bold, label=""];
49->53 [style = dashed, label="0"];
62->25 [style = bold, label=""];
59->32 [style = bold, label=""];
63->2 [style = bold, label=""];
41->37 [style = bold, label=""];
59->10 [style = dotted, label="true"];
19->47 [style = solid, label="i"];
19->33 [style = dotted, label="true"];
75->46 [style = bold, label=""];
27->31 [style = bold, label=""];
11->12 [style = bold, label=""];
0->36 [style = bold, label=""];
19->72 [style = bold, label=""];
45->11 [style = bold, label=""];
39->64 [style = solid, label="i"];
36->46 [style = bold, label=""];
26->0 [style = bold, label=""];
44->58 [style = dashed, label="0"];
7->68 [style = bold, label=""];
31->27 [style = bold, label=""];
40->5 [style = bold, label=""];
15->27 [style = solid, label="i"];
25->37 [style = bold, label=""];
31->15 [style = solid, label="i"];
17->39 [style = bold, label=""];
23->16 [style = solid, label="indexes"];
64->6 [style = dotted, label="true"];
44->41 [style = bold, label=""];
31->15 [style = dotted, label="true"];
64->36 [style = dotted, label="true"];
47->22 [style = solid, label="i"];
59->10 [style = bold, label=""];
49->43 [style = solid, label="queryStr"];
4->32 [style = solid, label="i"];
29->35 [style = bold, label=""];
43->31 [style = solid, label="i"];
53->43 [style = bold, label=""];
68->47 [style = solid, label="i"];
19->33 [style = solid, label="i"];
19->47 [style = dotted, label="true"];
19->33 [style = bold, label=""];
4->10 [style = bold, label=""];
23->20 [style = bold, label=""];
52->49 [style = solid, label="queryStr"];
67->66 [style = bold, label=""];
10->28 [style = dotted, label="true"];
76->56 [style = bold, label=""];
23->20 [style = solid, label="indexes"];
74->37 [style = solid, label="i"];
50->9 [style = solid, label="i"];
32->71 [style = bold, label=""];
3->45 [style = bold, label=""];
37->25 [style = bold, label=""];
25->9 [style = bold, label=""];
68->33 [style = solid, label="i"];
13->48 [style = bold, label=""];
26->75 [style = bold, label=""];
28->10 [style = solid, label="i"];
13->48 [style = solid, label="keyIndex3"];
4->59 [style = solid, label="i"];
33->47 [style = dotted, label="true"];
65->63 [style = solid, label="keyIndex3"];
0->36 [style = solid, label="i"];
51->29 [style = bold, label=""];
48->23 [style = bold, label=""];
19->47 [style = bold, label=""];
27->34 [style = bold, label=""];
74->62 [style = bold, label=""];
50->25 [style = solid, label="i"];
18->6 [style = bold, label=""];
58->74 [style = bold, label=""];
10->40 [style = bold, label=""];
61->42 [style = bold, label=""];
25->42 [style = bold, label=""];
69->3 [style = bold, label=""];
20->60 [style = dashed, label="0"];
33->19 [style = bold, label=""];
60->69 [style = bold, label=""];
7->19 [style = bold, label=""];
33->22 [style = bold, label=""];
8->13 [style = bold, label=""];
36->26 [style = dotted, label="true"];
43->31 [style = bold, label=""];
13->30 [style = solid, label="keyIndex3"];
74->62 [style = solid, label="i"];
69->3 [style = solid, label="keyIndexStats"];
11->38 [style = bold, label=""];
28->10 [style = bold, label=""];
6->64 [style = solid, label="i"];
52->53 [style = bold, label=""];
31->58 [style = bold, label=""];
62->37 [style = dotted, label="true"];
52->49 [style = bold, label=""];
27->34 [style = dotted, label="true"];
74->25 [style = solid, label="i"];
42->17 [style = bold, label=""];
37->62 [style = solid, label="i"];
3->70 [style = bold, label=""];
68->19 [style = bold, label=""];
33->1 [style = bold, label=""];
36->26 [style = bold, label=""];
0->26 [style = solid, label="i"];
55->48 [style = solid, label="keyIndex3"];
31->15 [style = bold, label=""];
49->43 [style = bold, label=""];
4->28 [style = solid, label="i"];
29->59 [style = solid, label="i"];
6->36 [style = bold, label=""];
35->4 [style = bold, label=""];
35->51 [style = dashed, label="0"];
40->32 [style = dashed, label="0"];
50->25 [style = bold, label=""];
6->0 [style = solid, label="i"];
29->4 [style = solid, label="i"];
64->26 [style = bold, label=""];
9->61 [style = bold, label=""];
71->57 [style = bold, label=""];
5->2 [style = bold, label=""];
39->6 [style = solid, label="i"];
25->9 [style = dotted, label="true"];
1->24 [style = bold, label=""];
53->43 [style = solid, label="queryStr"];
4->10 [style = solid, label="i"];
10->4 [style = bold, label=""];
33->19 [style = solid, label="i"];
2->30 [style = bold, label=""];
33->22 [style = dotted, label="true"];
15->27 [style = bold, label=""];
32->28 [style = bold, label=""];
}
