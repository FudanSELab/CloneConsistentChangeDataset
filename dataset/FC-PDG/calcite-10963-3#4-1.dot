digraph {
10 [style = filled, label = "final String sql = \"SELECT deptno, ename, CASE WHEN 1=2 \" + \"THEN substring(ename, 1, cast(2 as int)) ELSE NULL end from emp\" + \" group by deptno, ename, case when 1=2 then substring(ename,1, cast(2 as int)) else null end\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "builder.addRuleClass()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "hepPlanner.addRule(ReduceExpressionsRule.PROJECT_INSTANCE)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sql(sql).with(hepPlanner).checkUnchanged()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testReduceNullableCase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "sql(sql).with(hepPlanner).check()@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "HepProgramBuilder builder = new HepProgramBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testReduceNullableCase2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testReduceNullableCase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String sql = \"SELECT CASE WHEN 1=2 \" + \"THEN cast((values(1)) as integer) \" + \"ELSE 2 end from (values(1))\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HepPlanner hepPlanner = new HepPlanner(builder.build())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
10->3 [style = bold, label=""];
0->10 [style = bold, label=""];
8->6 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->0 [style = bold, label=""];
4->6 [style = bold, label=""];
1->7 [style = bold, label=""];
0->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
9->6 [style = bold, label=""];
2->5 [style = bold, label=""];
6->2 [style = bold, label=""];
}
