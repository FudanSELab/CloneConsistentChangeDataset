digraph {
31 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting at least one select field but found %d\",expression,streamExpressions.size()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "value = value.substring(1,value.length() - 1)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting select field of form 'fieldA' or 'fieldA as alias' but found %s\",expression,value))@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String value = selectField.getValue().trim()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "RecordCountStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single stream but found %d (must be TupleStream types)\",expression,streamExpressions.size()))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String(( parts = value.split(\"(?i) as \")@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + selectFieldsExpressions.size() + operationExpressions.size()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@36@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "List<StreamExpression> operationExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "value.contains(\" as \")@@@20@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "2 != parts.length@@@22@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "value.length() > 2 && value.startsWith(\"\"\") && value.endsWith(\"\"\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "1 != streamExpressions.size()@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "2 != parts.length@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String(( parts = value.split(\" as \")@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "0 == selectFieldsExpressions.size()@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SelectStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<StreamExpressionParameter> selectFieldsExpressions = factory.getOperandsOfType(expression,)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SelectStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "selectedFields.put(parts(0(.trim(),parts(1(.trim())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "selectedFields.put(value,value)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting select field of form 'fieldA' or 'fieldA as alias' but found %s\",expression,value))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "selectedFields = new HashMap<String,String>(selectFieldsExpressions.size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "1 != streamExpressions.size()@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "stream = factory.constructStream(streamExpressions.get(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "expression.getParameters().size() != streamExpressions.size()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "operations.add(factory.constructOperation(expr))@@@33@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String value = selectField.getValue().trim().toLowerCase(Locale.ROOT)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "value.toLowerCase(Locale.ROOT).contains(\" as \")@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "operations = new ArrayList<>()@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "StreamExpressionValue selectField = (StreamExpressionValue)parameter@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->10 [style = dotted, label="true"];
9->12 [style = dotted, label="true"];
10->22 [style = solid, label="expression"];
32->28 [style = dotted, label="true"];
10->3 [style = solid, label="expression"];
16->13 [style = dotted, label="true"];
10->36 [style = dashed, label="0"];
38->39 [style = dotted, label="true"];
8->32 [style = dashed, label="0"];
38->12 [style = bold, label=""];
10->11 [style = solid, label="expression"];
19->11 [style = bold, label=""];
8->6 [style = bold, label=""];
25->29 [style = bold, label=""];
3->16 [style = bold, label=""];
25->29 [style = dotted, label="true"];
30->6 [style = bold, label=""];
40->36 [style = dotted, label="true"];
38->39 [style = bold, label=""];
31->21 [style = solid, label="expression"];
2->23 [style = bold, label=""];
36->39 [style = solid, label="expression"];
0->14 [style = bold, label=""];
40->11 [style = bold, label=""];
24->11 [style = bold, label=""];
32->25 [style = bold, label=""];
29->14 [style = bold, label=""];
25->15 [style = bold, label=""];
28->25 [style = bold, label=""];
10->21 [style = solid, label="expression"];
36->11 [style = solid, label="expression"];
31->3 [style = solid, label="expression"];
17->16 [style = bold, label=""];
25->15 [style = dotted, label="false"];
8->6 [style = dotted, label="false"];
14->30 [style = bold, label=""];
36->37 [style = solid, label="expression"];
31->13 [style = solid, label="expression"];
8->23 [style = dotted, label="true"];
9->17 [style = bold, label=""];
5->0 [style = solid, label="value"];
12->35 [style = bold, label=""];
10->0 [style = solid, label="expression"];
17->3 [style = dotted, label="true"];
12->37 [style = bold, label=""];
23->14 [style = bold, label=""];
26->27 [style = bold, label=""];
21->9 [style = bold, label=""];
28->15 [style = solid, label="value"];
19->4 [style = dotted, label="true"];
8->14 [style = dotted, label="true"];
2->28 [style = dashed, label="0"];
5->33 [style = dashed, label="0"];
39->12 [style = bold, label=""];
25->6 [style = dotted, label="true"];
14->18 [style = bold, label=""];
14->15 [style = bold, label=""];
20->7 [style = bold, label=""];
16->20 [style = bold, label=""];
14->6 [style = bold, label=""];
31->30 [style = solid, label="expression"];
12->37 [style = dotted, label="true"];
40->34 [style = dotted, label="true"];
16->13 [style = bold, label=""];
6->26 [style = bold, label=""];
6->18 [style = bold, label=""];
8->2 [style = dotted, label="true"];
3->37 [style = dashed, label="0"];
12->17 [style = bold, label=""];
18->33 [style = bold, label=""];
10->13 [style = solid, label="expression"];
23->0 [style = bold, label=""];
6->15 [style = bold, label=""];
14->30 [style = dotted, label="true"];
10->12 [style = solid, label="expression"];
28->30 [style = solid, label="value"];
8->2 [style = bold, label=""];
31->22 [style = solid, label="expression"];
31->12 [style = solid, label="expression"];
11->22 [style = bold, label=""];
17->3 [style = bold, label=""];
7->18 [style = bold, label=""];
33->32 [style = bold, label=""];
9->12 [style = bold, label=""];
37->35 [style = bold, label=""];
23->0 [style = dotted, label="true"];
31->11 [style = solid, label="expression"];
15->1 [style = bold, label=""];
5->8 [style = bold, label=""];
11->38 [style = bold, label=""];
24->31 [style = dotted, label="true"];
22->21 [style = bold, label=""];
5->6 [style = solid, label="value"];
25->14 [style = dotted, label="true"];
15->18 [style = bold, label=""];
15->26 [style = bold, label=""];
24->10 [style = dotted, label="true"];
18->5 [style = bold, label=""];
33->15 [style = solid, label="value"];
33->30 [style = solid, label="value"];
32->28 [style = bold, label=""];
13->20 [style = bold, label=""];
}
