digraph {
66 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "setClusterConfig(clusterConfig)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),newMasterInstance)@@@85@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
149 [style = filled, label = "_bestpossibleState = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@65@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
145 [style = filled, label = "setupStateModel()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "setupIdealState(3,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68dedb,_numPartition,_numReplica,IdealState.RebalanceMode.SEMI_AUTO,BuiltInStateModelDefinitions.MasterSlave.name())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "pipeline = createPipeline()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
147 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "relayMessage = toSlaveMessage.getRelayMessage(slaveInstance)@@@81@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
91 [style = filled, label = "Pipeline pipeline = createPipeline()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,slaveInstance,relayMessage)@@@89@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
135 [style = filled, label = "_dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
140 [style = filled, label = "_dataCache = new ResourceControllerDataProvider()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@90@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
129 [style = filled, label = "setupInstances(3)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@82@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@78@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
82 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@87@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
118 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@86@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
88 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "pipeline.handle(event)@@@93@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "_messagePipeline.addStage(new ResourceMessageGenerationPhase())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
141 [style = filled, label = "_fullPipeline.addStage(new BestPossibleStateCalcStage())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "_fullPipeline.addStage(new MessageThrottleStage())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@83@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
125 [style = filled, label = "pipeline.handle(event)@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@80@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
136 [style = filled, label = "_messagePipeline.addStage(new MessageSelectionStage())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "pipeline.handle(event)@@@105@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "_fullPipeline.addStage(new MessageSelectionStage())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
148 [style = filled, label = "_fullPipeline.addStage(new ReadClusterDataStage())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@64@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
127 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
97 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
133 [style = filled, label = "_fullPipeline.handle(event)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "pipeline.addStage(new ResourceMessageGenerationPhase())@@@102@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
122 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "Message relayMessage = toSlaveMessage.getRelayMessage(newMasterInstance)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "pipeline.handle(event)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "pipeline.handle(event)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "pipeline.handle(event)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
131 [style = filled, label = "_fullPipeline.addStage(new IntermediateStateCalcStage())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "_fullPipeline = new Pipeline(\"FullPipeline\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
138 [style = filled, label = "_messagePipeline.addStage(new MessageThrottleStage())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
126 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
139 [style = filled, label = "_fullPipeline.addStage(new ResourceMessageGenerationPhase())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
102 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
115 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
128 [style = filled, label = "setupLiveInstances(3)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
107 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
117 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
124 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68df0c,_numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),slaveInstance)@@@84@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
119 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
137 [style = filled, label = "preSetup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "preSetup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@88@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "toSlaveMessage = messages.get(0)@@@77@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "event.addAttribute(AttributeName.ControllerDataProvider.name(),_dataCache)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "_messagePipeline = new Pipeline(\"MessagePipeline\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@76@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "cache = event.getAttribute(AttributeName.ControllerDataProvider.name())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@68db30,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76->42 [style = bold, label=""];
65->9 [style = solid, label="newMasterInstance"];
106->120 [style = bold, label=""];
52->44 [style = bold, label=""];
71->11 [style = bold, label=""];
18->9 [style = solid, label="p"];
18->84 [style = solid, label="p"];
21->140 [style = dashed, label="0"];
67->25 [style = bold, label=""];
0->43 [style = solid, label="bestPossibleStateOutput"];
18->26 [style = solid, label="p"];
0->98 [style = solid, label="bestPossibleStateOutput"];
52->83 [style = solid, label="resourceMap"];
20->0 [style = bold, label=""];
28->81 [style = bold, label=""];
86->4 [style = solid, label="currentStateOutput"];
64->107 [style = dashed, label="0"];
68->66 [style = bold, label=""];
39->61 [style = bold, label=""];
73->21 [style = bold, label=""];
60->50 [style = bold, label=""];
88->100 [style = bold, label=""];
65->30 [style = solid, label="newMasterInstance"];
142->134 [style = bold, label=""];
7->52 [style = bold, label=""];
2->67 [style = bold, label=""];
18->23 [style = solid, label="p"];
95->96 [style = solid, label="currentStateOutput"];
147->7 [style = solid, label="clusterConfig"];
52->140 [style = bold, label=""];
65->124 [style = solid, label="newMasterInstance"];
70->93 [style = bold, label=""];
17->36 [style = bold, label=""];
108->11 [style = bold, label=""];
47->42 [style = solid, label="slaveInstance"];
83->148 [style = dashed, label="0"];
66->88 [style = bold, label=""];
92->54 [style = bold, label=""];
0->127 [style = solid, label="bestPossibleStateOutput"];
65->87 [style = bold, label=""];
137->146 [style = bold, label=""];
79->20 [style = bold, label=""];
5->89 [style = solid, label="masterInstance"];
13->122 [style = bold, label=""];
43->53 [style = bold, label=""];
104->118 [style = bold, label=""];
64->92 [style = bold, label=""];
27->17 [style = bold, label=""];
87->124 [style = solid, label="relayMessage"];
96->53 [style = bold, label=""];
47->67 [style = solid, label="slaveInstance"];
33->45 [style = bold, label=""];
5->63 [style = solid, label="masterInstance"];
18->111 [style = solid, label="p"];
40->31 [style = bold, label=""];
97->98 [style = bold, label=""];
18->74 [style = solid, label="p"];
123->125 [style = bold, label=""];
32->3 [style = bold, label=""];
89->1 [style = bold, label=""];
139->132 [style = bold, label=""];
9->24 [style = bold, label=""];
45->10 [style = bold, label=""];
18->88 [style = solid, label="p"];
57->46 [style = bold, label=""];
102->123 [style = solid, label="currentStateOutput"];
14->37 [style = bold, label=""];
90->51 [style = bold, label=""];
146->145 [style = bold, label=""];
30->84 [style = bold, label=""];
140->135 [style = bold, label=""];
65->61 [style = solid, label="newMasterInstance"];
0->4 [style = solid, label="bestPossibleStateOutput"];
127->113 [style = bold, label=""];
75->59 [style = bold, label=""];
93->90 [style = bold, label=""];
15->34 [style = bold, label=""];
131->139 [style = bold, label=""];
59->89 [style = bold, label=""];
25->76 [style = bold, label=""];
110->105 [style = bold, label=""];
122->106 [style = bold, label=""];
22->43 [style = bold, label=""];
51->79 [style = bold, label=""];
11->146 [style = dashed, label="0"];
26->14 [style = bold, label=""];
39->22 [style = solid, label="instanceStateMap"];
37->29 [style = bold, label=""];
121->115 [style = bold, label=""];
148->141 [style = bold, label=""];
12->78 [style = solid, label="currentStateOutput"];
81->32 [style = bold, label=""];
99->109 [style = bold, label=""];
65->107 [style = solid, label="newMasterInstance"];
47->39 [style = bold, label=""];
37->40 [style = solid, label="toSlaveMessage"];
49->82 [style = bold, label=""];
111->24 [style = bold, label=""];
21->52 [style = solid, label="cache"];
85->73 [style = bold, label=""];
118->119 [style = bold, label=""];
0->102 [style = solid, label="bestPossibleStateOutput"];
23->35 [style = bold, label=""];
4->24 [style = solid, label="currentStateOutput"];
117->104 [style = bold, label=""];
87->31 [style = solid, label="relayMessage"];
61->55 [style = bold, label=""];
86->74 [style = bold, label=""];
18->101 [style = solid, label="p"];
129->128 [style = bold, label=""];
18->124 [style = solid, label="p"];
124->123 [style = bold, label=""];
63->40 [style = bold, label=""];
114->107 [style = bold, label=""];
144->83 [style = bold, label=""];
42->56 [style = bold, label=""];
147->21 [style = bold, label=""];
18->39 [style = solid, label="p"];
54->2 [style = bold, label=""];
5->70 [style = solid, label="masterInstance"];
0->80 [style = bold, label=""];
18->115 [style = solid, label="p"];
53->33 [style = bold, label=""];
36->16 [style = bold, label=""];
21->7 [style = bold, label=""];
9->111 [style = bold, label=""];
18->34 [style = solid, label="p"];
109->47 [style = bold, label=""];
11->62 [style = bold, label=""];
102->97 [style = solid, label="currentStateOutput"];
136->138 [style = bold, label=""];
67->74 [style = solid, label="relayMessage"];
77->6 [style = bold, label=""];
145->129 [style = bold, label=""];
44->57 [style = bold, label=""];
52->144 [style = dashed, label="0"];
10->60 [style = bold, label=""];
105->101 [style = bold, label=""];
87->38 [style = solid, label="relayMessage"];
82->86 [style = bold, label=""];
4->9 [style = bold, label=""];
147->52 [style = solid, label="clusterConfig"];
113->117 [style = bold, label=""];
41->27 [style = bold, label=""];
18->40 [style = solid, label="p"];
91->83 [style = bold, label=""];
126->28 [style = bold, label=""];
62->73 [style = solid, label="clusterConfig"];
18->47 [style = solid, label="p"];
143->136 [style = bold, label=""];
3->47 [style = bold, label=""];
80->26 [style = bold, label=""];
5->112 [style = solid, label="masterInstance"];
73->44 [style = solid, label="resourceMap"];
50->48 [style = bold, label=""];
120->103 [style = bold, label=""];
116->4 [style = bold, label=""];
65->106 [style = solid, label="newMasterInstance"];
24->41 [style = bold, label=""];
6->65 [style = bold, label=""];
18->99 [style = solid, label="p"];
5->31 [style = solid, label="masterInstance"];
72->85 [style = bold, label=""];
47->84 [style = solid, label="slaveInstance"];
119->110 [style = bold, label=""];
48->23 [style = bold, label=""];
73->57 [style = solid, label="resourceMap"];
29->19 [style = bold, label=""];
95->30 [style = bold, label=""];
0->9 [style = solid, label="bestPossibleStateOutput"];
35->114 [style = dashed, label="0"];
78->18 [style = bold, label=""];
87->38 [style = bold, label=""];
141->131 [style = bold, label=""];
115->126 [style = bold, label=""];
88->28 [style = bold, label=""];
18->22 [style = solid, label="p"];
91->130 [style = dashed, label="0"];
47->55 [style = solid, label="slaveInstance"];
100->102 [style = bold, label=""];
112->124 [style = bold, label=""];
46->69 [style = bold, label=""];
12->58 [style = solid, label="currentStateOutput"];
133->149 [style = bold, label=""];
5->81 [style = solid, label="masterInstance"];
19->77 [style = bold, label=""];
8->12 [style = bold, label=""];
43->95 [style = bold, label=""];
38->75 [style = bold, label=""];
16->15 [style = bold, label=""];
132->142 [style = bold, label=""];
128->147 [style = bold, label=""];
58->68 [style = bold, label=""];
8->12 [style = solid, label="bestPossibleStateOutput"];
5->40 [style = solid, label="masterInstance"];
5->70 [style = bold, label=""];
65->56 [style = solid, label="newMasterInstance"];
56->49 [style = bold, label=""];
31->58 [style = bold, label=""];
18->107 [style = solid, label="p"];
102->112 [style = bold, label=""];
140->144 [style = solid, label="_dataCache"];
18->30 [style = solid, label="p"];
65->92 [style = solid, label="newMasterInstance"];
79->133 [style = dashed, label="0"];
74->4 [style = bold, label=""];
5->93 [style = solid, label="masterInstance"];
0->86 [style = solid, label="bestPossibleStateOutput"];
34->13 [style = bold, label=""];
47->111 [style = solid, label="slaveInstance"];
0->95 [style = solid, label="bestPossibleStateOutput"];
101->116 [style = bold, label=""];
69->91 [style = bold, label=""];
18->5 [style = solid, label="p"];
65->87 [style = solid, label="newMasterInstance"];
102->109 [style = solid, label="currentStateOutput"];
1->94 [style = bold, label=""];
55->22 [style = bold, label=""];
130->148 [style = bold, label=""];
18->65 [style = solid, label="p"];
52->8 [style = solid, label="resourceMap"];
84->96 [style = bold, label=""];
65->59 [style = solid, label="newMasterInstance"];
83->8 [style = bold, label=""];
138->133 [style = bold, label=""];
135->144 [style = bold, label=""];
107->97 [style = bold, label=""];
18->63 [style = solid, label="p"];
18->31 [style = solid, label="p"];
7->135 [style = dashed, label="0"];
87->107 [style = solid, label="relayMessage"];
18->5 [style = bold, label=""];
5->99 [style = solid, label="masterInstance"];
62->72 [style = bold, label=""];
5->29 [style = solid, label="masterInstance"];
78->130 [style = bold, label=""];
62->85 [style = solid, label="clusterConfig"];
20->149 [style = dashed, label="0"];
47->74 [style = solid, label="slaveInstance"];
18->112 [style = solid, label="p"];
98->127 [style = bold, label=""];
35->64 [style = bold, label=""];
3->99 [style = bold, label=""];
67->25 [style = solid, label="relayMessage"];
12->78 [style = bold, label=""];
23->114 [style = bold, label=""];
134->143 [style = bold, label=""];
94->63 [style = bold, label=""];
125->121 [style = bold, label=""];
}
