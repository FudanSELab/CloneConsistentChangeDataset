digraph {
105 [style = filled, label = "final Granularity granularity@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "lhs = rhs@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return rhsAligned? Bounds.interval(boundRefKey,rhsInterval): Filtration.matchNothing()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "filter = Bounds.lessThanOrEqualTo(boundRefKey,val)@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "return filter@@@117@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "return null@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "return null@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "final StringComparator comparator = Calcites.getStringComparatorForSqlTypeName(lhs.getType().getSqlTypeName())@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "operatorKind@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "granularity != null@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "return Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return null@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "toSimpleLeafFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String column = lhsExpression.getSimpleExtraction().getColumn()@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "flippedKind = SqlKind.LESS_THAN_OR_EQUAL@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "column.equals(ColumnHolder.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@67@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "buildTimeFloorFilter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "final RexNode rexNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "Preconditions.checkState(operands.size() == 2,\"WTF?! Expected 2 operands, got(%,d(\",operands.size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "column.equals(Column.TIME_COLUMN_NAME) && extractionFn instanceof TimeFormatExtractionFn@@@67@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "final DruidExpression lhsExpression = toDruidExpression(plannerContext,rowSignature,lhs)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "SqlTypeName.TIMESTAMP == rhsLiteral.getTypeName() || SqlTypeName.DATE == rhsLiteral.getTypeName()@@@93@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "val = String.valueOf(Calcites.calciteDateTimeLiteralToJoda(rhsLiteral,plannerContext.getTimeZone()).getMillis())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "return null@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "flippedKind@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,extractionFn,comparator)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "kind == SqlKind.IS_TRUE || kind == SqlKind.IS_NOT_FALSE@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "filter = Bounds.greaterThanOrEqualTo(boundRefKey,val)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "lhs.getKind() == SqlKind.LITERAL && rhs.getKind() != SqlKind.LITERAL@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "kind@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean flip = false@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final SqlKind kind = rexNode.getKind()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "final String val@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "final SqlKind operatorKind@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final Interval rhsInterval = granularity.bucket(DateTimes.utc(rhsMillis))@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "filter = Bounds.equalTo(boundRefKey,val)@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "toSimpleLeafFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
89 [style = filled, label = "queryGranularity != null@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "kind == SqlKind.IS_FALSE || kind == SqlKind.IS_NOT_TRUE@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "filter = Bounds.greaterThan(boundRefKey,val)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "lhsExpression == null@@@54@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "filter = Bounds.lessThan(boundRefKey,val)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "return null@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "rhs = x@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "return toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands()))@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "final long rhsMillis@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SqlTypeName.NUMERIC_TYPES.contains(rhsLiteral.getTypeName())@@@87@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<RexNode> operands = ((RexCall)rexNode).getOperands()@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "return kind == SqlKind.IS_NOT_NULL? new NotDimFilter(equalFilter): equalFilter@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final BoundRefKey boundRefKey = new BoundRefKey(column,null,StringComparators.NUMERIC)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "return rhsAligned? Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "return buildTimeFloorFilter(Column.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "kind == SqlKind.EQUALS || kind == SqlKind.NOT_EQUALS || kind == SqlKind.GREATER_THAN || kind == SqlKind.GREATER_THAN_OR_EQUAL || kind == SqlKind.LESS_THAN || kind == SqlKind.LESS_THAN_OR_EQUAL@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "return rhsAligned? Bounds.interval(boundRefKey,rhsInterval): Filtration.matchNothing()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "final ExtractionFn extractionFn = lhsExpression.getSimpleExtraction().getExtractionFn()@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RexNode lhs = operands.get(0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "return rhsAligned? new NotDimFilter(Bounds.interval(boundRefKey,rhsInterval)): Filtration.matchEverything()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "return new LikeDimFilter(druidExpression.getSimpleExtraction().getColumn(),RexLiteral.stringValue(operands.get(1)),operands.size() > 2? RexLiteral.stringValue(operands.get(2)): null,druidExpression.getSimpleExtraction().getExtractionFn())@@@125@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "return rhsAligned? Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "throw new IllegalStateException(\"WTF?! Shouldn't have got here...\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "val = String.valueOf(RexLiteral.value(rhsLiteral))@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "flippedKind = kind@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "return null@@@128@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final Granularity queryGranularity = toQueryGranularity(lhsExpression,plannerContext.getExprMacroTable())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "final DimFilter filter@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "return Bounds.greaterThanOrEqualTo(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operand)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return rhsAligned? new NotDimFilter(Bounds.interval(boundRefKey,rhsInterval)): Filtration.matchEverything()@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final DruidExpression druidExpression = toDruidExpression(plannerContext,rowSignature,operands.get(0))@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "return buildTimeFloorFilter(ColumnHolder.TIME_COLUMN_NAME,queryGranularity,flippedKind,rhsMillis)@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "final PlannerContext plannerContext@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "throw new ISE(\"WTF?! Kind(%s( not expected here\",kind)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final RexNode rexNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RexNode x = lhs@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "flippedKind = kind@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "rhs.getKind() != SqlKind.LITERAL@@@50@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "return rhsAligned? Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@122@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "kind == SqlKind.LIKE@@@119@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "flippedKind = SqlKind.GREATER_THAN_OR_EQUAL@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final boolean rhsAligned = rhsInterval.getStartMillis() == rhsMillis@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "final String column@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final RowSignature rowSignature@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final long rhsMillis = Calcites.calciteDateTimeLiteralToJoda(rhs,plannerContext.getTimeZone()).getMillis()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "final RowSignature rowSignature@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "flippedKind = SqlKind.LESS_THAN@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "return Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "!lhsExpression.isSimpleExtraction()@@@62@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final SqlKind flippedKind@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "flippedKind@@@102@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RexNode operand = Iterables.getOnlyElement(((RexCall)rexNode).getOperands())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return new NotDimFilter(toSimpleLeafFilter(plannerContext,rowSignature,Iterables.getOnlyElement(((RexCall)rexNode).getOperands())))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "flip@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "RexNode rhs = operands.get(1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "val = String.valueOf(RexLiteral.stringValue(rhsLiteral))@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final DimFilter equalFilter = new SelectorDimFilter(druidExpression.getSimpleExtraction().getColumn(),NullHandling.defaultStringValue(),druidExpression.getSimpleExtraction().getExtractionFn())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "SqlTypeName.CHAR_TYPES.contains(rhsLiteral.getTypeName())@@@90@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "return rhsAligned? Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getStartMillis())): Bounds.lessThan(boundRefKey,String.valueOf(rhsInterval.getEndMillis()))@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RexLiteral rhsLiteral = (RexLiteral)rhs@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "druidExpression == null || !druidExpression.isSimpleExtraction()@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "kind == SqlKind.IS_NULL || kind == SqlKind.IS_NOT_NULL@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "filter = new NotDimFilter(Bounds.equalTo(boundRefKey,val))@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Granularity granularity = ExtractionFns.toQueryGranularity(extractionFn)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "flip = true@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return null@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->5 [style = solid, label="flippedKind"];
7->55 [style = solid, label="rhsLiteral"];
107->108 [style = solid, label="rhsInterval"];
22->60 [style = dotted, label="true"];
16->73 [style = solid, label="filter"];
1->65 [style = solid, label="rhsMillis"];
75->31 [style = dotted, label="true"];
79->27 [style = bold, label=""];
90->86 [style = dotted, label="true"];
48->79 [style = solid, label="rhsAligned"];
89->12 [style = bold, label=""];
59->85 [style = solid, label="val"];
89->10 [style = bold, label=""];
78->96 [style = dashed, label="0"];
34->5 [style = solid, label="flippedKind"];
99->110 [style = dotted, label="true"];
3->76 [style = bold, label=""];
90->26 [style = dotted, label="true"];
6->64 [style = solid, label="equalFilter"];
35->50 [style = solid, label="flip"];
51->96 [style = solid, label="queryGranularity"];
3->76 [style = dotted, label="true"];
101->106 [style = solid, label="rhsAligned"];
90->42 [style = dotted, label="true"];
89->78 [style = dotted, label="true"];
42->66 [style = solid, label="lhsExpression"];
108->113 [style = bold, label=""];
65->24 [style = solid, label="rhsInterval"];
34->78 [style = solid, label="flippedKind"];
101->100 [style = solid, label="rhsAligned"];
55->67 [style = solid, label="val"];
101->108 [style = solid, label="rhsAligned"];
66->54 [style = dotted, label="true"];
104->106 [style = solid, label="boundRefKey"];
85->73 [style = solid, label="filter"];
83->68 [style = bold, label=""];
5->71 [style = dotted, label="true"];
59->67 [style = solid, label="val"];
53->3 [style = solid, label="flippedKind"];
90->81 [style = dotted, label="true"];
26->78 [style = solid, label="flippedKind"];
50->46 [style = dotted, label="false"];
38->18 [style = dotted, label="true"];
77->5 [style = solid, label="flippedKind"];
38->18 [style = bold, label=""];
62->93 [style = bold, label=""];
7->2 [style = bold, label=""];
14->57 [style = bold, label=""];
47->93 [style = dashed, label="0"];
51->89 [style = bold, label=""];
48->0 [style = solid, label="rhsAligned"];
63->14 [style = bold, label=""];
55->85 [style = solid, label="val"];
28->20 [style = dotted, label="true"];
92->81 [style = bold, label=""];
90->89 [style = dotted, label="true"];
41->80 [style = solid, label="kind"];
2->92 [style = bold, label=""];
38->63 [style = dotted, label="true"];
3->49 [style = dotted, label="true"];
3->85 [style = bold, label=""];
72->73 [style = solid, label="filter"];
22->1 [style = dotted, label="true"];
90->93 [style = dotted, label="true"];
60->27 [style = solid, label="boundRefKey"];
107->111 [style = solid, label="rhsInterval"];
70->4 [style = bold, label=""];
97->61 [style = dotted, label="true"];
90->51 [style = dotted, label="true"];
23->25 [style = dotted, label="true"];
80->39 [style = dotted, label="true"];
88->55 [style = bold, label=""];
5->71 [style = bold, label=""];
32->45 [style = bold, label=""];
23->6 [style = dotted, label="true"];
34->45 [style = bold, label=""];
42->66 [style = bold, label=""];
3->85 [style = dotted, label="true"];
48->60 [style = bold, label=""];
69->35 [style = bold, label=""];
62->87 [style = solid, label="extractionFn"];
53->5 [style = solid, label="flippedKind"];
90->15 [style = dotted, label="true"];
104->108 [style = solid, label="boundRefKey"];
9->25 [style = bold, label=""];
59->76 [style = solid, label="val"];
90->50 [style = dotted, label="true"];
99->111 [style = dotted, label="true"];
90->38 [style = dotted, label="false"];
46->96 [style = solid, label="flippedKind"];
12->52 [style = bold, label=""];
109->104 [style = solid, label="column"];
111->108 [style = bold, label=""];
89->96 [style = dotted, label="true"];
10->96 [style = solid, label="rhsMillis"];
17->63 [style = solid, label="druidExpression"];
55->81 [style = bold, label=""];
65->48 [style = bold, label=""];
58->32 [style = dotted, label="true"];
69->7 [style = solid, label="rhs"];
41->38 [style = solid, label="kind"];
41->90 [style = solid, label="kind"];
107->101 [style = bold, label=""];
58->34 [style = dotted, label="true"];
90->70 [style = dotted, label="true"];
59->16 [style = solid, label="val"];
5->43 [style = dotted, label="true"];
99->108 [style = bold, label=""];
102->101 [style = solid, label="rhsMillis"];
8->81 [style = bold, label=""];
61->25 [style = solid, label="plannerContext"];
41->32 [style = solid, label="kind"];
38->33 [style = dotted, label="false"];
23->90 [style = bold, label=""];
62->47 [style = solid, label="extractionFn"];
13->22 [style = bold, label=""];
93->13 [style = dotted, label="true"];
28->23 [style = dotted, label="false"];
80->39 [style = bold, label=""];
95->42 [style = solid, label="rowSignature"];
48->24 [style = solid, label="rhsAligned"];
61->42 [style = solid, label="plannerContext"];
5->37 [style = bold, label=""];
58->77 [style = dotted, label="true"];
87->67 [style = solid, label="boundRefKey"];
3->72 [style = bold, label=""];
58->53 [style = dotted, label="true"];
36->42 [style = solid, label="lhs"];
30->20 [style = solid, label="rowSignature"];
95->17 [style = solid, label="rowSignature"];
51->89 [style = solid, label="queryGranularity"];
67->73 [style = bold, label=""];
23->9 [style = dotted, label="true"];
49->73 [style = bold, label=""];
9->25 [style = solid, label="operand"];
55->76 [style = solid, label="val"];
87->16 [style = solid, label="boundRefKey"];
75->69 [style = dotted, label="true"];
63->14 [style = dotted, label="true"];
45->21 [style = bold, label=""];
58->34 [style = bold, label=""];
26->96 [style = solid, label="flippedKind"];
93->13 [style = bold, label=""];
103->105 [style = dotted, label="true"];
87->76 [style = solid, label="boundRefKey"];
100->106 [style = bold, label=""];
30->39 [style = solid, label="rowSignature"];
103->112 [style = dotted, label="true"];
81->87 [style = bold, label=""];
60->24 [style = solid, label="boundRefKey"];
50->58 [style = bold, label=""];
32->78 [style = solid, label="flippedKind"];
59->72 [style = solid, label="val"];
63->57 [style = bold, label=""];
41->64 [style = solid, label="kind"];
59->49 [style = solid, label="val"];
77->96 [style = solid, label="flippedKind"];
58->53 [style = bold, label=""];
74->45 [style = bold, label=""];
80->28 [style = dotted, label="false"];
10->78 [style = bold, label=""];
90->2 [style = dotted, label="true"];
47->22 [style = dotted, label="true"];
55->16 [style = solid, label="val"];
61->17 [style = solid, label="plannerContext"];
93->22 [style = dotted, label="true"];
1->65 [style = bold, label=""];
4->50 [style = solid, label="flip"];
29->41 [style = bold, label=""];
12->15 [style = bold, label=""];
41->23 [style = solid, label="kind"];
86->31 [style = solid, label="rhs"];
46->78 [style = solid, label="flippedKind"];
90->45 [style = dotted, label="true"];
99->113 [style = bold, label=""];
10->96 [style = bold, label=""];
95->25 [style = solid, label="rowSignature"];
104->111 [style = solid, label="boundRefKey"];
38->17 [style = dotted, label="true"];
15->87 [style = solid, label="column"];
3->91 [style = bold, label=""];
32->96 [style = solid, label="flippedKind"];
46->45 [style = bold, label=""];
97->41 [style = bold, label=""];
45->21 [style = dotted, label="true"];
3->49 [style = bold, label=""];
25->56 [style = solid, label="druidExpression"];
5->27 [style = bold, label=""];
77->3 [style = solid, label="flippedKind"];
1->48 [style = solid, label="rhsMillis"];
23->9 [style = bold, label=""];
53->45 [style = bold, label=""];
5->37 [style = dotted, label="true"];
3->16 [style = dotted, label="true"];
58->11 [style = dotted, label="true"];
110->98 [style = bold, label=""];
2->88 [style = dotted, label="false"];
8->85 [style = solid, label="val"];
58->32 [style = bold, label=""];
41->58 [style = solid, label="kind"];
95->20 [style = solid, label="rowSignature"];
53->78 [style = solid, label="flippedKind"];
8->16 [style = solid, label="val"];
48->43 [style = solid, label="rhsAligned"];
36->86 [style = bold, label=""];
87->82 [style = bold, label=""];
13->22 [style = solid, label="granularity"];
30->25 [style = solid, label="rowSignature"];
5->24 [style = dotted, label="true"];
22->59 [style = bold, label=""];
90->82 [style = dotted, label="true"];
75->19 [style = bold, label=""];
99->106 [style = bold, label=""];
90->87 [style = dotted, label="true"];
61->39 [style = solid, label="plannerContext"];
11->96 [style = solid, label="flippedKind"];
46->3 [style = solid, label="flippedKind"];
11->5 [style = solid, label="flippedKind"];
97->95 [style = dotted, label="true"];
90->75 [style = dotted, label="true"];
99->98 [style = bold, label=""];
58->11 [style = bold, label=""];
88->83 [style = bold, label=""];
87->72 [style = solid, label="boundRefKey"];
60->0 [style = solid, label="boundRefKey"];
31->69 [style = bold, label=""];
65->0 [style = solid, label="rhsInterval"];
24->0 [style = bold, label=""];
77->45 [style = bold, label=""];
7->92 [style = solid, label="rhsLiteral"];
67->73 [style = solid, label="filter"];
8->72 [style = solid, label="val"];
41->46 [style = solid, label="kind"];
85->73 [style = bold, label=""];
66->54 [style = bold, label=""];
113->100 [style = bold, label=""];
3->67 [style = bold, label=""];
90->59 [style = dotted, label="true"];
80->28 [style = bold, label=""];
66->51 [style = bold, label=""];
92->16 [style = solid, label="val"];
3->67 [style = dotted, label="true"];
38->33 [style = bold, label=""];
46->5 [style = solid, label="flippedKind"];
99->98 [style = dotted, label="true"];
56->6 [style = bold, label=""];
10->78 [style = solid, label="rhsMillis"];
59->7 [style = bold, label=""];
51->78 [style = solid, label="queryGranularity"];
0->71 [style = bold, label=""];
75->26 [style = bold, label=""];
31->42 [style = solid, label="lhs"];
55->72 [style = solid, label="val"];
88->83 [style = dotted, label="false"];
47->59 [style = bold, label=""];
102->107 [style = solid, label="rhsMillis"];
60->5 [style = bold, label=""];
22->5 [style = dotted, label="true"];
99->100 [style = bold, label=""];
28->23 [style = bold, label=""];
58->74 [style = bold, label=""];
11->3 [style = solid, label="flippedKind"];
5->24 [style = bold, label=""];
5->27 [style = dotted, label="true"];
58->74 [style = dotted, label="true"];
90->38 [style = bold, label=""];
78->12 [style = bold, label=""];
15->60 [style = solid, label="column"];
35->26 [style = bold, label=""];
41->28 [style = solid, label="kind"];
54->51 [style = bold, label=""];
40->70 [style = bold, label=""];
87->49 [style = solid, label="boundRefKey"];
22->65 [style = dotted, label="true"];
19->31 [style = bold, label=""];
49->73 [style = solid, label="filter"];
25->56 [style = bold, label=""];
90->62 [style = dotted, label="true"];
11->45 [style = bold, label=""];
103->109 [style = dotted, label="true"];
29->44 [style = dotted, label="true"];
15->62 [style = bold, label=""];
32->3 [style = solid, label="flippedKind"];
101->99 [style = bold, label=""];
5->43 [style = bold, label=""];
56->84 [style = bold, label=""];
56->84 [style = dotted, label="true"];
43->79 [style = bold, label=""];
26->50 [style = bold, label=""];
68->81 [style = bold, label=""];
60->79 [style = solid, label="boundRefKey"];
50->58 [style = dotted, label="true"];
29->30 [style = dotted, label="true"];
42->51 [style = solid, label="lhsExpression"];
87->85 [style = solid, label="boundRefKey"];
47->13 [style = dotted, label="true"];
103->102 [style = dotted, label="true"];
90->66 [style = dotted, label="true"];
12->52 [style = dotted, label="true"];
36->19 [style = solid, label="lhs"];
23->64 [style = dotted, label="true"];
41->74 [style = solid, label="kind"];
21->42 [style = bold, label=""];
90->3 [style = dotted, label="true"];
28->20 [style = bold, label=""];
90->36 [style = dotted, label="true"];
86->75 [style = bold, label=""];
92->85 [style = solid, label="val"];
106->110 [style = bold, label=""];
55->49 [style = solid, label="val"];
88->55 [style = dotted, label="true"];
3->16 [style = bold, label=""];
5->79 [style = dotted, label="true"];
104->107 [style = bold, label=""];
99->100 [style = dotted, label="true"];
103->104 [style = bold, label=""];
76->73 [style = bold, label=""];
17->63 [style = bold, label=""];
99->110 [style = bold, label=""];
6->64 [style = bold, label=""];
41->80 [style = bold, label=""];
5->0 [style = bold, label=""];
90->73 [style = dotted, label="true"];
104->100 [style = solid, label="boundRefKey"];
112->99 [style = solid, label="operatorKind"];
29->61 [style = dotted, label="true"];
72->73 [style = bold, label=""];
45->42 [style = bold, label=""];
4->36 [style = bold, label=""];
60->71 [style = solid, label="boundRefKey"];
89->10 [style = dotted, label="true"];
32->5 [style = solid, label="flippedKind"];
90->4 [style = dotted, label="true"];
26->3 [style = solid, label="flippedKind"];
3->91 [style = dotted, label="true"];
53->96 [style = solid, label="flippedKind"];
62->13 [style = solid, label="extractionFn"];
19->69 [style = solid, label="x"];
34->96 [style = solid, label="flippedKind"];
104->113 [style = solid, label="boundRefKey"];
11->78 [style = solid, label="flippedKind"];
2->92 [style = dotted, label="true"];
16->73 [style = bold, label=""];
75->35 [style = dotted, label="true"];
90->12 [style = dotted, label="true"];
30->42 [style = solid, label="rowSignature"];
52->15 [style = bold, label=""];
30->17 [style = solid, label="rowSignature"];
38->57 [style = dotted, label="true"];
82->3 [style = bold, label=""];
82->73 [style = solid, label="filter"];
60->43 [style = solid, label="boundRefKey"];
83->68 [style = dotted, label="false"];
5->0 [style = dotted, label="true"];
99->108 [style = dotted, label="true"];
47->13 [style = bold, label=""];
92->67 [style = solid, label="val"];
5->79 [style = bold, label=""];
8->76 [style = solid, label="val"];
61->20 [style = solid, label="plannerContext"];
8->67 [style = solid, label="val"];
27->37 [style = bold, label=""];
76->73 [style = solid, label="filter"];
90->40 [style = dotted, label="true"];
81->87 [style = solid, label="comparator"];
97->94 [style = dotted, label="true"];
99->106 [style = dotted, label="true"];
2->88 [style = bold, label=""];
96->12 [style = bold, label=""];
34->3 [style = solid, label="flippedKind"];
22->48 [style = dotted, label="true"];
83->8 [style = dotted, label="true"];
3->72 [style = dotted, label="true"];
62->47 [style = bold, label=""];
22->1 [style = bold, label=""];
92->76 [style = solid, label="val"];
90->47 [style = dotted, label="true"];
92->72 [style = solid, label="val"];
86->7 [style = solid, label="rhs"];
23->90 [style = dotted, label="false"];
58->77 [style = bold, label=""];
75->19 [style = dotted, label="true"];
93->59 [style = bold, label=""];
50->46 [style = bold, label=""];
90->40 [style = bold, label=""];
62->93 [style = solid, label="extractionFn"];
92->49 [style = solid, label="val"];
18->17 [style = bold, label=""];
77->78 [style = solid, label="flippedKind"];
95->39 [style = solid, label="rowSignature"];
83->8 [style = bold, label=""];
71->43 [style = bold, label=""];
104->110 [style = solid, label="boundRefKey"];
90->7 [style = dotted, label="true"];
99->111 [style = bold, label=""];
37->59 [style = bold, label=""];
84->6 [style = bold, label=""];
101->111 [style = solid, label="rhsAligned"];
23->56 [style = dotted, label="true"];
8->49 [style = solid, label="val"];
91->73 [style = bold, label=""];
99->113 [style = dotted, label="true"];
}
