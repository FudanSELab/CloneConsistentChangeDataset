digraph {
2 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e73,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e79,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e7f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e85,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e8b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e91,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e97,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970e9d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970ea3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970ea9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970eaf,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970eb5,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970ebb,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970ec1))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"channel\",\"#en.wikipedia\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableList.of())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\"),null,ImmutableList.of())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY,null,null),originalFilter,true)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(\"v1\",\"concat('virtual-column-', \"channel\")\",ValueType.STRING,TestExprMacroTable.INSTANCE))),Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f3b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f41,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f47,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f4d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f53,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f59,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f5f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f65,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f6b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f71,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f77,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f7d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f83,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@970f89))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,originalFilter,true)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT)))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->11 [style = dashed, label="0"];
0->7 [style = solid, label="adapter"];
2->4 [style = bold, label=""];
3->2 [style = solid, label="actualFilterSplit"];
8->0 [style = bold, label=""];
3->2 [style = bold, label=""];
1->7 [style = solid, label="originalFilter"];
7->2 [style = solid, label="actualFilterSplit"];
2->11 [style = bold, label=""];
6->0 [style = bold, label=""];
10->2 [style = solid, label="expectedFilterSplit"];
9->0 [style = bold, label=""];
1->3 [style = solid, label="originalFilter"];
5->2 [style = solid, label="expectedFilterSplit"];
0->1 [style = bold, label=""];
10->3 [style = bold, label=""];
3->7 [style = dashed, label="0"];
12->10 [style = bold, label=""];
0->12 [style = bold, label=""];
1->4 [style = solid, label="originalFilter"];
1->12 [style = dashed, label="0"];
5->10 [style = dashed, label="0"];
5->3 [style = bold, label=""];
12->3 [style = solid, label="originalFilter"];
0->3 [style = solid, label="adapter"];
5->7 [style = bold, label=""];
12->11 [style = solid, label="originalFilter"];
1->5 [style = bold, label=""];
7->2 [style = bold, label=""];
}
