digraph {
4 [style = filled, label = "testTransform['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "File in = getFile(\"/taskdefs/optional/xsltliaison-encoding-in.xml\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "File out = new File(\"xsltliaison.tmp\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "File xsl = getFile(\"/taskdefs/optional/xsltliaison-in.xsl\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "File xsl = getFile(\"/taskdefs/optional/xsltliaison-encoding-in.xsl\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Document doc = parseXML(out)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "liaison.transform(in,out)@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "File in = getFile(\"/taskdefs/optional/xsltliaison-in.xml\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{out.delete()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "File out = new File(\"xsltliaison-encoding.tmp\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testEncoding['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "out.deleteOnExit()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{out.delete()}@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"éàèïù\",doc.getDocumentElement().getFirstChild().getFirstChild().getNodeValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "liaison.addParam(\"param\",\"value\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "liaison.transform(in,out)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "File out = testFolder.newFile(\"xsltliaison.tmp\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "testTransform['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "liaison.setStylesheet(xsl)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"message\",doc.getDocumentElement().getFirstChild().getNodeName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "out.deleteOnExit()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"root\",doc.getDocumentElement().getNodeName())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->13 [style = bold, label=""];
7->1 [style = bold, label=""];
17->1 [style = bold, label=""];
10->9 [style = solid, label="out"];
2->6 [style = bold, label=""];
12->21 [style = bold, label=""];
18->1 [style = solid, label="out"];
19->20 [style = bold, label=""];
20->0 [style = bold, label=""];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
20->0 [style = solid, label="xsl"];
14->17 [style = solid, label="in"];
18->17 [style = solid, label="out"];
2->10 [style = bold, label=""];
2->9 [style = solid, label="in"];
5->20 [style = dashed, label="0"];
6->10 [style = dashed, label="0"];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
0->14 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
0->8 [style = bold, label=""];
6->1 [style = solid, label="out"];
1->12 [style = bold, label=""];
21->16 [style = bold, label=""];
2->18 [style = dashed, label="0"];
14->18 [style = bold, label=""];
10->9 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = solid, label="xsl"];
4->5 [style = bold, label=""];
2->1 [style = solid, label="in"];
}
