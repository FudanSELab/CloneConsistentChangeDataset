digraph {
2 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveForwardBetween().left,constructTMDsMoveForwardBetween(),expectedResult.asImmutableView())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedResult.put(cAddress,fullReplica(cAddress,twoToken,threeToken))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DatabaseDescriptor.setTransientReplicationEnabledUnsafe(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectedResult.put(dAddress,transientReplica(dAddress,twoToken,threeToken))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "invokeCalculateRangesToStreamWithPreferredEndpoints(calculateStreamAndFetchRangesMoveBackward().left,constructTMDsMoveBackward(),expectedResult.asImmutableView())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RangesByEndpoint.Mutable expectedResult = new RangesByEndpoint.Mutable()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "expectedResult.put(address02,transientReplica(address02,nineToken,elevenToken))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "expectedResult.put(address02,fullReplica(address02,elevenToken,oneToken))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "expectedResult.put(bAddress,transientReplica(bAddress,nineToken,elevenToken))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "testMoveForwardBetweenCalculateRangesToStreamWithPreferredEndpoints['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "expectedResult.put(bAddress,fullReplica(bAddress,elevenToken,oneToken))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testMoveBackwardCalculateRangesToStreamWithPreferredEndpoints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
4->9 [style = bold, label=""];
5->1 [style = bold, label=""];
1->8 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
11->12 [style = bold, label=""];
9->10 [style = bold, label=""];
5->6 [style = dashed, label="0"];
8->2 [style = bold, label=""];
12->4 [style = bold, label=""];
4->6 [style = bold, label=""];
4->5 [style = bold, label=""];
3->4 [style = bold, label=""];
5->4 [style = dashed, label="0"];
7->3 [style = bold, label=""];
6->8 [style = bold, label=""];
2->10 [style = dashed, label="0"];
}
