digraph {
13 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "final Integer someDefaultValue = -1@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithShortExpireTime())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "someProperties.setProperty(someKey,String.valueOf(someValue))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Integer someValue = 2@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Long someValue = 2L@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String someKey = \"someKey\"@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(someValue,defaultConfig.getLongProperty(someKey,someDefaultValue))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "someProperties.setProperty(someStringKey,someStringValue)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testGetLongProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "someProperties = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String someStringValue = \"someStringValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "await().atMost(500,TimeUnit.MILLISECONDS).untilAsserted(new ThrowingRunnable(){@Override public void run(){assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))verify(someProperties,times(2)).getProperty(someKey)}})@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(50)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "someProperties = new Properties()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String someStringKey = \"someStringKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final String someKey = \"someKey\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "Long someDefaultValue = -1L@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "assertEquals(someDefaultValue,defaultConfig.getLongProperty(someStringKey,someDefaultValue))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19->1 [style = solid, label="someValue"];
13->10 [style = bold, label=""];
22->25 [style = bold, label=""];
12->5 [style = solid, label="someKey"];
7->5 [style = solid, label="someValue"];
15->2 [style = bold, label=""];
16->0 [style = bold, label=""];
12->13 [style = solid, label="someKey"];
1->8 [style = bold, label=""];
31->22 [style = bold, label=""];
12->20 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
23->27 [style = bold, label=""];
3->21 [style = dashed, label="0"];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
6->8 [style = solid, label="someProperties"];
7->15 [style = solid, label="someValue"];
1->27 [style = dashed, label="0"];
16->11 [style = solid, label="someDefaultValue"];
8->3 [style = bold, label=""];
30->23 [style = bold, label=""];
4->15 [style = solid, label="someDefaultValue"];
3->11 [style = bold, label=""];
20->11 [style = solid, label="someKey"];
4->24 [style = solid, label="someKey"];
25->4 [style = bold, label=""];
12->11 [style = solid, label="someKey"];
28->26 [style = bold, label=""];
4->14 [style = solid, label="someDefaultValue"];
22->23 [style = solid, label="someStringKey"];
24->29 [style = bold, label=""];
4->26 [style = dashed, label="0"];
7->4 [style = bold, label=""];
5->29 [style = dashed, label="0"];
7->11 [style = solid, label="someValue"];
20->17 [style = solid, label="someKey"];
16->5 [style = solid, label="someDefaultValue"];
12->14 [style = solid, label="someKey"];
12->7 [style = bold, label=""];
4->28 [style = bold, label=""];
4->5 [style = solid, label="someDefaultValue"];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
26->30 [style = bold, label=""];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
13->17 [style = bold, label=""];
18->20 [style = bold, label=""];
25->23 [style = solid, label="someStringValue"];
7->14 [style = solid, label="someValue"];
27->11 [style = bold, label=""];
21->11 [style = bold, label=""];
16->17 [style = solid, label="someDefaultValue"];
7->19 [style = dashed, label="0"];
7->28 [style = dashed, label="0"];
22->29 [style = solid, label="someStringKey"];
30->11 [style = solid, label="someProperties"];
5->24 [style = bold, label=""];
5->13 [style = bold, label=""];
26->29 [style = solid, label="someDefaultValue"];
11->24 [style = dashed, label="0"];
4->27 [style = solid, label="someKey"];
20->13 [style = solid, label="someKey"];
10->17 [style = dashed, label="0"];
26->24 [style = solid, label="someDefaultValue"];
8->21 [style = bold, label=""];
12->15 [style = solid, label="someKey"];
4->11 [style = solid, label="someDefaultValue"];
20->5 [style = solid, label="someKey"];
28->27 [style = solid, label="someValue"];
14->15 [style = bold, label=""];
28->24 [style = solid, label="someValue"];
9->12 [style = bold, label=""];
19->17 [style = solid, label="someValue"];
20->19 [style = bold, label=""];
12->2 [style = solid, label="someKey"];
7->1 [style = solid, label="someValue"];
19->11 [style = solid, label="someValue"];
6->23 [style = dashed, label="0"];
19->5 [style = solid, label="someValue"];
}
