digraph {
22 [style = filled, label = "return null@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue() && qInput1Cond.isAlwaysTrue())@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final MutableCalc qInput1 = (MutableCalc)query.getRight()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "return null@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return null@@@55@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "compenProjs.add(shifted)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final MutableCalc compensatingCalc = MutableCalc.of(target,compensatingRexProgram)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "splitted != null && splitted.isAlwaysTrue()@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compenCalc)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final JoinRelType joinRelType = sameJoinType(query.joinType,target.joinType)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput0Explained = explainCalc(qInput0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "UnifyRuleCall call@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i++@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final List<RexNode> identityProjects = (List<RexNode>)rexBuilder.identityProjects(qInput1.rowType)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final MutableCalc qInput0 = (MutableCalc)query.getLeft()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{int newIdx = idx - fieldCnt(qInput0) + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "return null@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue())@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final RexNode qInput0Cond = qInput0Explained.left@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput1Explained = explainCalc(qInput1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "UnifyRuleCall call@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "final MutableRel qInput1 = query.getRight()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i < fieldCnt(qInput0)@@@43@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<RexNode> qInput1Projs = qInput1Explained.right@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final RexProgram compenRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,identityProjects)@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RexNode compenCond = RexUtil.composeConjunction(rexBuilder,ImmutableList.of(qInput0Cond,qInput1CondShifted))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "compenProjs.add(qInput0Projs.get(i))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final int newIdx = i - fieldCnt(qInput0) + fieldCnt(qInput0.getInput())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < fieldCnt(query)@@@41@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "compenProjs.add(new RexInputRef(newIdx,query.rowType.getFieldList().get(i).getType()))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "joinRelType == null@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,qInput1Projs)@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final RexNode qInput1Cond = qInput1Explained.left@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<RexNode> qInput0Projs = qInput0Explained.right@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final MutableJoin target = (MutableJoin)call.target@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "i++@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final MutableJoin query = (MutableJoin)call.query@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final RexBuilder rexBuilder = call.getCluster().getRexBuilder()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final MutableCalc compenCalc = MutableCalc.of(target,compenRexProgram)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final RexNode compenCond = qInput0Cond@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compensatingCalc)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->30 [style = bold, label=""];
20->32 [style = dotted, label="true"];
29->13 [style = bold, label=""];
36->15 [style = dotted, label="true"];
18->27 [style = solid, label="qInput1"];
9->31 [style = solid, label="rexBuilder"];
34->19 [style = solid, label="compensatingCalc"];
35->4 [style = bold, label=""];
35->36 [style = dotted, label="true"];
8->35 [style = bold, label=""];
33->37 [style = dashed, label="0"];
39->42 [style = bold, label=""];
12->33 [style = dotted, label="true"];
33->19 [style = solid, label="call"];
10->18 [style = bold, label=""];
8->19 [style = dotted, label="true"];
1->4 [style = solid, label="qInput0Cond"];
26->25 [style = bold, label=""];
13->11 [style = bold, label=""];
51->33 [style = dotted, label="true"];
13->22 [style = dotted, label="true"];
17->8 [style = bold, label=""];
8->5 [style = dotted, label="true"];
15->40 [style = dotted, label="false"];
5->3 [style = solid, label="i"];
6->45 [style = solid, label="joinRelType"];
8->36 [style = dotted, label="true"];
3->50 [style = bold, label=""];
49->2 [style = bold, label=""];
42->44 [style = bold, label=""];
31->34 [style = bold, label=""];
46->5 [style = bold, label=""];
35->48 [style = bold, label=""];
10->15 [style = solid, label="qInput0"];
14->5 [style = bold, label=""];
40->50 [style = bold, label=""];
31->43 [style = bold, label=""];
5->15 [style = solid, label="i"];
31->34 [style = solid, label="compensatingRexProgram"];
28->36 [style = solid, label="i"];
44->8 [style = solid, label="newQueryJoinCond"];
50->3 [style = solid, label="i"];
5->50 [style = solid, label="i"];
35->46 [style = dotted, label="true"];
23->40 [style = solid, label="newIdx"];
20->32 [style = bold, label=""];
15->23 [style = bold, label=""];
8->34 [style = dotted, label="true"];
46->31 [style = solid, label="compenProjs"];
47->39 [style = bold, label=""];
35->31 [style = dotted, label="true"];
17->8 [style = solid, label="splitted"];
50->23 [style = solid, label="i"];
6->21 [style = solid, label="joinRelType"];
11->17 [style = bold, label=""];
6->20 [style = bold, label=""];
7->36 [style = solid, label="query"];
30->40 [style = dashed, label="0"];
45->29 [style = bold, label=""];
8->2 [style = bold, label=""];
38->7 [style = bold, label=""];
35->5 [style = dotted, label="true"];
23->30 [style = solid, label="shifted"];
25->9 [style = bold, label=""];
15->3 [style = bold, label=""];
1->48 [style = solid, label="qInput0Cond"];
44->8 [style = bold, label=""];
30->28 [style = bold, label=""];
35->49 [style = dotted, label="true"];
21->29 [style = dotted, label="true"];
25->34 [style = solid, label="target"];
6->20 [style = solid, label="joinRelType"];
24->25 [style = bold, label=""];
19->2 [style = bold, label=""];
39->44 [style = bold, label=""];
18->41 [style = dashed, label="0"];
21->13 [style = bold, label=""];
50->36 [style = bold, label=""];
25->43 [style = solid, label="target"];
35->2 [style = bold, label=""];
43->49 [style = bold, label=""];
31->43 [style = solid, label="compenRexProgram"];
19->49 [style = dashed, label="0"];
34->43 [style = dashed, label="0"];
15->23 [style = dotted, label="false"];
39->42 [style = dotted, label="true"];
50->36 [style = solid, label="i"];
8->31 [style = dotted, label="true"];
32->45 [style = bold, label=""];
41->0 [style = bold, label=""];
45->29 [style = dotted, label="true"];
5->28 [style = solid, label="i"];
9->6 [style = bold, label=""];
29->47 [style = bold, label=""];
10->0 [style = solid, label="qInput0"];
43->49 [style = solid, label="compenCalc"];
15->30 [style = dotted, label="false"];
23->40 [style = bold, label=""];
16->35 [style = solid, label="qInput1Cond"];
1->26 [style = bold, label=""];
35->48 [style = dotted, label="true"];
11->44 [style = dashed, label="0"];
5->36 [style = bold, label=""];
8->35 [style = solid, label="splitted"];
38->37 [style = dotted, label="true"];
5->36 [style = solid, label="i"];
36->28 [style = dotted, label="true"];
35->43 [style = dotted, label="true"];
10->23 [style = solid, label="qInput0"];
11->17 [style = solid, label="newQueryJoinCond"];
22->11 [style = bold, label=""];
28->15 [style = solid, label="i"];
4->31 [style = solid, label="compenCond"];
5->23 [style = solid, label="i"];
12->7 [style = bold, label=""];
16->24 [style = bold, label=""];
28->23 [style = solid, label="i"];
28->3 [style = solid, label="i"];
33->49 [style = solid, label="call"];
14->31 [style = solid, label="compenProjs"];
36->15 [style = bold, label=""];
37->19 [style = solid, label="call"];
7->10 [style = bold, label=""];
9->4 [style = solid, label="rexBuilder"];
13->22 [style = bold, label=""];
45->47 [style = bold, label=""];
26->27 [style = bold, label=""];
21->29 [style = bold, label=""];
0->1 [style = bold, label=""];
32->21 [style = bold, label=""];
27->16 [style = bold, label=""];
20->45 [style = bold, label=""];
50->15 [style = solid, label="i"];
20->21 [style = bold, label=""];
51->7 [style = bold, label=""];
48->31 [style = solid, label="compenCond"];
8->35 [style = dotted, label="true"];
28->36 [style = bold, label=""];
36->31 [style = bold, label=""];
48->46 [style = bold, label=""];
4->14 [style = bold, label=""];
8->14 [style = dotted, label="true"];
35->4 [style = solid, label="qInput1CondShifted"];
21->45 [style = dashed, label="0"];
34->19 [style = bold, label=""];
3->28 [style = bold, label=""];
36->50 [style = dotted, label="true"];
8->4 [style = dotted, label="true"];
10->41 [style = bold, label=""];
18->0 [style = bold, label=""];
15->3 [style = dotted, label="true"];
}
