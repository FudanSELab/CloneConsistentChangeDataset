digraph {
19 [style = filled, label = "payloadGenerator.validate(record)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(insertRowKeys.containsAll(updateRowKeys))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Long> insertTimeStamps = new ArrayList<>()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "records.stream().forEach(null)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<GenericRecord> records = new ArrayList<>()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testUpdatePayloadGenerator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Long> updateTimeStamps = new ArrayList<>()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(insertTimeStamps.containsAll(updateTimeStamps))@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Set<String> blacklistFields = new HashSet<>()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertTrue(insertRowKeys.containsAll(updateRowKeys))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSimplePayload['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IntStream.range(0,10).forEach(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testUpdatePayloadGenerator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Schema schema = new Schema.Parser().parse(UtilitiesTestBase.Helpers.readFileFromAbsolutePath(System.getProperty(\"user.dir\") + \"/..\" + SOURCE_SCHEMA_DOCKER_DEMO_RELATIVE_PATH))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<String> blacklistFields = Arrays.asList(\"_row_key\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "records.stream().forEach(null)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<String> insertRowKeys = new ArrayList<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "blacklistFields.add(\"_row_key\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "GenericRecordFullPayloadGenerator payloadGenerator = new GenericRecordFullPayloadGenerator(schema)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "GenericRecord record = payloadGenerator.getNewPayload()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<String> updateRowKeys = new ArrayList<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
0->16 [style = bold, label=""];
0->9 [style = bold, label=""];
16->13 [style = bold, label=""];
9->16 [style = dashed, label="0"];
4->6 [style = solid, label="schema"];
4->6 [style = bold, label=""];
12->3 [style = solid, label="updateRowKeys"];
3->15 [style = bold, label=""];
12->7 [style = bold, label=""];
2->15 [style = solid, label="updateTimeStamps"];
1->11 [style = bold, label=""];
20->19 [style = solid, label="record"];
8->0 [style = bold, label=""];
6->20 [style = bold, label=""];
18->4 [style = bold, label=""];
11->3 [style = bold, label=""];
10->12 [style = bold, label=""];
7->2 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
2->3 [style = solid, label="updateTimeStamps"];
12->11 [style = solid, label="updateRowKeys"];
9->1 [style = bold, label=""];
20->19 [style = bold, label=""];
13->14 [style = bold, label=""];
17->4 [style = bold, label=""];
2->8 [style = bold, label=""];
}
