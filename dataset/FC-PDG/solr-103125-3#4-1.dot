digraph {
31 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertJQ(req(\"q\",\"id:A5\"),\"/response/numFound==0\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertU(commit())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A3\",\"val_i_dvo\",map(\"set\",102)),null))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "clearIndex()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createCore()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertJQ(req(\"q\",\"id:A3\"),\"/response/numFound==0\")@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "createCore()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"id:A2\",null))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A4\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A12\"),null))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "createCore()@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "createCore()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertJQ(req(\"q\",\"id:A4\"),\"/response/numFound==1\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertJQ(req(\"q\",\"id:A3\"),\"/response/numFound==0\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:2\"),\"/response/numFound==1\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A4\",\"val_i_dvo\",\"200\"),null))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A13\"),null))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "DirectUpdateHandler2.commitOnClose = false@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A12\",\"val_i_dvo\",map(\"set\",1)),null))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"val_i_dvo:102\",null))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertJQ(req(\"q\",\"id:A4\"),\"/response/numFound==1\")@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertJQ(req(\"q\",\"id:A3\"),\"/response/numFound==0\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:202\"),\"/response/numFound==1\")@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final Semaphore logReplay = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A5\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A12\",\"val_i_dvo\",map(\"set\",2)),null))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"val_i_dvo:201\",null))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "TestInjection.skipIndexWriterCommitOnClose = true@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A3\",\"val_i_dvo\",\"101\"),null))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testLogReplay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A11\"),null))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "testLogReplayWithInPlaceUpdatesAndDeletes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "Thread.sleep(100)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==5\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "logReplay.release(1000)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A2\",\"val_i_dvo\",\"1\"),null))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "h.close()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(UpdateLog.State.ACTIVE,h.getCore().getUpdateHandler().getUpdateLog().getState())@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A5\",\"val_i_dvo\",\"300\"),null))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "createCore()@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertJQ(req(\"q\",\"id:A5\"),\"/response/numFound==0\")@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map<String,Metric> metrics = getMetrics()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A2\",\"val_i_dvo\",map(\"set\",2)),null))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "UpdateLog.testing_logReplayHook = null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "h.close()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "int permits = logReplay.availablePermits()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "long initialOps = replayDocs.getCount()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "h.close()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "versions.addFirst(deleteAndGetVersion(\"A5\",null))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = null}@@@75@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertU(adoc(\"id\",\"A4\"))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertJQ(req(\"q\",\"id:A4\"),\"/response/numFound==1\")@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Gauge<Long> replayingDocs = (Gauge<Long>)metrics.get(\"TLOG.replay.remaining.bytes\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A5\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "h.close()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(7L,replayDocs.getCount() - initialOps)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "h.close()@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertJQ(req(\"q\",\"id:A10\"),\"/response/numFound==1\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "createCore()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertU(adoc(\"id\",\"A10\"))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"id:A11\",null))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:2\"),\"/response/numFound==1\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(UpdateLog.State.ACTIVE.ordinal(),state.getValue().intValue())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertJQ(req(\"q\",\"id:A5\"),\"/response/numFound==0\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Deque<Long> versions = new ArrayDeque<>()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A1\"),null))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testLogReplay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final Semaphore logReplayFinish = new Semaphore(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "int permits = logReplay.availablePermits()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A4\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "logReplay.release(1000)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "h.close()@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(UpdateLog.State.REPLAYING,h.getCore().getUpdateHandler().getUpdateLog().getState())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(permits,logReplay.availablePermits())@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:2\"),\"/response/numFound==1\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:202\"),\"/response/numFound==1\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertJQ(req(\"q\",\"id:A10\"),\"/response/numFound==1\")@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65->101 [style = bold, label=""];
67->31 [style = bold, label=""];
40->55 [style = bold, label=""];
98->55 [style = bold, label=""];
21->54 [style = bold, label=""];
26->9 [style = bold, label=""];
14->28 [style = bold, label=""];
25->43 [style = bold, label=""];
17->70 [style = bold, label=""];
47->10 [style = bold, label=""];
89->94 [style = bold, label=""];
48->95 [style = dashed, label="0"];
3->38 [style = bold, label=""];
8->51 [style = bold, label=""];
74->92 [style = bold, label=""];
62->67 [style = bold, label=""];
36->86 [style = bold, label=""];
17->36 [style = bold, label=""];
19->5 [style = bold, label=""];
18->44 [style = bold, label=""];
55->23 [style = bold, label=""];
55->61 [style = dashed, label="0"];
51->17 [style = bold, label=""];
80->83 [style = bold, label=""];
94->8 [style = bold, label=""];
31->89 [style = dashed, label="0"];
90->68 [style = bold, label=""];
49->31 [style = solid, label="versions"];
77->62 [style = bold, label=""];
82->91 [style = bold, label=""];
79->63 [style = bold, label=""];
27->30 [style = bold, label=""];
76->80 [style = bold, label=""];
97->89 [style = bold, label=""];
69->64 [style = bold, label=""];
56->25 [style = bold, label=""];
71->75 [style = bold, label=""];
38->6 [style = bold, label=""];
49->25 [style = solid, label="versions"];
43->11 [style = bold, label=""];
39->22 [style = bold, label=""];
37->79 [style = dashed, label="0"];
101->102 [style = bold, label=""];
37->46 [style = bold, label=""];
2->21 [style = bold, label=""];
83->77 [style = bold, label=""];
99->81 [style = bold, label=""];
53->24 [style = bold, label=""];
59->18 [style = bold, label=""];
24->84 [style = dashed, label="0"];
46->19 [style = bold, label=""];
75->79 [style = bold, label=""];
91->87 [style = bold, label=""];
22->100 [style = dashed, label="0"];
57->35 [style = bold, label=""];
7->50 [style = bold, label=""];
23->58 [style = bold, label=""];
64->72 [style = bold, label=""];
34->29 [style = bold, label=""];
54->7 [style = bold, label=""];
16->8 [style = bold, label=""];
22->16 [style = bold, label=""];
58->14 [style = bold, label=""];
95->71 [style = bold, label=""];
52->41 [style = bold, label=""];
5->26 [style = bold, label=""];
49->42 [style = solid, label="versions"];
35->32 [style = bold, label=""];
3->6 [style = bold, label=""];
9->20 [style = bold, label=""];
93->97 [style = bold, label=""];
63->74 [style = bold, label=""];
85->100 [style = bold, label=""];
49->5 [style = solid, label="versions"];
31->12 [style = bold, label=""];
33->76 [style = bold, label=""];
50->76 [style = dashed, label="0"];
41->73 [style = dashed, label="0"];
0->41 [style = bold, label=""];
49->34 [style = solid, label="versions"];
4->31 [style = bold, label=""];
49->52 [style = solid, label="versions"];
60->61 [style = bold, label=""];
1->57 [style = bold, label=""];
72->65 [style = bold, label=""];
102->11 [style = bold, label=""];
59->80 [style = dashed, label="0"];
61->23 [style = bold, label=""];
46->63 [style = dashed, label="0"];
12->27 [style = bold, label=""];
10->75 [style = dashed, label="0"];
73->96 [style = bold, label=""];
84->95 [style = bold, label=""];
88->78 [style = bold, label=""];
10->37 [style = bold, label=""];
78->90 [style = bold, label=""];
92->69 [style = bold, label=""];
30->51 [style = solid, label="permits"];
15->45 [style = bold, label=""];
28->15 [style = bold, label=""];
20->56 [style = bold, label=""];
2->18 [style = solid, label="initialOps"];
50->59 [style = bold, label=""];
45->49 [style = bold, label=""];
29->3 [style = bold, label=""];
16->82 [style = dashed, label="0"];
42->33 [style = bold, label=""];
33->1 [style = bold, label=""];
52->2 [style = bold, label=""];
66->99 [style = bold, label=""];
6->52 [style = bold, label=""];
86->78 [style = solid, label="permits"];
81->88 [style = bold, label=""];
49->53 [style = bold, label=""];
11->34 [style = bold, label=""];
86->85 [style = bold, label=""];
87->66 [style = bold, label=""];
48->47 [style = bold, label=""];
49->0 [style = solid, label="versions"];
53->84 [style = bold, label=""];
96->93 [style = bold, label=""];
30->39 [style = bold, label=""];
100->82 [style = bold, label=""];
49->54 [style = solid, label="versions"];
70->36 [style = bold, label=""];
47->71 [style = dashed, label="0"];
32->13 [style = bold, label=""];
31->73 [style = bold, label=""];
24->48 [style = bold, label=""];
13->4 [style = bold, label=""];
44->0 [style = bold, label=""];
41->42 [style = bold, label=""];
}
