digraph {
3 [style = filled, label = "testQuery(PLANNER_CONFIG_DEFAULT,QUERY_CONTEXT_DEFAULT,ImmutableList.of(new SqlParameter(SqlType.INTEGER,10),new SqlParameter(SqlType.INTEGER,0)),\"SELECT exp(count(*)) + ?, sum(m2) FROM druid.foo WHERE dim2 = ?\",CalciteTests.REGULAR_USER_AUTH_RESULT,ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).filters(numericSelector(\"dim2\",\"0\",null)).granularity(Granularities.ALL).aggregators(aggregators(new CountAggregatorFactory(\"a0\"),new DoubleSumAggregatorFactory(\"a1\",\"m2\"))).postAggregators(expressionPostAgg(\"p0\",\"(exp(\"a0\") + 10)\")).context(QUERY_CONTEXT_DEFAULT).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92bb2f))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testQuery(PLANNER_CONFIG_DEFAULT,QUERY_CONTEXT_DONT_SKIP_EMPTY_BUCKETS,ImmutableList.of(new SqlParameter(SqlType.INTEGER,10),new SqlParameter(SqlType.DATE,\"2999-01-01\")),\"SELECT exp(count(*)) + ?, sum(m2) FROM druid.foo WHERE __time >= ?\",CalciteTests.REGULAR_USER_AUTH_RESULT,ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Intervals.of(\"2999-01-01T00:00:00.000Z/146140482-04-24T15:36:27.903Z\"))).granularity(Granularities.ALL).aggregators(aggregators(new CountAggregatorFactory(\"a0\"),new DoubleSumAggregatorFactory(\"a1\",\"m2\"))).postAggregators(expressionPostAgg(\"p0\",\"(exp(\"a0\") + 10)\")).context(QUERY_CONTEXT_DONT_SKIP_EMPTY_BUCKETS).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92bb83))@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testQuery(PLANNER_CONFIG_DEFAULT,QUERY_CONTEXT_DONT_SKIP_EMPTY_BUCKETS,ImmutableList.of(new SqlParameter(SqlType.INTEGER,10),new SqlParameter(SqlType.INTEGER,0)),\"SELECT exp(count(*)) + ?, sum(m2) FROM druid.foo WHERE dim2 = ?\",CalciteTests.REGULAR_USER_AUTH_RESULT,ImmutableList.of(Druids.newTimeseriesQueryBuilder().dataSource(CalciteTests.DATASOURCE1).intervals(querySegmentSpec(Filtration.eternity())).filters(numericSelector(\"dim2\",\"0\",null)).granularity(Granularities.ALL).aggregators(aggregators(new CountAggregatorFactory(\"a0\"),new DoubleSumAggregatorFactory(\"a1\",\"m2\"))).postAggregators(expressionPostAgg(\"p0\",\"(exp(\"a0\") + 10)\")).context(QUERY_CONTEXT_DONT_SKIP_EMPTY_BUCKETS).build()),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@92bad5))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testParametersInSelectAndFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testParametersInSelectAndFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "testDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = dashed, label="0"];
1->3 [style = dashed, label="0"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
}
