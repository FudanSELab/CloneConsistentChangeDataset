digraph {
2 [style = filled, label = "{forceClose(sslSocket)serverThread.shutdown(TIMEOUT)}@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Socket secureClientSocket = null@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "clientSocket = connectWithoutSSL()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "byte(( buf = new byte((((@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "handshakeCompletedLock@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(handshakeCompleted)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Socket clientSocket = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "Assert.assertFalse(handshakeCompleted)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "serverThread.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testConnectWithSSLToNonStrictServer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "byte(( buf = new byte((((@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Socket sslSocket = connectWithSSL()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testConnectWithSSLToNonStrictServer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "serverThread.start()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "sslSocket.getOutputStream().flush()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "buf = new byte((((@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int bytesRead = sslSocket.getInputStream().read(buf,0,buf.length)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "handshakeCompletedLock@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "secureClientSocket = connectWithSSL()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "clientSocket.getOutputStream().flush()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "{forceClose(badClientSocket)forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!handshakeCompleted@@@30@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "handshakeCompletedLock@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Socket badClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->7 [style = dotted, label="true"];
4->10 [style = bold, label=""];
22->26 [style = bold, label=""];
6->21 [style = dashed, label="0"];
31->38 [style = solid, label="clientSocket"];
30->1 [style = dotted, label="true"];
9->6 [style = solid, label="buf"];
7->1 [style = bold, label=""];
31->23 [style = bold, label=""];
10->15 [style = bold, label=""];
30->1 [style = bold, label=""];
7->18 [style = dashed, label="0"];
39->38 [style = solid, label="badClientSocket"];
25->32 [style = solid, label="bytesRead"];
8->18 [style = bold, label=""];
27->28 [style = bold, label=""];
26->34 [style = bold, label=""];
42->8 [style = bold, label=""];
35->33 [style = bold, label=""];
25->32 [style = bold, label=""];
44->40 [style = bold, label=""];
8->14 [style = bold, label=""];
12->16 [style = solid, label="bytesRead"];
33->10 [style = bold, label=""];
12->16 [style = bold, label=""];
12->29 [style = dashed, label="0"];
11->18 [style = dotted, label="true"];
17->19 [style = bold, label=""];
43->38 [style = solid, label="secureClientSocket"];
19->0 [style = bold, label=""];
8->7 [style = bold, label=""];
14->7 [style = bold, label=""];
23->42 [style = bold, label=""];
20->2 [style = bold, label=""];
1->20 [style = dashed, label="0"];
4->2 [style = solid, label="sslSocket"];
12->13 [style = bold, label=""];
18->20 [style = bold, label=""];
36->30 [style = bold, label=""];
3->5 [style = bold, label=""];
32->47 [style = bold, label=""];
10->39 [style = bold, label=""];
5->0 [style = bold, label=""];
21->11 [style = bold, label=""];
8->29 [style = solid, label="buf"];
0->4 [style = bold, label=""];
15->9 [style = bold, label=""];
39->31 [style = bold, label=""];
16->21 [style = bold, label=""];
24->25 [style = bold, label=""];
6->11 [style = bold, label=""];
29->46 [style = bold, label=""];
43->27 [style = bold, label=""];
46->7 [style = bold, label=""];
40->41 [style = bold, label=""];
45->38 [style = bold, label=""];
9->21 [style = solid, label="buf"];
24->25 [style = solid, label="buf"];
8->14 [style = dotted, label="true"];
30->45 [style = dotted, label="true"];
28->24 [style = bold, label=""];
13->16 [style = dashed, label="0"];
11->8 [style = bold, label=""];
8->7 [style = solid, label="buf"];
14->18 [style = bold, label=""];
37->45 [style = bold, label=""];
1->2 [style = bold, label=""];
29->46 [style = solid, label="bytesRead"];
9->12 [style = bold, label=""];
34->35 [style = bold, label=""];
11->8 [style = dotted, label="true"];
13->6 [style = bold, label=""];
1->37 [style = dotted, label="true"];
1->45 [style = bold, label=""];
41->43 [style = bold, label=""];
12->13 [style = solid, label="bytesRead"];
8->29 [style = bold, label=""];
47->36 [style = bold, label=""];
24->47 [style = solid, label="buf"];
40->41 [style = dotted, label="true"];
7->44 [style = bold, label=""];
5->19 [style = dashed, label="0"];
1->37 [style = bold, label=""];
9->12 [style = solid, label="buf"];
}
