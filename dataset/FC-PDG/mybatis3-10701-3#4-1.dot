digraph {
9 [style = filled, label = "shouldDemonstrateCopiesAreEqual['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "i < 1000@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Cache cache = new WeakCache(new PerpetualCache(\"default\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "shouldDemonstrateCopiesAreEqual['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Cache cache = new SoftCache(new PerpetualCache(\"default\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cache = new SerializedCache(cache)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldDemonstrateCopiesAreEqual['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(value == null || value.equals(i))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cache.putObject(i,i)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Object value = cache.getObject(i)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
1->4 [style = bold, label=""];
5->3 [style = solid, label="i"];
7->3 [style = solid, label="i"];
7->2 [style = solid, label="i"];
2->8 [style = solid, label="value"];
5->2 [style = solid, label="i"];
11->4 [style = bold, label=""];
5->7 [style = solid, label="i"];
1->4 [style = solid, label="cache"];
8->7 [style = bold, label=""];
6->2 [style = dotted, label="true"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
6->8 [style = dotted, label="true"];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
6->7 [style = dotted, label="true"];
7->6 [style = solid, label="i"];
9->1 [style = bold, label=""];
6->3 [style = dotted, label="true"];
7->8 [style = solid, label="i"];
11->4 [style = solid, label="cache"];
5->6 [style = solid, label="i"];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
5->8 [style = solid, label="i"];
}
