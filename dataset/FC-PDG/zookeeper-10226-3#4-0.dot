digraph {
30 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Socket clientSocket = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "secureClientSocket = connectWithSSL()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Socket secureClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "{forceClose(badClientSocket)forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "{forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "!handshakeCompleted@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "handshakeCompletedLock@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "!handshakeCompleted@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "clientSocket = connectWithoutSSL()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "byte(( buf = new byte((((@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "buf = new byte((((@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "serverThread.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "forceClose(badClientSocket)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "clientSocket.getOutputStream().flush()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Socket badClientSocket = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerIdleClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(buf.length,bytesRead)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "badClientSocket = connectWithoutSSL()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assert.assertTrue(handshakeCompleted)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertFalse(handshakeCompleted)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertTrue(handshakeCompleted)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertFalse(handshakeCompleted)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "handshakeCompletedLock@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(1))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "handshakeCompletedLock@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->6 [style = solid, label="badClientSocket"];
0->19 [style = solid, label="buf"];
16->0 [style = bold, label=""];
21->15 [style = dotted, label="true"];
19->33 [style = solid, label="bytesRead"];
47->55 [style = solid, label="bytesRead"];
10->23 [style = solid, label="bytesRead"];
7->36 [style = dotted, label="true"];
55->49 [style = bold, label=""];
21->15 [style = bold, label=""];
4->43 [style = solid, label="badClientSocket"];
19->47 [style = dashed, label="0"];
8->1 [style = bold, label=""];
19->5 [style = bold, label=""];
38->30 [style = bold, label=""];
1->21 [style = bold, label=""];
12->6 [style = solid, label="secureClientSocket"];
54->53 [style = bold, label=""];
21->35 [style = bold, label=""];
24->8 [style = solid, label="buf"];
24->38 [style = solid, label="buf"];
17->36 [style = dashed, label="0"];
2->25 [style = bold, label=""];
35->12 [style = bold, label=""];
24->10 [style = bold, label=""];
29->36 [style = bold, label=""];
11->16 [style = bold, label=""];
36->6 [style = bold, label=""];
23->34 [style = dashed, label="0"];
0->19 [style = bold, label=""];
22->43 [style = dashed, label="0"];
48->44 [style = solid, label="secureClientSocket"];
11->44 [style = bold, label=""];
22->9 [style = bold, label=""];
12->11 [style = bold, label=""];
26->14 [style = bold, label=""];
48->50 [style = bold, label=""];
32->7 [style = bold, label=""];
23->8 [style = bold, label=""];
25->7 [style = bold, label=""];
26->4 [style = bold, label=""];
52->42 [style = bold, label=""];
0->41 [style = dashed, label="0"];
10->34 [style = bold, label=""];
8->38 [style = dashed, label="0"];
49->46 [style = bold, label=""];
28->4 [style = dashed, label="0"];
5->33 [style = dashed, label="0"];
26->37 [style = bold, label=""];
15->12 [style = bold, label=""];
34->38 [style = bold, label=""];
7->17 [style = dotted, label="true"];
21->35 [style = dotted, label="true"];
14->4 [style = bold, label=""];
19->33 [style = bold, label=""];
18->24 [style = bold, label=""];
29->17 [style = bold, label=""];
14->37 [style = dashed, label="0"];
17->6 [style = bold, label=""];
1->30 [style = dashed, label="0"];
31->32 [style = bold, label=""];
24->10 [style = solid, label="buf"];
3->26 [style = bold, label=""];
19->5 [style = solid, label="bytesRead"];
7->20 [style = bold, label=""];
15->35 [style = dashed, label="0"];
10->34 [style = solid, label="bytesRead"];
30->21 [style = bold, label=""];
13->27 [style = bold, label=""];
9->18 [style = bold, label=""];
42->11 [style = bold, label=""];
10->23 [style = bold, label=""];
52->40 [style = bold, label=""];
53->26 [style = bold, label=""];
41->47 [style = bold, label=""];
22->6 [style = solid, label="clientSocket"];
20->36 [style = bold, label=""];
28->22 [style = bold, label=""];
52->40 [style = dotted, label="true"];
46->52 [style = dotted, label="true"];
0->2 [style = solid, label="buf"];
20->17 [style = bold, label=""];
4->43 [style = bold, label=""];
25->32 [style = dashed, label="0"];
14->53 [style = dashed, label="0"];
20->29 [style = bold, label=""];
43->48 [style = bold, label=""];
27->3 [style = bold, label=""];
0->31 [style = solid, label="buf"];
41->47 [style = solid, label="buf"];
39->27 [style = bold, label=""];
46->52 [style = bold, label=""];
4->28 [style = bold, label=""];
37->4 [style = bold, label=""];
2->31 [style = dashed, label="0"];
7->20 [style = dotted, label="true"];
45->54 [style = bold, label=""];
41->49 [style = solid, label="buf"];
5->2 [style = bold, label=""];
47->55 [style = bold, label=""];
20->29 [style = dotted, label="true"];
50->51 [style = bold, label=""];
33->31 [style = bold, label=""];
46->42 [style = dotted, label="true"];
51->41 [style = bold, label=""];
40->42 [style = bold, label=""];
}
