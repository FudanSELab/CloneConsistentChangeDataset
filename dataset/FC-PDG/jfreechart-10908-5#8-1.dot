digraph {
8 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "XIntervalSeriesCollection c1 = new XIntervalSeriesCollection()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "XIntervalSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "XIntervalSeries s1 = new XIntervalSeries(\"Series\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "XIntervalSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "XIntervalSeries<String> s1 = new XIntervalSeries<>(\"Series\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "YIntervalSeries s1 = new YIntervalSeries(\"Series\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "YIntervalSeriesCollection c1 = new YIntervalSeriesCollection()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "YIntervalSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->10 [style = bold, label=""];
18->3 [style = bold, label=""];
2->3 [style = solid, label="c2"];
2->9 [style = solid, label="c2"];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
17->3 [style = solid, label="c1"];
2->3 [style = bold, label=""];
0->11 [style = dashed, label="0"];
16->17 [style = bold, label=""];
18->10 [style = solid, label="c2"];
18->9 [style = solid, label="c2"];
0->17 [style = dashed, label="0"];
1->7 [style = bold, label=""];
0->3 [style = solid, label="c1"];
13->1 [style = bold, label=""];
4->0 [style = bold, label=""];
11->12 [style = solid, label="c1"];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
17->18 [style = solid, label="c1"];
13->7 [style = solid, label="s1"];
6->13 [style = dashed, label="0"];
2->10 [style = solid, label="c2"];
12->9 [style = solid, label="c2"];
6->15 [style = dashed, label="0"];
7->2 [style = bold, label=""];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
2->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
7->18 [style = bold, label=""];
15->7 [style = solid, label="s1"];
12->3 [style = bold, label=""];
6->7 [style = solid, label="s1"];
11->3 [style = solid, label="c1"];
14->11 [style = bold, label=""];
0->2 [style = solid, label="c1"];
18->3 [style = solid, label="c2"];
12->3 [style = solid, label="c2"];
12->10 [style = solid, label="c2"];
15->1 [style = bold, label=""];
}
