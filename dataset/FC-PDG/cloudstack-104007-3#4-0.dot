digraph {
6 [style = filled, label = "final PhysicalNetworkVO physnet = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final NiciraNvpDeviceVO device = mock()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Account account = mock()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(offering.getTrafficType()).thenReturn(TrafficType.Guest)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final DeploymentPlan plan = mock()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(offering.getGuestType()).thenReturn(GuestType.Isolated)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testDesignNoConnectivityInOffering['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "when(physnet.getId()).thenReturn(NETWORK_ID)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Network designednetwork = guru.design(offering,plan,network,account)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(physnetdao.findById((Long)any())).thenReturn(physnet)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "when(physnet.getIsolationMethods()).thenReturn(Arrays.asList(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@79f0ce))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "when(nosd.areServicesSupportedByNetworkOffering(NETWORK_ID,Service.Connectivity)).thenReturn(false)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testDesign['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(offering.getId()).thenReturn(NETWORK_ID)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(nosd.areServicesSupportedByNetworkOffering(NETWORK_ID,Service.Connectivity)).thenReturn(true)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(designednetwork != null)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(device.getId()).thenReturn(1L)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(designednetwork.getBroadcastDomainType() == BroadcastDomainType.Lswitch)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final NetworkOffering offering = mock()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Network network = mock()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(designednetwork == null)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testDesign['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "when(netmodel.listNetworkOfferingServices(NETWORK_ID)).thenReturn(Arrays.asList(Service.Connectivity))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "when(nvpdao.listByPhysicalNetwork(NETWORK_ID)).thenReturn(Arrays.asList(new NiciraNvpDeviceVO((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@79f0ef))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->11 [style = bold, label=""];
9->22 [style = dashed, label="0"];
0->14 [style = solid, label="offering"];
19->6 [style = bold, label=""];
9->11 [style = bold, label=""];
14->18 [style = bold, label=""];
11->14 [style = solid, label="plan"];
2->7 [style = bold, label=""];
14->21 [style = bold, label=""];
6->3 [style = solid, label="physnet"];
9->20 [style = bold, label=""];
14->18 [style = solid, label="designednetwork"];
11->16 [style = bold, label=""];
16->13 [style = bold, label=""];
5->10 [style = bold, label=""];
1->6 [style = bold, label=""];
12->22 [style = bold, label=""];
10->12 [style = bold, label=""];
12->9 [style = bold, label=""];
3->17 [style = bold, label=""];
8->2 [style = bold, label=""];
15->0 [style = bold, label=""];
23->6 [style = bold, label=""];
18->21 [style = dashed, label="0"];
14->21 [style = solid, label="designednetwork"];
6->3 [style = bold, label=""];
2->7 [style = solid, label="device"];
13->14 [style = solid, label="account"];
17->8 [style = bold, label=""];
16->14 [style = solid, label="network"];
7->15 [style = bold, label=""];
0->5 [style = bold, label=""];
13->14 [style = bold, label=""];
18->4 [style = bold, label=""];
20->11 [style = bold, label=""];
}
