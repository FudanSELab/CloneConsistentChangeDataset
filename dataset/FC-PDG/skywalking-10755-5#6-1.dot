digraph {
12 [style = filled, label = "return createMeterSamples(new InstanceEntityDescription(serviceKeys,instanceKeys))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Preconditions.checkArgument(serviceKeys.size() > 0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ExpressionParsingContext.get().ifPresent(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return EMPTY@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ExpressionParsingContext.get().ifPresent(null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Preconditions.checkArgument(endpointKeys.size() > 0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Preconditions.checkArgument(instanceKeys.size() > 0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "instance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "List<String> serviceKeys@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<String> instanceKeys@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "endpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.context.setMeterEntity(MeterEntity.newServiceInstance(dim(serviceKeys),dim(instanceKeys)))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return left(io.vavr.collection.Stream.concat(serviceKeys,instanceKeys).asJava())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "this.context.setMeterEntity(MeterEntity.newEndpoint(dim(serviceKeys),dim(endpointKeys)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "this == EMPTY@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return left(io.vavr.collection.Stream.concat(serviceKeys,endpointKeys).asJava())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "instance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<String> instanceKeys@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ExpressionParsingContext.get().ifPresent(null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<String> endpointKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<String> serviceKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
5->14 [style = dashed, label="0"];
2->20 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
1->0 [style = solid, label="instanceKeys"];
4->17 [style = dashed, label="0"];
19->17 [style = dotted, label="true"];
17->16 [style = solid, label="endpointKeys"];
0->16 [style = dashed, label="0"];
15->16 [style = solid, label="serviceKeys"];
4->12 [style = solid, label="instanceKeys"];
6->0 [style = bold, label=""];
3->12 [style = bold, label=""];
3->16 [style = bold, label=""];
19->15 [style = dotted, label="true"];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
10->6 [style = bold, label=""];
8->4 [style = dotted, label="true"];
3->0 [style = bold, label=""];
20->10 [style = bold, label=""];
8->1 [style = dotted, label="true"];
18->20 [style = bold, label=""];
9->18 [style = bold, label=""];
4->0 [style = solid, label="serviceKeys"];
19->9 [style = bold, label=""];
6->16 [style = bold, label=""];
7->2 [style = bold, label=""];
8->9 [style = bold, label=""];
16->14 [style = bold, label=""];
13->11 [style = dotted, label="true"];
11->12 [style = solid, label="serviceKeys"];
13->9 [style = bold, label=""];
6->3 [style = dotted, label="true"];
13->4 [style = dotted, label="true"];
0->5 [style = bold, label=""];
6->12 [style = bold, label=""];
}
