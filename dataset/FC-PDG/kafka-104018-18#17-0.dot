digraph {
18 [style = filled, label = "client.prepareResponse(syncGroupResponse(Collections.emptyList(),Errors.UNKNOWN.code()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(singleton(t1p),subscriptions.assignedPartitions())@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.prepareResponse(syncGroupResponse(Collections.emptyList(),Errors.ILLEGAL_GENERATION.code()))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,consumerId,\"leader\",Errors.NONE))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(t1p),Errors.NONE.code()))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest joinRequest = (JoinGroupRequest)bodyreturn joinRequest.memberId().equals(JoinGroupRequest.UNKNOWN_MEMBER_ID)}},joinGroupFollowerResponse(2,consumerId,\"leader\",Errors.NONE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final String consumerId = \"consumer\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testIllegalGenerationOnSyncGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client.prepareResponse(syncGroupResponse(Collections.emptyList(),Errors.ILLEGAL_GENERATION))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testUnexpectedErrorOnSyncGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testIllegalGenerationOnSyncGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,consumerId,\"leader\",Errors.NONE.code()))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(t1p),Errors.NONE))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "subscriptions.subscribe(singleton(topic1),rebalanceListener)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(coordinator.needRejoin())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->14 [style = bold, label=""];
8->15 [style = bold, label=""];
12->5 [style = bold, label=""];
5->9 [style = bold, label=""];
16->10 [style = bold, label=""];
2->1 [style = bold, label=""];
8->3 [style = bold, label=""];
18->17 [style = bold, label=""];
2->18 [style = bold, label=""];
19->10 [style = bold, label=""];
7->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
4->2 [style = bold, label=""];
3->4 [style = bold, label=""];
9->6 [style = bold, label=""];
10->2 [style = solid, label="consumerId"];
1->12 [style = dashed, label="0"];
2->14 [style = dashed, label="0"];
10->8 [style = bold, label=""];
10->5 [style = solid, label="consumerId"];
11->10 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
9->13 [style = dashed, label="0"];
15->4 [style = bold, label=""];
3->15 [style = dashed, label="0"];
13->6 [style = bold, label=""];
6->7 [style = bold, label=""];
10->14 [style = solid, label="consumerId"];
}
