digraph {
1 [style = filled, label = "lockProvider.unlock()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "{}@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "{}@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Exception e@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "lockComponent.setOperationType(DataOperationType.NO_TXN)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "IllegalArgumentException e@@@10@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assertions.assertTrue(lockProvider.acquireLock(lockConfiguration.getConfig().getLong(LOCK_ACQUIRE_WAIT_TIMEOUT_MS_PROP),TimeUnit.MILLISECONDS,lockComponent))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "IllegalArgumentException e@@@10@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Assertions.assertTrue(lockProvider.acquireLock(lockConfiguration.getConfig().getLong(LOCK_ACQUIRE_WAIT_TIMEOUT_MS_PROP_KEY),TimeUnit.MILLISECONDS,lockComponent))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testAcquireLock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HiveMetastoreBasedLockProvider lockProvider = new HiveMetastoreBasedLockProvider(lockConfiguration,hiveConf())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "lockProvider.acquireLock(lockConfiguration.getConfig().getLong(LOCK_ACQUIRE_WAIT_TIMEOUT_MS_PROP),TimeUnit.MILLISECONDS,lockComponent)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "lockProvider.acquireLock(lockConfiguration.getConfig().getLong(LOCK_ACQUIRE_WAIT_TIMEOUT_MS_PROP_KEY),TimeUnit.MILLISECONDS,lockComponent)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testReentrantLock['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assertions.fail()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assertions.assertTrue(lockProvider.acquireLock(lockConfiguration.getConfig().getLong(LOCK_ACQUIRE_WAIT_TIMEOUT_MS_PROP),TimeUnit.MILLISECONDS,lockComponent))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testReentrantLock['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "lockProvider.close()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assertions.assertTrue(lockProvider.acquireLock(lockConfiguration.getConfig().getLong(LOCK_ACQUIRE_WAIT_TIMEOUT_MS_PROP),TimeUnit.MILLISECONDS,lockComponent))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
16->18 [style = bold, label=""];
0->6 [style = bold, label=""];
9->4 [style = bold, label=""];
3->11 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->14 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
1->13 [style = bold, label=""];
3->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
8->1 [style = bold, label=""];
5->1 [style = bold, label=""];
6->5 [style = bold, label=""];
13->17 [style = bold, label=""];
0->14 [style = bold, label=""];
10->5 [style = bold, label=""];
18->1 [style = bold, label=""];
11->10 [style = bold, label=""];
12->8 [style = bold, label=""];
15->4 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->5 [style = bold, label=""];
}
