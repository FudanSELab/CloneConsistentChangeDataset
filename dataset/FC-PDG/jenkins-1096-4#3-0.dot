digraph {
16 [style = filled, label = "assertFalse(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(artifacts.child(\"dir\").child(\".svn\").child(\"file\").exists())@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "project.getPublishersList().replaceBy(Collections.singleton(artifactArchiver))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Publisher artifactArchiver = new ArtifactArchiver(\"**\",\"\",false,false,true,true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testDefaultExcludesOn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testDefaultExcludesOff['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "artifactArchiver.setDefaultExcludes(false)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(Result.SUCCESS,build(project))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(artifacts.child(\".svn\").child(\"file\").exists())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "VirtualFile artifacts = project.getBuildByNumber(1).getArtifactManager().root()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testDefaultExcludesOff['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "project.getBuildersList().replaceBy(Collections.singleton(new CreateDefaultExcludesArtifact()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Publisher artifactArchiver = new ArtifactArchiver(\"**\",\"\",false,false,true,false)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "ArtifactArchiver artifactArchiver = new ArtifactArchiver(\"**\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertFalse(artifacts.child(\".svn\").child(\"file\").exists())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->6 [style = bold, label=""];
7->10 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->12 [style = bold, label=""];
0->2 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = bold, label=""];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
14->8 [style = solid, label="artifactArchiver"];
1->13 [style = dashed, label="0"];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
0->14 [style = bold, label=""];
11->0 [style = bold, label=""];
2->14 [style = dashed, label="0"];
8->5 [style = bold, label=""];
12->5 [style = solid, label="artifactArchiver"];
2->8 [style = solid, label="artifactArchiver"];
15->0 [style = bold, label=""];
6->13 [style = bold, label=""];
5->4 [style = bold, label=""];
0->4 [style = solid, label="project"];
9->5 [style = bold, label=""];
0->6 [style = solid, label="project"];
14->8 [style = bold, label=""];
2->8 [style = bold, label=""];
}
