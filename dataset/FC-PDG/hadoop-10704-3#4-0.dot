digraph {
2 [style = filled, label = "inputFilter.accept(stat.getPath())@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result.add(stat)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "JobContext job@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<IOException> errors = new ArrayList<IOException>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Path p = dirs(i(@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<FileStatus> result = new ArrayList<FileStatus>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "globStat.isDirectory()@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i < dirs.length@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "singleThreadedListStatus['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "return result@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "FileStatus globStat@@@18@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "matches.length == 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return result@@@39@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "matches.length == 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "JobContext job@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "iter.hasNext()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "boolean recursive@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "boolean recursive@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "PathFilter inputFilter@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "RemoteIterator<LocatedFileStatus> iter = fs.listLocatedStatus(globStat.getPath())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "result.add(globStat)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "result.add(shrinkStatus(stat))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "matches@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "errors.add(new IOException(\"Input Pattern \" + p + \" matches 0 files\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "singleThreadedListStatus['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "addInputPathRecursively(result,fs,stat.getPath(),inputFilter)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "FileStatus globStat@@@15@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "singleThreadedListStatus['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "!errors.isEmpty()@@@36@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "FileSystem fs = p.getFileSystem(job)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "JobConf job@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "matches@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "FileStatus(( matches = fs.globStatus(p,inputFilter)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "recursive && stat.isDirectory()@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "throw new InvalidInputException(errors)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "recursive && stat.isDirectory()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Path(( dirs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "PathFilter inputFilter@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "inputFilter.accept(stat.getPath())@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "matches == null@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Path(( dirs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "result.add(globStat)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "boolean recursive@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "result.add(stat)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "PathFilter inputFilter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "++i@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "FileStatus(( matches = fs.globStatus(p,inputFilter)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "FileSystem fs = p.getFileSystem(job.getConfiguration())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "throw new InvalidInputException(errors)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "errors.add(new IOException(\"Input path does not exist: \" + p))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "LocatedFileStatus stat = iter.next()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = dotted, label="true"];
48->17 [style = solid, label="inputFilter"];
29->2 [style = dotted, label="true"];
46->13 [style = bold, label=""];
28->20 [style = bold, label=""];
16->17 [style = dotted, label="true"];
29->0 [style = bold, label=""];
27->7 [style = dotted, label="false"];
22->27 [style = solid, label="recursive"];
23->3 [style = solid, label="result"];
37->40 [style = solid, label="job"];
39->16 [style = solid, label="recursive"];
3->18 [style = bold, label=""];
13->51 [style = bold, label=""];
10->50 [style = dotted, label="true"];
29->2 [style = bold, label=""];
29->11 [style = solid, label="stat"];
27->7 [style = bold, label=""];
7->16 [style = bold, label=""];
11->13 [style = bold, label=""];
47->51 [style = bold, label=""];
15->11 [style = solid, label="inputFilter"];
24->11 [style = solid, label="inputFilter"];
27->33 [style = bold, label=""];
4->24 [style = dotted, label="true"];
28->35 [style = dotted, label="false"];
23->11 [style = solid, label="result"];
43->44 [style = bold, label=""];
36->24 [style = dotted, label="true"];
29->16 [style = dotted, label="true"];
2->16 [style = bold, label=""];
10->50 [style = bold, label=""];
24->30 [style = solid, label="inputFilter"];
11->16 [style = bold, label=""];
10->6 [style = dotted, label="true"];
33->16 [style = bold, label=""];
48->43 [style = solid, label="inputFilter"];
16->29 [style = bold, label=""];
28->12 [style = dotted, label="false"];
24->48 [style = dashed, label="0"];
10->38 [style = dotted, label="false"];
50->47 [style = dotted, label="false"];
0->29 [style = bold, label=""];
13->40 [style = bold, label=""];
16->17 [style = bold, label=""];
42->40 [style = bold, label=""];
36->31 [style = dotted, label="true"];
28->29 [style = dotted, label="true"];
26->16 [style = bold, label=""];
26->27 [style = bold, label=""];
41->48 [style = dotted, label="true"];
17->33 [style = solid, label="stat"];
29->0 [style = dotted, label="false"];
27->11 [style = bold, label=""];
44->42 [style = dotted, label="true"];
4->22 [style = dotted, label="true"];
13->29 [style = dotted, label="true"];
30->10 [style = bold, label=""];
49->3 [style = bold, label=""];
43->44 [style = solid, label="matches"];
14->18 [style = bold, label=""];
5->25 [style = solid, label="i"];
23->18 [style = solid, label="result"];
4->23 [style = bold, label=""];
17->7 [style = solid, label="stat"];
27->33 [style = dotted, label="false"];
5->8 [style = solid, label="i"];
10->28 [style = dotted, label="false"];
28->29 [style = bold, label=""];
8->25 [style = dotted, label="true"];
44->42 [style = bold, label=""];
1->8 [style = bold, label=""];
25->6 [style = solid, label="p"];
47->40 [style = bold, label=""];
28->20 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
25->9 [style = bold, label=""];
23->17 [style = solid, label="result"];
8->3 [style = bold, label=""];
6->51 [style = bold, label=""];
9->11 [style = solid, label="fs"];
51->49 [style = dotted, label="true"];
36->32 [style = dotted, label="true"];
4->15 [style = dotted, label="true"];
20->1 [style = bold, label=""];
41->37 [style = dotted, label="true"];
10->6 [style = bold, label=""];
42->51 [style = bold, label=""];
47->50 [style = bold, label=""];
3->14 [style = dotted, label="true"];
13->50 [style = bold, label=""];
13->2 [style = dotted, label="true"];
21->5 [style = bold, label=""];
6->1 [style = bold, label=""];
50->46 [style = dotted, label="true"];
16->1 [style = bold, label=""];
21->49 [style = solid, label="errors"];
0->1 [style = bold, label=""];
50->13 [style = dotted, label="true"];
28->13 [style = dotted, label="false"];
25->20 [style = solid, label="p"];
24->25 [style = solid, label="dirs"];
16->11 [style = dotted, label="false"];
17->13 [style = bold, label=""];
30->10 [style = solid, label="matches"];
40->43 [style = bold, label=""];
15->30 [style = solid, label="inputFilter"];
8->9 [style = dotted, label="true"];
2->16 [style = dotted, label="true"];
4->19 [style = dotted, label="true"];
5->8 [style = bold, label=""];
17->26 [style = bold, label=""];
10->28 [style = bold, label=""];
16->11 [style = bold, label=""];
50->46 [style = bold, label=""];
21->14 [style = solid, label="errors"];
3->14 [style = bold, label=""];
10->20 [style = dotted, label="false"];
44->10 [style = bold, label=""];
34->25 [style = solid, label="dirs"];
9->30 [style = bold, label=""];
51->49 [style = bold, label=""];
41->39 [style = dotted, label="true"];
31->27 [style = solid, label="recursive"];
8->10 [style = dotted, label="true"];
25->30 [style = solid, label="p"];
44->10 [style = dotted, label="false"];
41->45 [style = dotted, label="true"];
27->11 [style = dotted, label="true"];
2->13 [style = bold, label=""];
16->26 [style = dotted, label="true"];
51->3 [style = bold, label=""];
8->1 [style = dotted, label="true"];
13->29 [style = bold, label=""];
40->17 [style = solid, label="fs"];
36->23 [style = bold, label=""];
23->21 [style = bold, label=""];
6->40 [style = bold, label=""];
50->47 [style = bold, label=""];
21->40 [style = bold, label=""];
7->33 [style = dashed, label="0"];
41->23 [style = bold, label=""];
36->34 [style = dotted, label="true"];
8->25 [style = bold, label=""];
}
