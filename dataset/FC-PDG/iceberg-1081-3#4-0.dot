digraph {
6 [style = filled, label = "colType.getId() != null@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "colType.getId() != null@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "return ROWS_CANNOT_MATCH@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "eval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "eval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "this.cols = Maps.newHashMap()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "this.valueCounts = Maps.newHashMap()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int id = colType.getId().intValue()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "stats.put(id,col.getStatistics())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "this.isFallback = Maps.newHashMap()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "MessageType fileSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "mayContainNulls.put(id,mayContainNull(meta))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int id = colType.getId().intValue()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "rowGroup.getRowCount() <= 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MessageType fileSchema@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "conversions.put(id,converterFromParquet(colType))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "colType.getId() != null@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BlockMetaData rowGroup@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "valueCounts.put(id,col.getValueCount())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "this.mayContainNulls = Maps.newHashMap()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "PrimitiveType colType = fileSchema.getType(desc.getPath()).asPrimitiveType()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.dictionaries = dictionaries@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "PrimitiveType colType = fileSchema.getType(col.getPath().toArray()).asPrimitiveType()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return ExpressionVisitors.visit(expr,this)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.dictCache = Maps.newHashMap()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "this.conversions = Maps.newHashMap()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "eval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "conversions.put(id,converterFromParquet(colType))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "return ExpressionVisitors.visit(expr,this)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PrimitiveType colType = fileSchema.getType(meta.getPath().toArray()).asPrimitiveType()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "this.stats = Maps.newHashMap()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "this.conversions = Maps.newHashMap()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DictionaryPageReadStore dictionaries@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "isFallback.put(id,hasNonDictionaryPages(meta))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MessageType fileSchema@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16->26 [style = solid, label="id"];
5->2 [style = bold, label=""];
23->9 [style = bold, label=""];
29->13 [style = bold, label=""];
6->16 [style = dotted, label="true"];
25->29 [style = bold, label=""];
18->3 [style = dotted, label="true"];
7->8 [style = bold, label=""];
15->1 [style = bold, label=""];
2->4 [style = bold, label=""];
4->7 [style = solid, label="id"];
4->7 [style = bold, label=""];
2->4 [style = dotted, label="true"];
13->16 [style = solid, label="id"];
16->26 [style = bold, label=""];
19->5 [style = bold, label=""];
4->19 [style = solid, label="id"];
13->33 [style = dotted, label="true"];
22->0 [style = bold, label=""];
2->5 [style = bold, label=""];
34->24 [style = bold, label=""];
19->8 [style = bold, label=""];
22->20 [style = dotted, label="true"];
9->15 [style = bold, label=""];
12->1 [style = bold, label=""];
34->35 [style = dotted, label="true"];
13->16 [style = dotted, label="true"];
26->33 [style = bold, label=""];
6->13 [style = bold, label=""];
14->9 [style = bold, label=""];
1->29 [style = dashed, label="0"];
1->12 [style = solid, label="colType"];
27->32 [style = dotted, label="true"];
1->6 [style = bold, label=""];
0->11 [style = bold, label=""];
11->14 [style = bold, label=""];
2->8 [style = bold, label=""];
13->26 [style = dotted, label="true"];
16->26 [style = dashed, label="0"];
16->30 [style = solid, label="id"];
16->12 [style = bold, label=""];
6->13 [style = dotted, label="true"];
12->5 [style = bold, label=""];
33->30 [style = bold, label=""];
18->17 [style = dotted, label="true"];
20->0 [style = solid, label="dictionaries"];
24->31 [style = bold, label=""];
13->16 [style = bold, label=""];
13->29 [style = bold, label=""];
29->30 [style = solid, label="colType"];
6->5 [style = bold, label=""];
13->12 [style = solid, label="id"];
7->5 [style = bold, label=""];
14->23 [style = bold, label=""];
18->10 [style = dotted, label="true"];
17->32 [style = dashed, label="0"];
34->35 [style = bold, label=""];
7->19 [style = bold, label=""];
27->34 [style = bold, label=""];
6->12 [style = dotted, label="true"];
13->36 [style = bold, label=""];
35->24 [style = bold, label=""];
27->28 [style = dotted, label="true"];
2->19 [style = dotted, label="true"];
6->1 [style = bold, label=""];
17->0 [style = solid, label="dictionaries"];
16->33 [style = solid, label="id"];
30->36 [style = bold, label=""];
31->25 [style = bold, label=""];
22->17 [style = dotted, label="true"];
2->7 [style = dotted, label="true"];
13->30 [style = dotted, label="true"];
30->29 [style = bold, label=""];
9->24 [style = dashed, label="0"];
18->0 [style = bold, label=""];
22->21 [style = dotted, label="true"];
}
