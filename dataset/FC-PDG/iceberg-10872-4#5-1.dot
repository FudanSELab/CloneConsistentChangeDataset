digraph {
5 [style = filled, label = "boolean allOrcFileScanTasks = tasks().stream().allMatch(null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean atLeastOneColumn = expectedSchema.columns().size() > 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "readUsingBatch == null@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "boolean hasNoIdentityProjections = tasks().stream().allMatch(null)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "boolean readUsingBatch = batchReadsEnabled && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && hasNoIdentityProjections && onlyPrimitives))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "createReaderFactory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "boolean atLeastOneColumn = lazySchema().columns().size() > 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "this.readUsingBatch = batchReadsEnabled && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && onlyPrimitives))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "enableBatchRead['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "boolean allParquetFileScanTasks = tasks().stream().allMatch(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return new ReaderFactory(readUsingBatch? batchSize: 0)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.readUsingBatch = batchReadsEnabled && (allOrcFileScanTasks || (allParquetFileScanTasks && atLeastOneColumn && hasNoIdentityProjections && onlyPrimitives))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "return readUsingBatch@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "enableBatchRead['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "boolean onlyPrimitives = lazySchema().columns().stream().allMatch(null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "boolean onlyPrimitives = expectedSchema.columns().stream().allMatch(null)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->2 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
9->4 [style = solid, label="readUsingBatch"];
3->2 [style = dashed, label="0"];
8->6 [style = dashed, label="0"];
6->12 [style = solid, label="atLeastOneColumn"];
0->4 [style = solid, label="readUsingBatch"];
12->14 [style = solid, label="readUsingBatch"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
8->3 [style = bold, label=""];
6->9 [style = solid, label="allOrcFileScanTasks"];
7->4 [style = bold, label=""];
7->9 [style = dotted, label="true"];
0->12 [style = dashed, label="0"];
7->0 [style = dotted, label="true"];
2->12 [style = solid, label="onlyPrimitives"];
5->9 [style = solid, label="allParquetFileScanTasks"];
1->7 [style = bold, label=""];
10->7 [style = bold, label=""];
3->9 [style = solid, label="onlyPrimitives"];
11->12 [style = solid, label="allParquetFileScanTasks"];
3->0 [style = bold, label=""];
2->12 [style = bold, label=""];
7->5 [style = dotted, label="true"];
2->0 [style = solid, label="hasNoIdentityProjections"];
3->9 [style = bold, label=""];
11->5 [style = bold, label=""];
5->12 [style = solid, label="allOrcFileScanTasks"];
7->5 [style = bold, label=""];
5->6 [style = bold, label=""];
15->11 [style = bold, label=""];
8->2 [style = bold, label=""];
6->0 [style = solid, label="allOrcFileScanTasks"];
13->12 [style = solid, label="hasNoIdentityProjections"];
7->3 [style = dotted, label="true"];
0->4 [style = bold, label=""];
8->0 [style = solid, label="atLeastOneColumn"];
6->13 [style = bold, label=""];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = solid, label="atLeastOneColumn"];
0->9 [style = dashed, label="0"];
7->8 [style = dotted, label="true"];
5->0 [style = solid, label="allParquetFileScanTasks"];
3->0 [style = solid, label="onlyPrimitives"];
13->2 [style = bold, label=""];
}
