digraph {
3 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Double sumi = tuple.getDouble(\"sum(a_i)\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "tuple = tuples.get(2)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RollupStream rollupStream = new RollupStream(stream,buckets,metrics)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "tuples = getTuples(solrStream)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Double sumf = tuple.getDouble(\"sum(a_f)\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(7.5,avgi.doubleValue(),0.001)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(26,sumf.doubleValue(),0.001)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"partitionKeys\",\"a_s\",\"qt\",\"/export\")@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "ModifiableSolrParams solrParams = new ModifiableSolrParams()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(6.5,avgf.doubleValue(),0.001)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "tuple = tuples.get(1)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "testRollupWithNoParallel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(4,mini.doubleValue(),0.001)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "rollupStream.setStreamContext(streamContext)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "List<Tuple> tuples = getTuples(rollupStream)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(38,sumi.doubleValue(),0.001)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<Tuple> tuples = getTuples(parallelStream)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(18,sumf.doubleValue(),0.001)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "maxf = tuple.getDouble(\"max(a_f)\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "minf = tuple.getDouble(\"min(a_f)\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "streamContext = new StreamContext()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(4.5,avgf.doubleValue(),0.001)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(9.5,avgi.doubleValue(),0.001)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Metric(( metrics = {new SumMetric(\"a_i\"),new SumMetric(\"a_f\"),new MinMetric(\"a_i\"),new MinMetric(\"a_f\"),new MaxMetric(\"a_i\"),new MaxMetric(\"a_f\"),new MeanMetric(\"a_i\"),new MeanMetric(\"a_f\"),new CountMetric()}@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "Double avgf = tuple.getDouble(\"avg(a_f)\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(\"hello3\",bucket)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Tuple tuple = tuples.get(0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"hello0\",bucket)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Double maxi = tuple.getDouble(\"max(a_i)\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(3,mini.doubleValue(),0.001)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(17,sumi.doubleValue(),0.001)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "avgi = tuple.getDouble(\"avg(a_i)\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "List<String> shardUrls = TupleStream.getShards(cluster.getZkServer().getZkAddress(),COLLECTIONORALIAS,streamContext)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,minf.doubleValue(),0.001)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "bucket = tuple.getString(\"a_s\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(11,maxi.doubleValue(),0.001)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Double maxf = tuple.getDouble(\"max(a_f)\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertEquals(3,minf.doubleValue(),0.001)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertEquals(3,tuples.size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(2,count.doubleValue(),0.001)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "{solrClientCache.close()}@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "solrParams.add(\"qt\",\"/stream\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "parallelStream.setStreamContext(streamContext)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assert(tuples.size() == 3)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(0,mini.doubleValue(),0.001)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Double avgi = tuple.getDouble(\"avg(a_i)\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "sumi = tuple.getDouble(\"sum(a_i)\")@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(4.25,avgi.doubleValue(),0.001)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "ParallelStream parallelStream = parallelStream(rollupStream,new FieldComparator(\"a_s\",ComparatorOrder.ASCENDING))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "testParallelRollupStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertEquals(4,count.doubleValue(),0.001)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "attachStreamFactory(parallelStream)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "count = tuple.getDouble(\"count(*)\")@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"1\").add(id,\"2\",\"a_s\",\"hello0\",\"a_i\",\"2\",\"a_f\",\"2\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello0\",\"a_i\",\"1\",\"a_f\",\"5\").add(id,\"5\",\"a_s\",\"hello3\",\"a_i\",\"10\",\"a_f\",\"6\").add(id,\"6\",\"a_s\",\"hello4\",\"a_i\",\"11\",\"a_f\",\"7\").add(id,\"7\",\"a_s\",\"hello3\",\"a_i\",\"12\",\"a_f\",\"8\").add(id,\"8\",\"a_s\",\"hello3\",\"a_i\",\"13\",\"a_f\",\"9\").add(id,\"9\",\"a_s\",\"hello0\",\"a_i\",\"14\",\"a_f\",\"10\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Double count = tuple.getDouble(\"count(*)\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Double mini = tuple.getDouble(\"min(a_i)\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(5.5,avgf.doubleValue(),0.001)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(9,maxf.doubleValue(),0.001)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(\"hello4\",bucket)@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(7,maxf.doubleValue(),0.001)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(10,maxf.doubleValue(),0.001)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "SolrStream solrStream = new SolrStream(shardUrls.get(0),solrParams)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "sumf = tuple.getDouble(\"sum(a_f)\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{solrClientCache.close()}@@@86@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(13,maxi.doubleValue(),0.001)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "maxi = tuple.getDouble(\"max(a_i)\")@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(11,sumf.doubleValue(),0.001)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testParallelRollupStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(14,maxi.doubleValue(),0.001)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Double minf = tuple.getDouble(\"min(a_f)\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "solrParams.add(\"expr\",\"rollup(search(\" + COLLECTIONORALIAS + \",q=\"*:*\",fl=\"a_s,a_i,a_f\",sort=\"a_s desc\",partitionKeys=\"a_s\"),over=\"a_s\")\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(15,sumi.longValue())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String bucket = tuple.getString(\"a_s\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "mini = tuple.getDouble(\"min(a_i)\")@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Bucket(( buckets = {new Bucket(\"a_s\")}@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(4,minf.doubleValue(),0.001)@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "avgf = tuple.getDouble(\"avg(a_f)\")@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"*:*\",\"fl\",\"a_s,a_i,a_f\",\"sort\",\"a_s asc\",\"partitionKeys\",\"a_s\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->54 [style = bold, label=""];
0->87 [style = solid, label="streamContext"];
26->17 [style = bold, label=""];
24->51 [style = bold, label=""];
52->33 [style = bold, label=""];
58->79 [style = bold, label=""];
29->8 [style = bold, label=""];
70->76 [style = bold, label=""];
25->72 [style = solid, label="rollupStream"];
45->5 [style = bold, label=""];
20->65 [style = bold, label=""];
43->10 [style = bold, label=""];
34->61 [style = bold, label=""];
39->63 [style = bold, label=""];
11->57 [style = bold, label=""];
62->21 [style = bold, label=""];
0->27 [style = bold, label=""];
79->44 [style = bold, label=""];
13->12 [style = bold, label=""];
0->48 [style = solid, label="streamContext"];
59->6 [style = bold, label=""];
35->37 [style = bold, label=""];
36->28 [style = bold, label=""];
36->25 [style = solid, label="buckets"];
17->23 [style = bold, label=""];
5->46 [style = bold, label=""];
64->1 [style = bold, label=""];
57->24 [style = bold, label=""];
21->55 [style = bold, label=""];
16->78 [style = bold, label=""];
90->93 [style = solid, label="solrStream"];
17->83 [style = bold, label=""];
14->43 [style = bold, label=""];
25->87 [style = bold, label=""];
38->18 [style = bold, label=""];
77->32 [style = bold, label=""];
37->56 [style = bold, label=""];
76->47 [style = bold, label=""];
7->14 [style = bold, label=""];
82->93 [style = bold, label=""];
33->2 [style = bold, label=""];
65->19 [style = bold, label=""];
1->70 [style = bold, label=""];
92->74 [style = bold, label=""];
69->59 [style = bold, label=""];
78->9 [style = bold, label=""];
74->0 [style = bold, label=""];
8->22 [style = bold, label=""];
28->25 [style = solid, label="metrics"];
60->74 [style = bold, label=""];
25->72 [style = bold, label=""];
93->86 [style = bold, label=""];
86->85 [style = bold, label=""];
89->82 [style = bold, label=""];
4->73 [style = bold, label=""];
22->67 [style = bold, label=""];
63->20 [style = bold, label=""];
10->68 [style = bold, label=""];
42->84 [style = dashed, label="0"];
12->53 [style = bold, label=""];
18->39 [style = bold, label=""];
64->69 [style = solid, label="bucket"];
27->58 [style = bold, label=""];
89->82 [style = solid, label="streamContext"];
79->44 [style = solid, label="sParamsA"];
51->40 [style = bold, label=""];
41->31 [style = bold, label=""];
54->52 [style = bold, label=""];
61->30 [style = bold, label=""];
6->16 [style = bold, label=""];
72->42 [style = solid, label="parallelStream"];
72->26 [style = solid, label="parallelStream"];
23->13 [style = bold, label=""];
53->29 [style = bold, label=""];
27->58 [style = solid, label="solrClientCache"];
25->84 [style = solid, label="rollupStream"];
81->90 [style = bold, label=""];
71->79 [style = dashed, label="0"];
88->91 [style = bold, label=""];
83->81 [style = bold, label=""];
84->88 [style = bold, label=""];
67->49 [style = bold, label=""];
87->84 [style = bold, label=""];
9->62 [style = bold, label=""];
73->15 [style = bold, label=""];
44->25 [style = solid, label="stream"];
71->44 [style = solid, label="sParamsA"];
15->39 [style = solid, label="bucket"];
58->71 [style = bold, label=""];
68->45 [style = bold, label=""];
46->64 [style = bold, label=""];
3->69 [style = bold, label=""];
72->42 [style = bold, label=""];
80->74 [style = bold, label=""];
23->91 [style = dashed, label="0"];
66->11 [style = bold, label=""];
42->48 [style = bold, label=""];
55->4 [style = bold, label=""];
48->26 [style = bold, label=""];
32->35 [style = bold, label=""];
71->44 [style = bold, label=""];
47->50 [style = bold, label=""];
30->3 [style = bold, label=""];
75->38 [style = bold, label=""];
56->7 [style = bold, label=""];
13->35 [style = solid, label="bucket"];
0->91 [style = solid, label="streamContext"];
19->41 [style = bold, label=""];
17->90 [style = solid, label="solrParams"];
50->34 [style = bold, label=""];
91->17 [style = bold, label=""];
44->36 [style = bold, label=""];
15->66 [style = bold, label=""];
28->25 [style = bold, label=""];
40->75 [style = bold, label=""];
90->89 [style = bold, label=""];
49->77 [style = bold, label=""];
}
