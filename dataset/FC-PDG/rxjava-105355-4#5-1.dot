digraph {
30 [style = filled, label = "Observable<Long> source = Observable.interval(1,1,TimeUnit.MILLISECONDS).take(1000).subscribeOn(Schedulers.io())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Flowable<Long> source = Flowable.interval(1,1,TimeUnit.MILLISECONDS).take(1000).subscribeOn(Schedulers.io())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ts.assertNoErrors()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expected.set(i - j * 10,(long)i)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < j * 10 + 10@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "to.awaitDone(3,TimeUnit.SECONDS)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Flowable<Long> cached = source.replay().autoConnect()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TestObserverEx<Long> to = new TestObserverEx<Long>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "asyncComeAndGo['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Observable<Long> output = cached.observeOn(Schedulers.computation())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "List<TestObserverEx<Long>> list = new ArrayList<TestObserverEx<Long>>(100)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i < 100@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "output.skip(i * 10).take(10).subscribe(to)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "output.skip(i * 10).take(10).subscribe(ts)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestSubscriberEx<Long> ts = new TestSubscriberEx<Long>()@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Observable<Long> cached = source.replay().autoConnect()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "to.assertTerminated()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<TestSubscriberEx<Long>> list = new ArrayList<TestSubscriberEx<Long>>(100)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Flowable<Long> output = cached.observeOn(Schedulers.computation(),false,1024)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<TestSubscriberEx<Long>> list = new ArrayList<>(100)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "to.assertNoErrors()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ts.assertValueSequence(expected)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "asyncComeAndGo['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int i = j * 10@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "expected.add((long)(i - 10))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "j++@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "list.add(ts)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TestSubscriberEx<Long> ts = new TestSubscriberEx<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ts.awaitDone(3,TimeUnit.SECONDS)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<Long> expected = new ArrayList<>()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "i < 10@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "asyncComeAndGo['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "list.add(to)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ts.assertTerminated()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int j = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Long> expected = new ArrayList<Long>()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "to.assertValueSequence(expected)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
3->41 [style = dashed, label="0"];
10->12 [style = solid, label="i"];
16->32 [style = dashed, label="0"];
32->37 [style = bold, label=""];
8->35 [style = dashed, label="0"];
0->22 [style = solid, label="expected"];
30->36 [style = bold, label=""];
8->6 [style = bold, label=""];
25->28 [style = dotted, label="true"];
25->29 [style = bold, label=""];
22->34 [style = dashed, label="0"];
29->22 [style = solid, label="expected"];
3->4 [style = bold, label=""];
25->11 [style = dotted, label="true"];
25->31 [style = bold, label=""];
19->5 [style = bold, label=""];
31->39 [style = solid, label="to"];
12->10 [style = bold, label=""];
15->11 [style = bold, label=""];
13->21 [style = dotted, label="true"];
0->24 [style = bold, label=""];
34->17 [style = bold, label=""];
2->15 [style = bold, label=""];
39->38 [style = bold, label=""];
18->35 [style = bold, label=""];
1->25 [style = solid, label="i"];
27->5 [style = bold, label=""];
2->11 [style = solid, label="ts"];
10->7 [style = solid, label="i"];
16->9 [style = bold, label=""];
24->21 [style = solid, label="i"];
17->7 [style = solid, label="j"];
21->13 [style = bold, label=""];
17->35 [style = bold, label=""];
14->16 [style = bold, label=""];
4->12 [style = solid, label="i"];
18->17 [style = solid, label="j"];
25->28 [style = bold, label=""];
7->10 [style = dotted, label="true"];
37->1 [style = bold, label=""];
26->1 [style = bold, label=""];
16->26 [style = bold, label=""];
41->4 [style = bold, label=""];
21->13 [style = solid, label="i"];
18->7 [style = solid, label="j"];
20->25 [style = bold, label=""];
10->7 [style = bold, label=""];
25->38 [style = dotted, label="true"];
25->2 [style = bold, label=""];
13->23 [style = dotted, label="true"];
7->12 [style = dotted, label="true"];
9->37 [style = dashed, label="0"];
35->40 [style = bold, label=""];
25->15 [style = dotted, label="true"];
25->20 [style = dotted, label="true"];
2->28 [style = dashed, label="0"];
33->30 [style = bold, label=""];
22->17 [style = bold, label=""];
20->25 [style = solid, label="i"];
9->1 [style = bold, label=""];
13->18 [style = bold, label=""];
5->30 [style = dashed, label="0"];
24->13 [style = bold, label=""];
25->0 [style = bold, label=""];
1->20 [style = solid, label="i"];
17->8 [style = bold, label=""];
4->7 [style = solid, label="i"];
38->20 [style = bold, label=""];
24->13 [style = solid, label="i"];
25->31 [style = dotted, label="true"];
6->40 [style = dashed, label="0"];
25->39 [style = dotted, label="true"];
28->15 [style = solid, label="ts"];
0->34 [style = solid, label="expected"];
4->7 [style = bold, label=""];
7->22 [style = bold, label=""];
28->11 [style = solid, label="ts"];
9->26 [style = dashed, label="0"];
0->29 [style = dashed, label="0"];
31->38 [style = solid, label="to"];
18->8 [style = bold, label=""];
31->39 [style = bold, label=""];
15->39 [style = dashed, label="0"];
25->2 [style = dotted, label="true"];
1->25 [style = bold, label=""];
24->23 [style = solid, label="i"];
11->20 [style = bold, label=""];
28->15 [style = bold, label=""];
7->12 [style = bold, label=""];
36->32 [style = bold, label=""];
5->14 [style = bold, label=""];
14->36 [style = dashed, label="0"];
2->31 [style = dashed, label="0"];
11->38 [style = dashed, label="0"];
7->34 [style = bold, label=""];
23->21 [style = bold, label=""];
2->15 [style = solid, label="ts"];
17->4 [style = solid, label="j"];
40->41 [style = bold, label=""];
4->10 [style = solid, label="i"];
13->23 [style = bold, label=""];
29->24 [style = bold, label=""];
18->4 [style = solid, label="j"];
21->23 [style = solid, label="i"];
17->12 [style = solid, label="j"];
18->12 [style = solid, label="j"];
}
