digraph {
9 [style = filled, label = "TestUtils.assertFutureError(future,)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TestUtils.assertFutureError(future,)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "KafkaFuture<Void> future = env.adminClient().createTopics(Collections.singleton(new NewTopic(\"myTopic\",Collections.singletonMap(0,asList(0,1,2)))),new CreateTopicsOptions().timeoutMs(1000)).all()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testPropagatedMetadataFetchException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "KafkaFuture<Void> future = env.adminClient().createTopics(singleton(new NewTopic(\"myTopic\",Collections.singletonMap(0,asList(0,1,2)))),new CreateTopicsOptions().timeoutMs(1000)).all()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "env.kafkaClient().createPendingAuthenticationError(env.cluster().nodeById(0),TimeUnit.DAYS.toMillis(1))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "env.kafkaClient().prepareResponse(prepareCreateTopicsResponse(\"myTopic\",Errors.NONE))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testTimeoutWithoutMetadata['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testTimeoutWithoutMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6->4 [style = bold, label=""];
3->6 [style = bold, label=""];
1->4 [style = bold, label=""];
5->2 [style = bold, label=""];
6->4 [style = solid, label="future"];
4->9 [style = dashed, label="0"];
3->1 [style = bold, label=""];
7->2 [style = bold, label=""];
1->6 [style = dashed, label="0"];
1->9 [style = solid, label="future"];
1->9 [style = bold, label=""];
2->3 [style = bold, label=""];
2->8 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
1->4 [style = solid, label="future"];
}
