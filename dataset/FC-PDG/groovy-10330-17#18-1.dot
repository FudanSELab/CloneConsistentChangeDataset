digraph {
28 [style = filled, label = "assertEquals(Boolean.TRUE,init.getDebug())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "init.setRecompileGroovySource(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "init.setVerbose(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(CompilerConfiguration.JDK5,config.getTargetBytecode())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "init.setTargetBytecode(CompilerConfiguration.JDK5)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(targetDirectory,config.getTargetDirectory())@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertEquals(\"Gutenberg\",config.getSourceEncoding())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(CompilerConfiguration.JDK5,init.getTargetBytecode())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",config.getScriptBaseClass())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"somevalue\",init.getJointCompilationOptions().get(\"somekey\"))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "init.setMinimumRecompilationInterval(975)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "init.setScriptBaseClass(\"\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(975,config.getMinimumRecompilationInterval())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"somevalue\",config.getJointCompilationOptions().get(\"somekey\"))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Boolean.FALSE,init.getParameters())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testCopyConstructor1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "init.setParameters(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "init.setSourceEncoding(\"Gutenberg\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(234,init.getMinimumRecompilationInterval())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "init.setDebug(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "init.setTolerance(55)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"File1\",config.getClasspath().get(0))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(tergetDirectory,init.getTargetDirectory())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(\"\",config.getScriptBaseClass())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(tergetDirectory,config.getTargetDirectory())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(Boolean.FALSE,config.getRecompileGroovySource())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "File targetDirectory = new File(\"A wandering path\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,config.getWarningLevel())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(975,init.getMinimumRecompilationInterval())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(Boolean.TRUE,init.getRecompileGroovySource())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertEquals(55,config.getTolerance())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(Collections.emptyList(),config.getClasspath())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(\"Gutenberg\",init.getSourceEncoding())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "final CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "assertEquals(55,init.getTolerance())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "init.setVerbose(false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ParserPluginFactory pluginFactory = ParserPluginFactory.antlr4()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Boolean.FALSE,config.getVerbose())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testCopyConstructor2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "init.setClasspath(\"File1\" + File.pathSeparator + \"Somewhere\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(\"blarg.foo.WhatSit\",init.getScriptBaseClass())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "init.setTargetDirectory(tergetDirectory)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"LEAD-123\",config.getSourceEncoding())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testCopyConstructor1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(720,config.getTolerance())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(Boolean.FALSE,init.getDebug())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(Boolean.TRUE,init.getParameters())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"Somewhere\",init.getClasspath().get(1))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "init.setPluginFactory(pluginFactory)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(Boolean.FALSE,init.getRecompileGroovySource())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "init.setDebug(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(targetDirectory,init.getTargetDirectory())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Boolean.FALSE,config.getDebug())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "init.setJointCompilationOptions(Collections.singletonMap(\"somekey\",\"somevalue\"))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "File tergetDirectory = new File(\"A wandering path\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(\"\",init.getScriptBaseClass())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"File1\",init.getClasspath().get(0))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "init.setParameters(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "init.setClasspath(\"\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(720,init.getTolerance())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\".jpp\",config.getDefaultScriptExtension())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "init.setRecompileGroovySource(false)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(\"LEAD-123\",init.getSourceEncoding())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "init.setDefaultScriptExtension(\".jpp\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "CompilerConfiguration init = new CompilerConfiguration()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "init.setMinimumRecompilationInterval(234)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Boolean.FALSE,init.getVerbose())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "init.setScriptBaseClass(\"blarg.foo.WhatSit\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "init.setSourceEncoding(\"LEAD-123\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(\"Somewhere\",config.getClasspath().get(1))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertEquals(Boolean.TRUE,init.getVerbose())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(1,init.getCompilationCustomizers().size())@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(234,config.getMinimumRecompilationInterval())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Boolean.TRUE,config.getDebug())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CompilerConfiguration config = new CompilerConfiguration(init)@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(WarningMessage.POSSIBLE_ERRORS,init.getWarningLevel())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "init.addCompilationCustomizers(new ImportCustomizer().addStarImports(\"groovy.transform\"))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "init.setTargetDirectory(targetDirectory)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "init.setTolerance(720)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Boolean.TRUE,config.getVerbose())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "init.setWarningLevel(WarningMessage.POSSIBLE_ERRORS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(Collections.emptyList(),init.getClasspath())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(pluginFactory,config.getPluginFactory())@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\".jpp\",init.getDefaultScriptExtension())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(tergetDirectory,config.getTargetDirectory())@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Boolean.TRUE,config.getRecompileGroovySource())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(pluginFactory,init.getPluginFactory())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->65 [style = solid, label="tergetDirectory"];
19->83 [style = dashed, label="0"];
25->45 [style = bold, label=""];
79->21 [style = bold, label=""];
74->82 [style = bold, label=""];
36->29 [style = bold, label=""];
41->8 [style = bold, label=""];
44->35 [style = bold, label=""];
17->9 [style = bold, label=""];
28->38 [style = bold, label=""];
17->71 [style = dashed, label="0"];
39->6 [style = bold, label=""];
25->43 [style = bold, label=""];
13->49 [style = bold, label=""];
11->46 [style = bold, label=""];
37->55 [style = bold, label=""];
40->44 [style = solid, label="pluginFactory"];
23->33 [style = bold, label=""];
40->16 [style = bold, label=""];
40->16 [style = solid, label="pluginFactory"];
10->66 [style = dashed, label="0"];
6->69 [style = dashed, label="0"];
48->10 [style = bold, label=""];
16->43 [style = bold, label=""];
8->47 [style = bold, label=""];
59->77 [style = bold, label=""];
13->68 [style = bold, label=""];
41->82 [style = dashed, label="0"];
27->19 [style = bold, label=""];
58->1 [style = solid, label="init"];
81->47 [style = bold, label=""];
32->76 [style = dashed, label="0"];
54->26 [style = bold, label=""];
12->22 [style = bold, label=""];
64->84 [style = bold, label=""];
31->14 [style = bold, label=""];
46->42 [style = bold, label=""];
0->77 [style = dashed, label="0"];
9->59 [style = dashed, label="0"];
67->64 [style = bold, label=""];
57->40 [style = bold, label=""];
19->12 [style = bold, label=""];
20->34 [style = bold, label=""];
15->50 [style = bold, label=""];
21->29 [style = solid, label="tergetDirectory"];
21->1 [style = solid, label="tergetDirectory"];
61->83 [style = bold, label=""];
37->21 [style = bold, label=""];
29->54 [style = dashed, label="0"];
27->61 [style = dashed, label="0"];
1->35 [style = bold, label=""];
21->25 [style = bold, label=""];
75->65 [style = bold, label=""];
84->69 [style = bold, label=""];
40->18 [style = solid, label="pluginFactory"];
38->32 [style = bold, label=""];
29->26 [style = bold, label=""];
34->58 [style = dashed, label="0"];
21->85 [style = solid, label="tergetDirectory"];
37->79 [style = dashed, label="0"];
86->74 [style = bold, label=""];
76->86 [style = bold, label=""];
73->78 [style = bold, label=""];
43->80 [style = bold, label=""];
83->67 [style = bold, label=""];
70->85 [style = bold, label=""];
32->31 [style = bold, label=""];
6->48 [style = bold, label=""];
44->56 [style = bold, label=""];
7->17 [style = bold, label=""];
35->15 [style = bold, label=""];
4->57 [style = bold, label=""];
8->81 [style = dashed, label="0"];
77->73 [style = bold, label=""];
78->46 [style = bold, label=""];
2->3 [style = bold, label=""];
25->53 [style = dashed, label="0"];
0->11 [style = bold, label=""];
1->51 [style = dashed, label="0"];
5->18 [style = bold, label=""];
22->64 [style = dashed, label="0"];
42->24 [style = bold, label=""];
12->67 [style = dashed, label="0"];
24->75 [style = dashed, label="0"];
56->35 [style = bold, label=""];
23->70 [style = dashed, label="0"];
60->58 [style = bold, label=""];
3->44 [style = bold, label=""];
46->75 [style = bold, label=""];
21->25 [style = solid, label="tergetDirectory"];
30->72 [style = dashed, label="0"];
38->63 [style = dashed, label="0"];
51->2 [style = bold, label=""];
11->73 [style = dashed, label="0"];
71->59 [style = bold, label=""];
42->46 [style = dashed, label="0"];
22->39 [style = bold, label=""];
1->2 [style = bold, label=""];
50->15 [style = dashed, label="0"];
14->74 [style = dashed, label="0"];
14->41 [style = bold, label=""];
31->86 [style = dashed, label="0"];
48->66 [style = bold, label=""];
80->63 [style = bold, label=""];
10->37 [style = bold, label=""];
82->81 [style = bold, label=""];
58->13 [style = bold, label=""];
4->40 [style = bold, label=""];
69->48 [style = bold, label=""];
9->0 [style = bold, label=""];
26->5 [style = bold, label=""];
72->70 [style = bold, label=""];
34->35 [style = solid, label="init"];
21->55 [style = dashed, label="0"];
7->62 [style = dashed, label="0"];
34->13 [style = bold, label=""];
30->23 [style = bold, label=""];
50->7 [style = bold, label=""];
47->72 [style = bold, label=""];
33->1 [style = bold, label=""];
15->62 [style = bold, label=""];
49->27 [style = bold, label=""];
52->34 [style = bold, label=""];
55->51 [style = solid, label="targetDirectory"];
43->28 [style = bold, label=""];
47->30 [style = bold, label=""];
45->4 [style = bold, label=""];
24->36 [style = bold, label=""];
62->71 [style = bold, label=""];
33->51 [style = bold, label=""];
49->68 [style = dashed, label="0"];
55->53 [style = solid, label="targetDirectory"];
63->76 [style = bold, label=""];
55->53 [style = bold, label=""];
39->84 [style = dashed, label="0"];
28->80 [style = dashed, label="0"];
85->1 [style = bold, label=""];
55->54 [style = solid, label="targetDirectory"];
68->61 [style = bold, label=""];
36->54 [style = bold, label=""];
53->45 [style = bold, label=""];
66->79 [style = bold, label=""];
}
