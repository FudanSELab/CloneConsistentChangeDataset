digraph {
11 [style = filled, label = "dataset.addValue(0.5,\"R3\",\"C1\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KeyToGroupMap<String,String> m = new KeyToGroupMap<>(\"G1\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "r.setSeriesVisible(1,Boolean.FALSE)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "dataset.addValue(5.0,\"R3\",\"C2\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(r.findRangeBounds(null))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testFindRangeBounds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DefaultCategoryDataset<String,String> dataset = new DefaultCategoryDataset<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "dataset.addValue(-2.0,\"R1\",\"C2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "dataset.addValue(null,\"R1\",\"C3\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "dataset.addValue(-6.0,\"R2\",\"C1\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "m.mapKeyToGroup(\"R3\",\"G2\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "m.mapKeyToGroup(\"R1\",\"G1\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(new Range(-6.0,1.0),r.findRangeBounds(dataset))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new Range(0.0,1.0),r.findRangeBounds(dataset))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GroupedStackedBarRenderer r = new GroupedStackedBarRenderer()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(new Range(-2.0,1.0),r.findRangeBounds(dataset))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFindRangeBounds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(new Range(-2.0,5.0),r.findRangeBounds(dataset))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "KeyToGroupMap m = new KeyToGroupMap(\"G1\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertNull(r.findRangeBounds(dataset))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LineAndShapeRenderer r = new LineAndShapeRenderer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "r.setSeriesToGroupMap(m)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(new Range(1.0,1.0),r.findRangeBounds(dataset))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "dataset.addValue(1.0,\"R1\",\"C1\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testFindRangeBounds['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "m.mapKeyToGroup(\"R2\",\"G1\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DefaultCategoryDataset dataset = new DefaultCategoryDataset()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->28 [style = solid, label="dataset"];
13->5 [style = solid, label="m"];
6->3 [style = bold, label=""];
25->28 [style = bold, label=""];
6->9 [style = solid, label="dataset"];
1->8 [style = bold, label=""];
21->5 [style = solid, label="m"];
19->12 [style = bold, label=""];
6->20 [style = dashed, label="0"];
20->19 [style = solid, label="dataset"];
17->9 [style = bold, label=""];
8->14 [style = bold, label=""];
14->17 [style = bold, label=""];
15->6 [style = bold, label=""];
7->0 [style = bold, label=""];
20->3 [style = bold, label=""];
6->3 [style = solid, label="dataset"];
0->26 [style = dashed, label="0"];
20->9 [style = solid, label="dataset"];
11->19 [style = bold, label=""];
23->8 [style = bold, label=""];
20->1 [style = solid, label="dataset"];
20->2 [style = solid, label="dataset"];
3->4 [style = bold, label=""];
6->27 [style = solid, label="dataset"];
0->15 [style = bold, label=""];
21->18 [style = bold, label=""];
20->3 [style = solid, label="dataset"];
29->26 [style = bold, label=""];
6->19 [style = solid, label="dataset"];
12->2 [style = bold, label=""];
13->21 [style = dashed, label="0"];
22->0 [style = bold, label=""];
18->10 [style = bold, label=""];
10->16 [style = bold, label=""];
6->14 [style = solid, label="dataset"];
15->20 [style = bold, label=""];
26->15 [style = bold, label=""];
9->21 [style = bold, label=""];
16->5 [style = bold, label=""];
4->1 [style = bold, label=""];
5->11 [style = bold, label=""];
6->23 [style = solid, label="dataset"];
6->1 [style = solid, label="dataset"];
6->2 [style = solid, label="dataset"];
20->14 [style = solid, label="dataset"];
1->23 [style = dashed, label="0"];
24->27 [style = bold, label=""];
9->24 [style = bold, label=""];
27->25 [style = bold, label=""];
4->23 [style = bold, label=""];
13->18 [style = bold, label=""];
9->13 [style = bold, label=""];
}
