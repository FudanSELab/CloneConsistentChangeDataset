digraph {
11 [style = filled, label = "String expected = \"Hello-1,100\" + \"Hello-2,200\" + \"Hello-3,300\" + \"null,400\" + \"Hello-5,500\" + \"Hello-6,600\" + \"Hello-7,700\" + \"null,800\"@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TableEnvironment tEnv = createBatchTableEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "hbaseTable.setRowKey(ROW_KEY,)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family2 ROW<col1 BYTES, col2 BYTES>,\" + \" rowkey INT\" + \") WITH (\" + \" 'connector' = 'hbase-2.2',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "hbaseTable.addColumn(FAMILY2,F2COL2,)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tEnv.registerFunction(\"toLong\",new ToLong())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Row> results = CollectionUtil.iteratorToList(table.execute().collect())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testTableSourceReadAsByteArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "((TableEnvironmentInternal)tEnv).registerTableSourceInternal(\"hTable\",hbaseTable)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "hbaseTable.addColumn(FAMILY2,F2COL1,)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String expected = \"+I(Hello-1, 100(\" + \"+I(Hello-2, 200(\" + \"+I(Hello-3, 300(\" + \"+I(null, 400(\" + \"+I(Hello-5, 500(\" + \"+I(Hello-6, 600(\" + \"+I(Hello-7, 700(\" + \"+I(null, 800(\"@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "HBaseTableSource hbaseTable = new HBaseTableSource(getConf(),TEST_TABLE_1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "isLegacyConnector@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testTableSourceReadAsByteArray['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Table table = tEnv.sqlQuery(\"SELECT \" + \" toUTF8(h.family2.col1), \" + \" toLong(h.family2.col2) \" + \"FROM hTable AS h\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "tEnv.registerFunction(\"toUTF8\",new ToUTF8())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE hTable (\" + \" family2 ROW<col1 BYTES, col2 BYTES>,\" + \" rowkey INT\" + \") WITH (\" + \" 'connector' = 'hbase-1.4',\" + \" 'table-name' = '\" + TEST_TABLE_1 + \"',\" + \" 'zookeeper.quorum' = '\" + getZookeeperQuorum() + \"'\" + \")\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "TestBaseUtils.compareResultAsText(results,expected)@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testTableSourceReadAsByteArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15->13 [style = bold, label=""];
9->0 [style = dotted, label="true"];
7->12 [style = bold, label=""];
16->10 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->12 [style = bold, label=""];
1->3 [style = bold, label=""];
9->17 [style = dotted, label="false"];
8->14 [style = bold, label=""];
9->17 [style = bold, label=""];
8->0 [style = solid, label="hbaseTable"];
9->7 [style = bold, label=""];
9->8 [style = bold, label=""];
9->14 [style = dotted, label="true"];
3->0 [style = bold, label=""];
14->1 [style = bold, label=""];
11->13 [style = solid, label="expected"];
9->8 [style = dotted, label="true"];
9->7 [style = dotted, label="false"];
5->2 [style = bold, label=""];
17->12 [style = bold, label=""];
18->10 [style = bold, label=""];
12->4 [style = bold, label=""];
6->10 [style = bold, label=""];
11->13 [style = bold, label=""];
2->15 [style = bold, label=""];
15->13 [style = solid, label="expected"];
9->1 [style = dotted, label="true"];
2->13 [style = solid, label="results"];
10->9 [style = bold, label=""];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
9->3 [style = dotted, label="true"];
}
