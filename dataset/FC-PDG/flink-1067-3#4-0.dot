digraph {
18 [style = filled, label = "verifyRocksObjectsReleased['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.keyedStateBackend.dispose()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RocksDB spyDB = keyedStateBackend.db@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "snapshot.cancel(true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(spyDB,times(1)).close()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(true,keyedStateBackend.isDisposed())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testReleasingSnapshotAfterBackendClosed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "RunnableFuture<SnapshotResult<KeyedStateHandle>> snapshot = keyedStateBackend.snapshot(0L,0L,testStreamFactory,CheckpointOptions.forCheckpointWithDefaultLocation())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{keyedStateBackend.dispose()keyedStateBackend = null}@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "keyedStateBackend.dispose()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "verify(rocksCloseable,times(1)).close()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNotNull(null,keyedStateBackend.db)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(spyDB,times(1)).releaseSnapshot(any())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "verify(spyDB,times(1)).close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "setupRocksKeyedStateBackend()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(rocksCloseable,times(0)).close()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(rocksCloseable,times(1)).close()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RocksDB spyDB = keyedStateBackend.db@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(true,keyedStateBackend.isDisposed())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verifyRocksDBStateUploaderClosed()@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "!enableIncrementalCheckpointing@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(spyDB,times(1)).getSnapshot()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testReleasingSnapshotAfterBackendClosed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2->11 [style = dotted, label="true"];
8->11 [style = dotted, label="true"];
22->8 [style = bold, label=""];
18->20 [style = bold, label=""];
10->6 [style = bold, label=""];
8->0 [style = bold, label=""];
2->11 [style = bold, label=""];
11->0 [style = bold, label=""];
16->19 [style = bold, label=""];
21->17 [style = bold, label=""];
20->22 [style = bold, label=""];
8->2 [style = dotted, label="true"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
4->1 [style = bold, label=""];
5->13 [style = bold, label=""];
2->16 [style = dotted, label="true"];
6->9 [style = bold, label=""];
14->1 [style = bold, label=""];
19->21 [style = bold, label=""];
12->10 [style = bold, label=""];
2->19 [style = bold, label=""];
8->2 [style = bold, label=""];
3->12 [style = bold, label=""];
11->16 [style = dashed, label="0"];
7->15 [style = bold, label=""];
13->8 [style = bold, label=""];
1->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
