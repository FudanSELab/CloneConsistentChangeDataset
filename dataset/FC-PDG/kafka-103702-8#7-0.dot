digraph {
9 [style = filled, label = "assertEquals(\"Our partition's leader should be ready\",Collections.singleton(node1),accum.ready(cluster,time.milliseconds()).readyNodes)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(\"No partitions should be ready.\",0,accum.ready(cluster,now).readyNodes.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "int i = 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "batch.records.flip()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RecordBatch batch = batches.get(0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "time.sleep(10)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int appends = 1024 / msgSize@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "accum.append(tp1,key,value,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(1,batches.size())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Iterator<LogEntry> iter = batch.records.iterator()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testFull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<RecordBatch> batches = accum.drain(cluster,Collections.singleton(node1),Integer.MAX_VALUE,0).get(node1.id())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testLinger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"Keys should match\",ByteBuffer.wrap(key),entry.record().key())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long now = time.milliseconds()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RecordBatch batch = batches.get(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,batches.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RecordAccumulator accum = new RecordAccumulator(1024,10 * 1024,10L,100L,false,metrics,time,metricTags)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "LogEntry entry = iter.next()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "i < appends@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "accum.append(tp1,key,value,CompressionType.NONE,null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "long lingerMs = 10L@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\"No partitions should be ready\",0,accum.ready(cluster,time.milliseconds()).readyNodes.size())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "RecordAccumulator accum = new RecordAccumulator(1024,10 * 1024,lingerMs,100L,false,metrics,time,metricTags)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "i++@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < appends@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "accum.append(tp1,key,value,CompressionType.NONE,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "batch.records.flip()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"Values should match\",ByteBuffer.wrap(value),entry.record().value())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertFalse(\"No more records\",iter.hasNext())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "RecordAccumulator accum = new RecordAccumulator(1024,10 * 1024,CompressionType.NONE,lingerMs,100L,false,metrics,time,metricTags)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "accum.append(tp1,key,value,CompressionType.NONE,null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\"Our partition's leader should be ready\",Collections.singleton(node1),accum.ready(cluster,time.milliseconds()).readyNodes)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testLinger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19->35 [style = solid, label="i"];
27->21 [style = solid, label="appends"];
29->35 [style = solid, label="i"];
30->22 [style = bold, label=""];
27->35 [style = solid, label="appends"];
24->19 [style = bold, label=""];
32->23 [style = bold, label=""];
35->24 [style = dotted, label="true"];
25->9 [style = bold, label=""];
18->12 [style = bold, label=""];
14->22 [style = dashed, label="0"];
28->26 [style = bold, label=""];
15->6 [style = bold, label=""];
33->21 [style = solid, label="i"];
12->16 [style = bold, label=""];
35->19 [style = dotted, label="true"];
16->17 [style = bold, label=""];
9->10 [style = bold, label=""];
21->32 [style = dotted, label="true"];
12->30 [style = dashed, label="0"];
10->7 [style = bold, label=""];
3->4 [style = bold, label=""];
34->30 [style = bold, label=""];
0->15 [style = bold, label=""];
26->21 [style = solid, label="i"];
7->3 [style = bold, label=""];
21->28 [style = dotted, label="true"];
26->21 [style = bold, label=""];
35->25 [style = bold, label=""];
8->0 [style = bold, label=""];
23->28 [style = bold, label=""];
6->1 [style = bold, label=""];
4->31 [style = bold, label=""];
35->1 [style = dotted, label="true"];
17->0 [style = bold, label=""];
21->20 [style = bold, label=""];
35->1 [style = bold, label=""];
21->26 [style = dotted, label="true"];
22->27 [style = bold, label=""];
5->12 [style = bold, label=""];
1->24 [style = bold, label=""];
21->23 [style = dotted, label="true"];
31->33 [style = bold, label=""];
19->35 [style = bold, label=""];
11->13 [style = bold, label=""];
21->32 [style = bold, label=""];
12->14 [style = bold, label=""];
0->24 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
12->16 [style = solid, label="lingerMs"];
14->8 [style = bold, label=""];
1->2 [style = bold, label=""];
13->9 [style = bold, label=""];
29->35 [style = bold, label=""];
27->29 [style = bold, label=""];
14->16 [style = dashed, label="0"];
33->21 [style = bold, label=""];
12->14 [style = solid, label="lingerMs"];
29->19 [style = solid, label="i"];
2->11 [style = bold, label=""];
33->26 [style = solid, label="i"];
}
