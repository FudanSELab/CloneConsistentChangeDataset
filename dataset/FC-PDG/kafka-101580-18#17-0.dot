digraph {
0 [style = filled, label = "testCountHelper(builder,input,supplier)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCountWithInternalStore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final String input = \"count-test-input\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "builder.table(input,consumed).groupBy(MockMapper.selectValueKeyValueMapper(),stringSerialzied).count(Materialized.as(\"count\")).toStream().process(supplier)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "builder.table(input,consumed).groupBy(MockMapper.selectValueKeyValueMapper(),stringSerialzied).count().toStream().process(supplier)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "testCountWithInternalStore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "builder.table(input,consumed).groupBy(MockMapper.selectValueKeyValueMapper(),stringSerialzied).count().toStream().process(supplier)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->0 [style = bold, label=""];
4->8 [style = bold, label=""];
5->1 [style = bold, label=""];
1->4 [style = bold, label=""];
2->0 [style = bold, label=""];
6->0 [style = bold, label=""];
7->1 [style = bold, label=""];
4->2 [style = bold, label=""];
4->0 [style = solid, label="input"];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
1->0 [style = solid, label="builder"];
2->8 [style = dashed, label="0"];
2->6 [style = dashed, label="0"];
}
