digraph {
14 [style = filled, label = "testBlocks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RetentionLeaseBackgroundSyncAction action = new RetentionLeaseBackgroundSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testBlocks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final IndexShard indexShard = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Index index = new Index(\"index\",\"uuid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testBlocks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final ShardId shardId = new ShardId(index,id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final IndicesService indicesService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new WriteMemoryLimits())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "when(indexService.getShard(id)).thenReturn(indexShard)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(indicesService.indexServiceSafe(index)).thenReturn(indexService)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int id = randomIntBetween(0,4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final IndexService indexService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(action.indexBlockLevel())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->3 [style = bold, label=""];
1->8 [style = bold, label=""];
10->15 [style = bold, label=""];
9->11 [style = bold, label=""];
7->10 [style = bold, label=""];
1->15 [style = dashed, label="0"];
9->1 [style = solid, label="indicesService"];
12->9 [style = bold, label=""];
9->15 [style = solid, label="indicesService"];
1->13 [style = dashed, label="0"];
11->7 [style = solid, label="index"];
11->0 [style = bold, label=""];
3->7 [style = solid, label="id"];
3->2 [style = bold, label=""];
10->13 [style = bold, label=""];
0->4 [style = bold, label=""];
7->10 [style = solid, label="shardId"];
2->5 [style = solid, label="indexShard"];
5->7 [style = bold, label=""];
9->13 [style = solid, label="indicesService"];
14->9 [style = bold, label=""];
6->9 [style = bold, label=""];
13->8 [style = bold, label=""];
10->1 [style = bold, label=""];
15->8 [style = bold, label=""];
0->4 [style = solid, label="indexService"];
2->5 [style = bold, label=""];
}
