digraph {
8 [style = filled, label = "when(byteBufAllocator.buffer()).thenReturn(payloadByteBuf)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify(byteBuf).writeBytes(payloadByteBuf)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEncode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "MySQLPacket actualMessage = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEncode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ByteBufAllocator byteBufAllocator = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "new PostgreSQLPacketCodecEngine().encode(context,actualMessage,byteBuf)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(actualMessage.getSequenceId()).thenReturn(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(byteBuf).writeInt(54)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "new MySQLPacketCodecEngine().encode(context,actualMessage,byteBuf)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(actualMessage.getIdentifier()).thenReturn(PostgreSQLCommandPacketType.AUTHENTICATION_REQUEST.getValue())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "when(payloadByteBuf.readableBytes()).thenReturn(50)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PostgreSQLIdentifierPacket actualMessage = mock()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ByteBuf payloadByteBuf = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(byteBuf).writeByte(PostgreSQLCommandPacketType.AUTHENTICATION_REQUEST.getValue())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "verify(byteBuf).writeByte(1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(actualMessage.getIdentifier()).thenReturn(PostgreSQLMessagePacketType.AUTHENTICATION_REQUEST.getValue())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "verify(byteBuf).writeMediumLE(50)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEncode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(context.alloc()).thenReturn(byteBufAllocator)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(actualMessage).write(ArgumentMatchers.any())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "verify(byteBuf).writeByte(PostgreSQLMessagePacketType.AUTHENTICATION_REQUEST.getValue())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
7->21 [style = dashed, label="0"];
11->21 [style = bold, label=""];
18->17 [style = bold, label=""];
12->20 [style = bold, label=""];
7->6 [style = solid, label="actualMessage"];
15->6 [style = bold, label=""];
6->17 [style = dashed, label="0"];
16->2 [style = bold, label=""];
5->18 [style = dashed, label="0"];
0->20 [style = dashed, label="0"];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
21->18 [style = bold, label=""];
9->19 [style = dashed, label="0"];
3->1 [style = solid, label="payloadByteBuf"];
12->13 [style = bold, label=""];
19->1 [style = bold, label=""];
7->5 [style = bold, label=""];
21->17 [style = solid, label="actualMessage"];
17->12 [style = bold, label=""];
5->6 [style = bold, label=""];
3->8 [style = bold, label=""];
0->13 [style = dashed, label="0"];
7->15 [style = bold, label=""];
10->2 [style = bold, label=""];
14->2 [style = bold, label=""];
2->4 [style = solid, label="byteBufAllocator"];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
20->19 [style = bold, label=""];
5->15 [style = dashed, label="0"];
8->11 [style = bold, label=""];
11->7 [style = bold, label=""];
3->8 [style = solid, label="payloadByteBuf"];
6->12 [style = bold, label=""];
}
