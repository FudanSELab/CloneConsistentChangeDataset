digraph {
7 [style = filled, label = "final List<RexNode> identityProjects = rexBuilder.identityProjects(qInput1.rowType)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final RexBuilder rexBuilder = call.getCluster().getRexBuilder()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "UnifyRuleCall call@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final MutableCalc compensatingCalc = MutableCalc.of(target,compensatingRexProgram)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "return null@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue())@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "!canPullUpFilterUnderJoin(joinRelType,qInput0Cond,null)@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput1Explained = explainCalc(qInput1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,qInput1Projs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final List<RexNode> qInput1Projs = qInput1Explained.right@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RexNode compenCond = qInput0Cond@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return null@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final RexNode qInput0Cond = qInput0Explained.left@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "final RexNode qInput1Cond = qInput1Explained.left@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "joinRelType == null@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < fieldCnt(qInput0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final MutableRel qInput1 = query.getRight()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final MutableCalc qInput0 = (MutableCalc)query.getLeft()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final MutableJoin target = (MutableJoin)call.target@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final JoinRelType joinRelType = sameJoinType(query.joinType,target.joinType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "splitted != null && splitted.isAlwaysTrue()@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final MutableCalc compenCalc = MutableCalc.of(target,compenRexProgram)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,identityProjects)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{int newIdx = idx - fieldCnt(qInput0) + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "final MutableJoin query = (MutableJoin)call.query@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < query.rowType.getFieldCount()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),fieldCnt(qInput0.getInput()))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "compenProjs.add(new RexInputRef(newIdx,query.rowType.getFieldList().get(i).getType()))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compensatingCalc)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final List<RexNode> qInput0Projs = qInput0Explained.right@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final RexNode qInput1CondShifted = RexUtil.shift(qInput1Cond,fieldCnt(qInput0.getInput()))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final RexNode compenCond = RexUtil.composeConjunction(rexBuilder,ImmutableList.of(qInput0Cond,qInput1CondShifted))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "return null@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue() && qInput1Cond.isAlwaysTrue())@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "compenProjs.add(shifted)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compenCalc)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "compenProjs.add(qInput0Projs.get(i))@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i++@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i++@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "final MutableCalc qInput1 = (MutableCalc)query.getRight()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput0Explained = explainCalc(qInput0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31->37 [style = bold, label=""];
29->5 [style = bold, label=""];
0->5 [style = dotted, label="true"];
14->41 [style = solid, label="rexBuilder"];
4->43 [style = solid, label="joinRelType"];
30->0 [style = dotted, label="true"];
38->25 [style = solid, label="i"];
31->37 [style = solid, label="compensatingRexProgram"];
49->48 [style = bold, label=""];
50->2 [style = bold, label=""];
13->49 [style = bold, label=""];
2->37 [style = dotted, label="true"];
25->29 [style = bold, label=""];
47->27 [style = bold, label=""];
9->7 [style = bold, label=""];
43->23 [style = bold, label=""];
26->11 [style = bold, label=""];
3->35 [style = bold, label=""];
41->31 [style = solid, label="compenCond"];
35->23 [style = bold, label=""];
27->5 [style = solid, label="i"];
38->26 [style = solid, label="i"];
5->0 [style = bold, label=""];
51->17 [style = bold, label=""];
33->0 [style = solid, label="query"];
27->38 [style = solid, label="i"];
26->29 [style = dotted, label="false"];
35->7 [style = bold, label=""];
27->26 [style = solid, label="i"];
26->46 [style = dotted, label="false"];
0->38 [style = dotted, label="true"];
34->28 [style = dotted, label="true"];
27->11 [style = solid, label="i"];
4->3 [style = bold, label=""];
46->38 [style = bold, label=""];
2->47 [style = dotted, label="true"];
16->2 [style = solid, label="newQueryJoinCond"];
30->41 [style = bold, label=""];
2->0 [style = dotted, label="true"];
27->0 [style = bold, label=""];
32->15 [style = solid, label="qInput0Cond"];
34->33 [style = bold, label=""];
30->6 [style = dotted, label="true"];
37->51 [style = solid, label="compensatingCalc"];
18->12 [style = bold, label=""];
28->21 [style = solid, label="call"];
15->30 [style = dashed, label="0"];
44->50 [style = bold, label=""];
1->35 [style = bold, label=""];
5->11 [style = solid, label="i"];
38->11 [style = solid, label="i"];
10->21 [style = bold, label=""];
14->31 [style = solid, label="rexBuilder"];
24->45 [style = dashed, label="0"];
38->0 [style = solid, label="i"];
2->27 [style = dotted, label="true"];
2->30 [style = solid, label="splitted"];
38->0 [style = bold, label=""];
39->40 [style = dotted, label="true"];
2->41 [style = dotted, label="true"];
31->10 [style = solid, label="compenRexProgram"];
5->25 [style = solid, label="i"];
23->7 [style = bold, label=""];
24->8 [style = bold, label=""];
19->10 [style = solid, label="target"];
48->30 [style = solid, label="qInput1Cond"];
0->26 [style = dotted, label="true"];
43->23 [style = dotted, label="true"];
3->1 [style = dotted, label="true"];
0->31 [style = bold, label=""];
30->15 [style = bold, label=""];
14->4 [style = bold, label=""];
2->17 [style = bold, label=""];
47->31 [style = solid, label="compenProjs"];
30->17 [style = bold, label=""];
27->0 [style = solid, label="i"];
22->45 [style = bold, label=""];
3->1 [style = bold, label=""];
22->26 [style = solid, label="qInput0"];
30->10 [style = dotted, label="true"];
45->49 [style = solid, label="qInput1"];
16->44 [style = dashed, label="0"];
2->30 [style = dotted, label="true"];
42->28 [style = dotted, label="true"];
25->29 [style = solid, label="newIdx"];
1->9 [style = bold, label=""];
9->43 [style = dashed, label="0"];
3->9 [style = bold, label=""];
15->31 [style = solid, label="compenCond"];
6->27 [style = bold, label=""];
11->5 [style = bold, label=""];
13->19 [style = bold, label=""];
6->31 [style = solid, label="compenProjs"];
19->14 [style = bold, label=""];
31->10 [style = bold, label=""];
9->23 [style = dotted, label="true"];
39->40 [style = bold, label=""];
45->8 [style = bold, label=""];
23->39 [style = bold, label=""];
7->18 [style = bold, label=""];
41->47 [style = bold, label=""];
26->11 [style = dotted, label="true"];
10->21 [style = solid, label="compenCalc"];
35->23 [style = dotted, label="true"];
30->41 [style = solid, label="qInput1CondShifted"];
27->25 [style = solid, label="i"];
43->39 [style = bold, label=""];
33->22 [style = bold, label=""];
30->31 [style = dotted, label="true"];
36->19 [style = bold, label=""];
40->44 [style = bold, label=""];
19->37 [style = solid, label="target"];
5->26 [style = solid, label="i"];
18->16 [style = bold, label=""];
11->38 [style = bold, label=""];
0->26 [style = bold, label=""];
48->36 [style = bold, label=""];
39->44 [style = bold, label=""];
8->32 [style = bold, label=""];
37->51 [style = bold, label=""];
22->8 [style = solid, label="qInput0"];
30->27 [style = dotted, label="true"];
1->43 [style = bold, label=""];
26->25 [style = bold, label=""];
44->50 [style = solid, label="newQueryJoinCond"];
4->9 [style = solid, label="joinRelType"];
42->33 [style = bold, label=""];
25->46 [style = solid, label="shifted"];
15->6 [style = bold, label=""];
22->25 [style = solid, label="qInput0"];
12->16 [style = bold, label=""];
25->46 [style = bold, label=""];
16->2 [style = bold, label=""];
30->21 [style = dotted, label="true"];
2->31 [style = dotted, label="true"];
28->51 [style = solid, label="call"];
20->33 [style = bold, label=""];
9->23 [style = bold, label=""];
18->12 [style = dotted, label="true"];
32->41 [style = solid, label="qInput0Cond"];
50->2 [style = solid, label="splitted"];
4->3 [style = solid, label="joinRelType"];
20->28 [style = dotted, label="true"];
5->0 [style = solid, label="i"];
10->37 [style = dashed, label="0"];
21->51 [style = dashed, label="0"];
3->43 [style = bold, label=""];
22->24 [style = bold, label=""];
32->13 [style = bold, label=""];
2->30 [style = bold, label=""];
30->15 [style = dotted, label="true"];
21->17 [style = bold, label=""];
2->51 [style = dotted, label="true"];
26->25 [style = dotted, label="false"];
}
