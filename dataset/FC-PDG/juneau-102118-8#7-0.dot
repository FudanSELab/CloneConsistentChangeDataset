digraph {
14 [style = filled, label = "String s = x2.getObjectMap(\"info\").getString(\"description\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.closeQuietly()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "System.err.println(m)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "debug@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"Hello World\",x(0(.getDescription())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ObjectMap m = client.get(\"\").run().getBody().as()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "RestClient client = SamplesMicroservice.DEFAULT_CLIENT@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "debug@@@5@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ResourceDescription(( x = client.get(\"\").run().getBody().as()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"helloWorld\",x(0(.getName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testJsonSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "OMap m = client.get(\"\").run().getBody().as()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "System.err.println(s)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testJson['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(s,s.startsWith(\"Example of a router resource page\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ObjectMap x2 = jsonClient.options(\"\").run().getBody().as()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testJsonSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "debug@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = solid, label="m"];
14->17 [style = solid, label="s"];
16->10 [style = bold, label=""];
2->1 [style = bold, label=""];
7->4 [style = solid, label="m"];
1->3 [style = bold, label=""];
3->4 [style = dotted, label="true"];
3->4 [style = bold, label=""];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
5->4 [style = dotted, label="true"];
4->0 [style = bold, label=""];
12->13 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
15->11 [style = bold, label=""];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
1->16 [style = dashed, label="0"];
5->4 [style = bold, label=""];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
15->11 [style = dotted, label="true"];
11->17 [style = bold, label=""];
14->15 [style = bold, label=""];
1->7 [style = dashed, label="0"];
6->7 [style = bold, label=""];
14->11 [style = solid, label="s"];
}
