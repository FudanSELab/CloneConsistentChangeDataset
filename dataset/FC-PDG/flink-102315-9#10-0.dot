digraph {
15 [style = filled, label = "DynamicTableFactory.Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createEncodingFormat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return new EncodingFormat<SerializationSchema<RowData>>(){@Override public SerializationSchema<RowData> createRuntimeEncoder(DynamicTableSink.Context context,DataType consumedDataType){final RowType rowType = (RowType)consumedDataType.getLogicalType()return new AvroRowDataSerializationSchema(rowType,optionalPropertiesMap.isEmpty()? ConfluentRegistryAvroSerializationSchema.forGeneric(subject.get(),AvroSchemaConverter.convertToSchema(rowType),schemaRegistryURL): ConfluentRegistryAvroSerializationSchema.forGeneric(subject.get(),AvroSchemaConverter.convertToSchema(rowType),schemaRegistryURL,optionalPropertiesMap),RowDataToAvroConverters.createConverter(rowType))}@Override public ChangelogMode getChangelogMode(){return ChangelogMode.insertOnly()}}@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ReadableConfig formatOptions@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Optional<String> subject = formatOptions.getOptional(SUBJECT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "!subject.isPresent()@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,?> optionalPropertiesMap = buildOptionalPropertiesMap(formatOptions)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ReadableConfig formatOptions@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "throw new ValidationException(String.format(\"Option %s.%s is required for serialization\",IDENTIFIER,SUBJECT.key()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "createEncodingFormat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String schemaRegistryURL = formatOptions.get(URL)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "createEncodingFormat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Map<String,?> optionalPropertiesMap = buildOptionalPropertiesMap(formatOptions)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "throw new ValidationException(String.format(\"Option '%s.%s' is required for serialization\",IDENTIFIER,SUBJECT.key()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FactoryUtil.validateFactoryOptions(this,formatOptions)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "DynamicTableFactory.Context context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7->2 [style = dotted, label="true"];
14->5 [style = solid, label="optionalPropertiesMap"];
2->6 [style = solid, label="formatOptions"];
11->2 [style = dotted, label="true"];
3->14 [style = bold, label=""];
4->12 [style = dashed, label="0"];
1->5 [style = solid, label="schemaRegistryURL"];
8->5 [style = bold, label=""];
8->12 [style = bold, label=""];
8->4 [style = bold, label=""];
11->10 [style = dotted, label="true"];
4->5 [style = bold, label=""];
13->6 [style = bold, label=""];
7->6 [style = bold, label=""];
11->6 [style = bold, label=""];
2->14 [style = solid, label="formatOptions"];
12->5 [style = bold, label=""];
1->3 [style = bold, label=""];
13->2 [style = dotted, label="true"];
3->9 [style = bold, label=""];
3->8 [style = bold, label=""];
14->8 [style = bold, label=""];
7->0 [style = dotted, label="true"];
13->15 [style = dotted, label="true"];
10->6 [style = solid, label="formatOptions"];
9->5 [style = solid, label="optionalPropertiesMap"];
9->8 [style = bold, label=""];
10->9 [style = solid, label="formatOptions"];
6->1 [style = bold, label=""];
8->4 [style = dotted, label="true"];
8->12 [style = dotted, label="true"];
}
