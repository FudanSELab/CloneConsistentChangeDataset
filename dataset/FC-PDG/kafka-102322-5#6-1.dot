digraph {
1 [style = filled, label = "shouldGetProcessRecordsSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).thenReturn(expectedSensor)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final String operation = \"process-records\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "when(streamsMetrics.threadLevelTagMap(THREAD_ID)).thenReturn(tagMap)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final Sensor sensor = ThreadMetrics.pollRecordsSensor(THREAD_ID,streamsMetrics)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "StreamsMetricsImpl.addAvgAndMaxToSensor(expectedSensor,THREAD_LEVEL_GROUP,tagMap,operation,avgDescription,maxDescription)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String operation = \"poll-records\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final String maxDescription = \"The maximum number of records polled from consumer within an iteration\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final String maxDescription = \"The maximum number of records processed within an iteration\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(,streamsMetrics)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String avgDescription = \"The average number of records polled from consumer within an iteration\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "replay(,streamsMetrics)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldGetPollRecordsSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "shouldGetProcessRecordsSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final Sensor sensor = ThreadMetrics.processRecordsSensor(THREAD_ID,streamsMetrics)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String avgDescription = \"The average number of records processed within an iteration\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
3->0 [style = solid, label="sensor"];
5->12 [style = dashed, label="0"];
1->8 [style = bold, label=""];
15->14 [style = bold, label=""];
2->6 [style = bold, label=""];
14->2 [style = solid, label="operation"];
6->18 [style = bold, label=""];
8->2 [style = solid, label="operation"];
3->18 [style = dashed, label="0"];
2->3 [style = bold, label=""];
14->17 [style = bold, label=""];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
9->10 [style = bold, label=""];
8->14 [style = dashed, label="0"];
16->2 [style = solid, label="maxDescription"];
3->0 [style = bold, label=""];
12->13 [style = bold, label=""];
17->2 [style = solid, label="avgDescription"];
10->5 [style = bold, label=""];
3->7 [style = bold, label=""];
10->2 [style = solid, label="maxDescription"];
10->12 [style = bold, label=""];
9->17 [style = dashed, label="0"];
5->4 [style = bold, label=""];
8->9 [style = bold, label=""];
16->5 [style = bold, label=""];
9->2 [style = solid, label="avgDescription"];
18->0 [style = solid, label="sensor"];
11->8 [style = bold, label=""];
10->16 [style = dashed, label="0"];
18->7 [style = bold, label=""];
4->13 [style = dashed, label="0"];
17->16 [style = bold, label=""];
13->2 [style = bold, label=""];
}
