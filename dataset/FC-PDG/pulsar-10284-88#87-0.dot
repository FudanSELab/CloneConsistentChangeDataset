digraph {
93 [style = filled, label = "verify(mockNamespaces).getSubscriptionDispatchRate(\"myprop/clust/ns1\")@@@219@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "namespaces.run(split(\"remove-persistence myprop/clust/ns1\"))@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PulsarAdmin admin = Mockito.mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "verify(mockNamespaces).getBookieAffinityGroup(\"myprop/clust/ns1\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
224 [style = filled, label = "verify(mockNamespaces).setMaxProducersPerTopic(\"myprop/clust/ns1\",1)@@@170@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
237 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@196@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "verify(mockNamespaces).setDelayedDeliveryMessages(\"myprop/clust/ns1\",new DelayedDeliveryPolicies(1000,true))@@@129@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
213 [style = filled, label = "verify(mockNamespaces).setSubscriptionTypesEnabled(\"myprop/clust/ns1\",Sets.newHashSet(SubscriptionType.Shared,SubscriptionType.Failover))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
240 [style = filled, label = "namespaces.run(split(\"clear-backlog -b 0x80000000_0xffffffff -s my-sub myprop/clust/ns1 -force\"))@@@155@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
250 [style = filled, label = "namespaces.run(split(\"set-message-ttl myprop/clust/ns1 -ttl 300\"))@@@92@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
154 [style = filled, label = "verify(mockNamespaces).removeMaxUnackedMessagesPerSubscription(\"myprop/clust/ns1\")@@@190@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "verify(mockNamespaces).removeNamespaceMessageTTL(\"myprop/clust/ns1\")@@@245@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "namespaces.run(split(\"remove-max-producers-per-topic myprop/clust/ns1\"))@@@171@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "namespaces.run(split(\"clear-backlog myprop/clust/ns1 -force\"))@@@140@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
253 [style = filled, label = "namespaces.run(split(\"clear-offload-deletion-lag myprop/clust/ns1\"))@@@236@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "namespaces.run(split(\"get-max-producers-per-topic myprop/clust/ns1\"))@@@167@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "verify(mockNamespaces).createNamespace(\"myprop/clust/ns1\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
183 [style = filled, label = "verify(mockNamespaces).deleteBookieAffinityGroup(\"myprop/clust/ns1\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
205 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10G -lt 10000\"))@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
221 [style = filled, label = "verify(mockNamespaces).setMaxConsumersPerTopic(\"myprop/clust/ns1\",2)@@@176@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
233 [style = filled, label = "namespaces.run(split(\"set-bookie-affinity-group myprop/clust/ns1 --primary-group test1 --secondary-group test2\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "mockNamespaces = mock()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
245 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@166@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@143@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
193 [style = filled, label = "namespaces.run(split(\"set-auto-topic-creation myprop/clust/ns1 -e -t non-partitioned\"))@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "verify(mockNamespaces).getMaxUnackedMessagesPerConsumer(\"myprop/clust/ns1\")@@@192@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "verify(mockNamespaces).getNamespaceMessageTTL(\"myprop/clust/ns1\")@@@111@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
121 [style = filled, label = "verify(mockNamespaces).setMaxUnackedMessagesPerConsumer(\"myprop/clust/ns1\",3)@@@194@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
194 [style = filled, label = "namespaces.run(split(\"remove-max-unacked-messages-per-subscription myprop/clust/ns1\"))@@@189@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "mockNamespaces = mock()@@@147@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
182 [style = filled, label = "mockNamespaces = mock()@@@195@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
232 [style = filled, label = "verify(mockNamespaces).getDispatchRate(\"myprop/clust/ns1\")@@@201@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
254 [style = filled, label = "namespaces.run(split(\"set-offload-policies myprop/clust/ns1 -r test-region -d aws-s3 -b test-bucket -e http://test.endpoint -mbs 32M -rbs 5M -oat 10M -oae 10s -orp tiered-storage-first\"))@@@238@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(mockNamespaces).unloadNamespaceBundle(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
164 [style = filled, label = "namespaces.run(split(\"set-deduplication myprop/clust/ns1 --enable\"))@@@98@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
184 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10,RetentionPolicy.producer_request_hold))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "verify(mockNamespaces).setOffloadThreshold(\"myprop/clust/ns1\",1024 * 1024 * 1024)@@@231@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
220 [style = filled, label = "namespaces.run(split(\"set-max-consumers-per-subscription myprop/clust/ns1 -c 3\"))@@@183@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "verify(mockNamespaces).deleteNamespaceAntiAffinityGroup(\"myprop/clust/ns1\")@@@121@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "namespaces.run(split(\"split-bundle myprop/clust/ns1 -b 0x00000000_0xffffffff\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "namespacesCreateWithBundlesAndClusters['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "verify(mockNamespaces).getDeduplicationSnapshotInterval(\"myprop/clust/ns1\")@@@249@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
172 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@165@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
206 [style = filled, label = "verify(mockNamespaces).setMaxSubscriptionsPerTopic(\"myprop/clust/ns1\",300)@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10L * 1024 * 1024 * 1024,RetentionPolicy.producer_exception))@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
196 [style = filled, label = "verify(mockNamespaces).getSubscribeRate(\"myprop/clust/ns1\")@@@213@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
203 [style = filled, label = "namespaces.run(split(\"permissions myprop/clust/ns1\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "namespaces.run(split(\"remove-message-ttl myprop/clust/ns1\"))@@@244@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
146 [style = filled, label = "verify(mockNamespaces).removeDeduplicationSnapshotInterval(\"myprop/clust/ns1\")@@@251@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
117 [style = filled, label = "namespaces.run(split(\"get-subscription-types-enabled myprop/clust/ns1\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "verify(mockNamespaces).setSubscribeRate(\"myprop/clust/ns1\",new SubscribeRate(2,60))@@@211@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
186 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "namespaces.run(split(\"get-anti-affinity-namespaces -p dummy -c cluster -g group\"))@@@118@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@197@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
236 [style = filled, label = "verify(mockNamespaces).setPersistence(\"myprop/clust/ns1\",new PersistencePolicies(2,1,1,100.0d))@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "verify(mockNamespaces).getPermissions(\"myprop/clust/ns1\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "verify(mockNamespaces).getSubscriptionTypesEnabled(\"myprop/clust/ns1\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
143 [style = filled, label = "verify(mockNamespaces).removeAutoSubscriptionCreation(\"myprop/clust/ns1\")@@@109@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
208 [style = filled, label = "namespaces.run(split(\"clear-backlog -b 0x80000000_0xffffffff myprop/clust/ns1 -force\"))@@@145@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "namespaces.run(split(\"set-auto-subscription-creation myprop/clust/ns1 -e\"))@@@106@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
131 [style = filled, label = "namespaces.run(split(\"remove-max-subscriptions-per-topic myprop/clust/ns1\"))@@@90@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
214 [style = filled, label = "namespaces.run(split(\"remove-delayed-delivery myprop/clust/ns1\"))@@@132@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "namespaces.run(split(\"get-dispatch-rate myprop/clust/ns1\"))@@@200@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "verify(mockNamespaces).getNamespaceAntiAffinityGroup(\"myprop/clust/ns1\")@@@117@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
191 [style = filled, label = "namespaces.run(split(\"delete-bookie-affinity-group myprop/clust/ns1\"))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "namespaces.run(split(\"set-compaction-threshold myprop/clust/ns1 -t 1G\"))@@@226@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
197 [style = filled, label = "namespaces.run(split(\"set-retention myprop/clust/ns1 -t 1h -s 1M\"))@@@122@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
223 [style = filled, label = "namespaces.run(split(\"delete myprop/clust/ns1\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "verify(mockNamespaces).getMaxConsumersPerTopic(\"myprop/clust/ns1\")@@@174@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "verify(mockNamespaces).getPersistence(\"myprop/clust/ns1\")@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "verify(mockNamespaces).getMaxProducersPerTopic(\"myprop/clust/ns1\")@@@168@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "namespaces.run(split(\"get-max-subscriptions-per-topic myprop/clust/ns1\"))@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
163 [style = filled, label = "verify(mockNamespaces).removeReplicatorDispatchRate(\"myprop/clust/ns1\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
190 [style = filled, label = "verify(mockNamespaces).unsubscribeNamespaceBundle(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\",\"my-sub\")@@@163@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
248 [style = filled, label = "namespaces.run(split(\"get-publish-rate myprop/clust/ns1\"))@@@206@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
136 [style = filled, label = "verify(mockNamespaces).removeMaxSubscriptionsPerTopic(\"myprop/clust/ns1\")@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "namespaces.run(split(\"set-max-consumers-per-topic myprop/clust/ns1 -c 2\"))@@@175@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
189 [style = filled, label = "namespaces.run(split(\"get-clusters myprop/clust/ns1\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
230 [style = filled, label = "verify(mockNamespaces).setRetention(\"myprop/clust/ns1\",new RetentionPolicies(60,1))@@@123@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "verify(mockNamespaces).setPublishRate(\"myprop/clust/ns1\",new PublishRate(10,20))@@@205@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "namespaces.run(split(\"get-backlog-quotas myprop/clust/ns1\"))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
171 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10G\"))@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
207 [style = filled, label = "verify(mockNamespaces).getOffloadDeleteLagMs(\"myprop/clust/ns1\")@@@233@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
141 [style = filled, label = "namespaces.run(split(\"remove-offload-policies myprop/clust/ns1\"))@@@240@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "namespaces.run(split(\"set-delayed-delivery myprop/clust/ns1 -e -t 1s\"))@@@128@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
170 [style = filled, label = "namespaces.run(split(\"clear-backlog -s my-sub myprop/clust/ns1 -force\"))@@@150@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "verify(mockNamespaces).setReplicatorDispatchRate(\"myprop/clust/ns1\",new DispatchRate(10,11,12))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
225 [style = filled, label = "namespaces.run(split(\"remove-subscribe-rate myprop/clust/ns1\"))@@@214@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
177 [style = filled, label = "namespaces.run(split(\"policies myprop/clust/ns1\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "verify(mockNamespaces).getReplicatorDispatchRate(\"myprop/clust/ns1\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "namespaces.run(split(\"remove-replicator-dispatch-rate myprop/clust/ns1\"))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "verify(mockNamespaces).removeSubscriptionDispatchRate(\"myprop/clust/ns1\")@@@221@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "verify(mockNamespaces).getMaxConsumersPerSubscription(\"myprop/clust/ns1\")@@@180@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "namespaces.run(split(\"get-subscription-dispatch-rate myprop/clust/ns1\"))@@@218@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
167 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10 * 1024,RetentionPolicy.producer_exception))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
144 [style = filled, label = "namespaces.run(split(\"set-replicator-dispatch-rate myprop/clust/ns1 -md 10 -bd 11 -dt 12\"))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "namespaces.run(split(\"set-inactive-topic-policies myprop/clust/ns1 -e -t 1s -m delete_when_no_subscriptions\"))@@@134@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@153@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
122 [style = filled, label = "verify(mockNamespaces).getBacklogQuotaMap(\"myprop/clust/ns1\")@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@161@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "verify(mockNamespaces).getNamespaces(\"myprop\",\"clust\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
150 [style = filled, label = "verify(mockNamespaces).getMaxSubscriptionsPerTopic(\"myprop/clust/ns1\")@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
112 [style = filled, label = "namespaces.run(split(\"get-bookie-affinity-group myprop/clust/ns1\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "namespacesCreateWithBundlesAndClusters['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "verify(mockNamespaces).removeInactiveTopicPolicies(\"myprop/clust/ns1\")@@@139@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "verify(mockNamespaces).unsubscribeNamespace(\"myprop/clust/ns1\",\"my-sub\")@@@158@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "mockNamespaces = mock()@@@152@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
126 [style = filled, label = "namespaces.run(split(\"get-persistence myprop/clust/ns1\"))@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "namespaces.run(split(\"remove-max-consumers-per-subscription myprop/clust/ns1\"))@@@181@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
195 [style = filled, label = "verify(mockNamespaces).setMaxConsumersPerSubscription(\"myprop/clust/ns1\",3)@@@184@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "namespaces.run(split(\"remove-max-consumers-per-topic myprop/clust/ns1\"))@@@177@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "mockNamespaces = mock()@@@164@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "namespaces.run(split(\"grant-permission myprop/clust/ns1 --role role1 --actions produce,consume\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "verify(mockNamespaces).setBookieAffinityGroup(\"myprop/clust/ns1\",new BookieAffinityGroupData(\"test1\",\"test2\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
181 [style = filled, label = "namespaces.run(split(\"set-persistence myprop/clust/ns1 -e 2 -w 1 -a 1 -r 100.0\"))@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
160 [style = filled, label = "verify(mockNamespaces).removePublishRate(\"myprop/clust/ns1\")@@@209@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
242 [style = filled, label = "namespaces.run(split(\"get-max-unacked-messages-per-subscription myprop/clust/ns1\"))@@@185@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
147 [style = filled, label = "namespaces.run(split(\"get-retention myprop/clust/ns1\"))@@@124@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "namespaces.run(split(\"set-max-unacked-messages-per-subscription myprop/clust/ns1 -c 3\"))@@@187@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
229 [style = filled, label = "namespaces.run(split(\"topics myprop/clust/ns1\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
198 [style = filled, label = "namespaces.run(split(\"remove-auto-topic-creation myprop/clust/ns1\"))@@@104@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
155 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_request_hold -l 10\"))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Policies policies = new Policies()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "policies.bundles = new BundlesData(5)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
139 [style = filled, label = "verify(mockNamespaces).removeCompactionThreshold(\"myprop/clust/ns1\")@@@225@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "namespaces.run(split(\"set-max-producers-per-topic myprop/clust/ns1 -p 1\"))@@@169@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
152 [style = filled, label = "verify(mockNamespaces).setSubscriptionExpirationTime(\"myprop/clust/ns1\",60)@@@95@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
168 [style = filled, label = "namespaces.run(split(\"set-max-unacked-messages-per-consumer myprop/clust/ns1 -c 3\"))@@@193@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "namespaces.run(split(\"remove-deduplication-snapshot-interval myprop/clust/ns1\"))@@@250@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "namespaces.run(split(\"unsubscribe -b 0x80000000_0xffffffff -s my-sub myprop/clust/ns1\"))@@@162@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
226 [style = filled, label = "verify(mockNamespaces).getTopics(\"myprop/clust/ns1\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
165 [style = filled, label = "namespaces.run(split(\"remove-compaction-threshold myprop/clust/ns1\"))@@@224@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
140 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10 * 1024 * 1024,RetentionPolicy.producer_exception))@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
180 [style = filled, label = "verify(mockNamespaces).clearNamespaceBacklogForSubscription(\"myprop/clust/ns1\",\"my-sub\")@@@151@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
257 [style = filled, label = "verify(mockNamespaces).removeDelayedDeliveryMessages(\"myprop/clust/ns1\")@@@133@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
202 [style = filled, label = "verify(mockNamespaces).removeMaxProducersPerTopic(\"myprop/clust/ns1\")@@@172@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "mockNamespaces = mock()@@@159@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "verify(mockNamespaces).clearNamespaceBundleBacklogForSubscription(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\",\"my-sub\")@@@156@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "verify(mockNamespaces).getMaxUnackedMessagesPerSubscription(\"myprop/clust/ns1\")@@@186@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
157 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "policies.bundles = BundlesData.builder().numBundles(5).build()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
249 [style = filled, label = "verify(mockNamespaces).getAntiAffinityNamespaces(\"dummy\",\"cluster\",\"group\")@@@119@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
151 [style = filled, label = "namespaces.run(split(\"list-cluster myprop/clust\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10K\"))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
179 [style = filled, label = "namespaces.run(split(\"get-subscription-expiration-time myprop/clust/ns1\"))@@@112@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "verify(mockNamespaces).setDeduplicationSnapshotInterval(\"myprop/clust/ns1\",1000)@@@247@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verify(mockNamespaces).setDeduplicationStatus(\"myprop/clust/ns1\",true)@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "namespaces.run(split(\"remove-auto-subscription-creation myprop/clust/ns1\"))@@@108@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Namespaces mockNamespaces = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
227 [style = filled, label = "namespaces.run(split(\"set-anti-affinity-group myprop/clust/ns1 -g group\"))@@@114@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "verify(mockNamespaces).getPolicies(\"myprop/clust/ns1\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "verify(mockNamespaces).getOffloadPolicies(\"myprop/clust/ns1\")@@@243@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
132 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
161 [style = filled, label = "verify(mockNamespaces).setMaxUnackedMessagesPerSubscription(\"myprop/clust/ns1\",3)@@@188@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
162 [style = filled, label = "mockNamespaces = mock()@@@142@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
176 [style = filled, label = "Lookup mockLookup = mock()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
188 [style = filled, label = "namespaces.run(split(\"remove-inactive-topic-policies myprop/clust/ns1\"))@@@138@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
166 [style = filled, label = "namespaces.run(split(\"unload myprop/clust/ns1\"))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "mockNamespaces = mock()@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
256 [style = filled, label = "namespaces.run(split(\"set-max-subscriptions-per-topic myprop/clust/ns1 -m 300\"))@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
148 [style = filled, label = "verify(mockNamespaces).unload(\"myprop/clust/ns1\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "verify(mockNamespaces).clearNamespaceBacklog(\"myprop/clust/ns1\")@@@141@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
199 [style = filled, label = "verify(mockNamespaces).setDispatchRate(\"myprop/clust/ns1\",new DispatchRate(-1,-1,2))@@@199@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
153 [style = filled, label = "verify(mockNamespaces).revokePermissionsOnNamespace(\"myprop/clust/ns1\",\"role1\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
209 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@148@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "verify(mockNamespaces).setInactiveTopicPolicies(\"myprop/clust/ns1\",new InactiveTopicPolicies(InactiveTopicDeleteMode.delete_when_no_subscriptions,1,true))@@@135@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
212 [style = filled, label = "verify(mockNamespaces).setOffloadDeleteLag(\"myprop/clust/ns1\",24 * 60 * 60,TimeUnit.SECONDS)@@@235@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
231 [style = filled, label = "namespaces.run(split(\"revoke-permission myprop/clust/ns1 --role role1\"))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
175 [style = filled, label = "namespaces.run(split(\"set-dispatch-rate myprop/clust/ns1 -md -1 -bd -1 -dt 2\"))@@@198@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "namespaces.run(split(\"get-compaction-threshold myprop/clust/ns1\"))@@@222@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
200 [style = filled, label = "verify(mockNamespaces).removeDispatchRate(\"myprop/clust/ns1\")@@@203@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
222 [style = filled, label = "namespaces.run(split(\"unload myprop/clust/ns1 -b 0x80000000_0xffffffff\"))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "verify(mockNamespaces).createNamespace(\"my-prop/my-namespace\",policies)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
238 [style = filled, label = "mockNamespaces = mock()@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "verify(mockNamespaces).getRetention(\"myprop/clust/ns1\")@@@125@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "verify(mockNamespaces).splitNamespaceBundle(\"myprop/clust/ns1\",\"0x00000000_0xffffffff\",false,null)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "verify(mockNamespaces).getDelayedDelivery(\"myprop/clust/ns1\")@@@131@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "verify(mockNamespaces).setAutoSubscriptionCreation(\"myprop/clust/ns1\",new AutoSubscriptionCreationOverride(true))@@@107@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "verify(mockNamespaces).getOffloadThreshold(\"myprop/clust/ns1\")@@@229@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "namespaces.run(split(\"set-subscription-dispatch-rate myprop/clust/ns1 -md -1 -bd -1 -dt 2\"))@@@216@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
128 [style = filled, label = "verify(mockNamespaces).removeSubscribeRate(\"myprop/clust/ns1\")@@@215@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
252 [style = filled, label = "verify(mockNamespaces).removeRetention(\"myprop/clust/ns1\")@@@127@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
215 [style = filled, label = "namespaces.run(split(\"create myprop/clust/ns1\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
173 [style = filled, label = "namespaces.run(split(\"set-subscribe-rate myprop/clust/ns1 -sr 2 -st 60\"))@@@210@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
130 [style = filled, label = "verify(mockNamespaces).removeAutoTopicCreation(\"myprop/clust/ns1\")@@@105@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
255 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "verify(mockNamespaces).setSubscriptionDispatchRate(\"myprop/clust/ns1\",new DispatchRate(-1,-1,2))@@@217@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
251 [style = filled, label = "namespaces.run(split(\"set-publish-rate myprop/clust/ns1 -m 10 -b 20\"))@@@204@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(mockNamespaces).setNamespaceMessageTTL(\"myprop/clust/ns1\",300)@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
145 [style = filled, label = "verify(mockNamespaces).getCompactionThreshold(\"myprop/clust/ns1\")@@@223@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
201 [style = filled, label = "namespaces.run(split(\"get-inactive-topic-policies myprop/clust/ns1\"))@@@136@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@149@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "namespaces.run(split(\"remove-retention myprop/clust/ns1\"))@@@126@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "namespaces.run(split(\"remove-subscription-dispatch-rate myprop/clust/ns1\"))@@@220@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "policies.replication_clusters = Sets.newHashSet(\"a\",\"b\",\"c\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "namespaces.run(split(\"get-message-ttl myprop/clust/ns1\"))@@@110@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "namespaces.run(split(\"get-max-consumers-per-subscription myprop/clust/ns1\"))@@@179@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "verify(mockNamespaces).setCompactionThreshold(\"myprop/clust/ns1\",1024 * 1024 * 1024)@@@227@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "verify(mockNamespaces).getDeduplicationStatus(\"myprop/clust/ns1\")@@@97@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
219 [style = filled, label = "verify(mockNamespaces).getInactiveTopicPolicies(\"myprop/clust/ns1\")@@@137@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "namespaces.run(split(\"get-delayed-delivery myprop/clust/ns1\"))@@@130@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "namespaces.run(split(\"set-offload-threshold myprop/clust/ns1 -s 1G\"))@@@230@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
149 [style = filled, label = "namespaces.run(split(\"set-offload-deletion-lag myprop/clust/ns1 -l 1d\"))@@@234@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
247 [style = filled, label = "namespaces['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
138 [style = filled, label = "namespaces.run(split(\"remove-deduplication myprop/clust/ns1\"))@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "namespaces.run(split(\"set-backlog-quota myprop/clust/ns1 -p producer_exception -l 10M\"))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@154@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "namespaces.run(split(\"get-max-unacked-messages-per-consumer myprop/clust/ns1\"))@@@191@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
210 [style = filled, label = "verify(mockNamespaces).removeOffloadPolicies(\"myprop/clust/ns1\")@@@241@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "namespaces.run(split(\"create my-prop/my-namespace --bundles 5 --clusters a,b,c\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "verify(mockNamespaces).getPublishRate(\"myprop/clust/ns1\")@@@207@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "namespaces.run(split(\"get-replicator-dispatch-rate myprop/clust/ns1\"))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
185 [style = filled, label = "verify(mockNamespaces).removePersistence(\"myprop/clust/ns1\")@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "namespaces.run(split(\"get-max-consumers-per-topic myprop/clust/ns1\"))@@@173@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
216 [style = filled, label = "namespaces.run(split(\"get-deduplication-snapshot-interval myprop/clust/ns1\"))@@@248@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
218 [style = filled, label = "namespaces.run(split(\"set-subscription-types-enabled myprop/clust/ns1 -t Shared,Failover\"))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
234 [style = filled, label = "namespaces.run(split(\"remove-publish-rate myprop/clust/ns1\"))@@@208@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "verify(mockNamespaces).removeMaxConsumersPerSubscription(\"myprop/clust/ns1\")@@@182@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
239 [style = filled, label = "verify(mockNamespaces).clearNamespaceBundleBacklog(\"myprop/clust/ns1\",\"0x80000000_0xffffffff\")@@@146@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
246 [style = filled, label = "verify(mockNamespaces).setNamespaceAntiAffinityGroup(\"myprop/clust/ns1\",\"group\")@@@115@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "namespaces.run(split(\"set-clusters myprop/clust/ns1 -c use,usw,usc\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
243 [style = filled, label = "namespaces.run(split(\"get-anti-affinity-group myprop/clust/ns1\"))@@@116@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "verify(mockNamespaces).removeDeduplicationStatus(\"myprop/clust/ns1\")@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "namespaces.run(split(\"set-deduplication-snapshot-interval myprop/clust/ns1 -i 1000\"))@@@246@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "verify(mockNamespaces).setOffloadPolicies(\"myprop/clust/ns1\",OffloadPoliciesImpl.create(\"aws-s3\",\"test-region\",\"test-bucket\",\"http://test.endpoint\",null,null,null,null,32 * 1024 * 1024,5 * 1024 * 1024,10 * 1024 * 1024L,10000L,OffloadedReadPriority.TIERED_STORAGE_FIRST))@@@239@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
244 [style = filled, label = "namespaces.run(split(\"get-subscribe-rate myprop/clust/ns1\"))@@@212@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
211 [style = filled, label = "namespaces.run(split(\"get-offload-policies myprop/clust/ns1\"))@@@242@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
174 [style = filled, label = "namespaces.run(split(\"unsubscribe -s my-sub myprop/clust/ns1\"))@@@157@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "verify(mockNamespaces).deleteNamespace(\"myprop/clust/ns1\",false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "namespaces = new CmdNamespaces(null)@@@144@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "when(admin.lookups()).thenReturn(mockLookup)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
217 [style = filled, label = "namespaces.run(split(\"set-subscription-expiration-time myprop/clust/ns1 -t 60\"))@@@94@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CmdNamespaces namespaces = new CmdNamespaces(null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "verify(mockNamespaces).setBacklogQuota(\"myprop/clust/ns1\",new BacklogQuota(10l * 1024 * 1024 * 1024,10000,RetentionPolicy.producer_exception))@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
235 [style = filled, label = "mockNamespaces = mock()@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
187 [style = filled, label = "namespaces.run(split(\"remove-dispatch-rate myprop/clust/ns1\"))@@@202@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
178 [style = filled, label = "verify(mockNamespaces).clearOffloadDeleteLag(\"myprop/clust/ns1\")@@@237@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "verify(mockNamespaces).grantPermissionOnNamespace(\"myprop/clust/ns1\",\"role1\",EnumSet.of(AuthAction.produce,AuthAction.consume))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
169 [style = filled, label = "verify(mockNamespaces).setNamespaceReplicationClusters(\"myprop/clust/ns1\",Sets.newHashSet(\"use\",\"usw\",\"usc\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "verify(mockNamespaces).getNamespaceReplicationClusters(\"myprop/clust/ns1\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "namespaces.run(split(\"get-offload-deletion-lag myprop/clust/ns1\"))@@@232@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "namespaces.run(split(\"delete-anti-affinity-group myprop/clust/ns1 \"))@@@120@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "verify(mockNamespaces).getNamespaces(\"myprop\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "mockNamespaces = mock()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "namespaces.run(split(\"get-offload-threshold myprop/clust/ns1\"))@@@228@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
118 [style = filled, label = "namespaces.run(split(\"list myprop\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "verify(mockNamespaces).setAutoTopicCreation(\"myprop/clust/ns1\",new AutoTopicCreationOverride(true,TopicType.NON_PARTITIONED.toString(),null))@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
204 [style = filled, label = "when(admin.namespaces()).thenReturn(mockNamespaces)@@@160@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
228 [style = filled, label = "verify(mockNamespaces).removeMaxConsumersPerTopic(\"myprop/clust/ns1\")@@@178@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "namespaces.run(split(\"get-deduplication myprop/clust/ns1\"))@@@96@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
241 [style = filled, label = "verify(mockNamespaces).getSubscriptionExpirationTime(\"myprop/clust/ns1\")@@@113@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
151->142 [style = bold, label=""];
17->102 [style = bold, label=""];
227->246 [style = bold, label=""];
155->184 [style = bold, label=""];
38->221 [style = bold, label=""];
168->121 [style = bold, label=""];
2->6 [style = bold, label=""];
91->55 [style = bold, label=""];
141->210 [style = bold, label=""];
3->6 [style = solid, label="policies"];
164->25 [style = bold, label=""];
162->23 [style = solid, label="mockNamespaces"];
148->20 [style = bold, label=""];
46->231 [style = bold, label=""];
7->11 [style = dashed, label="0"];
241->227 [style = bold, label=""];
173->124 [style = bold, label=""];
175->199 [style = bold, label=""];
229->226 [style = bold, label=""];
41->224 [style = bold, label=""];
192->181 [style = bold, label=""];
217->152 [style = bold, label=""];
35->161 [style = bold, label=""];
93->86 [style = bold, label=""];
115->76 [style = bold, label=""];
213->117 [style = bold, label=""];
222->22 [style = bold, label=""];
114->111 [style = bold, label=""];
137->125 [style = bold, label=""];
125->168 [style = bold, label=""];
242->123 [style = bold, label=""];
22->103 [style = bold, label=""];
223->45 [style = bold, label=""];
79->238 [style = bold, label=""];
20->27 [style = bold, label=""];
135->174 [style = bold, label=""];
182->237 [style = bold, label=""];
72->190 [style = bold, label=""];
219->188 [style = bold, label=""];
76->163 [style = bold, label=""];
89->204 [style = solid, label="mockNamespaces"];
235->12 [style = bold, label=""];
237->19 [style = bold, label=""];
82->104 [style = bold, label=""];
167->235 [style = bold, label=""];
208->239 [style = bold, label=""];
200->251 [style = bold, label=""];
13->159 [style = bold, label=""];
5->118 [style = bold, label=""];
120->58 [style = bold, label=""];
183->144 [style = bold, label=""];
75->68 [style = bold, label=""];
66->232 [style = bold, label=""];
0->176 [style = bold, label=""];
105->150 [style = bold, label=""];
122->155 [style = bold, label=""];
8->4 [style = bold, label=""];
156->146 [style = bold, label=""];
186->205 [style = bold, label=""];
54->38 [style = bold, label=""];
218->213 [style = bold, label=""];
191->183 [style = bold, label=""];
247->4 [style = bold, label=""];
202->67 [style = bold, label=""];
107->233 [style = bold, label=""];
225->128 [style = bold, label=""];
42->100 [style = bold, label=""];
52->122 [style = bold, label=""];
209->18 [style = bold, label=""];
180->65 [style = bold, label=""];
231->153 [style = bold, label=""];
221->69 [style = bold, label=""];
88->207 [style = bold, label=""];
253->178 [style = bold, label=""];
138->61 [style = bold, label=""];
57->209 [style = solid, label="mockNamespaces"];
1->118 [style = dashed, label="0"];
256->206 [style = bold, label=""];
206->131 [style = bold, label=""];
252->92 [style = bold, label=""];
163->166 [style = bold, label=""];
203->134 [style = bold, label=""];
69->228 [style = bold, label=""];
124->244 [style = bold, label=""];
119->64 [style = bold, label=""];
31->119 [style = bold, label=""];
108->29 [style = bold, label=""];
111->220 [style = bold, label=""];
62->5 [style = bold, label=""];
110->51 [style = bold, label=""];
152->13 [style = bold, label=""];
249->50 [style = bold, label=""];
3->11 [style = bold, label=""];
9->0 [style = solid, label="mockNamespaces"];
65->75 [style = bold, label=""];
190->85 [style = bold, label=""];
201->219 [style = bold, label=""];
232->187 [style = bold, label=""];
149->212 [style = bold, label=""];
158->191 [style = bold, label=""];
176->62 [style = bold, label=""];
63->222 [style = bold, label=""];
53->198 [style = bold, label=""];
85->172 [style = bold, label=""];
193->53 [style = bold, label=""];
145->165 [style = bold, label=""];
181->236 [style = bold, label=""];
250->16 [style = bold, label=""];
95->109 [style = bold, label=""];
169->189 [style = bold, label=""];
194->154 [style = bold, label=""];
33->108 [style = bold, label=""];
131->136 [style = bold, label=""];
5->1 [style = bold, label=""];
153->70 [style = bold, label=""];
70->169 [style = bold, label=""];
113->97 [style = bold, label=""];
166->148 [style = bold, label=""];
216->56 [style = bold, label=""];
195->242 [style = bold, label=""];
3->7 [style = bold, label=""];
123->35 [style = bold, label=""];
165->139 [style = bold, label=""];
36->49 [style = bold, label=""];
7->2 [style = bold, label=""];
83->77 [style = bold, label=""];
103->47 [style = bold, label=""];
44->234 [style = bold, label=""];
39->223 [style = bold, label=""];
142->229 [style = bold, label=""];
74->167 [style = bold, label=""];
235->12 [style = solid, label="mockNamespaces"];
150->256 [style = bold, label=""];
49->140 [style = bold, label=""];
129->46 [style = bold, label=""];
132->171 [style = bold, label=""];
26->252 [style = bold, label=""];
102->201 [style = bold, label=""];
100->157 [style = bold, label=""];
170->180 [style = bold, label=""];
207->149 [style = bold, label=""];
204->59 [style = bold, label=""];
185->105 [style = bold, label=""];
86->91 [style = bold, label=""];
162->23 [style = bold, label=""];
116->24 [style = bold, label=""];
81->87 [style = bold, label=""];
4->9 [style = bold, label=""];
240->135 [style = bold, label=""];
51->132 [style = bold, label=""];
139->80 [style = bold, label=""];
254->127 [style = bold, label=""];
236->126 [style = bold, label=""];
226->177 [style = bold, label=""];
126->82 [style = bold, label=""];
61->193 [style = bold, label=""];
101->90 [style = bold, label=""];
67->54 [style = bold, label=""];
94->78 [style = bold, label=""];
214->257 [style = bold, label=""];
121->182 [style = bold, label=""];
134->129 [style = bold, label=""];
45->203 [style = bold, label=""];
32->215 [style = bold, label=""];
1->3 [style = bold, label=""];
12->36 [style = bold, label=""];
59->72 [style = bold, label=""];
233->37 [style = bold, label=""];
172->245 [style = bold, label=""];
224->133 [style = bold, label=""];
65->75 [style = solid, label="mockNamespaces"];
144->84 [style = bold, label=""];
110->51 [style = solid, label="mockNamespaces"];
136->250 [style = bold, label=""];
109->143 [style = bold, label=""];
99->249 [style = bold, label=""];
205->192 [style = bold, label=""];
198->130 [style = bold, label=""];
112->158 [style = bold, label=""];
243->34 [style = bold, label=""];
212->253 [style = bold, label=""];
68->240 [style = bold, label=""];
238->255 [style = bold, label=""];
251->30 [style = bold, label=""];
130->28 [style = bold, label=""];
48->26 [style = bold, label=""];
30->248 [style = bold, label=""];
77->114 [style = bold, label=""];
40->151 [style = bold, label=""];
160->173 [style = bold, label=""];
215->39 [style = bold, label=""];
255->186 [style = bold, label=""];
234->160 [style = bold, label=""];
230->147 [style = bold, label=""];
159->164 [style = bold, label=""];
34->99 [style = bold, label=""];
28->95 [style = bold, label=""];
20->27 [style = solid, label="mockNamespaces"];
143->15 [style = bold, label=""];
50->71 [style = bold, label=""];
47->52 [style = bold, label=""];
64->93 [style = bold, label=""];
92->113 [style = bold, label=""];
43->214 [style = bold, label=""];
179->241 [style = bold, label=""];
57->209 [style = bold, label=""];
196->225 [style = bold, label=""];
0->5 [style = bold, label=""];
199->66 [style = bold, label=""];
117->107 [style = bold, label=""];
104->185 [style = bold, label=""];
25->138 [style = bold, label=""];
118->40 [style = bold, label=""];
42->100 [style = solid, label="mockNamespaces"];
174->14 [style = bold, label=""];
133->202 [style = bold, label=""];
246->243 [style = bold, label=""];
97->43 [style = bold, label=""];
78->33 [style = bold, label=""];
9->0 [style = bold, label=""];
19->175 [style = bold, label=""];
178->254 [style = bold, label=""];
188->106 [style = bold, label=""];
187->200 [style = bold, label=""];
85->172 [style = solid, label="mockNamespaces"];
197->230 [style = bold, label=""];
56->156 [style = bold, label=""];
171->79 [style = bold, label=""];
176->62 [style = solid, label="mockLookup"];
98->120 [style = bold, label=""];
228->83 [style = bold, label=""];
14->89 [style = bold, label=""];
55->145 [style = bold, label=""];
244->196 [style = bold, label=""];
60->208 [style = bold, label=""];
27->63 [style = bold, label=""];
29->88 [style = bold, label=""];
89->204 [style = bold, label=""];
96->179 [style = bold, label=""];
18->170 [style = bold, label=""];
58->81 [style = bold, label=""];
157->74 [style = bold, label=""];
11->2 [style = bold, label=""];
245->101 [style = bold, label=""];
182->237 [style = solid, label="mockNamespaces"];
210->211 [style = bold, label=""];
23->60 [style = bold, label=""];
24->162 [style = bold, label=""];
189->73 [style = bold, label=""];
239->57 [style = bold, label=""];
220->195 [style = bold, label=""];
87->216 [style = bold, label=""];
16->217 [style = bold, label=""];
106->116 [style = bold, label=""];
161->194 [style = bold, label=""];
177->32 [style = bold, label=""];
80->94 [style = bold, label=""];
15->96 [style = bold, label=""];
248->44 [style = bold, label=""];
140->110 [style = bold, label=""];
71->197 [style = bold, label=""];
238->255 [style = solid, label="mockNamespaces"];
21->115 [style = bold, label=""];
257->17 [style = bold, label=""];
10->4 [style = bold, label=""];
128->31 [style = bold, label=""];
211->98 [style = bold, label=""];
37->112 [style = bold, label=""];
154->137 [style = bold, label=""];
90->41 [style = bold, label=""];
184->42 [style = bold, label=""];
84->21 [style = bold, label=""];
73->218 [style = bold, label=""];
147->48 [style = bold, label=""];
127->141 [style = bold, label=""];
}
