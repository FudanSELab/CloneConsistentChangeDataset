digraph {
2 [style = filled, label = "source.keyBy(new KeySelector<Tuple2<Integer,Long>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Long> value){return value.f0}}).asQueryableState(\"jungle\",reducingState)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean success = false@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final long expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ReducingStateDescriptor<Tuple2<Integer,Long>> reducingState = new ReducingStateDescriptor<>(\"any\",new SumReduce(),source.getType())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.setStateBackend(stateBackend)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final long numElements = 1024L@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "long expected = numElements * (numElements + 1L) / 2L@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> future = getKvStateWithRetries(client,jobId,queryableStateName,key,BasicTypeInfo.INT_TYPE_INFO,stateDescriptor,QUERY_RETRY_DELAY,false,executor)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "env.setParallelism(maxParallelism)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "success = true@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "expected == value.f1@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Tuple2<Integer,Long> value = future.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS).value()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "deadline.hasTimeLeft() && !success@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expected == value.f1@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,1000L))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(\"Did not succeed query\",success)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(\"Key mismatch\",key,value.f0.intValue())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final ValueStateDescriptor<Tuple2<Integer,Long>> stateDescriptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "boolean success = false@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final QueryableStateClient client@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(\"Did not succeed query\",success)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "key++@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int key = 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "CompletableFuture<ReducingState<Tuple2<Integer,Long>>> future = getKvStateWithRetries(client,jobId,\"jungle\",key,BasicTypeInfo.INT_TYPE_INFO,reducingState,QUERY_RETRY_DELAY,false,executor)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final Deadline deadline = TEST_TIMEOUT.fromNow()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Thread.sleep(50L)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cluster.submitJobDetached(jobGraph)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "executeValueQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "{if (jobId != null) {CompletableFuture<CancellationSuccess> cancellation = FutureUtils.toJava(cluster.getLeaderGateway(deadline.timeLeft()).ask(new JobManagerMessages.CancelJob(jobId),deadline.timeLeft()).mapTo(ClassTag$.MODULE$.apply()))cancellation.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)}}@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final Deadline deadline@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final String queryableStateName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "key < maxParallelism@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "success = true@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testReducingState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testReducingState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"Key mismatch\",key,value.f0.intValue())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CompletableFuture<ReducingState<Tuple2<Integer,Long>>> future = getKvState(deadline,client,jobId,\"jungle\",key,BasicTypeInfo.INT_TYPE_INFO,reducingState,false,executor)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "key < maxParallelism@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "deadline.hasTimeLeft() && !success@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "DataStream<Tuple2<Integer,Long>> source = env.addSource(new TestAscendingValueSource(numElements))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final JobID jobId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "int key = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "jobId = jobGraph.getJobID()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "JobID jobId = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Thread.sleep(50L)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "key++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Tuple2<Integer,Long> value = future.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS).get()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->37 [style = solid, label="success"];
31->37 [style = bold, label=""];
22->29 [style = solid, label="reducingState"];
0->19 [style = dotted, label="true"];
10->19 [style = bold, label=""];
24->29 [style = solid, label="key"];
48->35 [style = bold, label=""];
38->31 [style = bold, label=""];
9->10 [style = bold, label=""];
12->7 [style = solid, label="jobId"];
35->43 [style = bold, label=""];
17->48 [style = dashed, label="0"];
46->48 [style = bold, label=""];
10->29 [style = dotted, label="true"];
42->43 [style = solid, label="expected"];
45->46 [style = solid, label="queryableStateName"];
15->11 [style = bold, label=""];
36->39 [style = dotted, label="true"];
44->46 [style = solid, label="jobId"];
27->17 [style = bold, label=""];
30->40 [style = bold, label=""];
0->3 [style = dotted, label="true"];
40->31 [style = bold, label=""];
31->46 [style = bold, label=""];
37->33 [style = bold, label=""];
19->3 [style = bold, label=""];
12->27 [style = solid, label="jobId"];
30->33 [style = dotted, label="true"];
10->18 [style = dotted, label="true"];
5->10 [style = bold, label=""];
31->48 [style = dotted, label="true"];
20->8 [style = solid, label="numElements"];
0->10 [style = dotted, label="true"];
4->6 [style = solid, label="jobGraph"];
24->0 [style = bold, label=""];
18->15 [style = bold, label=""];
14->22 [style = bold, label=""];
8->15 [style = solid, label="expected"];
21->25 [style = bold, label=""];
2->4 [style = bold, label=""];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
36->45 [style = dotted, label="true"];
27->46 [style = dashed, label="0"];
43->47 [style = bold, label=""];
3->18 [style = solid, label="key"];
36->44 [style = dotted, label="true"];
33->30 [style = bold, label=""];
31->46 [style = dotted, label="true"];
43->47 [style = dotted, label="false"];
34->35 [style = solid, label="key"];
33->35 [style = solid, label="key"];
31->43 [style = dotted, label="true"];
34->33 [style = solid, label="key"];
12->29 [style = solid, label="jobId"];
8->24 [style = bold, label=""];
43->38 [style = dotted, label="true"];
23->20 [style = bold, label=""];
29->17 [style = bold, label=""];
22->2 [style = bold, label=""];
31->35 [style = dotted, label="true"];
47->31 [style = bold, label=""];
36->32 [style = dotted, label="true"];
15->5 [style = dotted, label="false"];
24->18 [style = solid, label="key"];
24->27 [style = solid, label="key"];
24->0 [style = solid, label="key"];
10->17 [style = dotted, label="true"];
27->29 [style = dashed, label="0"];
43->38 [style = bold, label=""];
3->0 [style = solid, label="key"];
41->46 [style = solid, label="client"];
20->14 [style = solid, label="numElements"];
16->1 [style = bold, label=""];
3->27 [style = solid, label="key"];
11->10 [style = bold, label=""];
28->23 [style = bold, label=""];
15->11 [style = dotted, label="true"];
4->12 [style = bold, label=""];
30->37 [style = dotted, label="true"];
23->29 [style = solid, label="deadline"];
0->9 [style = dotted, label="true"];
36->34 [style = bold, label=""];
30->31 [style = dotted, label="true"];
38->37 [style = solid, label="success"];
36->41 [style = dotted, label="true"];
0->9 [style = bold, label=""];
34->30 [style = solid, label="key"];
25->13 [style = bold, label=""];
10->27 [style = bold, label=""];
32->46 [style = solid, label="stateDescriptor"];
36->42 [style = dotted, label="true"];
12->6 [style = bold, label=""];
34->30 [style = bold, label=""];
30->40 [style = dotted, label="true"];
15->5 [style = bold, label=""];
20->21 [style = bold, label=""];
10->15 [style = dotted, label="true"];
3->29 [style = solid, label="key"];
10->29 [style = bold, label=""];
11->19 [style = solid, label="success"];
34->46 [style = solid, label="key"];
26->23 [style = bold, label=""];
6->8 [style = bold, label=""];
24->3 [style = solid, label="key"];
22->27 [style = solid, label="reducingState"];
1->14 [style = bold, label=""];
10->27 [style = dotted, label="true"];
33->30 [style = solid, label="key"];
22->2 [style = solid, label="reducingState"];
9->19 [style = solid, label="success"];
17->18 [style = bold, label=""];
33->46 [style = solid, label="key"];
}
