digraph {
0 [style = filled, label = "BeanDefinitionLoader loader = new BeanDefinitionLoader(this.registry,resource)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "loadGroovyResource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(loader.load()).isEqualTo(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "loadGroovyResourceWithNamespace['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClassPathResource resource = new ClassPathResource(\"sample-beans.groovy\",getClass())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(this.registry.containsBean(\"myGroovyComponent\")).isTrue()@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "loadGroovyResource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ClassPathResource resource = new ClassPathResource(\"sample-namespace.groovy\",getClass())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
1->4 [style = bold, label=""];
3->6 [style = dashed, label="0"];
6->0 [style = bold, label=""];
7->6 [style = bold, label=""];
6->0 [style = solid, label="resource"];
3->0 [style = solid, label="resource"];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
2->3 [style = bold, label=""];
}
