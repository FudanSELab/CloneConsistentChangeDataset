digraph {
13 [style = filled, label = "value instanceof Long@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "value instanceof Float@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return (char)value@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "defTodoubleImplicit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "return (float)value@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return (long)value@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "throw new ClassCastException(\"cannot implicitly cast \" + \"def (\" + PainlessLookupUtility.typeToUnboxedType(value.getClass()).getCanonicalName() + \"( to \" + .getCanonicalName())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "value instanceof BigInteger@@@24@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "value instanceof Character@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return ((BigInteger)value).doubleValue()@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "return (short)value@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "value instanceof Byte@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return (byte)value@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "value instanceof Double@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "value instanceof Integer@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return (double)value@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "defTofloatImplicit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return (int)value@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "value instanceof Short@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw new ClassCastException(\"cannot implicitly cast \" + \"def (\" + PainlessLookupUtility.typeToUnboxedType(value.getClass()).getCanonicalName() + \"( to \" + .getCanonicalName())@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Object value@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "defTodoubleImplicit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Object value@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12->19 [style = dotted, label="false"];
12->0 [style = bold, label=""];
10->20 [style = bold, label=""];
21->8 [style = solid, label="value"];
15->1 [style = bold, label=""];
9->13 [style = dotted, label="false"];
21->11 [style = solid, label="value"];
14->13 [style = solid, label="value"];
21->15 [style = solid, label="value"];
6->15 [style = bold, label=""];
14->15 [style = solid, label="value"];
10->12 [style = dotted, label="false"];
15->1 [style = dotted, label="true"];
7->9 [style = bold, label=""];
12->4 [style = bold, label=""];
14->3 [style = solid, label="value"];
14->9 [style = solid, label="value"];
21->9 [style = solid, label="value"];
12->0 [style = dotted, label="true"];
9->2 [style = bold, label=""];
7->9 [style = dotted, label="false"];
9->13 [style = bold, label=""];
6->14 [style = dotted, label="true"];
13->8 [style = dotted, label="true"];
10->11 [style = bold, label=""];
14->10 [style = solid, label="value"];
21->5 [style = solid, label="value"];
14->7 [style = solid, label="value"];
19->4 [style = dotted, label="false"];
22->15 [style = bold, label=""];
14->5 [style = solid, label="value"];
21->7 [style = solid, label="value"];
21->16 [style = solid, label="value"];
15->16 [style = dotted, label="false"];
9->2 [style = dotted, label="true"];
10->12 [style = bold, label=""];
18->14 [style = dotted, label="true"];
14->19 [style = solid, label="value"];
7->3 [style = bold, label=""];
12->4 [style = dotted, label="false"];
13->10 [style = dotted, label="false"];
14->16 [style = solid, label="value"];
21->1 [style = solid, label="value"];
14->21 [style = dashed, label="0"];
19->17 [style = bold, label=""];
12->19 [style = bold, label=""];
14->0 [style = solid, label="value"];
15->16 [style = bold, label=""];
14->2 [style = solid, label="value"];
16->7 [style = dotted, label="false"];
19->4 [style = bold, label=""];
16->5 [style = bold, label=""];
21->3 [style = solid, label="value"];
10->20 [style = dotted, label="false"];
16->7 [style = bold, label=""];
14->1 [style = solid, label="value"];
19->17 [style = dotted, label="true"];
4->20 [style = dashed, label="0"];
13->8 [style = bold, label=""];
13->10 [style = bold, label=""];
10->11 [style = dotted, label="true"];
21->2 [style = solid, label="value"];
16->5 [style = dotted, label="true"];
14->8 [style = solid, label="value"];
22->21 [style = dotted, label="true"];
21->13 [style = solid, label="value"];
14->12 [style = solid, label="value"];
21->10 [style = solid, label="value"];
7->3 [style = dotted, label="true"];
14->11 [style = solid, label="value"];
18->15 [style = bold, label=""];
}
