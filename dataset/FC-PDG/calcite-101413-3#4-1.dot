digraph {
0 [style = filled, label = "assertThat(substitutedNames,is(list3(expectedNames)))@@@109@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MaterializationService.setThreadLocal()@@@99@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Collections.sort(substitutedNames,CASE_INSENSITIVE_LIST_LIST_COMPARATOR)@@@108@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String q = \"select *\" + \"from (select * from \"emps\" where \"empid\" < 300)\" + \"join (select * from \"emps\" where \"empid\" < 200) using (\"empid\")\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MaterializationService.setThreadLocal()@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testMaterializationSubstitution['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{Prepare.THREAD_TRIM.set(false)}@@@111@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collections.sort(substitutedNames,CASE_INSENSITIVE_LIST_LIST_COMPARATOR)@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Prepare.THREAD_TRIM.set(true)@@@98@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CalciteAssert.that().withMaterializations(JdbcTest.HR_MODEL,\"m0\",\"select * from \"emps\" where \"empid\" < 300\",\"m1\",\"select * from \"emps\" where \"empid\" < 600\").query(q).withHook(Hook.SUB,new Function<RelNode,Void>(){public Void apply(RelNode input){substitutedNames.add(new TableNameVisitor().run(input))return null}}).enableMaterializations(true).sameResultWithMaterializationsDisabled()@@@59@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testMaterializationSubstitution['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "CalciteAssert.that().withMaterializations(JdbcTest.HR_MODEL,\"m0\",\"select * from \"emps\" where \"empid\" < 300\",\"m1\",\"select * from \"emps\" where \"empid\" < 600\",\"m2\",\"select * from \"m1\"\").query(q).withHook(Hook.SUB,new Function<RelNode,Void>(){public Void apply(RelNode input){substitutedNames.add(new TableNameVisitor().run(input))return null}}).enableMaterializations(true).sameResultWithMaterializationsDisabled()@@@101@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testMaterializationSubstitution2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String(((((( expectedNames = {{{\"hr\",\"emps\"},{\"hr\",\"m0\"}},{{\"hr\",\"emps\"},{\"hr\",\"m1\"}},{{\"hr\",\"emps\"},{\"hr\",\"m2\"}},{{\"hr\",\"m0\"},{\"hr\",\"emps\"}},{{\"hr\",\"m0\"},{\"hr\",\"m0\"}},{{\"hr\",\"m0\"},{\"hr\",\"m1\"}},{{\"hr\",\"m0\"},{\"hr\",\"m2\"}},{{\"hr\",\"m1\"},{\"hr\",\"emps\"}},{{\"hr\",\"m1\"},{\"hr\",\"m0\"}},{{\"hr\",\"m1\"},{\"hr\",\"m1\"}},{{\"hr\",\"m1\"},{\"hr\",\"m2\"}},{{\"hr\",\"m2\"},{\"hr\",\"emps\"}},{{\"hr\",\"m2\"},{\"hr\",\"m0\"}},{{\"hr\",\"m2\"},{\"hr\",\"m1\"}},{{\"hr\",\"m2\"},{\"hr\",\"m2\"}}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final List<List<List<String>>> substitutedNames = new ArrayList<>()@@@100@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
4->9 [style = bold, label=""];
3->11 [style = solid, label="substitutedNames"];
7->11 [style = bold, label=""];
9->0 [style = bold, label=""];
2->6 [style = bold, label=""];
7->0 [style = solid, label="substitutedNames"];
8->3 [style = bold, label=""];
6->9 [style = solid, label="expectedNames"];
10->3 [style = bold, label=""];
7->4 [style = bold, label=""];
11->9 [style = bold, label=""];
7->9 [style = solid, label="substitutedNames"];
12->2 [style = bold, label=""];
3->7 [style = bold, label=""];
6->10 [style = bold, label=""];
6->8 [style = bold, label=""];
1->2 [style = bold, label=""];
14->2 [style = bold, label=""];
13->9 [style = bold, label=""];
4->13 [style = dashed, label="0"];
0->5 [style = bold, label=""];
6->0 [style = solid, label="expectedNames"];
3->9 [style = solid, label="substitutedNames"];
}
