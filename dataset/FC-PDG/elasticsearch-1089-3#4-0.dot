digraph {
19 [style = filled, label = "testRetrieveDatabaseCorruption['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "mockSearches(\"_name\",0,29)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "verify(client,times(10)).search(any())@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "@SuppressWarnings(\"unchecked\") CheckedConsumer<byte((,IOException> chunkConsumer = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "GeoIpTaskState.Metadata metadata = new GeoIpTaskState.Metadata(-1,0,9,md5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String md5 = mockSearches(\"_name\",0,29)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "mockSearches(\"_name\",0,9)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(exceptionCaptor.getAllValues().get(0).getMessage(),equalTo(\"expected md5 hash (different(, \" + \"but got md5 hash (7a39822e85d3eeb863657b7865597a7a(\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "@SuppressWarnings(\"unchecked\") CheckedRunnable<Exception> completedHandler = mock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(failureHandler,times(1)).accept(exceptionCaptor.capture())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(exceptionCaptor.getAllValues().size(),equalTo(1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "verify(chunkConsumer,times(30)).accept(any())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String md5 = \"7a39822e85d3eeb863657b7865597a7a\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testRetrieveDatabase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testRetrieveDatabase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ArgumentCaptor<Exception> exceptionCaptor = ArgumentCaptor.forClass()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verify(completedHandler,times(0)).run()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String md5 = \"different\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verify(completedHandler,times(1)).run()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "verify(client,times(30)).search(any())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verify(failureHandler,never()).accept(any())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(chunkConsumer,times(10)).accept(any())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "GeoIpTaskState.Metadata metadata = new GeoIpTaskState.Metadata(-1,0,29,md5)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "databaseRegistry.retrieveDatabase(\"_name\",md5,metadata,chunkConsumer,completedHandler,failureHandler)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "@SuppressWarnings(\"unchecked\") Consumer<Exception> failureHandler = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->10 [style = bold, label=""];
7->21 [style = dashed, label="0"];
24->1 [style = solid, label="md5"];
6->1 [style = solid, label="failureHandler"];
5->1 [style = solid, label="chunkConsumer"];
24->14 [style = solid, label="md5"];
1->3 [style = bold, label=""];
7->8 [style = bold, label=""];
2->1 [style = solid, label="md5"];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
10->6 [style = bold, label=""];
0->20 [style = dashed, label="0"];
11->2 [style = bold, label=""];
4->0 [style = bold, label=""];
24->14 [style = bold, label=""];
20->5 [style = bold, label=""];
19->24 [style = bold, label=""];
6->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
10->1 [style = solid, label="completedHandler"];
13->12 [style = bold, label=""];
23->22 [style = bold, label=""];
12->4 [style = bold, label=""];
3->7 [style = bold, label=""];
1->16 [style = bold, label=""];
16->21 [style = bold, label=""];
8->9 [style = bold, label=""];
17->15 [style = bold, label=""];
12->1 [style = solid, label="md5"];
22->17 [style = bold, label=""];
2->4 [style = solid, label="md5"];
4->14 [style = dashed, label="0"];
4->1 [style = solid, label="metadata"];
2->24 [style = dashed, label="0"];
14->1 [style = solid, label="metadata"];
4->5 [style = bold, label=""];
12->4 [style = solid, label="md5"];
14->20 [style = bold, label=""];
0->5 [style = bold, label=""];
21->23 [style = bold, label=""];
}
