digraph {
2 [style = filled, label = "assertThat(memberConfig.isLocator()).isTrue()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "ClusterManagementResult<MemberConfig,MemberInformation> result = cmsClient.list(config)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(result.getStatusCode()).isEqualTo(ClusterManagementResult.StatusCode.OK)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MemberConfig config = new MemberConfig()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(result.isSuccessful()).isTrue()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(result.getResult().size()).isEqualTo(0)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ClusterManagementResult<RuntimeMemberConfig> result = cmsClient.list(config)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(result.getRuntimeResult().size()).isEqualTo(1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "ClusterManagementResult<RuntimeMemberConfig> result = client.list(config)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RuntimeMemberConfig memberConfig = result.getResult().get(0)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "listOneMember['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(memberConfig.getPort()).isEqualTo(locator.getPort())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(result.getResult().size()).isEqualTo(1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "config.setId(\"locator-0\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(memberConfig.isCoordinator()).isTrue()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "noMatchWithJavaAPI['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "listOneMember['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(memberConfig.isServer()).isFalse()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "config.setId(\"server\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "MemberInformation memberConfig = result.getRuntimeResult().get(0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertThat(memberConfig.getLocatorPort()).isEqualTo(locator.getPort())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
15->13 [style = bold, label=""];
1->3 [style = solid, label="config"];
16->11 [style = bold, label=""];
21->19 [style = bold, label=""];
1->14 [style = solid, label="config"];
7->17 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
8->20 [style = dashed, label="0"];
14->10 [style = bold, label=""];
19->10 [style = bold, label=""];
8->6 [style = bold, label=""];
10->17 [style = bold, label=""];
1->0 [style = bold, label=""];
7->8 [style = bold, label=""];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
10->7 [style = bold, label=""];
3->19 [style = dashed, label="0"];
5->16 [style = bold, label=""];
3->10 [style = bold, label=""];
1->19 [style = solid, label="config"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
6->13 [style = dashed, label="0"];
18->1 [style = bold, label=""];
0->21 [style = dashed, label="0"];
1->21 [style = bold, label=""];
2->16 [style = dashed, label="0"];
13->5 [style = bold, label=""];
7->15 [style = bold, label=""];
4->11 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
9->1 [style = bold, label=""];
17->20 [style = bold, label=""];
}
