digraph {
3 [style = filled, label = "ParameterTool pt = ParameterTool.fromArgs(args)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "kinesis.setDefaultPartition(\"0\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "kinesis.setDefaultStream(\"test-flink\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamExecutionEnvironment see = StreamExecutionEnvironment.getExecutionEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "consumerProps.setProperty(ConsumerConfigConstants.AWS_SECRET_ACCESS_KEY,pt.getRequired(\"secretKey\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "consuming.print()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "kinesis.setFailOnError(true)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Properties consumerProps = new Properties()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "kinesisProducerConfig.setProperty(ProducerConfigConstants.AWS_REGION,pt.getRequired(\"region\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "kinesis.setCustomPartitioner(new KinesisPartitioner<String>(){@Override public String getPartitionId(String element){int l = element.length()return element.substring(l - 1,l)}})@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "consumerProps.setProperty(ConsumerConfigConstants.AWS_REGION,pt.getRequired(\"region\"))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "consumerProps.setProperty(ConsumerConfigConstants.AWS_ACCESS_KEY_ID,pt.getRequired(\"accessKey\"))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "DataStream<String> consuming = see.addSource(new FlinkKinesisConsumer<>(\"test-flink\",new SimpleStringSchema(),consumerProps))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "see.setParallelism(4)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataStream<String> simpleStringStream = see.addSource(new ProduceIntoKinesis.EventsGenerator())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Properties kinesisProducerConfig = new Properties()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "consuming.flatMap(new FlatMapFunction<String,String>(){@Override public void flatMap(String value,Collector<String> out){String(( parts = value.split(\"-\")try {long l = Long.parseLong(parts(0()if (l < 0) {throw new RuntimeException(\"Negative\")}}catch (NumberFormatException nfe) if (parts(1(.length() != 12) {throw new RuntimeException(\"Second part of '\" + value + \"' doesn't have 12 characters\")}}})@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "kinesisProducerConfig.setProperty(ProducerConfigConstants.AWS_SECRET_ACCESS_KEY,pt.getRequired(\"secretKey\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "simpleStringStream.addSink(kinesis)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "kinesisProducerConfig.setProperty(ProducerConfigConstants.AWS_ACCESS_KEY_ID,pt.getRequired(\"accessKey\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "FlinkKinesisProducer<String> kinesis = new FlinkKinesisProducer<>(new KinesisSerializationSchema<String>(){@Override public ByteBuffer serialize(String element){return ByteBuffer.wrap(element.getBytes())}@Override public String getTargetStream(String element){if (element.split(\"-\")(0(.endsWith(\"0\")) {return \"flink-test-2\"}return null}},kinesisProducerConfig)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "see.execute()@@@58@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
16->11 [style = bold, label=""];
0->6 [style = bold, label=""];
17->4 [style = dotted, label="true"];
25->4 [style = dotted, label="true"];
25->3 [style = bold, label=""];
18->19 [style = bold, label=""];
21->19 [style = solid, label="consumerProps"];
20->14 [style = bold, label=""];
4->3 [style = solid, label="args"];
9->7 [style = bold, label=""];
12->0 [style = bold, label=""];
1->13 [style = bold, label=""];
5->4 [style = dotted, label="true"];
13->24 [style = solid, label="l"];
19->24 [style = bold, label=""];
24->20 [style = bold, label=""];
3->10 [style = bold, label=""];
22->18 [style = bold, label=""];
23->22 [style = bold, label=""];
10->16 [style = bold, label=""];
2->21 [style = bold, label=""];
2->14 [style = bold, label=""];
17->3 [style = bold, label=""];
11->8 [style = bold, label=""];
7->15 [style = bold, label=""];
6->9 [style = bold, label=""];
8->9 [style = solid, label="kinesisProducerConfig"];
9->2 [style = solid, label="kinesis"];
21->23 [style = bold, label=""];
8->12 [style = bold, label=""];
13->2 [style = bold, label=""];
15->1 [style = bold, label=""];
}
