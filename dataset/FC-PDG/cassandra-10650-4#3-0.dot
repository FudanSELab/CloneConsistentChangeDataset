digraph {
17 [style = filled, label = "sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Set<SSTableReader> sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "getCurrentColumnFamilyStore().loadNewSSTables(backupdir.toString(),true,false,false,false,false,false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sstable.descriptor.getMetadataSerializer().mutateRepaired(sstable.descriptor,111,null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "importClearRepairedTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertEquals(10,execute(\"select * from %s\").size())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "getCurrentColumnFamilyStore().importNewSSTables(options)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "getCurrentColumnFamilyStore().importNewSSTables(options)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "createTable(\"create table %s (id int primary key, d int)\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,sstables.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(123,sstable.getSSTableLevel())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(1,sstables.size())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "getCurrentColumnFamilyStore().clearUnsafe()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "getCurrentColumnFamilyStore().clearUnsafe()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,sstables.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "ColumnFamilyStore.ImportOptions options = ColumnFamilyStore.ImportOptions.options(backupdir.toString()).build()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "backupdir = moveToBackupDir(sstables)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,sstables.size())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "File backupdir = moveToBackupDir(sstables)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "getCurrentColumnFamilyStore().forceBlockingFlush()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i++@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(0,sstable.getSSTableLevel())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "sstable.descriptor.getMetadataSerializer().mutateLevel(sstable.descriptor,123)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "options = ColumnFamilyStore.ImportOptions.options(backupdir.toString()).clearRepaired(true).build()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "getCurrentColumnFamilyStore().loadNewSSTables(backupdir.toString(),false,false,false,false,false,false)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,execute(\"select * from %s\").size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "backupdir = moveToBackupDir(sstables)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < 10@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "importClearRepairedTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "importResetLevelTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "execute(\"insert into %s (id, d) values (?, ?)\",i,i)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(sstable.isRepaired())@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
5->29 [style = bold, label=""];
16->0 [style = bold, label=""];
12->33 [style = dashed, label="0"];
24->19 [style = bold, label=""];
7->30 [style = bold, label=""];
31->16 [style = bold, label=""];
0->19 [style = bold, label=""];
2->6 [style = bold, label=""];
19->31 [style = bold, label=""];
16->24 [style = bold, label=""];
17->9 [style = bold, label=""];
15->20 [style = solid, label="sstables"];
4->13 [style = bold, label=""];
30->26 [style = bold, label=""];
16->31 [style = solid, label="i"];
1->20 [style = bold, label=""];
29->25 [style = bold, label=""];
20->32 [style = bold, label=""];
14->19 [style = bold, label=""];
4->8 [style = solid, label="sstables"];
22->28 [style = bold, label=""];
22->32 [style = dashed, label="0"];
10->21 [style = bold, label=""];
19->24 [style = dotted, label="true"];
9->7 [style = bold, label=""];
16->19 [style = bold, label=""];
3->4 [style = bold, label=""];
11->36 [style = bold, label=""];
36->1 [style = bold, label=""];
35->21 [style = bold, label=""];
11->18 [style = bold, label=""];
6->15 [style = bold, label=""];
20->22 [style = bold, label=""];
19->16 [style = bold, label=""];
14->16 [style = solid, label="i"];
5->2 [style = bold, label=""];
29->25 [style = solid, label="options"];
28->23 [style = solid, label="options"];
16->19 [style = solid, label="i"];
13->12 [style = bold, label=""];
15->11 [style = bold, label=""];
8->5 [style = bold, label=""];
18->1 [style = bold, label=""];
14->24 [style = solid, label="i"];
0->16 [style = solid, label="i"];
22->28 [style = dashed, label="0"];
28->23 [style = bold, label=""];
12->8 [style = bold, label=""];
14->19 [style = solid, label="i"];
24->19 [style = solid, label="i"];
19->0 [style = dotted, label="true"];
18->36 [style = dashed, label="0"];
19->16 [style = dotted, label="true"];
25->15 [style = bold, label=""];
22->17 [style = bold, label=""];
14->0 [style = solid, label="i"];
14->31 [style = solid, label="i"];
23->7 [style = bold, label=""];
0->19 [style = solid, label="i"];
11->22 [style = solid, label="sstables"];
13->33 [style = bold, label=""];
27->21 [style = bold, label=""];
33->8 [style = bold, label=""];
19->3 [style = bold, label=""];
32->17 [style = bold, label=""];
19->31 [style = dotted, label="true"];
7->34 [style = dashed, label="0"];
24->16 [style = solid, label="i"];
21->14 [style = bold, label=""];
9->34 [style = bold, label=""];
}
