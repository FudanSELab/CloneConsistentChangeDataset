digraph {
20 [style = filled, label = "r.jenkins.setAuthorizationStrategy(auth)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "permissionSensitiveSlaveAllocations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "aliceCantBuild.add(new PrincipalSid(alice),Computer.BUILD,false)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "accessControl['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "r.configureUserRealm()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "accessControl['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "auth.add(Jenkins.ADMINISTER,\"anonymous\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DumbSlave s1 = r.createSlave()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final FreeStyleBuild b1 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DumbSlave s2 = r.createSlave()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final FreeStyleBuild b2 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "aliceCantBuild.add(new PrincipalSid(\"anonymous\"),Jenkins.ADMINISTER,true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final SparseACL aliceCantBuild = new SparseACL(null)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "r.configureUserRealm()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy(){@Override public ACL getACL(Node node){if (node == b1.getBuiltOn()) return aliceCantBuildreturn super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@483180node}}@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNotSame(b3.getBuiltOnStr(),b1.getBuiltOnStr())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(),alice)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "i < 3@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "i++@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FreeStyleProject p = r.createFreeStyleProject()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "r.jenkins.setNumExecutors(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "QueueItemAuthenticatorConfiguration.get().getAuthenticators().add(new MockQueueItemAuthenticator(Collections.singletonMap(p.getFullName(),alice)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "FreeStyleBuild b3 = r.assertBuildStatusSuccess(p.scheduleBuild2(0))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "p.getBuildersList().add(new TestBuilder(){@Override public boolean perform(AbstractBuild<?,?> build,Launcher launcher,BuildListener listener){assertEquals(alice,Jenkins.getAuthentication())return true}})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
6->3 [style = bold, label=""];
26->7 [style = bold, label=""];
17->19 [style = solid, label="i"];
12->19 [style = solid, label="i"];
19->17 [style = dotted, label="true"];
15->25 [style = bold, label=""];
2->1 [style = bold, label=""];
18->26 [style = bold, label=""];
14->10 [style = bold, label=""];
19->23 [style = dotted, label="true"];
2->18 [style = bold, label=""];
9->20 [style = bold, label=""];
16->20 [style = solid, label="auth"];
4->2 [style = bold, label=""];
19->13 [style = dotted, label="true"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
17->19 [style = bold, label=""];
19->13 [style = bold, label=""];
5->0 [style = bold, label=""];
12->17 [style = solid, label="i"];
20->12 [style = bold, label=""];
13->23 [style = bold, label=""];
11->22 [style = bold, label=""];
21->16 [style = bold, label=""];
23->17 [style = bold, label=""];
1->8 [style = dashed, label="0"];
10->2 [style = bold, label=""];
22->14 [style = bold, label=""];
12->19 [style = bold, label=""];
16->9 [style = bold, label=""];
25->21 [style = bold, label=""];
15->16 [style = solid, label="aliceCantBuild"];
24->15 [style = bold, label=""];
8->24 [style = bold, label=""];
}
