digraph {
7 [style = filled, label = "Logger clusterLogger = LogManager.getLogger(\"org.elasticsearch.cluster.service\")@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test4\",.getCanonicalName(),Level.WARN,\"*cluster state applier task (test3( took (34s( above the warn threshold of *\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final CountDownLatch processedFirstTask = new CountDownLatch(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "{Loggers.removeAppender(clusterLogger,mockAppender)mockAppender.stop()}@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test4\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test3\",clusterApplierService.getClass().getCanonicalName(),Level.DEBUG,\"*processing (test3(: took (0s( no change in cluster state*\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test2\",.getCanonicalName(),Level.WARN,\"*cluster state applier task (test2( took (32s( above the warn threshold of *\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertBusy(null)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test1\",clusterApplierService.getClass().getCanonicalName(),Level.DEBUG,\"*processing (test1(: took (1s( no change in cluster state\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test2\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){fail()}@Override public void onFailure(String source,Exception e){}})@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test3\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){latch.countDown()}@Override public void onFailure(String source,Exception e){fail()}})@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "processedFirstTask.await()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mockAppender.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MockLogAppender mockAppender = new MockLogAppender()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation(\"test1 shouldn't see because setting is too low\",.getCanonicalName(),Level.WARN,\"*cluster state applier task (test1( took (*( above the warn threshold of *\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testClusterStateUpdateLogging['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.UnseenEventExpectation(\"test1 shouldn't see because setting is too low\",clusterApplierService.getClass().getCanonicalName(),Level.WARN,\"*cluster state applier task (test1( took (*( above the warn threshold of *\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "{Loggers.removeAppender(clusterLogger,mockAppender)mockAppender.stop()}@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test1\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){}@Override public void onFailure(String source,Exception e){fail()}})@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testLongClusterStateUpdateLogging['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test4\",clusterApplierService.getClass().getCanonicalName(),Level.WARN,\"*cluster state applier task (test3( took (34s( above the warn threshold of *\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Loggers.addAppender(clusterLogger,mockAppender)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Logger clusterLogger = LogManager.getLogger()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "latch.await()@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test2\",clusterApplierService.getClass().getCanonicalName(),Level.WARN,\"*cluster state applier task (test2( took (32s( above the warn threshold of *\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "mockAppender.addExpectation(new MockLogAppender.SeenEventExpectation(\"test2\",clusterApplierService.getClass().getCanonicalName(),Level.TRACE,\"*failed to execute cluster state applier in (2s(*\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(4)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testLongClusterStateUpdateLogging['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "clusterApplierService.runOnApplierThread(\"test3\",null,new ClusterApplyListener(){@Override public void onSuccess(String source){}@Override public void onFailure(String source,Exception e){fail()}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "mockAppender.assertAllExpectationsMatched()@@@64@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "clusterApplierService.currentTimeOverride = System.nanoTime()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
3->29 [style = dashed, label="0"];
4->10 [style = bold, label=""];
16->3 [style = bold, label=""];
15->2 [style = bold, label=""];
24->2 [style = bold, label=""];
28->30 [style = bold, label=""];
2->8 [style = solid, label="mockAppender"];
17->6 [style = bold, label=""];
7->18 [style = solid, label="clusterLogger"];
26->29 [style = bold, label=""];
7->25 [style = solid, label="clusterLogger"];
30->27 [style = bold, label=""];
5->26 [style = bold, label=""];
8->14 [style = bold, label=""];
29->25 [style = bold, label=""];
20->18 [style = solid, label="clusterLogger"];
7->20 [style = dashed, label="0"];
9->27 [style = dashed, label="0"];
7->8 [style = solid, label="clusterLogger"];
12->16 [style = bold, label=""];
19->2 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
17->22 [style = bold, label=""];
2->25 [style = solid, label="mockAppender"];
22->23 [style = bold, label=""];
13->23 [style = dashed, label="0"];
6->22 [style = dashed, label="0"];
3->18 [style = bold, label=""];
12->26 [style = dashed, label="0"];
6->28 [style = dashed, label="0"];
11->5 [style = bold, label=""];
20->8 [style = bold, label=""];
17->28 [style = bold, label=""];
2->18 [style = solid, label="mockAppender"];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
23->21 [style = bold, label=""];
18->1 [style = bold, label=""];
5->12 [style = bold, label=""];
0->4 [style = bold, label=""];
9->21 [style = dashed, label="0"];
6->13 [style = bold, label=""];
27->7 [style = bold, label=""];
20->8 [style = solid, label="clusterLogger"];
13->9 [style = bold, label=""];
8->4 [style = bold, label=""];
13->30 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
