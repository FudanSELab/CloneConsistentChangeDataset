digraph {
7 [style = filled, label = "assertFalse(pager.isExhausted())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(pager.isExhausted())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertRow(page.get(0),\"k0\",\"c1\",\"c2\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertRow(page.get(0),\"k0\",\"c1\",\"c2\",\"c3\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "page = pager.fetchPage(3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(pager.isExhausted())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertRow(page.get(0),\"k0\",\"c7\",\"c8\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(toString(page),1,page.size())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "page = pager.fetchPage(3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<Row> page@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sliceQueryTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertRow(page.get(0),\"k0\",\"c4\",\"c5\",\"c6\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\",\"c8\",\"c1\",true,10))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(toString(page),1,page.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "reversedSliceQueryTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "QueryPager pager = QueryPagers.localPager(sliceQuery(\"k0\",\"c1\",\"c8\",10))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertRow(page.get(0),\"k0\",\"c6\",\"c7\",\"c8\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertRow(page.get(0),\"k0\",\"c3\",\"c4\",\"c5\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(pager.isExhausted())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "page = pager.fetchPage(3)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(toString(page),1,page.size())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SliceQueryTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3->10 [style = bold, label=""];
11->12 [style = bold, label=""];
6->4 [style = bold, label=""];
10->6 [style = bold, label=""];
13->0 [style = bold, label=""];
12->15 [style = bold, label=""];
18->5 [style = bold, label=""];
14->2 [style = solid, label="page"];
16->0 [style = bold, label=""];
9->17 [style = dashed, label="0"];
20->8 [style = bold, label=""];
11->12 [style = solid, label="page"];
2->17 [style = bold, label=""];
10->19 [style = bold, label=""];
1->11 [style = bold, label=""];
15->20 [style = dashed, label="0"];
7->3 [style = bold, label=""];
2->9 [style = bold, label=""];
21->18 [style = bold, label=""];
12->20 [style = bold, label=""];
19->4 [style = bold, label=""];
4->14 [style = bold, label=""];
14->2 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->5 [style = bold, label=""];
15->8 [style = bold, label=""];
9->1 [style = bold, label=""];
0->18 [style = dashed, label="0"];
5->7 [style = bold, label=""];
3->10 [style = solid, label="page"];
17->1 [style = bold, label=""];
}
