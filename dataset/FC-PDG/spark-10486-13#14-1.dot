digraph {
23 [style = filled, label = "Map<Integer,Integer> categoricalFeatures = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "double A = 2.0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int nPoints = 20@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String(( invalidStrategies = {\"-.1\",\"-.10\",\"-0.10\",\".0\",\"0.0\",\"1.1\",\"0\"}@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String(( integerStrategies = {\"1\",\"10\",\"100\",\"1000\",\"10000\"}@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "model.transform(dataFrame)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "model.treeWeights()@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "model.trees()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.fail(\"Expected exception to be thrown for invalid strategies\")@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "rf.setFeatureSubsetStrategy(strategy)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "runDT['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RandomForestClassifier rf = new RandomForestClassifier().setMaxDepth(2).setMaxBins(10).setMinInstancesPerNode(5).setMinInfoGain(0.0).setMaxMemoryInMB(256).setCacheNodeIds(false).setCheckpointInterval(10).setSubsamplingRate(1.0).setSeed(1234).setNumTrees(3).setMaxDepth(2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "model.toDebugString()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "runDT['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Exception e@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "JavaRDD<LabeledPoint> data = jsc.parallelize(LogisticRegressionSuite.generateLogisticInputAsList(A,B,nPoints,42),2).cache()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Vector importances = model.featureImportances()@@@46@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "rf.setFeatureSubsetStrategy(strategy)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "rf.setFeatureSubsetStrategy(featureSubsetStrategy)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "rf.setImpurity(impurity)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "RandomForestRegressor rf = new RandomForestRegressor().setMaxDepth(2).setMaxBins(10).setMinInstancesPerNode(5).setMinInfoGain(0.0).setMaxMemoryInMB(256).setCacheNodeIds(false).setCheckpointInterval(10).setSubsamplingRate(1.0).setSeed(1234).setNumTrees(3).setMaxDepth(2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "RandomForestClassificationModel model = rf.fit(dataFrame)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "rf.setFeatureSubsetStrategy(strategy)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String(( realStrategies = {\".1\",\".10\",\"0.10\",\"0.1\",\"0.9\",\"1.0\"}@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "model.totalNumNodes()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(e instanceof IllegalArgumentException)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "JavaRDD<LabeledPoint> data = sc.parallelize(LogisticRegressionSuite.generateLogisticInputAsList(A,B,nPoints,42),2).cache()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "double B = -1.5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Dataset<Row> dataFrame = TreeTests.setMetadata(data,categoricalFeatures,0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "runDT['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "RandomForestRegressionModel model = rf.fit(dataFrame)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Dataset<Row> dataFrame = TreeTests.setMetadata(data,categoricalFeatures,2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
28->31 [style = solid, label="dataFrame"];
18->31 [style = bold, label=""];
21->30 [style = dashed, label="0"];
23->5 [style = bold, label=""];
9->0 [style = bold, label=""];
28->30 [style = bold, label=""];
0->19 [style = bold, label=""];
17->31 [style = bold, label=""];
2->3 [style = bold, label=""];
5->15 [style = solid, label="dataFrame"];
18->11 [style = bold, label=""];
5->1 [style = solid, label="dataFrame"];
18->15 [style = bold, label=""];
14->10 [style = bold, label=""];
31->1 [style = bold, label=""];
20->6 [style = bold, label=""];
13->16 [style = bold, label=""];
17->11 [style = bold, label=""];
28->1 [style = solid, label="dataFrame"];
21->2 [style = bold, label=""];
19->24 [style = bold, label=""];
1->22 [style = bold, label=""];
10->5 [style = solid, label="data"];
23->28 [style = bold, label=""];
3->9 [style = bold, label=""];
5->21 [style = bold, label=""];
12->13 [style = bold, label=""];
14->26 [style = bold, label=""];
26->5 [style = solid, label="data"];
10->28 [style = solid, label="data"];
23->28 [style = solid, label="categoricalFeatures"];
10->26 [style = dashed, label="0"];
5->28 [style = dashed, label="0"];
22->20 [style = bold, label=""];
10->23 [style = bold, label=""];
25->11 [style = bold, label=""];
24->25 [style = bold, label=""];
26->23 [style = bold, label=""];
6->8 [style = bold, label=""];
17->15 [style = bold, label=""];
15->31 [style = dashed, label="0"];
7->18 [style = dotted, label="true"];
7->18 [style = bold, label=""];
16->14 [style = bold, label=""];
11->17 [style = bold, label=""];
8->4 [style = bold, label=""];
30->2 [style = bold, label=""];
23->5 [style = solid, label="categoricalFeatures"];
15->1 [style = bold, label=""];
29->13 [style = bold, label=""];
}
