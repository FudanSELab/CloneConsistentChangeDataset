digraph {
6 [style = filled, label = "s1.add(1.0,1.1,1.2,1.3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "XIntervalSeries<String> s1 = new XIntervalSeries<>(\"Series\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "XIntervalSeries<String> s2 = new XIntervalSeries<>(\"Series\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "c1.addSeries(new XIntervalSeries(\"Empty Series\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "c2.addSeries(s2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int h2 = c2.hashCode()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "c2.addSeries(new XIntervalSeries(\"Empty Series\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "XIntervalSeries s2 = new XIntervalSeries(\"Series\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "XIntervalSeriesCollection c2 = new XIntervalSeriesCollection()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertTrue(c1.equals(c2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "XIntervalSeriesCollection<String> c2 = new XIntervalSeriesCollection<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "XIntervalSeriesCollection c1 = new XIntervalSeriesCollection()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DialCap c2 = new DialCap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(h1,h2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "c2.addSeries(new XIntervalSeries<>(\"Empty Series\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testHashCode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int h1 = c1.hashCode()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "XIntervalSeriesCollection<String> c1 = new XIntervalSeriesCollection<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "s2.add(1.0,1.1,1.2,1.3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "c1.addSeries(new XIntervalSeries<>(\"Empty Series\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "XIntervalSeries s1 = new XIntervalSeries(\"Series\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "DialCap c1 = new DialCap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
2->10 [style = solid, label="c1"];
4->10 [style = bold, label=""];
17->10 [style = bold, label=""];
10->18 [style = bold, label=""];
24->28 [style = bold, label=""];
17->0 [style = solid, label="c2"];
17->12 [style = solid, label="c2"];
22->13 [style = solid, label="s2"];
23->27 [style = bold, label=""];
28->29 [style = solid, label="h1"];
4->17 [style = dashed, label="0"];
10->14 [style = bold, label=""];
9->2 [style = bold, label=""];
12->21 [style = bold, label=""];
25->23 [style = bold, label=""];
26->29 [style = bold, label=""];
12->15 [style = bold, label=""];
17->1 [style = solid, label="c2"];
8->20 [style = dashed, label="0"];
15->21 [style = dashed, label="0"];
28->26 [style = bold, label=""];
4->12 [style = solid, label="c2"];
16->17 [style = bold, label=""];
26->29 [style = solid, label="h2"];
3->22 [style = bold, label=""];
2->4 [style = bold, label=""];
22->7 [style = bold, label=""];
4->0 [style = solid, label="c2"];
19->16 [style = bold, label=""];
3->5 [style = bold, label=""];
16->10 [style = solid, label="c1"];
4->1 [style = solid, label="c2"];
17->10 [style = solid, label="c2"];
11->3 [style = bold, label=""];
18->6 [style = bold, label=""];
4->10 [style = solid, label="c2"];
4->3 [style = solid, label="c2"];
6->11 [style = bold, label=""];
2->16 [style = dashed, label="0"];
21->1 [style = bold, label=""];
20->12 [style = bold, label=""];
0->8 [style = bold, label=""];
14->11 [style = solid, label="s1"];
17->3 [style = solid, label="c2"];
5->13 [style = solid, label="s2"];
5->7 [style = bold, label=""];
0->20 [style = bold, label=""];
27->24 [style = bold, label=""];
14->18 [style = dashed, label="0"];
18->11 [style = solid, label="s1"];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
27->24 [style = solid, label="c2"];
13->0 [style = bold, label=""];
15->1 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
