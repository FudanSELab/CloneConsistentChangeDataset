digraph {
9 [style = filled, label = "String expectFileSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertThat(getLineWithText(file,\"Hello world\")).contains(\"INFO\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "this.logger.info(\"Hello world\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "LoggingInitializationContext loggingInitializationContext = new LoggingInitializationContext(environment)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "this.loggingSystem.initialize(loggingInitializationContext,\"classpath:logback-include-base.xml\",logFile)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "environment.setProperty(\"logging.file.total-size-cap\",expectedSize)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testTotalSizeCapProperty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "LogFile logFile = getLogFile(file.getPath(),null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testTotalSizeCapProperty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File file = new File(tmpDir(),\"logback-test.log\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "this.logger.info(\"Hello world\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MockEnvironment environment = new MockEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String expectedSize = \"101 MB\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MockEnvironment environment = new MockEnvironment()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(ReflectionTestUtils.getField(getRollingPolicy(),\"totalSizeCap\").toString()).isEqualTo(expectedFileSize)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "String expectedFileSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertThat(ReflectionTestUtils.getField(getRollingPolicy(),\"totalSizeCap\").toString()).isEqualTo(expectedSize)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String sizeValue@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testTotalSizeCapPropertyWithXmlConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String sizeValue@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
0->3 [style = bold, label=""];
8->16 [style = bold, label=""];
8->16 [style = dashed, label="0"];
7->11 [style = bold, label=""];
20->17 [style = bold, label=""];
10->15 [style = bold, label=""];
7->18 [style = dashed, label="0"];
14->12 [style = dotted, label="true"];
5->7 [style = solid, label="sizeValue"];
0->19 [style = bold, label=""];
0->19 [style = dashed, label="0"];
0->19 [style = solid, label="logFile"];
8->15 [style = dashed, label="0"];
6->11 [style = solid, label="environment"];
19->10 [style = bold, label=""];
11->0 [style = solid, label="loggingInitializationContext"];
17->18 [style = solid, label="expectedSize"];
18->2 [style = bold, label=""];
2->4 [style = bold, label=""];
11->2 [style = bold, label=""];
14->13 [style = dotted, label="true"];
4->0 [style = bold, label=""];
4->0 [style = solid, label="logFile"];
17->7 [style = bold, label=""];
3->10 [style = bold, label=""];
9->8 [style = solid, label="expectFileSize"];
1->6 [style = bold, label=""];
10->8 [style = bold, label=""];
12->15 [style = solid, label="expectedFileSize"];
2->19 [style = solid, label="loggingInitializationContext"];
1->9 [style = dotted, label="true"];
9->13 [style = dashed, label="0"];
7->18 [style = bold, label=""];
7->2 [style = solid, label="environment"];
6->7 [style = bold, label=""];
13->7 [style = solid, label="sizeValue"];
14->6 [style = bold, label=""];
1->5 [style = dotted, label="true"];
17->16 [style = solid, label="expectedSize"];
}
