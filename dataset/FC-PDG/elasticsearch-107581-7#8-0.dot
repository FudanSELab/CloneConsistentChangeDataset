digraph {
45 [style = filled, label = "String(( indexNames = new String((((@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "IndexMetadata indexMetadata@@@85@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "indexExpressions == null || indexExpressions.length == 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "addIndex(writeIndex,context)@@@71@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "return false@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "IndicesOptions options@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "addIndex(writeIndex,context)@@@77@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<String> expressions = Arrays.asList(indexExpressions)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "indexAbstraction.getIndices()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "concreteIndices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.getOptions().ignoreAliases()@@@55@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "indexAbstraction == null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "throw infe@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "throw new IllegalArgumentException(\"no write index is defined for alias (\" + indexAbstraction.getName() + \"(.\" + \" The write index may be explicitly disabled using is_write_index=false or the alias points to multiple\" + \" indices without one being designated as a write index\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "options.allowNoIndices() == false && concreteIndices.isEmpty()@@@97@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "indexExpressions.length == 1@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IndexNotFoundException infe@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && context.isResolveToWriteIndex()@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "String expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Context context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "writeIndex == null@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expressions = expressionResolver.resolve(context,expressions)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.ALIAS && options.ignoreAliases()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expression.equals(Metadata.ALL)@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",expression)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "concreteIndices.add(index.getIndex())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "IndexMetadata index@@@90@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "concreteIndices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one indices associated with it (\" + Arrays.toString(indexNames) + \"(, can't execute a single index op\")@@@88@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "shouldTrackConcreteIndex(context,options,index)@@@91@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "aliasOrIndexExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IndicesOptions options = context.getOptions()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Metadata metadata = context.getState().metadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.includeDataStreams() == false@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "return false@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "indexExpressions(0(.equals(Metadata.ALL)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "failNoIndices@@@40@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final boolean failNoIndices = indexExpressions.length == 1? !options.allowNoIndices(): !options.ignoreUnavailable()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "throw aliasesNotSupportedException(expression)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "IndexMetadata writeIndex = indexAbstraction.getWriteIndex()@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "return true@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "infe.setResources(\"index_expression\",expression)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final Set<Index> concreteIndices = new HashSet<>(expressions.size())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "!options.allowNoIndices()@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "IndexMetadata indexMetadata@@@85@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "indexExpressions = new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@13a1fed@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "indexAbstraction.getIndices()@@@90@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expressions.isEmpty()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "indexAbstraction.getIndices().size() > 1 && !options.allowAliasesToMultipleIndices()@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "IndexAbstraction indexAbstraction = metadata.getIndicesLookup().get(expression)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String indexExpressions@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "return concreteIndices.toArray(new Index(((()@@@102@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Metadata metadata@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "return false@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "infe = new IndexNotFoundException(expression)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "IndexNotFoundException infe = new IndexNotFoundException((String)null)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "indexAbstraction.getType() == IndexAbstraction.Type.DATA_STREAM && context.isResolveToWriteIndex()@@@75@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "throw new IllegalArgumentException(indexAbstraction.getType().getDisplayName() + \" (\" + expression + \"( has more than one index associated with it \" + Arrays.toString(indexNames) + \", can't execute a single index op\")@@@88@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "Context context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "throw infe@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "infe = new IndexNotFoundException((String)null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "concreteIndices.add(writeIndex.getIndex())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "Context context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "IndexNotFoundException infe@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "infe = new IndexNotFoundException(\"no indices exist\",(String)null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "infe.setResources(\"index_expression\",indexExpressions)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "failNoIndices@@@56@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "indexNames(i++( = indexMetadata.getIndex().getName()@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "int i = 0@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "indexAbstraction == null@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "throw infe@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "indexAbstraction.getIndices()@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return Index.EMPTY_ARRAY@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->64 [style = bold, label=""];
9->53 [style = bold, label=""];
10->49 [style = dotted, label="true"];
70->67 [style = bold, label=""];
78->74 [style = solid, label="indexAbstraction"];
62->43 [style = dotted, label="true"];
25->1 [style = bold, label=""];
20->58 [style = bold, label=""];
46->0 [style = bold, label=""];
43->77 [style = dashed, label="0"];
74->72 [style = bold, label=""];
60->54 [style = dotted, label="false"];
60->29 [style = bold, label=""];
57->8 [style = bold, label=""];
21->8 [style = bold, label=""];
21->48 [style = bold, label=""];
49->48 [style = bold, label=""];
10->17 [style = bold, label=""];
40->11 [style = solid, label="context"];
43->6 [style = solid, label="indexExpressions"];
36->65 [style = dotted, label="true"];
7->48 [style = bold, label=""];
63->49 [style = solid, label="context"];
12->9 [style = bold, label=""];
15->57 [style = bold, label=""];
7->8 [style = bold, label=""];
38->39 [style = bold, label=""];
44->34 [style = solid, label="infe"];
36->38 [style = dotted, label="true"];
60->4 [style = dotted, label="false"];
49->8 [style = bold, label=""];
52->28 [style = dotted, label="false"];
52->28 [style = bold, label=""];
22->8 [style = bold, label=""];
60->29 [style = dotted, label="true"];
75->68 [style = dotted, label="true"];
76->73 [style = bold, label=""];
60->37 [style = dotted, label="true"];
48->26 [style = dotted, label="true"];
29->11 [style = solid, label="writeIndex"];
36->39 [style = dotted, label="true"];
27->34 [style = solid, label="infe"];
37->48 [style = bold, label=""];
72->73 [style = bold, label=""];
32->25 [style = bold, label=""];
24->13 [style = solid, label="indexExpressions"];
30->43 [style = dotted, label="true"];
46->18 [style = dotted, label="true"];
75->78 [style = bold, label=""];
10->60 [style = dotted, label="false"];
43->41 [style = solid, label="indexExpressions"];
60->11 [style = dotted, label="true"];
23->49 [style = bold, label=""];
46->0 [style = dotted, label="false"];
32->24 [style = dotted, label="true"];
73->67 [style = bold, label=""];
19->12 [style = bold, label=""];
46->5 [style = dotted, label="true"];
11->48 [style = bold, label=""];
47->48 [style = bold, label=""];
42->58 [style = solid, label="infe"];
37->21 [style = bold, label=""];
53->20 [style = bold, label=""];
48->33 [style = dotted, label="true"];
48->50 [style = bold, label=""];
43->32 [style = solid, label="indexExpressions"];
17->23 [style = solid, label="writeIndex"];
9->42 [style = dotted, label="true"];
38->64 [style = solid, label="indexNames"];
14->27 [style = dotted, label="true"];
52->19 [style = bold, label=""];
26->6 [style = bold, label=""];
33->50 [style = bold, label=""];
36->31 [style = dotted, label="true"];
53->58 [style = solid, label="infe"];
13->16 [style = bold, label=""];
23->35 [style = bold, label=""];
36->45 [style = dotted, label="true"];
21->37 [style = bold, label=""];
10->23 [style = dotted, label="true"];
59->34 [style = solid, label="infe"];
19->9 [style = dotted, label="true"];
75->69 [style = dotted, label="true"];
44->41 [style = bold, label=""];
49->3 [style = bold, label=""];
36->56 [style = dotted, label="true"];
11->8 [style = bold, label=""];
40->37 [style = solid, label="context"];
36->37 [style = bold, label=""];
63->37 [style = solid, label="context"];
29->11 [style = bold, label=""];
63->11 [style = solid, label="context"];
34->57 [style = bold, label=""];
10->60 [style = bold, label=""];
39->37 [style = bold, label=""];
0->57 [style = bold, label=""];
2->19 [style = solid, label="failNoIndices"];
78->74 [style = bold, label=""];
9->42 [style = bold, label=""];
5->59 [style = bold, label=""];
72->76 [style = dotted, label="true"];
62->63 [style = dotted, label="true"];
22->48 [style = bold, label=""];
45->51 [style = bold, label=""];
62->32 [style = bold, label=""];
22->55 [style = bold, label=""];
19->12 [style = dotted, label="true"];
60->61 [style = dotted, label="false"];
30->32 [style = bold, label=""];
35->49 [style = bold, label=""];
73->70 [style = bold, label=""];
46->18 [style = bold, label=""];
8->52 [style = bold, label=""];
55->10 [style = bold, label=""];
17->23 [style = bold, label=""];
52->19 [style = dotted, label="true"];
10->17 [style = dotted, label="true"];
48->26 [style = bold, label=""];
64->37 [style = bold, label=""];
74->66 [style = bold, label=""];
63->16 [style = solid, label="context"];
74->66 [style = dotted, label="true"];
38->39 [style = solid, label="indexNames"];
58->10 [style = bold, label=""];
24->25 [style = bold, label=""];
3->8 [style = bold, label=""];
6->33 [style = bold, label=""];
60->36 [style = bold, label=""];
28->22 [style = dotted, label="true"];
8->52 [style = solid, label="indexAbstraction"];
23->35 [style = dotted, label="true"];
11->47 [style = bold, label=""];
73->70 [style = dotted, label="true"];
11->47 [style = dotted, label="true"];
1->2 [style = bold, label=""];
14->27 [style = bold, label=""];
36->51 [style = dotted, label="true"];
37->8 [style = bold, label=""];
60->36 [style = dotted, label="false"];
26->33 [style = solid, label="infe"];
41->34 [style = bold, label=""];
24->6 [style = solid, label="indexExpressions"];
28->22 [style = bold, label=""];
52->74 [style = dashed, label="0"];
16->15 [style = bold, label=""];
5->14 [style = dotted, label="true"];
17->49 [style = solid, label="writeIndex"];
43->13 [style = solid, label="indexExpressions"];
19->48 [style = bold, label=""];
47->8 [style = bold, label=""];
13->16 [style = solid, label="expressions"];
7->10 [style = bold, label=""];
1->37 [style = solid, label="options"];
19->20 [style = dotted, label="true"];
37->21 [style = dotted, label="true"];
42->20 [style = bold, label=""];
28->7 [style = bold, label=""];
75->71 [style = dotted, label="true"];
40->16 [style = solid, label="context"];
22->55 [style = dotted, label="true"];
5->14 [style = bold, label=""];
46->41 [style = dotted, label="true"];
24->41 [style = solid, label="indexExpressions"];
15->46 [style = dotted, label="true"];
14->44 [style = bold, label=""];
30->40 [style = dotted, label="true"];
75->77 [style = dotted, label="true"];
9->53 [style = dotted, label="false"];
36->64 [style = dotted, label="true"];
19->8 [style = bold, label=""];
72->76 [style = bold, label=""];
2->13 [style = bold, label=""];
5->59 [style = dotted, label="false"];
48->6 [style = dotted, label="true"];
46->34 [style = dotted, label="true"];
39->64 [style = dashed, label="0"];
3->48 [style = bold, label=""];
19->58 [style = dotted, label="true"];
51->38 [style = bold, label=""];
2->22 [style = solid, label="failNoIndices"];
28->7 [style = dotted, label="false"];
18->5 [style = bold, label=""];
27->41 [style = bold, label=""];
40->49 [style = solid, label="context"];
66->72 [style = bold, label=""];
15->46 [style = bold, label=""];
14->44 [style = dotted, label="false"];
71->78 [style = solid, label="expression"];
36->45 [style = bold, label=""];
32->24 [style = bold, label=""];
49->3 [style = dotted, label="true"];
59->41 [style = bold, label=""];
}
