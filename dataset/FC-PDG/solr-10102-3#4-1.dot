digraph {
8 [style = filled, label = "String coreNodeName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "setTermEqualsToLeader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "values.get(coreNodeName) == maxTerm@@@4@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.get(coreNodeName) == maxTerm@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "newValues.remove(recoveringTerm(coreNodeName))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "!newValues.containsKey(recoveringTerm(coreNodeName))@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "startRecovering['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long maxTerm = getMaxTerm()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "newValues.put(coreNodeName,maxTerm)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return new ShardTerms(newValues,version)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "long currentTerm = newValues.getOrDefault(coreNodeName,0L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "setTermEqualsToLeader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "newValues.put(recoveringTerm(coreNodeName),currentTerm)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "values.get(coreNodeName) == maxTerm@@@3@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "HashMap<String,Long> newValues = new HashMap<>(values)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String coreNodeName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
16->3 [style = bold, label=""];
10->8 [style = dotted, label="true"];
15->2 [style = bold, label=""];
16->13 [style = dotted, label="true"];
0->6 [style = bold, label=""];
3->14 [style = bold, label=""];
13->11 [style = solid, label="coreNodeName"];
12->11 [style = bold, label=""];
3->14 [style = solid, label="maxTerm"];
12->15 [style = dotted, label="true"];
13->2 [style = solid, label="coreNodeName"];
7->4 [style = bold, label=""];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
8->2 [style = solid, label="coreNodeName"];
9->6 [style = bold, label=""];
14->1 [style = bold, label=""];
11->15 [style = bold, label=""];
6->2 [style = bold, label=""];
12->11 [style = dotted, label="true"];
8->13 [style = dashed, label="0"];
12->2 [style = bold, label=""];
1->6 [style = bold, label=""];
13->15 [style = solid, label="coreNodeName"];
3->2 [style = solid, label="maxTerm"];
8->0 [style = solid, label="coreNodeName"];
3->0 [style = solid, label="maxTerm"];
6->4 [style = solid, label="newValues"];
0->1 [style = bold, label=""];
9->1 [style = dotted, label="true"];
10->9 [style = bold, label=""];
13->14 [style = solid, label="coreNodeName"];
14->1 [style = dotted, label="true"];
8->9 [style = solid, label="coreNodeName"];
2->7 [style = bold, label=""];
11->15 [style = solid, label="currentTerm"];
9->1 [style = bold, label=""];
5->8 [style = dotted, label="true"];
8->7 [style = solid, label="coreNodeName"];
14->6 [style = bold, label=""];
0->1 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
