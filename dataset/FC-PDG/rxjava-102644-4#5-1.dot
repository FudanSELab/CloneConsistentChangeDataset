digraph {
10 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<>(subscriber)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "dematerialize.subscribe(to)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "verify(subscriber,times(1)).onComplete()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "completePassThru['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Subscriber<Integer> subscriber = TestHelper.mockSubscriber()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TestObserverEx<Integer> to = new TestObserverEx<Integer>(observer)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Observable<Integer> dematerialize = o.dematerialize(Functions.identity())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "verify(observer,times(0)).onNext(any())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "verify(subscriber,never()).onError(any())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Flowable<Notification<Integer>> flowable = Flowable.empty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Observer<Integer> observer = TestHelper.mockObserver()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "System.out.println(ts.errors())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "verify(observer,times(1)).onComplete()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "System.out.println(to.errors())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Observable<Notification<Integer>> o = Observable.empty()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Flowable<Integer> dematerialize = flowable.dematerialize(Functions.identity())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "completePassThru['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "completePassThru['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(observer,never()).onError(any())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "verify(subscriber,times(0)).onNext(any())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TestSubscriberEx<Integer> ts = new TestSubscriberEx<Integer>(subscriber)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "dematerialize.subscribe(ts)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->10 [style = solid, label="subscriber"];
2->20 [style = dashed, label="0"];
3->1 [style = bold, label=""];
19->12 [style = bold, label=""];
3->21 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
19->12 [style = solid, label="to"];
12->20 [style = bold, label=""];
5->7 [style = solid, label="ts"];
0->5 [style = solid, label="subscriber"];
10->7 [style = solid, label="ts"];
13->19 [style = solid, label="observer"];
10->7 [style = bold, label=""];
15->18 [style = bold, label=""];
20->21 [style = bold, label=""];
8->0 [style = bold, label=""];
0->10 [style = bold, label=""];
13->19 [style = bold, label=""];
1->6 [style = bold, label=""];
1->17 [style = dashed, label="0"];
6->16 [style = dashed, label="0"];
5->10 [style = dashed, label="0"];
7->2 [style = bold, label=""];
4->15 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
18->13 [style = bold, label=""];
7->12 [style = dashed, label="0"];
4->8 [style = bold, label=""];
5->7 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->15 [style = bold, label=""];
5->19 [style = dashed, label="0"];
21->17 [style = bold, label=""];
17->16 [style = bold, label=""];
0->5 [style = bold, label=""];
}
