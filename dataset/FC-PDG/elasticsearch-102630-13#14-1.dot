digraph {
12 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "closeShard(source,false)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "randomBoolean()@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testRestoreShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "randomBoolean()@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,new IndexId(\"test\",UUIDs.randomBase64UUID(random()))))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "testRestoreShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Store sourceStore = source.store()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final PlainActionFuture<Boolean> future = PlainActionFuture.newFuture()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertDocs(target,\"1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(future.actionGet())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "source.refresh(\"test\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(IndexShardTestCase.getEngine(target),instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "closeShards(target)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Store targetStore = target.store()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "IndexShard target = newStartedShard(true,targetSettings,new FollowingEngineFactory())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EngineTestCase.generateNewSeqNo(source.getEngine())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "target.refresh(\"test\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "IndexShard target = newStartedShard(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "target = reinitShard(target,routing)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "target.markAsRecovering(\"store\",new RecoveryState(routing,localNode,null))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testRestoreShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "EngineTestCase.generateNewSeqNo(IndexShardTestCase.getEngine(source))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(future.actionGet())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final IndexShard source = newStartedShard(true,Settings.EMPTY)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final IndexShard source = newStartedShard(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"foo\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "flushShard(source)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(0L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "closeShard(source,false)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,\"test\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState,ActionListener<Void> listener){ActionListener.completeWith(listener,null)}},future)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26->16 [style = solid, label="source"];
21->7 [style = solid, label="snapshot"];
26->38 [style = dashed, label="0"];
1->18 [style = solid, label="target"];
27->9 [style = bold, label=""];
10->4 [style = solid, label="target"];
44->15 [style = bold, label=""];
1->20 [style = bold, label=""];
38->44 [style = solid, label="source"];
14->19 [style = solid, label="routing"];
38->24 [style = solid, label="source"];
7->10 [style = solid, label="routing"];
38->39 [style = bold, label=""];
38->17 [style = solid, label="source"];
28->0 [style = bold, label=""];
29->2 [style = bold, label=""];
39->42 [style = solid, label="targetSettings"];
22->7 [style = solid, label="routing"];
25->19 [style = bold, label=""];
33->2 [style = solid, label="routing"];
38->21 [style = solid, label="source"];
29->2 [style = solid, label="localNode"];
2->25 [style = bold, label=""];
3->30 [style = bold, label=""];
42->5 [style = solid, label="target"];
45->41 [style = bold, label=""];
5->29 [style = bold, label=""];
38->15 [style = solid, label="source"];
5->46 [style = solid, label="target"];
10->14 [style = bold, label=""];
7->2 [style = solid, label="routing"];
26->1 [style = bold, label=""];
24->44 [style = bold, label=""];
43->34 [style = solid, label="future"];
19->6 [style = bold, label=""];
32->26 [style = bold, label=""];
34->0 [style = bold, label=""];
33->10 [style = solid, label="routing"];
20->8 [style = bold, label=""];
26->30 [style = solid, label="source"];
31->27 [style = bold, label=""];
31->15 [style = dotted, label="true"];
21->7 [style = bold, label=""];
26->20 [style = solid, label="source"];
5->41 [style = solid, label="target"];
39->42 [style = bold, label=""];
43->34 [style = bold, label=""];
4->23 [style = bold, label=""];
21->33 [style = solid, label="snapshot"];
40->21 [style = bold, label=""];
8->24 [style = bold, label=""];
10->17 [style = solid, label="target"];
17->46 [style = bold, label=""];
1->10 [style = solid, label="target"];
42->37 [style = bold, label=""];
30->17 [style = bold, label=""];
37->24 [style = bold, label=""];
0->12 [style = bold, label=""];
25->19 [style = solid, label="future"];
9->18 [style = bold, label=""];
24->31 [style = bold, label=""];
11->3 [style = bold, label=""];
13->26 [style = bold, label=""];
40->27 [style = bold, label=""];
10->14 [style = solid, label="snapshot"];
15->40 [style = bold, label=""];
42->37 [style = solid, label="target"];
8->44 [style = dashed, label="0"];
23->11 [style = bold, label=""];
40->27 [style = dotted, label="true"];
27->21 [style = bold, label=""];
19->43 [style = bold, label=""];
14->5 [style = bold, label=""];
18->16 [style = bold, label=""];
7->10 [style = bold, label=""];
21->33 [style = bold, label=""];
11->45 [style = bold, label=""];
22->21 [style = bold, label=""];
33->10 [style = bold, label=""];
28->35 [style = dashed, label="0"];
16->22 [style = bold, label=""];
31->15 [style = bold, label=""];
35->4 [style = bold, label=""];
41->17 [style = bold, label=""];
12->4 [style = bold, label=""];
7->14 [style = solid, label="routing"];
14->5 [style = solid, label="routing"];
10->3 [style = solid, label="target"];
0->35 [style = bold, label=""];
1->27 [style = solid, label="target"];
22->33 [style = solid, label="routing"];
36->38 [style = bold, label=""];
7->33 [style = dashed, label="0"];
15->27 [style = bold, label=""];
25->19 [style = solid, label="localNode"];
26->24 [style = solid, label="source"];
6->28 [style = bold, label=""];
5->11 [style = solid, label="target"];
}
