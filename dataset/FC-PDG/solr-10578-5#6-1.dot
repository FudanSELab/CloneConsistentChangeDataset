digraph {
1 [style = filled, label = "assertTrue(rs.next())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Properties p = ((ConnectionImpl)con).getProperties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(26,rs.getDouble(\"EXPR$1\"),0)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(26,rs.getDouble(\"sum(a_f)\"),0)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(26,rs.getDouble(2),0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(18,rs.getDouble(2),0)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testFacetAggregation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assert(p.getProperty(\"aggregationMode\").equals(\"map_reduce\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"hello4\",rs.getString(1))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"hello3\",rs.getString(1))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(rs.next())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(rs.next())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(11,rs.getDouble(\"EXPR$1\"),0)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testFacetAggregation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertFalse(rs.next())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assert(p.getProperty(\"numWorkers\").equals(\"2\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(rs.next())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testConnectionParams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(11,rs.getDouble(\"sum(a_f)\"),0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(11,rs.getDouble(2),0)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"hello4\",rs.getString(\"a_s\"))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"hello0\",rs.getString(1))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"hello3\",rs.getString(\"a_s\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"hello0\",rs.getString(\"a_s\"))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "props.put(\"aggregationMode\",\"facet\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(18,rs.getDouble(\"sum(a_f)\"),0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(18,rs.getDouble(\"EXPR$1\"),0)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10->22 [style = bold, label=""];
17->10 [style = bold, label=""];
14->3 [style = bold, label=""];
23->25 [style = bold, label=""];
22->2 [style = bold, label=""];
4->6 [style = bold, label=""];
0->19 [style = bold, label=""];
0->12 [style = bold, label=""];
7->20 [style = dashed, label="0"];
12->9 [style = bold, label=""];
25->17 [style = bold, label=""];
9->16 [style = bold, label=""];
1->17 [style = bold, label=""];
6->1 [style = bold, label=""];
11->0 [style = bold, label=""];
3->20 [style = bold, label=""];
18->4 [style = bold, label=""];
12->19 [style = dashed, label="0"];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
19->9 [style = bold, label=""];
26->23 [style = bold, label=""];
16->14 [style = bold, label=""];
7->15 [style = bold, label=""];
5->11 [style = bold, label=""];
21->4 [style = bold, label=""];
20->15 [style = bold, label=""];
13->22 [style = dashed, label="0"];
15->8 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
27->26 [style = bold, label=""];
8->24 [style = bold, label=""];
}
