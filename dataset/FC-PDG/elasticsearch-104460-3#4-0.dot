digraph {
30 [style = filled, label = "testActualCompoundProcessorWithOnFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(resultList.get(0).getProcessorTag(),equalTo(expectedFailResult.getProcessorTag()))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(resultList.size(),equalTo(4))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SimulateProcessorResult expectedFailResult = new SimulateProcessorResult(failProcessor.getTag(),ingestDocument)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(metadata.get(ON_FAILURE_MESSAGE_FIELD),equalTo(\"fail\"))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(metadata.get(ON_FAILURE_PROCESSOR_TAG_FIELD),equalTo(\"fail\"))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ConditionalProcessor conditionalProcessor = new ConditionalProcessor(randomAlphaOfLength(10),new Script(ScriptType.INLINE,Script.DEFAULT_SCRIPT_LANG,scriptName,Collections.emptyMap()),scriptService,failProcessor)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(metadata.get(ON_FAILURE_PROCESSOR_TYPE_FIELD),equalTo(\"test\"))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),equalTo(expectedSuccessResult.getProcessorTag()))@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(metadata.get(ON_FAILURE_PROCESSOR_TYPE_FIELD),equalTo(\"test\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(resultList.get(1).getFailure(),nullValue())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Map<String,Object> metadata = resultList.get(1).getIngestDocument().getIngestMetadata()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(failProcessor.getInvokedCounter(),equalTo(1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RuntimeException exception = new RuntimeException(\"fail\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(resultList.get(0).getFailure(),equalTo(exception))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(resultList.get(0).getFailure(),equalTo(exception))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TestProcessor onFailureProcessor = new TestProcessor(\"success\",\"test\",null,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "ScriptService scriptService = new ScriptService(Settings.builder().build(),Collections.singletonMap(Script.DEFAULT_SCRIPT_LANG,new MockScriptEngine(Script.DEFAULT_SCRIPT_LANG,Collections.singletonMap(scriptName,null),Collections.emptyMap())),new HashMap<>(ScriptModule.CORE_CONTEXTS))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "SimulateProcessorResult expectedFailResult = new SimulateProcessorResult(failProcessor.getTag(),ingestDocument)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(metadata.get(ON_FAILURE_MESSAGE_FIELD),equalTo(\"fail\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "TestProcessor failProcessor = new TestProcessor(\"fail\",\"test\",exception)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestProcessor onFailureProcessor = new TestProcessor(\"success\",\"test\",null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "TestProcessor failProcessor = new TestProcessor(\"fail\",\"test\",exception)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(resultList.get(2).getProcessorTag(),equalTo(expectedFailResult.getProcessorTag()))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(metadata.get(ON_FAILURE_PROCESSOR_TAG_FIELD),equalTo(\"fail\"))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testActualCompoundProcessorWithOnFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(resultList.get(0).getIngestDocument(),nullValue())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertThat(onFailureProcessor.getInvokedCounter(),equalTo(1))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "metadata = resultList.get(3).getIngestDocument().getIngestMetadata()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SimulateProcessorResult expectedSuccessResult = new SimulateProcessorResult(onFailureProcessor.getTag(),ingestDocument)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(false,Arrays.asList(new CompoundProcessor(false,Arrays.asList(failProcessor,onFailureProcessor),Arrays.asList(onFailureProcessor,failProcessor))),Arrays.asList(onFailureProcessor))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(resultList.get(1).getProcessorTag(),equalTo(expectedSuccessResult.getProcessorTag()))@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(false,Arrays.asList(conditionalProcessor),Arrays.asList(onFailureProcessor))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "RuntimeException exception = new RuntimeException(\"fail\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TestProcessor failProcessor = new TestProcessor(\"fail\",\"test\",null,exception)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "String scriptName = \"conditionalScript\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertThat(resultList.size(),equalTo(2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(resultList.get(0).getIngestDocument(),nullValue())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SimulateProcessorResult expectedSuccessResult = new SimulateProcessorResult(onFailureProcessor.getTag(),ingestDocument)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testActualCompoundProcessorWithOnFailureAndTrueCondition['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28->29 [style = bold, label=""];
14->3 [style = bold, label=""];
43->21 [style = bold, label=""];
3->28 [style = solid, label="exception"];
17->26 [style = bold, label=""];
28->11 [style = solid, label="failProcessor"];
22->15 [style = bold, label=""];
20->17 [style = bold, label=""];
36->41 [style = solid, label="actualProcessor"];
35->29 [style = bold, label=""];
42->2 [style = bold, label=""];
36->41 [style = bold, label=""];
13->43 [style = dashed, label="0"];
29->32 [style = dashed, label="0"];
3->31 [style = bold, label=""];
24->0 [style = bold, label=""];
3->31 [style = solid, label="exception"];
31->32 [style = bold, label=""];
19->20 [style = bold, label=""];
3->25 [style = solid, label="exception"];
11->4 [style = bold, label=""];
44->40 [style = bold, label=""];
8->34 [style = dashed, label="0"];
2->8 [style = bold, label=""];
15->6 [style = bold, label=""];
21->24 [style = bold, label=""];
40->36 [style = solid, label="conditionalProcessor"];
10->21 [style = bold, label=""];
11->36 [style = dashed, label="0"];
2->38 [style = dashed, label="0"];
3->10 [style = solid, label="exception"];
8->38 [style = bold, label=""];
1->9 [style = bold, label=""];
3->28 [style = bold, label=""];
40->33 [style = bold, label=""];
29->44 [style = solid, label="exception"];
18->10 [style = bold, label=""];
30->3 [style = bold, label=""];
37->39 [style = bold, label=""];
28->31 [style = dashed, label="0"];
31->11 [style = solid, label="failProcessor"];
7->2 [style = bold, label=""];
6->16 [style = bold, label=""];
12->25 [style = bold, label=""];
0->22 [style = bold, label=""];
26->23 [style = bold, label=""];
27->7 [style = bold, label=""];
39->35 [style = bold, label=""];
33->36 [style = bold, label=""];
25->19 [style = bold, label=""];
38->34 [style = bold, label=""];
23->1 [style = bold, label=""];
29->44 [style = bold, label=""];
11->4 [style = solid, label="actualProcessor"];
33->36 [style = solid, label="onFailureProcessor"];
32->11 [style = solid, label="onFailureProcessor"];
39->35 [style = solid, label="scriptName"];
5->27 [style = bold, label=""];
13->18 [style = bold, label=""];
34->43 [style = bold, label=""];
35->40 [style = solid, label="scriptService"];
32->11 [style = bold, label=""];
39->40 [style = solid, label="scriptName"];
29->11 [style = solid, label="onFailureProcessor"];
4->5 [style = bold, label=""];
29->11 [style = bold, label=""];
16->12 [style = bold, label=""];
44->40 [style = solid, label="failProcessor"];
8->13 [style = bold, label=""];
29->24 [style = solid, label="exception"];
41->42 [style = bold, label=""];
}
