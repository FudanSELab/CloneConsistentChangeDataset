digraph {
14 [style = filled, label = "Mockito.when(mockTaskDriver.getJobContext(\"job1\")).thenReturn(mockJobContext)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(2,ImmutableSet.of(\"GobblinYarnTaskRunner-1\"))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "YarnAutoScalingManager.YarnAutoScalingRunnable runnable = new YarnAutoScalingManager.YarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,10)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflows()).thenReturn(ImmutableMap.of(\"workflow1\",mockWorkflowConfig))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "YarnService mockYarnService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Mockito.when(mockTaskDriver.getWorkflowContext(\"workflow1\")).thenReturn(mockWorkflowContext)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "YarnAutoScalingManager.YarnAutoScalingRunnable runnable = new YarnAutoScalingManager.YarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Mockito.when(helixDataAccessor.keyBuilder()).thenReturn(new PropertyKey.Builder(\"cluster\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(1,ImmutableSet.of(\"worker1\"))@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "WorkflowContext mockWorkflowContext = mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JobContext mockJobContext = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "YarnAutoScalingManager.YarnAutoScalingRunnable runnable = new YarnAutoScalingManager.YarnAutoScalingRunnable(mockTaskDriver,mockYarnService,1,1,10,noopQueue,helixDataAccessor)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "HelixDataAccessor helixDataAccessor = mock()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "WorkflowConfig mockWorkflowConfig = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "JobDag mockJobDag = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Mockito.when(helixDataAccessor.getChildValuesMap(Mockito.any())).thenReturn(ImmutableMap.of(\"GobblinYarnTaskRunner-1\",new HelixProperty(\"\")))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Mockito.verify(mockYarnService,times(1)).requestTargetNumberOfContainers(2,ImmutableSet.of(\"worker1\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Mockito.when(mockWorkflowConfig.getJobDag()).thenReturn(mockJobDag)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Mockito.when(mockJobContext.getAssignedParticipant(2)).thenReturn(\"worker1\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mockito.when(mockJobContext.getPartitionSet()).thenReturn(ImmutableSet.of(Integer.valueOf(1),Integer.valueOf(2)))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Mockito.when(mockJobContext.getAssignedParticipant(2)).thenReturn(\"GobblinYarnTaskRunner-1\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Mockito.when(mockWorkflowContext.getWorkflowState()).thenReturn(TaskState.IN_PROGRESS)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testMaxContainers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testOneJob['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "runnable.run()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "runnable.run()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Mockito.when(mockJobDag.getAllNodes()).thenReturn(ImmutableSet.of(\"job1\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testOneJob['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TaskDriver mockTaskDriver = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
14->24 [style = bold, label=""];
7->1 [style = bold, label=""];
10->15 [style = bold, label=""];
5->26 [style = dashed, label="0"];
11->26 [style = solid, label="mockYarnService"];
0->17 [style = bold, label=""];
8->19 [style = bold, label=""];
28->11 [style = bold, label=""];
11->5 [style = solid, label="mockYarnService"];
10->21 [style = solid, label="mockTaskDriver"];
16->7 [style = bold, label=""];
1->3 [style = bold, label=""];
25->18 [style = bold, label=""];
11->21 [style = solid, label="mockYarnService"];
24->21 [style = solid, label="helixDataAccessor"];
13->19 [style = dashed, label="0"];
26->6 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
9->14 [style = solid, label="mockJobContext"];
20->22 [style = bold, label=""];
14->26 [style = bold, label=""];
6->27 [style = bold, label=""];
21->20 [style = bold, label=""];
19->14 [style = bold, label=""];
5->6 [style = bold, label=""];
0->16 [style = solid, label="mockJobDag"];
11->10 [style = bold, label=""];
24->25 [style = bold, label=""];
15->0 [style = bold, label=""];
12->22 [style = dashed, label="0"];
12->27 [style = dashed, label="0"];
10->26 [style = solid, label="mockTaskDriver"];
1->4 [style = solid, label="mockWorkflowContext"];
18->21 [style = bold, label=""];
23->11 [style = bold, label=""];
13->14 [style = bold, label=""];
2->11 [style = bold, label=""];
10->5 [style = solid, label="mockTaskDriver"];
17->16 [style = bold, label=""];
8->13 [style = bold, label=""];
15->7 [style = solid, label="mockWorkflowConfig"];
14->5 [style = bold, label=""];
6->12 [style = bold, label=""];
}
