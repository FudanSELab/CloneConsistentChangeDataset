digraph {
11 [style = filled, label = "testCopyJobWithNoDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getName())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "project.renameTo(newProjectName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(newProjectName,project.getDisplayName())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(newProjectName,newProject.getDisplayName())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(projectName,project.getDisplayName())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(newProjectName,newProject.getDisplayName())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCopyJobWithNoDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(newProjectName,newProject.getName())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testRenameJobWithNoDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(projectName,project.getDisplayName())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->10 [style = solid, label="newProjectName"];
7->14 [style = solid, label="newProjectName"];
3->1 [style = bold, label=""];
5->6 [style = solid, label="projectName"];
5->9 [style = solid, label="projectName"];
1->14 [style = dashed, label="0"];
0->12 [style = bold, label=""];
7->1 [style = solid, label="newProjectName"];
6->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
6->3 [style = solid, label="project"];
3->10 [style = bold, label=""];
11->5 [style = bold, label=""];
10->8 [style = bold, label=""];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
4->8 [style = dashed, label="0"];
13->5 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
7->8 [style = solid, label="newProjectName"];
0->9 [style = dashed, label="0"];
5->0 [style = solid, label="projectName"];
6->9 [style = bold, label=""];
7->3 [style = solid, label="newProjectName"];
7->4 [style = solid, label="newProjectName"];
7->12 [style = solid, label="newProjectName"];
2->5 [style = bold, label=""];
}
