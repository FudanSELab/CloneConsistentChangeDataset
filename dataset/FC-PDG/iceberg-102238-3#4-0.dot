digraph {
5 [style = filled, label = "harness.setup()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int i = 10@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "SteppingMailboxProcessor localMailbox = createLocalMailbox(harness)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(\"Should have 10 splits\",15,splits.size())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "harness.open()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "harness.processElement(splits.get(i),-1)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testProcessAllRecords['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "i++@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int i = 5@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < splits.size()@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "harness.processElement(splits.get(i),1)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "expected.clear()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "List<List<Record>> expectedRecords = generateRecordsAndCommitTxn(15)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "TestFlinkScan.assertRecords(readOutputValues(harness),expected,SCHEMA)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<Record> expected = Lists.newArrayList()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "SteppingMailboxProcessor localMailbox = createLocalMailbox(harness)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertTrue(\"Should have processed the split#\" + i,localMailbox.runMailboxStep())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TestHelpers.assertRecords(readOutputValues(harness),expected,SCHEMA)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "i < 5@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "harness.setup()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testCheckpointRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "expected.addAll(expectedRecords.get(i))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "List<List<Record>> expectedRecords = generateRecordsAndCommitTxn(10)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expected.addAll(expectedRecords.get(i))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "expected.addAll(expectedRecords.get(i))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "i < 15@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "harness.initializeState(state)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "state = harness.snapshot(1,1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "TestFlinkScan.assertRecords(readOutputValues(harness),expected,SCHEMA)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "harness.setup()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "harness.processElement(split,-1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertTrue(\"Should have processed one split#\" + i,localMailbox.runMailboxStep())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "TestFlinkScan.assertRecords(readOutputValues(harness),expected,SCHEMA)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testProcessAllRecords['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i < 10@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expected.addAll(expectedRecords.get(i))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "harness.open()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "OperatorSubtaskState state@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertTrue(\"Should have processed the split#\" + i,localMailbox.runMailboxStep())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Should have 10 splits\",10,splits.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<FlinkInputSplit> splits = generateSplits()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i++@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "harness.open()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22->29 [style = bold, label=""];
20->27 [style = bold, label=""];
45->1 [style = bold, label=""];
14->3 [style = bold, label=""];
28->33 [style = dotted, label="true"];
7->14 [style = solid, label="i"];
44->38 [style = solid, label="i"];
38->41 [style = bold, label=""];
39->32 [style = bold, label=""];
19->38 [style = bold, label=""];
14->7 [style = dotted, label="true"];
41->31 [style = solid, label="i"];
3->1 [style = bold, label=""];
13->14 [style = solid, label="i"];
19->25 [style = solid, label="i"];
19->34 [style = solid, label="i"];
28->18 [style = bold, label=""];
1->28 [style = solid, label="i"];
43->35 [style = dotted, label="true"];
16->7 [style = bold, label=""];
44->25 [style = solid, label="i"];
14->28 [style = dashed, label="0"];
40->39 [style = bold, label=""];
9->28 [style = bold, label=""];
12->9 [style = solid, label="expected"];
41->27 [style = solid, label="i"];
1->2 [style = bold, label=""];
36->35 [style = bold, label=""];
38->46 [style = dotted, label="true"];
5->6 [style = bold, label=""];
44->34 [style = solid, label="i"];
38->25 [style = bold, label=""];
26->24 [style = bold, label=""];
35->27 [style = solid, label="i"];
1->18 [style = solid, label="i"];
13->3 [style = solid, label="i"];
1->9 [style = solid, label="i"];
25->34 [style = bold, label=""];
43->20 [style = dotted, label="true"];
41->43 [style = solid, label="i"];
7->3 [style = solid, label="i"];
9->16 [style = dashed, label="0"];
0->11 [style = bold, label=""];
13->2 [style = solid, label="i"];
9->33 [style = solid, label="i"];
23->26 [style = bold, label=""];
12->13 [style = bold, label=""];
7->14 [style = bold, label=""];
46->19 [style = bold, label=""];
43->27 [style = dotted, label="true"];
44->19 [style = solid, label="i"];
14->2 [style = dotted, label="true"];
29->10 [style = bold, label=""];
2->16 [style = bold, label=""];
28->42 [style = dotted, label="true"];
35->31 [style = solid, label="i"];
24->40 [style = bold, label=""];
23->40 [style = solid, label="state"];
38->34 [style = dotted, label="true"];
14->3 [style = dotted, label="true"];
14->1 [style = dotted, label="true"];
35->43 [style = bold, label=""];
1->28 [style = bold, label=""];
29->46 [style = solid, label="expected"];
15->4 [style = bold, label=""];
21->30 [style = bold, label=""];
1->33 [style = solid, label="i"];
28->23 [style = bold, label=""];
18->33 [style = bold, label=""];
2->9 [style = bold, label=""];
12->17 [style = bold, label=""];
29->42 [style = solid, label="expected"];
11->37 [style = dashed, label="0"];
43->31 [style = dotted, label="true"];
38->19 [style = dotted, label="true"];
31->20 [style = bold, label=""];
30->0 [style = bold, label=""];
37->22 [style = bold, label=""];
13->7 [style = solid, label="i"];
43->36 [style = dotted, label="true"];
41->35 [style = solid, label="i"];
11->5 [style = bold, label=""];
14->9 [style = dotted, label="true"];
38->25 [style = dotted, label="true"];
0->37 [style = bold, label=""];
19->38 [style = solid, label="i"];
43->31 [style = bold, label=""];
29->36 [style = solid, label="expected"];
17->45 [style = bold, label=""];
8->4 [style = bold, label=""];
7->2 [style = solid, label="i"];
35->20 [style = solid, label="i"];
41->43 [style = bold, label=""];
35->43 [style = solid, label="i"];
14->16 [style = dotted, label="true"];
9->18 [style = solid, label="i"];
4->30 [style = dashed, label="0"];
10->12 [style = bold, label=""];
6->10 [style = bold, label=""];
44->38 [style = bold, label=""];
27->36 [style = bold, label=""];
34->46 [style = bold, label=""];
42->9 [style = bold, label=""];
32->44 [style = bold, label=""];
9->28 [style = solid, label="i"];
41->20 [style = solid, label="i"];
12->16 [style = solid, label="expected"];
13->14 [style = bold, label=""];
28->18 [style = dotted, label="true"];
28->9 [style = dotted, label="true"];
4->0 [style = bold, label=""];
33->42 [style = bold, label=""];
9->7 [style = bold, label=""];
}
