digraph {
4 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node2.getId()))))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(expectThrows(,null).getMessage(),containsString(\"join target is a follower\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "SimpleFuture futNode0 = joinNodeAsync(new JoinRequest(node0,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "testJoinAccumulation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "handleFollowerCheckFrom(node1,newTerm)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DiscoveryNode node0 = newNode(0,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "joinNodeAndRun(new JoinRequest(node2,Optional.of(new Join(node2,node0,newTerm,initialTerm,initialVersion))))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "FutureUtils.get(futNode0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DiscoveryNode node1 = newNode(1,true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SimpleFuture futNode1 = joinNodeAsync(new JoinRequest(node1,newTerm,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "DiscoveryNode node2 = newNode(2,true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "FutureUtils.get(futNode1)@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(isLocalNodeElectedMaster())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SimpleFuture futNode0 = joinNodeAsync(new JoinRequest(node0,newTerm,Optional.of(new Join(node0,node0,newTerm,initialTerm,initialVersion))))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "handleStartJoinFrom(node1,newTerm)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(clusterStateHasNode(node1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(futNode0.isDone())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testJoinAccumulation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "long initialTerm = randomLongBetween(1,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "long newTerm = initialTerm + randomLongBetween(1,10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "long initialVersion = randomLongBetween(1,10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(futNode1.isDone())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "setupFakeMasterServiceAndCoordinator(initialTerm,initialState(node0,initialTerm,initialVersion,new VotingConfiguration(Collections.singleton(node0.getId()))))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testJoinFollowerFails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(clusterStateHasNode(node2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SimpleFuture futNode1 = joinNodeAsync(new JoinRequest(node1,Optional.of(new Join(node1,node0,newTerm,initialTerm,initialVersion))))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "joinNodeAndRun(new JoinRequest(node2,newTerm,Optional.of(new Join(node2,node0,newTerm,initialTerm,initialVersion))))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
16->28 [style = solid, label="node1"];
12->20 [style = solid, label="futNode1"];
1->4 [style = solid, label="initialVersion"];
30->29 [style = bold, label=""];
21->12 [style = solid, label="initialTerm"];
12->26 [style = dashed, label="0"];
7->9 [style = bold, label=""];
10->26 [style = solid, label="node0"];
21->26 [style = solid, label="initialTerm"];
3->5 [style = bold, label=""];
2->25 [style = solid, label="newTerm"];
21->1 [style = bold, label=""];
10->4 [style = solid, label="node0"];
13->22 [style = bold, label=""];
2->24 [style = bold, label=""];
1->31 [style = bold, label=""];
2->22 [style = solid, label="newTerm"];
2->28 [style = bold, label=""];
27->2 [style = bold, label=""];
27->28 [style = solid, label="newTerm"];
1->22 [style = solid, label="initialVersion"];
13->25 [style = bold, label=""];
1->4 [style = bold, label=""];
22->25 [style = dashed, label="0"];
28->30 [style = bold, label=""];
0->17 [style = bold, label=""];
24->0 [style = bold, label=""];
1->31 [style = solid, label="initialVersion"];
25->3 [style = bold, label=""];
26->14 [style = bold, label=""];
21->31 [style = solid, label="initialTerm"];
4->18 [style = bold, label=""];
16->19 [style = bold, label=""];
32->10 [style = bold, label=""];
1->24 [style = solid, label="initialVersion"];
21->4 [style = solid, label="initialTerm"];
31->27 [style = bold, label=""];
10->12 [style = solid, label="node0"];
12->14 [style = bold, label=""];
17->15 [style = bold, label=""];
23->10 [style = bold, label=""];
10->31 [style = solid, label="node0"];
5->7 [style = bold, label=""];
15->12 [style = bold, label=""];
14->6 [style = bold, label=""];
1->11 [style = solid, label="initialVersion"];
10->22 [style = solid, label="node0"];
24->9 [style = solid, label="futNode0"];
16->26 [style = solid, label="node1"];
9->20 [style = bold, label=""];
1->12 [style = solid, label="initialVersion"];
19->7 [style = solid, label="node2"];
10->25 [style = solid, label="node0"];
26->20 [style = solid, label="futNode1"];
10->16 [style = bold, label=""];
2->24 [style = solid, label="newTerm"];
6->13 [style = bold, label=""];
10->11 [style = solid, label="node0"];
21->27 [style = solid, label="initialTerm"];
19->22 [style = solid, label="node2"];
1->25 [style = solid, label="initialVersion"];
27->2 [style = solid, label="newTerm"];
21->2 [style = solid, label="initialTerm"];
2->11 [style = bold, label=""];
21->22 [style = solid, label="initialTerm"];
10->24 [style = solid, label="node0"];
16->12 [style = solid, label="node1"];
19->21 [style = bold, label=""];
2->12 [style = solid, label="newTerm"];
16->2 [style = solid, label="node1"];
4->31 [style = dashed, label="0"];
11->9 [style = solid, label="futNode0"];
16->5 [style = solid, label="node1"];
18->2 [style = bold, label=""];
21->24 [style = solid, label="initialTerm"];
2->11 [style = solid, label="newTerm"];
15->26 [style = bold, label=""];
22->3 [style = bold, label=""];
21->25 [style = solid, label="initialTerm"];
11->0 [style = bold, label=""];
16->21 [style = bold, label=""];
19->25 [style = solid, label="node2"];
11->24 [style = dashed, label="0"];
1->26 [style = solid, label="initialVersion"];
21->11 [style = solid, label="initialTerm"];
17->30 [style = dashed, label="0"];
2->26 [style = solid, label="newTerm"];
}
