digraph {
17 [style = filled, label = "assertEquals(\"x y \",ltrim(\"x y \"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"x \",ltrim(\" x \"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"\",rtrim(\"\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testRtrim['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(\"x \",ltrim(\" x \"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(\" x y\",rtrim(\" x y \"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"\",rtrim(\" \"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"x\",ltrim(\"x\"))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\" x\",rtrim(\" x\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "testRtrim['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(\" x\",rtrim(\" x \"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"x\",ltrim(\" x\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(rtrim(\" x \"),is(\" x\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(\" x\",rtrim(\" x \"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(rtrim(\" x y \"),is(\" x y\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertEquals(\"\",ltrim(\" \"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(rtrim(\" \"),is(\"\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(rtrim(\"\"),is(\"\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "testLtrim['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(\"x\",rtrim(\"x\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(\"\",ltrim(\"\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(rtrim(\" x \"),is(\" x\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(rtrim(\"x\"),is(\"x\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertThat(rtrim(\" x\"),is(\" x\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15->10 [style = bold, label=""];
9->11 [style = bold, label=""];
7->18 [style = dashed, label="0"];
1->14 [style = dashed, label="0"];
6->20 [style = dashed, label="0"];
22->16 [style = bold, label=""];
2->1 [style = bold, label=""];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
7->11 [style = dashed, label="0"];
18->17 [style = bold, label=""];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
0->12 [style = dashed, label="0"];
0->17 [style = dashed, label="0"];
17->23 [style = bold, label=""];
20->18 [style = bold, label=""];
1->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
0->4 [style = bold, label=""];
21->22 [style = bold, label=""];
2->13 [style = dashed, label="0"];
4->15 [style = dashed, label="0"];
1->16 [style = dashed, label="0"];
23->19 [style = bold, label=""];
14->9 [style = bold, label=""];
6->7 [style = bold, label=""];
16->20 [style = bold, label=""];
2->22 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
5->19 [style = dashed, label="0"];
8->13 [style = bold, label=""];
}
