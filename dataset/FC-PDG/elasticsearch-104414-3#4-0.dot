digraph {
8 [style = filled, label = "localService.acceptIncomingRequests()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(strategy.assertNoRunningConnections())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "addresses.add(\"localhost:\" + address1.getPort())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "PlainActionFuture<Void> connectFuture = PlainActionFuture.newFuture()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(strategy.assertNoRunningConnections())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testConnectFailsWithIncompatibleNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "PlainActionFuture<Void> connectFuture = PlainActionFuture.newFuture()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Version incompatibleVersion = Version.CURRENT.minimumCompatibilityVersion().minimumCompatibilityVersion()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TransportAddress address1 = transport1.boundAddress().publishAddress()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "connectFuture.actionGet()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ArrayList<String> addresses = new ArrayList<>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(connectionManager.getAllConnectedNodes().stream().anyMatch(null))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(\"localhost\",discoveryNode.getAttributes().get(\"server_name\"))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testConnectFailsWithIncompatibleNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(connectionManager.getAllConnectedNodes().stream().anyMatch(null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testServerNameAttributes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ConnectionManager connectionManager = new ConnectionManager(profile,localService.transport)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Settings bindSettings = Settings.builder().put(TransportSettings.BIND_HOST.getKey(),\"localhost\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int numOfConnections = randomIntBetween(4,8)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,connectionManager.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "localService.start()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(connectionManager.getAllConnectedNodes().stream().anyMatch(null))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DiscoveryNode discoveryNode = connectionManager.getAllConnectedNodes().stream().findFirst().get()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "strategy.connect(connectFuture)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->12 [style = bold, label=""];
8->5 [style = bold, label=""];
19->5 [style = bold, label=""];
2->11 [style = bold, label=""];
7->9 [style = bold, label=""];
10->3 [style = solid, label="connectFuture"];
12->4 [style = bold, label=""];
14->12 [style = bold, label=""];
4->8 [style = bold, label=""];
16->22 [style = bold, label=""];
1->6 [style = bold, label=""];
3->1 [style = bold, label=""];
10->3 [style = bold, label=""];
20->19 [style = bold, label=""];
3->1 [style = solid, label="connectFuture"];
0->10 [style = bold, label=""];
5->0 [style = bold, label=""];
13->11 [style = bold, label=""];
0->15 [style = bold, label=""];
1->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
22->18 [style = bold, label=""];
15->3 [style = bold, label=""];
23->14 [style = bold, label=""];
18->21 [style = bold, label=""];
6->7 [style = bold, label=""];
1->17 [style = dashed, label="0"];
17->16 [style = bold, label=""];
8->20 [style = bold, label=""];
}
