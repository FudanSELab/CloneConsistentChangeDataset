digraph {
4 [style = filled, label = "secondsToGenerateRemaining = secondsToGenerateRemaining - secondsToGenerateFirstRound@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Runnable waitForReadyRunnable@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int newShardCount@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateSecondRound,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "LOG.info(\"Restarting Druid process\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "@Nullable Boolean transactionEnabled@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Runnable restartRunnable@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "LOG.info(\"Druid process is now available\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "@Nullable Boolean transactionEnabled@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "long numWritten = streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateFirstRound,FIRST_EVENT_TIME)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "verifyIngestedData(generatedTestConfig)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "waitForReadyRunnable.run()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Runnable restartRunnable@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "generatedTestConfig.setSupervisorId(indexer.submitSupervisor(taskSpec))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String taskSpec = generatedTestConfig.getStreamIngestionPropsTransform().apply(getResourceAsString(SUPERVISOR_SPEC_TEMPLATE_PATH))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "verifyIngestedData(generatedTestConfig,numWritten)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int secondsToGenerateRemaining = TOTAL_NUMBER_OF_SECOND@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "LOG.info(\"Restarted Druid process\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateFirstRound,FIRST_EVENT_TIME)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateRemaining,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound + secondsToGenerateSecondRound))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "@Nullable Boolean transactionEnabled@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "numWritten += streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateSecondRound,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "LOG.info(\"Submitted supervisor\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "LOG.info(\"supervisorSpec: (%s(\",taskSpec)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "LOG.info(\"Waiting for Druid process to be available\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "restartRunnable.run()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for stream to finish resharding\")@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final StreamGenerator streamGenerator = new WikipediaStreamEventStreamGenerator(new JsonEventSerializer(jsonMapper),EVENTS_PER_SECOND,CYCLE_PADDING_MS)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "verifyIngestedData(generatedTestConfig)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testIndexWithStreamReshardHelper['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testIndexWithLosingNodeHelper['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateRemaining,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound + secondsToGenerateSecondRound))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for supervisor to be healthy\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testIndexWithLosingNodeHelper['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "streamAdminClient.updatePartitionCount(generatedTestConfig.getStreamName(),newShardCount,true)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final GeneratedTestConfig generatedTestConfig = new GeneratedTestConfig(INPUT_FORMAT,getResourceAsString(JSON_INPUT_FORMAT_PATH))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int secondsToGenerateSecondRound = TOTAL_NUMBER_OF_SECOND / 3@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "ITRetryUtil.retryUntil(null,true,10000,30,\"Waiting for stream to finish resharding\")@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "secondsToGenerateRemaining = secondsToGenerateRemaining - secondsToGenerateSecondRound@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int secondsToGenerateFirstRound = TOTAL_NUMBER_OF_SECOND / 3@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "numWritten += streamGenerator.run(generatedTestConfig.getStreamName(),streamEventWriter,secondsToGenerateRemaining,FIRST_EVENT_TIME.plusSeconds(secondsToGenerateFirstRound + secondsToGenerateSecondRound))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->17 [style = solid, label="generatedTestConfig"];
41->35 [style = solid, label="secondsToGenerateSecondRound"];
3->30 [style = solid, label="secondsToGenerateFirstRound"];
6->18 [style = solid, label="taskSpec"];
33->16 [style = bold, label=""];
3->35 [style = solid, label="secondsToGenerateFirstRound"];
7->17 [style = bold, label=""];
26->32 [style = bold, label=""];
32->23 [style = bold, label=""];
3->29 [style = solid, label="secondsToGenerateFirstRound"];
3->1 [style = solid, label="secondsToGenerateFirstRound"];
25->22 [style = bold, label=""];
4->22 [style = solid, label="secondsToGenerateRemaining"];
25->29 [style = solid, label="secondsToGenerateSecondRound"];
39->40 [style = solid, label="newShardCount"];
4->42 [style = solid, label="secondsToGenerateRemaining"];
42->25 [style = bold, label=""];
6->18 [style = bold, label=""];
3->9 [style = solid, label="secondsToGenerateFirstRound"];
16->6 [style = bold, label=""];
25->1 [style = solid, label="secondsToGenerateSecondRound"];
11->21 [style = bold, label=""];
22->9 [style = bold, label=""];
18->11 [style = bold, label=""];
8->3 [style = bold, label=""];
41->25 [style = solid, label="secondsToGenerateSecondRound"];
21->8 [style = bold, label=""];
22->29 [style = bold, label=""];
4->26 [style = bold, label=""];
33->28 [style = dotted, label="true"];
3->0 [style = solid, label="secondsToGenerateFirstRound"];
0->32 [style = dashed, label="0"];
12->30 [style = bold, label=""];
8->4 [style = solid, label="secondsToGenerateRemaining"];
22->30 [style = solid, label="secondsToGenerateRemaining"];
7->31 [style = bold, label=""];
17->31 [style = dashed, label="0"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
9->35 [style = bold, label=""];
3->4 [style = solid, label="secondsToGenerateFirstRound"];
34->39 [style = dotted, label="true"];
33->20 [style = dotted, label="true"];
1->30 [style = dashed, label="0"];
5->16 [style = bold, label=""];
34->36 [style = dotted, label="true"];
3->25 [style = solid, label="secondsToGenerateFirstRound"];
25->30 [style = solid, label="secondsToGenerateSecondRound"];
26->0 [style = bold, label=""];
22->1 [style = solid, label="secondsToGenerateRemaining"];
6->11 [style = solid, label="taskSpec"];
0->23 [style = bold, label=""];
5->10 [style = dotted, label="true"];
9->29 [style = dashed, label="0"];
35->37 [style = bold, label=""];
23->40 [style = bold, label=""];
24->25 [style = bold, label=""];
30->7 [style = bold, label=""];
15->24 [style = bold, label=""];
14->12 [style = bold, label=""];
23->19 [style = bold, label=""];
37->38 [style = bold, label=""];
40->41 [style = bold, label=""];
34->16 [style = bold, label=""];
41->42 [style = solid, label="secondsToGenerateSecondRound"];
16->31 [style = solid, label="generatedTestConfig"];
25->22 [style = solid, label="secondsToGenerateSecondRound"];
30->31 [style = solid, label="numWritten"];
5->20 [style = dotted, label="true"];
20->39 [style = dashed, label="0"];
19->15 [style = bold, label=""];
3->32 [style = solid, label="secondsToGenerateFirstRound"];
42->35 [style = solid, label="secondsToGenerateRemaining"];
33->27 [style = dotted, label="true"];
13->22 [style = dashed, label="0"];
13->14 [style = bold, label=""];
16->38 [style = solid, label="generatedTestConfig"];
25->9 [style = solid, label="secondsToGenerateSecondRound"];
5->2 [style = dotted, label="true"];
9->13 [style = bold, label=""];
41->42 [style = bold, label=""];
29->13 [style = bold, label=""];
}
