digraph {
21 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssignment))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE.code()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topicName))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String otherTopicName = \"otherTopic\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){final Map<String,Integer> updatedPartitions = new HashMap<>()for (String topic : updatedSubscription)updatedPartitions.put(topic,1)metadata.update(TestUtils.clusterWith(1,updatedPartitions),time.milliseconds())return true}},syncGroupResponse(singletonList(t1p),Errors.NONE.code()))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(newAssignmentSet,subscriptions.assignedPartitions())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testRejoinGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topicName,otherTopic)),rebalanceListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "coordinator.ensureCoordinatorReady()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topic1,topic2)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "List<TopicPartition> newAssignment = Arrays.asList(t1p,t2p)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topicName,otherTopicName)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE.code()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topicName,otherTopicName))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.revoked)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testMetadataRefreshDuringRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "coordinator.joinGroupIfNeeded()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Set<TopicPartition> newAssignmentSet = new HashSet<>(newAssignment)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "metadata.update(cluster,time.milliseconds())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "coordinator.poll(time.milliseconds())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "metadata.needMetadataForAllTopics(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "metadata.update(TestUtils.singletonCluster(topic1,1),time.milliseconds())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertFalse(coordinator.needRejoin())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<TopicPartition> newAssignment = Arrays.asList(tp,otherPartition)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(1,\"consumer\",\"leader\",Errors.NONE.code()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "client.prepareResponse(syncGroupResponse(singletonList(tp),Errors.NONE.code()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(updatedSubscriptionSet,subscriptions.subscription())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client.prepareResponse(syncGroupResponse(newAssignment,Errors.NONE.code()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "TopicPartition otherPartition = new TopicPartition(otherTopicName,0)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest join = (JoinGroupRequest)bodyProtocolMetadata protocolMetadata = join.groupProtocols().iterator().next()PartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(protocolMetadata.metadata())protocolMetadata.metadata().rewind()return subscription.topics().containsAll(updatedSubscriptionSet)}},joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE.code()))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Set<String> updatedSubscriptionSet = new HashSet<>(updatedSubscription)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(singleton(topicName),subscriptions.subscription())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topic1))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "subscriptions.subscribe(singleton(topicName),rebalanceListener)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,singletonList(t1p)))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(singleton(t1p),rebalanceListener.revoked)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,singletonList(tp)))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(newAssignmentSet,rebalanceListener.assigned)@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE.code()))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(singleton(tp),rebalanceListener.assigned)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(rebalanceListener.revoked.isEmpty())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
3->33 [style = solid, label="consumerId"];
26->10 [style = bold, label=""];
55->47 [style = solid, label="otherTopic"];
10->34 [style = dashed, label="0"];
17->21 [style = solid, label="newAssignment"];
2->32 [style = dashed, label="0"];
20->0 [style = bold, label=""];
4->15 [style = bold, label=""];
17->35 [style = dashed, label="0"];
49->51 [style = bold, label=""];
31->21 [style = bold, label=""];
21->18 [style = bold, label=""];
56->47 [style = bold, label=""];
14->18 [style = solid, label="updatedSubscriptionSet"];
23->29 [style = bold, label=""];
30->19 [style = solid, label="updatedSubscription"];
35->23 [style = bold, label=""];
3->5 [style = bold, label=""];
3->21 [style = solid, label="consumerId"];
3->32 [style = solid, label="consumerId"];
46->54 [style = bold, label=""];
24->11 [style = bold, label=""];
50->55 [style = bold, label=""];
30->14 [style = bold, label=""];
16->14 [style = bold, label=""];
11->25 [style = bold, label=""];
30->14 [style = solid, label="updatedSubscription"];
45->41 [style = bold, label=""];
47->48 [style = bold, label=""];
9->2 [style = bold, label=""];
9->32 [style = bold, label=""];
31->18 [style = solid, label="updatedSubscriptions"];
35->24 [style = solid, label="newAssignment"];
3->22 [style = solid, label="consumerId"];
4->17 [style = solid, label="otherPartition"];
3->55 [style = dashed, label="0"];
14->27 [style = solid, label="updatedSubscriptionSet"];
25->27 [style = bold, label=""];
35->23 [style = solid, label="newAssignment"];
42->56 [style = bold, label=""];
35->21 [style = solid, label="newAssignment"];
33->30 [style = bold, label=""];
23->13 [style = solid, label="newAssignmentSet"];
15->12 [style = bold, label=""];
14->8 [style = bold, label=""];
10->1 [style = bold, label=""];
41->43 [style = bold, label=""];
27->20 [style = bold, label=""];
22->54 [style = dashed, label="0"];
3->8 [style = solid, label="consumerId"];
2->8 [style = solid, label="initialSubscription"];
23->31 [style = bold, label=""];
54->40 [style = bold, label=""];
18->24 [style = bold, label=""];
13->43 [style = dashed, label="0"];
39->46 [style = bold, label=""];
9->42 [style = bold, label=""];
3->18 [style = solid, label="consumerId"];
22->16 [style = bold, label=""];
22->33 [style = dashed, label="0"];
3->2 [style = solid, label="consumerId"];
12->36 [style = bold, label=""];
16->14 [style = solid, label="updatedSubscription"];
19->17 [style = bold, label=""];
17->23 [style = bold, label=""];
29->21 [style = bold, label=""];
32->33 [style = bold, label=""];
1->9 [style = bold, label=""];
37->7 [style = bold, label=""];
38->3 [style = bold, label=""];
5->16 [style = solid, label="otherTopicName"];
18->27 [style = solid, label="subscription"];
16->30 [style = dashed, label="0"];
51->45 [style = bold, label=""];
16->19 [style = solid, label="updatedSubscription"];
19->35 [style = bold, label=""];
5->4 [style = bold, label=""];
5->29 [style = solid, label="otherTopicName"];
36->34 [style = bold, label=""];
32->8 [style = solid, label="initialSubscription"];
7->13 [style = bold, label=""];
52->39 [style = bold, label=""];
0->37 [style = bold, label=""];
28->37 [style = dashed, label="0"];
8->19 [style = bold, label=""];
34->1 [style = bold, label=""];
28->7 [style = bold, label=""];
3->15 [style = bold, label=""];
48->53 [style = bold, label=""];
12->26 [style = bold, label=""];
17->23 [style = solid, label="newAssignment"];
29->31 [style = dashed, label="0"];
23->20 [style = solid, label="newAssignmentSet"];
53->49 [style = bold, label=""];
40->1 [style = bold, label=""];
55->44 [style = bold, label=""];
29->18 [style = solid, label="updatedSubscriptions"];
17->24 [style = solid, label="newAssignment"];
44->52 [style = bold, label=""];
3->29 [style = solid, label="consumerId"];
5->4 [style = solid, label="otherTopicName"];
26->36 [style = dashed, label="0"];
2->22 [style = bold, label=""];
0->28 [style = bold, label=""];
3->31 [style = solid, label="consumerId"];
}
