digraph {
58 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(StandardField.PUBLISHER))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "assertEquals(Optional.of(\"Applied Physics Letters\"),first.getField(\"journal\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(\"url\"))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertEquals(Optional.of(\"Degl'Innocenti, R. and Guarino, A. and Poberaj, G. and Gunter, P.\"),first.getField(\"author\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertEquals(\"article\",second.getType())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertEquals(Optional.of(\"Second harmonic generation of continuous wave ultraviolet light and production of beta -BaB$_2$O$_4$ optical waveguides\"),first.getField(\"title\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(StandardField.SCHOOL))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(5,bibEntries.size())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(\"title\"))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"misc\",second.getType())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(Optional.of(\"testU\"),fifth.getField(StandardField.URL))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(\"date\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(\"journal\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "BibEntry fourth = bibEntries.get(3)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(Optional.of(\"test8\"),second.getField(StandardField.DATE))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "BibEntry third = bibEntries.get(2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "BibEntry second = bibEntries.get(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "second = tmp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(\"keywords\"))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(\"booktitle\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(\"abstract\"))@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(Optional.of(\"4\"),first.getField(\"number\"))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestInspec.isi\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(Optional.of(\"2006\"),first.getField(\"year\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertEquals(Optional.of(\"89\"),first.getField(\"volume\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(\"series\"))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertEquals(StandardEntryType.Misc,second.getType())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(\"volume\"))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "first.getField(\"title\").equals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testImportEntries0['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(\"address\"))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(Optional.of(\"testC\"),second.getField(StandardField.ADDRESS))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(\"mastersthesis\",fifth.getType())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Optional.of(\"testB2\"),second.getField(StandardField.BOOKTITLE))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(StandardField.DOI))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "testImportEntries0['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(\"article\",third.getType())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(\"editor\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "assertEquals(StandardEntryType.Book,fourth.getType())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "first = second@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertEquals(Optional.of(\"#jul#\"),first.getField(\"month\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(StandardField.NUMBER))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Optional.of(\"testT\"),first.getField(StandardField.TITLE))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.entries.enw\").toURI())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(Optional.of(\"testI0\"),fourth.getField(\"publisher\"))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(StandardEntryType.Article,third.getType())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(Optional.of(\"testR\"),fifth.getField(\"doi\"))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "testImportEntriesINSPEC['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(Optional.of(\"testI1\"),fifth.getField(\"school\"))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(\"journal\"))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(\"pages\"))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertEquals(StandardEntryType.Misc,first.getType())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(\"book\",fourth.getType())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(StandardField.NOTE))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Optional.of(\"testB0\"),third.getField(StandardField.JOURNAL))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(Optional.of(\"testN\"),fifth.getField(\"number\"))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Optional.of(\"Lorem ipsum abstract\"),first.getField(\"abstract\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(\"edition\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(StandardField.YEAR))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"testO1\"),fifth.getField(\"note\"))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
80 [style = filled, label = "assertEquals(Optional.of(\"Aip\"),first.getField(\"publisher\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "BibEntry fifth = bibEntries.get(4)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Optional.of(\"testV\"),fifth.getField(StandardField.VOLUME))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn$_2$P$_2$S$_6$ crystals\"),second.getField(\"title\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(\"misc\",first.getType())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Optional.of(\"testX\"),fifth.getField(StandardField.ABSTRACT))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(Optional.of(\"testB1\"),fourth.getField(StandardField.SERIES))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(Optional.of(\"testP\"),fifth.getField(StandardField.PAGES))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getCiteKeyOptional())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(StandardField.AUTHOR))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(Optional.of(\"testK\"),fifth.getField(StandardField.KEYWORDS))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
76 [style = filled, label = "BibEntry tmp = first@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(\"article\",first.getType())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"testF\"),fifth.getField(\"bibtexkey\"))@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Optional.of(\"testA0 and testA1\"),first.getField(\"author\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Optional.of(\"testE0 and testE1\"),first.getField(StandardField.EDITOR))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(StandardEntryType.MastersThesis,fifth.getType())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Optional.of(\"test7\"),second.getField(StandardField.EDITION))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "assertEquals(2,entries.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(Optional.of(\"testD\"),second.getField(\"year\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertEquals(Optional.of(\"testJ\"),second.getField(StandardField.JOURNAL))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "BibEntry first = bibEntries.get(0)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->53 [style = dashed, label="0"];
22->36 [style = dashed, label="0"];
19->60 [style = bold, label=""];
17->50 [style = dashed, label="0"];
71->78 [style = solid, label="second"];
23->48 [style = dashed, label="0"];
74->83 [style = bold, label=""];
55->40 [style = bold, label=""];
68->66 [style = bold, label=""];
26->54 [style = dashed, label="0"];
82->85 [style = bold, label=""];
69->80 [style = bold, label=""];
3->38 [style = bold, label=""];
26->11 [style = bold, label=""];
26->75 [style = dashed, label="0"];
1->40 [style = dashed, label="0"];
67->69 [style = bold, label=""];
33->0 [style = bold, label=""];
53->36 [style = bold, label=""];
20->44 [style = dashed, label="0"];
16->47 [style = dashed, label="0"];
31->35 [style = bold, label=""];
84->65 [style = bold, label=""];
51->47 [style = bold, label=""];
0->51 [style = dashed, label="0"];
2->49 [style = dashed, label="0"];
28->25 [style = bold, label=""];
54->53 [style = bold, label=""];
27->33 [style = bold, label=""];
12->54 [style = bold, label=""];
63->43 [style = bold, label=""];
13->42 [style = dashed, label="0"];
34->19 [style = bold, label=""];
2->34 [style = bold, label=""];
18->12 [style = bold, label=""];
32->7 [style = bold, label=""];
73->84 [style = bold, label=""];
9->8 [style = bold, label=""];
71->75 [style = bold, label=""];
8->43 [style = dashed, label="0"];
75->76 [style = dotted, label="true"];
24->62 [style = dashed, label="0"];
61->55 [style = bold, label=""];
60->57 [style = bold, label=""];
31->38 [style = dashed, label="0"];
81->68 [style = bold, label=""];
49->46 [style = bold, label=""];
6->84 [style = dashed, label="0"];
45->21 [style = bold, label=""];
46->19 [style = bold, label=""];
52->7 [style = bold, label=""];
4->59 [style = dashed, label="0"];
56->33 [style = bold, label=""];
75->82 [style = bold, label=""];
7->50 [style = bold, label=""];
83->79 [style = bold, label=""];
10->57 [style = dashed, label="0"];
44->61 [style = bold, label=""];
64->82 [style = bold, label=""];
0->16 [style = bold, label=""];
5->61 [style = dashed, label="0"];
16->13 [style = bold, label=""];
7->17 [style = bold, label=""];
47->42 [style = bold, label=""];
80->72 [style = bold, label=""];
77->73 [style = bold, label=""];
6->18 [style = bold, label=""];
19->29 [style = bold, label=""];
32->52 [style = dashed, label="0"];
78->64 [style = bold, label=""];
35->32 [style = bold, label=""];
59->37 [style = bold, label=""];
27->56 [style = dashed, label="0"];
50->48 [style = bold, label=""];
65->71 [style = bold, label=""];
17->23 [style = bold, label=""];
15->41 [style = dashed, label="0"];
21->73 [style = dashed, label="0"];
42->63 [style = bold, label=""];
25->20 [style = bold, label=""];
30->21 [style = bold, label=""];
9->63 [style = dashed, label="0"];
8->2 [style = bold, label=""];
34->46 [style = dashed, label="0"];
14->55 [style = dashed, label="0"];
85->81 [style = bold, label=""];
11->22 [style = bold, label=""];
29->10 [style = bold, label=""];
79->67 [style = bold, label=""];
13->9 [style = bold, label=""];
75->76 [style = bold, label=""];
35->58 [style = dashed, label="0"];
65->76 [style = solid, label="first"];
76->78 [style = bold, label=""];
41->62 [style = bold, label=""];
37->39 [style = bold, label=""];
25->39 [style = dashed, label="0"];
75->78 [style = dotted, label="true"];
48->59 [style = bold, label=""];
12->71 [style = dashed, label="0"];
36->56 [style = bold, label=""];
39->44 [style = bold, label=""];
28->37 [style = dashed, label="0"];
21->6 [style = bold, label=""];
3->31 [style = bold, label=""];
38->58 [style = bold, label=""];
72->70 [style = bold, label=""];
1->15 [style = bold, label=""];
66->74 [style = bold, label=""];
23->4 [style = bold, label=""];
10->3 [style = bold, label=""];
12->26 [style = bold, label=""];
5->14 [style = bold, label=""];
4->28 [style = bold, label=""];
14->1 [style = bold, label=""];
20->5 [style = bold, label=""];
75->64 [style = dotted, label="true"];
33->51 [style = bold, label=""];
22->27 [style = bold, label=""];
15->24 [style = bold, label=""];
40->41 [style = bold, label=""];
43->49 [style = bold, label=""];
58->52 [style = bold, label=""];
57->3 [style = bold, label=""];
29->60 [style = dashed, label="0"];
76->64 [style = solid, label="tmp"];
}
