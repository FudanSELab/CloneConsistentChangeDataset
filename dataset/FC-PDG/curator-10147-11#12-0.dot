digraph {
7 [style = filled, label = "final byte(( data@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "pathInForegroundStandard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Stat resultStat = RetryLoop.callWithRetry(client.getZookeeperClient(),new Callable<Stat>(){@Override public Stat call(){if (failBeforeNextSetForTesting) {failBeforeNextSetForTesting = falsethrow new KeeperException.ConnectionLossException()}Stat localResultStat = nulltry {localResultStat = client.getZooKeeper().setData(path,data,version)}catch (KeeperException.BadVersionException e) if (failNextSetForTesting) {failNextSetForTesting = falsethrow new KeeperException.ConnectionLossException()}return localResultStat}})@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return resultStat@@@40@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final String path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return returnStat@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "pathInForeground['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Stat returnStat = RetryLoop.callWithRetry(client.getZookeeperClient(),new Callable<Stat>(){@Override public Stat call(){Stat returnStatif (watching.isWatched()) {returnStat = client.getZooKeeper().exists(path,true)}{returnStat = client.getZooKeeper().exists(path,watching.getWatcher(path))int rc = (returnStat != null)? KeeperException.NoNodeException.Code.OK.intValue(): KeeperException.NoNodeException.Code.NONODE.intValue()watching.commitWatcher(rc,true)}return returnStat}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "trace.setRequestBytesLength(data).setPath(path).setStat(resultStat).commit()@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "OperationTrace trace = client.getZookeeperClient().startAdvancedTracer(\"ExistsBuilderImpl-Foreground\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final byte(( data@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return resultStat@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "trace.setRequestBytesLength(data).setPath(path).setStat(resultStat).commit()@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "trace.setPath(path).setWithWatcher(watching.hasWatcher()).setStat(returnStat).commit()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "OperationTrace trace = client.getZookeeperClient().startAdvancedTracer(\"SetDataBuilderImpl-Foreground\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "pathInForeground['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15->16 [style = solid, label="returnStat"];
0->4 [style = bold, label=""];
8->9 [style = bold, label=""];
6->4 [style = solid, label="path"];
6->14 [style = dashed, label="0"];
5->3 [style = dotted, label="true"];
4->15 [style = dashed, label="0"];
4->1 [style = solid, label="resultStat"];
4->8 [style = bold, label=""];
11->15 [style = bold, label=""];
10->7 [style = dotted, label="true"];
4->2 [style = bold, label=""];
5->6 [style = dotted, label="true"];
5->0 [style = bold, label=""];
0->11 [style = dashed, label="0"];
13->16 [style = bold, label=""];
3->4 [style = solid, label="data"];
14->15 [style = solid, label="path"];
2->1 [style = bold, label=""];
15->13 [style = bold, label=""];
12->14 [style = dotted, label="true"];
1->16 [style = dashed, label="0"];
10->6 [style = dotted, label="true"];
12->11 [style = bold, label=""];
7->4 [style = solid, label="data"];
10->0 [style = bold, label=""];
2->13 [style = dashed, label="0"];
4->9 [style = solid, label="resultStat"];
}
