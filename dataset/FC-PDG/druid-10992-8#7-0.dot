digraph {
16 [style = filled, label = "!testContainer.equals(lookupReferencesManager.get(\"test\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "lookupReferencesManager.get(\"test\").isPresent()@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Thread.sleep(100)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"test\",\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.replay(config)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "lookupReferencesManager.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testRealModeWithMainThread['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Thread.sleep(100)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "lookupMap.put(\"testMockForDestroyIsCalledAfterRemove\",container)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "!Optional.of(testContainer).equals(lookupReferencesManager.get(\"test\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "testRealModeWithMainThread['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "lookupReferencesManager.remove(\"testMock\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "testDestroyIsCalledAfterRemove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33->7 [style = bold, label=""];
8->16 [style = bold, label=""];
8->28 [style = bold, label=""];
16->8 [style = dotted, label="true"];
42->41 [style = bold, label=""];
1->39 [style = dashed, label="0"];
27->1 [style = bold, label=""];
30->17 [style = bold, label=""];
28->8 [style = dotted, label="true"];
15->20 [style = solid, label="lookupMap"];
16->8 [style = bold, label=""];
27->1 [style = solid, label="responseHolder"];
14->25 [style = solid, label="request"];
32->12 [style = bold, label=""];
11->18 [style = solid, label="testContainer"];
4->31 [style = dashed, label="0"];
15->44 [style = bold, label=""];
12->30 [style = bold, label=""];
20->14 [style = bold, label=""];
17->30 [style = bold, label=""];
40->39 [style = solid, label="lookupExtractorFactory"];
24->44 [style = dashed, label="0"];
15->3 [style = bold, label=""];
38->15 [style = bold, label=""];
17->23 [style = bold, label=""];
31->11 [style = bold, label=""];
11->18 [style = bold, label=""];
18->28 [style = bold, label=""];
30->29 [style = bold, label=""];
28->32 [style = bold, label=""];
7->9 [style = bold, label=""];
25->27 [style = bold, label=""];
43->40 [style = bold, label=""];
24->26 [style = bold, label=""];
6->5 [style = bold, label=""];
15->14 [style = solid, label="request"];
3->20 [style = bold, label=""];
2->0 [style = bold, label=""];
5->31 [style = bold, label=""];
10->13 [style = bold, label=""];
26->2 [style = solid, label="strResult"];
0->25 [style = bold, label=""];
19->5 [style = solid, label="lookupExtractorFactory"];
40->37 [style = solid, label="lookupExtractorFactory"];
44->20 [style = bold, label=""];
39->35 [style = bold, label=""];
28->8 [style = bold, label=""];
5->4 [style = bold, label=""];
34->36 [style = bold, label=""];
26->15 [style = bold, label=""];
23->30 [style = dashed, label="0"];
23->10 [style = bold, label=""];
21->7 [style = bold, label=""];
29->10 [style = bold, label=""];
23->17 [style = bold, label=""];
41->38 [style = bold, label=""];
22->39 [style = bold, label=""];
14->2 [style = bold, label=""];
12->23 [style = bold, label=""];
36->37 [style = bold, label=""];
19->11 [style = solid, label="lookupExtractorFactory"];
40->38 [style = solid, label="lookupExtractorFactory"];
30->17 [style = dotted, label="true"];
1->19 [style = bold, label=""];
4->11 [style = bold, label=""];
35->34 [style = bold, label=""];
20->27 [style = solid, label="strResult"];
23->17 [style = dotted, label="true"];
19->22 [style = bold, label=""];
16->12 [style = bold, label=""];
40->42 [style = bold, label=""];
9->24 [style = bold, label=""];
2->0 [style = solid, label="responseHolder"];
16->28 [style = dashed, label="0"];
5->37 [style = dashed, label="0"];
9->26 [style = solid, label="lookupMap"];
22->6 [style = bold, label=""];
18->16 [style = bold, label=""];
}
