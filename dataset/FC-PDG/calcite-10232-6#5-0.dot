digraph {
23 [style = filled, label = "testCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "testCreateType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "b = s.execute(\"create type a.b.mytype as (i varchar(5))\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertThat(x,is(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(b,is(false))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "b = s.execute(\"create schema a.b\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(r.next(),is(true))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "b = s.execute(\"create schema a\")@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(x,is(1))@@@31@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "b = s.execute(\"create or replace type mytype1 as DOUBLE\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(b,is(false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "b = s.execute(\"create type mytype4 as BIGINT\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolean b = s.execute(\"create table t (i int not null)\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(r.next(),is(true))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 12.0\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertThat(r.getInt(1),is(12))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "b = s.execute(\"create type mytype as (i int)\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(b,is(false))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(b,is(false))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(b,is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(b,is(false))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(x,is(1))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(b,is(false))@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(x,is(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(b,is(false))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertThat(b,is(false))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "b = s.execute(\"create table t (c mytype1 NOT NULL)\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(r.next(),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(b,is(false))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "x = s.executeUpdate(\"insert into t2 values (1, NULL)\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(x,is(1))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(r.next(),is(false))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(r.getInt(1),is(3))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3.0\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(x,is(1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(r.getInt(1),is(4))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(b,is(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "boolean b = s.execute(\"create type mytype1 as BIGINT\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(r.next(),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39->31 [style = bold, label=""];
5->41 [style = bold, label=""];
26->21 [style = bold, label=""];
3->14 [style = bold, label=""];
8->9 [style = bold, label=""];
11->12 [style = bold, label=""];
41->7 [style = solid, label="x"];
28->35 [style = bold, label=""];
45->44 [style = bold, label=""];
13->19 [style = bold, label=""];
9->4 [style = bold, label=""];
7->33 [style = bold, label=""];
20->17 [style = solid, label="b"];
32->40 [style = bold, label=""];
18->22 [style = bold, label=""];
16->25 [style = bold, label=""];
24->20 [style = bold, label=""];
30->36 [style = solid, label="b"];
5->1 [style = bold, label=""];
25->26 [style = bold, label=""];
22->16 [style = bold, label=""];
35->42 [style = bold, label=""];
4->15 [style = solid, label="b"];
42->43 [style = bold, label=""];
43->37 [style = bold, label=""];
12->6 [style = solid, label="x"];
26->21 [style = solid, label="x"];
19->24 [style = bold, label=""];
0->11 [style = bold, label=""];
5->1 [style = solid, label="b"];
19->24 [style = solid, label="b"];
28->35 [style = solid, label="b"];
23->0 [style = bold, label=""];
6->2 [style = bold, label=""];
18->22 [style = solid, label="b"];
44->28 [style = bold, label=""];
0->11 [style = solid, label="b"];
2->3 [style = bold, label=""];
7->13 [style = bold, label=""];
11->30 [style = bold, label=""];
12->30 [style = dashed, label="0"];
45->44 [style = solid, label="b"];
42->43 [style = solid, label="b"];
34->27 [style = solid, label="b"];
37->5 [style = solid, label="x"];
33->39 [style = bold, label=""];
36->34 [style = bold, label=""];
37->5 [style = bold, label=""];
41->7 [style = bold, label=""];
14->8 [style = bold, label=""];
15->5 [style = bold, label=""];
20->17 [style = bold, label=""];
29->38 [style = bold, label=""];
2->41 [style = dashed, label="0"];
40->11 [style = solid, label="b"];
8->39 [style = dashed, label="0"];
31->29 [style = bold, label=""];
1->7 [style = bold, label=""];
34->27 [style = bold, label=""];
4->15 [style = bold, label=""];
7->13 [style = solid, label="x"];
27->45 [style = bold, label=""];
16->25 [style = solid, label="b"];
30->36 [style = bold, label=""];
0->40 [style = dashed, label="0"];
2->3 [style = solid, label="x"];
10->0 [style = bold, label=""];
12->6 [style = bold, label=""];
40->11 [style = bold, label=""];
17->18 [style = bold, label=""];
}
