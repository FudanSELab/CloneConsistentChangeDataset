digraph {
26 [style = filled, label = "Assert.assertEquals(new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"10\"))),metadataStorageCoordinator.getDataSourceMetadata(DATA_SCHEMA.getDataSource()))@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue((ImmutableList.of(\"d\",\"e\").equals(readSegmentColumn(\"dim1\",desc4)) && ImmutableList.of(\"h\").equals(readSegmentColumn(\"dim1\",desc5))) || (ImmutableList.of(\"d\",\"h\").equals(readSegmentColumn(\"dim1\",desc4)) && ImmutableList.of(\"e\").equals(readSegmentColumn(\"dim1\",desc5))))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"g\"),readSegmentColumn(\"dim1\",desc6))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final SeekableStreamPartitions<String,String> endPartitions = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"10\"))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"c\"),readSegmentColumn(\"dim1\",desc3))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "recordSupplier.seek(anyObject(),anyString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "task.getRunner().getStatus() != SeekableStreamIndexTaskRunner.Status.PAUSED@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "final KinesisIndexTask task = createTask(null,new KinesisIndexTaskIOConfig(null,baseSequenceName,startPartitions,endPartitions,true,null,null,\"awsEndpoint\",null,null,null,null,false))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "SegmentDescriptor desc7 = sd(task,\"2013/P1D\",0)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SegmentDescriptor desc1 = sd(task,\"2008/P1D\",0)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expectLastCall().anyTimes()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "expect(recordSupplier.getEarliestSequenceNumber(anyObject())).andReturn(\"0\").anyTimes()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Map<String,String> nextOffsets = ImmutableMap.copyOf(task.getRunner().getCurrentOffsets())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "recordSupplier.assign(anyObject())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testIncrementalHandOff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "Assert.assertTrue(checkpointRequestsHash.contains(Objects.hash(DATA_SCHEMA.getDataSource(),0,new KinesisDataSourceMetadata(startPartitions),new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,currentOffsets)))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final SeekableStreamPartitions<String,String> startPartitions = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"0\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "SegmentDescriptor desc5 = sd(task,\"2011/P1D\",1)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expectLastCall().once()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "expectLastCall().anyTimes()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String baseSequenceName = \"sequence0\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final SeekableStreamPartitions<String,String> checkpoint2 = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"9\"))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "task.getRunner().setEndOffsets(nextOffsets,false)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertEquals(4,task.getRunner().getRowIngestionMeters().getUnparseable())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(8,task.getRunner().getRowIngestionMeters().getProcessed())@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testIncrementalHandOffMaxTotalRows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "SegmentDescriptor desc5 = sd(task,\"2049/P1D\",0)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final SeekableStreamEndSequenceNumbers<String,String> endPartitions = new SeekableStreamEndSequenceNumbers<>(stream,ImmutableMap.of(shardId1,\"10\"))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "expect(recordSupplier.poll(anyLong())).andReturn(records.subList(0,3)).once().andReturn(records.subList(2,10)).once().andReturn(records.subList(9,11))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SegmentDescriptor desc4 = sd(task,\"2011/P1D\",0)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Assert.assertEquals(0,task.getRunner().getRowIngestionMeters().getThrownAway())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "maxTotalRows = 3L@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Assert.assertEquals(new KinesisDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(stream,ImmutableMap.of(shardId1,\"10\"))),metadataStorageCoordinator.getDataSourceMetadata(DATA_SCHEMA.getDataSource()))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"a\"),readSegmentColumn(\"dim1\",desc1))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertTrue(checkpointRequestsHash.contains(Objects.hash(DATA_SCHEMA.getDataSource(),0,new KinesisDataSourceMetadata(startPartitions),new KinesisDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(stream,currentOffsets)))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "final SeekableStreamEndSequenceNumbers<String,String> checkpoint2 = new SeekableStreamEndSequenceNumbers<>(stream,ImmutableMap.of(shardId1,\"9\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "final SeekableStreamEndSequenceNumbers<String,String> checkpoint1 = new SeekableStreamEndSequenceNumbers<>(stream,ImmutableMap.of(shardId1,\"2\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"b\"),readSegmentColumn(\"dim1\",desc2))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "maxRowsPerSegment = Integer.MAX_VALUE@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertTrue(checkpoint1.getPartitionSequenceNumberMap().equals(currentOffsets))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "task.getRunner().setEndOffsets(currentOffsets,false)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assert.assertEquals(new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"9\",shardId0,\"1\"))),metadataStorageCoordinator.getDataSourceMetadata(DATA_SCHEMA.getDataSource()))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Thread.sleep(10)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "maxRowsPerSegment = 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"f\"),readSegmentColumn(\"dim1\",desc7))@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "final SeekableStreamPartitions<String,String> checkpoint1 = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"4\",shardId0,\"0\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "final SeekableStreamStartSequenceNumbers<String,String> startPartitions = new SeekableStreamStartSequenceNumbers<>(stream,ImmutableMap.of(shardId1,\"0\"),ImmutableSet.of())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "SegmentDescriptor desc7 = sd(task,\"2013/P1D\",0)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "maxRecordsPerPoll = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertTrue(checkpointRequestsHash.contains(Objects.hash(DATA_SCHEMA.getDataSource(),0,new KinesisDataSourceMetadata(new SeekableStreamStartSequenceNumbers<>(stream,currentOffsets,ImmutableSet.of())),new KinesisDataSourceMetadata(new SeekableStreamEndSequenceNumbers<>(stream,nextOffsets)))))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"f\"),readSegmentColumn(\"dim1\",desc5))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final SeekableStreamPartitions<String,String> checkpoint1 = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"2\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "expect(recordSupplier.poll(anyLong())).andReturn(records.subList(0,5)).once().andReturn(records.subList(4,records.size())).once()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "recordSupplier.close()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(1,checkpointRequestsHash.size())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "verifyAll()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(2,checkpointRequestsHash.size())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "task.getRunner().getStatus() != Status.PAUSED@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"a\"),readSegmentColumn(\"dim1\",desc1))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SegmentDescriptor desc2 = sd(task,\"2009/P1D\",0)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Thread.sleep(10)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SegmentDescriptor desc3 = sd(task,\"2010/P1D\",0)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(checkpointRequestsHash.contains(Objects.hash(DATA_SCHEMA.getDataSource(),0,new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,currentOffsets)),new KinesisDataSourceMetadata(new SeekableStreamPartitions<>(stream,nextOffsets)))))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "replayAll()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "final Map<String,String> currentOffsets = ImmutableMap.copyOf(task.getRunner().getCurrentOffsets())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final ListenableFuture<TaskStatus> future = runTask(task)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(checkpoint1.getPartitionSequenceNumberMap(),currentOffsets)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(checkpoint2.getPartitionSequenceNumberMap(),nextOffsets)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SegmentDescriptor desc6 = sd(task,\"2012/P1D\",0)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(TaskState.SUCCESS,future.get().getStatusCode())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testIncrementalHandOffMaxTotalRows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(desc1,desc2,desc3,desc4,desc5,desc6,desc7),publishedDescriptors())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(6,task.getRunner().getRowIngestionMeters().getProcessed())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "task.getRunner().getStatus() != Status.PAUSED@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(ImmutableList.of(\"f\"),readSegmentColumn(\"dim1\",desc7))@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final SeekableStreamPartitions<String,String> endPartitions = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"9\",shardId0,\"1\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Thread.sleep(10)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final KinesisIndexTask task = createTask(null,new KinesisIndexTaskIOConfig(null,baseSequenceName,startPartitions,endPartitions,true,null,null,\"awsEndpoint\",null,null,null,null,null,false))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "final SeekableStreamPartitions<String,String> startPartitions = new SeekableStreamPartitions<>(stream,ImmutableMap.of(shardId1,\"0\",shardId0,\"0\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->53 [style = dashed, label="0"];
21->10 [style = bold, label=""];
35->48 [style = bold, label=""];
14->77 [style = dashed, label="0"];
19->8 [style = solid, label="task"];
74->42 [style = solid, label="currentOffsets"];
13->60 [style = solid, label="desc4"];
24->35 [style = solid, label="desc3"];
78->60 [style = bold, label=""];
10->53 [style = solid, label="nextOffsets"];
15->25 [style = bold, label=""];
67->64 [style = solid, label="endPartitions"];
62->61 [style = bold, label=""];
77->64 [style = solid, label="startPartitions"];
59->56 [style = solid, label="startPartitions"];
49->51 [style = bold, label=""];
51->53 [style = bold, label=""];
10->0 [style = solid, label="nextOffsets"];
10->1 [style = solid, label="nextOffsets"];
24->41 [style = solid, label="desc3"];
12->41 [style = solid, label="desc1"];
13->17 [style = solid, label="desc2"];
71->38 [style = bold, label=""];
9->43 [style = bold, label=""];
18->72 [style = dashed, label="0"];
19->38 [style = solid, label="task"];
12->37 [style = solid, label="desc1"];
42->53 [style = solid, label="currentOffsets"];
28->56 [style = solid, label="baseSequenceName"];
18->44 [style = bold, label=""];
30->28 [style = bold, label=""];
42->15 [style = solid, label="currentOffsets"];
16->60 [style = solid, label="desc6"];
20->38 [style = dashed, label="0"];
45->6 [style = bold, label=""];
14->19 [style = solid, label="startPartitions"];
36->18 [style = bold, label=""];
31->40 [style = bold, label=""];
56->16 [style = solid, label="task"];
43->29 [style = bold, label=""];
14->9 [style = bold, label=""];
23->12 [style = bold, label=""];
38->71 [style = dotted, label="true"];
36->76 [style = dashed, label="0"];
69->5 [style = bold, label=""];
44->47 [style = bold, label=""];
74->73 [style = solid, label="currentOffsets"];
12->17 [style = solid, label="desc3"];
59->54 [style = bold, label=""];
46->59 [style = bold, label=""];
25->21 [style = bold, label=""];
42->15 [style = bold, label=""];
14->5 [style = solid, label="startPartitions"];
26->57 [style = dashed, label="0"];
17->35 [style = bold, label=""];
56->34 [style = solid, label="task"];
66->63 [style = bold, label=""];
54->52 [style = bold, label=""];
56->38 [style = bold, label=""];
34->2 [style = solid, label="desc5"];
19->34 [style = solid, label="task"];
28->36 [style = bold, label=""];
67->64 [style = bold, label=""];
19->24 [style = solid, label="task"];
48->2 [style = bold, label=""];
42->5 [style = solid, label="currentOffsets"];
29->58 [style = dashed, label="0"];
5->51 [style = dashed, label="0"];
78->60 [style = solid, label="desc7"];
23->63 [style = solid, label="desc2"];
77->75 [style = bold, label=""];
41->66 [style = bold, label=""];
48->35 [style = dashed, label="0"];
16->34 [style = bold, label=""];
21->32 [style = dotted, label="true"];
1->0 [style = bold, label=""];
34->8 [style = bold, label=""];
60->41 [style = bold, label=""];
16->78 [style = bold, label=""];
23->60 [style = solid, label="desc2"];
43->67 [style = dashed, label="0"];
58->56 [style = bold, label=""];
64->24 [style = solid, label="task"];
5->62 [style = bold, label=""];
52->58 [style = bold, label=""];
74->42 [style = bold, label=""];
2->48 [style = dashed, label="0"];
27->46 [style = bold, label=""];
22->20 [style = bold, label=""];
72->44 [style = bold, label=""];
24->60 [style = solid, label="desc5"];
46->14 [style = bold, label=""];
42->25 [style = solid, label="currentOffsets"];
26->37 [style = bold, label=""];
16->41 [style = solid, label="desc4"];
5->11 [style = bold, label=""];
20->22 [style = dotted, label="true"];
64->19 [style = solid, label="task"];
49->5 [style = bold, label=""];
10->1 [style = bold, label=""];
19->38 [style = bold, label=""];
74->69 [style = solid, label="currentOffsets"];
4->23 [style = bold, label=""];
8->41 [style = solid, label="desc7"];
0->39 [style = bold, label=""];
28->19 [style = solid, label="baseSequenceName"];
43->52 [style = dashed, label="0"];
9->75 [style = dashed, label="0"];
57->37 [style = bold, label=""];
38->20 [style = bold, label=""];
56->13 [style = solid, label="task"];
64->16 [style = solid, label="task"];
58->56 [style = solid, label="endPartitions"];
47->3 [style = bold, label=""];
13->24 [style = bold, label=""];
8->41 [style = bold, label=""];
25->39 [style = bold, label=""];
64->19 [style = bold, label=""];
46->77 [style = bold, label=""];
13->41 [style = solid, label="desc2"];
70->6 [style = bold, label=""];
4->60 [style = solid, label="desc1"];
7->4 [style = bold, label=""];
16->48 [style = solid, label="desc4"];
56->24 [style = solid, label="task"];
26->41 [style = dashed, label="0"];
39->33 [style = bold, label=""];
34->24 [style = dashed, label="0"];
12->13 [style = bold, label=""];
6->27 [style = bold, label=""];
42->51 [style = solid, label="currentOffsets"];
16->48 [style = solid, label="desc6"];
56->38 [style = solid, label="task"];
65->28 [style = bold, label=""];
29->19 [style = bold, label=""];
63->17 [style = bold, label=""];
48->68 [style = bold, label=""];
73->25 [style = bold, label=""];
20->42 [style = bold, label=""];
33->69 [style = bold, label=""];
14->59 [style = dashed, label="0"];
34->41 [style = solid, label="desc5"];
33->49 [style = bold, label=""];
10->11 [style = solid, label="nextOffsets"];
64->4 [style = solid, label="task"];
61->4 [style = bold, label=""];
75->67 [style = bold, label=""];
49->33 [style = dashed, label="0"];
42->11 [style = solid, label="currentOffsets"];
77->69 [style = solid, label="startPartitions"];
40->70 [style = bold, label=""];
64->78 [style = solid, label="task"];
32->21 [style = bold, label=""];
19->56 [style = dashed, label="0"];
38->74 [style = bold, label=""];
28->76 [style = bold, label=""];
19->16 [style = solid, label="task"];
64->23 [style = solid, label="task"];
3->31 [style = bold, label=""];
45->70 [style = dashed, label="0"];
59->51 [style = solid, label="startPartitions"];
64->12 [style = solid, label="task"];
12->60 [style = solid, label="desc3"];
37->17 [style = bold, label=""];
13->35 [style = solid, label="desc4"];
24->35 [style = solid, label="desc5"];
41->60 [style = dashed, label="0"];
56->8 [style = solid, label="task"];
28->64 [style = solid, label="baseSequenceName"];
2->50 [style = bold, label=""];
41->57 [style = bold, label=""];
20->22 [style = bold, label=""];
15->42 [style = dashed, label="0"];
8->50 [style = solid, label="desc7"];
19->12 [style = solid, label="task"];
19->13 [style = solid, label="task"];
24->16 [style = bold, label=""];
76->72 [style = bold, label=""];
29->19 [style = solid, label="endPartitions"];
4->66 [style = solid, label="desc1"];
53->7 [style = bold, label=""];
21->32 [style = bold, label=""];
64->13 [style = solid, label="task"];
40->45 [style = bold, label=""];
41->26 [style = bold, label=""];
78->68 [style = solid, label="desc7"];
56->12 [style = solid, label="task"];
42->73 [style = bold, label=""];
9->54 [style = dashed, label="0"];
11->7 [style = bold, label=""];
55->28 [style = bold, label=""];
38->71 [style = bold, label=""];
}
