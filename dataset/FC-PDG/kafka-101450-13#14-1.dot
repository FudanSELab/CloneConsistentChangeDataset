digraph {
19 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.STRING_JOINER,JoinWindows.of(\"test\",100),intSerde,stringSerde,stringSerde)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "stream2 = builder.stream(intSerde,stringSerde,topic2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "processor.checkAndClearProcessResult()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.STRING_JOINER,JoinWindows.of(100),intSerde,stringSerde,stringSerde)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "int i = 0@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.STRING_JOINER,JoinWindows.of(\"test\",100),intSerde,stringSerde,stringSerde)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Collection<Set<String>> copartitionGroups = builder.copartitionGroups()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "i < expectedKeys.length@@@34@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < 2@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "stream1 = builder.stream(intSerde,stringSerde,topic1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "i++@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "i++@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"XX\" + expectedKeys(i()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "KStreamBuilder builder = new KStreamBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "i < 2@@@52@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "int i = 0@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i++@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@56@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i < expectedKeys.length@@@40@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YY\" + expectedKeys(i()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "int i = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "driver = new KStreamTestDriver(builder,stateDir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "joined.process(processor)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b56db0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < 2@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i < expectedKeys.length@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36->8 [style = dotted, label="true"];
16->6 [style = solid, label="i"];
21->42 [style = bold, label=""];
12->45 [style = bold, label=""];
44->49 [style = solid, label="stream2"];
32->37 [style = bold, label=""];
30->20 [style = bold, label=""];
15->21 [style = bold, label=""];
7->1 [style = solid, label="i"];
26->34 [style = solid, label="i"];
41->5 [style = solid, label="i"];
38->4 [style = bold, label=""];
25->6 [style = solid, label="i"];
17->35 [style = solid, label="i"];
47->11 [style = bold, label=""];
29->18 [style = bold, label=""];
25->16 [style = solid, label="i"];
8->36 [style = bold, label=""];
12->6 [style = solid, label="expectedKeys"];
36->2 [style = bold, label=""];
31->34 [style = dotted, label="true"];
33->2 [style = solid, label="i"];
19->28 [style = bold, label=""];
29->1 [style = bold, label=""];
51->11 [style = bold, label=""];
8->2 [style = solid, label="i"];
10->11 [style = bold, label=""];
17->35 [style = bold, label=""];
31->14 [style = bold, label=""];
7->29 [style = bold, label=""];
41->35 [style = solid, label="i"];
28->0 [style = solid, label="i"];
3->46 [style = bold, label=""];
12->5 [style = solid, label="expectedKeys"];
27->0 [style = bold, label=""];
22->0 [style = dotted, label="true"];
50->37 [style = bold, label=""];
22->9 [style = bold, label=""];
8->36 [style = solid, label="i"];
24->44 [style = bold, label=""];
37->29 [style = bold, label=""];
36->2 [style = dotted, label="true"];
0->27 [style = solid, label="i"];
49->38 [style = bold, label=""];
28->27 [style = solid, label="i"];
11->12 [style = bold, label=""];
44->49 [style = bold, label=""];
7->29 [style = solid, label="i"];
37->1 [style = solid, label="i"];
17->5 [style = solid, label="i"];
35->5 [style = bold, label=""];
43->34 [style = solid, label="i"];
33->36 [style = bold, label=""];
40->17 [style = bold, label=""];
13->49 [style = dashed, label="0"];
11->21 [style = solid, label="builder"];
31->43 [style = dotted, label="true"];
43->31 [style = solid, label="i"];
25->23 [style = solid, label="i"];
26->43 [style = solid, label="i"];
23->16 [style = dotted, label="true"];
29->1 [style = dotted, label="true"];
36->40 [style = bold, label=""];
52->33 [style = bold, label=""];
42->25 [style = bold, label=""];
31->52 [style = bold, label=""];
4->39 [style = bold, label=""];
37->29 [style = solid, label="i"];
18->26 [style = bold, label=""];
29->7 [style = dotted, label="true"];
23->32 [style = bold, label=""];
16->23 [style = bold, label=""];
13->48 [style = dashed, label="0"];
1->7 [style = bold, label=""];
0->22 [style = solid, label="i"];
31->34 [style = bold, label=""];
14->52 [style = dashed, label="0"];
26->31 [style = bold, label=""];
12->1 [style = solid, label="expectedKeys"];
26->31 [style = solid, label="i"];
46->30 [style = bold, label=""];
23->6 [style = bold, label=""];
32->50 [style = dashed, label="0"];
12->27 [style = solid, label="expectedKeys"];
22->27 [style = dotted, label="true"];
35->41 [style = dotted, label="true"];
33->8 [style = solid, label="i"];
34->43 [style = bold, label=""];
28->22 [style = solid, label="i"];
20->38 [style = solid, label="processor"];
28->22 [style = bold, label=""];
23->50 [style = bold, label=""];
43->31 [style = bold, label=""];
41->35 [style = bold, label=""];
12->2 [style = solid, label="expectedKeys"];
39->15 [style = bold, label=""];
45->3 [style = bold, label=""];
44->48 [style = solid, label="stream2"];
23->6 [style = dotted, label="true"];
25->23 [style = bold, label=""];
35->5 [style = dotted, label="true"];
35->19 [style = bold, label=""];
17->41 [style = solid, label="i"];
44->13 [style = solid, label="stream2"];
16->23 [style = solid, label="i"];
33->36 [style = solid, label="i"];
37->7 [style = solid, label="i"];
14->33 [style = bold, label=""];
5->41 [style = bold, label=""];
48->38 [style = bold, label=""];
22->27 [style = bold, label=""];
6->16 [style = bold, label=""];
44->48 [style = bold, label=""];
0->22 [style = bold, label=""];
44->13 [style = bold, label=""];
13->38 [style = bold, label=""];
12->34 [style = solid, label="expectedKeys"];
20->24 [style = bold, label=""];
2->8 [style = bold, label=""];
}
