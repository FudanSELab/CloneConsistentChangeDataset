digraph {
39 [style = filled, label = "testStringValueSorting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "(next = verifyReader.readLine()) != null@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "MutableObjectIterator<String> sortedData = sorter.getIterator()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TypeSerializer<StringValue> serializer = new CopyableValueSerializer<StringValue>()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "BufferedReader reader = null@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new Exception(\"Command failed with return code \" + retCode)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verifyReader = new BufferedReader(new FileReader(sorted))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int retCode = p.waitFor()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MutableObjectIterator<StringValue> inputIterator = new StringValueReaderMutableObjectIterator(reader)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String(( command = {\"/bin/bash\",\"-c\",\"export LC_ALL=\"C\" && cat \"\" + input.getAbsolutePath() + \"\" | sort > \"\" + sorted.getAbsolutePath() + \"\"\"}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String nextVerify@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.fail(e.getMessage())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(next,nextFromStratoSort)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "MutableObjectIterator<StringValue> sortedData = sorter.getIterator()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TypeComparator<StringValue> comparator = new CopyableValueComparator<StringValue>(true,)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "TypeSerializer<String> serializer = StringSerializer.INSTANCE@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Exception e@@@58@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "retCode != 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "(nextVerify = verifyReader.readLine()) != null@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "String next@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "p = Runtime.getRuntime().exec(command)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File input = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "p = null@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.fail(e.getMessage())@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertNotNull(nextFromStratoSort)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "sorter = new UnilateralSortMerger<String>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<String>(serializer,),comparator,1.0,4,0.8f,false)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "sorted = File.createTempFile(\"sorted_strings\",\"txt\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "StringValue nextFromFlinkSort = new StringValue()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testStringValueSorting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertNotNull(nextFromFlinkSort)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{if (reader != null) {reader.close()}if (verifyReader != null) {verifyReader.close()}if (sorter != null) {sorter.close()}}@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{if (input != null) {input.delete()}if (sorted != null) {sorted.delete()}}@@@64@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "e.printStackTrace()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "MemoryManager mm = new MemoryManager(1024 * 1024,1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "File sorted = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "reader.close()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "{if (p != null) {p.destroy()}}@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testStringSorting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "System.err.println(e.getMessage())@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "UnilateralSortMerger<StringValue> sorter = null@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "{if (reader != null) {reader.close()}if (verifyReader != null) {verifyReader.close()}if (sorter != null) {sorter.close()}}@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "reader = new BufferedReader(new FileReader(input))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "nextFromFlinkSort = sortedData.next(nextFromFlinkSort)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "sorter = new UnilateralSortMerger<StringValue>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<StringValue>(serializer,),comparator,1.0,4,0.8f,true,true)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(nextVerify,nextFromFlinkSort.getValue())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "UnilateralSortMerger<String> sorter = null@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "TypeComparator<String> comparator = new StringComparator(true)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "input = generateFileWithStrings(300000,\"http://some-uri.com/that/is/a/common/prefix/to/all\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "IOManager ioMan = new IOManagerAsync()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Process p = null@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "{if (input != null) {input.delete()}if (sorted != null) {sorted.delete()}}@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "String nextFromStratoSort = sortedData.next(\"\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "BufferedReader verifyReader = null@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "sorter = new UnilateralSortMerger<StringValue>(mm,ioMan,inputIterator,new DummyInvokable(),new RuntimeSerializerFactory<StringValue>(serializer,),comparator,1.0,4,0.8f,true)@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "MutableObjectIterator<String> inputIterator = new StringReaderMutableObjectIterator(reader)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17->20 [style = solid, label="command"];
6->16 [style = solid, label="sorted"];
54->46 [style = solid, label="nextFromStratoSort"];
0->25 [style = solid, label="serializer"];
15->21 [style = bold, label=""];
0->44 [style = dashed, label="0"];
10->25 [style = solid, label="inputIterator"];
25->48 [style = dashed, label="0"];
51->48 [style = solid, label="comparator"];
21->18 [style = solid, label="nextFromFlinkSort"];
3->25 [style = solid, label="ioMan"];
38->7 [style = solid, label="sorter"];
45->48 [style = bold, label=""];
44->51 [style = bold, label=""];
3->38 [style = solid, label="ioMan"];
21->36 [style = bold, label=""];
31->35 [style = bold, label=""];
2->12 [style = solid, label="retCode"];
19->11 [style = dotted, label="true"];
13->36 [style = bold, label=""];
43->1 [style = bold, label=""];
36->18 [style = bold, label=""];
26->15 [style = bold, label=""];
7->16 [style = bold, label=""];
2->24 [style = solid, label="retCode"];
18->32 [style = bold, label=""];
35->7 [style = solid, label="reader"];
35->45 [style = bold, label=""];
35->10 [style = bold, label=""];
8->4 [style = bold, label=""];
31->38 [style = solid, label="comparator"];
9->29 [style = bold, label=""];
36->13 [style = dotted, label="true"];
5->41 [style = dashed, label="0"];
10->38 [style = solid, label="inputIterator"];
26->42 [style = bold, label=""];
48->41 [style = bold, label=""];
49->54 [style = dotted, label="true"];
31->51 [style = dashed, label="0"];
22->9 [style = bold, label=""];
14->22 [style = bold, label=""];
17->37 [style = bold, label=""];
51->35 [style = bold, label=""];
4->53 [style = solid, label="input"];
3->0 [style = bold, label=""];
0->38 [style = solid, label="serializer"];
10->25 [style = bold, label=""];
12->14 [style = bold, label=""];
34->38 [style = solid, label="mm"];
34->48 [style = solid, label="mm"];
4->16 [style = solid, label="input"];
31->25 [style = solid, label="comparator"];
18->32 [style = solid, label="nextFromFlinkSort"];
49->54 [style = bold, label=""];
11->30 [style = bold, label=""];
49->46 [style = dotted, label="true"];
10->45 [style = dashed, label="0"];
44->48 [style = solid, label="serializer"];
0->31 [style = bold, label=""];
40->29 [style = bold, label=""];
32->46 [style = dashed, label="0"];
27->26 [style = bold, label=""];
6->17 [style = bold, label=""];
38->5 [style = bold, label=""];
1->8 [style = bold, label=""];
41->27 [style = bold, label=""];
36->13 [style = solid, label="nextVerify"];
47->19 [style = dotted, label="true"];
47->11 [style = dotted, label="true"];
45->48 [style = solid, label="inputIterator"];
49->50 [style = dotted, label="true"];
36->32 [style = dotted, label="true"];
35->10 [style = solid, label="reader"];
47->23 [style = dotted, label="true"];
12->24 [style = bold, label=""];
35->52 [style = solid, label="reader"];
19->30 [style = dotted, label="true"];
3->44 [style = bold, label=""];
4->35 [style = solid, label="input"];
25->38 [style = dashed, label="0"];
49->54 [style = solid, label="next"];
12->24 [style = dotted, label="true"];
26->52 [style = solid, label="verifyReader"];
39->1 [style = bold, label=""];
25->5 [style = bold, label=""];
36->18 [style = dotted, label="true"];
23->11 [style = bold, label=""];
10->38 [style = bold, label=""];
6->26 [style = solid, label="sorted"];
22->40 [style = bold, label=""];
49->46 [style = solid, label="next"];
26->7 [style = solid, label="verifyReader"];
52->53 [style = bold, label=""];
25->7 [style = solid, label="sorter"];
28->34 [style = bold, label=""];
4->6 [style = bold, label=""];
50->46 [style = bold, label=""];
46->49 [style = bold, label=""];
37->20 [style = bold, label=""];
19->23 [style = dotted, label="true"];
33->1 [style = bold, label=""];
14->22 [style = solid, label="p"];
2->12 [style = bold, label=""];
24->14 [style = bold, label=""];
15->42 [style = dashed, label="0"];
20->2 [style = bold, label=""];
29->28 [style = bold, label=""];
54->50 [style = bold, label=""];
11->53 [style = bold, label=""];
6->53 [style = solid, label="sorted"];
3->48 [style = solid, label="ioMan"];
48->52 [style = solid, label="sorter"];
9->40 [style = dashed, label="0"];
49->52 [style = bold, label=""];
34->3 [style = bold, label=""];
36->7 [style = bold, label=""];
19->23 [style = bold, label=""];
47->19 [style = bold, label=""];
42->49 [style = bold, label=""];
34->25 [style = solid, label="mm"];
35->45 [style = solid, label="reader"];
5->27 [style = bold, label=""];
32->13 [style = bold, label=""];
30->16 [style = bold, label=""];
54->50 [style = solid, label="nextFromStratoSort"];
}
