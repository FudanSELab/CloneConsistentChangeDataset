digraph {
1 [style = filled, label = "preRegister['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "log.error(\"\",e)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "preRegister['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\"\",e)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "DocCollection collection = zkStateReader.getClusterState().getCollectionOrNull(cd.getCloudDescriptor().getCollectionName())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "throw new ZooKeeperException(SolrException.ErrorCode.SERVER_ERROR,\"\",e)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Thread.currentThread().interrupt()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "closeKeeper['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String coreNodeName = getCoreNodeName(cd)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "keeper != null@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SolrZooKeeper keeper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "publish(cd,ZkStateReader.DOWN,false,true)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "InterruptedException e@@@17@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "cloudDesc.getCoreNodeName() == null@@@7@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "cloudDesc.setCoreNodeName(coreNodeName)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "checkStateInZk(cd)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "CloudDescriptor cloudDesc = cd.getCloudDescriptor()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "log.error(\"\",e)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "KeeperException e@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "needsToBeAssignedShardId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "cd.getCloudDescriptor().getShardId() == null && needsToBeAssignedShardId(cd,zkStateReader.getClusterState(),coreNodeName)@@@22@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "doGetShardIdAndNodeNameProcess(cd)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "keeper.close()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CoreDescriptor cd@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "doGetShardIdAndNodeNameProcess(cd)@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
20->3 [style = dotted, label="true"];
5->8 [style = dotted, label="true"];
8->17 [style = solid, label="cd"];
19->3 [style = bold, label=""];
22->23 [style = dotted, label="true"];
13->15 [style = bold, label=""];
21->22 [style = bold, label=""];
1->0 [style = dotted, label="true"];
20->18 [style = dotted, label="true"];
15->12 [style = bold, label=""];
20->18 [style = bold, label=""];
12->2 [style = bold, label=""];
21->24 [style = dotted, label="true"];
8->11 [style = solid, label="cd"];
8->2 [style = solid, label="cd"];
6->13 [style = bold, label=""];
14->7 [style = dotted, label="true"];
11->6 [style = bold, label=""];
8->9 [style = solid, label="cd"];
15->2 [style = bold, label=""];
17->9 [style = dotted, label="true"];
24->22 [style = solid, label="keeper"];
8->6 [style = solid, label="cd"];
17->4 [style = bold, label=""];
3->17 [style = bold, label=""];
10->7 [style = bold, label=""];
18->19 [style = bold, label=""];
5->11 [style = bold, label=""];
17->9 [style = bold, label=""];
14->10 [style = dotted, label="true"];
7->17 [style = bold, label=""];
2->16 [style = bold, label=""];
16->17 [style = bold, label=""];
20->19 [style = dotted, label="true"];
22->23 [style = bold, label=""];
14->10 [style = bold, label=""];
11->17 [style = solid, label="coreNodeName"];
17->4 [style = dotted, label="false"];
11->12 [style = solid, label="coreNodeName"];
8->4 [style = solid, label="cd"];
15->12 [style = dotted, label="true"];
}
