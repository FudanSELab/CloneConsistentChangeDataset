digraph {
4 [style = filled, label = "assertNotNull(freqVector)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "j < positions(i(.length@@@22@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final BytesRef text = termsEnum.next()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "doc = dpEnum.docID()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int j = 0@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertTrue(doc == -1 || doc == DocIdSetIterator.NO_MORE_DOCS)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertNotNull(vector)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(DocIdSetIterator.NO_MORE_DOCS,dpEnum.nextDoc())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(DocIdSetIterator.NO_MORE_DOCS,dpEnum.nextDoc())@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertTrue(doc == -1 || doc == DocIdSetIterator.NO_MORE_DOCS)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertNotNull(termsEnum)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(testTerms.length,vector.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "j < positions(i(.length@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(positions(i((j(,dpEnum.nextPosition())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "TermsEnum termsEnum = vector.iterator(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "String term = text.utf8ToString()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Terms freqVector = reader.get(0).terms(testFields(1()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "termsEnum = freqVector.iterator(null)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "j++@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final BytesRef text = termsEnum.next()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(dpEnum.freq(),positions(i(.length)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testPositionReader['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "TermVectorsReader reader = Codec.getDefault().termVectorsFormat().vectorsReader(dir,seg.info,fieldInfos,newIOContext(random()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(j * 10 + testTerms(i(.length(),dpEnum.endOffset())@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertNotNull(text)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "int i = 0@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Terms vector = reader.get(0).terms(testFields(0()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "reader.close()@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(dpEnum.nextDoc() != DocIdSetIterator.NO_MORE_DOCS)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i++@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNotNull(termsEnum)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String term = text.utf8ToString()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "j++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i < testTerms.length@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < testTerms.length@@@50@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNotNull(text)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "dpEnum = termsEnum.docsAndPositions(null,dpEnum,false)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertNotNull(dpEnum)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(j * 10,dpEnum.startOffset())@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "BytesRef(( terms@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(testTerms(i(,term)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testOffsetReader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DocsAndPositionsEnum dpEnum = null@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertNotNull(dpEnum)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(testTerms.length,vector.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "TermVectorsReader reader = Codec.getDefault().termVectorsFormat().vectorsReader(dir,seg,fieldInfos,newIOContext(random()))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(testTerms(i(,term)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dpEnum = termsEnum.docsAndPositions(null,dpEnum,true)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testPositionReader['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(dpEnum.freq(),positions(i(.length)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int doc = dpEnum.docID()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int j = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(testTerms.length,freqVector.size())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(positions(i((j(,dpEnum.nextPosition())@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->32 [style = bold, label=""];
18->3 [style = bold, label=""];
29->9 [style = dotted, label="true"];
29->5 [style = bold, label=""];
6->50 [style = solid, label="i"];
14->26 [style = solid, label="j"];
29->30 [style = bold, label=""];
11->14 [style = bold, label=""];
26->37 [style = dotted, label="true"];
29->48 [style = dotted, label="true"];
29->49 [style = dotted, label="true"];
44->45 [style = solid, label="doc"];
42->48 [style = bold, label=""];
25->29 [style = bold, label=""];
29->26 [style = dotted, label="true"];
9->16 [style = bold, label=""];
6->29 [style = bold, label=""];
29->8 [style = dotted, label="true"];
22->39 [style = solid, label="text"];
33->25 [style = bold, label=""];
29->14 [style = dotted, label="true"];
25->26 [style = solid, label="i"];
13->15 [style = solid, label="j"];
53->32 [style = bold, label=""];
6->10 [style = solid, label="i"];
9->21 [style = bold, label=""];
51->26 [style = bold, label=""];
39->38 [style = bold, label=""];
21->35 [style = bold, label=""];
48->34 [style = bold, label=""];
41->47 [style = solid, label="termsEnum"];
19->15 [style = solid, label="j"];
29->16 [style = dotted, label="true"];
9->35 [style = solid, label="dpEnum"];
28->18 [style = solid, label="text"];
31->39 [style = dotted, label="true"];
31->22 [style = dotted, label="true"];
6->49 [style = solid, label="i"];
15->13 [style = bold, label=""];
29->18 [style = dotted, label="true"];
28->18 [style = bold, label=""];
6->26 [style = solid, label="i"];
31->40 [style = dotted, label="true"];
24->55 [style = bold, label=""];
24->55 [style = solid, label="termsEnum"];
31->5 [style = bold, label=""];
46->24 [style = bold, label=""];
13->50 [style = solid, label="j"];
47->43 [style = bold, label=""];
48->44 [style = bold, label=""];
51->0 [style = solid, label="j"];
38->40 [style = solid, label="term"];
25->15 [style = solid, label="i"];
24->20 [style = bold, label=""];
3->10 [style = bold, label=""];
36->46 [style = bold, label=""];
26->0 [style = bold, label=""];
25->11 [style = solid, label="i"];
29->50 [style = dotted, label="true"];
19->13 [style = solid, label="j"];
26->1 [style = dotted, label="true"];
31->17 [style = dotted, label="true"];
40->17 [style = bold, label=""];
32->36 [style = bold, label=""];
29->21 [style = dotted, label="true"];
6->15 [style = solid, label="i"];
51->26 [style = solid, label="j"];
43->31 [style = solid, label="i"];
44->45 [style = bold, label=""];
9->42 [style = solid, label="dpEnum"];
43->17 [style = solid, label="i"];
4->23 [style = bold, label=""];
29->19 [style = dotted, label="true"];
32->36 [style = solid, label="terms"];
29->10 [style = dotted, label="true"];
17->40 [style = solid, label="i"];
54->7 [style = bold, label=""];
16->27 [style = bold, label=""];
16->27 [style = solid, label="doc"];
29->34 [style = dotted, label="true"];
34->49 [style = bold, label=""];
42->48 [style = solid, label="dpEnum"];
19->50 [style = bold, label=""];
12->24 [style = bold, label=""];
23->41 [style = bold, label=""];
43->40 [style = solid, label="i"];
13->50 [style = bold, label=""];
14->1 [style = solid, label="j"];
50->15 [style = dotted, label="true"];
3->10 [style = solid, label="term"];
29->28 [style = dotted, label="true"];
50->13 [style = dotted, label="true"];
0->1 [style = bold, label=""];
49->19 [style = bold, label=""];
7->53 [style = dashed, label="0"];
25->50 [style = solid, label="i"];
22->39 [style = bold, label=""];
25->10 [style = solid, label="i"];
50->15 [style = bold, label=""];
41->47 [style = bold, label=""];
38->40 [style = bold, label=""];
27->21 [style = bold, label=""];
25->49 [style = solid, label="i"];
29->3 [style = dotted, label="true"];
7->36 [style = bold, label=""];
29->25 [style = dotted, label="true"];
1->37 [style = bold, label=""];
43->31 [style = bold, label=""];
29->11 [style = dotted, label="true"];
25->29 [style = solid, label="i"];
31->22 [style = bold, label=""];
52->53 [style = bold, label=""];
46->12 [style = bold, label=""];
25->0 [style = solid, label="i"];
37->51 [style = bold, label=""];
29->27 [style = dotted, label="true"];
6->29 [style = solid, label="i"];
17->31 [style = bold, label=""];
36->46 [style = solid, label="vector"];
29->44 [style = dotted, label="true"];
20->6 [style = bold, label=""];
14->51 [style = solid, label="j"];
20->42 [style = solid, label="dpEnum"];
55->56 [style = bold, label=""];
6->0 [style = solid, label="i"];
29->28 [style = bold, label=""];
14->26 [style = bold, label=""];
17->31 [style = solid, label="i"];
51->37 [style = solid, label="j"];
42->9 [style = solid, label="dpEnum"];
29->45 [style = dotted, label="true"];
10->42 [style = bold, label=""];
6->25 [style = solid, label="i"];
6->11 [style = solid, label="i"];
30->4 [style = bold, label=""];
30->4 [style = solid, label="freqVector"];
31->38 [style = dotted, label="true"];
32->30 [style = solid, label="terms"];
8->9 [style = bold, label=""];
50->8 [style = bold, label=""];
29->42 [style = dotted, label="true"];
26->51 [style = dotted, label="true"];
29->33 [style = dotted, label="true"];
56->20 [style = bold, label=""];
2->7 [style = bold, label=""];
14->37 [style = solid, label="j"];
51->1 [style = solid, label="j"];
26->33 [style = bold, label=""];
45->34 [style = bold, label=""];
29->35 [style = dotted, label="true"];
14->0 [style = solid, label="j"];
26->0 [style = dotted, label="true"];
19->50 [style = solid, label="j"];
35->11 [style = bold, label=""];
}
