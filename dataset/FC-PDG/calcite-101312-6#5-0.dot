digraph {
66 [style = filled, label = "aSubSchemaMap.put(\"b\",new AbstractSchema())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Util.discard(function)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "aSubSchemaMap.put(\"b4\",new AbstractSchema())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "a2Schema.add(\"tabLe1\",table)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final TableMacro function = ViewTable.viewMacro(a2Schema,\"values 1\",null,null,null)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testSchemaCaching['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testSimpleCalciteSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "aSubSchemaMap.put(\"c\",new AbstractSchema())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "a2Schema.add(\"tabLe2\",table)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Map<String,Schema> a2SubSchemaMap = new HashMap<>()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "changed(0( = true@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "a2SubSchemaMap.put(\"b4\",new AbstractSchema())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "a2Schema.setCacheEnabled(false)@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(1))@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final SchemaPlus aSchema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return aSubSchemaMap}})@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"taBle1\",true),nullValue())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "a2Schema.add(\"table1\",table)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "testSchemaCaching['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "assertThat(aSchema.contentsHaveChangedSince(-1,1),equalTo(false))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"table1\",false),notNullValue())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "aSchema.setCacheEnabled(true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "aSubSchemaMap.put(\"b2\",new AbstractSchema())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "a2Schema.setCacheEnabled(false)@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(2))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b1\"),notNullValue())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final CalciteSchema a2CalciteSchema = CalciteSchema.from(a2Schema)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "aSchema.setCacheEnabled(false)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"taBle1\",false),notNullValue())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(a2CalciteSchema.getTable(\"table1\",true),notNullValue())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "changed(0( = false@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(1))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "a2SubSchemaMap.put(\"b3\",new AbstractSchema())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(3))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "a2Schema.setCacheEnabled(true)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b1\"),nullValue())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(aSchema.contentsHaveChangedSince(1,1),equalTo(false))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertThat(aSchema.getSubSchema(name),notNullValue())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "connection.close()@@@67@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final Map<String,Schema> aSubSchemaMap = new HashMap<>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(aSchema.getSubSchema(name),notNullValue())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "a2Schema.setCacheEnabled(true)@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "final Map<String,Schema> aSubSchemaMap = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "aSchema.setCacheEnabled(true)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(2))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(a2Schema.getTableNames().size(),equalTo(4))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(a2Schema.getSubSchemaNames().size(),is(0))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(aSchema.getSubSchema(\"c\"),notNullValue())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "final SchemaPlus rootSchema = CalciteSchema.createRootSchema(false,false).plus()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final boolean(( changed = {false}@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "aSubSchemaMap.put(\"b1\",new AbstractSchema())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final Connection connection = CalciteAssert.that(CalciteAssert.Config.JDBC_FOODMART).connect()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "aSchema.setCacheEnabled(false)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "final SchemaPlus aSchema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return aSubSchemaMap}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final TableInRootSchemaTest.SimpleTable table = new TableInRootSchemaTest.SimpleTable()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(4))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "aSchema.add(\"b\",new AbstractSchema())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final SchemaPlus a2Schema = rootSchema.add(\"a\",new AbstractSchema(){@Override protected Map<String,Schema> getSubSchemaMap(){return a2SubSchemaMap}})@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertThat(aSchema.getSubSchemaNames().size(),is(0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Thread.sleep(1)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(aSchema.getSubSchema(\"b\"),notNullValue())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "aSchema.add(\"b3\",new AbstractSchema())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "a2Schema.add(\"TABLE1\",table)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
61->67 [style = solid, label="aSubSchemaMap"];
18->55 [style = bold, label=""];
36->29 [style = bold, label=""];
1->20 [style = bold, label=""];
32->57 [style = solid, label="table"];
66->62 [style = bold, label=""];
12->14 [style = solid, label="a2Schema"];
69->68 [style = bold, label=""];
25->6 [style = bold, label=""];
21->38 [style = bold, label=""];
45->57 [style = bold, label=""];
2->23 [style = bold, label=""];
23->52 [style = bold, label=""];
33->46 [style = bold, label=""];
24->17 [style = bold, label=""];
9->21 [style = bold, label=""];
28->63 [style = dashed, label="0"];
27->33 [style = bold, label=""];
19->3 [style = bold, label=""];
51->11 [style = bold, label=""];
46->42 [style = bold, label=""];
28->18 [style = bold, label=""];
35->44 [style = bold, label=""];
5->39 [style = bold, label=""];
52->37 [style = bold, label=""];
11->12 [style = solid, label="a2SubSchemaMap"];
14->15 [style = solid, label="function"];
12->8 [style = solid, label="a2Schema"];
16->32 [style = bold, label=""];
11->12 [style = bold, label=""];
63->69 [style = bold, label=""];
56->51 [style = bold, label=""];
32->58 [style = solid, label="table"];
47->25 [style = bold, label=""];
3->2 [style = bold, label=""];
55->27 [style = bold, label=""];
64->66 [style = bold, label=""];
14->15 [style = bold, label=""];
59->10 [style = bold, label=""];
10->1 [style = bold, label=""];
70->61 [style = bold, label=""];
55->68 [style = dashed, label="0"];
5->59 [style = bold, label=""];
0->12 [style = bold, label=""];
18->33 [style = bold, label=""];
30->9 [style = bold, label=""];
26->41 [style = bold, label=""];
44->13 [style = solid, label="aSubSchemaMap"];
4->58 [style = bold, label=""];
29->19 [style = bold, label=""];
67->63 [style = bold, label=""];
53->26 [style = bold, label=""];
20->54 [style = bold, label=""];
15->40 [style = bold, label=""];
32->45 [style = solid, label="table"];
12->43 [style = bold, label=""];
22->35 [style = bold, label=""];
31->8 [style = bold, label=""];
7->36 [style = bold, label=""];
57->4 [style = bold, label=""];
61->67 [style = bold, label=""];
50->24 [style = bold, label=""];
68->64 [style = bold, label=""];
32->45 [style = bold, label=""];
10->20 [style = bold, label=""];
42->50 [style = bold, label=""];
65->70 [style = bold, label=""];
0->12 [style = solid, label="changed"];
43->48 [style = bold, label=""];
32->4 [style = solid, label="table"];
58->31 [style = bold, label=""];
48->53 [style = bold, label=""];
20->6 [style = bold, label=""];
49->34 [style = bold, label=""];
38->14 [style = bold, label=""];
34->22 [style = bold, label=""];
17->7 [style = bold, label=""];
27->64 [style = dashed, label="0"];
54->47 [style = bold, label=""];
11->0 [style = bold, label=""];
60->34 [style = bold, label=""];
6->16 [style = bold, label=""];
39->10 [style = bold, label=""];
44->13 [style = bold, label=""];
13->28 [style = bold, label=""];
41->5 [style = bold, label=""];
37->56 [style = bold, label=""];
}
