digraph {
6 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertOrder(tuples,4,3,2,1,0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(5,tuples.size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertOrder(tuples,0,2,1,3,4)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(5,tuples.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "tuples = getTuples(mstream)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "tuples = getTuples(mstream)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParams)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(5,tuples.size())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testMergeStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SolrParams sParams = StreamingTest.mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new FieldEqualitor(\"a_f\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tuples = getTuples(mstream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(4,tuples.size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testUniqueStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParams)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertOrder(tuples,0,1,2,3,4)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "List<Tuple> tuples = getTuples(mstream)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testUniqueStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(5,tuples.size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertOrder(tuples,2,0,1,3,4)@@@35@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
16->36 [style = bold, label=""];
28->15 [style = solid, label="sParamsA"];
36->11 [style = solid, label="streamA"];
3->2 [style = solid, label="tuples"];
28->15 [style = bold, label=""];
16->36 [style = solid, label="sParamsA"];
23->30 [style = bold, label=""];
3->1 [style = bold, label=""];
26->29 [style = solid, label="sParamsB"];
0->6 [style = bold, label=""];
19->20 [style = bold, label=""];
26->29 [style = bold, label=""];
4->8 [style = solid, label="sParams"];
43->25 [style = solid, label="streamA"];
7->8 [style = dashed, label="0"];
22->23 [style = solid, label="mstream"];
7->5 [style = solid, label="stream"];
11->24 [style = solid, label="mstream"];
36->32 [style = bold, label=""];
32->27 [style = bold, label=""];
29->18 [style = solid, label="streamB"];
5->3 [style = solid, label="ustream"];
42->31 [style = bold, label=""];
15->18 [style = solid, label="streamA"];
34->43 [style = solid, label="sParamsA"];
9->10 [style = bold, label=""];
12->22 [style = solid, label="streamB"];
11->24 [style = bold, label=""];
22->23 [style = bold, label=""];
25->17 [style = bold, label=""];
32->27 [style = solid, label="sParamsB"];
4->7 [style = bold, label=""];
19->20 [style = solid, label="sParamsA"];
41->31 [style = solid, label="tuples"];
29->18 [style = bold, label=""];
15->26 [style = bold, label=""];
24->14 [style = bold, label=""];
21->12 [style = bold, label=""];
20->21 [style = bold, label=""];
17->38 [style = bold, label=""];
18->41 [style = solid, label="mstream"];
33->39 [style = solid, label="sParamsB"];
6->10 [style = dashed, label="0"];
6->4 [style = bold, label=""];
7->5 [style = bold, label=""];
39->25 [style = solid, label="streamB"];
30->35 [style = bold, label=""];
33->39 [style = bold, label=""];
8->5 [style = bold, label=""];
27->11 [style = bold, label=""];
21->12 [style = solid, label="sParamsB"];
38->37 [style = bold, label=""];
27->11 [style = solid, label="streamB"];
10->4 [style = bold, label=""];
7->15 [style = dashed, label="0"];
43->33 [style = bold, label=""];
17->37 [style = solid, label="tuples"];
4->8 [style = bold, label=""];
24->40 [style = solid, label="tuples"];
8->5 [style = solid, label="stream"];
25->17 [style = solid, label="mstream"];
1->2 [style = bold, label=""];
2->41 [style = dashed, label="0"];
18->41 [style = bold, label=""];
39->25 [style = bold, label=""];
13->6 [style = bold, label=""];
4->7 [style = solid, label="sParams"];
35->34 [style = bold, label=""];
34->43 [style = bold, label=""];
23->35 [style = solid, label="tuples"];
20->22 [style = solid, label="streamA"];
31->19 [style = bold, label=""];
12->22 [style = bold, label=""];
37->16 [style = bold, label=""];
14->40 [style = bold, label=""];
6->28 [style = bold, label=""];
41->42 [style = bold, label=""];
}
