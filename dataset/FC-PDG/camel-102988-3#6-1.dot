digraph {
10 [style = filled, label = "String out = template.requestBody(\"mina2:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\",message,)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testSendHL7Message['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02.txt\")))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "message = message.substring(0,message.length() - 1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testSendHL7Message['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "line != null@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockEndpoint.assertIsSatisfied()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String line = \"\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1022,message.length())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "message += line + \"\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSendHL7Message['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "BufferedReader in = IOHelper.buffered(new InputStreamReader(getClass().getResourceAsStream(\"/mdm_t02-1022.txt\")))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "mockEndpoint.expectedMessageCount(1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String out = template.requestBody(\"mina:tcp://127.0.0.1:\" + getPort() + \"?sync=true&codec=#hl7codec\",message,)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "(line = in.readLine()) != null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(70010,message.length())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "template.requestBody(\"netty4:tcp://127.0.0.1:\" + getPort() + \"?sync=true&decoder=#hl7decoder&encoder=#hl7encoder\",message)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "MockEndpoint mockEndpoint = getMockEndpoint(\"mock:result\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String message = \"\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"some response\",out)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7->8 [style = solid, label="line"];
0->12 [style = solid, label="message"];
0->9 [style = bold, label=""];
10->4 [style = solid, label="out"];
0->13 [style = bold, label=""];
2->6 [style = bold, label=""];
10->12 [style = dashed, label="0"];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
12->4 [style = solid, label="out"];
8->6 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
0->17 [style = solid, label="message"];
19->16 [style = bold, label=""];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
12->4 [style = bold, label=""];
11->3 [style = bold, label=""];
7->6 [style = bold, label=""];
9->13 [style = dashed, label="0"];
17->15 [style = bold, label=""];
10->4 [style = bold, label=""];
16->5 [style = bold, label=""];
6->7 [style = dotted, label="true"];
0->10 [style = solid, label="message"];
14->18 [style = bold, label=""];
9->12 [style = bold, label=""];
6->7 [style = bold, label=""];
7->8 [style = dotted, label="true"];
5->6 [style = solid, label="line"];
7->6 [style = solid, label="line"];
13->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
}
