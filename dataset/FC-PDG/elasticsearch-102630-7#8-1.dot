digraph {
14 [style = filled, label = "testRestoreShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "source.refresh(\"test\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testRestoreShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "source.refresh(\"test\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "flushShard(source)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertTrue(target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState){try {cleanLuceneIndex(targetStore.directory())for (String file : sourceStore.directory().listAll()){if (file.equals(\"write.lock\") || file.startsWith(\"extra\")) {continue}targetStore.directory().copyFrom(sourceStore.directory(),file,file,IOContext.DEFAULT)}}catch (Exception ex) }}))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "closeShards(target)@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EngineTestCase.generateNewSeqNo(IndexShardTestCase.getEngine(source))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "randomBoolean()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final PlainActionFuture<Boolean> future = PlainActionFuture.newFuture()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"foo\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "IndexShard target = newStartedShard(true,Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),source.indexSettings().isSoftDeleteEnabled()).build())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "EngineTestCase.generateNewSeqNo(source.getEngine())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(IndexShardTestCase.getEngine(target),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Store sourceStore = source.store()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final Settings sourceSettings = Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(0L))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertDocs(target,\"1\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "target = reinitShard(target,routing)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(future.actionGet())@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "final IndexShard source = newStartedShard(true)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "final IndexShard source = newStartedShard(true,sourceSettings)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,\"test\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testRestoreShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "IndexShard target = newStartedShard(true,targetSettings,new FollowingEngineFactory())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState,ActionListener<Void> listener){ActionListener.completeWith(listener,null)}},future)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "Store targetStore = target.store()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "closeShards(target)@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "closeShard(source,false)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "target.markAsRecovering(\"store\",new RecoveryState(routing,localNode,null))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "closeShard(source,false)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41->44 [style = solid, label="sourceSettings"];
2->4 [style = solid, label="target"];
28->45 [style = dashed, label="0"];
5->7 [style = solid, label="source"];
35->43 [style = bold, label=""];
11->9 [style = bold, label=""];
47->22 [style = bold, label=""];
18->22 [style = bold, label=""];
34->32 [style = bold, label=""];
27->19 [style = solid, label="routing"];
8->4 [style = bold, label=""];
44->22 [style = solid, label="source"];
40->37 [style = bold, label=""];
22->25 [style = bold, label=""];
7->11 [style = bold, label=""];
28->18 [style = bold, label=""];
48->41 [style = bold, label=""];
27->0 [style = bold, label=""];
0->19 [style = bold, label=""];
5->18 [style = solid, label="source"];
19->20 [style = bold, label=""];
31->5 [style = bold, label=""];
2->16 [style = solid, label="target"];
0->19 [style = solid, label="snapshot"];
26->24 [style = bold, label=""];
43->46 [style = bold, label=""];
42->38 [style = solid, label="targetSettings"];
19->20 [style = solid, label="routing"];
44->45 [style = solid, label="source"];
27->17 [style = solid, label="target"];
33->30 [style = bold, label=""];
38->47 [style = bold, label=""];
13->49 [style = dashed, label="0"];
36->50 [style = bold, label=""];
13->15 [style = bold, label=""];
29->35 [style = bold, label=""];
27->21 [style = solid, label="target"];
34->32 [style = solid, label="future"];
12->27 [style = solid, label="routing"];
42->38 [style = bold, label=""];
30->15 [style = bold, label=""];
16->8 [style = dotted, label="true"];
44->42 [style = bold, label=""];
6->26 [style = bold, label=""];
39->16 [style = bold, label=""];
22->45 [style = bold, label=""];
16->8 [style = bold, label=""];
17->6 [style = bold, label=""];
22->16 [style = bold, label=""];
12->1 [style = solid, label="routing"];
22->25 [style = dotted, label="true"];
2->27 [style = solid, label="target"];
20->1 [style = bold, label=""];
2->10 [style = bold, label=""];
25->16 [style = bold, label=""];
15->3 [style = bold, label=""];
27->24 [style = solid, label="target"];
32->33 [style = bold, label=""];
4->7 [style = bold, label=""];
44->40 [style = solid, label="source"];
1->34 [style = bold, label=""];
11->12 [style = solid, label="routing"];
38->20 [style = solid, label="target"];
20->24 [style = solid, label="target"];
3->17 [style = bold, label=""];
9->12 [style = bold, label=""];
1->29 [style = bold, label=""];
12->27 [style = bold, label=""];
49->6 [style = bold, label=""];
8->12 [style = bold, label=""];
45->39 [style = bold, label=""];
14->5 [style = bold, label=""];
24->23 [style = bold, label=""];
10->28 [style = bold, label=""];
19->43 [style = solid, label="routing"];
46->49 [style = bold, label=""];
5->23 [style = solid, label="source"];
38->47 [style = solid, label="target"];
20->37 [style = solid, label="target"];
24->36 [style = bold, label=""];
5->2 [style = bold, label=""];
35->43 [style = solid, label="localNode"];
23->21 [style = bold, label=""];
9->12 [style = solid, label="snapshot"];
44->39 [style = solid, label="source"];
44->12 [style = solid, label="source"];
50->40 [style = bold, label=""];
20->1 [style = solid, label="localNode"];
20->50 [style = solid, label="target"];
41->44 [style = bold, label=""];
16->12 [style = bold, label=""];
5->10 [style = solid, label="source"];
29->13 [style = bold, label=""];
}
