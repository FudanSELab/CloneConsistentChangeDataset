digraph {
21 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.seek(tp0,0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "fetcher.sendFetches()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertEquals(147,(Double)partitionLag.metricValue(),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(100,(Double)partitionLag.metricValue(),EPSILON)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Double.NaN,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testFetcherMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "buildFetcher()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "subscriptions.unsubscribe()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,150L,0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "buildFetcher(OffsetResetStrategy.EARLIEST,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(197,(Double)partitionLag.metricValue(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@26@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "v++@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(100,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(50,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testFetcherMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(147,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,50L,0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(197,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "v < 3@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testReadCommittedLagMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(50,(Double)partitionLag.metricValue(),EPSILON)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int v = 0@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
1->37 [style = dashed, label="0"];
19->25 [style = dotted, label="true"];
28->15 [style = bold, label=""];
32->37 [style = bold, label=""];
24->2 [style = solid, label="partitionLagMetric"];
13->24 [style = solid, label="tags"];
0->6 [style = bold, label=""];
16->27 [style = solid, label="v"];
12->21 [style = bold, label=""];
19->17 [style = dotted, label="true"];
10->34 [style = dashed, label="0"];
16->25 [style = solid, label="v"];
4->13 [style = bold, label=""];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
20->28 [style = bold, label=""];
2->34 [style = bold, label=""];
35->33 [style = bold, label=""];
23->35 [style = dashed, label="0"];
34->7 [style = bold, label=""];
24->15 [style = solid, label="partitionLagMetric"];
31->19 [style = solid, label="v"];
19->27 [style = dotted, label="true"];
31->25 [style = solid, label="v"];
19->17 [style = bold, label=""];
16->19 [style = solid, label="v"];
16->19 [style = bold, label=""];
2->10 [style = bold, label=""];
16->17 [style = solid, label="v"];
24->18 [style = bold, label=""];
10->7 [style = bold, label=""];
22->5 [style = bold, label=""];
23->0 [style = bold, label=""];
29->21 [style = bold, label=""];
36->20 [style = bold, label=""];
19->25 [style = bold, label=""];
30->29 [style = bold, label=""];
25->17 [style = solid, label="v"];
9->32 [style = dashed, label="0"];
25->31 [style = bold, label=""];
3->9 [style = bold, label=""];
6->20 [style = bold, label=""];
26->12 [style = bold, label=""];
25->27 [style = solid, label="v"];
21->11 [style = bold, label=""];
25->19 [style = solid, label="v"];
6->36 [style = dashed, label="0"];
5->24 [style = bold, label=""];
19->23 [style = bold, label=""];
14->12 [style = bold, label=""];
19->27 [style = bold, label=""];
7->16 [style = bold, label=""];
19->35 [style = bold, label=""];
25->19 [style = bold, label=""];
33->36 [style = bold, label=""];
12->29 [style = dashed, label="0"];
0->33 [style = dashed, label="0"];
37->2 [style = bold, label=""];
1->2 [style = bold, label=""];
18->8 [style = bold, label=""];
13->22 [style = bold, label=""];
9->1 [style = bold, label=""];
3->32 [style = bold, label=""];
20->15 [style = bold, label=""];
27->25 [style = bold, label=""];
31->19 [style = bold, label=""];
19->31 [style = dotted, label="true"];
16->31 [style = solid, label="v"];
4->8 [style = solid, label="maxLagMetric"];
}
