digraph {
64 [style = filled, label = "revokedCount += 1@@@80@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@83@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssigned))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(toSet(newAssigned),subscriptions.assignedPartitions())@@@57@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "Collection<TopicPartition> added = getAdded(newAssigned,oldAssigned)@@@81@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testMetadataRefreshDuringRebalance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "coordinator.maybeUpdateSubscriptionMetadata()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest join = (JoinGroupRequest)bodyIterator<JoinGroupRequestData.JoinGroupRequestProtocol> protocolIterator = join.data().protocols().iterator()assertTrue(protocolIterator.hasNext())JoinGroupRequestData.JoinGroupRequestProtocol protocolMetadata = protocolIterator.next()ByteBuffer metadata = ByteBuffer.wrap(protocolMetadata.metadata())ConsumerPartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(metadata)metadata.rewind()return subscription.topics().contains(topic1)}},joinGroupLeaderResponse(3,consumerId,initialSubscription,Errors.NONE))@@@63@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "final List<TopicPartition> assigned = Arrays.asList(t1p)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<TopicPartition> oldAssigned = Arrays.asList(t1p)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(getRevoked(oldAssigned,newAssigned),rebalanceListener.revoked)@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "revoked = getRevoked(newAssigned,oldAssigned)@@@78@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(3,rebalanceListener.assignedCount)@@@87@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "List<TopicPartition> newAssigned = Arrays.asList(t1p,t2p)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<TopicPartition> owned = Collections.emptyList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topic1,otherTopic)),rebalanceListener)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@62@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "assertEquals(getRevoked(assigned,assigned),rebalanceListener.revoked)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(getRevoked(owned,oldAssigned),rebalanceListener.revoked)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2,rebalanceListener.revokedCount)@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@82@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@88@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertEquals(toSet(updatedSubscription),subscriptions.subscription())@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@85@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "int revokedCount = revoked.isEmpty()? 0: 1@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(oldAssigned,Errors.NONE))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "final Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))return true}},syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(getAdded(owned,oldAssigned),rebalanceListener.assigned)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertEquals(getAdded(oldAssigned,newAssigned),rebalanceListener.assigned)@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "client.prepareResponse(syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "assertEquals(1,rebalanceListener.revokedCount)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertFalse(revoked.isEmpty())@@@79@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "client.prepareResponse(syncGroupResponse(oldAssigned,Errors.NONE))@@@76@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(0,rebalanceListener.lostCount)@@@89@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topic1,topic2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "joinAsFollowerAndReceiveAssignment(\"consumer\",coordinator,assigned)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(getAdded(owned,assigned),rebalanceListener.assigned)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "rebalanceListener.revoked = null@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(getRevoked(owned,assigned),rebalanceListener.revoked)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "coordinator.joinGroupIfNeeded(time.timer(Long.MAX_VALUE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "testRejoinGroup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(getAdded(assigned,assigned),rebalanceListener.assigned)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topic1))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(toSet(newAssigned),subscriptions.assignedPartitions())@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
79 [style = filled, label = "client.prepareResponse(syncGroupResponse(assigned,Errors.NONE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(oldAssigned,newAssigned)@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(toSet(updatedSubscription),subscriptions.subscription())@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "subscriptions.subscribe(singleton(topic1),rebalanceListener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "rebalanceListener.assigned = null@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@86@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@84@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28->57 [style = solid, label="newAssigned"];
32->22 [style = bold, label=""];
7->29 [style = solid, label="updatedSubscriptions"];
16->41 [style = solid, label="oldAssigned"];
28->26 [style = solid, label="newAssigned"];
74->65 [style = bold, label=""];
64->51 [style = bold, label=""];
51->58 [style = solid, label="added"];
25->34 [style = bold, label=""];
40->54 [style = solid, label="revoked"];
16->30 [style = solid, label="oldAssigned"];
67->81 [style = bold, label=""];
57->1 [style = bold, label=""];
60->53 [style = bold, label=""];
5->15 [style = bold, label=""];
23->75 [style = dashed, label="0"];
8->6 [style = bold, label=""];
22->55 [style = solid, label="updatedSubscription"];
11->9 [style = bold, label=""];
16->51 [style = solid, label="oldAssigned"];
33->11 [style = bold, label=""];
65->18 [style = bold, label=""];
71->73 [style = solid, label="assigned"];
62->42 [style = bold, label=""];
45->43 [style = bold, label=""];
16->2 [style = solid, label="oldAssigned"];
64->63 [style = solid, label="revokedCount"];
28->53 [style = solid, label="newAssigned"];
34->17 [style = bold, label=""];
53->41 [style = bold, label=""];
72->73 [style = bold, label=""];
26->35 [style = bold, label=""];
70->68 [style = bold, label=""];
41->45 [style = bold, label=""];
16->20 [style = solid, label="oldAssigned"];
44->47 [style = bold, label=""];
15->0 [style = solid, label="consumerId"];
18->75 [style = solid, label="owned"];
45->50 [style = solid, label="subscription"];
40->37 [style = bold, label=""];
42->19 [style = bold, label=""];
14->20 [style = bold, label=""];
26->57 [style = dashed, label="0"];
83->82 [style = solid, label="revoked"];
44->36 [style = solid, label="revoked"];
54->52 [style = bold, label=""];
28->2 [style = solid, label="newAssigned"];
1->44 [style = bold, label=""];
71->82 [style = solid, label="assigned"];
66->75 [style = solid, label="assigned"];
28->17 [style = solid, label="newAssigned"];
63->54 [style = bold, label=""];
0->45 [style = solid, label="initialSubscription"];
80->78 [style = bold, label=""];
82->72 [style = bold, label=""];
59->4 [style = bold, label=""];
15->59 [style = solid, label="consumerId"];
66->78 [style = solid, label="assigned"];
30->36 [style = dashed, label="0"];
0->14 [style = solid, label="initialSubscription"];
16->43 [style = solid, label="oldAssigned"];
29->26 [style = bold, label=""];
66->69 [style = bold, label=""];
16->38 [style = solid, label="oldAssigned"];
52->58 [style = bold, label=""];
28->4 [style = solid, label="newAssigned"];
3->23 [style = bold, label=""];
20->8 [style = bold, label=""];
15->14 [style = solid, label="consumerId"];
7->59 [style = dashed, label="0"];
81->82 [style = bold, label=""];
47->2 [style = bold, label=""];
12->33 [style = bold, label=""];
15->32 [style = solid, label="consumerId"];
10->56 [style = dashed, label="0"];
31->28 [style = bold, label=""];
18->23 [style = solid, label="owned"];
22->14 [style = bold, label=""];
28->59 [style = bold, label=""];
29->57 [style = bold, label=""];
66->70 [style = solid, label="assigned"];
18->31 [style = solid, label="owned"];
2->55 [style = bold, label=""];
13->0 [style = bold, label=""];
17->10 [style = bold, label=""];
18->66 [style = bold, label=""];
24->12 [style = bold, label=""];
58->61 [style = bold, label=""];
46->56 [style = bold, label=""];
30->82 [style = dashed, label="0"];
56->36 [style = bold, label=""];
15->65 [style = dashed, label="0"];
21->27 [style = bold, label=""];
16->23 [style = solid, label="oldAssigned"];
6->21 [style = bold, label=""];
27->62 [style = bold, label=""];
16->24 [style = bold, label=""];
47->56 [style = solid, label="revokedCount"];
28->44 [style = solid, label="newAssigned"];
4->29 [style = bold, label=""];
7->4 [style = bold, label=""];
49->50 [style = bold, label=""];
35->25 [style = bold, label=""];
15->7 [style = solid, label="consumerId"];
3->62 [style = dashed, label="0"];
16->53 [style = solid, label="oldAssigned"];
28->30 [style = solid, label="newAssigned"];
39->40 [style = bold, label=""];
23->19 [style = bold, label=""];
36->60 [style = bold, label=""];
37->64 [style = bold, label=""];
28->40 [style = solid, label="newAssigned"];
16->32 [style = solid, label="oldAssigned"];
15->4 [style = solid, label="consumerId"];
79->67 [style = bold, label=""];
16->40 [style = solid, label="oldAssigned"];
1->2 [style = bold, label=""];
0->32 [style = bold, label=""];
28->51 [style = solid, label="newAssigned"];
43->39 [style = bold, label=""];
16->31 [style = solid, label="oldAssigned"];
10->30 [style = bold, label=""];
18->16 [style = bold, label=""];
75->80 [style = bold, label=""];
83->71 [style = bold, label=""];
15->45 [style = solid, label="consumerId"];
71->79 [style = solid, label="assigned"];
29->76 [style = dashed, label="0"];
24->69 [style = dashed, label="0"];
30->1 [style = bold, label=""];
19->31 [style = bold, label=""];
15->41 [style = solid, label="consumerId"];
27->3 [style = bold, label=""];
28->7 [style = bold, label=""];
78->83 [style = bold, label=""];
51->49 [style = bold, label=""];
2->73 [style = dashed, label="0"];
15->18 [style = bold, label=""];
16->66 [style = dashed, label="0"];
22->34 [style = solid, label="updatedSubscription"];
77->76 [style = bold, label=""];
55->46 [style = bold, label=""];
50->38 [style = bold, label=""];
71->77 [style = bold, label=""];
16->27 [style = solid, label="oldAssigned"];
59->29 [style = solid, label="updatedSubscriptions"];
38->63 [style = bold, label=""];
48->15 [style = bold, label=""];
68->75 [style = bold, label=""];
65->77 [style = solid, label="otherTopic"];
76->79 [style = bold, label=""];
69->70 [style = bold, label=""];
16->44 [style = solid, label="oldAssigned"];
23->42 [style = dashed, label="0"];
28->46 [style = solid, label="newAssigned"];
18->78 [style = solid, label="owned"];
15->29 [style = solid, label="consumerId"];
31->78 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
