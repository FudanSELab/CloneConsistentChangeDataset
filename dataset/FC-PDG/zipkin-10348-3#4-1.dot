digraph {
17 [style = filled, label = "assertThat(testFactory.values).containsExactly(\"bar\")@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertThat(calls).isNotEmpty()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFactory.maybeAdd(\"bar\",calls)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertThat(values).containsExactly(\"bar\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "AssertionError e@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "calls.get(0).execute()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "callFactory.maybeAdd(\"bar\",calls)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{}@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "exceptionsInvalidate_enqueue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "calls.get(0).execute()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<Call<Void>> calls = new ArrayList<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "{}@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "failValue.set(\"foo\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testFactory.maybeAdd(\"foo\",calls)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "AssertionError e@@@11@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "exceptionsInvalidate_execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "calls.get(1).execute()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "calls.get(0).enqueue(assertFailOnError)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "callFactory.maybeAdd(\"foo\",calls)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(testFactory.values).containsExactly(\"bar\",\"foo\")@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(values).containsExactly(\"bar\",\"foo\")@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testFactory.maybeAdd(\"foo\",calls)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "failBecauseExceptionWasNotThrown()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "failBecauseExceptionWasNotThrown()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(calls).isNotEmpty()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testFactory.failValue.set(\"foo\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "exceptionsInvalidate_enqueue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestFactory testFactory = new TestFactory()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "calls.clear()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "calls.get(1).enqueue(assertFailOnError)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "callFactory.maybeAdd(\"foo\",calls)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
4->10 [style = bold, label=""];
13->25 [style = bold, label=""];
28->29 [style = bold, label=""];
23->20 [style = bold, label=""];
7->2 [style = solid, label="calls"];
7->1 [style = bold, label=""];
2->20 [style = dashed, label="0"];
9->11 [style = bold, label=""];
12->28 [style = bold, label=""];
2->6 [style = bold, label=""];
10->19 [style = dashed, label="0"];
10->19 [style = bold, label=""];
25->9 [style = bold, label=""];
29->9 [style = bold, label=""];
7->0 [style = solid, label="calls"];
4->31 [style = dashed, label="0"];
9->17 [style = bold, label=""];
3->15 [style = bold, label=""];
0->21 [style = bold, label=""];
15->29 [style = dashed, label="0"];
24->22 [style = bold, label=""];
1->21 [style = solid, label="calls"];
1->23 [style = bold, label=""];
6->18 [style = dashed, label="0"];
20->18 [style = bold, label=""];
26->16 [style = bold, label=""];
6->27 [style = bold, label=""];
13->29 [style = bold, label=""];
0->14 [style = bold, label=""];
11->0 [style = bold, label=""];
17->0 [style = bold, label=""];
1->23 [style = solid, label="calls"];
7->1 [style = solid, label="calls"];
15->9 [style = bold, label=""];
31->10 [style = bold, label=""];
30->7 [style = bold, label=""];
0->21 [style = dashed, label="0"];
9->17 [style = dashed, label="0"];
6->8 [style = bold, label=""];
14->31 [style = bold, label=""];
18->13 [style = bold, label=""];
1->20 [style = solid, label="calls"];
5->7 [style = bold, label=""];
8->27 [style = dashed, label="0"];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
13->15 [style = bold, label=""];
22->1 [style = bold, label=""];
21->4 [style = bold, label=""];
1->23 [style = dashed, label="0"];
16->9 [style = bold, label=""];
8->13 [style = bold, label=""];
14->4 [style = bold, label=""];
}
