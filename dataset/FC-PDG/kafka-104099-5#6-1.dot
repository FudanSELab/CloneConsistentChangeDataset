digraph {
45 [style = filled, label = "subscriptions.put(consumer1,buildSubscription(topics(topic),r1partitions1))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertTrue(r2partitions2.containsAll(r1partitions2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<TopicPartition> r1partitions2 = assignment.get(consumer2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<TopicPartition> r2partitions2 = assignment.get(consumer2)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions1,Optional.of(1)))))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(r3partitions2.size() == 3 && r3partitions3.size() == 3)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "subscriptions.remove(consumer1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "subscriptions.put(consumer2,buildSubscriptionWithGeneration(topics(topic),r2partitions2,2))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r2partitions2,Optional.of(2)))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(assignor.isSticky())@@@41@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(Collections.disjoint(r3partitions2,r3partitions3))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "partitionsPerTopic.put(topic,6)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(r1partitions3,r3partitions3)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertFalse(Collections.disjoint(r2partitions2,r1partitions3))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(r2partitions1.containsAll(r1partitions1))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<TopicPartition> r2partitions1 = assignment.get(consumer1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String consumer2 = \"consumer2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(r1partitions2,r3partitions2)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "testAssignmentWithMultipleGenerations1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "String consumer3 = \"consumer3\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testAssignmentWithMultipleGenerations1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(r1partitions1,r3partitions1)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions2,Optional.of(1)))))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<TopicPartition> r3partitions2 = assignment.get(consumer2)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<TopicPartition> r3partitions1 = assignment.get(consumer1)@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(r2partitions1.size() == 3 && r2partitions2.size() == 3)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String consumer1 = \"consumer1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "subscriptions.remove(consumer1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "subscriptions.put(consumer3,buildSubscriptionWithGeneration(topics(topic),r1partitions3,1))@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertTrue(r1partitions1.size() == 2 && r1partitions2.size() == 2 && r1partitions3.size() == 2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "subscriptions.remove(consumer3)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<TopicPartition> r1partitions3 = assignment.get(consumer3)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(r3partitions1.size() == 2 && r3partitions2.size() == 2 && r3partitions3.size() == 2)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(6,r2partitions2.size())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<TopicPartition> r1partitions1 = assignment.get(consumer1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions1,Optional.of(1)))))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testAssignmentWithMultipleGenerations2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "List<TopicPartition> r3partitions3 = assignment.get(consumer3)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "subscriptions.put(consumer3,new Subscription(topics(topic),StickyAssignor.serializeTopicPartitionAssignment(new ConsumerUserData(r1partitions3,Optional.of(1)))))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(assignor.isSticky())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "subscriptions.put(consumer2,buildSubscription(topics(topic),r1partitions2))@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33->0 [style = solid, label="r2partitions2"];
23->20 [style = dashed, label="0"];
13->47 [style = bold, label=""];
34->5 [style = solid, label="consumer2"];
0->13 [style = bold, label=""];
28->20 [style = bold, label=""];
8->27 [style = solid, label="r1partitions1"];
58->32 [style = bold, label=""];
3->46 [style = solid, label="r1partitions3"];
21->8 [style = bold, label=""];
21->43 [style = solid, label="assignment"];
41->9 [style = bold, label=""];
12->27 [style = solid, label="consumer1"];
24->30 [style = dashed, label="0"];
38->31 [style = solid, label="assignment"];
38->2 [style = solid, label="assignment"];
3->29 [style = solid, label="r1partitions3"];
4->43 [style = solid, label="partitionsPerTopic"];
3->18 [style = bold, label=""];
4->38 [style = solid, label="partitionsPerTopic"];
19->5 [style = bold, label=""];
33->52 [style = solid, label="r2partitions2"];
17->51 [style = solid, label="r1partitions2"];
55->57 [style = solid, label="r3partitions3"];
28->48 [style = solid, label="r3partitions2"];
15->11 [style = bold, label=""];
50->5 [style = bold, label=""];
34->17 [style = solid, label="consumer2"];
4->41 [style = solid, label="partitionsPerTopic"];
37->38 [style = bold, label=""];
2->44 [style = bold, label=""];
45->42 [style = bold, label=""];
14->9 [style = bold, label=""];
38->16 [style = solid, label="assignment"];
13->22 [style = bold, label=""];
28->55 [style = bold, label=""];
5->37 [style = bold, label=""];
17->2 [style = solid, label="r1partitions2"];
12->8 [style = solid, label="consumer1"];
8->45 [style = solid, label="r1partitions1"];
31->44 [style = dashed, label="0"];
2->31 [style = bold, label=""];
36->6 [style = bold, label=""];
12->50 [style = solid, label="consumer1"];
25->3 [style = solid, label="consumer3"];
12->45 [style = solid, label="consumer1"];
27->0 [style = bold, label=""];
4->21 [style = solid, label="partitionsPerTopic"];
49->58 [style = bold, label=""];
3->0 [style = solid, label="r1partitions3"];
9->32 [style = bold, label=""];
18->15 [style = bold, label=""];
34->42 [style = solid, label="consumer2"];
25->37 [style = solid, label="consumer3"];
43->11 [style = bold, label=""];
8->17 [style = bold, label=""];
28->14 [style = solid, label="assignment"];
30->24 [style = solid, label="r3partitions3"];
44->16 [style = bold, label=""];
8->30 [style = solid, label="r1partitions1"];
12->36 [style = solid, label="consumer1"];
8->1 [style = solid, label="r1partitions1"];
25->46 [style = solid, label="consumer3"];
3->56 [style = solid, label="r1partitions3"];
20->24 [style = solid, label="r3partitions2"];
38->33 [style = bold, label=""];
25->29 [style = solid, label="consumer3"];
34->33 [style = solid, label="consumer2"];
21->11 [style = solid, label="assignment"];
42->37 [style = bold, label=""];
6->26 [style = bold, label=""];
28->9 [style = solid, label="assignment"];
16->27 [style = bold, label=""];
46->28 [style = bold, label=""];
21->15 [style = solid, label="assignment"];
22->29 [style = bold, label=""];
15->43 [style = dashed, label="0"];
4->44 [style = solid, label="partitionsPerTopic"];
22->58 [style = solid, label="assignment"];
24->41 [style = bold, label=""];
27->52 [style = bold, label=""];
26->21 [style = bold, label=""];
40->12 [style = bold, label=""];
3->57 [style = solid, label="r1partitions3"];
51->2 [style = bold, label=""];
33->22 [style = solid, label="r2partitions2"];
17->42 [style = solid, label="r1partitions2"];
17->3 [style = bold, label=""];
11->50 [style = bold, label=""];
39->1 [style = bold, label=""];
34->52 [style = solid, label="consumer2"];
34->28 [style = solid, label="consumer2"];
25->56 [style = solid, label="consumer3"];
10->33 [style = bold, label=""];
1->2 [style = bold, label=""];
34->6 [style = solid, label="consumer2"];
38->44 [style = solid, label="assignment"];
4->22 [style = solid, label="partitionsPerTopic"];
17->48 [style = solid, label="r1partitions2"];
22->49 [style = solid, label="assignment"];
53->12 [style = bold, label=""];
14->41 [style = dashed, label="0"];
54->51 [style = bold, label=""];
28->41 [style = solid, label="assignment"];
4->35 [style = bold, label=""];
39->54 [style = dashed, label="0"];
34->25 [style = bold, label=""];
34->47 [style = solid, label="consumer2"];
55->20 [style = bold, label=""];
48->57 [style = bold, label=""];
38->10 [style = bold, label=""];
31->16 [style = bold, label=""];
7->12 [style = bold, label=""];
12->29 [style = solid, label="consumer1"];
30->23 [style = bold, label=""];
29->30 [style = solid, label="r3partitions1"];
33->47 [style = solid, label="r2partitions2"];
11->45 [style = bold, label=""];
25->4 [style = bold, label=""];
52->56 [style = bold, label=""];
47->46 [style = bold, label=""];
12->34 [style = bold, label=""];
4->28 [style = solid, label="partitionsPerTopic"];
12->19 [style = solid, label="consumer1"];
11->19 [style = bold, label=""];
12->13 [style = solid, label="consumer1"];
24->14 [style = bold, label=""];
29->28 [style = bold, label=""];
23->24 [style = bold, label=""];
25->55 [style = solid, label="consumer3"];
33->39 [style = bold, label=""];
18->43 [style = bold, label=""];
17->5 [style = solid, label="r1partitions2"];
25->30 [style = solid, label="consumer3"];
56->22 [style = bold, label=""];
25->26 [style = solid, label="consumer3"];
57->49 [style = bold, label=""];
35->36 [style = bold, label=""];
30->48 [style = bold, label=""];
8->19 [style = solid, label="r1partitions1"];
20->30 [style = bold, label=""];
33->54 [style = bold, label=""];
12->10 [style = solid, label="consumer1"];
34->20 [style = solid, label="consumer2"];
34->22 [style = solid, label="consumer2"];
}
