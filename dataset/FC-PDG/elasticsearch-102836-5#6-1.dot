digraph {
10 [style = filled, label = "DocumentMapper mapper = mapperParser.parse(\"type\",new CompressedXContent(mapping))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(fooMapper,instanceOf())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDynamicDottedFieldNameLongArrayWithParentTemplate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(4,doc.rootDoc().getFields(\"foo.bar.baz\").length)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testDynamicDottedFieldNameLongArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(fooMapper)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "BytesReference bytes = BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startArray(\"foo.bar.baz\").value(0).value(1).endArray().endObject())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(bazMapper)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testDynamicDottedFieldNameLongArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(bazMapper,instanceOf())@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(barMapper,instanceOf())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ParsedDocument doc = mapper.parse(new SourceToParse(\"test\",\"type\",\"1\",bytes,XContentType.JSON))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").endObject().endObject())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mapper bazMapper = ((ObjectMapper)barMapper).getMapper(\"baz\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ParsedDocument doc = mapper.parse(new SourceToParse(\"test\",\"1\",bytes,XContentType.JSON))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Mapper barMapper = ((ObjectMapper)fooMapper).getMapper(\"bar\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "DocumentMapperParser mapperParser = createIndex(\"test\").mapperService().documentMapperParser()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Mapper fooMapper = doc.dynamicMappingsUpdate().root().getMapper(\"foo\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(barMapper)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startArray(\"dynamic_templates\").startObject().startObject(\"georule\").field(\"match\",\"foo*\").startObject(\"mapping\").field(\"type\",\"object\").endObject().endObject().endObject().endArray().endObject().endObject())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
16->15 [style = bold, label=""];
8->16 [style = solid, label="bytes"];
6->7 [style = solid, label="fooMapper"];
2->19 [style = dashed, label="0"];
19->10 [style = solid, label="mapping"];
11->1 [style = bold, label=""];
4->13 [style = bold, label=""];
3->11 [style = bold, label=""];
5->15 [style = bold, label=""];
19->10 [style = bold, label=""];
12->0 [style = solid, label="bazMapper"];
15->6 [style = bold, label=""];
2->10 [style = bold, label=""];
12->14 [style = solid, label="bazMapper"];
5->16 [style = dashed, label="0"];
7->9 [style = bold, label=""];
13->19 [style = bold, label=""];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
14->0 [style = bold, label=""];
12->14 [style = bold, label=""];
18->13 [style = bold, label=""];
1->12 [style = bold, label=""];
6->9 [style = solid, label="fooMapper"];
9->3 [style = bold, label=""];
3->1 [style = solid, label="barMapper"];
17->13 [style = bold, label=""];
6->7 [style = bold, label=""];
2->10 [style = solid, label="mapping"];
8->5 [style = solid, label="bytes"];
3->11 [style = solid, label="barMapper"];
13->2 [style = bold, label=""];
}
