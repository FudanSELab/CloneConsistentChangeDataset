digraph {
10 [style = filled, label = "when(someResponse.getStatusCode()).thenReturn(200)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String someValue = \"someValue\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "configurations.put(\"someKey2\",\"someValue2\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,String> configurations = Maps.newLinkedHashMap()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Properties config = remoteConfigRepository.getConfig()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testLoadConfigWithAccessKeySecret['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testLoadConfigWithAccessKeySecret['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "String(( expectedArrays = {\"someKey\",\"someKey2\"}@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(someResponse.getBody()).thenReturn(someApolloConfig)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Properties config = remoteConfigRepository.getConfig()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(config instanceof OrderedProperties)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "ApolloConfig someApolloConfig = assembleApolloConfig(configurations)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertArrayEquals(expectedArrays,actualArrays)@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(ConfigSourceType.REMOTE,remoteConfigRepository.getSourceType())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "doAnswer(new Answer<HttpResponse<ApolloConfig>>(){@Override public HttpResponse<ApolloConfig> answer(InvocationOnMock invocation){HttpRequest request = invocation.getArgumentAt(0,)Map<String,String> headers = request.getHeaders()assertNotNull(headers)assertTrue(headers.containsKey(Signature.HTTP_HEADER_TIMESTAMP))assertTrue(headers.containsKey(HttpHeaders.AUTHORIZATION))return someResponse}}).when(httpUtil).doGet(any(),any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "configurations.put(someKey,someValue)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String(( actualArrays = config.keySet().toArray(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@6dabc2)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(ConfigSourceType.REMOTE,remoteConfigRepository.getSourceType())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(configurations,config)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,String> configurations = Maps.newHashMap()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testLoadConfigWithOrderedProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "RemoteConfigRepository remoteConfigRepository = new RemoteConfigRepository(someNamespace)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "remoteConfigLongPollService.stopLongPollingRefresh()@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "someSecret = \"someSecret\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new OrderedProperties()}})@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->14 [style = bold, label=""];
4->6 [style = bold, label=""];
3->14 [style = bold, label=""];
26->0 [style = solid, label="someApolloConfig"];
15->1 [style = bold, label=""];
21->22 [style = bold, label=""];
9->4 [style = bold, label=""];
4->14 [style = solid, label="configurations"];
4->9 [style = dashed, label="0"];
4->10 [style = solid, label="configurations"];
6->26 [style = bold, label=""];
2->5 [style = bold, label=""];
2->8 [style = dashed, label="0"];
18->5 [style = bold, label=""];
12->1 [style = bold, label=""];
5->23 [style = solid, label="actualArrays"];
0->8 [style = bold, label=""];
26->10 [style = bold, label=""];
25->17 [style = bold, label=""];
14->11 [style = bold, label=""];
10->0 [style = bold, label=""];
17->20 [style = solid, label="config"];
20->19 [style = bold, label=""];
11->7 [style = bold, label=""];
6->10 [style = bold, label=""];
9->24 [style = bold, label=""];
8->2 [style = bold, label=""];
14->23 [style = solid, label="expectedArrays"];
9->20 [style = solid, label="configurations"];
8->25 [style = bold, label=""];
3->14 [style = solid, label="config"];
13->24 [style = solid, label="someValue"];
9->26 [style = solid, label="configurations"];
13->6 [style = solid, label="someKey"];
17->16 [style = solid, label="config"];
16->20 [style = bold, label=""];
14->23 [style = bold, label=""];
22->24 [style = solid, label="someKey"];
5->3 [style = bold, label=""];
13->9 [style = bold, label=""];
24->6 [style = bold, label=""];
9->6 [style = solid, label="someValue"];
17->16 [style = bold, label=""];
19->18 [style = bold, label=""];
22->13 [style = bold, label=""];
1->13 [style = bold, label=""];
10->8 [style = solid, label="someApolloConfig"];
}
