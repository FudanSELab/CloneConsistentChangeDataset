digraph {
21 [style = filled, label = "Trigger deletionTrigger = Trigger.deletedOrSetData()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "node.debugCreateNodeLatch.countDown()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "node.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@25@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertNotNull(stat,\"node should exist: \" + path)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "{CloseableUtils.closeQuietly(node)}@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "node.debugCreateNodeLatch = new CountDownLatch(1)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.multiple(1.5).forSessionSleep().seconds(),TimeUnit.SECONDS))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
34->29 [style = bold, label=""];
8->11 [style = solid, label="i"];
12->17 [style = dotted, label="true"];
10->20 [style = bold, label=""];
16->11 [style = bold, label=""];
24->19 [style = bold, label=""];
5->9 [style = solid, label="path"];
31->28 [style = solid, label="originalNode"];
20->3 [style = solid, label="node"];
28->34 [style = bold, label=""];
12->23 [style = dotted, label="true"];
10->14 [style = bold, label=""];
17->6 [style = bold, label=""];
5->18 [style = solid, label="path"];
12->21 [style = bold, label=""];
10->28 [style = solid, label="curator"];
9->4 [style = bold, label=""];
10->20 [style = solid, label="curator"];
20->0 [style = bold, label=""];
4->19 [style = bold, label=""];
2->16 [style = solid, label="stat"];
14->18 [style = solid, label="observer"];
12->15 [style = dotted, label="true"];
12->1 [style = dotted, label="true"];
12->2 [style = dotted, label="true"];
11->12 [style = bold, label=""];
1->21 [style = dashed, label="0"];
5->18 [style = bold, label=""];
7->31 [style = bold, label=""];
5->24 [style = solid, label="path"];
26->24 [style = bold, label=""];
12->1 [style = bold, label=""];
31->32 [style = solid, label="originalNode"];
22->23 [style = bold, label=""];
5->26 [style = solid, label="path"];
12->21 [style = dotted, label="true"];
32->33 [style = bold, label=""];
1->9 [style = bold, label=""];
26->24 [style = solid, label="stat"];
32->33 [style = solid, label="stat"];
0->7 [style = bold, label=""];
6->2 [style = bold, label=""];
5->22 [style = solid, label="path"];
22->23 [style = solid, label="stat"];
12->11 [style = dotted, label="true"];
12->26 [style = dotted, label="true"];
21->26 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
5->2 [style = solid, label="path"];
12->22 [style = dotted, label="true"];
11->12 [style = solid, label="i"];
12->16 [style = dotted, label="true"];
12->19 [style = dotted, label="true"];
12->6 [style = dotted, label="true"];
29->32 [style = bold, label=""];
9->26 [style = dashed, label="0"];
12->24 [style = dotted, label="true"];
33->30 [style = bold, label=""];
5->31 [style = dashed, label="0"];
20->30 [style = solid, label="node"];
18->28 [style = dashed, label="0"];
25->10 [style = bold, label=""];
35->10 [style = bold, label=""];
18->8 [style = bold, label=""];
12->3 [style = bold, label=""];
31->28 [style = bold, label=""];
12->4 [style = dotted, label="true"];
19->15 [style = bold, label=""];
2->22 [style = bold, label=""];
23->11 [style = bold, label=""];
8->12 [style = solid, label="i"];
2->22 [style = dashed, label="0"];
12->27 [style = bold, label=""];
8->12 [style = bold, label=""];
20->27 [style = solid, label="node"];
14->20 [style = bold, label=""];
12->9 [style = dotted, label="true"];
31->34 [style = solid, label="originalNode"];
2->16 [style = bold, label=""];
}
