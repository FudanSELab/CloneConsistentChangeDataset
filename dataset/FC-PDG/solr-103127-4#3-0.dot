digraph {
8 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = null@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "createCore()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A4\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Deque<Long> versions = new ArrayDeque<>()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertJQ(req(\"q\",\"id:A3\"),\"/response/numFound==0\")@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(UpdateLog.State.ACTIVE,h.getCore().getUpdateHandler().getUpdateLog().getState())@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertJQ(req(\"q\",\"id:A5\"),\"/response/numFound==0\")@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testLogReplay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A3\",\"val_i_dvo\",map(\"set\",102)),null))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"val_i_dvo:201\",null))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A4\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "versions.addFirst(deleteAndGetVersion(\"A5\",null))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "int permits = logReplay.availablePermits()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DirectUpdateHandler2.commitOnClose = false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertJQ(req(\"q\",\"id:A4\"),\"/response/numFound==1\")@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A5\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertJQ(req(\"q\",\"id:A5\"),\"/response/numFound==0\")@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:202\"),\"/response/numFound==1\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A11\"),null))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "clearIndex()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final Semaphore logReplayFinish = new Semaphore(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"id:A2\",null))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Semaphore logReplay = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertJQ(req(\"q\",\"id:A4\"),\"/response/numFound==1\")@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"val_i_dvo:102\",null))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==5\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertJQ(req(\"q\",\"id:A4\"),\"/response/numFound==1\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A2\",\"val_i_dvo\",\"1\"),null))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "h.close()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertJQ(req(\"q\",\"id:A3\"),\"/response/numFound==0\")@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = null}@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "createCore()@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = null@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(TIMEOUT,TimeUnit.SECONDS))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "createCore()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testLogReplay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "logReplay.release(1000)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertJQ(req(\"q\",\"id:A10\"),\"/response/numFound==1\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(TIMEOUT,TimeUnit.SECONDS))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "assertEquals(permits,logReplay.availablePermits())@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertU(adoc(\"id\",\"A10\"))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A2\",\"val_i_dvo\",map(\"set\",2)),null))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "createCore()@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertJQ(req(\"q\",\"id:A3\"),\"/response/numFound==0\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A12\"),null))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertU(commit())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testLogReplayWithInPlaceUpdatesAndDeletes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int permits = logReplay.availablePermits()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertJQ(req(\"q\",\"id:A10\"),\"/response/numFound==1\")@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertJQ(req(\"q\",\"val_i_dvo:202\"),\"/response/numFound==1\")@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "UpdateLog.testing_logReplayHook = null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "h.close()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "logReplay.release(1000)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Thread.sleep(100)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A4\",\"val_i_dvo\",\"200\"),null))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(permits,logReplay.availablePermits())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==5\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "createCore()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A5\",\"val_i_dvo\",\"300\"),null))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "h.close()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A1\"),null))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertJQ(req(\"q\",\"id:A5\"),\"/response/numFound==0\")@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"id:A11\",null))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "h.close()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A5\",\"val_i_dvo\",map(\"inc\",\"1\")),null))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A13\"),null))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(UpdateLog.State.ACTIVE,h.getCore().getUpdateHandler().getUpdateLog().getState())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = null}@@@75@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "h.close()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A3\",\"val_i_dvo\",\"101\"),null))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
14->3 [style = bold, label=""];
10->15 [style = solid, label="permits"];
62->76 [style = bold, label=""];
41->76 [style = dashed, label="0"];
51->53 [style = bold, label=""];
1->30 [style = bold, label=""];
38->42 [style = bold, label=""];
22->4 [style = bold, label=""];
47->49 [style = bold, label=""];
52->47 [style = bold, label=""];
23->22 [style = bold, label=""];
36->2 [style = bold, label=""];
21->1 [style = bold, label=""];
80->83 [style = bold, label=""];
9->5 [style = bold, label=""];
78->71 [style = bold, label=""];
56->7 [style = bold, label=""];
12->54 [style = bold, label=""];
88->48 [style = bold, label=""];
75->60 [style = bold, label=""];
4->16 [style = bold, label=""];
40->37 [style = bold, label=""];
82->91 [style = bold, label=""];
87->61 [style = bold, label=""];
42->54 [style = dashed, label="0"];
32->44 [style = dashed, label="0"];
79->69 [style = bold, label=""];
10->31 [style = bold, label=""];
59->90 [style = bold, label=""];
39->89 [style = bold, label=""];
30->27 [style = bold, label=""];
39->8 [style = bold, label=""];
69->64 [style = bold, label=""];
16->32 [style = bold, label=""];
5->74 [style = bold, label=""];
49->82 [style = bold, label=""];
32->26 [style = bold, label=""];
15->35 [style = bold, label=""];
54->58 [style = bold, label=""];
2->39 [style = bold, label=""];
73->59 [style = bold, label=""];
45->14 [style = bold, label=""];
5->45 [style = dashed, label="0"];
70->75 [style = bold, label=""];
31->41 [style = bold, label=""];
65->55 [style = bold, label=""];
83->67 [style = bold, label=""];
18->40 [style = solid, label="versions"];
13->64 [style = dashed, label="0"];
30->79 [style = dashed, label="0"];
18->9 [style = solid, label="versions"];
57->70 [style = bold, label=""];
8->24 [style = bold, label=""];
35->29 [style = bold, label=""];
67->66 [style = bold, label=""];
1->86 [style = dashed, label="0"];
25->18 [style = bold, label=""];
0->11 [style = bold, label=""];
60->84 [style = bold, label=""];
85->62 [style = bold, label=""];
8->89 [style = dashed, label="0"];
66->87 [style = bold, label=""];
68->51 [style = bold, label=""];
42->0 [style = bold, label=""];
43->7 [style = bold, label=""];
6->20 [style = bold, label=""];
63->12 [style = bold, label=""];
3->28 [style = bold, label=""];
13->19 [style = bold, label=""];
71->80 [style = bold, label=""];
72->63 [style = bold, label=""];
84->85 [style = bold, label=""];
16->44 [style = bold, label=""];
24->25 [style = bold, label=""];
21->86 [style = bold, label=""];
53->72 [style = bold, label=""];
74->68 [style = bold, label=""];
77->38 [style = bold, label=""];
34->23 [style = bold, label=""];
41->12 [style = bold, label=""];
18->21 [style = bold, label=""];
19->40 [style = bold, label=""];
7->36 [style = bold, label=""];
46->73 [style = bold, label=""];
55->78 [style = bold, label=""];
89->24 [style = bold, label=""];
28->10 [style = bold, label=""];
48->57 [style = bold, label=""];
50->88 [style = bold, label=""];
18->20 [style = solid, label="versions"];
11->6 [style = bold, label=""];
12->15 [style = bold, label=""];
90->52 [style = bold, label=""];
18->38 [style = solid, label="versions"];
64->46 [style = bold, label=""];
5->14 [style = bold, label=""];
33->9 [style = bold, label=""];
85->66 [style = solid, label="permits"];
58->81 [style = bold, label=""];
20->33 [style = bold, label=""];
81->50 [style = bold, label=""];
17->7 [style = bold, label=""];
26->38 [style = bold, label=""];
18->16 [style = solid, label="versions"];
14->88 [style = dashed, label="0"];
18->22 [style = solid, label="versions"];
44->26 [style = bold, label=""];
9->45 [style = bold, label=""];
37->34 [style = bold, label=""];
27->69 [style = dashed, label="0"];
18->42 [style = solid, label="versions"];
76->65 [style = bold, label=""];
18->12 [style = solid, label="versions"];
86->79 [style = bold, label=""];
26->74 [style = dashed, label="0"];
91->77 [style = bold, label=""];
}
