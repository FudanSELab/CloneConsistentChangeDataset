digraph {
0 [style = filled, label = "final ObjectSpecification domainTypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "@QueryParam(\"supertype\") final String superTypeStr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "domainTypeIsSubtypeOf['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "domainTypeIsSupertypeOf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final ObjectSpecification supertypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(supertype))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "renderer.with(domainTypeSpec).withSelf(selfLink).withValue(value)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "val domainTypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(domainType))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final boolean value = domainTypeSpec.isOfType(supertypeSpec)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "val supertypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(supertype))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "final LinkBuilder linkBuilder = LinkBuilder.newBuilder(getResourceContext(),Rel.SELF.getName(),RepresentationType.TYPE_ACTION_RESULT,url)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final TypeActionResultReprRenderer renderer = new TypeActionResultReprRenderer(getResourceContext(),null,JsonRepresentation.newMap())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "@QueryParam(\"subtype\") final String subTypeStr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final String url = \"domain-types/\" + domainType + \"/type-actions/isSupertypeOf/invoke\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final JsonRepresentation arguments = DomainTypeReprRenderer.argumentsTo(getResourceContext(),\"subtype\",subtypeSpec)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "@QueryParam(\"supertype\") final String superTypeStr@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final String supertype = domainTypeFor(superTypeStr,argsUrlEncoded,\"supertype\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final JsonRepresentation arguments = DomainTypeReprRenderer.argumentsTo(getResourceContext(),\"supertype\",supertypeSpec)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final JsonRepresentation selfLink = linkBuilder.withArguments(arguments).build()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final boolean value = subtypeSpec.isOfType(domainTypeSpec)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String url = \"domain-types/\" + domainType + \"/type-actions/isSubtypeOf/invoke\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "init(ResourceDescriptor.generic(Where.ANYWHERE,RepresentationService.Intent.NOT_APPLICABLE))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "domainTypeIsSubtypeOf['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return Responses.ofOk(renderer,Caching.ONE_DAY).build()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "@PathParam(\"domainType\") final String domainType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final ObjectSpecification subtypeSpec = getSpecificationLoader().lookupBySpecIdElseLoad(ObjectSpecId.of(subtype))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "@QueryParam(\"args\") final String argsUrlEncoded@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final String subtype = domainTypeFor(subTypeStr,argsUrlEncoded,\"subtype\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9->12 [style = solid, label="supertypeSpec"];
14->24 [style = dashed, label="0"];
0->9 [style = bold, label=""];
22->15 [style = bold, label=""];
12->23 [style = dashed, label="0"];
10->14 [style = bold, label=""];
18->16 [style = dotted, label="true"];
12->6 [style = solid, label="value"];
14->17 [style = solid, label="supertype"];
24->0 [style = bold, label=""];
10->24 [style = bold, label=""];
0->19 [style = dashed, label="0"];
9->28 [style = dashed, label="0"];
21->22 [style = solid, label="domainType"];
14->19 [style = bold, label=""];
28->13 [style = bold, label=""];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
18->8 [style = dotted, label="true"];
19->17 [style = bold, label=""];
27->24 [style = solid, label="subTypeStr"];
29->24 [style = solid, label="argsUrlEncoded"];
28->26 [style = solid, label="subtypeSpec"];
0->28 [style = bold, label=""];
18->20 [style = dotted, label="true"];
25->29 [style = dotted, label="true"];
12->6 [style = bold, label=""];
3->22 [style = dashed, label="0"];
4->26 [style = dashed, label="0"];
20->3 [style = solid, label="domainType"];
26->11 [style = bold, label=""];
22->15 [style = solid, label="url"];
7->0 [style = solid, label="domainType"];
15->26 [style = bold, label=""];
7->3 [style = solid, label="domainType"];
3->15 [style = solid, label="url"];
1->7 [style = dotted, label="true"];
6->5 [style = bold, label=""];
8->14 [style = solid, label="superTypeStr"];
21->0 [style = solid, label="domainType"];
14->0 [style = bold, label=""];
13->3 [style = bold, label=""];
18->10 [style = bold, label=""];
14->9 [style = solid, label="supertype"];
2->14 [style = solid, label="superTypeStr"];
20->19 [style = solid, label="domainType"];
0->23 [style = solid, label="domainTypeSpec"];
23->6 [style = bold, label=""];
9->17 [style = dashed, label="0"];
23->6 [style = solid, label="value"];
15->4 [style = bold, label=""];
1->8 [style = dotted, label="true"];
8->14 [style = solid, label="argsUrlEncoded"];
17->4 [style = solid, label="supertypeSpec"];
25->10 [style = bold, label=""];
17->13 [style = bold, label=""];
13->22 [style = bold, label=""];
16->14 [style = solid, label="argsUrlEncoded"];
4->11 [style = bold, label=""];
1->2 [style = dotted, label="true"];
1->10 [style = bold, label=""];
25->27 [style = dotted, label="true"];
24->28 [style = solid, label="subtype"];
9->4 [style = solid, label="supertypeSpec"];
11->23 [style = bold, label=""];
8->29 [style = dashed, label="0"];
17->12 [style = solid, label="supertypeSpec"];
25->21 [style = dotted, label="true"];
9->13 [style = bold, label=""];
}
