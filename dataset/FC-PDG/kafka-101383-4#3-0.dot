digraph {
14 [style = filled, label = "assertEquals(6,processor.processed.size())@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "String(( expected = {\"2:10\",\"20:110\",\"200:1110\",\"2000:11110\",\"-1:2\",\"-1:3\"}@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(6,processor.processed.size())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "driver = new TopologyTestDriver(builder.build(),props,0L)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "kstreamDriver.process(topicName,expectedKey,expectedKey * 10)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "driver.advanceWallClockTime(2)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "driver.advanceWallClockTime(1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "kstreamDriver.punctuate(2)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testTransformWithNewDriverAndPunctuator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(6,processor.theCapturedProcessor().processed.size())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(expected(i(,processor.processed.get(i))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testTransformWithNewDriverAndPunctuator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(expected(i(,processor.processed.get(i))@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "kstreamDriver.punctuate(3)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "kstreamDriver.setUp(builder)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i < expected.length@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MockProcessorSupplier<Integer,Integer> processor = new MockProcessorSupplier<>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KStream<Integer,Integer> stream = builder.stream(topicName,Consumed.with(intSerde,intSerde))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i < expected.length@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final int(( expectedKeys = {1,10,100,1000}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "stream.transform(transformerSupplier).process(processor)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "KStream<Integer,Integer> stream = builder.stream(topicName,Consumed.with(intSerde,intSerde))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(expected(i(,processor.theCapturedProcessor().processed.get(i))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "driver.pipeInput(recordFactory.create(topicName,expectedKey,expectedKey * 10,0L))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testTransform['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "i++@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TransformerSupplier<Number,Number,KeyValue<Integer,Integer>> transformerSupplier = new TransformerSupplier<Number,Number,KeyValue<Integer,Integer>>(){public Transformer<Number,Number,KeyValue<Integer,Integer>> get(){return new Transformer<Number,Number,KeyValue<Integer,Integer>>(){@Override public void init(ProcessorContext context){}@Override public KeyValue<Integer,Integer> transform(Number key,Number value){total += value.intValue()return KeyValue.pair(key.intValue() * 2,total)}@Override public KeyValue<Integer,Integer> punctuate(long timestamp){return KeyValue.pair(-1,(int)timestamp)}@Override public void close(){}}}}@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->18 [style = dotted, label="true"];
15->2 [style = solid, label="expected"];
5->29 [style = bold, label=""];
5->10 [style = bold, label=""];
10->18 [style = bold, label=""];
3->22 [style = solid, label="processor"];
1->4 [style = bold, label=""];
28->5 [style = bold, label=""];
11->12 [style = solid, label="processor"];
0->18 [style = solid, label="i"];
23->27 [style = bold, label=""];
6->11 [style = solid, label="builder"];
26->3 [style = bold, label=""];
5->2 [style = solid, label="i"];
3->11 [style = bold, label=""];
12->20 [style = bold, label=""];
29->5 [style = solid, label="i"];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
16->17 [style = bold, label=""];
15->5 [style = solid, label="i"];
25->6 [style = bold, label=""];
12->9 [style = bold, label=""];
19->6 [style = bold, label=""];
15->29 [style = solid, label="i"];
7->3 [style = bold, label=""];
15->5 [style = bold, label=""];
7->26 [style = bold, label=""];
29->28 [style = bold, label=""];
0->10 [style = solid, label="i"];
28->29 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
28->5 [style = dotted, label="true"];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
20->23 [style = bold, label=""];
24->5 [style = solid, label="expected"];
15->28 [style = bold, label=""];
10->2 [style = dotted, label="true"];
21->22 [style = bold, label=""];
11->13 [style = bold, label=""];
5->18 [style = solid, label="i"];
17->15 [style = bold, label=""];
2->18 [style = dashed, label="0"];
5->0 [style = solid, label="i"];
16->14 [style = bold, label=""];
3->21 [style = bold, label=""];
10->0 [style = dotted, label="true"];
14->15 [style = bold, label=""];
10->2 [style = bold, label=""];
27->24 [style = bold, label=""];
15->28 [style = solid, label="i"];
14->17 [style = dashed, label="0"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
5->10 [style = solid, label="i"];
15->18 [style = solid, label="expected"];
29->28 [style = solid, label="i"];
18->0 [style = bold, label=""];
22->11 [style = bold, label=""];
4->16 [style = bold, label=""];
24->15 [style = bold, label=""];
0->2 [style = solid, label="i"];
}
