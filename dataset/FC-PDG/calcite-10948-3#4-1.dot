digraph {
8 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(Smalls.MAZE_METHOD)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result + \"S=generate2(w=5, h=3, s=1)\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:calcite:\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "resultSet = statement.executeQuery(sql2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result + \"S=generate2(w=5, h=3, s=null)\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Statement statement = connection.createStatement()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "schema.add(\"Maze\",table)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "connection.close()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testScannableTableFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String sql = \"select *\" + \"from table(\"s\".\"Maze\"(5, 3, 1))\"@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final String sql3 = \"select *\" + \"from table(\"s\".\"Maze\"(HEIGHT => 3, WIDTH => 5))\"@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testScannableTableFunctionWithNamedParameters['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SchemaPlus rootSchema = calciteConnection.getRootSchema()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String sql2 = \"select *\" + \"from table(\"s\".\"Maze\"(WIDTH => 5, HEIGHT => 3, SEED => 1))\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result + \"S=generate2(w=5, h=3, s=1)\"))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "resultSet = statement.executeQuery(sql3)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ResultSet resultSet = connection.createStatement().executeQuery(sql)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TableFunction table = TableFunctionImpl.create(Smalls.MAZE2_METHOD)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ResultSet resultSet = statement.executeQuery(sql)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String result = \"S=abcde\" + \"S=xyz\" + \"S=generate(w=5, h=3, s=1)\"@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CalciteConnection calciteConnection = connection.unwrap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SchemaPlus schema = rootSchema.add(\"s\",new AbstractSchema())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testScannableTableFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertThat(CalciteAssert.toString(resultSet),is(result))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String result = \"S=abcde\" + \"S=xyz\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
14->24 [style = bold, label=""];
1->4 [style = bold, label=""];
0->9 [style = bold, label=""];
3->1 [style = bold, label=""];
5->17 [style = solid, label="sql"];
23->20 [style = solid, label="result"];
24->15 [style = solid, label="sql2"];
8->12 [style = dashed, label="0"];
8->6 [style = bold, label=""];
8->6 [style = solid, label="table"];
15->19 [style = bold, label=""];
12->6 [style = bold, label=""];
17->23 [style = bold, label=""];
7->3 [style = bold, label=""];
0->9 [style = solid, label="result"];
23->14 [style = bold, label=""];
15->19 [style = solid, label="resultSet"];
17->14 [style = solid, label="resultSet"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
13->17 [style = bold, label=""];
2->0 [style = bold, label=""];
22->18 [style = bold, label=""];
18->20 [style = bold, label=""];
20->16 [style = bold, label=""];
10->8 [style = bold, label=""];
11->3 [style = bold, label=""];
10->12 [style = bold, label=""];
2->13 [style = dashed, label="0"];
2->9 [style = solid, label="resultSet"];
5->13 [style = bold, label=""];
22->18 [style = solid, label="sql3"];
18->20 [style = solid, label="resultSet"];
23->14 [style = solid, label="result"];
23->19 [style = solid, label="result"];
19->22 [style = bold, label=""];
12->6 [style = solid, label="table"];
21->3 [style = bold, label=""];
24->15 [style = bold, label=""];
5->2 [style = solid, label="sql"];
}
