digraph {
6 [style = filled, label = "testPartitionMovementAfterDelayTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "setDelayTimeInCluster(_gZkClient,CLUSTER_NAME,delay)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Thread.sleep(delay + DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Thread.sleep(DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_minActiveReplica,NUM_NODE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "enablePersistBestPossibleAssignment(_gZkClient,CLUSTER_NAME,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.sleep(delay + DEFAULT_REBALANCE_PROCESSING_WAIT_TIME)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Thread.sleep(delay + 200)@@@7@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Map<String,ExternalView> externalViewsBefore = createTestDBs(delay)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@13@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "long delay = 10000@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "enableInstance(_participants.get(0).getInstanceName(),false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "validateNoPartitionMove(is,externalViewsBefore.get(db),ev,_participants.get(0).getInstanceName(),true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long delay = 4000@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testPartitionMovementAfterDelayTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Map<String,ExternalView> externalViewsBefore = createTestDBs(-1)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IdealState is = _gSetupTool.getClusterManagementTool().getResourceIdealState(CLUSTER_NAME,db)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(_clusterVerifier.verifyByPolling())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "ExternalView ev = _gSetupTool.getClusterManagementTool().getResourceExternalView(CLUSTER_NAME,db)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testPartitionMovementAfterDelayTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "validateDelayedMovements(externalViewsBefore)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "validateMinActiveAndTopStateReplica(is,ev,_replica,NUM_NODE)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8->10 [style = bold, label=""];
17->26 [style = bold, label=""];
28->5 [style = bold, label=""];
7->1 [style = bold, label=""];
27->0 [style = bold, label=""];
11->14 [style = bold, label=""];
4->15 [style = solid, label="delay"];
29->22 [style = solid, label="is"];
29->24 [style = solid, label="is"];
15->12 [style = solid, label="externalViewsBefore"];
3->1 [style = dashed, label="0"];
26->25 [style = bold, label=""];
4->15 [style = bold, label=""];
9->8 [style = solid, label="is"];
21->20 [style = solid, label="is"];
1->3 [style = bold, label=""];
14->8 [style = solid, label="ev"];
18->17 [style = bold, label=""];
8->14 [style = bold, label=""];
4->27 [style = dashed, label="0"];
16->20 [style = solid, label="ev"];
2->9 [style = bold, label=""];
25->29 [style = bold, label=""];
9->8 [style = bold, label=""];
12->1 [style = bold, label=""];
25->22 [style = solid, label="ev"];
4->0 [style = solid, label="delay"];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
0->7 [style = bold, label=""];
19->16 [style = bold, label=""];
6->5 [style = bold, label=""];
7->1 [style = solid, label="externalViewsBefore"];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
3->2 [style = bold, label=""];
27->23 [style = solid, label="delay"];
9->10 [style = solid, label="ev"];
4->3 [style = solid, label="delay"];
24->25 [style = bold, label=""];
16->21 [style = bold, label=""];
23->19 [style = bold, label=""];
5->4 [style = bold, label=""];
27->0 [style = solid, label="delay"];
13->5 [style = bold, label=""];
7->18 [style = bold, label=""];
4->1 [style = solid, label="delay"];
25->24 [style = solid, label="ev"];
14->9 [style = bold, label=""];
10->9 [style = bold, label=""];
15->12 [style = bold, label=""];
5->27 [style = bold, label=""];
29->22 [style = bold, label=""];
22->24 [style = bold, label=""];
8->10 [style = solid, label="is"];
24->23 [style = bold, label=""];
}
