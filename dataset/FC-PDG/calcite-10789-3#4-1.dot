digraph {
6 [style = filled, label = "tester.checkNull(\"cosh(cast(null as integer))\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkScalarApprox(\"sinh(1)\",\"DOUBLE NOT NULL\",1.1752d,0.0001d)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkScalarApprox(\"cosh(cast(1 as decimal(1, 0)))\",\"DOUBLE NOT NULL\",1.5430d,0.0001d)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "tester.checkNull(\"sinh(cast(null as double))\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testCoshFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkNull(\"cosh(cast(null as double))\")@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkType(\"sinh(1)\",\"DOUBLE NOT NULL\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "tester.checkType(\"sinh(case when false then 1 else null end)\",\"DOUBLE\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkType(\"sinh('abc')\",\"DOUBLE NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tester.checkNull(\"sinh(cast(null as integer))\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkType(\"cosh(1)\",\"DOUBLE NOT NULL\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tester.checkScalarApprox(\"sinh(cast(1 as decimal(1, 0)))\",\"DOUBLE NOT NULL\",1.1752d,0.0001d)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tester.checkScalarApprox(\"cosh(1)\",\"DOUBLE NOT NULL\",1.5430d,0.0001d)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SqlTester tester = tester(SqlLibrary.ORACLE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "strictTester.checkFails(\"^sinh('abc')^\",\"No match found for function signature SINH\(<CHARACTER>\)\",false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "tester.checkType(\"cosh('abc')\",\"DOUBLE NOT NULL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCoshFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "tester.checkType(\"cosh(cast(1 as float))\",\"DOUBLE NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "strictTester.checkFails(\"^cosh('abc')^\",\"No match found for function signature COSH\(<CHARACTER>\)\",false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkType(\"sinh(cast(1 as float))\",\"DOUBLE NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testSinhFunc['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkType(\"cosh(case when false then 1 else null end)\",\"DOUBLE\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->13 [style = bold, label=""];
9->16 [style = dashed, label="0"];
20->17 [style = bold, label=""];
5->14 [style = dashed, label="0"];
0->6 [style = bold, label=""];
15->21 [style = bold, label=""];
8->19 [style = bold, label=""];
8->3 [style = bold, label=""];
12->20 [style = bold, label=""];
9->7 [style = bold, label=""];
4->21 [style = dashed, label="0"];
0->17 [style = dashed, label="0"];
19->16 [style = bold, label=""];
3->19 [style = dashed, label="0"];
3->9 [style = bold, label=""];
1->12 [style = dashed, label="0"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
7->5 [style = bold, label=""];
6->15 [style = dashed, label="0"];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
17->15 [style = bold, label=""];
7->13 [style = dashed, label="0"];
11->8 [style = bold, label=""];
10->20 [style = dashed, label="0"];
18->8 [style = bold, label=""];
1->10 [style = bold, label=""];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
}
