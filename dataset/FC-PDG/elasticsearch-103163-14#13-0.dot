digraph {
6 [style = filled, label = "doc = mapper.parse(source(null))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testIgnoreAbove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2,fields.length)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "fields = doc.rootDoc().getFields(\"field\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "testIgnoreAbove['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testIgnoreAbove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(0,fields.length)@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "IndexableField(( fields = doc.rootDoc().getFields(\"field\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(mapping,mapper.mappingSource().toString())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"field\").field(\"type\",FIELD_TYPE).field(\"ignore_above\",5).endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ParsedDocument doc = mapper.parse(source(null))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "doc = mapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"field\",\"elasticsearch\").endObject()),XContentType.JSON))@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(2,fields.length)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ParsedDocument doc = mapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"field\",\"elk\").endObject()),XContentType.JSON))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "fields = doc.rootDoc().getFields(\"field\")@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "IndexableField(( fields = doc.rootDoc().getFields(\"field\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertEquals(0,fields.length)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ParsedDocument doc = mapper.parse(source(null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DocumentMapper mapper = parser.parse(\"type\",new CompressedXContent(mapping))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(0,fields.length)@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8->4 [style = solid, label="mapping"];
15->13 [style = bold, label=""];
1->8 [style = bold, label=""];
5->9 [style = bold, label=""];
21->6 [style = bold, label=""];
0->6 [style = bold, label=""];
12->15 [style = bold, label=""];
14->10 [style = bold, label=""];
5->18 [style = bold, label=""];
19->17 [style = bold, label=""];
7->4 [style = bold, label=""];
10->6 [style = bold, label=""];
8->7 [style = bold, label=""];
8->7 [style = solid, label="mapping"];
4->0 [style = bold, label=""];
20->21 [style = bold, label=""];
6->5 [style = bold, label=""];
3->2 [style = bold, label=""];
9->3 [style = bold, label=""];
5->11 [style = bold, label=""];
16->20 [style = bold, label=""];
13->14 [style = bold, label=""];
17->16 [style = bold, label=""];
}
