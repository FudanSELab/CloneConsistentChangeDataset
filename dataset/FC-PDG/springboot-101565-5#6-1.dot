digraph {
5 [style = filled, label = "String property = this.environment.getProperty(\"the.property\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String location = \"classpath:specificlocation.properties\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(this.environment).doesNotHave(matchingPropertySource(\"applicationConfig: \" + \"(classpath:/application.properties(\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\"spring.config.additional-location=\" + additionalLocation)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "specificResourceFromAdditionalLocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(this.environment).has(matchingPropertySource(\"applicationConfig: \" + \"(classpath:specificlocation.properties(\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "specificResource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.initializer.postProcessEnvironment(this.environment,this.application)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "specificResource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(this.environment).has(matchingPropertySource(\"applicationConfig: \" + \"(classpath:/application.properties(\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String additionalLocation = \"classpath:specificlocation.properties\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(this.environment.getProperty(\"foo\")).isNull()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(this.environment.getProperty(\"foo\")).isEqualTo(\"bucket\")@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(property).isEqualTo(\"fromspecificlocation\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TestPropertySourceUtils.addInlinedPropertiesToEnvironment(this.environment,\"spring.config.location=\" + location)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
9->3 [style = bold, label=""];
4->8 [style = bold, label=""];
6->1 [style = bold, label=""];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
12->10 [style = bold, label=""];
13->12 [style = bold, label=""];
2->7 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
10->8 [style = bold, label=""];
4->10 [style = dashed, label="0"];
3->4 [style = solid, label="location"];
11->14 [style = bold, label=""];
3->4 [style = bold, label=""];
12->10 [style = solid, label="additionalLocation"];
7->14 [style = dashed, label="0"];
1->11 [style = bold, label=""];
}
