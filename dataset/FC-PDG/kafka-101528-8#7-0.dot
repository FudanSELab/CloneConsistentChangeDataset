digraph {
7 [style = filled, label = "stream.aggregate(MockInitializer.STRING_INIT,MockAggregator.TOSTRING_ADDER,sessionMerger,Materialized.as(\"aggregated\").withValueSerde(Serdes.String()))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(data,equalTo(Arrays.asList(KeyValue.pair(new Windowed<>(\"1\",new SessionWindow(10,15)),\"1+2\"),KeyValue.pair(new Windowed<>(\"1\",new SessionWindow(600,600)),\"3\"),KeyValue.pair(new Windowed<>(\"2\",new SessionWindow(600,600)),\"1\"))))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final SessionStore<String,String> sessionStore = driver.getSessionStore(\"reduced\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldMaterializeReduced['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "processData(driver)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final List<KeyValue<Windowed<String>,String>> data = StreamsTestUtils.toList(sessionStore.fetch(\"1\",\"2\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(data,equalTo(Arrays.asList(KeyValue.pair(new Windowed<>(\"1\",new SessionWindow(10,15)),\"0+0+1+2\"),KeyValue.pair(new Windowed<>(\"1\",new SessionWindow(600,600)),\"0+3\"),KeyValue.pair(new Windowed<>(\"2\",new SessionWindow(600,600)),\"0+1\"))))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "shouldMaterializeAggregated['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "stream.aggregate(MockInitializer.STRING_INIT,MockAggregator.TOSTRING_ADDER,sessionMerger,Materialized.as(\"aggregated\").withValueSerde(Serdes.String()))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(data,equalTo(Arrays.asList(KeyValue.pair(new Windowed<>(\"1\",new SessionWindow(10,15)),\"0+0+1+2\"),KeyValue.pair(new Windowed<>(\"1\",new SessionWindow(600,600)),\"0+3\"),KeyValue.pair(new Windowed<>(\"2\",new SessionWindow(600,600)),\"0+1\"))))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final SessionStore<String,String> sessionStore = driver.getSessionStore(\"aggregated\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stream.reduce(MockReducer.STRING_ADDER,Materialized.as(\"reduced\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldMaterializeAggregated['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->12 [style = dashed, label="0"];
7->1 [style = bold, label=""];
3->10 [style = solid, label="data"];
2->3 [style = bold, label=""];
3->6 [style = bold, label=""];
3->4 [style = solid, label="data"];
4->6 [style = dashed, label="0"];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
3->10 [style = bold, label=""];
5->1 [style = bold, label=""];
11->3 [style = bold, label=""];
3->6 [style = solid, label="data"];
2->11 [style = dashed, label="0"];
1->2 [style = bold, label=""];
9->12 [style = bold, label=""];
5->7 [style = dashed, label="0"];
4->10 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
