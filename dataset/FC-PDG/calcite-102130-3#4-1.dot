digraph {
35 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "resultBlock.add(physType.record(results))@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "results.add(ref)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "implementLambdaFactory(builder,inputPhysType,aggs,accumulatorInitializer,hasOrderedCall(aggs),lambdaFactory)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "groupCount == 0@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "key_ = null@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "final Expression resultSelector = builder.append(\"resultSelector\",Expressions.lambda(,resultBlock.toBlock(),acc_))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "final Expression keySelectors_ = builder.append(\"keySelectors\",Expressions.call(BuiltInMethod.ARRAYS_AS_LIST.method,list))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Expression accumulatorInitializer = builder.append(\"accumulatorInitializer\",Expressions.lambda(,initBlock.toBlock()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "builder.add(Expressions.return_(null,Expressions.call(BuiltInMethod.GROUP_BY_MULTIPLE.method,Expressions.list(childExp,keySelectors_,Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_INITIALIZER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_ADDER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_RESULT_SELECTOR.method,resultSelector)).appendIfNotNull(keyPhysType.comparer()))))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final Expression ref = keyPhysType.fieldReference(key_,j)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final BlockBuilder initBlock = new BlockBuilder()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "implementLambdaFactory(builder,inputPhysType,aggs,accumulatorInitializer,false,lambdaFactory)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<Expression> results = Expressions.list()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<Expression> initExpressions = new ArrayList<>()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final ParameterExpression acc_ = Expressions.parameter(accPhysType.getJavaRowType(),\"acc\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "throw Util.needToImplement(\"EnumerableSortedAggregate\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final List<AggImpState> aggs = new ArrayList<>(aggCalls.size())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "builder.add(Expressions.return_(null,Expressions.call(inputPhysType.convertTo(childExp,physType.getFormat()),BuiltInMethod.DISTINCT.method,Expressions.list().appendIfNotNull(physType.comparer()))))@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final BlockBuilder resultBlock = new BlockBuilder()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "groupCount == 0@@@62@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "builder.add(Expressions.return_(null,Expressions.call(childExp,BuiltInMethod.GROUP_BY2.method,Expressions.list(keySelector_,Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_INITIALIZER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_ADDER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_RESULT_SELECTOR.method,resultSelector_)).appendIfNotNull(keyPhysType.comparer()))))@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final PhysType accPhysType = PhysTypeImpl.of(typeFactory,typeFactory.createSyntheticType(aggStateTypes))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<Type> aggStateTypes = createAggStateTypes(initExpressions,initBlock,aggs,typeFactory)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final ParameterExpression lambdaFactory = Expressions.parameter(,builder.newName(\"lambdaFactory\"))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "aggCalls.isEmpty() && groupSet.equals(ImmutableBitSet.range(child.getRowType().getFieldCount()))@@@66@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Result result = implementor.visitChild(this,0,child,pref)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "list.add(inputPhysType.generateSelector(parameter,groupSet.asList(),set.asList(),keyPhysType.getFormat()))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "declareParentAccumulator(initExpressions,initBlock,accPhysType)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@74@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "getGroupType() != Group.SIMPLE@@@53@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(inputPhysType.getJavaRowType(),\"a0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Prefer pref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final Expression resultSelector = builder.append(\"resultSelector\",Expressions.lambda(,resultBlock.toBlock(),key_,acc_))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "j++@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int groupCount = getGroupCount()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final PhysType inputPhysType = result.physType@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "key_ = Expressions.parameter(keyType,\"key\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final Type keyType = keyPhysType.getJavaRowType()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Expression keySelector_ = builder.append(\"keySelector\",inputPhysType.generateSelector(parameter,groupSet.asList(),keyPhysType.getFormat()))@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Expression comparator = keyPhysType.generateComparator(getTraitSet().getCollation())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "builder.add(Expressions.return_(null,Expressions.call(childExp,BuiltInMethod.SORTED_GROUP_BY.method,Expressions.list(keySelector_,Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_INITIALIZER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_ADDER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_RESULT_SELECTOR.method,resultSelector_),comparator))))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Prefer pref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Expression resultSelector_ = builder.append(\"resultSelector\",Expressions.lambda(,resultBlock.toBlock(),key_,acc_))@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final EnumerableRel child = (EnumerableRel)getInput()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "results.add(Expressions.condition(keyPhysType.fieldReference(key_,groupCount + j),Expressions.constant(null),Expressions.box(ref)))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Expression childExp = builder.append(\"child\",result.block)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ParameterExpression inParameter = Expressions.parameter(inputPhysType.getJavaRowType(),\"in\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "!Aggregate.isSimple(this)@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "groupSets@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final PhysType keyPhysType = inputPhysType.project(groupSet.asList(),getGroupType() != Group.SIMPLE,JavaRowFormat.LIST)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final ParameterExpression key_@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "j < groupCount@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "aggs.add(new AggImpState(call.i,call.e,false))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "createAccumulatorAdders(inParameter,aggs,accPhysType,acc_,inputPhysType,builder,implementor,typeFactory)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(typeFactory,getRowType(),pref.preferCustom())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "final List<Expression> list = new ArrayList<>()@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "results.add(agg.implementor.implementResult(agg.context,new AggResultContextImpl(resultBlock,agg.call,agg.state,key_,keyPhysType)))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Prefer pref@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "builder.add(Expressions.return_(null,Expressions.call(BuiltInMethod.SINGLETON_ENUMERABLE.method,Expressions.call(childExp,BuiltInMethod.AGGREGATE.method,Expressions.call(Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_INITIALIZER.method),BuiltInMethod.FUNCTION0_APPLY.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_ADDER.method),Expressions.call(lambdaFactory,BuiltInMethod.AGG_LAMBDA_FACTORY_ACC_SINGLE_GROUP_RESULT_SELECTOR.method,resultSelector)))))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int j = 0@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "getGroupType() == Group.SIMPLE@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "ImmutableBitSet set@@@55@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final JavaTypeFactory typeFactory = implementor.getTypeFactory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12->34 [style = solid, label="initExpressions"];
57->31 [style = bold, label=""];
57->37 [style = dotted, label="true"];
21->42 [style = bold, label=""];
50->23 [style = solid, label="pref"];
1->39 [style = solid, label="builder"];
7->52 [style = solid, label="childExp"];
25->21 [style = solid, label="accPhysType"];
42->18 [style = solid, label="lambdaFactory"];
38->62 [style = solid, label="acc_"];
17->9 [style = bold, label=""];
54->68 [style = solid, label="list"];
31->34 [style = solid, label="typeFactory"];
38->26 [style = solid, label="acc_"];
7->55 [style = solid, label="childExp"];
53->44 [style = bold, label=""];
7->18 [style = solid, label="childExp"];
2->37 [style = dotted, label="true"];
42->48 [style = bold, label=""];
31->1 [style = bold, label=""];
23->58 [style = solid, label="result"];
36->11 [style = bold, label=""];
18->55 [style = dashed, label="0"];
3->34 [style = solid, label="initBlock"];
3->34 [style = bold, label=""];
31->25 [style = solid, label="typeFactory"];
53->33 [style = dotted, label="false"];
1->28 [style = bold, label=""];
22->59 [style = bold, label=""];
53->10 [style = dotted, label="false"];
22->0 [style = bold, label=""];
24->48 [style = solid, label="inputPhysType"];
6->18 [style = solid, label="comparator"];
1->48 [style = solid, label="builder"];
14->53 [style = solid, label="groupCount"];
59->65 [style = dotted, label="false"];
43->53 [style = bold, label=""];
42->39 [style = solid, label="lambdaFactory"];
67->68 [style = bold, label=""];
18->35 [style = bold, label=""];
40->24 [style = bold, label=""];
33->26 [style = solid, label="key_"];
69->62 [style = dotted, label="true"];
13->9 [style = solid, label="parameter"];
22->65 [style = solid, label="ref"];
13->33 [style = solid, label="parameter"];
9->38 [style = bold, label=""];
12->41 [style = solid, label="initExpressions"];
38->64 [style = solid, label="acc_"];
43->44 [style = bold, label=""];
64->60 [style = bold, label=""];
63->64 [style = dotted, label="true"];
62->56 [style = bold, label=""];
53->49 [style = dotted, label="true"];
2->16 [style = bold, label=""];
29->36 [style = bold, label=""];
5->10 [style = bold, label=""];
36->63 [style = bold, label=""];
27->65 [style = solid, label="j"];
61->11 [style = bold, label=""];
13->32 [style = bold, label=""];
37->21 [style = solid, label="implementor"];
63->54 [style = bold, label=""];
19->20 [style = bold, label=""];
19->39 [style = solid, label="aggs"];
23->35 [style = solid, label="result"];
61->52 [style = bold, label=""];
61->52 [style = dotted, label="true"];
5->65 [style = solid, label="j"];
37->47 [style = dashed, label="0"];
63->69 [style = bold, label=""];
27->10 [style = solid, label="j"];
16->4 [style = dotted, label="true"];
33->27 [style = bold, label=""];
33->22 [style = solid, label="key_"];
69->62 [style = bold, label=""];
56->58 [style = bold, label=""];
61->55 [style = dotted, label="false"];
14->65 [style = solid, label="groupCount"];
52->58 [style = bold, label=""];
40->58 [style = solid, label="physType"];
57->50 [style = dotted, label="true"];
13->11 [style = solid, label="parameter"];
27->5 [style = solid, label="j"];
19->21 [style = solid, label="aggs"];
11->18 [style = solid, label="keySelector_"];
46->45 [style = dotted, label="true"];
10->0 [style = dotted, label="true"];
23->7 [style = bold, label=""];
17->39 [style = solid, label="accumulatorInitializer"];
40->35 [style = solid, label="physType"];
26->18 [style = solid, label="resultSelector_"];
14->69 [style = solid, label="groupCount"];
63->68 [style = dotted, label="true"];
11->26 [style = bold, label=""];
24->13 [style = bold, label=""];
14->10 [style = solid, label="groupCount"];
1->21 [style = solid, label="builder"];
8->36 [style = solid, label="results"];
6->26 [style = bold, label=""];
46->16 [style = bold, label=""];
47->23 [style = solid, label="pref"];
62->56 [style = solid, label="resultSelector"];
13->42 [style = solid, label="parameter"];
22->0 [style = solid, label="ref"];
25->41 [style = bold, label=""];
46->47 [style = dotted, label="true"];
42->39 [style = bold, label=""];
59->65 [style = bold, label=""];
44->33 [style = bold, label=""];
32->14 [style = bold, label=""];
14->19 [style = bold, label=""];
2->30 [style = dotted, label="true"];
24->39 [style = solid, label="inputPhysType"];
53->27 [style = dotted, label="false"];
19->34 [style = solid, label="aggs"];
63->60 [style = dotted, label="true"];
27->22 [style = solid, label="j"];
33->65 [style = solid, label="key_"];
61->26 [style = dotted, label="false"];
26->55 [style = bold, label=""];
60->58 [style = bold, label=""];
61->11 [style = dotted, label="false"];
4->31 [style = bold, label=""];
31->40 [style = solid, label="typeFactory"];
33->29 [style = solid, label="key_"];
42->56 [style = solid, label="lambdaFactory"];
54->67 [style = bold, label=""];
28->23 [style = bold, label=""];
40->24 [style = solid, label="physType"];
16->31 [style = bold, label=""];
24->21 [style = solid, label="inputPhysType"];
27->10 [style = bold, label=""];
32->29 [style = solid, label="keyPhysType"];
28->23 [style = solid, label="child"];
49->29 [style = solid, label="key_"];
12->3 [style = bold, label=""];
63->51 [style = dotted, label="true"];
63->66 [style = dotted, label="true"];
16->4 [style = bold, label=""];
15->8 [style = bold, label=""];
7->40 [style = bold, label=""];
0->5 [style = bold, label=""];
49->29 [style = bold, label=""];
68->64 [style = bold, label=""];
63->67 [style = dotted, label="true"];
10->22 [style = bold, label=""];
39->15 [style = bold, label=""];
34->25 [style = bold, label=""];
63->69 [style = dotted, label="false"];
11->6 [style = bold, label=""];
49->26 [style = solid, label="key_"];
13->38 [style = solid, label="parameter"];
10->59 [style = dotted, label="true"];
65->5 [style = bold, label=""];
5->10 [style = solid, label="j"];
44->33 [style = solid, label="keyType"];
17->48 [style = solid, label="accumulatorInitializer"];
8->43 [style = bold, label=""];
19->48 [style = solid, label="aggs"];
30->23 [style = solid, label="pref"];
31->21 [style = solid, label="typeFactory"];
38->21 [style = solid, label="acc_"];
42->48 [style = solid, label="lambdaFactory"];
10->5 [style = dotted, label="true"];
53->44 [style = dotted, label="false"];
69->61 [style = bold, label=""];
34->25 [style = solid, label="aggStateTypes"];
53->49 [style = bold, label=""];
33->64 [style = solid, label="key_"];
3->41 [style = solid, label="initBlock"];
41->17 [style = bold, label=""];
13->67 [style = solid, label="parameter"];
59->0 [style = dotted, label="true"];
15->29 [style = solid, label="resultBlock"];
10->29 [style = bold, label=""];
49->64 [style = solid, label="key_"];
63->54 [style = dotted, label="true"];
39->48 [style = dashed, label="0"];
5->22 [style = solid, label="j"];
20->12 [style = bold, label=""];
48->15 [style = bold, label=""];
10->22 [style = dotted, label="true"];
69->61 [style = dotted, label="false"];
38->21 [style = bold, label=""];
59->0 [style = bold, label=""];
25->41 [style = solid, label="accPhysType"];
9->21 [style = solid, label="inParameter"];
7->56 [style = solid, label="childExp"];
55->58 [style = bold, label=""];
45->21 [style = solid, label="implementor"];
69->56 [style = dotted, label="true"];
26->18 [style = bold, label=""];
}
