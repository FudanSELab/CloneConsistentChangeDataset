digraph {
19 [style = filled, label = "rows.add(JAN_2_M_10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(expectedDay4,actual.getRows())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "intervals = new ArrayList<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RowBucket actual = iter.next()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rows.add(JAN_4_M_10)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(JAN_2,actual.getDateTime())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testMultipleMissingDays['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rows = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertEquals(JAN_2,actual.getDateTime())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(JAN_4,actual.getDateTime())@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "rows.add(JAN_1_M_10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "List<Row> expectedDay2 = Collections.emptyList()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<Row> expectedDay1 = Collections.singletonList(JAN_1_M_10)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "actual = iter.next()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "actual = iter.next()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "rows.add(JAN_3_M_10)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "rows.add(JAN_4_M_10)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(JAN_4,actual.getDateTime())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(JAN_3,actual.getDateTime())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "actual = iter.next()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Row> expectedDay3 = Collections.emptyList()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testMissingDaysInMiddleMultipleRow['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testMultipleMissingDays['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(JAN_1,actual.getDateTime())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(JAN_1,actual.getDateTime())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "intervals.add(INTERVAL_JAN_1_4)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<Row> expectedDay1 = Collections.emptyList()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "List<Row> expectedDay4 = Collections.singletonList(JAN_4_M_10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<Row> expectedDay3 = Collections.singletonList(JAN_3_M_10)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Assert.assertEquals(expectedDay3,actual.getRows())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(JAN_3,actual.getDateTime())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
14->16 [style = bold, label=""];
9->6 [style = solid, label="expectedDay2"];
17->7 [style = solid, label="seq"];
27->32 [style = bold, label=""];
30->22 [style = bold, label=""];
7->13 [style = solid, label="seq"];
40->35 [style = bold, label=""];
12->33 [style = dashed, label="0"];
8->23 [style = bold, label=""];
14->7 [style = solid, label="intervals"];
21->27 [style = dashed, label="0"];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
5->7 [style = solid, label="rows"];
9->4 [style = bold, label=""];
26->1 [style = bold, label=""];
22->9 [style = bold, label=""];
29->31 [style = bold, label=""];
37->17 [style = bold, label=""];
11->10 [style = solid, label="expectedDay4"];
38->1 [style = solid, label="expectedDay1"];
10->31 [style = dashed, label="0"];
11->39 [style = solid, label="expectedDay4"];
1->0 [style = bold, label=""];
3->33 [style = bold, label=""];
3->12 [style = bold, label=""];
5->17 [style = solid, label="rows"];
0->28 [style = dashed, label="0"];
23->29 [style = dashed, label="0"];
18->32 [style = dashed, label="0"];
21->18 [style = bold, label=""];
15->22 [style = bold, label=""];
33->26 [style = bold, label=""];
19->24 [style = bold, label=""];
20->27 [style = bold, label=""];
20->21 [style = bold, label=""];
17->7 [style = bold, label=""];
6->20 [style = bold, label=""];
5->19 [style = bold, label=""];
40->20 [style = solid, label="expectedDay2"];
12->2 [style = bold, label=""];
1->28 [style = bold, label=""];
25->20 [style = bold, label=""];
32->8 [style = bold, label=""];
22->2 [style = solid, label="expectedDay1"];
4->18 [style = solid, label="expectedDay3"];
11->31 [style = solid, label="expectedDay4"];
35->8 [style = solid, label="expectedDay3"];
13->3 [style = bold, label=""];
10->39 [style = bold, label=""];
6->25 [style = dashed, label="0"];
9->40 [style = dashed, label="0"];
19->36 [style = dashed, label="0"];
24->17 [style = bold, label=""];
22->38 [style = dashed, label="0"];
23->10 [style = bold, label=""];
16->5 [style = bold, label=""];
28->25 [style = bold, label=""];
18->8 [style = bold, label=""];
36->37 [style = bold, label=""];
34->38 [style = bold, label=""];
2->26 [style = dashed, label="0"];
22->26 [style = solid, label="expectedDay1"];
4->11 [style = bold, label=""];
38->40 [style = bold, label=""];
5->36 [style = bold, label=""];
8->29 [style = bold, label=""];
14->13 [style = solid, label="intervals"];
4->35 [style = dashed, label="0"];
4->32 [style = solid, label="expectedDay3"];
9->25 [style = solid, label="expectedDay2"];
35->11 [style = bold, label=""];
}
