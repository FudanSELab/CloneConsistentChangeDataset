digraph {
14 [style = filled, label = "Row result = new Row(3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "format.setCommentPrefix(\"//\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "format.open(split)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "result = format.nextRecord(result)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String fileContent = \"#description of the data\" + \"#successive commented line\" + \"this is|1|2.0|\" + \"a test|3|4.0|\" + \"#next|5|6.0|\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "format.setCommentPrefix(\"#\")@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,fieldTypes,\"\",\"|\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "ignoreMultiCharPrefixComments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String fileContent = \"//description of the data\" + \"//successive commented line\" + \"this is|1|2.0|\" + \"a test|3|4.0|\" + \"//next|5|6.0|\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(4.0,result.getField(2))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "format.configure(new Configuration())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(result)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ignoreSingleCharPrefixComments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RowCsvInputFormat format = new RowCsvInputFormat(PATH,typeInfo,\"\",\"|\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"a test\",result.getField(0))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "result = format.nextRecord(result)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RowTypeInfo typeInfo = new RowTypeInfo(BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.INT_TYPE_INFO,BasicTypeInfo.DOUBLE_TYPE_INFO)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TypeInformation(( fieldTypes = new TypeInformation((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b25643@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertEquals(3,result.getField(1))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "result = format.nextRecord(result)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ignoreSingleCharPrefixComments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(result)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FileInputSplit split = createTempFile(fileContent)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "result = format.nextRecord(result)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertEquals(1,result.getField(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertNull(result)@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertNull(result)@@@24@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(2.0,result.getField(2))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"this is\",result.getField(0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->10 [style = solid, label="fileContent"];
8->16 [style = bold, label=""];
20->13 [style = bold, label=""];
2->4 [style = solid, label="result"];
17->1 [style = bold, label=""];
5->19 [style = solid, label="result"];
7->10 [style = bold, label=""];
5->15 [style = solid, label="result"];
26->10 [style = bold, label=""];
23->24 [style = solid, label="fieldTypes"];
20->28 [style = dashed, label="0"];
4->19 [style = bold, label=""];
1->20 [style = bold, label=""];
8->16 [style = solid, label="result"];
5->15 [style = bold, label=""];
28->13 [style = bold, label=""];
21->22 [style = solid, label="result"];
10->17 [style = bold, label=""];
0->21 [style = bold, label=""];
15->3 [style = bold, label=""];
25->7 [style = bold, label=""];
2->4 [style = bold, label=""];
24->18 [style = bold, label=""];
12->7 [style = bold, label=""];
11->0 [style = solid, label="result"];
9->6 [style = bold, label=""];
8->2 [style = solid, label="result"];
2->11 [style = solid, label="result"];
19->21 [style = solid, label="result"];
1->28 [style = bold, label=""];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
3->2 [style = bold, label=""];
19->9 [style = bold, label=""];
14->8 [style = solid, label="result"];
10->23 [style = bold, label=""];
21->22 [style = bold, label=""];
10->8 [style = solid, label="split"];
6->11 [style = bold, label=""];
19->9 [style = solid, label="result"];
16->5 [style = solid, label="result"];
16->5 [style = bold, label=""];
14->8 [style = bold, label=""];
10->18 [style = solid, label="split"];
7->26 [style = dashed, label="0"];
26->10 [style = solid, label="fileContent"];
18->14 [style = bold, label=""];
13->18 [style = bold, label=""];
17->1 [style = solid, label="typeInfo"];
27->26 [style = bold, label=""];
}
