digraph {
20 [style = filled, label = "result.setSourceName(\"Service\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "result.setSourceAttribute(\"latency\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result.setSourceName(\"Endpoint\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "result.setMetricsName(\"EndpointAvg\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "result = analysis.analysis(result)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<DataColumn> persistentFields = result.getPersistentFields()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DeepAnalysis analysis = new DeepAnalysis()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "result.setAggregationFunctionName(\"longAvg\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(2,source.size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "AnalysisResult result = new AnalysisResult()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "result.setPackageName(\"endpoint.endpointavg\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "result.setPackageName(\"service.serviceavg\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertEquals(1,source.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testEndpointAnalysis['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testEndpointAnalysis['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(\"(long)(source.getLatency())\",method.getArgsExpressions().get(0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(4,persistentFields.size())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EntryMethod method = result.getEntryMethod()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "result.setMetricsName(\"ServiceAvg\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<SourceColumn> source = result.getFieldsFromSource()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"(long)(1)\",method.getArgsExpressions().get(1))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testServiceAnalysis['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(\"combine\",method.getMethodName())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(3,source.size())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7->13 [style = bold, label=""];
15->2 [style = bold, label=""];
23->16 [style = bold, label=""];
8->9 [style = solid, label="analysis"];
17->1 [style = bold, label=""];
16->8 [style = bold, label=""];
5->23 [style = dashed, label="0"];
3->14 [style = bold, label=""];
18->12 [style = bold, label=""];
1->20 [style = bold, label=""];
9->7 [style = bold, label=""];
4->21 [style = dashed, label="0"];
12->6 [style = bold, label=""];
15->18 [style = bold, label=""];
2->12 [style = bold, label=""];
15->22 [style = bold, label=""];
20->21 [style = bold, label=""];
5->16 [style = bold, label=""];
11->5 [style = bold, label=""];
19->1 [style = bold, label=""];
13->3 [style = bold, label=""];
1->9 [style = solid, label="result"];
21->11 [style = bold, label=""];
0->1 [style = bold, label=""];
22->12 [style = bold, label=""];
8->9 [style = bold, label=""];
2->18 [style = dashed, label="0"];
10->4 [style = bold, label=""];
10->20 [style = dashed, label="0"];
14->15 [style = bold, label=""];
4->11 [style = bold, label=""];
1->10 [style = bold, label=""];
2->22 [style = dashed, label="0"];
11->23 [style = bold, label=""];
}
