digraph {
9 [style = filled, label = "output.flush()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "await().until(null)@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(this.messageFromClient.get()).isEqualTo(MESSAGE)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "output.flush()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "securedSocketCheckExtensions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SSLSocket sslSocket = (SSLSocket)this.clientSocket@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "await().until(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "serverException != null@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "securedSocketTransmissionShouldWork['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertNull(serverException)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.serverSocket = this.socketCreator.forCluster().createServerSocket(0,0,this.localHost)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw serverException@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "output.writeObject(MESSAGE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SNIHostName serverName = new SNIHostName(\"11\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "securedSocketTransmissionShouldWork['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "this.clientSocket = this.socketCreator.forCluster().connect(new HostAndPort(this.localHost.getHostAddress(),serverPort))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ObjectOutputStream output = new ObjectOutputStream(this.clientSocket.getOutputStream())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "this.clientSocket = this.socketCreator.forCluster().connect(new HostAndPort(this.localHost.getHostAddress(),serverPort),0,null,null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(sslSocket.getSSLParameters().getServerNames()).isEqualTo(serverNames)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "serverNames.add(serverName)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int serverPort = this.serverSocket.getLocalPort()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ObjectOutputStream output = new ObjectOutputStream(this.clientSocket.getOutputStream())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "List<SNIServerName> serverNames = new ArrayList<>(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(this.messageFromClient.get()).isEqualTo(MESSAGE)@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "output.writeObject(MESSAGE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "this.serverThread = startServer(this.serverSocket,15000)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->21 [style = bold, label=""];
8->9 [style = bold, label=""];
25->21 [style = solid, label="serverNames"];
11->12 [style = bold, label=""];
20->7 [style = bold, label=""];
21->22 [style = bold, label=""];
25->19 [style = bold, label=""];
19->24 [style = solid, label="serverName"];
14->12 [style = bold, label=""];
19->24 [style = bold, label=""];
22->20 [style = bold, label=""];
14->11 [style = bold, label=""];
6->8 [style = bold, label=""];
3->5 [style = bold, label=""];
4->1 [style = bold, label=""];
3->5 [style = solid, label="serverPort"];
2->3 [style = bold, label=""];
10->7 [style = bold, label=""];
16->1 [style = bold, label=""];
15->17 [style = solid, label="clientSocket"];
7->0 [style = bold, label=""];
1->2 [style = solid, label="serverSocket"];
3->15 [style = bold, label=""];
3->15 [style = solid, label="serverPort"];
13->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
14->11 [style = dotted, label="true"];
1->2 [style = bold, label=""];
10->14 [style = bold, label=""];
0->18 [style = bold, label=""];
5->15 [style = dashed, label="0"];
5->6 [style = bold, label=""];
17->25 [style = bold, label=""];
18->23 [style = bold, label=""];
9->10 [style = bold, label=""];
15->17 [style = bold, label=""];
}
