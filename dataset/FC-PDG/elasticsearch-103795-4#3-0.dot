digraph {
14 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCacheDifferentReaders['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(0,cache.count())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "indexShard.set(false)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "secondReader.close()@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final int cacheSize = requestCacheStats.stats().getMemorySize().bytesAsInt()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(2,cache.count())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getHitCount())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@77@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "DirectoryReader secondReader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "cache.cleanCache()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(2,cache.count())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "testCacheDifferentReaders['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > cacheSize + value.length())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "reader.close()@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "secondEntity = new TestEntity(requestCacheStats,indexShard)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "IOUtils.close(secondReader,writer,dir,cache)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes,null)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "writer.updateDocument(new Term(\"id\",\"0\"),newDoc(0,\"bar\"))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(cacheSize,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(2,cache.count())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "reader.close()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "randomBoolean()@@@63@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "cache.clear(entity)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "cache.cleanCache()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(2,cache.numRegisteredCloseListeners())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cache.clear(secondEntity)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testBasicOperationsCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes,null)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "randomBoolean()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "TestEntity secondEntity = new TestEntity(requestCacheStats,indexShard)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "loader = new Loader(secondReader,0)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "loader = new Loader(secondReader,0)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46->72 [style = bold, label=""];
62->14 [style = bold, label=""];
60->9 [style = bold, label=""];
0->13 [style = bold, label=""];
70->3 [style = bold, label=""];
16->19 [style = dotted, label="false"];
74->31 [style = bold, label=""];
37->42 [style = solid, label="termBytes"];
51->76 [style = solid, label="secondEntity"];
16->20 [style = dotted, label="true"];
10->17 [style = bold, label=""];
3->74 [style = solid, label="entity"];
73->9 [style = bold, label=""];
1->70 [style = solid, label="reader"];
37->74 [style = solid, label="termBytes"];
52->59 [style = bold, label=""];
24->43 [style = bold, label=""];
8->44 [style = bold, label=""];
47->33 [style = bold, label=""];
38->15 [style = bold, label=""];
91->86 [style = bold, label=""];
45->60 [style = solid, label="loader"];
3->13 [style = solid, label="entity"];
1->80 [style = solid, label="reader"];
69->30 [style = bold, label=""];
68->70 [style = solid, label="loader"];
31->81 [style = bold, label=""];
92->90 [style = bold, label=""];
17->53 [style = bold, label=""];
64->76 [style = solid, label="secondReader"];
36->74 [style = solid, label="reader"];
88->40 [style = bold, label=""];
11->92 [style = bold, label=""];
65->68 [style = bold, label=""];
66->50 [style = bold, label=""];
50->12 [style = bold, label=""];
34->32 [style = bold, label=""];
48->13 [style = dashed, label="0"];
13->74 [style = dashed, label="0"];
19->28 [style = bold, label=""];
13->31 [style = bold, label=""];
9->38 [style = bold, label=""];
51->19 [style = solid, label="secondEntity"];
54->77 [style = solid, label="entity"];
44->66 [style = solid, label="indexShard"];
60->73 [style = dashed, label="0"];
16->40 [style = bold, label=""];
82->28 [style = bold, label=""];
78->24 [style = solid, label="writer"];
12->77 [style = dashed, label="0"];
36->71 [style = bold, label=""];
1->41 [style = bold, label=""];
37->83 [style = bold, label=""];
18->11 [style = bold, label=""];
68->70 [style = bold, label=""];
76->47 [style = bold, label=""];
63->69 [style = bold, label=""];
37->73 [style = solid, label="termBytes"];
14->34 [style = solid, label="dir"];
41->36 [style = solid, label="termQuery"];
23->8 [style = bold, label=""];
26->6 [style = bold, label=""];
21->22 [style = dashed, label="0"];
29->52 [style = bold, label=""];
3->0 [style = bold, label=""];
89->65 [style = solid, label="requestCacheStats"];
56->51 [style = bold, label=""];
33->29 [style = bold, label=""];
36->80 [style = solid, label="termBytes"];
71->37 [style = bold, label=""];
22->18 [style = bold, label=""];
50->77 [style = bold, label=""];
62->3 [style = solid, label="requestCacheStats"];
35->5 [style = solid, label="cacheSize"];
57->76 [style = bold, label=""];
36->45 [style = solid, label="reader"];
36->13 [style = solid, label="reader"];
62->24 [style = solid, label="dir"];
45->73 [style = bold, label=""];
53->24 [style = bold, label=""];
62->78 [style = bold, label=""];
50->12 [style = solid, label="loader"];
18->25 [style = bold, label=""];
11->88 [style = dotted, label="true"];
45->60 [style = bold, label=""];
1->83 [style = solid, label="reader"];
28->91 [style = bold, label=""];
16->20 [style = bold, label=""];
43->34 [style = bold, label=""];
37->12 [style = solid, label="termBytes"];
58->0 [style = dashed, label="0"];
42->76 [style = dashed, label="0"];
45->73 [style = solid, label="loader"];
36->70 [style = solid, label="termBytes"];
10->84 [style = dashed, label="0"];
70->61 [style = bold, label=""];
54->60 [style = solid, label="entity"];
59->27 [style = bold, label=""];
67->7 [style = bold, label=""];
57->42 [style = solid, label="loader"];
64->50 [style = solid, label="secondReader"];
44->51 [style = solid, label="indexShard"];
0->13 [style = solid, label="loader"];
64->77 [style = solid, label="secondReader"];
44->62 [style = bold, label=""];
8->34 [style = solid, label="cache"];
0->74 [style = solid, label="loader"];
89->79 [style = bold, label=""];
39->5 [style = bold, label=""];
11->21 [style = bold, label=""];
0->74 [style = bold, label=""];
2->64 [style = bold, label=""];
42->47 [style = bold, label=""];
40->19 [style = bold, label=""];
64->57 [style = solid, label="secondReader"];
54->73 [style = solid, label="entity"];
35->49 [style = bold, label=""];
65->70 [style = solid, label="entity"];
71->37 [style = solid, label="indexShard"];
50->77 [style = solid, label="loader"];
7->4 [style = bold, label=""];
78->1 [style = solid, label="writer"];
11->88 [style = bold, label=""];
1->68 [style = solid, label="reader"];
40->84 [style = bold, label=""];
62->54 [style = solid, label="requestCacheStats"];
83->80 [style = bold, label=""];
21->55 [style = bold, label=""];
34->24 [style = dashed, label="0"];
41->36 [style = bold, label=""];
58->48 [style = bold, label=""];
77->26 [style = bold, label=""];
62->66 [style = solid, label="requestCacheStats"];
71->65 [style = solid, label="indexShard"];
19->90 [style = dashed, label="0"];
75->8 [style = bold, label=""];
1->34 [style = solid, label="writer"];
85->22 [style = bold, label=""];
79->24 [style = solid, label="cache"];
35->21 [style = solid, label="cacheSize"];
37->2 [style = bold, label=""];
79->62 [style = bold, label=""];
55->16 [style = bold, label=""];
6->63 [style = bold, label=""];
51->57 [style = bold, label=""];
64->12 [style = solid, label="secondReader"];
11->90 [style = dotted, label="false"];
1->24 [style = solid, label="reader"];
83->80 [style = solid, label="loader"];
44->3 [style = solid, label="indexShard"];
71->37 [style = solid, label="termQuery"];
78->14 [style = bold, label=""];
61->35 [style = bold, label=""];
54->45 [style = bold, label=""];
57->42 [style = bold, label=""];
31->58 [style = bold, label=""];
28->10 [style = bold, label=""];
81->85 [style = bold, label=""];
5->56 [style = bold, label=""];
65->90 [style = solid, label="entity"];
37->13 [style = solid, label="termBytes"];
16->40 [style = dotted, label="false"];
27->3 [style = bold, label=""];
20->28 [style = bold, label=""];
90->40 [style = bold, label=""];
64->34 [style = solid, label="secondReader"];
84->82 [style = bold, label=""];
48->22 [style = bold, label=""];
12->26 [style = bold, label=""];
25->46 [style = bold, label=""];
62->51 [style = solid, label="requestCacheStats"];
64->54 [style = bold, label=""];
62->78 [style = solid, label="dir"];
14->1 [style = bold, label=""];
11->92 [style = dotted, label="false"];
37->77 [style = solid, label="termBytes"];
54->12 [style = solid, label="entity"];
49->66 [style = bold, label=""];
14->1 [style = solid, label="dir"];
1->36 [style = solid, label="writer"];
37->80 [style = solid, label="entity"];
37->60 [style = solid, label="termBytes"];
86->53 [style = bold, label=""];
80->54 [style = bold, label=""];
1->64 [style = solid, label="writer"];
36->60 [style = solid, label="reader"];
57->76 [style = solid, label="loader"];
89->37 [style = solid, label="requestCacheStats"];
44->54 [style = solid, label="indexShard"];
64->42 [style = solid, label="secondReader"];
72->67 [style = bold, label=""];
51->42 [style = solid, label="secondEntity"];
30->39 [style = bold, label=""];
37->76 [style = solid, label="termBytes"];
87->89 [style = bold, label=""];
20->88 [style = dashed, label="0"];
15->65 [style = bold, label=""];
4->11 [style = bold, label=""];
36->0 [style = solid, label="reader"];
36->73 [style = solid, label="reader"];
}
