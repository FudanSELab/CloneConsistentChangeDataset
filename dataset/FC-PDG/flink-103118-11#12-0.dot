digraph {
19 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "opMethod.invoke(source2,minResource3,preferredResource3)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(minResource6,getStreamGraph(env).getStreamNode(windowed.getId()).getMinResources())@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(minResource7,getStreamGraph(env).getStreamNode(sink.getTransformation().getId()).getMinResources())@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(preferredResource1,getStreamGraph(env).getStreamNode(source1.getId()).getPreferredResources())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(preferredResource5,getStreamGraph(env).getStreamNode(connected.getId()).getPreferredResources())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "ResourceSpec minResource7 = ResourceSpec.newBuilder(1.0,700).build()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ResourceSpec preferredResource6 = ResourceSpec.newBuilder(2.0,700).build()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ResourceSpec minResource4 = ResourceSpec.newBuilder(1.0,400).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ResourceSpec preferredResource4 = ResourceSpec.newBuilder(2.0,500).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ResourceSpec minResource1 = ResourceSpec.newBuilder(1.0,100).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "opMethod.invoke(operator,minResources,preferredResources)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ResourceSpec preferredResource2 = ResourceSpec.newBuilder(2.0,300).build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ResourceSpec preferredResource5 = ResourceSpec.newBuilder(2.0,600).build()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sinkMethod.setAccessible(true)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Method opMethod = .getDeclaredMethod(\"setResources\",,)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ResourceSpec preferredResource3 = ResourceSpec.newBuilder(2.0,400).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ResourceSpec preferredResource7 = ResourceSpec.newBuilder(2.0,800).build()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ResourceSpec minResource6 = ResourceSpec.newBuilder(1.0,600).build()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "opMethod.invoke(source1,minResource1,preferredResource1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "opMethod.invoke(windowed,minResource6,preferredResource6)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "opMethod.invoke(map1,minResource2,preferredResource2)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "opMethod.setAccessible(true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DataStream<Long> source1 = env.generateSequence(0,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(minResource3,getStreamGraph(env).getStreamNode(source2.getId()).getMinResources())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(minResources,operator.getMinResources())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "DataStreamSink<Long> sink = windowed.print()@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(minResource1,getStreamGraph(env).getStreamNode(source1.getId()).getMinResources())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "ResourceSpec preferredResource1 = ResourceSpec.newBuilder(2.0,200).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Operator operator = new MockOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "ResourceSpec minResource5 = ResourceSpec.newBuilder(1.0,500).build()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Method sinkMethod = .getDeclaredMethod(\"setResources\",,)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "DataStream<Long> source2 = env.generateSequence(0,0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "opMethod.setAccessible(true)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "opMethod.invoke(map2,minResource4,preferredResource4)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "DataStream<Long> connected = map1.connect(map2).flatMap(new CoFlatMapFunction<Long,Long,Long>(){@Override public void flatMap1(Long value,Collector<Long> out){}@Override public void flatMap2(Long value,Collector<Long> out){}})@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).fold(0L,new FoldFunction<Long,Long>(){@Override public Long fold(Long accumulator,Long value){return null}})@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertEquals(preferredResources,operator.getPreferredResources())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "opMethod.invoke(connected,minResource5,preferredResource5)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "DataStream<Long> windowed = connected.windowAll(GlobalWindows.create()).trigger(PurgingTrigger.of(CountTrigger.of(10))).reduce(new ReduceFunction<Long>(){@Override public Long reduce(Long value1,Long value2){return null}})@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertEquals(minResource5,getStreamGraph(env).getStreamNode(connected.getId()).getMinResources())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(preferredResource3,getStreamGraph(env).getStreamNode(source2.getId()).getPreferredResources())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "ResourceSpec minResources = ResourceSpec.newBuilder(1.0,100).build()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(preferredResource7,getStreamGraph(env).getStreamNode(sink.getTransformation().getId()).getPreferredResources())@@@71@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(preferredResource4,getStreamGraph(env).getStreamNode(map2.getId()).getPreferredResources())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(minResource2,getStreamGraph(env).getStreamNode(map1.getId()).getMinResources())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "sinkMethod.invoke(sink,minResource7,preferredResource7)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "ResourceSpec preferredResources = ResourceSpec.newBuilder(2.0,200).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(minResource4,getStreamGraph(env).getStreamNode(map2.getId()).getMinResources())@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(preferredResource2,getStreamGraph(env).getStreamNode(map1.getId()).getPreferredResources())@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ResourceSpec minResource3 = ResourceSpec.newBuilder(1.0,300).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ResourceSpec minResource2 = ResourceSpec.newBuilder(1.0,200).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testConfigurationOfResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "DataStream<Long> map1 = source1.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(preferredResource6,getStreamGraph(env).getStreamNode(windowed.getId()).getPreferredResources())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "DataStream<Long> map2 = source2.map(new MapFunction<Long,Long>(){@Override public Long map(Long value){return null}})@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54->56 [style = bold, label=""];
10->32 [style = solid, label="preferredResource5"];
16->0 [style = bold, label=""];
2->26 [style = bold, label=""];
14->25 [style = bold, label=""];
12->45 [style = bold, label=""];
0->37 [style = solid, label="minResource4"];
28->44 [style = solid, label="map2"];
46->31 [style = bold, label=""];
51->53 [style = bold, label=""];
57->58 [style = bold, label=""];
0->15 [style = bold, label=""];
39->11 [style = solid, label="minResource3"];
7->14 [style = bold, label=""];
37->5 [style = bold, label=""];
56->53 [style = solid, label="minResources"];
18->36 [style = solid, label="preferredResource7"];
15->20 [style = bold, label=""];
3->25 [style = solid, label="minResource2"];
26->12 [style = solid, label="preferredResource6"];
3->46 [style = solid, label="minResource2"];
11->28 [style = bold, label=""];
49->12 [style = bold, label=""];
31->11 [style = solid, label="source2"];
42->46 [style = bold, label=""];
17->41 [style = bold, label=""];
26->9 [style = solid, label="preferredResource6"];
41->37 [style = bold, label=""];
13->46 [style = solid, label="preferredResource2"];
4->49 [style = dashed, label="0"];
10->35 [style = solid, label="preferredResource5"];
6->40 [style = solid, label="source1"];
26->24 [style = bold, label=""];
24->18 [style = bold, label=""];
27->22 [style = bold, label=""];
31->11 [style = bold, label=""];
58->53 [style = solid, label="operator"];
56->51 [style = bold, label=""];
8->17 [style = bold, label=""];
5->1 [style = bold, label=""];
51->52 [style = solid, label="preferredResources"];
33->47 [style = bold, label=""];
49->12 [style = solid, label="windowed"];
45->36 [style = solid, label="sink"];
43->27 [style = bold, label=""];
1->32 [style = bold, label=""];
2->38 [style = solid, label="minResource6"];
33->40 [style = solid, label="minResource1"];
10->2 [style = bold, label=""];
29->35 [style = bold, label=""];
22->6 [style = bold, label=""];
20->35 [style = solid, label="minResource5"];
19->33 [style = bold, label=""];
39->16 [style = bold, label=""];
47->14 [style = solid, label="preferredResource1"];
47->3 [style = bold, label=""];
20->1 [style = solid, label="minResource5"];
16->11 [style = solid, label="preferredResource3"];
18->34 [style = bold, label=""];
44->29 [style = bold, label=""];
33->7 [style = solid, label="minResource1"];
0->44 [style = solid, label="minResource4"];
45->36 [style = bold, label=""];
38->9 [style = bold, label=""];
35->49 [style = bold, label=""];
13->39 [style = bold, label=""];
53->50 [style = bold, label=""];
4->12 [style = solid, label="windowed"];
15->5 [style = solid, label="preferredResource4"];
29->35 [style = solid, label="connected"];
30->21 [style = bold, label=""];
18->21 [style = solid, label="preferredResource7"];
23->19 [style = bold, label=""];
51->53 [style = solid, label="preferredResources"];
4->12 [style = bold, label=""];
47->40 [style = solid, label="preferredResource1"];
13->8 [style = solid, label="preferredResource2"];
56->50 [style = solid, label="minResources"];
34->43 [style = bold, label=""];
16->41 [style = solid, label="preferredResource3"];
24->36 [style = solid, label="minResource7"];
9->30 [style = bold, label=""];
58->55 [style = bold, label=""];
2->12 [style = solid, label="minResource6"];
35->4 [style = bold, label=""];
50->52 [style = bold, label=""];
20->10 [style = bold, label=""];
42->46 [style = solid, label="map1"];
32->38 [style = bold, label=""];
15->44 [style = solid, label="preferredResource4"];
36->7 [style = bold, label=""];
39->17 [style = solid, label="minResource3"];
6->40 [style = bold, label=""];
28->44 [style = bold, label=""];
48->19 [style = bold, label=""];
3->13 [style = bold, label=""];
25->8 [style = bold, label=""];
24->30 [style = solid, label="minResource7"];
55->54 [style = bold, label=""];
40->42 [style = bold, label=""];
}
