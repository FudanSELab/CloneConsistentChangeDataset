digraph {
16 [style = filled, label = "final ZkWorker zkWorker = findWorkerRunningTask(taskId)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "long offset@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return Optional.of(new ByteSource(){@Override public InputStream openStream(){try {return httpClient.go(new Request(HttpMethod.GET,url),new InputStreamResponseHandler()).get()}catch (InterruptedException e) catch (ExecutionException e) }})@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Worker worker = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "worker == null || !workers.containsKey(worker.getHost())@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String taskId@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return Optional.absent()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "streamTaskLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final URL url = TaskRunnerUtils.makeWorkerURL(worker,\"/druid/worker/v1/task/%s/log?offset=%s\",taskId,Long.toString(offset))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return Optional.of(new ByteSource(){@Override public InputStream openStream(){try {return httpClient.go(new Request(HttpMethod.GET,url),new InputStreamResponseHandler()).get()}catch (InterruptedException e) catch (ExecutionException e) }})@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "@SuppressWarnings(\"GuardedBy\") HttpRemoteTaskRunnerWorkItem taskRunnerWorkItem = tasks.get(taskId)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "HttpRemoteTaskRunnerWorkItem taskRunnerWorkItem = tasks.get(taskId)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final String taskId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "zkWorker == null@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String taskId@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "streamTaskLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "taskRunnerWorkItem != null && taskRunnerWorkItem.getState() != HttpRemoteTaskRunnerWorkItem.State.COMPLETE@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final URL url = TaskRunnerUtils.makeWorkerURL(zkWorker.getWorker(),\"/druid/worker/v1/task/%s/log?offset=%s\",taskId,Long.toString(offset))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "worker = taskRunnerWorkItem.getWorker()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "streamTaskLog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final long offset@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13->2 [style = solid, label="taskRunnerWorkItem"];
17->20 [style = dotted, label="true"];
5->13 [style = solid, label="taskId"];
13->10 [style = bold, label=""];
16->15 [style = bold, label=""];
10->15 [style = dashed, label="0"];
20->19 [style = solid, label="taskId"];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
17->18 [style = dotted, label="true"];
9->4 [style = bold, label=""];
11->12 [style = dotted, label="true"];
15->6 [style = dotted, label="false"];
11->5 [style = dotted, label="true"];
2->9 [style = bold, label=""];
15->14 [style = dotted, label="true"];
10->4 [style = solid, label="worker"];
15->19 [style = bold, label=""];
19->6 [style = bold, label=""];
9->6 [style = dotted, label="true"];
5->4 [style = solid, label="offset"];
9->4 [style = dotted, label="false"];
5->4 [style = solid, label="taskId"];
9->6 [style = bold, label=""];
18->19 [style = solid, label="offset"];
12->4 [style = solid, label="offset"];
5->20 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
9->8 [style = dotted, label="false"];
7->9 [style = bold, label=""];
16->15 [style = solid, label="zkWorker"];
3->5 [style = dotted, label="true"];
1->2 [style = solid, label="taskRunnerWorkItem"];
0->1 [style = solid, label="taskId"];
2->7 [style = dotted, label="true"];
11->13 [style = bold, label=""];
3->0 [style = dotted, label="true"];
15->19 [style = dotted, label="false"];
4->8 [style = bold, label=""];
20->16 [style = solid, label="taskId"];
4->19 [style = dashed, label="0"];
10->2 [style = bold, label=""];
7->4 [style = solid, label="worker"];
7->9 [style = solid, label="worker"];
2->7 [style = bold, label=""];
0->4 [style = solid, label="taskId"];
1->10 [style = bold, label=""];
10->9 [style = solid, label="worker"];
17->16 [style = bold, label=""];
}
