digraph {
1 [style = filled, label = "assertEquals(Arrays.asList(CONNECTOR_IDS.get(0)),new ArrayList<>(configState.connectors()))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(0),CONNECTOR_CONFIG_STRUCTS.get(0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testBackgroundUpdateTargetState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "expectPartitionCount(1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PowerMock.verifyAll()@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectConfigure()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(4),TASKS_COMMIT_STRUCT_TWO_TASK_CONNECTOR)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRestoreTargetStateUnexpectedDeletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "configStorage.stop()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "configUpdateListener.onConnectorTargetStateChange(CONNECTOR_IDS.get(0))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "EasyMock.expectLastCall()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(2),TASK_CONFIG_STRUCTS.get(0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<ConsumerRecord<String,byte((>> existingRecords = Arrays.asList(new ConsumerRecord<>(TOPIC,0,0,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0)),new ConsumerRecord<>(TOPIC,0,1,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(1)),new ConsumerRecord<>(TOPIC,0,2,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(2)),new ConsumerRecord<>(TOPIC,0,3,0L,TimestampType.CREATE_TIME,0L,0,0,COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(3)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expectStart(existingRecords,deserialized)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "configStorage.setupAndCreateKafkaBasedLog(TOPIC,DEFAULT_DISTRIBUTED_CONFIG)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectRead(TARGET_STATE_KEYS.get(0),CONFIGS_SERIALIZED.get(0),TARGET_STATE_PAUSED)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(TargetState.STARTED,configState.targetState(CONNECTOR_IDS.get(0)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "configStorage.refresh(0,TimeUnit.SECONDS)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(1),TASK_CONFIG_STRUCTS.get(0))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectStop()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<ConsumerRecord<String,byte((>> existingRecords = Arrays.asList(new ConsumerRecord<>(TOPIC,0,0,0L,TimestampType.CREATE_TIME,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0),new RecordHeaders(),Optional.empty()),new ConsumerRecord<>(TOPIC,0,1,0L,TimestampType.CREATE_TIME,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(1),new RecordHeaders(),Optional.empty()),new ConsumerRecord<>(TOPIC,0,2,0L,TimestampType.CREATE_TIME,0,0,TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(2),new RecordHeaders(),Optional.empty()),new ConsumerRecord<>(TOPIC,0,3,0L,TimestampType.CREATE_TIME,0,0,TARGET_STATE_KEYS.get(0),CONFIGS_SERIALIZED.get(3),new RecordHeaders(),Optional.empty()),new ConsumerRecord<>(TOPIC,0,4,0L,TimestampType.CREATE_TIME,0,0,COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(4),new RecordHeaders(),Optional.empty()))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "List<ConsumerRecord<String,byte((>> existingRecords = Arrays.asList(new ConsumerRecord<>(TOPIC,0,0,0L,TimestampType.CREATE_TIME,0L,0,0,CONNECTOR_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(0)),new ConsumerRecord<>(TOPIC,0,1,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(1)),new ConsumerRecord<>(TOPIC,0,2,0L,TimestampType.CREATE_TIME,0L,0,0,TASK_CONFIG_KEYS.get(1),CONFIGS_SERIALIZED.get(2)),new ConsumerRecord<>(TOPIC,0,3,0L,TimestampType.CREATE_TIME,0L,0,0,TARGET_STATE_KEYS.get(0),CONFIGS_SERIALIZED.get(3)),new ConsumerRecord<>(TOPIC,0,4,0L,TimestampType.CREATE_TIME,0L,0,0,COMMIT_TASKS_CONFIG_KEYS.get(0),CONFIGS_SERIALIZED.get(4)))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "testRestoreTargetStateUnexpectedDeletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(3),TASKS_COMMIT_STRUCT_TWO_TASK_CONNECTOR)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "logOffset = 5@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "deserialized.put(CONFIGS_SERIALIZED.get(3),null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ClusterConfigState configState = configStorage.snapshot()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(5,configState.offset())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PowerMock.verifyAll()@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PowerMock.replayAll()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "configStorage.start()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "LinkedHashMap<byte((,Struct> deserialized = new LinkedHashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
5->3 [style = bold, label=""];
11->20 [style = bold, label=""];
17->5 [style = bold, label=""];
29->5 [style = bold, label=""];
28->30 [style = bold, label=""];
16->10 [style = bold, label=""];
0->19 [style = bold, label=""];
21->15 [style = bold, label=""];
27->31 [style = bold, label=""];
10->17 [style = bold, label=""];
11->12 [style = bold, label=""];
20->1 [style = bold, label=""];
9->8 [style = bold, label=""];
25->7 [style = bold, label=""];
14->27 [style = dashed, label="0"];
30->29 [style = bold, label=""];
12->7 [style = bold, label=""];
4->0 [style = bold, label=""];
3->18 [style = bold, label=""];
9->10 [style = solid, label="deserialized"];
6->14 [style = bold, label=""];
6->27 [style = bold, label=""];
26->0 [style = bold, label=""];
17->28 [style = bold, label=""];
0->23 [style = bold, label=""];
15->11 [style = bold, label=""];
22->0 [style = bold, label=""];
19->23 [style = dashed, label="0"];
19->9 [style = bold, label=""];
31->10 [style = bold, label=""];
7->2 [style = bold, label=""];
12->25 [style = bold, label=""];
0->24 [style = bold, label=""];
23->17 [style = solid, label="existingRecords"];
9->17 [style = solid, label="deserialized"];
1->12 [style = bold, label=""];
24->10 [style = solid, label="existingRecords"];
19->24 [style = dashed, label="0"];
18->21 [style = bold, label=""];
13->6 [style = bold, label=""];
23->9 [style = bold, label=""];
24->9 [style = bold, label=""];
8->13 [style = bold, label=""];
19->17 [style = solid, label="existingRecords"];
}
