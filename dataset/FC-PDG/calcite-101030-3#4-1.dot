digraph {
5 [style = filled, label = "assertFalse(filterator.hasNext())@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(\"tom\",filterator.next())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"dick\",filterator.next())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<String> tomDickHarry = Arrays.asList(\"tom\",\"dick\",\"harry\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(filterator.hasNext())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testOne['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertFalse(filterator.hasNext())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testOne['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "testNulls['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"harry\",filterator.next())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(filterator.hasNext())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(filterator.hasNext())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"ringo\",filterator.next())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Filterator<String> filterator = new Filterator<String>(tomDickHarry.iterator(),)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<String> tomDickHarry = Arrays.asList(\"paul\",null,\"ringo\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(filterator.hasNext())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"paul\",filterator.next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
8->1 [style = bold, label=""];
16->14 [style = bold, label=""];
1->12 [style = dashed, label="0"];
3->6 [style = bold, label=""];
14->15 [style = bold, label=""];
7->0 [style = bold, label=""];
12->3 [style = bold, label=""];
13->12 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
9->10 [style = bold, label=""];
6->7 [style = bold, label=""];
10->5 [style = bold, label=""];
3->16 [style = bold, label=""];
6->16 [style = dashed, label="0"];
0->4 [style = bold, label=""];
11->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
}
