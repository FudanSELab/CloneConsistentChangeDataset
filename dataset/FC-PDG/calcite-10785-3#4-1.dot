digraph {
1 [style = filled, label = "sqlTester.checkFails(\"\"EXTRACT\"('', '<')\",\"Invalid input for EXTRACT xpath: '.*\",true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "sqlTester.checkString(\"\"EXTRACT\"(\" + \"'<books xmlns=\"http://www.contoso\" + \".com/books\"><book><title>Title</title><author>Author Name</author><price>5\" + \".50</price></book></books>'\" + \", '/books:books/books:book', 'books=\"http://www.contoso.com/books\"'\" + \")\",\"<book xmlns=\"http://www.contoso.com/books\"><title>Title</title><author>Author \" + \"Name</author><price>5.50</price></book>\",\"VARCHAR(2000)\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sqlTester.checkString(\"\"EXTRACT\"('<Article><Title>Article1</Title><Authors><Author>Foo</Author><Author>Bar\" + \"</Author></Authors><Body>article text\" + \".</Body></Article>', '/Article/Title')\",\"<Title>Article1</Title>\",\"VARCHAR(2000)\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "sqlTester.checkString(\"\"EXTRACT\"('<Article><Title>Article1</Title><Title>Article2</Title><Authors><Author>Foo\" + \"</Author><Author>Bar</Author></Authors><Body>article text\" + \".</Body></Article>', '/Article/Title')\",\"<Title>Article1</Title><Title>Article2</Title>\",\"VARCHAR(2000)\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SqlTester sqlTester = tester(SqlLibrary.ORACLE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testExtractXml['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "sqlTester.checkString(\"EXISTSNODE('<Article><Title>Article1</Title><Title>Article2</Title><Authors><Author>Foo\" + \"</Author><Author>Bar</Author></Authors><Body>article text\" + \".</Body></Article>', '/Article/Title')\",\"1\",\"INTEGER\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "sqlTester.checkNull(\"\"EXTRACT\"(NULL,'')\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sqlTester.checkFails(\"EXISTSNODE('', '<')\",\"Invalid input for EXISTSNODE xpath: '.*\",true)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "sqlTester.checkNull(\"\"EXTRACT\"('', NULL)\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testExtractXml['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sqlTester.checkNull(\"EXISTSNODE(NULL,'')\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testExistsNode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "sqlTester.checkNull(\"EXISTSNODE('', NULL)\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "sqlTester.checkString(\"EXISTSNODE(\" + \"'<books xmlns=\"http://www.contoso\" + \".com/books\"><book><title>Title</title><author>Author Name</author><price>5\" + \".50</price></book></books>'\" + \", '/books:books/books:book/books:title2', 'books=\"http://www.contoso.com/books\"'\" + \")\",\"0\",\"INTEGER\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "sqlTester.checkString(\"EXISTSNODE('<Article><Title>Article1</Title><Authors><Author>Foo</Author><Author>Bar\" + \"</Author></Authors><Body>article text\" + \".</Body></Article>', '/Article/Title')\",\"1\",\"INTEGER\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sqlTester.checkString(\"EXISTSNODE(\" + \"'<books xmlns=\"http://www.contoso\" + \".com/books\"><book><title>Title</title><author>Author Name</author><price>5\" + \".50</price></book></books>'\" + \", '/books:books/books:book', 'books=\"http://www.contoso.com/books\"'\" + \")\",\"1\",\"INTEGER\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "sqlTester.checkFails(\"EXISTSNODE('', '<','a')\",\"Invalid input for EXISTSNODE xpath: '.*\",true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "sqlTester.checkFails(\"\"EXTRACT\"('', '<','a')\",\"Invalid input for EXTRACT xpath: '.*\",true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sqlTester.checkString(\"EXISTSNODE('<Article><Title>Article1</Title><Authors><Author>Foo</Author><Author>Bar\" + \"</Author></Authors><Body>article text\" + \".</Body></Article>', '/Article/Title/Books')\",\"0\",\"INTEGER\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
10->18 [style = bold, label=""];
15->10 [style = bold, label=""];
16->11 [style = bold, label=""];
11->14 [style = bold, label=""];
0->16 [style = dashed, label="0"];
8->12 [style = dashed, label="0"];
7->0 [style = bold, label=""];
6->17 [style = dashed, label="0"];
19->17 [style = bold, label=""];
9->7 [style = bold, label=""];
4->7 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
2->14 [style = dashed, label="0"];
13->7 [style = bold, label=""];
0->1 [style = bold, label=""];
1->11 [style = dashed, label="0"];
14->12 [style = bold, label=""];
7->16 [style = bold, label=""];
17->15 [style = bold, label=""];
1->2 [style = bold, label=""];
12->19 [style = bold, label=""];
5->19 [style = dashed, label="0"];
2->8 [style = bold, label=""];
}
