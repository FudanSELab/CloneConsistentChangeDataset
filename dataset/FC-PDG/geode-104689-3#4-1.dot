digraph {
2 [style = filled, label = "testCopyOnReadFalseWithHashIndexWithReplicatedRegion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "utils.createHashIndex(indexName,\"p.indexKey\",SEPARATOR + regionName + \" p\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "utils.createIndex(indexName,\"p.indexKey\",\"/\" + regionName + \" p\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "utils.createHashIndex(indexName,\"p.indexKey\",\"/\" + regionName + \" p\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "utils.createReplicateRegion(regionName)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "helpExecuteQueriesCopyOnReadFalse(queries,expectedResults,numObjects,objectsAndResultsMultiplier,true,false)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "utils.getCache().setCopyOnRead(false)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCopyOnReadFalseWithHashIndexWithReplicatedRegion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testCopyOnReadFalseWithCompactRangeIndexWithReplicatedRegion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
4->1 [style = bold, label=""];
7->0 [style = bold, label=""];
1->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
1->7 [style = dashed, label="0"];
5->0 [style = bold, label=""];
4->5 [style = bold, label=""];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
2->3 [style = bold, label=""];
8->3 [style = bold, label=""];
}
