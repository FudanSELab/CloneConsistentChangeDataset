digraph {
2 [style = filled, label = "catalog != null@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "loadTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "loadTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "curCatalog == null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "new AbstractJob(\"Load '\" + curSchema.getName() + \"' tables\"){@Override protected IStatus run(DBRProgressMonitor monitor){try {final List<PostgreTableBase> objects = new ArrayList<>()for (JDBCTable table : curSchema.getTables(monitor)){if (table instanceof PostgreTableBase) {objects.add((PostgreTableBase)table)}}if (wizard.showViews) {objects.addAll(curSchema.getViews(monitor))}objects.sort(DBUtils.nameComparator())UIUtils.syncExec(null)}catch (DBException e) return Status.OK_STATUS}}.schedule()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "curSchema = catalog@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Set<MySQLTableBase> checkedObjects = this.checkedObjects.get(curCatalog)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "curCatalog = catalog@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final boolean isCatalogChecked = isChecked(curCatalog)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final PostgreSchema catalog@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "curSchema == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final Set<PostgreTableBase> checkedObjects = this.checkedObjects.get(curSchema)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final boolean isCatalogChecked = isChecked(curSchema)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "new AbstractJob(\"Load '\" + curCatalog.getName() + \"' tables\"){@Override protected IStatus run(DBRProgressMonitor monitor){try {final List<MySQLTableBase> objects = new ArrayList<>()objects.addAll(curCatalog.getTables(monitor))if (wizard.showViews) {objects.addAll(curCatalog.getViews(monitor))}objects.sort(DBUtils.nameComparator())UIUtils.syncExec(null)}catch (DBException e) return Status.OK_STATUS}}.schedule()@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MySQLCatalog catalog@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "loadTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
8->16 [style = bold, label=""];
5->0 [style = dotted, label="true"];
4->11 [style = dashed, label="0"];
12->11 [style = solid, label="curSchema"];
12->16 [style = solid, label="curSchema"];
13->2 [style = solid, label="catalog"];
0->7 [style = solid, label="catalog"];
15->13 [style = dotted, label="true"];
7->6 [style = solid, label="curCatalog"];
14->16 [style = bold, label=""];
9->0 [style = dotted, label="true"];
2->7 [style = bold, label=""];
6->14 [style = dashed, label="0"];
12->14 [style = bold, label=""];
3->10 [style = dashed, label="0"];
7->6 [style = bold, label=""];
9->2 [style = bold, label=""];
14->8 [style = dotted, label="true"];
7->1 [style = solid, label="curCatalog"];
6->8 [style = bold, label=""];
15->2 [style = bold, label=""];
0->13 [style = dashed, label="0"];
13->12 [style = solid, label="catalog"];
8->1 [style = bold, label=""];
6->8 [style = dotted, label="true"];
11->10 [style = bold, label=""];
2->12 [style = bold, label=""];
14->8 [style = bold, label=""];
7->12 [style = dashed, label="0"];
2->12 [style = dotted, label="true"];
1->4 [style = bold, label=""];
1->16 [style = dashed, label="0"];
2->6 [style = bold, label=""];
7->4 [style = solid, label="curCatalog"];
2->14 [style = bold, label=""];
12->14 [style = solid, label="curSchema"];
16->11 [style = bold, label=""];
6->1 [style = bold, label=""];
4->3 [style = bold, label=""];
0->2 [style = solid, label="catalog"];
2->7 [style = dotted, label="true"];
}
