digraph {
5 [style = filled, label = "sources.addFirst(new MapPropertySource(\"test\",Collections.singletonMap(\"a\",\"b\")))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "shouldAdaptPropertySource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MutablePropertySources sources = new MutablePropertySources()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ConfigurationPropertyName name = ConfigurationPropertyName.of(\"server.port\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"1234\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "sources.addLast(new SystemEnvironmentPropertySource(\"system\",Collections.singletonMap(\"SERVER_PORT\",\"1234\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(iterator.hasNext()).isFalse()@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Iterator<ConfigurationPropertySource> iterator = new SpringConfigurationPropertySources(sources).iterator()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldAdaptSystemEnvironmentPropertySource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldAdaptPropertySource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "sources.addFirst(new MapPropertySource(\"test\",Collections.singletonMap(\"a\",\"b\")))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(iterator.next().getConfigurationProperty(name).getValue()).isEqualTo(\"b\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ConfigurationPropertyName name = ConfigurationPropertyName.of(\"a\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = dashed, label="0"];
6->4 [style = bold, label=""];
4->9 [style = dashed, label="0"];
10->2 [style = bold, label=""];
8->6 [style = bold, label=""];
5->12 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
6->9 [style = bold, label=""];
9->11 [style = bold, label=""];
12->6 [style = bold, label=""];
11->1 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
2->8 [style = bold, label=""];
2->12 [style = bold, label=""];
4->0 [style = bold, label=""];
2->5 [style = bold, label=""];
}
