digraph {
40 [style = filled, label = "List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Mutation rm2 = new Mutation(\"ks1\",cf2.partitionKey()).add(cf2)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(2).getPartitionUpdates())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "row = mutatedCFs.get(0).iterator().next()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Collections.sort(tmutations,new RmComparator())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertNull(mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c1\")))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")))@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "Mutation rm1 = new Mutation(\"ks1\",cf1.partitionKey()).add(cf1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c2\")).value())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "sameKeyDifferentKsRowMutations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "sameKeyDifferentKsRowMutations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertNull(mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c1\")))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(bytes(\"k2v1\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")).value())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ColumnFamily cf2 = makeCf(metadata,\"k2v1\",null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "row = mutatedCFs.get(0).iterator().next()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "PartitionUpdate cf2 = makeCf(metadata,\"k2\",\"k2v1\",null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "sameKeyDifferentCfRowMutations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(2,tmutations.size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))))@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(bytes(\"k1v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1,rm2)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Collections.sort(mutatedCFs,new CfComparator())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Mutation rm1 = new Mutation(bytes(\"k1\"),cf1)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "row = mutatedCFs.get(0).iterator().next()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(bytes(\"k1v1\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")).value())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(4,tmutations.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "PartitionUpdate cf1 = makeCf(metadata,\"k1\",\"k1v1\",null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Mutation rm2 = new Mutation(bytes(\"k2\"),cf2)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")).value())@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Row row = mutatedCFs.get(0).iterator().next()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")))@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(3).getPartitionUpdates())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Collections.sort(mutatedCFs,new CfComparator())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CFMetaData metadata = makeCfMetaData(\"ks1\",\"cf1\",TriggerDefinition.create(\"test\",.getName()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(bytes(\"k1v1\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")).value())@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(bytes(\"k2v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")))@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(3).getColumnFamilies())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ColumnFamily cf1 = makeCf(metadata,\"k1v1\",null)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "CFMetaData metadata = makeCfMetaData(\"ks1\",\"cf1\",TriggerDefinition.create(\"test\",.getName()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c2\")).value())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->18 [style = solid, label="rm2"];
55->17 [style = bold, label=""];
10->50 [style = dashed, label="0"];
6->11 [style = solid, label="metadata"];
15->57 [style = dashed, label="0"];
6->2 [style = solid, label="metadata"];
36->28 [style = bold, label=""];
6->51 [style = dashed, label="0"];
45->31 [style = bold, label=""];
43->18 [style = bold, label=""];
1->30 [style = bold, label=""];
32->6 [style = bold, label=""];
49->55 [style = bold, label=""];
0->53 [style = bold, label=""];
12->40 [style = bold, label=""];
24->49 [style = bold, label=""];
2->5 [style = solid, label="cf1"];
22->47 [style = bold, label=""];
9->38 [style = bold, label=""];
33->44 [style = bold, label=""];
22->13 [style = bold, label=""];
31->43 [style = solid, label="cf2"];
45->26 [style = solid, label="cf1"];
10->50 [style = bold, label=""];
10->52 [style = solid, label="mutatedCFs"];
51->11 [style = solid, label="metadata"];
42->46 [style = bold, label=""];
47->48 [style = bold, label=""];
29->39 [style = bold, label=""];
5->26 [style = dashed, label="0"];
18->12 [style = solid, label="tmutations"];
18->15 [style = bold, label=""];
37->29 [style = bold, label=""];
26->43 [style = bold, label=""];
24->40 [style = dashed, label="0"];
51->0 [style = solid, label="metadata"];
9->8 [style = bold, label=""];
6->2 [style = bold, label=""];
6->17 [style = solid, label="metadata"];
56->10 [style = bold, label=""];
8->17 [style = bold, label=""];
57->12 [style = bold, label=""];
25->37 [style = bold, label=""];
1->16 [style = bold, label=""];
24->55 [style = solid, label="mutatedCFs"];
39->41 [style = bold, label=""];
14->18 [style = bold, label=""];
53->56 [style = bold, label=""];
15->12 [style = bold, label=""];
23->7 [style = bold, label=""];
51->22 [style = solid, label="metadata"];
38->35 [style = bold, label=""];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
21->4 [style = bold, label=""];
30->33 [style = bold, label=""];
26->18 [style = solid, label="rm1"];
6->45 [style = solid, label="metadata"];
3->6 [style = bold, label=""];
40->9 [style = bold, label=""];
12->24 [style = bold, label=""];
11->14 [style = solid, label="cf2"];
6->21 [style = solid, label="metadata"];
11->5 [style = bold, label=""];
31->26 [style = bold, label=""];
17->0 [style = bold, label=""];
11->31 [style = dashed, label="0"];
51->2 [style = bold, label=""];
2->45 [style = dashed, label="0"];
18->57 [style = bold, label=""];
51->53 [style = solid, label="metadata"];
5->18 [style = solid, label="rm1"];
7->19 [style = bold, label=""];
13->34 [style = dashed, label="0"];
2->11 [style = bold, label=""];
22->48 [style = dashed, label="0"];
24->9 [style = bold, label=""];
19->21 [style = bold, label=""];
54->51 [style = bold, label=""];
34->25 [style = bold, label=""];
51->47 [style = solid, label="metadata"];
6->31 [style = solid, label="metadata"];
6->16 [style = solid, label="metadata"];
28->1 [style = bold, label=""];
5->14 [style = bold, label=""];
9->49 [style = dashed, label="0"];
50->52 [style = bold, label=""];
52->20 [style = bold, label=""];
20->22 [style = bold, label=""];
14->43 [style = dashed, label="0"];
0->10 [style = bold, label=""];
6->13 [style = solid, label="metadata"];
21->41 [style = dashed, label="0"];
51->2 [style = solid, label="metadata"];
13->23 [style = bold, label=""];
23->34 [style = bold, label=""];
27->23 [style = bold, label=""];
35->36 [style = bold, label=""];
44->27 [style = bold, label=""];
6->45 [style = bold, label=""];
43->18 [style = solid, label="rm2"];
41->42 [style = bold, label=""];
}
