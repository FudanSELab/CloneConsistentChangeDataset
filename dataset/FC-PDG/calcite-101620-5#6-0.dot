digraph {
2 [style = filled, label = "final Iterable<String> abc = new Iterable<String>(){public Iterator<String> iterator(){return abcList.iterator()}}@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "UnsupportedOperationException e@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final String(( strings = {\"a\",null,\"c\"}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final List<String> list = ImmutableNullableList.copyOf(arrayList)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(abc),equalTo(abcList))@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(list.hashCode(),equalTo(arrayList.hashCode()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "fail(\"expected error, got \" + b)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(list.size(),equalTo(arrayList.size()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final Iterable<String> ab0c = null@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "z += s@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(ab0c),equalTo(ab0cList))@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(arrayList.get(0),equalTo(\"z\"))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final Iterable<String> abc = null@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final List<String> abcList = Arrays.asList(\"a\",\"b\",\"c\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(list,equalTo(arrayList))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "{}@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final List<String> ab0cList = Arrays.asList(\"a\",\"b\",null,\"c\")@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(abc),isA((Class)))@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "{}@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "fail(\"expected error, got \" + b)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(ab0c),equalTo(ab0cList))@@@48@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Iterable<String> ab0c = new Iterable<String>(){public Iterator<String> iterator(){return ab0cList.iterator()}}@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "testImmutableNullableList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "UnsupportedOperationException e@@@27@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(ab0c),not(isA((Class))))@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<String> arrayList = Arrays.asList(\"a\",null,\"c\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(Collections.emptyList()),isA((Class)))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "fail(\"expected error, got \" + b)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "UnsupportedOperationException e@@@21@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(list.size(),equalTo(arrayList.size()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(list.toString(),equalTo(arrayList.toString()))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean b = list.add(\"z\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(arrayList.get(0),equalTo(\"z\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(ab0c),not(isA((Class))))@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "assertThat(list.get(0),equalTo(\"z\"))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testImmutableNullableList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String b = list.set(1,\"z\")@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(abc),equalTo(abcList))@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "String z = \"\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(list.hashCode(),equalTo(arrayList.hashCode()))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(z,equalTo(\"anullc\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "fail(\"expected error, got \" + b)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(list,equalTo(arrayList))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testUnmodifiableArrayList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "final List<String> list = UnmodifiableArrayList.of(strings)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(ImmutableNullableList.copyOf(abcList),isA((Class)))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "arrayList.set(0,\"z\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final List<String> arrayList = Arrays.asList(strings)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(z,equalTo(\"anullc\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final List<String> ab0cList = Arrays.asList(\"a\",\"b\",null,\"c\")@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "UnsupportedOperationException e@@@27@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
44->45 [style = solid, label="strings"];
25->1 [style = bold, label=""];
3->24 [style = bold, label=""];
42->45 [style = bold, label=""];
46->5 [style = bold, label=""];
25->30 [style = bold, label=""];
27->9 [style = bold, label=""];
28->26 [style = solid, label="abcList"];
40->25 [style = bold, label=""];
21->37 [style = dashed, label="0"];
24->4 [style = solid, label="ab0cList"];
28->3 [style = solid, label="abcList"];
1->46 [style = bold, label=""];
17->43 [style = solid, label="b"];
23->29 [style = bold, label=""];
15->17 [style = bold, label=""];
18->22 [style = bold, label=""];
24->21 [style = bold, label=""];
49->13 [style = bold, label=""];
14->9 [style = bold, label=""];
35->10 [style = bold, label=""];
19->28 [style = bold, label=""];
14->50 [style = solid, label="b"];
5->27 [style = solid, label="b"];
42->29 [style = solid, label="arrayList"];
1->48 [style = dashed, label="0"];
31->32 [style = solid, label="abc"];
44->42 [style = solid, label="strings"];
21->6 [style = solid, label="ab0c"];
13->40 [style = bold, label=""];
13->7 [style = solid, label="z"];
22->23 [style = bold, label=""];
11->18 [style = bold, label=""];
38->32 [style = bold, label=""];
6->4 [style = bold, label=""];
32->36 [style = bold, label=""];
47->44 [style = bold, label=""];
14->8 [style = bold, label=""];
34->14 [style = bold, label=""];
36->37 [style = bold, label=""];
45->29 [style = solid, label="list"];
20->19 [style = bold, label=""];
31->38 [style = solid, label="abc"];
25->1 [style = solid, label="z"];
0->16 [style = bold, label=""];
44->42 [style = bold, label=""];
45->23 [style = bold, label=""];
48->14 [style = bold, label=""];
36->10 [style = solid, label="ab0cList"];
50->17 [style = bold, label=""];
28->26 [style = bold, label=""];
9->20 [style = bold, label=""];
31->38 [style = bold, label=""];
9->20 [style = solid, label="b"];
29->49 [style = bold, label=""];
2->10 [style = bold, label=""];
17->43 [style = bold, label=""];
21->4 [style = solid, label="ab0c"];
26->31 [style = bold, label=""];
14->50 [style = bold, label=""];
37->35 [style = bold, label=""];
37->10 [style = solid, label="ab0c"];
33->17 [style = bold, label=""];
2->10 [style = solid, label="abc"];
37->35 [style = solid, label="ab0c"];
16->11 [style = bold, label=""];
30->1 [style = bold, label=""];
0->16 [style = solid, label="arrayList"];
21->6 [style = bold, label=""];
28->32 [style = solid, label="abcList"];
10->3 [style = bold, label=""];
2->3 [style = solid, label="abc"];
12->0 [style = bold, label=""];
17->19 [style = bold, label=""];
2->31 [style = dashed, label="0"];
9->41 [style = bold, label=""];
26->2 [style = bold, label=""];
41->17 [style = bold, label=""];
16->18 [style = solid, label="list"];
39->0 [style = bold, label=""];
13->7 [style = bold, label=""];
8->9 [style = bold, label=""];
5->48 [style = bold, label=""];
7->25 [style = bold, label=""];
5->27 [style = bold, label=""];
0->18 [style = solid, label="arrayList"];
29->13 [style = bold, label=""];
}
