digraph {
9 [style = filled, label = "final RetentionLeases retentionLeases = mock()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRetentionLeaseSyncActionOnPrimary['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "verify(indexShard).persistRetentionLeases()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final IndexShard indexShard = mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(success.get())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final RetentionLeaseSyncAction.Request request = new RetentionLeaseSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ShardId shardId = new ShardId(index,id)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Index index = new Index(\"index\",\"uuid\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new IndexingPressure(Settings.EMPTY),EmptySystemIndices.INSTANCE)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "final AtomicBoolean success = new AtomicBoolean()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "action.shardOperationOnReplica(request,indexShard,listener)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testRetentionLeaseSyncActionOnPrimary['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final IndexService indexService = mock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final RetentionLeaseBackgroundSyncAction.Request request = new RetentionLeaseBackgroundSyncAction.Request(indexShard.shardId(),retentionLeases)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "verify(indexShard).updateRetentionLeasesOnReplica(retentionLeases)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(indexShard.shardId()).thenReturn(shardId)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int id = randomIntBetween(0,4)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "action.dispatchedShardOperationOnPrimary(request,indexShard,ActionTestUtils.assertNoFailureListener(null))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final PlainActionFuture<TransportReplicationAction.ReplicaResult> listener = PlainActionFuture.newFuture()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final TransportReplicationAction.ReplicaResult result = listener.actionGet()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testRetentionLeaseBackgroundSyncActionOnReplica['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final RetentionLeaseBackgroundSyncAction action = new RetentionLeaseBackgroundSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "result.runPostReplicaActions(ActionListener.wrap(null,null))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final IndicesService indicesService = mock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final RetentionLeaseSyncAction action = new RetentionLeaseSyncAction(Settings.EMPTY,transportService,clusterService,indicesService,threadPool,shardStateAction,new ActionFilters(Collections.emptySet()),new IndexingPressure(Settings.EMPTY),new SystemIndices(Map.of()))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "when(indicesService.indexServiceSafe(index)).thenReturn(indexService)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(indexService.getShard(id)).thenReturn(indexShard)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
9->10 [style = solid, label="retentionLeases"];
18->24 [style = bold, label=""];
24->19 [style = bold, label=""];
16->11 [style = bold, label=""];
9->20 [style = solid, label="retentionLeases"];
3->26 [style = dashed, label="0"];
11->3 [style = solid, label="indicesService"];
6->2 [style = solid, label="indexShard"];
21->22 [style = solid, label="listener"];
5->26 [style = bold, label=""];
26->9 [style = bold, label=""];
9->20 [style = bold, label=""];
11->12 [style = bold, label=""];
8->6 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
5->14 [style = bold, label=""];
4->20 [style = solid, label="shardId"];
17->23 [style = bold, label=""];
20->22 [style = solid, label="request"];
19->25 [style = bold, label=""];
12->4 [style = solid, label="index"];
1->11 [style = bold, label=""];
8->4 [style = solid, label="id"];
20->21 [style = bold, label=""];
3->9 [style = bold, label=""];
12->13 [style = bold, label=""];
4->10 [style = solid, label="shardId"];
6->7 [style = solid, label="indexShard"];
15->11 [style = bold, label=""];
21->22 [style = bold, label=""];
4->5 [style = solid, label="shardId"];
6->22 [style = solid, label="indexShard"];
0->8 [style = bold, label=""];
9->23 [style = solid, label="retentionLeases"];
22->17 [style = bold, label=""];
10->20 [style = dashed, label="0"];
14->9 [style = bold, label=""];
10->2 [style = bold, label=""];
3->14 [style = dashed, label="0"];
6->7 [style = bold, label=""];
10->2 [style = solid, label="request"];
13->0 [style = solid, label="indexService"];
11->14 [style = solid, label="indicesService"];
4->5 [style = bold, label=""];
23->18 [style = bold, label=""];
11->26 [style = solid, label="indicesService"];
13->0 [style = bold, label=""];
}
