digraph {
39 [style = filled, label = "iter.hasNext()@@@60@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "return true@@@93@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Map<String,String> partErrStates = errStates.get(resourceName)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "!idealStates.containsKey(resource)@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "idealStates.put(resource,new IdealState(resource))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "Partition partition = new Partition(partitionName)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "int bestPossStateSize = bestPossOutput.getResourceMap(resourceName).size()@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider(clusterName)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "IdealState is = idealStates.get(resourceName)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "partErrStates.keySet()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "BestPossibleStateOutput bestPossOutput = calcBestPossState(cache,resources)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "return false@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Map.Entry<Partition,Map<String,String>> entry = iter.next()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Map<String,Map<Partition,Map<String,String>>> bestPossStateMap = bestPossOutput.getStateMap()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "String clusterName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "insIter.hasNext()@@@68@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "extViews == null@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "it.hasNext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "Map.Entry<String,String> insEntry = insIter.next()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "removeEntryWithIgnoredStates['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "Map<String,IdealState> idealStates = new HashMap<>(cache.getIdealStates())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator<Map.Entry<String,Map<String,String>>> partitionInstanceStateMapIter@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Set<String> ignoredStates@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "pair.getValue().getStateModelDefRef().equals(TaskConstants.STATE_MODEL_NAME)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "String resourceName@@@31@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "verifyBestPossAndExtView['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "String state = insEntry.getValue()@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Map<Partition,Map<String,String>> bpStateMap = bestPossOutput.getResourceMap(resourceName)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Map<String,ExternalView> extViews = accessor.getChildValuesMap(keyBuilder.externalViews())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "Iterator<Map.Entry<Partition,Map<String,String>>> iter = bpStateMap.entrySet().iterator()@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "extViews.keySet().retainAll(resources)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "extView == null@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "insIter.hasNext()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "cache.refresh(accessor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "errStates != null@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Map<String,String> instanceStateMap = entry.getValue()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return false@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "String partitionName@@@33@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "partitionInstanceStateMapIter.remove()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "HelixDataAccessor accessor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "is.isExternalViewDisabled()@@@50@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "bestPossStateMap.get(resourceName).put(partition,new HashMap<String,String>())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "boolean result = compareMap(evInstanceStateMap,bpInstanceStateMap)@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "iter.remove()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "instanceStateMap.isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Map.Entry<String,IdealState> pair = it.next()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Iterator<Map.Entry<String,String>> insIter = instanceStateMap.entrySet().iterator()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "removeEntryWithIgnoredStates['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "state.equalsIgnoreCase(HelixDefinedState.DROPPED.toString())@@@71@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "extViews = Collections.emptyMap()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "it.remove()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "resources != null && !resources.isEmpty()@@@19@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<String,Map<String,String>> errStates@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Set<String> resources@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "errStates.keySet()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "!bestPossStateMap.containsKey(resourceName)@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "LOG.info(\"exterView size (\" + extViewSize + \") is different from bestPossState size (\" + bestPossStateSize + \") for resource: \" + resourceName)@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "bestPossStateMap.put(resourceName,new HashMap<Partition,Map<String,String>>())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "bestPossStateMap.get(resourceName).get(partition).put(instanceName,HelixDefinedState.ERROR.toString())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "ExternalView extView = extViews.get(resourceName)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "LOG.info(\"externalView is different from bestPossibleState for partition:\" + partition)@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Set<String> ignoredStates@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "insIter.remove()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "Iterator<Map.Entry<String,String>> insIter = instanceStateMap.entrySet().iterator()@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "return false@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "insIter.remove()@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "LOG.info(\"externalView for \" + resourceName + \" is not available\")@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "Map<String,String> evInstanceStateMap = extView.getRecord().getMapField(partition)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ignoredStates.contains(state)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "extViewSize != bestPossStateSize@@@79@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "instanceStateMap.isEmpty()@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String state = insIter.next().getValue()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "idealStates.keySet().retainAll(resources)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "!bestPossStateMap.get(resourceName).containsKey(partition)@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "partitionInstanceStateMapIter.remove()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "partitionInstanceStateMapIter.hasNext()@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Iterator<Map.Entry<String,IdealState>> it = idealStates.entrySet().iterator()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "int extViewSize = extView.getRecord().getMapFields().size()@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "String instanceName = partErrStates.get(partitionName)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Map.Entry<String,Map<String,String>> entry = partitionInstanceStateMapIter.next()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "instanceStateMap.isEmpty()@@@63@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Map<String,String> instanceStateMap = entry.getValue()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Map<String,String> bpInstanceStateMap = bestPossOutput.getInstanceStateMap(resourceName,new Partition(partition))@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "result == false@@@87@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
73->81 [style = dotted, label="true"];
37->28 [style = bold, label=""];
5->9 [style = bold, label=""];
16->13 [style = dotted, label="true"];
28->20 [style = bold, label=""];
71->52 [style = dotted, label="true"];
70->65 [style = bold, label=""];
28->38 [style = bold, label=""];
73->45 [style = dotted, label="true"];
39->61 [style = bold, label=""];
0->5 [style = solid, label="state"];
22->81 [style = bold, label=""];
3->6 [style = dotted, label="true"];
31->36 [style = solid, label="extView"];
9->16 [style = bold, label=""];
60->24 [style = bold, label=""];
78->55 [style = bold, label=""];
18->73 [style = solid, label="errStates"];
73->51 [style = dotted, label="true"];
2->11 [style = dotted, label="true"];
75->78 [style = solid, label="partition"];
73->48 [style = dotted, label="true"];
55->57 [style = bold, label=""];
30->28 [style = bold, label=""];
61->76 [style = bold, label=""];
27->81 [style = solid, label="instanceName"];
22->80 [style = bold, label=""];
19->63 [style = bold, label=""];
77->39 [style = bold, label=""];
24->17 [style = bold, label=""];
67->68 [style = bold, label=""];
43->84 [style = dotted, label="false"];
43->29 [style = bold, label=""];
81->31 [style = bold, label=""];
38->26 [style = bold, label=""];
75->22 [style = bold, label=""];
26->58 [style = dotted, label="true"];
36->24 [style = dotted, label="true"];
17->21 [style = bold, label=""];
42->32 [style = dotted, label="true"];
2->10 [style = dotted, label="true"];
41->83 [style = solid, label="accessor"];
26->67 [style = bold, label=""];
23->25 [style = bold, label=""];
42->78 [style = bold, label=""];
9->2 [style = bold, label=""];
29->39 [style = bold, label=""];
39->53 [style = dotted, label="true"];
12->11 [style = bold, label=""];
71->52 [style = bold, label=""];
42->31 [style = bold, label=""];
63->69 [style = bold, label=""];
42->72 [style = bold, label=""];
15->14 [style = dotted, label="true"];
39->43 [style = dotted, label="true"];
66->67 [style = solid, label="resources"];
10->7 [style = bold, label=""];
71->75 [style = bold, label=""];
76->25 [style = solid, label="bestPossStateSize"];
79->40 [style = dotted, label="true"];
66->64 [style = solid, label="resources"];
43->35 [style = dotted, label="false"];
76->23 [style = bold, label=""];
3->2 [style = bold, label=""];
75->72 [style = solid, label="partition"];
54->44 [style = bold, label=""];
7->2 [style = bold, label=""];
36->49 [style = bold, label=""];
49->77 [style = bold, label=""];
19->41 [style = dotted, label="true"];
24->74 [style = bold, label=""];
25->82 [style = bold, label=""];
2->12 [style = dotted, label="true"];
53->33 [style = bold, label=""];
10->9 [style = dotted, label="false"];
27->71 [style = bold, label=""];
69->64 [style = solid, label="cache"];
58->67 [style = bold, label=""];
5->8 [style = dotted, label="true"];
3->1 [style = dotted, label="true"];
32->31 [style = bold, label=""];
24->21 [style = dotted, label="false"];
36->60 [style = dotted, label="true"];
46->44 [style = bold, label=""];
61->25 [style = solid, label="extViewSize"];
4->9 [style = bold, label=""];
44->54 [style = bold, label=""];
54->64 [style = bold, label=""];
81->27 [style = bold, label=""];
73->62 [style = dotted, label="true"];
35->70 [style = dotted, label="true"];
16->13 [style = bold, label=""];
9->0 [style = dotted, label="true"];
80->81 [style = bold, label=""];
81->34 [style = bold, label=""];
40->35 [style = bold, label=""];
6->66 [style = dashed, label="0"];
24->17 [style = dotted, label="false"];
72->32 [style = bold, label=""];
28->20 [style = dotted, label="true"];
11->4 [style = bold, label=""];
35->39 [style = bold, label=""];
66->46 [style = solid, label="resources"];
19->18 [style = dotted, label="true"];
65->79 [style = bold, label=""];
56->37 [style = bold, label=""];
31->36 [style = bold, label=""];
50->69 [style = solid, label="clusterName"];
39->53 [style = bold, label=""];
57->42 [style = solid, label="result"];
73->22 [style = dotted, label="true"];
83->59 [style = bold, label=""];
82->78 [style = bold, label=""];
19->66 [style = dotted, label="true"];
2->9 [style = dotted, label="true"];
73->34 [style = dotted, label="true"];
24->31 [style = bold, label=""];
11->10 [style = bold, label=""];
73->34 [style = bold, label=""];
69->83 [style = bold, label=""];
36->60 [style = bold, label=""];
33->43 [style = bold, label=""];
2->4 [style = dotted, label="true"];
38->26 [style = solid, label="extViews"];
42->74 [style = bold, label=""];
67->46 [style = dotted, label="true"];
21->49 [style = bold, label=""];
73->75 [style = dotted, label="true"];
35->79 [style = dotted, label="true"];
76->23 [style = solid, label="bestPossStateSize"];
34->27 [style = bold, label=""];
28->56 [style = dotted, label="true"];
23->78 [style = bold, label=""];
78->57 [style = solid, label="evInstanceStateMap"];
23->25 [style = dotted, label="true"];
2->16 [style = dotted, label="true"];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
19->50 [style = dotted, label="true"];
9->5 [style = dotted, label="true"];
35->70 [style = bold, label=""];
42->72 [style = dotted, label="true"];
5->8 [style = bold, label=""];
26->58 [style = bold, label=""];
44->54 [style = dotted, label="true"];
15->2 [style = bold, label=""];
84->35 [style = bold, label=""];
57->42 [style = bold, label=""];
32->74 [style = bold, label=""];
9->0 [style = bold, label=""];
68->46 [style = bold, label=""];
20->56 [style = bold, label=""];
79->35 [style = bold, label=""];
0->70 [style = dashed, label="0"];
47->73 [style = bold, label=""];
61->23 [style = solid, label="extViewSize"];
66->68 [style = solid, label="resources"];
73->27 [style = dotted, label="true"];
52->75 [style = bold, label=""];
67->44 [style = bold, label=""];
16->2 [style = bold, label=""];
35->65 [style = dotted, label="true"];
56->37 [style = dotted, label="true"];
75->55 [style = solid, label="partition"];
2->12 [style = bold, label=""];
43->29 [style = dotted, label="true"];
22->80 [style = dotted, label="true"];
43->84 [style = bold, label=""];
23->82 [style = dotted, label="true"];
32->78 [style = bold, label=""];
64->47 [style = bold, label=""];
75->80 [style = solid, label="partition"];
15->6 [style = dotted, label="true"];
56->28 [style = bold, label=""];
8->9 [style = bold, label=""];
73->71 [style = dotted, label="true"];
10->4 [style = bold, label=""];
10->4 [style = dotted, label="false"];
59->30 [style = bold, label=""];
7->29 [style = dashed, label="0"];
73->31 [style = bold, label=""];
55->57 [style = solid, label="bpInstanceStateMap"];
39->33 [style = dotted, label="true"];
10->7 [style = dotted, label="true"];
79->40 [style = bold, label=""];
44->64 [style = bold, label=""];
67->68 [style = dotted, label="true"];
}
