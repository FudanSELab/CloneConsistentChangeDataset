digraph {
19 [style = filled, label = "verifyInEquality(SessionWindows.with(9),SessionWindows.with(1))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertNotEquals(SessionWindows.with(1).until(9).hashCode(),SessionWindows.with(1).until(7).hashCode())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertNotEquals(SessionWindows.with(1).grace(9).hashCode(),SessionWindows.with(1).grace(6).hashCode())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(1).after(2).grace(9).until(60).hashCode(),JoinWindows.of(3).before(1).after(2).grace(3).until(60).hashCode())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(9).after(2).grace(3).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(1).after(9).grace(3).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(9).after(2).grace(3).until(60).hashCode(),JoinWindows.of(3).before(1).after(2).grace(3).until(60).hashCode())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNotEquals(SessionWindows.with(9),SessionWindows.with(1))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "verifyInEquality(SessionWindows.with(1).grace(0).until(7),SessionWindows.with(1).grace(6).until(7))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotEquals(SessionWindows.with(1).grace(9),SessionWindows.with(1).grace(6))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertNotEquals(SessionWindows.with(1).grace(0).until(7),SessionWindows.with(1).grace(6).until(7))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertNotEquals(SessionWindows.with(2).grace(6).until(7),SessionWindows.with(1).grace(6).until(7))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(9).hashCode(),JoinWindows.of(3).before(2).hashCode())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "verifyInEquality(SessionWindows.with(1).until(9),SessionWindows.with(1).until(7))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertNotEquals(JoinWindows.of(3).until(90),JoinWindows.of(3).until(60))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertNotEquals(JoinWindows.of(3).grace(9),JoinWindows.of(3).grace(2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNotEquals(SessionWindows.with(9).hashCode(),SessionWindows.with(1).hashCode())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "verifyInEquality(SessionWindows.with(1).grace(6).until(70),SessionWindows.with(1).grace(6).until(7))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertNotEquals(SessionWindows.with(2).grace(6).until(7).hashCode(),SessionWindows.with(1).grace(6).until(7).hashCode())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(1).after(9).grace(3).until(60).hashCode(),JoinWindows.of(3).before(1).after(2).grace(3).until(60).hashCode())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertNotEquals(SessionWindows.with(1).until(9),SessionWindows.with(1).until(7))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertNotEquals(SessionWindows.with(1).grace(0).until(7).hashCode(),SessionWindows.with(1).grace(6).until(7).hashCode())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(1).after(2).grace(3).until(90).hashCode(),JoinWindows.of(3).before(1).after(2).grace(3).until(60).hashCode())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertNotEquals(JoinWindows.of(3).after(9),JoinWindows.of(3).after(2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertNotEquals(JoinWindows.of(3).grace(9).hashCode(),JoinWindows.of(3).grace(2).hashCode())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(1).after(2).grace(9).until(60),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertNotEquals(JoinWindows.of(3).until(90).hashCode(),JoinWindows.of(3).until(60).hashCode())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNotEquals(SessionWindows.with(1).grace(6).until(70),SessionWindows.with(1).grace(6).until(7))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(9),JoinWindows.of(3).before(2))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "equalsAndHashcodeShouldBeValidForNegativeCases['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertNotEquals(JoinWindows.of(9),JoinWindows.of(3))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertNotEquals(JoinWindows.of(3).after(9).hashCode(),JoinWindows.of(3).after(2).hashCode())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "verifyInEquality(SessionWindows.with(1).grace(9),SessionWindows.with(1).grace(6))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertNotEquals(JoinWindows.of(9).hashCode(),JoinWindows.of(3).hashCode())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertNotEquals(SessionWindows.with(1).grace(6).until(70).hashCode(),SessionWindows.with(1).grace(6).until(7).hashCode())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertNotEquals(JoinWindows.of(3).before(1).after(2).grace(3).until(90),JoinWindows.of(3).before(1).after(2).grace(3).until(60))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "verifyInEquality(SessionWindows.with(2).grace(6).until(7),SessionWindows.with(1).grace(6).until(7))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32->35 [style = bold, label=""];
4->18 [style = dashed, label="0"];
35->27 [style = bold, label=""];
28->36 [style = bold, label=""];
5->9 [style = bold, label=""];
3->33 [style = dashed, label="0"];
30->20 [style = bold, label=""];
22->37 [style = bold, label=""];
1->15 [style = dashed, label="0"];
20->34 [style = bold, label=""];
21->33 [style = bold, label=""];
37->25 [style = bold, label=""];
18->15 [style = bold, label=""];
25->32 [style = bold, label=""];
34->31 [style = bold, label=""];
11->12 [style = bold, label=""];
19->17 [style = bold, label=""];
15->16 [style = bold, label=""];
7->3 [style = bold, label=""];
9->6 [style = bold, label=""];
29->26 [style = bold, label=""];
33->23 [style = bold, label=""];
26->30 [style = bold, label=""];
23->29 [style = bold, label=""];
3->19 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
12->2 [style = bold, label=""];
13->19 [style = bold, label=""];
10->30 [style = dashed, label="0"];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
10->0 [style = bold, label=""];
8->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
27->24 [style = bold, label=""];
4->1 [style = bold, label=""];
10->16 [style = dashed, label="0"];
31->28 [style = bold, label=""];
8->4 [style = bold, label=""];
36->38 [style = bold, label=""];
4->29 [style = dashed, label="0"];
38->22 [style = bold, label=""];
1->10 [style = bold, label=""];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
}
