digraph {
17 [style = filled, label = "allGroupsCollector = new TermAllGroupsCollector(field.getName())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "collectors.add(firstPassGroupingCollector)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "return Collections.emptyList()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "firstPhaseGroups.isEmpty()@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "topNGroups > 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "collectors.add(secondPassCollector)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "firstPassGroupingCollector = new TermFirstPassGroupingCollector(field.getName(),groupSort,topNGroups)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "create['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fieldType.getNumericType() != null@@@8@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "create['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return collectors@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "secondPassCollector = new FunctionSecondPassGroupingCollector(v,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true,vs,new HashMap<Object,Object>())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "List<Collector> collectors = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collection<SearchGroup<MutableValue>> v = GroupConverter.toMutable(field,firstPhaseGroups)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ValueSource vs = fieldType.getValueSource(field,null)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "create['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "includeGroupCount@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "collectors.add(allGroupsCollector)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return collectors@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "secondPassCollector = new TermSecondPassGroupingCollector(field.getName(),firstPhaseGroups,groupSort,sortWithinGroup,maxDocPerGroup,needScores,needMaxScore,true)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FieldType fieldType = field.getType()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0->6 [style = bold, label=""];
15->17 [style = dotted, label="true"];
11->8 [style = solid, label="v"];
19->14 [style = solid, label="firstPassGroupingCollector"];
13->15 [style = bold, label=""];
0->1 [style = dotted, label="true"];
3->2 [style = solid, label="secondPassCollector"];
18->20 [style = bold, label=""];
2->4 [style = bold, label=""];
9->11 [style = bold, label=""];
13->19 [style = bold, label=""];
3->2 [style = bold, label=""];
17->18 [style = solid, label="allGroupsCollector"];
17->18 [style = bold, label=""];
12->11 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
6->4 [style = solid, label="collectors"];
6->13 [style = bold, label=""];
12->3 [style = dotted, label="false"];
1->6 [style = bold, label=""];
0->1 [style = bold, label=""];
10->12 [style = bold, label=""];
6->10 [style = bold, label=""];
12->9 [style = bold, label=""];
12->8 [style = dotted, label="true"];
2->19 [style = dashed, label="0"];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
12->9 [style = dotted, label="true"];
9->8 [style = solid, label="vs"];
11->8 [style = bold, label=""];
12->3 [style = bold, label=""];
6->20 [style = solid, label="collectors"];
7->0 [style = bold, label=""];
6->3 [style = bold, label=""];
13->19 [style = dotted, label="true"];
16->6 [style = bold, label=""];
15->20 [style = bold, label=""];
19->14 [style = bold, label=""];
14->15 [style = bold, label=""];
13->14 [style = dotted, label="true"];
8->2 [style = solid, label="secondPassCollector"];
15->17 [style = bold, label=""];
}
