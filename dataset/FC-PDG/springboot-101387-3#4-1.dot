digraph {
4 [style = filled, label = "source.put(\"foo.bar(2(.value\",\"c\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "source.put(\"foo.bar(0(.value\",\"a\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<String,List<JavaBean>> map = this.binder.bind(\"foo\",target).get()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "bindToMapNonScalarCollectionShouldPopulateMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "source.put(\"foo.bar(1(.value\",\"b\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "this.sources.add(source)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<String> values = map.get(\"bar\").stream().map(null).collect(Collectors.toList())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "mockSource.put(\"foo.bar.baz(0(.value\",\"a\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Bindable<Map<String,List<JavaBean>>> target = getMapBindable(,valueType.getType())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<String> values = map.get(\"bar.baz\").stream().map(null).collect(Collectors.toList())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "bindToMapNonScalarCollectionWithDotKeysShouldBind['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MockConfigurationPropertySource mockSource = new MockConfigurationPropertySource()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "mockSource.put(\"foo.bar.baz(1(.value\",\"b\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "bindToMapNonScalarCollectionShouldPopulateMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "mockSource.put(\"foo.bar.baz(2(.value\",\"c\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "this.sources.add(mockSource)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(values).containsExactly(\"a\",\"b\",\"c\")@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Bindable<List<JavaBean>> valueType = Bindable.listOf()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MockConfigurationPropertySource source = new MockConfigurationPropertySource()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->17 [style = bold, label=""];
14->16 [style = bold, label=""];
5->10 [style = bold, label=""];
8->16 [style = dashed, label="0"];
15->7 [style = bold, label=""];
16->6 [style = bold, label=""];
8->6 [style = bold, label=""];
10->13 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
12->9 [style = bold, label=""];
0->17 [style = dashed, label="0"];
1->9 [style = bold, label=""];
6->1 [style = bold, label=""];
1->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
3->7 [style = bold, label=""];
17->16 [style = solid, label="mockSource"];
7->2 [style = bold, label=""];
11->7 [style = bold, label=""];
18->13 [style = bold, label=""];
10->4 [style = bold, label=""];
0->8 [style = solid, label="source"];
4->8 [style = bold, label=""];
4->14 [style = dashed, label="0"];
13->14 [style = bold, label=""];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
6->12 [style = bold, label=""];
}
