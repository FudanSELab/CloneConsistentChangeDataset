digraph {
17 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration.getSolutionSet()).where(0).equalTo(0).flatMap(new MinimumIdFilter(updatedElements))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "DataSet<Tuple2<Long,Long>> initialSolutionSet = env.fromCollection(verticesInput)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration).where(0).equalTo(0).flatMap(new MinimumIdFilterCounting(AGGREGATOR_NAME))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "iteration.registerAggregator(AGGREGATOR_NAME,new LongSumAggregatorWithParameter(componentId))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final long componentId = 1l@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(5,aggr_values(2()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "iteration.registerAggregationConvergenceCriterion(updatedElements,new LongSumAggregator(),new UpdatedElementsConvergenceCriterion(convergenceThreshold))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(6,aggr_values(3()@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<Tuple2<Long,Long>> result = iteration.closeWith(updatedComponentId,updatedComponentId).collect()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IterativeDataSet<Tuple2<Long,Long>> iteration = initialSolutionSet.iterate(MAX_ITERATIONS)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final String UPDATED_ELEMENTS = \"updated.elements.aggr\"@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Collections.sort(result,new TestBaseUtils.TupleComparator<Tuple2<Long,Long>>())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final long convergenceThreshold = 3@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "long(( aggr_values = MinimumIdFilterCounting.aggr_value@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final long convergence_threshold = 3@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration.getSolutionSet()).where(0).equalTo(0).flatMap(new MinimumIdFilter(UPDATED_ELEMENTS))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "DataSet<Tuple2<Long,Long>> edges = env.fromCollection(edgesInput)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testParameterizableAggregator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final String AGGREGATOR_NAME = \"elements.in.component.aggregator\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "List<Tuple2<Long,Long>> expectedResult = Arrays.asList(new Tuple2<>(1L,1L),new Tuple2<>(2L,1L),new Tuple2<>(3L,1L),new Tuple2<>(4L,1L),new Tuple2<>(5L,1L),new Tuple2<>(6L,1L),new Tuple2<>(7L,7L),new Tuple2<>(8L,7L),new Tuple2<>(9L,7L))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String updatedElements = \"updated.elements.aggr\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithNewComponents = iteration.getWorkset().join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).groupBy(0).min(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<Tuple2<Long,Long>> result = iteration.closeWith(updatedComponentId).collect()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "iteration.registerAggregationConvergenceCriterion(UPDATED_ELEMENTS,new LongSumAggregator(),new UpdatedElementsConvergenceCriterion(convergence_threshold))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "final int MAX_ITERATIONS = 5@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testDeltaConnectedComponentsWithParametrizableConvergence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "testDeltaConnectedComponentsWithParametrizableConvergence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(expectedResult,result)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(4,aggr_values(1()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithNewComponents = iteration.join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).groupBy(0).min(1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Collections.sort(result,new TestBaseUtils.TupleComparator<Tuple2<Long,Long>>())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(3,aggr_values(0()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
4->9 [style = bold, label=""];
22->33 [style = solid, label="aggr_values"];
28->18 [style = bold, label=""];
16->15 [style = solid, label="convergenceThreshold"];
9->0 [style = bold, label=""];
19->30 [style = solid, label="AGGREGATOR_NAME"];
14->15 [style = solid, label="updatedElements"];
17->6 [style = bold, label=""];
0->6 [style = bold, label=""];
16->10 [style = bold, label=""];
1->14 [style = dashed, label="0"];
27->30 [style = bold, label=""];
11->21 [style = bold, label=""];
11->4 [style = bold, label=""];
8->3 [style = bold, label=""];
1->0 [style = solid, label="UPDATED_ELEMENTS"];
3->11 [style = bold, label=""];
18->19 [style = bold, label=""];
6->5 [style = solid, label="result"];
9->27 [style = dashed, label="0"];
9->17 [style = bold, label=""];
22->32 [style = bold, label=""];
14->17 [style = solid, label="updatedElements"];
21->24 [style = bold, label=""];
22->25 [style = solid, label="aggr_values"];
7->31 [style = bold, label=""];
19->24 [style = solid, label="AGGREGATOR_NAME"];
23->8 [style = bold, label=""];
2->10 [style = bold, label=""];
12->1 [style = bold, label=""];
18->21 [style = solid, label="MAX_ITERATIONS"];
22->32 [style = solid, label="aggr_values"];
0->17 [style = dashed, label="0"];
30->29 [style = bold, label=""];
2->4 [style = solid, label="convergence_threshold"];
11->15 [style = bold, label=""];
31->20 [style = solid, label="expectedResult"];
20->22 [style = bold, label=""];
8->11 [style = solid, label="initialSolutionSet"];
6->5 [style = bold, label=""];
29->20 [style = solid, label="result"];
6->29 [style = dashed, label="0"];
10->8 [style = bold, label=""];
22->26 [style = solid, label="aggr_values"];
15->9 [style = bold, label=""];
4->15 [style = dashed, label="0"];
19->23 [style = bold, label=""];
6->7 [style = solid, label="result"];
23->24 [style = solid, label="componentId"];
2->16 [style = dashed, label="0"];
25->26 [style = bold, label=""];
32->25 [style = bold, label=""];
1->4 [style = solid, label="UPDATED_ELEMENTS"];
0->30 [style = dashed, label="0"];
29->7 [style = bold, label=""];
5->7 [style = bold, label=""];
1->2 [style = bold, label=""];
31->20 [style = bold, label=""];
26->33 [style = bold, label=""];
13->14 [style = bold, label=""];
24->27 [style = bold, label=""];
29->7 [style = solid, label="result"];
11->21 [style = dashed, label="0"];
}
