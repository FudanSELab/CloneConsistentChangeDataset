digraph {
30 [style = filled, label = "filesToBeRead.add(file.f0.getName())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i < NO_OF_FILES@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "filesToBeRead.add(bootstrap.f0.getName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "hdfs.delete(path,false)@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final Thread t = new Thread(){@Override public void run(){try {monitoringFunction.open(new Configuration())monitoringFunction.run(context)}catch (Exception e) }}@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertArrayEquals(filesToBeRead.toArray(),context.getSeenFiles().toArray())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final org.apache.hadoop.fs.Path(( filesCreated = new org.apache.hadoop.fs.Path((((@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int i = 0@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final FileVerifyingSourceContext context = new FileVerifyingSourceContext(latch,monitoringFunction,1,-1)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "final Set<String> filesToBeRead = new TreeSet<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final org.apache.hadoop.fs.Path(( filesCreated = new org.apache.hadoop.fs.Path((((@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "hdfs.delete(bootstrap.f0,false)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final OneShotLatch latch = new OneShotLatch()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!latch.isTriggered()@@@26@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final FileVerifyingSourceContext context = new FileVerifyingSourceContext(latch,monitoringFunction,1,totalNoOfFilesToBeRead)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "t.start()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Thread t = new Thread(){@Override public void run(){try {monitoringFunction.open(new Configuration())monitoringFunction.run(context)context.close()}catch (Exception e) }}@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "t.join()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ContinuousFileMonitoringFunction<String> monitoringFunction = new ContinuousFileMonitoringFunction<>(format,hdfsURI,FileProcessingMode.PROCESS_ONCE,1,INTERVAL)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "t.start()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(hdfs.exists(bootstrap.f0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "latch.await()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TextInputFormat format = new TextInputFormat(new Path(hdfsURI))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testProcessOnce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertArrayEquals(filesToBeRead.toArray(),context.getSeenFiles().toArray())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final FileVerifyingSourceContext context = new FileVerifyingSourceContext(latch,monitoringFunction)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "t.join()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Tuple2<org.apache.hadoop.fs.Path,String> bootstrap = createFileAndFillWithData(hdfsURI,\"file\",NO_OF_FILES + 1,\"This is test line.\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final ContinuousFileMonitoringFunction<String> monitoringFunction = new ContinuousFileMonitoringFunction<>(format,hdfsURI,FileProcessingMode.PROCESS_CONTINUOUSLY,1,INTERVAL)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "format.setFilesFilter(FilePathFilter.createDefaultFilter())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testProcessOnce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "filesCreated(i( = ignoredFile.f0@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int totalNoOfFilesToBeRead = NO_OF_FILES + 1@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testProcessContinuously['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "filesCreated(i( = file.f0@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Tuple2<org.apache.hadoop.fs.Path,String> file = createFileAndFillWithData(hdfsURI,\"file\",i,\"This is test line.\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32->35 [style = bold, label=""];
10->18 [style = bold, label=""];
8->16 [style = bold, label=""];
18->3 [style = bold, label=""];
8->28 [style = bold, label=""];
22->33 [style = bold, label=""];
4->5 [style = solid, label="monitoringFunction"];
9->24 [style = solid, label="latch"];
4->24 [style = bold, label=""];
24->19 [style = bold, label=""];
6->26 [style = bold, label=""];
34->20 [style = bold, label=""];
16->27 [style = bold, label=""];
36->9 [style = bold, label=""];
32->35 [style = solid, label="totalNoOfFilesToBeRead"];
12->29 [style = solid, label="i"];
0->12 [style = solid, label="i"];
12->23 [style = dotted, label="true"];
12->21 [style = bold, label=""];
15->33 [style = solid, label="format"];
0->12 [style = bold, label=""];
17->9 [style = bold, label=""];
25->9 [style = bold, label=""];
29->31 [style = bold, label=""];
30->23 [style = bold, label=""];
23->29 [style = solid, label="i"];
1->14 [style = solid, label="i"];
31->23 [style = solid, label="i"];
12->1 [style = dotted, label="true"];
24->19 [style = solid, label="context"];
5->24 [style = dashed, label="0"];
1->31 [style = dashed, label="0"];
14->23 [style = dotted, label="true"];
6->0 [style = bold, label=""];
14->12 [style = solid, label="i"];
20->6 [style = bold, label=""];
9->10 [style = bold, label=""];
23->14 [style = solid, label="i"];
23->29 [style = dashed, label="0"];
28->16 [style = bold, label=""];
4->33 [style = dashed, label="0"];
15->22 [style = bold, label=""];
21->2 [style = bold, label=""];
22->4 [style = bold, label=""];
15->4 [style = solid, label="format"];
23->14 [style = bold, label=""];
0->23 [style = solid, label="i"];
5->19 [style = bold, label=""];
14->30 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
35->34 [style = solid, label="context"];
26->0 [style = bold, label=""];
6->26 [style = dotted, label="true"];
11->0 [style = bold, label=""];
5->19 [style = solid, label="context"];
9->35 [style = solid, label="latch"];
19->13 [style = bold, label=""];
12->14 [style = solid, label="i"];
3->7 [style = bold, label=""];
6->11 [style = bold, label=""];
14->12 [style = bold, label=""];
31->30 [style = bold, label=""];
12->14 [style = bold, label=""];
14->29 [style = bold, label=""];
4->24 [style = solid, label="monitoringFunction"];
23->1 [style = bold, label=""];
14->29 [style = dotted, label="true"];
7->15 [style = bold, label=""];
33->32 [style = bold, label=""];
14->23 [style = solid, label="i"];
1->14 [style = bold, label=""];
12->23 [style = bold, label=""];
14->8 [style = bold, label=""];
14->31 [style = dotted, label="true"];
33->35 [style = solid, label="monitoringFunction"];
9->5 [style = solid, label="latch"];
35->34 [style = bold, label=""];
4->5 [style = bold, label=""];
20->6 [style = dotted, label="true"];
2->8 [style = bold, label=""];
20->11 [style = bold, label=""];
13->20 [style = bold, label=""];
}
