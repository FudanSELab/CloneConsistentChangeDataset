digraph {
17 [style = filled, label = "testReplaceRegex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertContains(\"moon Sun Sun\",contents)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertStringContains(contents,\"moon Sun Sun\")@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertContains(\"world world world world\",contents)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "assertStringContains(contents,\"hello world\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "buildRule.executeTarget(\"hasregex\")@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertNotContains(\"This is a line with digits\",contents)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "return@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "String contents = getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregex\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertContains(\"Found digits (1234(\",contents)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "String contents = getFileString(\"replaceregex\",getProject().getProperty(\"output\") + \"/replaceregex\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertStringContains(contents,\"found WhiteSpace\")@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testReplaceRegex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertContains(\"found WhiteSpace\",contents)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "String contents = getFileString(\"containsregex\",getProject().getProperty(\"output\") + \"/containsregex\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "!hasRegex(\"testContainsRegex\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertStringContains(contents,\"Found digits (1234(\")@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assume.assumeTrue(\"Regex not present\",getFileString(buildRule.getProject().getProperty(\"output\") + \"/replaceregexp\").contains(\"bye world\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertContains(\"dog Cat dog\",contents)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertStringNotContains(contents,\"this is the moon\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertStringContains(contents,\"dog Cat dog\")@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertStringNotContains(contents,\"This is a line with digits\")@@@10@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!hasRegex(\"testReplaceRegex\")@@@3@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testContainsRegex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertStringContains(contents,\"World here\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "buildRule.executeTarget(\"replaceregex\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertStringContains(contents,\"world world world world\")@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
6->3 [style = bold, label=""];
13->10 [style = bold, label=""];
1->4 [style = bold, label=""];
9->0 [style = bold, label=""];
20->12 [style = solid, label="contents"];
7->18 [style = dashed, label="0"];
25->22 [style = bold, label=""];
7->0 [style = solid, label="contents"];
10->14 [style = bold, label=""];
21->27 [style = bold, label=""];
7->3 [style = solid, label="contents"];
7->5 [style = solid, label="contents"];
20->10 [style = solid, label="contents"];
19->20 [style = bold, label=""];
8->23 [style = dashed, label="0"];
20->14 [style = solid, label="contents"];
18->19 [style = bold, label=""];
20->11 [style = solid, label="contents"];
20->16 [style = solid, label="contents"];
4->2 [style = bold, label=""];
4->26 [style = dashed, label="0"];
3->22 [style = dashed, label="0"];
15->18 [style = bold, label=""];
22->23 [style = bold, label=""];
27->23 [style = solid, label="contents"];
7->9 [style = solid, label="contents"];
4->7 [style = bold, label=""];
7->8 [style = solid, label="contents"];
26->21 [style = bold, label=""];
7->27 [style = dashed, label="0"];
12->13 [style = bold, label=""];
24->26 [style = bold, label=""];
26->27 [style = bold, label=""];
7->6 [style = solid, label="contents"];
6->25 [style = dashed, label="0"];
26->21 [style = dotted, label="true"];
27->22 [style = solid, label="contents"];
3->8 [style = bold, label=""];
7->6 [style = bold, label=""];
27->25 [style = solid, label="contents"];
8->9 [style = bold, label=""];
17->15 [style = bold, label=""];
2->7 [style = bold, label=""];
16->12 [style = bold, label=""];
27->25 [style = bold, label=""];
4->2 [style = dotted, label="true"];
20->13 [style = solid, label="contents"];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
