digraph {
9 [style = filled, label = "Snapshot parentSnapshot = base.currentSnapshot()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(\"Should contain append from last commit\",1,Iterables.size(base.currentSnapshot().addedFiles()))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Current snapshot should be first commit's snapshot\",firstSnapshotId,base.currentSnapshot().snapshotId())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for both files\",2,base.currentSnapshot().allManifests().size())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Assert.assertEquals(\"Should have all the snapshots\",6,base.snapshots().size())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "long firstSnapshotId = parentSnapshot.snapshotId()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for four files\",4,base.currentSnapshot().manifests().size())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "table.newAppend().appendFile(FILE_A).commit()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Current snapshot should be set to one after wap snapshot\",parentSnapshot.snapshotId() + 1,base.currentSnapshot().snapshotId())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(\"Should contain append from last commit\",1,Iterables.size(base.currentSnapshot().addedFiles()))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "table.newAppend().appendFile(FILE_B).set(\"wap.id\",\"123456789\").stageOnly().commit()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(\"Snapshot log should indicate number of snapshots committed\",3,base.snapshotLog().size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "table.manageSnapshots().cherrypick(wap2Snapshot.snapshotId()).commit()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "base = readMetadata()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testWithTwoPhaseCherryPicking['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(\"Should have first wap id in summary\",\"123456789\",wap1Snapshot.summary().get(\"wap.id\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "parentSnapshot = base.currentSnapshot()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testWithTwoPhaseCherryPicking['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "parentSnapshot = base.currentSnapshot()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Parent snapshot id should be same for second WAP snapshot\",firstSnapshotId,wap2Snapshot.parentId().longValue())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TableMetadata base = readMetadata()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Should contain append from last commit\",1,Iterables.size(base.currentSnapshot().addedFiles()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "base = readMetadata()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(\"Should have five snapshots\",5,base.snapshots().size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Snapshot wap1Snapshot = base.snapshots().get(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(\"Current snapshot should be set to one after wap snapshot\",parentSnapshot.snapshotId() + 1,base.currentSnapshot().snapshotId())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "base = readMetadata()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "Assert.assertEquals(\"Snapshot log should indicate number of snapshots committed\",2,base.snapshotLog().size())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(\"Snapshot log should indicate number of snapshots committed\",2,base.snapshotLog().size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for three files\",3,base.currentSnapshot().manifests().size())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Should have three snapshots\",3,base.snapshots().size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "parentSnapshot = base.currentSnapshot()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Parent snapshot id should change to latest snapshot before commit\",parentSnapshot.snapshotId(),base.currentSnapshot().parentId().longValue())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(\"Snapshot log should indicate number of snapshots committed\",1,base.snapshotLog().size())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "parentSnapshot = base.currentSnapshot()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "base = readMetadata()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for both files\",3,base.currentSnapshot().allManifests().size())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "table.newAppend().appendFile(FILE_D).commit()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Parent snapshot id should be same for first WAP snapshot\",firstSnapshotId,wap1Snapshot.parentId().longValue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testWithCommitsBetweenCherryPicking['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Assert.assertEquals(\"Parent snapshot id should point to same snapshot\",parentSnapshot.snapshotId(),base.currentSnapshot().parentId().longValue())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for both files\",2,base.currentSnapshot().manifests().size())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Snapshot wap2Snapshot = base.snapshots().get(2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "table.newAppend().appendFile(FILE_C).set(\"wap.id\",\"987654321\").stageOnly().commit()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for two files\",2,base.currentSnapshot().manifests().size())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Should contain append from last commit\",1,Iterables.size(base.currentSnapshot().addedFiles()))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(\"Snapshot log should indicate number of snapshots committed\",4,base.snapshotLog().size())@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(\"Should have second wap id in summary\",\"987654321\",wap2Snapshot.summary().get(\"wap.id\"))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(\"Should have four snapshots\",4,base.snapshots().size())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.assertEquals(\"Parent snapshot id should point to same snapshot\",parentSnapshot.snapshotId(),base.currentSnapshot().parentId().longValue())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Assert.assertEquals(\"Current snapshot should be set to one after wap snapshot\",parentSnapshot.snapshotId() + 1,base.currentSnapshot().snapshotId())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Should contain manifests for both files\",3,base.currentSnapshot().manifests().size())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "table.manageSnapshots().cherrypick(wap1Snapshot.snapshotId()).commit()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertEquals(\"Current snapshot should carry over the parent snapshot\",parentSnapshot.snapshotId(),base.currentSnapshot().parentId().longValue())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
14->24 [style = bold, label=""];
11->20 [style = bold, label=""];
21->47 [style = bold, label=""];
24->12 [style = bold, label=""];
30->1 [style = bold, label=""];
34->20 [style = bold, label=""];
21->0 [style = bold, label=""];
23->45 [style = bold, label=""];
11->40 [style = dashed, label="0"];
6->22 [style = bold, label=""];
40->51 [style = bold, label=""];
11->34 [style = dashed, label="0"];
37->41 [style = bold, label=""];
51->21 [style = bold, label=""];
28->7 [style = bold, label=""];
18->19 [style = bold, label=""];
7->37 [style = bold, label=""];
2->18 [style = bold, label=""];
0->36 [style = dashed, label="0"];
12->26 [style = bold, label=""];
19->17 [style = bold, label=""];
44->49 [style = bold, label=""];
50->48 [style = bold, label=""];
45->53 [style = bold, label=""];
17->42 [style = dashed, label="0"];
14->31 [style = solid, label="firstSnapshotId"];
22->30 [style = bold, label=""];
5->25 [style = bold, label=""];
35->25 [style = bold, label=""];
20->21 [style = bold, label=""];
2->53 [style = dashed, label="0"];
3->10 [style = bold, label=""];
29->6 [style = bold, label=""];
27->4 [style = bold, label=""];
13->27 [style = bold, label=""];
23->33 [style = bold, label=""];
27->46 [style = bold, label=""];
21->47 [style = dashed, label="0"];
49->52 [style = bold, label=""];
33->18 [style = bold, label=""];
19->39 [style = dashed, label="0"];
14->1 [style = solid, label="firstSnapshotId"];
1->16 [style = bold, label=""];
10->23 [style = bold, label=""];
16->31 [style = bold, label=""];
17->39 [style = bold, label=""];
26->15 [style = bold, label=""];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
52->50 [style = bold, label=""];
25->8 [style = bold, label=""];
2->33 [style = dashed, label="0"];
23->2 [style = bold, label=""];
31->28 [style = bold, label=""];
48->13 [style = bold, label=""];
0->32 [style = bold, label=""];
46->40 [style = bold, label=""];
53->38 [style = bold, label=""];
4->11 [style = bold, label=""];
43->25 [style = bold, label=""];
32->3 [style = bold, label=""];
38->17 [style = bold, label=""];
41->44 [style = bold, label=""];
39->42 [style = bold, label=""];
47->36 [style = bold, label=""];
14->16 [style = solid, label="firstSnapshotId"];
15->29 [style = bold, label=""];
4->34 [style = bold, label=""];
36->3 [style = bold, label=""];
}
