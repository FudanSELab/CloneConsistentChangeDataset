digraph {
4 [style = filled, label = "Config config = ConfigFactory.parseMap(ImmutableMap.builder().put(\"destinationFormats\",\"flattenedOrc\").put(\"flattenedOrc.destination.dbName\",dbName).put(\"flattenedOrc.destination.tableName\",tableName + \"_orc\").put(\"flattenedOrc.destination.dataPath\",\"file:\" + tableSdLoc + \"_orc\").build())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(queries.size(),4,\"4 DDL and one DML query should be returned\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "this.hiveMetastoreTestUtils.getLocalMetastoreClient().dropDatabase(dbName,false,true,true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Schema schema = ConversionHiveTestUtils.readSchemaFromJsonFile(resourceDir,\"recordWithinRecordWithinRecord_nested.json\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testFlattenSchemaDDLandDML['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "testFlattenSchemaDDLandDML['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String expectedDMLQuery = StringUtils.substringAfter(\"SELECT\",ConversionHiveTestUtils.readQueryFromFile(resourceDir,\"recordWithinRecordWithinRecord_nested.dml\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<QueryBasedHiveConversionEntity> conversionEntities = Lists.newArrayList(converter.convertRecord(converter.convertSchema(schema,wus),new QueryBasedHiveConversionEntity(cd,new SchemaAwareHiveTable(table,schema)),wus))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String dbName = \"testdb\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(conversionEntities.size(),1,\"Only one query entity should be returned\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "this.hiveMetastoreTestUtils.getLocalMetastoreClient().dropDatabase(dbName,false,true,true)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "String actualDMLQuery = StringUtils.substringAfter(\"SELECT\",queries.get(0).trim())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String tableSdLoc = new File(this.tmpDir,TEST_TABLE).getAbsolutePath()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "String expectedDDLQuery = StringUtils.substringAfter(\"(\",ConversionHiveTestUtils.readQueryFromFile(resourceDir,\"recordWithinRecordWithinRecord_nested.ddl\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Config config = ConfigFactory.parseMap(ImmutableMap.builder().put(\"destinationFormats\",\"flattenedOrc\").put(\"flattenedOrc.destination.dbName\",dbName).put(\"flattenedOrc.destination.tableName\",TEST_TABLE + \"_orc\").put(\"flattenedOrc.destination.dataPath\",\"file:\" + tableSdLoc + \"_orc\").build())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Table table = this.hiveMetastoreTestUtils.createTestAvroTable(dbName,tableName,tableSdLoc,Optional.absent())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testNestedSchemaDDLandDML['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ConvertibleHiveDataset cd = ConvertibleHiveDatasetTest.createTestConvertibleDataset(config)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "Config config = ConfigFactory.parseMap(ImmutableMap.builder().put(\"destinationFormats\",\"nestedOrc\").put(\"nestedOrc.destination.tableName\",\"testtable_orc_nested\").put(\"nestedOrc.destination.dbName\",dbName).put(\"nestedOrc.destination.dataPath\",\"file:/tmp/testtable_orc_nested\").build())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<String> queries = queryBasedHiveConversionEntity.getQueries()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<QueryBasedHiveConversionEntity> conversionEntities = Lists.newArrayList(converter.convertRecord(converter.convertSchema(schema,wus),new QueryBasedHiveConversionEntity(cd,new SchemaAwareHiveTable(table,schema)),wus))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "WorkUnitState wus = ConversionHiveTestUtils.createWus(dbName,tableName,0)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Schema schema = ConversionHiveTestUtils.readSchemaFromJsonFile(resourceDir,\"recordWithinRecordWithinRecord_nested.json\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "String tableName = \"testtable\"@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(actualDMLQuery,expectedDMLQuery)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "QueryBasedHiveConversionEntity queryBasedHiveConversionEntity = conversionEntities.get(0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(actualDDLQuery,expectedDDLQuery)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String actualDDLQuery = StringUtils.substringAfter(\"(\",queries.get(0).trim())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(actualDMLQuery,expectedDMLQuery)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "QueryBasedHiveConversionEntity queryBasedHiveConversionEntity = conversionEntities.get(0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String tableSdLoc = \"/tmp/testtable\"@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "wus.getJobState().setProp(\"orc.table.flatten.schema\",\"false\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ConvertibleHiveDataset cd = ConvertibleHiveDatasetTest.createTestConvertibleDataset(config)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(actualDDLQuery,expectedDDLQuery)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
22->26 [style = bold, label=""];
8->16 [style = bold, label=""];
14->24 [style = bold, label=""];
8->30 [style = bold, label=""];
2->29 [style = solid, label="schema"];
15->2 [style = bold, label=""];
27->32 [style = bold, label=""];
8->33 [style = solid, label="actualDMLQuery"];
3->2 [style = dashed, label="0"];
24->2 [style = bold, label=""];
3->29 [style = solid, label="wus"];
16->31 [style = dashed, label="0"];
17->6 [style = bold, label=""];
10->19 [style = bold, label=""];
2->3 [style = bold, label=""];
32->9 [style = solid, label="config"];
26->14 [style = bold, label=""];
20->6 [style = solid, label="actualDMLQuery"];
12->20 [style = bold, label=""];
14->18 [style = solid, label="table"];
8->17 [style = solid, label="expectedDMLQuery"];
4->18 [style = bold, label=""];
11->12 [style = bold, label=""];
7->0 [style = bold, label=""];
1->15 [style = solid, label="tableName"];
16->17 [style = bold, label=""];
5->14 [style = bold, label=""];
9->10 [style = bold, label=""];
8->17 [style = solid, label="expectedDDLQuery"];
21->18 [style = solid, label="cd"];
11->16 [style = solid, label="actualDDLQuery"];
30->6 [style = solid, label="expectedDDLQuery"];
23->0 [style = bold, label=""];
3->4 [style = bold, label=""];
13->11 [style = bold, label=""];
21->18 [style = bold, label=""];
0->2 [style = solid, label="dbName"];
15->29 [style = solid, label="table"];
20->6 [style = solid, label="actualDDLQuery"];
3->27 [style = bold, label=""];
1->22 [style = dashed, label="0"];
4->25 [style = dashed, label="0"];
28->0 [style = bold, label=""];
32->9 [style = bold, label=""];
5->15 [style = solid, label="tableSdLoc"];
18->9 [style = solid, label="cd"];
25->21 [style = solid, label="config"];
20->8 [style = bold, label=""];
24->18 [style = solid, label="schema"];
2->18 [style = solid, label="wus"];
12->17 [style = solid, label="actualDMLQuery"];
31->6 [style = bold, label=""];
19->13 [style = bold, label=""];
29->19 [style = bold, label=""];
9->29 [style = solid, label="cd"];
9->29 [style = dashed, label="0"];
30->31 [style = bold, label=""];
15->14 [style = dashed, label="0"];
0->1 [style = bold, label=""];
6->33 [style = bold, label=""];
0->22 [style = bold, label=""];
15->9 [style = solid, label="table"];
3->9 [style = solid, label="wus"];
22->14 [style = solid, label="tableSdLoc"];
0->3 [style = solid, label="dbName"];
16->6 [style = solid, label="expectedDMLQuery"];
18->9 [style = bold, label=""];
31->33 [style = solid, label="expectedDMLQuery"];
0->26 [style = solid, label="dbName"];
12->17 [style = solid, label="actualDDLQuery"];
14->15 [style = bold, label=""];
8->30 [style = dashed, label="0"];
2->9 [style = solid, label="schema"];
2->25 [style = bold, label=""];
9->29 [style = bold, label=""];
1->3 [style = solid, label="tableName"];
4->18 [style = solid, label="config"];
20->16 [style = solid, label="expectedDDLQuery"];
25->21 [style = bold, label=""];
0->14 [style = solid, label="dbName"];
0->15 [style = solid, label="dbName"];
}
