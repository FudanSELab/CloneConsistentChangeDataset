digraph {
10 [style = filled, label = "values.put(\"b\",2)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "subManyFieldsWithSubsubs['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "values.put(\"c\",3.1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(4 * 123456789123456789L,result)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "values.put(\"a\",1.1)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"a\",1.1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "values.put(\"d\",4.123456789123456)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(10.4D,result)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.assertEquals(10D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "Assert.assertEquals(0L,result)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "values.put(\"c\",123456789123456789L)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.put(\"b\",2.1)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,sub(c,d))\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"add(a,b,add(c,d))\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "values.put(\"d\",4.1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "values.put(\"a\",123456789123456789L)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "values.clear()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "values.put(\"b\",2.1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.put(\"d\",4)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "addManyFieldsWithSubAdds['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "values.put(\"b\",123456789123456789L)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertEquals(0L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "values.put(\"c\",3)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "values.put(\"d\",123456789123456789L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "values.put(\"c\",3.1)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "addManyFieldsWithSubAdds['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(10L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "values.clear()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(10.423456789123456,result)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(10.1D,result)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->41 [style = solid, label="result"];
26->42 [style = bold, label=""];
48->49 [style = bold, label=""];
20->13 [style = bold, label=""];
46->16 [style = bold, label=""];
0->26 [style = bold, label=""];
23->1 [style = solid, label="result"];
34->19 [style = solid, label="result"];
16->10 [style = bold, label=""];
13->22 [style = solid, label="result"];
38->11 [style = bold, label=""];
41->8 [style = bold, label=""];
21->15 [style = bold, label=""];
12->17 [style = bold, label=""];
35->19 [style = bold, label=""];
22->41 [style = bold, label=""];
42->7 [style = solid, label="result"];
25->4 [style = bold, label=""];
39->6 [style = bold, label=""];
45->16 [style = bold, label=""];
9->30 [style = bold, label=""];
4->29 [style = bold, label=""];
13->40 [style = bold, label=""];
6->0 [style = bold, label=""];
16->32 [style = bold, label=""];
30->37 [style = bold, label=""];
29->34 [style = bold, label=""];
40->22 [style = solid, label="result"];
34->46 [style = solid, label="result"];
37->47 [style = solid, label="result"];
17->49 [style = dashed, label="0"];
24->18 [style = bold, label=""];
44->17 [style = bold, label=""];
38->37 [style = dashed, label="0"];
36->20 [style = bold, label=""];
34->43 [style = solid, label="result"];
43->45 [style = bold, label=""];
5->25 [style = bold, label=""];
10->36 [style = bold, label=""];
42->28 [style = solid, label="result"];
19->16 [style = bold, label=""];
37->11 [style = solid, label="result"];
3->9 [style = bold, label=""];
49->24 [style = bold, label=""];
26->42 [style = solid, label="result"];
30->37 [style = solid, label="result"];
37->38 [style = solid, label="result"];
17->24 [style = bold, label=""];
28->21 [style = bold, label=""];
34->35 [style = solid, label="result"];
27->23 [style = solid, label="result"];
11->47 [style = dashed, label="0"];
26->7 [style = solid, label="result"];
7->28 [style = bold, label=""];
31->27 [style = bold, label=""];
19->46 [style = dashed, label="0"];
37->38 [style = bold, label=""];
18->5 [style = bold, label=""];
2->14 [style = bold, label=""];
40->22 [style = bold, label=""];
23->1 [style = bold, label=""];
33->31 [style = bold, label=""];
38->47 [style = bold, label=""];
13->40 [style = solid, label="result"];
27->23 [style = bold, label=""];
1->2 [style = bold, label=""];
42->7 [style = bold, label=""];
34->35 [style = bold, label=""];
35->43 [style = dashed, label="0"];
8->39 [style = bold, label=""];
14->32 [style = bold, label=""];
32->3 [style = bold, label=""];
34->43 [style = bold, label=""];
23->2 [style = solid, label="result"];
27->1 [style = solid, label="result"];
15->33 [style = bold, label=""];
35->46 [style = bold, label=""];
}
