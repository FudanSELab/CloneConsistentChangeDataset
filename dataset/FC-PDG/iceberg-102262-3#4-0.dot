digraph {
0 [style = filled, label = "Assert.assertEquals(\"Should have 2 records\",2,resultIN.size())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertArrayEquals(\"Should produce the expected record\",expected.toArray(),resultNotNull.toArray())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(\"Explain should contain the push down filter\",explainIN.contains(expectedFilter))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(\"Explain should contain the push down filter\",explainNotNull.contains(expectedFilter))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Object((> resultNotNull = sql(sqlNotNull)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Should create only one scan\",1,scanEventCount)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String explainIN = getTableEnv().explainSql(sqlIN)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Should have 2 record\",2,resultNotNull.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedIN.add(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c4ae27)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Object((> expectedIN = Lists.newArrayList()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<Object((> resultIN = sql(sqlIN)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String sqlIN = String.format(\"SELECT * FROM %s WHERE id IN (1,2) \",TABLE_NAME)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String explainNotNull = getTableEnv().explainSql(sqlNotNull)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testFilterPushDownIsNotNull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testFilterPushDownIn['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String expectedFilter = \"not_null(ref(name=\"data\"))\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "expected.add(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c4ae89)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "String sqlNotNull = String.format(\"SELECT * FROM %s WHERE data IS NOT NULL\",TABLE_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<Object((> expected = Lists.newArrayList()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expectedIN.add(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c4ae1d)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFilterPushDownIn['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Should contain the push down filter\",expectedFilter,lastScanEvent.filter().toString())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expected.add(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c4ae93)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String expectedFilter = \"(ref(name=\"id\") == 1 or ref(name=\"id\") == 2)\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertArrayEquals(\"Should produce the expected record\",expectedIN.toArray(),resultIN.toArray())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->19 [style = dashed, label="0"];
8->10 [style = bold, label=""];
15->23 [style = bold, label=""];
18->3 [style = bold, label=""];
15->23 [style = solid, label="sqlNotNull"];
19->18 [style = bold, label=""];
24->19 [style = bold, label=""];
4->17 [style = dashed, label="0"];
9->24 [style = dashed, label="0"];
5->7 [style = solid, label="sqlIN"];
21->15 [style = bold, label=""];
11->6 [style = bold, label=""];
0->2 [style = bold, label=""];
6->12 [style = solid, label="expectedFilter"];
0->16 [style = dashed, label="0"];
5->11 [style = solid, label="sqlIN"];
7->20 [style = dashed, label="0"];
10->3 [style = bold, label=""];
14->17 [style = bold, label=""];
11->23 [style = dashed, label="0"];
7->0 [style = bold, label=""];
2->9 [style = bold, label=""];
14->17 [style = solid, label="expectedFilter"];
3->12 [style = bold, label=""];
6->14 [style = dashed, label="0"];
15->20 [style = solid, label="sqlNotNull"];
9->8 [style = bold, label=""];
16->22 [style = bold, label=""];
4->7 [style = bold, label=""];
14->12 [style = solid, label="expectedFilter"];
23->14 [style = bold, label=""];
6->4 [style = bold, label=""];
6->4 [style = solid, label="expectedFilter"];
20->16 [style = bold, label=""];
5->6 [style = bold, label=""];
13->5 [style = bold, label=""];
5->11 [style = bold, label=""];
22->24 [style = bold, label=""];
6->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
2->22 [style = dashed, label="0"];
10->18 [style = dashed, label="0"];
17->20 [style = bold, label=""];
}
