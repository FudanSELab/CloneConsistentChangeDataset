digraph {
10 [style = filled, label = "File check = new File(buildRule.getProject().getBaseDir(),\"expected/copy.filterset.filtered\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(FileUtilities.getFileContents(check),FileUtilities.getFileContents(tmp))@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "File check = new File(getProjectDir(),\"expected/copy.filterset.filtered\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "buildRule.executeTarget(\"testFilterChain\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "File tmp = new File(getOutputDir(),\"copy.filterset.tmp\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "File tmp = new File(getOutputDir(),\"move.filterchain.tmp\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "executeTarget(\"testFilterSet\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(tmp.exists())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFilterSet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "executeTarget(\"testFilterChain\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testFilterChain['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "File tmp = new File(buildRule.getProject().getProperty(\"output\"),\"move.filterchain.tmp\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(FILE_UTILS.contentEquals(tmp,check))@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testFilterChain['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8->10 [style = bold, label=""];
11->5 [style = solid, label="tmp"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
0->12 [style = dashed, label="0"];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
8->7 [style = solid, label="tmp"];
4->7 [style = bold, label=""];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
11->3 [style = bold, label=""];
1->11 [style = dashed, label="0"];
0->1 [style = bold, label=""];
10->4 [style = bold, label=""];
1->5 [style = solid, label="tmp"];
1->8 [style = dashed, label="0"];
10->7 [style = solid, label="check"];
3->10 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
6->9 [style = bold, label=""];
4->5 [style = bold, label=""];
3->5 [style = solid, label="check"];
}
