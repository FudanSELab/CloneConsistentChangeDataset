digraph {
6 [style = filled, label = "dedupesSameCalls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "callFactory.maybeAdd(\"foo\",calls)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "call.execute()@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(calls).hasSize(2)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "AssertionError e@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(testFactory.values).containsExactly(\"foo\",\"bar\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testFactory.maybeAdd(\"foo\",calls)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "calls.get(1).execute()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(values).containsExactly(\"bar\",\"foo\")@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<Call<Void>> calls = new ArrayList<>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(values).containsExactly(\"foo\",\"bar\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "callFactory.maybeAdd(\"bar\",calls)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "failBecauseExceptionWasNotThrown()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testFactory.maybeAdd(\"bar\",calls)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testFactory.maybeAdd(\"bar\",calls)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertThat(calls).isNotEmpty()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "callFactory.maybeAdd(\"foo\",calls)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testFactory.maybeAdd(\"bar\",calls)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "calls.clear()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testFactory.maybeAdd(\"foo\",calls)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "dedupesSameCalls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "callFactory.maybeAdd(\"bar\",calls)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "calls.get(0).execute()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "calls.get(0).execute()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "exceptionsInvalidate_execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(values).containsExactly(\"bar\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "{}@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "callFactory.maybeAdd(\"bar\",calls)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "TestFactory testFactory = new TestFactory()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "callFactory.maybeAdd(\"foo\",calls)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "failValue.set(\"foo\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(calls).hasSize(2)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "call.execute()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7->2 [style = solid, label="calls"];
1->8 [style = bold, label=""];
0->26 [style = bold, label=""];
9->0 [style = bold, label=""];
16->10 [style = bold, label=""];
31->32 [style = bold, label=""];
9->12 [style = solid, label="calls"];
9->17 [style = solid, label="calls"];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
20->28 [style = bold, label=""];
27->30 [style = bold, label=""];
7->0 [style = solid, label="calls"];
1->18 [style = dashed, label="0"];
19->17 [style = bold, label=""];
7->4 [style = solid, label="calls"];
2->4 [style = bold, label=""];
0->17 [style = dashed, label="0"];
30->29 [style = bold, label=""];
29->21 [style = bold, label=""];
22->7 [style = bold, label=""];
4->12 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
9->19 [style = dashed, label="0"];
7->9 [style = bold, label=""];
7->21 [style = solid, label="calls"];
3->5 [style = bold, label=""];
23->24 [style = bold, label=""];
21->31 [style = bold, label=""];
7->9 [style = solid, label="calls"];
5->11 [style = dashed, label="0"];
7->1 [style = solid, label="calls"];
9->15 [style = solid, label="calls"];
32->25 [style = bold, label=""];
12->18 [style = bold, label=""];
17->15 [style = bold, label=""];
9->19 [style = bold, label=""];
14->9 [style = bold, label=""];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
28->27 [style = bold, label=""];
9->18 [style = solid, label="calls"];
6->7 [style = bold, label=""];
9->19 [style = solid, label="calls"];
13->14 [style = bold, label=""];
24->27 [style = bold, label=""];
26->20 [style = bold, label=""];
10->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
