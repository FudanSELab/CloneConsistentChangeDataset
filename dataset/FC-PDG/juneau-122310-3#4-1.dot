digraph {
9 [style = filled, label = "List<Header> pairs@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "list.removeAll(l)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "addDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "String name = p.getName()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertArgNotNull(\"pairs\",pairs)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String key = key(name)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<RequestFormParam> l = map.get(key)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "list.add(x)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "hasAllBlanks@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RequestFormParam x = new RequestFormParam(req,name,p.getValue())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return this@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "return this@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "addDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "l == null || hasAllBlanks@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "map.put(key,AList.of(x))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<RequestHeader> l = map.get(key)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "list.removeAll(l)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "boolean hasAllBlanks = l != null && l.stream().allMatch(null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "RequestHeader x = new RequestHeader(req,name,p.getValue())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "RequestHeader x = new RequestHeader(req,name,vs.resolve(p.getValue()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "List<NameValuePair> pairs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "map.put(key,AList.of(x))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "addDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "hasAllBlanks@@@10@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
11->16 [style = bold, label=""];
5->10 [style = bold, label=""];
6->16 [style = solid, label="name"];
21->8 [style = solid, label="hasAllBlanks"];
21->7 [style = solid, label="hasAllBlanks"];
0->13 [style = bold, label=""];
10->8 [style = solid, label="l"];
11->14 [style = bold, label=""];
13->4 [style = solid, label="x"];
9->18 [style = dashed, label="0"];
6->13 [style = solid, label="name"];
8->17 [style = dotted, label="true"];
4->19 [style = bold, label=""];
8->16 [style = dotted, label="true"];
7->0 [style = solid, label="hasAllBlanks"];
23->6 [style = solid, label="name"];
11->14 [style = dotted, label="true"];
0->11 [style = bold, label=""];
7->11 [style = solid, label="hasAllBlanks"];
3->6 [style = bold, label=""];
5->21 [style = solid, label="l"];
8->6 [style = bold, label=""];
6->5 [style = solid, label="key"];
7->8 [style = bold, label=""];
15->3 [style = bold, label=""];
10->7 [style = bold, label=""];
17->11 [style = bold, label=""];
23->11 [style = solid, label="name"];
8->4 [style = dotted, label="true"];
15->9 [style = dotted, label="true"];
22->4 [style = bold, label=""];
20->18 [style = dotted, label="true"];
8->0 [style = bold, label=""];
8->17 [style = bold, label=""];
5->21 [style = bold, label=""];
6->5 [style = solid, label="name"];
7->8 [style = solid, label="hasAllBlanks"];
6->5 [style = bold, label=""];
8->1 [style = dotted, label="true"];
16->4 [style = solid, label="x"];
1->6 [style = bold, label=""];
20->23 [style = bold, label=""];
7->11 [style = dotted, label="true"];
8->2 [style = bold, label=""];
16->1 [style = solid, label="x"];
5->7 [style = solid, label="l"];
5->17 [style = solid, label="l"];
23->6 [style = bold, label=""];
11->13 [style = bold, label=""];
7->23 [style = bold, label=""];
7->4 [style = dotted, label="true"];
13->16 [style = dashed, label="0"];
11->22 [style = bold, label=""];
11->4 [style = solid, label="x"];
8->11 [style = dotted, label="true"];
5->1 [style = solid, label="key"];
10->7 [style = solid, label="l"];
9->3 [style = solid, label="pairs"];
21->7 [style = bold, label=""];
10->14 [style = solid, label="l"];
10->11 [style = solid, label="l"];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
12->3 [style = bold, label=""];
8->0 [style = dotted, label="true"];
8->13 [style = dotted, label="true"];
16->4 [style = bold, label=""];
7->22 [style = dotted, label="true"];
10->5 [style = dashed, label="0"];
7->8 [style = dotted, label="true"];
12->9 [style = dotted, label="true"];
5->10 [style = solid, label="key"];
8->11 [style = bold, label=""];
6->4 [style = solid, label="key"];
7->19 [style = bold, label=""];
0->11 [style = dotted, label="true"];
13->1 [style = solid, label="x"];
4->23 [style = bold, label=""];
13->11 [style = dashed, label="0"];
11->22 [style = solid, label="x"];
13->4 [style = bold, label=""];
}
