digraph {
10 [style = filled, label = "assertRouteForBroadcastTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Collection<String> tableNames = Collections.emptyList()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds1\",\"t_order\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(mock(),createSQLStatementContext(tableNames),tableNames)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(sqlStatementContext.getTablesContext().getTableNames()).thenReturn(tableNames)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertRouteForBroadcastTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(true))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "ShardingTableBroadcastRoutingEngine shardingTableBroadcastRoutingEngine = new ShardingTableBroadcastRoutingEngine(schema,sqlStatementContext,tableNames)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "when(segment.getIdentifier().getValue()).thenReturn(\"t_order\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Collection<String> tableNames = Collections.singletonList(\"t_order\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "shardingTableBroadcastRoutingEngine.route(routeContext,createShardingRule(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(routeContext.getActualDataSourceNames().size(),is(2))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertRouteUnitWithoutTables(routeContext)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(schema.get(anyString()).getIndexes().containsKey(anyString())).thenReturn(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(routeContext.getRouteUnits().size(),is(2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ShardingSphereSchema schema = mock(,RETURNS_DEEP_STUBS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "SQLStatementContext<DropIndexStatement> sqlStatementContext = mock(,RETURNS_DEEP_STUBS)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RouteContext routeContext = new RouteContext()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RouteContext routeContext = shardingTableBroadcastRoutingEngine.route(createShardingRule(true))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "IndexSegment segment = mock(,RETURNS_DEEP_STUBS)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Iterator<RouteUnit> routeUnits = routeContext.getRouteUnits().iterator()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertRouteForDropIndexStatementDoNotFoundTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertRouteUnit(routeUnits.next(),\"ds0\",\"t_order\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
17->8 [style = bold, label=""];
5->8 [style = bold, label=""];
15->17 [style = solid, label="schema"];
12->11 [style = bold, label=""];
0->3 [style = solid, label="tableNames"];
1->21 [style = dashed, label="0"];
19->17 [style = bold, label=""];
3->12 [style = bold, label=""];
16->19 [style = bold, label=""];
11->9 [style = bold, label=""];
3->4 [style = bold, label=""];
21->18 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
16->17 [style = solid, label="tableNames"];
4->12 [style = dashed, label="0"];
4->1 [style = solid, label="routeContext"];
8->21 [style = solid, label="routeContext"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
23->22 [style = bold, label=""];
20->23 [style = bold, label=""];
15->20 [style = bold, label=""];
10->0 [style = bold, label=""];
8->21 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
6->7 [style = bold, label=""];
22->14 [style = bold, label=""];
8->18 [style = solid, label="routeContext"];
16->19 [style = solid, label="tableNames"];
14->17 [style = solid, label="sqlStatementContext"];
}
