digraph {
2 [style = filled, label = "Flowable<Integer> source = Flowable.never()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "scheduler.advanceTimeBy(999,TimeUnit.MILLISECONDS)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestSubscriber<List<Integer>> ts = new TestSubscriber<>(subscriber,0L)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "scheduler.advanceTimeBy(1001,TimeUnit.MILLISECONDS)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "InOrder inOrder = Mockito.inOrder(subscriber)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "source.buffer(100,200,TimeUnit.MILLISECONDS,scheduler).doOnNext(new Consumer<List<Integer>>(){@Override public void accept(List<Integer> pv){System.out.println(pv)}}).subscribe(to)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "inOrder.verify(subscriber,times(5)).onNext(Arrays.asList())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "bufferStopsWhenUnsubscribed1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "InOrder inOrder = Mockito.inOrder(o)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "inOrder.verify(o,times(5)).onNext(Arrays.asList())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "inOrder.verifyNoMoreInteractions()@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Observable<Integer> source = Observable.never()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TestSubscriber<List<Integer>> ts = new TestSubscriber<List<Integer>>(subscriber,0L)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "bufferStopsWhenUnsubscribed1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Subscriber<List<Integer>> subscriber = TestHelper.mockSubscriber()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "to.dispose()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "bufferStopsWhenUnsubscribed1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ts.cancel()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Observer<List<Integer>> o = TestHelper.mockObserver()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TestObserver<List<Integer>> to = new TestObserver<List<Integer>>(o)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->19 [style = dashed, label="0"];
0->16 [style = bold, label=""];
7->12 [style = solid, label="subscriber"];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
17->15 [style = solid, label="o"];
17->16 [style = solid, label="o"];
7->17 [style = dashed, label="0"];
18->19 [style = bold, label=""];
12->0 [style = solid, label="ts"];
1->18 [style = bold, label=""];
4->2 [style = bold, label=""];
7->6 [style = solid, label="subscriber"];
12->0 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
7->3 [style = solid, label="subscriber"];
6->1 [style = bold, label=""];
13->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
3->12 [style = dashed, label="0"];
10->8 [style = bold, label=""];
16->1 [style = bold, label=""];
19->9 [style = bold, label=""];
2->13 [style = dashed, label="0"];
15->0 [style = solid, label="to"];
15->0 [style = bold, label=""];
17->15 [style = bold, label=""];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
3->15 [style = dashed, label="0"];
3->0 [style = solid, label="ts"];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
1->10 [style = bold, label=""];
10->18 [style = dashed, label="0"];
}
