digraph {
3 [style = filled, label = "i++@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).size(),equalTo(2))@@@87@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@88@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@79@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertThat(routingNodes.node(\"node3\").numberOfShardsWithState(STARTED),equalTo(4))@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(0).currentNodeId(),nullValue())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@97@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node2\"))).build()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(\"cluster.routing.allocation.node_concurrent_recoveries\",10).put(\"cluster.routing.allocation.node_initial_primaries_recoveries\",10).put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),\"always\").put(\"cluster.routing.allocation.cluster_concurrent_rebalance\",-1).build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
129 [style = filled, label = "logger.info(\"Adding three node and performing rerouting\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test\")).addAsNew(metaData.index(\"test1\")).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@91@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@103@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "testBalanceIncrementallyStartNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "int i = 0@@@82@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
127 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@92@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "clusterState = newState@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).currentNodeId(),nullValue())@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@101@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@81@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@64@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@107@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
92 [style = filled, label = "assertThat(routingNodes.node(\"node1\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@96@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@68@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@104@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@86@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(routingNodes.node(\"node2\").numberOfShardsWithState(STARTED),equalTo(4))@@@94@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "i++@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(STARTED))@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "clusterState = newState@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@89@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i++@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertThat(routingNodes.node(\"node1\").numberOfShardsWithState(STARTED),equalTo(4))@@@93@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(routingNodes.node(\"node1\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@99@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "i++@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(0).currentNodeId(),nullValue())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "i++@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@62@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@69@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "assertThat(routingNodes.node(\"node2\").numberOfShardsWithState(STARTED),equalTo(4))@@@110@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
98 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(1).state(),equalTo(UNASSIGNED))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "testBalanceIncrementallyStartNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
86 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@80@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes())).build()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
133 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\")).add(newNode(\"node3\"))).build()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "clusterState = newState@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(0).state(),equalTo(UNASSIGNED))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@85@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@103@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
122 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ClusterState newState = strategy.reroute(clusterState,\"reroute\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "logger.info(\"Start the primary shard\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "logger.info(\"Another round of rebalancing\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "clusterState = newState@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@51@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertThat(routingNodes.node(\"node3\").numberOfShardsWithState(STARTED),equalTo(4))@@@95@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "int i = 0@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@73@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "logger.info(\"Start the more shards\")@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@72@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(3).numberOfReplicas(1)).build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "logger.info(\"Start the backup shard\")@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(newState,equalTo(clusterState))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "clusterState = newState@@@102@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
132 [style = filled, label = "testBalanceAllNodesStarted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "int i = 0@@@84@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "int i = 0@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().size(),equalTo(1))@@@90@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(routingNodes.node(\"node2\").shardsWithState(\"test1\",STARTED).size(),equalTo(2))@@@100@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "logger.info(\"Reroute, nothing should change\")@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().size(),equalTo(2))@@@78@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shards().size(),equalTo(3))@@@83@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(0).state(),equalTo(UNASSIGNED))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@77@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "clusterState = newState@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "logger.info(\"Building initial routing table\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "newState = strategy.reroute(clusterState,\"reroute\")@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@107@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@100@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertThat(newState,not(equalTo(clusterState)))@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\"))).build()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "logger.info(\"Adding one node and performing rerouting\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(routingNodes.node(\"node3\").shardsWithState(\"test\",STARTED).size(),equalTo(2))@@@98@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).size(),equalTo(2))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@56@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int i = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().get(1).currentNodeId(),nullValue())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(1).state(),equalTo(UNASSIGNED))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).replicaShards().size(),equalTo(1))@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@112@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).shards().get(1).currentNodeId(),nullValue())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "newState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(INITIALIZING))@@@109@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "clusterState = newState@@@70@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shard(i).size(),equalTo(2))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < clusterState.routingTable().index(\"test\").shards().size()@@@75@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(routingNodes.node(\"node1\").numberOfShardsWithState(STARTED),equalTo(4))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test\").shards().size(),equalTo(3))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "newState = startInitializingShardsAndReroute(strategy,clusterState)@@@68@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "int i = 0@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "logger.info(\"Add another node and perform rerouting, nothing will happen since primary not started\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47->129 [style = bold, label=""];
94->76 [style = bold, label=""];
67->22 [style = dotted, label="true"];
47->93 [style = bold, label=""];
94->116 [style = bold, label=""];
14->101 [style = bold, label=""];
100->84 [style = bold, label=""];
104->74 [style = solid, label="clusterState"];
111->29 [style = dotted, label="true"];
5->100 [style = solid, label="i"];
50->111 [style = solid, label="i"];
26->10 [style = bold, label=""];
111->100 [style = dotted, label="true"];
128->18 [style = bold, label=""];
23->59 [style = dotted, label="true"];
80->103 [style = bold, label=""];
8->63 [style = bold, label=""];
55->103 [style = solid, label="i"];
93->129 [style = dashed, label="0"];
69->4 [style = bold, label=""];
68->66 [style = bold, label=""];
97->70 [style = bold, label=""];
69->4 [style = solid, label="newState"];
25->53 [style = bold, label=""];
15->80 [style = bold, label=""];
72->4 [style = solid, label="clusterState"];
75->38 [style = bold, label=""];
69->26 [style = solid, label="newState"];
88->90 [style = solid, label="strategy"];
1->21 [style = dotted, label="true"];
47->98 [style = dotted, label="true"];
67->71 [style = bold, label=""];
67->31 [style = dotted, label="true"];
74->41 [style = solid, label="newState"];
91->44 [style = bold, label=""];
100->63 [style = dotted, label="true"];
29->95 [style = bold, label=""];
43->23 [style = bold, label=""];
130->128 [style = bold, label=""];
100->107 [style = bold, label=""];
105->53 [style = solid, label="clusterState"];
92->87 [style = bold, label=""];
26->90 [style = solid, label="clusterState"];
99->127 [style = dashed, label="0"];
1->64 [style = dotted, label="true"];
118->109 [style = bold, label=""];
115->96 [style = bold, label=""];
54->131 [style = dashed, label="0"];
56->83 [style = bold, label=""];
1->78 [style = bold, label=""];
119->112 [style = bold, label=""];
2->62 [style = bold, label=""];
74->55 [style = solid, label="newState"];
88->96 [style = solid, label="strategy"];
65->9 [style = bold, label=""];
69->26 [style = solid, label="clusterState"];
37->43 [style = solid, label="i"];
85->112 [style = bold, label=""];
82->18 [style = bold, label=""];
47->91 [style = dotted, label="true"];
16->124 [style = bold, label=""];
100->8 [style = dotted, label="true"];
70->107 [style = bold, label=""];
1->0 [style = dotted, label="true"];
1->106 [style = dotted, label="true"];
112->89 [style = solid, label="clusterState"];
101->17 [style = bold, label=""];
25->53 [style = solid, label="newState"];
80->75 [style = dotted, label="true"];
55->80 [style = bold, label=""];
97->118 [style = dashed, label="0"];
103->101 [style = solid, label="i"];
109->16 [style = bold, label=""];
42->108 [style = bold, label=""];
20->110 [style = solid, label="newState"];
77->67 [style = solid, label="i"];
128->85 [style = solid, label="clusterState"];
17->38 [style = dotted, label="true"];
117->72 [style = solid, label="clusterState"];
88->34 [style = bold, label=""];
124->70 [style = bold, label=""];
16->97 [style = bold, label=""];
30->92 [style = bold, label=""];
117->84 [style = solid, label="clusterState"];
26->10 [style = solid, label="newState"];
74->41 [style = bold, label=""];
133->25 [style = bold, label=""];
21->19 [style = bold, label=""];
121->111 [style = bold, label=""];
106->1 [style = solid, label="i"];
38->28 [style = bold, label=""];
54->60 [style = bold, label=""];
9->33 [style = bold, label=""];
99->24 [style = bold, label=""];
52->9 [style = bold, label=""];
32->49 [style = bold, label=""];
128->57 [style = solid, label="clusterState"];
17->111 [style = bold, label=""];
52->65 [style = bold, label=""];
85->104 [style = solid, label="newState"];
80->17 [style = dotted, label="true"];
28->103 [style = bold, label=""];
67->45 [style = dotted, label="true"];
82->128 [style = dashed, label="0"];
111->100 [style = bold, label=""];
23->43 [style = dotted, label="true"];
1->0 [style = bold, label=""];
9->118 [style = bold, label=""];
43->32 [style = dotted, label="true"];
110->131 [style = bold, label=""];
10->7 [style = bold, label=""];
84->72 [style = bold, label=""];
112->122 [style = solid, label="clusterState"];
129->133 [style = bold, label=""];
60->74 [style = bold, label=""];
102->90 [style = dashed, label="0"];
49->73 [style = bold, label=""];
85->112 [style = solid, label="newState"];
43->59 [style = dotted, label="true"];
36->102 [style = bold, label=""];
47->3 [style = dotted, label="true"];
73->59 [style = bold, label=""];
5->100 [style = bold, label=""];
50->100 [style = bold, label=""];
111->63 [style = dotted, label="true"];
105->25 [style = bold, label=""];
39->52 [style = solid, label="newState"];
101->75 [style = bold, label=""];
103->17 [style = bold, label=""];
104->20 [style = solid, label="clusterState"];
83->31 [style = bold, label=""];
126->96 [style = solid, label="clusterState"];
18->57 [style = solid, label="newState"];
40->3 [style = bold, label=""];
23->123 [style = bold, label=""];
57->76 [style = bold, label=""];
112->20 [style = solid, label="clusterState"];
116->119 [style = solid, label="newState"];
111->50 [style = dotted, label="true"];
114->32 [style = bold, label=""];
23->27 [style = dotted, label="true"];
60->54 [style = dashed, label="0"];
80->103 [style = dotted, label="true"];
120->88 [style = bold, label=""];
98->79 [style = bold, label=""];
45->56 [style = bold, label=""];
47->79 [style = dotted, label="true"];
43->49 [style = dotted, label="true"];
80->28 [style = dotted, label="true"];
89->20 [style = bold, label=""];
63->29 [style = bold, label=""];
32->43 [style = solid, label="i"];
111->8 [style = dotted, label="true"];
80->38 [style = dotted, label="true"];
43->114 [style = dotted, label="true"];
37->23 [style = solid, label="i"];
126->52 [style = solid, label="clusterState"];
23->73 [style = dotted, label="true"];
36->126 [style = bold, label=""];
131->60 [style = bold, label=""];
3->47 [style = solid, label="i"];
87->51 [style = bold, label=""];
52->33 [style = solid, label="clusterState"];
105->25 [style = solid, label="clusterState"];
82->119 [style = solid, label="clusterState"];
59->27 [style = bold, label=""];
133->25 [style = solid, label="clusterState"];
14->121 [style = bold, label=""];
112->104 [style = bold, label=""];
113->117 [style = bold, label=""];
72->69 [style = bold, label=""];
27->43 [style = bold, label=""];
22->45 [style = bold, label=""];
121->111 [style = solid, label="i"];
100->8 [style = bold, label=""];
50->100 [style = solid, label="i"];
103->80 [style = bold, label=""];
132->88 [style = bold, label=""];
7->90 [style = solid, label="newState"];
78->46 [style = bold, label=""];
39->96 [style = bold, label=""];
66->1 [style = solid, label="i"];
69->10 [style = solid, label="clusterState"];
93->105 [style = bold, label=""];
35->91 [style = bold, label=""];
23->43 [style = bold, label=""];
116->119 [style = bold, label=""];
96->52 [style = bold, label=""];
23->32 [style = bold, label=""];
33->16 [style = solid, label="newState"];
95->113 [style = bold, label=""];
107->12 [style = bold, label=""];
3->47 [style = bold, label=""];
43->23 [style = solid, label="i"];
54->122 [style = solid, label="newState"];
96->9 [style = solid, label="newState"];
110->54 [style = bold, label=""];
51->6 [style = bold, label=""];
82->85 [style = solid, label="clusterState"];
116->112 [style = solid, label="newState"];
11->88 [style = bold, label=""];
67->130 [style = bold, label=""];
111->5 [style = dotted, label="true"];
55->80 [style = solid, label="i"];
66->1 [style = bold, label=""];
1->19 [style = dotted, label="true"];
67->42 [style = dotted, label="true"];
64->2 [style = bold, label=""];
106->1 [style = bold, label=""];
72->69 [style = solid, label="clusterState"];
43->27 [style = dotted, label="true"];
100->5 [style = dotted, label="true"];
82->116 [style = solid, label="clusterState"];
23->32 [style = dotted, label="true"];
69->36 [style = solid, label="clusterState"];
76->85 [style = bold, label=""];
104->37 [style = bold, label=""];
90->36 [style = bold, label=""];
17->101 [style = dotted, label="true"];
86->14 [style = bold, label=""];
29->50 [style = bold, label=""];
43->89 [style = bold, label=""];
18->57 [style = bold, label=""];
6->13 [style = bold, label=""];
103->80 [style = solid, label="i"];
48->68 [style = bold, label=""];
17->28 [style = dotted, label="true"];
55->15 [style = bold, label=""];
26->39 [style = solid, label="clusterState"];
34->99 [style = bold, label=""];
27->114 [style = bold, label=""];
117->84 [style = bold, label=""];
77->67 [style = bold, label=""];
123->89 [style = bold, label=""];
88->116 [style = solid, label="strategy"];
128->112 [style = solid, label="clusterState"];
66->106 [style = solid, label="i"];
17->75 [style = dotted, label="true"];
111->50 [style = bold, label=""];
113->5 [style = bold, label=""];
82->57 [style = solid, label="clusterState"];
108->22 [style = bold, label=""];
111->113 [style = bold, label=""];
33->109 [style = bold, label=""];
50->5 [style = solid, label="i"];
104->110 [style = solid, label="clusterState"];
90->36 [style = solid, label="newState"];
76->116 [style = dashed, label="0"];
105->133 [style = dashed, label="0"];
5->8 [style = bold, label=""];
53->61 [style = bold, label=""];
46->3 [style = solid, label="i"];
23->32 [style = solid, label="i"];
13->81 [style = bold, label=""];
80->14 [style = bold, label=""];
58->77 [style = bold, label=""];
128->18 [style = solid, label="clusterState"];
20->110 [style = bold, label=""];
102->39 [style = bold, label=""];
104->41 [style = solid, label="clusterState"];
125->41 [style = bold, label=""];
41->55 [style = bold, label=""];
34->127 [style = bold, label=""];
39->96 [style = solid, label="newState"];
33->109 [style = solid, label="newState"];
112->54 [style = solid, label="clusterState"];
90->126 [style = solid, label="newState"];
50->111 [style = bold, label=""];
127->24 [style = bold, label=""];
121->50 [style = solid, label="i"];
4->26 [style = bold, label=""];
17->86 [style = dotted, label="true"];
82->18 [style = solid, label="clusterState"];
88->54 [style = solid, label="strategy"];
26->96 [style = solid, label="clusterState"];
28->86 [style = bold, label=""];
17->75 [style = bold, label=""];
12->30 [style = bold, label=""];
47->44 [style = dotted, label="true"];
67->108 [style = dotted, label="true"];
101->17 [style = solid, label="i"];
61->58 [style = bold, label=""];
32->43 [style = bold, label=""];
19->106 [style = bold, label=""];
46->47 [style = bold, label=""];
47->35 [style = bold, label=""];
37->23 [style = bold, label=""];
43->73 [style = dotted, label="true"];
100->113 [style = dotted, label="true"];
82->112 [style = solid, label="clusterState"];
0->64 [style = bold, label=""];
17->101 [style = bold, label=""];
100->95 [style = dotted, label="true"];
23->49 [style = dotted, label="true"];
100->5 [style = bold, label=""];
52->109 [style = solid, label="clusterState"];
96->52 [style = solid, label="newState"];
67->56 [style = dotted, label="true"];
31->67 [style = bold, label=""];
71->82 [style = bold, label=""];
122->125 [style = bold, label=""];
54->125 [style = solid, label="newState"];
47->35 [style = dotted, label="true"];
57->94 [style = bold, label=""];
31->67 [style = solid, label="i"];
1->62 [style = dotted, label="true"];
47->40 [style = dotted, label="true"];
54->122 [style = bold, label=""];
100->29 [style = dotted, label="true"];
67->42 [style = bold, label=""];
80->17 [style = bold, label=""];
69->90 [style = solid, label="clusterState"];
80->101 [style = dotted, label="true"];
43->49 [style = bold, label=""];
103->17 [style = solid, label="i"];
84->72 [style = solid, label="newState"];
126->115 [style = bold, label=""];
23->43 [style = solid, label="i"];
17->14 [style = dotted, label="true"];
46->47 [style = solid, label="i"];
7->90 [style = bold, label=""];
26->7 [style = solid, label="clusterState"];
84->69 [style = solid, label="newState"];
1->2 [style = dotted, label="true"];
133->53 [style = solid, label="clusterState"];
24->48 [style = bold, label=""];
79->40 [style = bold, label=""];
77->31 [style = solid, label="i"];
62->21 [style = bold, label=""];
67->83 [style = dotted, label="true"];
89->20 [style = solid, label="newState"];
44->98 [style = bold, label=""];
25->61 [style = solid, label="newState"];
}
