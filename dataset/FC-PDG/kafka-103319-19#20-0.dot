digraph {
15 [style = filled, label = "assertEquals(0L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,batch.timestampType())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "buildUsingLogAppendTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,magic,args.compressionType,TimestampType.CREATE_TIME,0L,logAppendTime,RecordBatch.NO_PRODUCER_ID,RecordBatch.NO_PRODUCER_EPOCH,RecordBatch.NO_SEQUENCE,false,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ByteBuffer buffer = allocateBuffer(1024,args)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ByteBuffer buffer = allocateBuffer(1024,args)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "builder.append(0L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "magic == MAGIC_VALUE_V0@@@16@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "int i = 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@18@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "buildUsingLogAppendTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(0L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "args.compressionType != CompressionType.NONE@@@14@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Args args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "batch@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assumeAtLeastV2OrNotZstd(magic,args.compressionType)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "MemoryRecords records = builder.build()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Record record@@@21@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "builder.append(2L,\"b\".getBytes(),\"2\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "buildUsingCreateTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c964b2@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,batch.timestampType())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "byte magic = RecordBatch.MAGIC_VALUE_V1@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "Args args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "args.compressionType == CompressionType.NONE@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(TimestampType.NO_TIMESTAMP_TYPE,batch.timestampType())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "args.compressionType == CompressionType.NONE && magic <= MAGIC_VALUE_V1@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "builder.append(1L,\"c\".getBytes(),\"3\".getBytes())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "byte magic = args.magic@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->0 [style = bold, label=""];
4->35 [style = solid, label="logAppendTime"];
21->15 [style = dotted, label="true"];
15->25 [style = bold, label=""];
16->35 [style = dashed, label="0"];
21->15 [style = bold, label=""];
6->38 [style = dashed, label="0"];
10->17 [style = bold, label=""];
3->4 [style = bold, label=""];
3->4 [style = solid, label="logAppendTime"];
30->29 [style = bold, label=""];
5->3 [style = solid, label="args"];
5->20 [style = solid, label="args"];
12->10 [style = bold, label=""];
23->13 [style = bold, label=""];
2->14 [style = bold, label=""];
31->30 [style = bold, label=""];
25->19 [style = bold, label=""];
40->31 [style = bold, label=""];
25->19 [style = dotted, label="true"];
17->21 [style = bold, label=""];
27->25 [style = bold, label=""];
4->16 [style = bold, label=""];
25->24 [style = dotted, label="false"];
13->25 [style = bold, label=""];
3->16 [style = solid, label="buffer"];
15->34 [style = dashed, label="0"];
39->3 [style = solid, label="args"];
3->13 [style = solid, label="logAppendTime"];
1->7 [style = dotted, label="false"];
13->29 [style = dashed, label="0"];
11->5 [style = dotted, label="true"];
5->39 [style = dashed, label="0"];
20->3 [style = bold, label=""];
14->33 [style = dashed, label="0"];
19->25 [style = bold, label=""];
3->35 [style = solid, label="buffer"];
18->20 [style = bold, label=""];
17->34 [style = bold, label=""];
22->18 [style = bold, label=""];
25->26 [style = dotted, label="false"];
33->36 [style = bold, label=""];
17->15 [style = bold, label=""];
1->8 [style = dotted, label="true"];
18->4 [style = solid, label="magic"];
2->33 [style = bold, label=""];
29->38 [style = bold, label=""];
32->31 [style = bold, label=""];
3->17 [style = solid, label="logAppendTime"];
4->15 [style = solid, label="logAppendTime"];
8->40 [style = dashed, label="0"];
1->8 [style = bold, label=""];
21->27 [style = bold, label=""];
35->2 [style = bold, label=""];
21->27 [style = dotted, label="false"];
31->38 [style = solid, label="i"];
20->4 [style = solid, label="buffer"];
25->13 [style = dotted, label="true"];
1->7 [style = bold, label=""];
28->32 [style = dotted, label="false"];
18->25 [style = solid, label="magic"];
28->32 [style = bold, label=""];
22->5 [style = dotted, label="true"];
34->28 [style = bold, label=""];
4->6 [style = solid, label="logAppendTime"];
18->21 [style = solid, label="magic"];
6->13 [style = bold, label=""];
9->3 [style = bold, label=""];
7->32 [style = dashed, label="0"];
13->6 [style = bold, label=""];
0->35 [style = solid, label="magic"];
8->13 [style = bold, label=""];
36->10 [style = bold, label=""];
15->1 [style = bold, label=""];
7->13 [style = bold, label=""];
4->35 [style = bold, label=""];
0->9 [style = bold, label=""];
28->40 [style = bold, label=""];
25->23 [style = bold, label=""];
38->29 [style = bold, label=""];
8->15 [style = dashed, label="0"];
30->38 [style = solid, label="expectedTimestamps"];
16->2 [style = bold, label=""];
7->27 [style = dashed, label="0"];
11->0 [style = bold, label=""];
0->9 [style = solid, label="magic"];
0->16 [style = solid, label="magic"];
12->36 [style = dashed, label="0"];
37->39 [style = dotted, label="true"];
14->12 [style = bold, label=""];
4->16 [style = solid, label="logAppendTime"];
0->18 [style = dashed, label="0"];
25->23 [style = dotted, label="false"];
28->40 [style = dotted, label="true"];
}
