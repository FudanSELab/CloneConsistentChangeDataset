digraph {
16 [style = filled, label = "return message@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "size = CodedInputStream.readRawVarint32(firstByte,input)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "codedInput.checkLastTagWas(0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "throw e.setUnfinishedMessage(message)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IOException e@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return null@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "InvalidProtocolBufferException e@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "throw new InvalidProtocolBufferException(e)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "InputStream input@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "InputStream limitedInput = new LimitedInputStream(input,size)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "firstByte == -1@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CodedInputStream codedInput = CodedInputStream.newInstance(limitedInput)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "T defaultInstance@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "parsePartialDelimitedFrom['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "throw new InvalidProtocolBufferException(e.getMessage())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ExtensionRegistryLite extensionRegistry@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "parsePartialDelimitedFrom['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "T message = parsePartialFrom(defaultInstance,codedInput,extensionRegistry)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "parsePartialDelimitedFrom['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return parsePartialFrom(limitedInput,extensionRegistry)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InputStream input@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int firstByte = input.read()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int size@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ExtensionRegistryLite extensionRegistry@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "InputStream input@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23->22 [style = bold, label=""];
21->11 [style = bold, label=""];
10->4 [style = solid, label="input"];
15->18 [style = bold, label=""];
2->7 [style = bold, label=""];
3->1 [style = dotted, label="true"];
18->24 [style = bold, label=""];
7->9 [style = bold, label=""];
20->18 [style = solid, label="extensionRegistry"];
11->0 [style = bold, label=""];
6->11 [style = bold, label=""];
22->16 [style = bold, label=""];
9->15 [style = bold, label=""];
13->10 [style = dotted, label="true"];
14->9 [style = bold, label=""];
21->17 [style = dotted, label="true"];
19->4 [style = solid, label="input"];
0->3 [style = bold, label=""];
2->14 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
12->5 [style = solid, label="extensionRegistry"];
8->4 [style = solid, label="input"];
3->1 [style = bold, label=""];
23->22 [style = dotted, label="true"];
6->8 [style = dotted, label="true"];
13->11 [style = bold, label=""];
9->5 [style = solid, label="limitedInput"];
9->15 [style = solid, label="limitedInput"];
6->10 [style = dotted, label="true"];
24->16 [style = bold, label=""];
4->9 [style = bold, label=""];
0->3 [style = solid, label="firstByte"];
21->19 [style = dotted, label="true"];
1->4 [style = bold, label=""];
17->18 [style = solid, label="defaultInstance"];
15->18 [style = solid, label="codedInput"];
2->14 [style = bold, label=""];
18->16 [style = solid, label="message"];
7->14 [style = dashed, label="0"];
4->9 [style = solid, label="size"];
0->4 [style = solid, label="firstByte"];
10->9 [style = solid, label="input"];
13->12 [style = dotted, label="true"];
9->5 [style = bold, label=""];
10->20 [style = dashed, label="0"];
3->4 [style = bold, label=""];
19->9 [style = solid, label="input"];
5->15 [style = dashed, label="0"];
2->7 [style = dotted, label="true"];
10->5 [style = solid, label="extensionRegistry"];
8->9 [style = solid, label="input"];
}
