digraph {
15 [style = filled, label = "registerAlias(type)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "String packageName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "resolverUtil.find(new ResolverUtil.IsA(),packageName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Set<Class<? extends Class<?>>> handlerSet = resolverUtil.getClasses()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "register(handler)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ResolverUtil<Class<?>> resolverUtil = new ResolverUtil<Class<?>>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TypeHandler handler = (TypeHandler)type.getConstructor().newInstance()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Exception e@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "registerAliases['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String packageName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "TypeHandler<?> handler = (TypeHandler<?>)type.getConstructor().newInstance()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Class<?> superType@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "!type.isAnonymousClass() && !type.isInterface()@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "register['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "!type.isAnonymousClass() && !type.isInterface() && !Modifier.isAbstract(type.getModifiers())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "throw new RuntimeException(\"Unable to find a usable constructor for \" + type,e)@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "register['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Set<Class<? extends Class<?>>> typeSet = resolverUtil.getClasses()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "resolverUtil.find(new ResolverUtil.IsA(superType),packageName)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
13->16 [style = dotted, label="true"];
1->4 [style = bold, label=""];
3->17 [style = dashed, label="0"];
0->5 [style = dotted, label="true"];
11->7 [style = solid, label="handler"];
8->18 [style = bold, label=""];
12->15 [style = bold, label=""];
2->7 [style = solid, label="handler"];
12->15 [style = dotted, label="true"];
18->17 [style = bold, label=""];
4->7 [style = dotted, label="true"];
4->11 [style = dotted, label="true"];
8->6 [style = bold, label=""];
5->6 [style = solid, label="packageName"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
14->18 [style = solid, label="packageName"];
10->5 [style = dotted, label="true"];
3->4 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
16->18 [style = solid, label="superType"];
5->16 [style = dashed, label="0"];
17->12 [style = bold, label=""];
10->8 [style = bold, label=""];
0->8 [style = bold, label=""];
9->1 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
15->12 [style = bold, label=""];
2->7 [style = bold, label=""];
13->8 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
13->14 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
11->7 [style = bold, label=""];
}
