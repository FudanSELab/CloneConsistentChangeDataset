digraph {
33 [style = filled, label = "expectThrows(,null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "randomBoolean()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testReplicaRejections['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(1024 * 14,indexingPressure.stats().getCurrentReplicaBytes())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(1,stats.getPrimaryRejections())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(preLocalStats.getPrimaryRejections(),indexingPressure.stats().getPrimaryRejections())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1024 * 6,indexingPressure.stats().getCurrentCombinedCoordinatingAndPrimaryBytes())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "expectThrows(,null)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Releasable forced = indexingPressure.markPrimaryOperationStarted(1024 * 2,true)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "IndexingPressureStats stats = indexingPressure.stats()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "IndexingPressure indexingPressure = new IndexingPressure(settings)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(1024 * 6,stats.getCurrentCombinedCoordinatingAndPrimaryBytes())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1024 * 6,stats.getCurrentCombinedCoordinatingAndPrimaryBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long preForceRejections = indexingPressure.stats().getPrimaryRejections()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexingPressureStats stats = indexingPressure.stats()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1024 * 8,indexingPressure.stats().getTotalCombinedCoordinatingAndPrimaryBytes())@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Releasable replica2 = indexingPressure.markReplicaOperationStarted(1024 * 11,false)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Releasable local = indexingPressure.markPrimaryOperationLocalToCoordinatingNodeStarted(1024 * 2)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "forced.close()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(1,indexingPressure.stats().getReplicaRejections())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCoordinatingPrimaryRejections['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCoordinatingPrimaryRejections['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "expectThrows(,null)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "IndexingPressureStats preLocalStats = indexingPressure.stats()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IndexingPressureStats stats = indexingPressure.stats()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Releasable forced = indexingPressure.markPrimaryOperationStarted(1024 * 2,true)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "forced.close()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(1024 * 14,stats.getCurrentReplicaBytes())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expectThrows(,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "forced.close()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "replica2.close()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(preForceRejections,indexingPressure.stats().getPrimaryRejections())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1024 * 8,indexingPressure.stats().getCurrentCombinedCoordinatingAndPrimaryBytes())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "local.close()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(preLocalStats.getCurrentPrimaryBytes() + 1024 * 2,indexingPressure.stats().getCurrentPrimaryBytes())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1024 * 14,indexingPressure.stats().getCurrentReplicaBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(1024 * 14,indexingPressure.stats().getTotalReplicaBytes())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(1,stats.getReplicaRejections())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->37 [style = bold, label=""];
33->16 [style = bold, label=""];
35->27 [style = bold, label=""];
8->3 [style = dotted, label="false"];
8->11 [style = dotted, label="false"];
16->37 [style = dashed, label="0"];
26->36 [style = bold, label=""];
28->31 [style = bold, label=""];
21->1 [style = solid, label="stats"];
8->17 [style = dotted, label="true"];
8->16 [style = dotted, label="true"];
17->35 [style = dashed, label="0"];
36->28 [style = bold, label=""];
6->1 [style = solid, label="stats"];
29->25 [style = bold, label=""];
31->29 [style = bold, label=""];
14->19 [style = bold, label=""];
1->18 [style = bold, label=""];
30->32 [style = bold, label=""];
16->17 [style = bold, label=""];
0->14 [style = solid, label="preForceRejections"];
22->30 [style = bold, label=""];
32->33 [style = bold, label=""];
3->0 [style = bold, label=""];
8->2 [style = dotted, label="false"];
34->22 [style = bold, label=""];
8->24 [style = dotted, label="true"];
0->7 [style = bold, label=""];
7->14 [style = bold, label=""];
14->26 [style = dashed, label="0"];
22->8 [style = bold, label=""];
4->25 [style = dashed, label="0"];
18->20 [style = bold, label=""];
13->24 [style = dashed, label="0"];
12->10 [style = bold, label=""];
17->0 [style = bold, label=""];
23->22 [style = bold, label=""];
8->6 [style = dotted, label="true"];
8->2 [style = bold, label=""];
21->11 [style = bold, label=""];
11->3 [style = bold, label=""];
19->9 [style = bold, label=""];
6->16 [style = bold, label=""];
2->21 [style = bold, label=""];
19->36 [style = dashed, label="0"];
10->4 [style = bold, label=""];
15->12 [style = bold, label=""];
8->13 [style = dotted, label="true"];
8->21 [style = dotted, label="false"];
37->35 [style = bold, label=""];
13->6 [style = bold, label=""];
9->1 [style = bold, label=""];
24->6 [style = bold, label=""];
20->15 [style = bold, label=""];
5->22 [style = bold, label=""];
8->13 [style = bold, label=""];
27->26 [style = bold, label=""];
8->24 [style = bold, label=""];
}
