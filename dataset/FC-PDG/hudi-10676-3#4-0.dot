digraph {
29 [style = filled, label = "List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(new Path(metaClient.getMetaAuxiliaryPath()),HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,false)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"102\")),\"Requested Compaction must be absent for 102\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertTrue(result)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "HoodieTimeline timeline = metaClient.getActiveTimeline().getCommitsTimeline().filterCompletedInstants()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"102\")),\"Inflight Compaction must be absent for 102\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"105\"),wrapperFs.getConf())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"103\",wrapperFs.getConf())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertEquals(8,instants.size(),\"Should not delete any aux compaction files when maxCommitsToKeep is 5\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"104\")),\"Requested Compaction must be present for 104\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"101\")),\"Requested Compaction must be present for 101\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(12,timeline.countInstants(),\"Loaded 6 commits and the count should match\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"100\"),wrapperFs.getConf())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "timeline = metaClient.getActiveTimeline().reload().getCommitsTimeline().filterCompletedInstants()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HoodieTestUtils.createCleanFiles(metaClient,basePath,\"104\",wrapperFs.getConf())@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "List<HoodieInstant> instants = metaClient.scanHoodieInstantsFromFileSystem(new Path(metaClient.getMetaAuxiliaryPath()),HoodieActiveTimeline.VALID_EXTENSIONS_IN_ACTIVE_TIMELINE,false)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "HoodieTestUtils.createPendingCleanFiles(metaClient,\"106\",\"107\")@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "HoodieTestUtils.createCleanFiles(metaClient,basePath,\"103\",wrapperFs.getConf())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"100\")),\"Requested Compaction must be present for 100\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertEquals(4,timeline.countInstants(),\"Should not archive commits when maxCommitsToKeep is 5\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "createCleanMetadata(\"101\",false)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
85 [style = filled, label = "HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath).withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2,2).forTable(\"test-trip-table\").withCompactionConfig(HoodieCompactionConfig.newBuilder().retainCommits(1).archiveCommitsWith(2,5).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"100\"),wrapperFs.getConf())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"105\")),\"Inflight Compaction must be present for 105\")@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"103\")),\"Inflight Compaction must be absent for 103\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "HoodieTimelineArchiveLog archiveLog = new HoodieTimelineArchiveLog(cfg,table)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"101\"),wrapperFs.getConf())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"102\"),wrapperFs.getConf())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "timeline = metaClient.getActiveTimeline().reload().getAllCommitsTimeline().filterCompletedInstants()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(originalCommits.stream().map(null).collect(Collectors.toSet()),readCommits,\"Read commits map should match the originalCommits - commitsLoadedFromArchival\")@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"105\"),wrapperFs.getConf())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Set<String> readCommits = archivedTimeline.getInstants().map(null).collect(Collectors.toSet())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"101\")),\"Inflight Compaction must be absent for 101\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"100\",wrapperFs.getConf())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertEquals(4,timeline.countInstants(),\"Loaded 4 commits and the count should match\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "createCleanMetadata(\"103\",false)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
75 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"101\")),\"Inflight Compaction must be present for 101\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "HoodieTable table = HoodieSparkTable.create(cfg,context,metaClient)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"102\"),wrapperFs.getConf())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "createCleanMetadata(\"106\",true)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "verifyInflightInstants(metaClient,2)@@@62@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(24,archivedTimeline.countInstants(),\"Total archived records and total read records are the same count\")@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"100\")),\"Inflight Compaction must be present for 100\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"101\")),\"Requested Compaction must be absent for 101\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"100\"),wrapperFs.getConf())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HoodieTestUtils.createCleanFiles(metaClient,basePath,\"101\",wrapperFs.getConf())@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "HoodieTestUtils.init(hadoopConf,basePath)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "createCleanMetadata(\"102\",false)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"101\",wrapperFs.getConf())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "originalCommits.removeAll(timeline.getInstants().collect(Collectors.toList()))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "HoodieTimeline timeline = metaClient.getActiveTimeline().getCommitsTimeline().filterCompletedInstants()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"103\"),wrapperFs.getConf())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(6,timeline.countInstants(),\"Loaded 6 commits and the count should match\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"102\")),\"Requested Compaction must be present for 102\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "HoodieTestUtils.createCleanFiles(metaClient,basePath,\"105\",wrapperFs.getConf())@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"100\")),\"Requested Compaction must be absent for 100\")@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "createCleanMetadata(\"104\",false)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"105\",wrapperFs.getConf())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"103\")),\"Inflight Compaction must be present for 103\")@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"100\"),wrapperFs.getConf())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "timeline = metaClient.getActiveTimeline().reload().getAllCommitsTimeline().filterCompletedInstants()@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"104\")),\"Inflight Compaction must be present for 104\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"104\",wrapperFs.getConf())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(4,instants.size(),\"Should delete all compaction instants < 104\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "testArchiveTableWithArchival['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "HoodieArchivedTimeline archivedTimeline = new HoodieArchivedTimeline(metaClient)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "HoodieTable table = HoodieSparkTable.create(cfg,context,metaClient)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"101\"),wrapperFs.getConf())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"102\",wrapperFs.getConf())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"103\")),\"Requested Compaction must be absent for 103\")@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "createCleanMetadata(\"107\",true)@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"105\")),\"Requested Compaction must be present for 105\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath).withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2,2).withCompactionConfig(HoodieCompactionConfig.newBuilder().retainCommits(1).archiveCommitsWith(2,4).build()).forTable(\"test-trip-table\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "HoodieTestDataGenerator.createCompactionAuxiliaryMetadata(basePath,new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"103\"),wrapperFs.getConf())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "boolean result = archiveLog.archiveIfRequired(context)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "List<HoodieInstant> originalCommits = timeline.getInstants().collect(Collectors.toList())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(archiveLog.archiveIfRequired(context))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertFalse(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"100\")),\"Inflight Compaction must be absent for 100\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.REQUESTED,HoodieTimeline.COMPACTION_ACTION,\"103\")),\"Requested Compaction must be present for 103\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "timeline = metaClient.getActiveTimeline().reload().getAllCommitsTimeline().filterCompletedInstants()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "createCleanMetadata(\"105\",false)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "verifyInflightInstants(metaClient,2)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertTrue(instants.contains(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMPACTION_ACTION,\"102\")),\"Inflight Compaction must be present for 102\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "HoodieTestUtils.createCleanFiles(metaClient,basePath,\"102\",wrapperFs.getConf())@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "createCleanMetadata(\"100\",false)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "testArchiveTableWithArchival['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "HoodieTimelineArchiveLog archiveLog = new HoodieTimelineArchiveLog(cfg,table)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "testArchiveTableWithNoArchival['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11->34 [style = bold, label=""];
46->74 [style = dashed, label="0"];
71->75 [style = bold, label=""];
14->19 [style = solid, label="metaClient"];
4->77 [style = dashed, label="0"];
27->47 [style = solid, label="metaClient"];
30->13 [style = bold, label=""];
47->0 [style = bold, label=""];
65->66 [style = bold, label=""];
3->85 [style = dashed, label="0"];
37->2 [style = bold, label=""];
6->88 [style = dashed, label="0"];
64->60 [style = bold, label=""];
88->89 [style = bold, label=""];
58->39 [style = bold, label=""];
10->18 [style = bold, label=""];
66->69 [style = bold, label=""];
12->10 [style = bold, label=""];
39->51 [style = bold, label=""];
3->37 [style = bold, label=""];
49->1 [style = bold, label=""];
72->83 [style = bold, label=""];
5->33 [style = bold, label=""];
55->71 [style = dashed, label="0"];
18->67 [style = bold, label=""];
35->50 [style = bold, label=""];
24->55 [style = bold, label=""];
9->42 [style = bold, label=""];
20->16 [style = bold, label=""];
19->5 [style = bold, label=""];
87->86 [style = bold, label=""];
40->52 [style = bold, label=""];
36->3 [style = bold, label=""];
14->45 [style = bold, label=""];
14->27 [style = solid, label="metaClient"];
85->73 [style = solid, label="cfg"];
76->84 [style = bold, label=""];
80->81 [style = bold, label=""];
27->8 [style = bold, label=""];
3->30 [style = solid, label="cfg"];
75->74 [style = bold, label=""];
0->12 [style = bold, label=""];
54->28 [style = bold, label=""];
42->40 [style = bold, label=""];
10->18 [style = solid, label="readCommits"];
15->41 [style = bold, label=""];
56->89 [style = dashed, label="0"];
53->30 [style = bold, label=""];
14->8 [style = solid, label="metaClient"];
14->43 [style = solid, label="metaClient"];
8->53 [style = bold, label=""];
31->15 [style = bold, label=""];
69->62 [style = bold, label=""];
45->4 [style = bold, label=""];
89->82 [style = bold, label=""];
23->81 [style = dashed, label="0"];
7->59 [style = bold, label=""];
3->8 [style = solid, label="cfg"];
85->83 [style = solid, label="cfg"];
11->82 [style = dashed, label="0"];
77->79 [style = bold, label=""];
24->78 [style = dashed, label="0"];
8->0 [style = solid, label="metaClient"];
3->53 [style = solid, label="cfg"];
59->21 [style = bold, label=""];
79->76 [style = solid, label="result"];
28->44 [style = bold, label=""];
33->7 [style = bold, label=""];
74->88 [style = bold, label=""];
84->87 [style = bold, label=""];
86->80 [style = bold, label=""];
14->5 [style = solid, label="metaClient"];
83->73 [style = solid, label="table"];
68->7 [style = bold, label=""];
85->72 [style = bold, label=""];
8->53 [style = solid, label="metaClient"];
14->49 [style = solid, label="metaClient"];
83->73 [style = bold, label=""];
13->57 [style = bold, label=""];
73->50 [style = bold, label=""];
6->56 [style = bold, label=""];
43->22 [style = bold, label=""];
26->49 [style = bold, label=""];
56->11 [style = bold, label=""];
55->17 [style = bold, label=""];
14->1 [style = solid, label="metaClient"];
17->75 [style = dashed, label="0"];
61->3 [style = bold, label=""];
53->30 [style = solid, label="table"];
14->22 [style = solid, label="metaClient"];
29->80 [style = dashed, label="0"];
25->29 [style = bold, label=""];
51->47 [style = bold, label=""];
43->77 [style = bold, label=""];
50->38 [style = bold, label=""];
8->67 [style = solid, label="metaClient"];
60->68 [style = bold, label=""];
23->24 [style = bold, label=""];
27->8 [style = solid, label="metaClient"];
62->64 [style = bold, label=""];
41->43 [style = bold, label=""];
44->32 [style = bold, label=""];
78->71 [style = bold, label=""];
38->54 [style = bold, label=""];
14->26 [style = solid, label="metaClient"];
79->76 [style = bold, label=""];
12->10 [style = solid, label="readCommits"];
29->23 [style = bold, label=""];
48->20 [style = bold, label=""];
81->78 [style = bold, label=""];
72->83 [style = solid, label="metaClient"];
22->26 [style = bold, label=""];
63->65 [style = bold, label=""];
70->85 [style = bold, label=""];
27->18 [style = solid, label="metaClient"];
32->48 [style = bold, label=""];
41->9 [style = bold, label=""];
1->19 [style = bold, label=""];
16->31 [style = bold, label=""];
21->27 [style = bold, label=""];
4->43 [style = bold, label=""];
14->21 [style = solid, label="metaClient"];
8->53 [style = solid, label="table"];
46->6 [style = bold, label=""];
57->25 [style = bold, label=""];
4->63 [style = bold, label=""];
52->14 [style = bold, label=""];
2->35 [style = bold, label=""];
17->46 [style = bold, label=""];
34->58 [style = bold, label=""];
}
