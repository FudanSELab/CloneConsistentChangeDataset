digraph {
16 [style = filled, label = "final MockContext sourceContext1 = MockContext.getInstance(this.conf,schema1,\"f2\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertThat(conf1.get(FlinkOptions.KEYGEN_CLASS),is(\"dummyKeyGenClass\"))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(conf2.get(FlinkOptions.RECORD_KEY_FIELD),is(\"f0,f1\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MockSourceContext sourceContext1 = MockSourceContext.getInstance(this.conf,schema1,\"f2\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final MockContext sourceContext2 = MockContext.getInstance(this.conf,schema2,\"f2\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "this.conf.setString(FlinkOptions.KEYGEN_CLASS,FlinkOptions.KEYGEN_CLASS.defaultValue())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(conf1.get(FlinkOptions.RECORD_KEY_FIELD),is(\"f0\"))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final HoodieTableSource tableSource1 = (HoodieTableSource)new HoodieTableFactory().createDynamicTableSource(sourceContext1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "TableSchema schema1 = TableSchema.builder().field(\"f0\",DataTypes.INT().notNull()).field(\"f1\",DataTypes.VARCHAR(20)).field(\"f2\",DataTypes.TIMESTAMP(3)).primaryKey(\"f0\").build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testSetupHoodieKeyOptionsForSource['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Configuration conf2 = tableSource2.getConf()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final Configuration conf2 = tableSink2.getConf()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testSetupHoodieKeyOptionsForSink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "this.conf.setString(FlinkOptions.RECORD_KEY_FIELD,\"dummyField\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final HoodieTableSource tableSource1 = (HoodieTableSource)new HoodieTableFactory().createTableSource(sourceContext1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "final HoodieTableSink tableSink2 = (HoodieTableSink)new HoodieTableFactory().createTableSink(sinkContext2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final Configuration conf1 = tableSink1.getConf()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final Configuration conf1 = tableSource1.getConf()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final MockSinkContext sinkContext2 = MockSinkContext.getInstance(this.conf,schema2,\"f2\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final HoodieTableSource tableSource2 = (HoodieTableSource)new HoodieTableFactory().createDynamicTableSource(sourceContext2)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final MockSinkContext sinkContext1 = MockSinkContext.getInstance(this.conf,schema1,\"f2\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TableSchema schema2 = TableSchema.builder().field(\"f0\",DataTypes.INT().notNull()).field(\"f1\",DataTypes.VARCHAR(20).notNull()).field(\"f2\",DataTypes.TIMESTAMP(3)).primaryKey(\"f0\",\"f1\").build()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.conf.setString(FlinkOptions.KEYGEN_CLASS,\"dummyKeyGenClass\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(conf2.get(FlinkOptions.KEYGEN_CLASS),is(.getName()))@@@17@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSetupHoodieKeyOptionsForSource['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final HoodieTableSource tableSource2 = (HoodieTableSource)new HoodieTableFactory().createTableSource(sourceContext2)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "final MockSourceContext sourceContext2 = MockSourceContext.getInstance(this.conf,schema2,\"f2\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "final HoodieTableSink tableSink1 = (HoodieTableSink)new HoodieTableFactory().createTableSink(sinkContext1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
4->9 [style = bold, label=""];
22->26 [style = bold, label=""];
8->10 [style = bold, label=""];
23->5 [style = bold, label=""];
21->6 [style = bold, label=""];
15->16 [style = solid, label="schema1"];
26->25 [style = bold, label=""];
0->16 [style = dashed, label="0"];
12->4 [style = solid, label="sourceContext2"];
7->20 [style = dashed, label="0"];
15->0 [style = solid, label="schema1"];
12->17 [style = dashed, label="0"];
4->27 [style = dashed, label="0"];
20->3 [style = bold, label=""];
22->26 [style = solid, label="sinkContext1"];
2->17 [style = solid, label="schema2"];
15->16 [style = bold, label=""];
0->22 [style = dashed, label="0"];
17->19 [style = bold, label=""];
2->24 [style = solid, label="schema2"];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
2->12 [style = bold, label=""];
15->22 [style = bold, label=""];
9->23 [style = dashed, label="0"];
0->7 [style = bold, label=""];
0->7 [style = solid, label="sourceContext1"];
12->4 [style = bold, label=""];
19->9 [style = bold, label=""];
18->6 [style = bold, label=""];
17->19 [style = solid, label="sourceContext2"];
3->8 [style = bold, label=""];
6->11 [style = bold, label=""];
15->0 [style = bold, label=""];
5->13 [style = bold, label=""];
15->22 [style = solid, label="schema1"];
12->24 [style = dashed, label="0"];
2->12 [style = solid, label="schema2"];
9->5 [style = bold, label=""];
16->20 [style = solid, label="sourceContext1"];
4->19 [style = dashed, label="0"];
25->8 [style = bold, label=""];
1->2 [style = bold, label=""];
27->23 [style = bold, label=""];
2->24 [style = bold, label=""];
7->26 [style = dashed, label="0"];
24->27 [style = solid, label="sinkContext2"];
10->1 [style = bold, label=""];
16->20 [style = bold, label=""];
24->27 [style = bold, label=""];
14->6 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
