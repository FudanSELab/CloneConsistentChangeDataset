digraph {
19 [style = filled, label = "final BufferedReader reader = new BufferedReader(new FileReader(srcFile))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "originalContent = FileUtils.readFully(reader)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"Unexpected content in file \" + file,expectedContent,content)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final String content@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final BufferedReader reader = new BufferedReader(new FileReader(file))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final String originalContent@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final File testDir = new File(buildRule.getProject().getProperty(\"self.copy.test.root.dir\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(file + \" was expected to be a file\",file.isFile())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "Assert.assertTrue(symlinkedTestDir + \" was expected to be a directory\",symlinkedTestDir.isDirectory())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertSizeAndContent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertTrue(file + \" was expected to be a file\",file.isFile())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final File file@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "buildRule.executeTarget(\"testSelfCopy\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final File srcFile = new File(testDir,\"file.txt\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertSizeAndContent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertTrue(testDir + \" was expected to be a directory\",testDir.isDirectory())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"Unexpected size of file \" + file,expectedSize,file.length())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final File file@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertSizeAndContent(symlinkedFile,originalFileSize,originalContent)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Unexpected content in file \" + file,expectedContent,content)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(symlinkedFile + \" was expected to be a file\",symlinkedFile.isFile())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertTrue(\"Source file \" + srcFile + \" was expected to be a file\",srcFile.isFile())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testCopyToSymlinkedSelf['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final long expectedSize@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final long expectedSize@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final File symlinkedFile = new File(testDir,\"sylmink-file.txt\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final long originalFileSize = srcFile.length()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "content = FileUtils.readFully(reader)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "{reader.close()}@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Unexpected size of file \" + file,expectedSize,file.length())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "buildRule.executeTarget(\"setupSelfCopyTesting\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertSizeAndContent(new File(symlinkedTestDir,\"sylmink-file.txt\"),originalFileSize,originalContent)@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertSizeAndContent(new File(symlinkedTestDir,\"file.txt\"),originalFileSize,originalContent)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "{reader.close()}@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String expectedContent@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "final File symlinkedTestDir = new File(buildRule.getProject().getProperty(\"self.copy.test.symlinked.dir\"))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertSizeAndContent(srcFile,originalFileSize,originalContent)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assume.assumeTrue(\"Symlinks not supported on this operating system\",Os.isFamily(Os.FAMILY_UNIX))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertTrue(\"Content missing in file \" + srcFile,originalContent != null && originalContent.length() > 0)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->28 [style = solid, label="originalFileSize"];
4->7 [style = solid, label="file"];
29->24 [style = solid, label="symlinkedTestDir"];
11->15 [style = solid, label="expectedContent"];
2->3 [style = dotted, label="true"];
31->28 [style = solid, label="originalContent"];
16->13 [style = bold, label=""];
5->14 [style = dashed, label="0"];
16->12 [style = dotted, label="true"];
30->17 [style = bold, label=""];
26->32 [style = bold, label=""];
4->8 [style = solid, label="file"];
21->25 [style = solid, label="originalFileSize"];
22->19 [style = bold, label=""];
19->31 [style = bold, label=""];
3->5 [style = solid, label="expectedSize"];
0->6 [style = solid, label="reader"];
20->34 [style = bold, label=""];
28->38 [style = bold, label=""];
31->36 [style = bold, label=""];
37->28 [style = solid, label="srcFile"];
21->18 [style = solid, label="originalFileSize"];
31->30 [style = solid, label="originalContent"];
6->31 [style = dashed, label="0"];
4->0 [style = solid, label="file"];
4->5 [style = solid, label="file"];
38->26 [style = solid, label="symlinkedFile"];
9->7 [style = bold, label=""];
24->18 [style = bold, label=""];
31->18 [style = solid, label="originalContent"];
16->10 [style = dotted, label="true"];
10->14 [style = solid, label="file"];
10->15 [style = solid, label="file"];
8->13 [style = dashed, label="0"];
37->19 [style = solid, label="srcFile"];
21->32 [style = solid, label="originalFileSize"];
38->32 [style = solid, label="symlinkedFile"];
23->35 [style = bold, label=""];
32->29 [style = bold, label=""];
23->37 [style = solid, label="testDir"];
37->30 [style = solid, label="srcFile"];
36->30 [style = bold, label=""];
29->18 [style = solid, label="symlinkedTestDir"];
17->28 [style = bold, label=""];
29->25 [style = solid, label="symlinkedTestDir"];
6->7 [style = solid, label="content"];
1->6 [style = bold, label=""];
12->14 [style = solid, label="expectedSize"];
23->38 [style = solid, label="testDir"];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
14->0 [style = bold, label=""];
10->13 [style = solid, label="file"];
35->37 [style = bold, label=""];
21->22 [style = bold, label=""];
9->15 [style = bold, label=""];
0->1 [style = bold, label=""];
2->4 [style = dotted, label="true"];
6->15 [style = solid, label="content"];
18->25 [style = bold, label=""];
10->7 [style = solid, label="expectedContent"];
31->25 [style = solid, label="originalContent"];
7->15 [style = dashed, label="0"];
31->32 [style = solid, label="originalContent"];
34->23 [style = bold, label=""];
38->26 [style = bold, label=""];
23->35 [style = solid, label="testDir"];
6->9 [style = bold, label=""];
37->33 [style = bold, label=""];
10->0 [style = solid, label="file"];
19->31 [style = solid, label="reader"];
33->21 [style = bold, label=""];
29->24 [style = bold, label=""];
16->11 [style = dotted, label="true"];
13->14 [style = bold, label=""];
27->20 [style = bold, label=""];
37->33 [style = solid, label="srcFile"];
2->8 [style = bold, label=""];
2->10 [style = dotted, label="true"];
}
