digraph {
5 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,2,-', expected string with a range M-N\"))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"-,2,3\" is not a valid option\"))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(result,failedWith(2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"--1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1--\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(result,failedWith(3))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(result,failedWith(2))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsHyphen['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"--1\" is not a valid option\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"---\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "dummyRangeNumberMultiShouldFailIfBuildNumberIsHyphen['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "dummyRangeRangeSingleShouldFailIfBuildRangeContainsHyphen['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,-,3\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"1,2,-\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(result,failedWith(3))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1,-,3', expected string with a range M-N\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result,hasNoStandardOutput())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,Job.READ).invokeWithArgs(PROJECT_NAME,\"-,2,3\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: Unable to parse '1--', expected correct notation M,N or M-N\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(result.stderr(),containsString(\"ERROR: \"---\" is not a valid option\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9->16 [style = dashed, label="0"];
20->17 [style = bold, label=""];
5->14 [style = dashed, label="0"];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
17->7 [style = solid, label="result"];
19->4 [style = solid, label="result"];
21->15 [style = bold, label=""];
0->19 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
19->6 [style = solid, label="result"];
4->21 [style = bold, label=""];
1->18 [style = dashed, label="0"];
11->17 [style = dashed, label="0"];
3->16 [style = bold, label=""];
15->18 [style = solid, label="result"];
16->19 [style = bold, label=""];
19->6 [style = bold, label=""];
18->2 [style = bold, label=""];
13->11 [style = bold, label=""];
15->18 [style = bold, label=""];
12->21 [style = dashed, label="0"];
7->3 [style = bold, label=""];
15->2 [style = solid, label="result"];
8->2 [style = solid, label="result"];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
17->7 [style = bold, label=""];
17->3 [style = solid, label="result"];
6->4 [style = bold, label=""];
0->6 [style = solid, label="result"];
11->3 [style = solid, label="result"];
8->1 [style = solid, label="result"];
12->8 [style = bold, label=""];
2->14 [style = bold, label=""];
11->7 [style = solid, label="result"];
4->12 [style = bold, label=""];
0->4 [style = solid, label="result"];
1->2 [style = bold, label=""];
11->7 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
