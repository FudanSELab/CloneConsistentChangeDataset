digraph {
0 [style = filled, label = "this.errorProperties.setIncludeStacktrace(ErrorProperties.IncludeAttribute.ON_PARAM)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this.request.addParameter(\"message\",\"true\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "this.request.addParameter(\"trace\",\"true\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "this.request.addParameter(\"trace\",\"false\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.request.addParameter(\"message\",\"false\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "errorResponseParamsTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(response).doesNotContainKey(\"trace\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ManagementErrorEndpoint endpoint = new ManagementErrorEndpoint(this.errorAttributes,this.errorProperties)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(response).doesNotContainKey(\"message\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "this.errorProperties.setIncludeMessage(ErrorProperties.IncludeAttribute.ON_PARAM)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,Object> response = endpoint.invoke(new ServletWebRequest(this.request))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "errorResponseParamsFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "errorResponseParamsFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(response).containsEntry(\"message\",\"\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertThat(response).hasEntrySatisfying(\"trace\",null)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(response).containsEntry(\"message\",\"test exception\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->14 [style = dashed, label="0"];
4->6 [style = bold, label=""];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
7->8 [style = bold, label=""];
3->13 [style = dashed, label="0"];
1->13 [style = bold, label=""];
1->9 [style = bold, label=""];
6->12 [style = dashed, label="0"];
8->1 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
15->0 [style = bold, label=""];
10->0 [style = bold, label=""];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
11->8 [style = bold, label=""];
6->7 [style = bold, label=""];
13->14 [style = bold, label=""];
}
