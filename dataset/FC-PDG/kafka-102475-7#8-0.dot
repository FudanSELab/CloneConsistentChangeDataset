digraph {
10 [style = filled, label = "shouldPollWithRightTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldPollWithRightTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(5L,consumer.position(tp))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "type == ACTIVE@@@41@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedLimitIndex())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,11L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "changelogReader.restore()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "type == STANDBY@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "consumer.seek(tp,11L)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "changelogReader.restore()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "changelogReader.register(tp,stateManager)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "changelogReader.restore()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "type == ACTIVE@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(11L,consumer.position(tp))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final TaskId taskId = new TaskId(0,0)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "changelogReader.restore(Collections.singletonMap(taskId,mock()))@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EasyMock.expect(stateManager.taskId()).andReturn(taskId)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(11L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "shouldRestoreFromBeginningAndCheckCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(tp,5L))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
26->46 [style = bold, label=""];
30->49 [style = dotted, label="true"];
4->6 [style = bold, label=""];
24->35 [style = bold, label=""];
27->44 [style = bold, label=""];
46->47 [style = bold, label=""];
50->38 [style = bold, label=""];
5->32 [style = dotted, label="true"];
30->40 [style = dotted, label="true"];
33->51 [style = bold, label=""];
14->16 [style = solid, label="taskId"];
5->20 [style = dotted, label="false"];
30->33 [style = dotted, label="true"];
11->0 [style = bold, label=""];
41->43 [style = bold, label=""];
1->8 [style = bold, label=""];
0->9 [style = bold, label=""];
9->3 [style = bold, label=""];
40->49 [style = bold, label=""];
38->41 [style = bold, label=""];
30->51 [style = dotted, label="true"];
30->45 [style = dotted, label="false"];
19->22 [style = bold, label=""];
4->17 [style = bold, label=""];
6->17 [style = dashed, label="0"];
5->7 [style = dotted, label="true"];
21->24 [style = bold, label=""];
16->13 [style = bold, label=""];
5->42 [style = bold, label=""];
39->1 [style = bold, label=""];
2->17 [style = bold, label=""];
4->2 [style = bold, label=""];
36->23 [style = bold, label=""];
14->1 [style = bold, label=""];
25->21 [style = bold, label=""];
5->36 [style = dotted, label="true"];
10->1 [style = bold, label=""];
35->5 [style = bold, label=""];
13->11 [style = bold, label=""];
30->22 [style = dotted, label="false"];
30->19 [style = dotted, label="false"];
15->14 [style = bold, label=""];
30->31 [style = dotted, label="true"];
37->28 [style = bold, label=""];
44->30 [style = bold, label=""];
5->42 [style = dotted, label="true"];
5->20 [style = bold, label=""];
30->34 [style = dotted, label="true"];
8->13 [style = bold, label=""];
6->5 [style = bold, label=""];
6->25 [style = bold, label=""];
5->12 [style = dotted, label="false"];
42->36 [style = bold, label=""];
23->48 [style = bold, label=""];
20->29 [style = bold, label=""];
2->6 [style = bold, label=""];
49->33 [style = bold, label=""];
51->31 [style = bold, label=""];
30->40 [style = bold, label=""];
5->12 [style = bold, label=""];
14->17 [style = solid, label="taskId"];
22->45 [style = bold, label=""];
32->29 [style = bold, label=""];
43->18 [style = bold, label=""];
47->37 [style = bold, label=""];
18->27 [style = bold, label=""];
48->32 [style = bold, label=""];
30->19 [style = bold, label=""];
3->4 [style = bold, label=""];
5->7 [style = bold, label=""];
17->5 [style = bold, label=""];
31->34 [style = bold, label=""];
5->23 [style = dotted, label="true"];
28->50 [style = bold, label=""];
5->48 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
29->26 [style = bold, label=""];
}
