digraph {
8 [style = filled, label = "options.put(\"sink.buffer-flush.max-rows\",\"100\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testBufferFlushOptions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HBaseWriteOptions actual = ((HBaseDynamicTableSink)sink).getWriteOptions()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "options.put(\"sink.buffer-flush.interval\",\"10s\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testBufferFlushOptions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,String> options = getAllOptions()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ResolvedSchema schema = ResolvedSchema.of(Column.physical(ROWKEY,STRING()))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testBufferFlushOptions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(expected,actual)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "HBaseWriteOptions expected = HBaseWriteOptions.builder().setBufferFlushMaxRows(100).setBufferFlushIntervalMillis(10 * 1000).setBufferFlushMaxSizeInBytes(10 * 1024 * 1024).build()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DynamicTableSink sink = createTableSink(schema,options)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TableSchema schema = TableSchema.builder().field(ROWKEY,STRING()).build()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "options.put(\"sink.buffer-flush.max-size\",\"10mb\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
11->6 [style = solid, label="schema"];
9->11 [style = dashed, label="0"];
4->8 [style = bold, label=""];
6->3 [style = bold, label=""];
11->6 [style = bold, label=""];
3->5 [style = solid, label="expected"];
9->6 [style = solid, label="schema"];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
8->2 [style = bold, label=""];
3->1 [style = bold, label=""];
7->6 [style = solid, label="options"];
10->7 [style = bold, label=""];
2->11 [style = bold, label=""];
12->7 [style = bold, label=""];
1->5 [style = solid, label="actual"];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
}
