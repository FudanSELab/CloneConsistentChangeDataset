digraph {
0 [style = filled, label = "it.hasNext()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "interruptWait['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "interrupt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Thread.currentThread().interrupt()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "it.next()@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BlockingFlowableIterator<Integer> it = new BlockingFlowableIterator<Integer>(128)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Iterator<Object> it = Flowable.never().blockingNext().iterator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "BlockingFlowableIterator<Integer> it = new BlockingFlowableIterator<>(128)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "interruptWait['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
3->2 [style = bold, label=""];
3->4 [style = dashed, label="0"];
7->2 [style = bold, label=""];
2->6 [style = bold, label=""];
5->4 [style = bold, label=""];
8->7 [style = bold, label=""];
0->6 [style = dashed, label="0"];
}
