digraph {
9 [style = filled, label = "IntervalMarker m1 = new IntervalMarker(45.0,50.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(m1.getClass() == m2.getClass())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CategoryMarker m2 = CloneUtils.clone(m1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "assertTrue(m1 != m2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CategoryMarker m2 = (CategoryMarker)m1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertTrue(m1.equals(m2))@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "IntervalMarker m2 = (IntervalMarker)m1.clone()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "CategoryMarker m1 = new CategoryMarker(\"A\",new GradientPaint(1.0f,2.0f,Color.WHITE,3.0f,4.0f,Color.YELLOW),new BasicStroke(1.1f))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->0 [style = solid, label="m2"];
2->6 [style = bold, label=""];
2->1 [style = solid, label="m1"];
9->10 [style = bold, label=""];
4->6 [style = dashed, label="0"];
2->4 [style = bold, label=""];
6->1 [style = bold, label=""];
6->0 [style = solid, label="m2"];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
10->1 [style = solid, label="m2"];
9->1 [style = solid, label="m1"];
10->0 [style = solid, label="m2"];
7->2 [style = bold, label=""];
4->1 [style = solid, label="m2"];
6->1 [style = solid, label="m2"];
8->9 [style = bold, label=""];
4->1 [style = bold, label=""];
4->10 [style = dashed, label="0"];
10->1 [style = bold, label=""];
2->6 [style = solid, label="m1"];
}
