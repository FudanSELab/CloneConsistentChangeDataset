digraph {
7 [style = filled, label = "StateManagerUtil.closeStateManager(logger,\"logPrefix:\",true,false,stateManager,stateDirectory,TaskType.ACTIVE)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCloseStateManagerClean['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectLastCall()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expect(stateDirectory.lock(taskId)).andReturn(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ctrl.replay()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "replayAll()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ctrl.checkOrder(true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "expect(stateDirectory.lock(taskId)).andReturn(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ctrl.verify()@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StateManagerUtil.closeStateManager(logger,\"logPrefix:\",true,false,stateManager,stateDirectory,TaskType.ACTIVE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "stateManager.close()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCloseStateManagerClean['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shouldNotCloseStateManagerIfUnableToLockTaskDirectory['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "stateDirectory.unlock(taskId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expect(stateManager.taskId()).andReturn(taskId)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectLastCall().andThrow(new AssertionError(\"Should not be trying to close state you don't own!\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
8->1 [style = bold, label=""];
14->16 [style = bold, label=""];
5->8 [style = bold, label=""];
16->3 [style = bold, label=""];
1->4 [style = bold, label=""];
13->10 [style = bold, label=""];
5->12 [style = dashed, label="0"];
10->5 [style = bold, label=""];
9->10 [style = bold, label=""];
8->15 [style = bold, label=""];
15->14 [style = bold, label=""];
3->7 [style = bold, label=""];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
2->6 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
1->15 [style = dashed, label="0"];
4->0 [style = bold, label=""];
}
