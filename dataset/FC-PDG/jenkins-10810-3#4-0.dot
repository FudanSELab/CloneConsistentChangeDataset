digraph {
5 [style = filled, label = "thing.addAction(a2)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Arrays.asList(a2),thing.getActions())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Arrays.asList(a2),thing.getActions())@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Collections.singletonList(a2),thing.getActions())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "CauseAction a1 = new CauseAction()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(Collections.singletonList(a2),thing.getActions())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "ParametersAction a2 = new ParametersAction()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "thing.addAction(a1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "removeActions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(thing.removeActions(),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(thing.removeActions(),is(false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(thing.removeAction(a1),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(thing.removeAction(a1),is(false))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "removeAction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(thing.removeAction(null),is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Arrays.asList(a1,a2),thing.getActions())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(Collections.singletonList(a2),thing.getActions())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(Arrays.asList(a2),thing.getActions())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "removeAction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->11 [style = solid, label="a1"];
10->11 [style = solid, label="a2"];
1->9 [style = solid, label="a1"];
15->2 [style = bold, label=""];
8->15 [style = bold, label=""];
17->6 [style = bold, label=""];
0->6 [style = bold, label=""];
6->18 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
10->12 [style = solid, label="a2"];
0->17 [style = dashed, label="0"];
13->1 [style = bold, label=""];
10->3 [style = solid, label="a2"];
8->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
10->6 [style = solid, label="a2"];
11->0 [style = bold, label=""];
10->14 [style = solid, label="a2"];
10->5 [style = solid, label="a2"];
10->7 [style = solid, label="a2"];
16->1 [style = bold, label=""];
7->2 [style = bold, label=""];
12->8 [style = bold, label=""];
2->14 [style = bold, label=""];
6->8 [style = bold, label=""];
1->8 [style = solid, label="a1"];
7->15 [style = dashed, label="0"];
9->5 [style = bold, label=""];
11->17 [style = bold, label=""];
8->18 [style = dashed, label="0"];
5->11 [style = bold, label=""];
10->9 [style = bold, label=""];
4->1 [style = bold, label=""];
10->15 [style = solid, label="a2"];
3->14 [style = dashed, label="0"];
18->7 [style = bold, label=""];
1->0 [style = solid, label="a1"];
1->10 [style = bold, label=""];
}
