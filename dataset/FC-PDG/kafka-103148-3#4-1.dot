digraph {
3 [style = filled, label = "testGetErrorResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "short version = 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<ListOffsetsTopicResponse> v = Collections.singletonList(new ListOffsetsTopicResponse().setName(\"topic\").setPartitions(Collections.singletonList(new ListOffsetsPartitionResponse().setErrorCode(Errors.NOT_LEADER_OR_FOLLOWER.code()).setLeaderEpoch(ListOffsetsResponse.UNKNOWN_EPOCH).setOffset(ListOffsetsResponse.UNKNOWN_OFFSET).setPartitionIndex(0).setTimestamp(ListOffsetsResponse.UNKNOWN_TIMESTAMP))))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testGetErrorResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ListOffsetsRequest request = ListOffsetsRequest.Builder.forConsumer(true,IsolationLevel.READ_COMMITTED).setTargetTimes(topics).build(version)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "List<ListOffsetsTopicResponse> v = Collections.singletonList(new ListOffsetsTopicResponse().setName(\"topic\").setPartitions(Collections.singletonList(new ListOffsetsPartitionResponse().setErrorCode(Errors.NOT_LEADER_OR_FOLLOWER.code()).setOldStyleOffsets(Collections.emptyList()).setPartitionIndex(0))))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(expectedResponse.data().topics(),response.data().topics())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(expectedResponse.throttleTimeMs(),response.throttleTimeMs())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<ListOffsetsTopic> topics = Arrays.asList(new ListOffsetsTopic().setName(\"topic\").setPartitions(Collections.singletonList(new ListOffsetsPartition().setPartitionIndex(0))))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "version++@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expectedResponse.throttleTimeMs(),response.throttleTimeMs())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ListOffsetsRequest request = ListOffsetsRequest.Builder.forConsumer(true,IsolationLevel.READ_COMMITTED,false).setTargetTimes(topics).build(version)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "ListOffsetsResponse expectedResponse = new ListOffsetsResponse(data)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ListOffsetsResponseData data = new ListOffsetsResponseData().setThrottleTimeMs(0).setTopics(v)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "version <= ApiKeys.LIST_OFFSETS.latestVersion()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testGetErrorResponseV0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ListOffsetsRequest request = ListOffsetsRequest.Builder.forConsumer(true,IsolationLevel.READ_UNCOMMITTED).setTargetTimes(topics).build((short)0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(expectedResponse.data().topics(),response.data().topics())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ListOffsetsResponse expectedResponse = new ListOffsetsResponse(data)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ListOffsetsResponse response = (ListOffsetsResponse)request.getErrorResponse(0,Errors.NOT_LEADER_OR_FOLLOWER.exception())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
5->2 [style = solid, label="topics"];
5->17 [style = solid, label="v"];
3->1 [style = bold, label=""];
1->6 [style = solid, label="version"];
8->11 [style = solid, label="data"];
4->6 [style = bold, label=""];
7->16 [style = dashed, label="0"];
17->9 [style = bold, label=""];
6->13 [style = dotted, label="true"];
1->4 [style = solid, label="version"];
4->6 [style = solid, label="version"];
9->10 [style = bold, label=""];
12->1 [style = bold, label=""];
5->17 [style = bold, label=""];
11->2 [style = bold, label=""];
1->13 [style = solid, label="version"];
15->5 [style = bold, label=""];
17->9 [style = solid, label="data"];
14->18 [style = solid, label="topics"];
7->9 [style = bold, label=""];
6->10 [style = dotted, label="true"];
4->13 [style = solid, label="version"];
6->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
6->2 [style = dotted, label="true"];
9->18 [style = bold, label=""];
4->7 [style = solid, label="version"];
19->14 [style = bold, label=""];
10->8 [style = bold, label=""];
6->4 [style = dotted, label="true"];
10->8 [style = solid, label="v"];
6->9 [style = dotted, label="true"];
0->4 [style = bold, label=""];
6->8 [style = dotted, label="true"];
5->13 [style = bold, label=""];
7->13 [style = dashed, label="0"];
6->7 [style = dotted, label="true"];
5->7 [style = bold, label=""];
1->7 [style = solid, label="version"];
13->9 [style = bold, label=""];
18->8 [style = bold, label=""];
6->11 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
10->5 [style = dashed, label="0"];
8->11 [style = bold, label=""];
6->5 [style = dotted, label="true"];
}
