digraph {
9 [style = filled, label = "client.checkExists().inBackground().forPath(\"/hey\")@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertTrue(semaphore.tryAcquire(MAX_RETRIES,10,TimeUnit.SECONDS))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testRetry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "client.getZookeeperClient().setRetryPolicy(new RetryPolicy(){@Override public boolean allowRetry(int retryCount,long elapsedTimeMs,RetrySleeper sleeper){semaphore.release()if (retries.incrementAndGet() == MAX_RETRIES) {try {server = new TestingServer(serverPort)}catch (Exception e) }return true}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "semaphore.drainPermits()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "retries.set(0)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final AtomicInteger retries = new AtomicInteger(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.start()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "client.checkExists().forPath(\"/hey\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{Closeables.closeQuietly(client)}@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final int MAX_RETRIES = 3@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),1000,1000,new RetryOneTime(10))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.fail(\"Error\",e)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "server.stop()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final int serverPort = server.getPort()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testNestedCalls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testNestedCalls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Assert.assertTrue(semaphore.tryAcquire(MAX_RETRIES,10,TimeUnit.SECONDS))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "server.stop()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(latch.await(10,TimeUnit.SECONDS))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.checkExists().inBackground(latch).forPath(\"/hey\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Semaphore semaphore = new Semaphore(0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Throwable e@@@34@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17->10 [style = bold, label=""];
14->24 [style = bold, label=""];
11->20 [style = bold, label=""];
16->18 [style = bold, label=""];
23->20 [style = solid, label="client"];
23->5 [style = bold, label=""];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
12->17 [style = solid, label="MAX_RETRIES"];
2->3 [style = bold, label=""];
22->9 [style = bold, label=""];
18->17 [style = bold, label=""];
26->17 [style = solid, label="serverPort"];
4->2 [style = bold, label=""];
12->26 [style = bold, label=""];
19->13 [style = dotted, label="true"];
2->7 [style = solid, label="client"];
12->15 [style = solid, label="MAX_RETRIES"];
24->22 [style = bold, label=""];
21->12 [style = bold, label=""];
5->16 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
19->13 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
10->25 [style = bold, label=""];
6->15 [style = dashed, label="0"];
0->1 [style = bold, label=""];
26->23 [style = bold, label=""];
25->15 [style = bold, label=""];
12->11 [style = solid, label="MAX_RETRIES"];
6->7 [style = bold, label=""];
1->25 [style = dashed, label="0"];
13->20 [style = bold, label=""];
}
