digraph {
20 [style = filled, label = "tableShardingStrategyConfig = tableRuleConfig.getShardingStrategy()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String defaultGenerateKeyColumn@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "keyGeneratorName = null == keyGeneratorConfig? null: keyGeneratorConfig.getKeyGeneratorName()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "generateKeyColumn = null != keyGeneratorConfig && !Strings.isNullOrEmpty(keyGeneratorConfig.getColumn())? keyGeneratorConfig.getColumn(): defaultGenerateKeyColumn@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "checkRule(dataNodes)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "TableRule['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final ShardingAutoTableRuleConfiguration tableRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TableRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "logicTable = tableRuleConfig.getLogicTable().toLowerCase()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "dataNodeIndexMap = new HashMap<>(dataNodes.size(),1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "actualTables = getActualTables()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TableRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ShardingTableRuleConfiguration tableRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ShardingTableRuleConfiguration tableRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final Collection<String> dataSourceNames@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final ShardingAutoTableAlgorithm shardingAutoTableAlgorithm@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "logicTable = tableRuleConfig.getLogicTable()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "actualDataNodes = isEmptyDataNodes(dataNodes)? generateDataNodes(tableRuleConfig.getLogicTable(),dataSourceNames): generateDataNodes(dataNodes,dataSourceNames)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final String defaultGenerateKeyColumn@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<String> dataNodes = new InlineExpressionParser(tableRuleConfig.getActualDataNodes()).splitAndEvaluate()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "dataNodeIndexMap = new HashMap<>(dataNodes.size(),1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "KeyGenerateStrategyConfiguration keyGeneratorConfig = tableRuleConfig.getKeyGenerateStrategy()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Collection<String> dataSourceNames@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "generateKeyColumn = null != keyGeneratorConfig && !Strings.isNullOrEmpty(keyGeneratorConfig.getColumn())? keyGeneratorConfig.getColumn(): defaultGenerateKeyColumn@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String defaultGenerateKeyColumn@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "actualDataNodes = isEmptyDataNodes(dataNodes)? generateDataNodes(tableRuleConfig.getLogicTable(),dataSourceNames): generateDataNodes(dataNodes,dataSourceNames)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<String> dataNodes = getDataNodes(tableRuleConfig,shardingAutoTableAlgorithm,dataSourceNames)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "databaseShardingStrategyConfig = new NoneShardingStrategyConfiguration()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "KeyGenerateStrategyConfiguration keyGeneratorConfig = tableRuleConfig.getKeyGenerateStrategy()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->3 [style = solid, label="dataNodes"];
6->3 [style = bold, label=""];
26->21 [style = solid, label="tableRuleConfig"];
21->27 [style = solid, label="dataNodes"];
22->11 [style = solid, label="dataSourceNames"];
19->20 [style = bold, label=""];
9->28 [style = dashed, label="0"];
10->5 [style = solid, label="keyGeneratorConfig"];
7->5 [style = solid, label="dataNodes"];
14->19 [style = bold, label=""];
25->28 [style = dotted, label="true"];
25->14 [style = bold, label=""];
2->10 [style = bold, label=""];
13->11 [style = bold, label=""];
11->2 [style = bold, label=""];
8->1 [style = solid, label="keyGeneratorConfig"];
14->7 [style = bold, label=""];
20->21 [style = bold, label=""];
17->16 [style = dotted, label="true"];
8->1 [style = bold, label=""];
4->1 [style = solid, label="defaultGenerateKeyColumn"];
16->3 [style = solid, label="dataSourceNames"];
17->15 [style = dotted, label="true"];
10->5 [style = bold, label=""];
9->1 [style = solid, label="defaultGenerateKeyColumn"];
9->3 [style = solid, label="dataSourceNames"];
5->24 [style = bold, label=""];
17->9 [style = dotted, label="true"];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
21->11 [style = solid, label="dataNodes"];
28->5 [style = solid, label="defaultGenerateKeyColumn"];
23->21 [style = solid, label="shardingAutoTableAlgorithm"];
3->13 [style = bold, label=""];
22->21 [style = solid, label="dataSourceNames"];
12->0 [style = dotted, label="true"];
10->24 [style = solid, label="keyGeneratorConfig"];
25->22 [style = dotted, label="true"];
12->4 [style = dotted, label="true"];
25->23 [style = dotted, label="true"];
14->18 [style = dashed, label="0"];
8->10 [style = solid, label="keyGeneratorConfig"];
18->7 [style = bold, label=""];
1->10 [style = bold, label=""];
24->27 [style = bold, label=""];
25->26 [style = dotted, label="true"];
17->18 [style = bold, label=""];
2->8 [style = bold, label=""];
21->13 [style = bold, label=""];
12->9 [style = dotted, label="true"];
}
