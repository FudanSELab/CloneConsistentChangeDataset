digraph {
24 [style = filled, label = "assertEquals(\"foo\",mx_collection2.getName())@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "val mx_property = holderSpec.getAssociationElseFail(\"property\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(\"bar\",mx_collection.getStaticDescription().get())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(\"foo\",mx_property.getStaticFriendlyName().get())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(\"bar\",mx_collection.getDescription())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertNotNull(mx_collection2)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "val property = holderSpec.getAssociationElseFail(\"sampleProperty\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"collection\",mx_collection.getId())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"bar\",mx_collection2.getDescription())@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "val collection = holderSpec.getAssociationElseFail(\"sampleCollection\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertHasPublishedActionFacet(mx_action2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"property2\",mx_property2.getId())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"foo\",mx_property2.getName())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "typeLevelAnnotations_shouldBeHonored_onMixins['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(\"sampleAction\",action.getId())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(\"collection2\",mx_collection2.getId())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "val mx_property2 = holderSpec.getAssociationElseFail(\"property2\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(\"bar\",mx_action.getStaticDescription().get())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "assertEquals(\"bar\",mx_property.getStaticDescription().get())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(\"foo\",mx_collection2.getStaticFriendlyName().get())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "metamodelContributingMembers_shouldBeInheritable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(\"bar\",mx_property.getDescription())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"action\",mx_action.getId())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(\"foo\",collection.getName())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "val mx_action2 = holderSpec.getActionElseFail(\"action2\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNotNull(mx_action)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"bar\",mx_property2.getStaticDescription().get())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(\"foo\",mx_action.getName())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "assertEquals(\"foo\",action.getName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(\"bar\",action.getDescription())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "Class<?> type@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "val action = holderSpec.getActionElseFail(\"sampleAction\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertNotNull(mx_property2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "val holderSpec = specificationLoader.specForTypeElseFail()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"foo\",mx_property.getName())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "val mx_action = holderSpec.getActionElseFail(\"action\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "val mx_collection = holderSpec.getAssociationElseFail(\"collection\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertNotNull(collection)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(\"bar\",mx_collection2.getStaticDescription().get())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(\"sampleCollection\",collection.getId())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(\"foo\",mx_collection.getName())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"foo\",mx_action.getStaticFriendlyName().get())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertHasPublishedActionFacet(mx_action)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"bar\",mx_property2.getDescription())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "val mx_collection2 = holderSpec.getAssociationElseFail(\"collection2\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(\"sampleProperty\",property.getId())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertNotNull(mx_collection)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertNotNull(mx_action2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertNotNull(property)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertNotNull(action)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(\"foo\",mx_property2.getStaticFriendlyName().get())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertNotNull(mx_property)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"bar\",collection.getDescription())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(\"bar\",mx_action.getDescription())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "typeLevelAnnotations_shouldBeHonored_onMixins['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "val holderSpec = specificationLoader.specForTypeElseFail(type)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(\"foo\",mx_collection.getStaticFriendlyName().get())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(\"foo\",property.getName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(\"bar\",property.getDescription())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(\"property\",mx_property.getId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58->50 [style = bold, label=""];
3->40 [style = dashed, label="0"];
41->19 [style = bold, label=""];
7->30 [style = bold, label=""];
45->52 [style = solid, label="action"];
48->51 [style = solid, label="property"];
44->53 [style = bold, label=""];
28->14 [style = bold, label=""];
19->1 [style = bold, label=""];
33->11 [style = bold, label=""];
48->51 [style = bold, label=""];
21->31 [style = bold, label=""];
35->37 [style = bold, label=""];
11->13 [style = bold, label=""];
50->45 [style = bold, label=""];
25->15 [style = bold, label=""];
9->5 [style = bold, label=""];
57->49 [style = solid, label="collection"];
30->8 [style = bold, label=""];
22->43 [style = dashed, label="0"];
16->6 [style = bold, label=""];
47->43 [style = bold, label=""];
13->18 [style = solid, label="mx_action2"];
0->21 [style = bold, label=""];
24->20 [style = bold, label=""];
28->35 [style = bold, label=""];
52->42 [style = bold, label=""];
54->44 [style = bold, label=""];
16->45 [style = dashed, label="0"];
39->41 [style = bold, label=""];
14->35 [style = dashed, label="0"];
29->38 [style = bold, label=""];
58->55 [style = dotted, label="true"];
45->52 [style = bold, label=""];
49->54 [style = bold, label=""];
22->11 [style = bold, label=""];
4->44 [style = dashed, label="0"];
59->46 [style = bold, label=""];
14->4 [style = bold, label=""];
22->33 [style = dashed, label="0"];
42->47 [style = bold, label=""];
23->56 [style = dashed, label="0"];
2->10 [style = bold, label=""];
8->41 [style = dashed, label="0"];
27->42 [style = dashed, label="0"];
37->12 [style = bold, label=""];
31->34 [style = bold, label=""];
6->52 [style = dashed, label="0"];
5->16 [style = bold, label=""];
6->27 [style = bold, label=""];
40->33 [style = bold, label=""];
12->0 [style = solid, label="mx_property2"];
7->39 [style = bold, label=""];
19->1 [style = solid, label="mx_collection2"];
25->15 [style = solid, label="mx_collection"];
4->12 [style = bold, label=""];
14->54 [style = dashed, label="0"];
2->10 [style = solid, label="mx_property"];
1->29 [style = bold, label=""];
4->37 [style = dashed, label="0"];
26->34 [style = dashed, label="0"];
46->57 [style = bold, label=""];
56->59 [style = bold, label=""];
23->18 [style = bold, label=""];
32->5 [style = bold, label=""];
5->50 [style = dashed, label="0"];
17->26 [style = bold, label=""];
34->25 [style = bold, label=""];
10->28 [style = bold, label=""];
30->39 [style = dashed, label="0"];
15->7 [style = bold, label=""];
55->50 [style = solid, label="type"];
8->19 [style = bold, label=""];
16->6 [style = solid, label="mx_action"];
26->25 [style = bold, label=""];
43->48 [style = bold, label=""];
27->3 [style = bold, label=""];
51->56 [style = bold, label=""];
38->36 [style = bold, label=""];
18->2 [style = bold, label=""];
17->31 [style = dashed, label="0"];
3->22 [style = bold, label=""];
12->0 [style = bold, label=""];
20->36 [style = dashed, label="0"];
13->23 [style = bold, label=""];
16->11 [style = solid, label="mx_action"];
57->49 [style = bold, label=""];
27->40 [style = bold, label=""];
29->24 [style = bold, label=""];
21->17 [style = bold, label=""];
24->38 [style = dashed, label="0"];
13->23 [style = solid, label="mx_action2"];
3->47 [style = dashed, label="0"];
}
