digraph {
5 [style = filled, label = "assertThat(regions).hasSize(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "listClusterLevel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "filter.setGroup(\"cluster\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(regions.get(0).getGroup()).isNull()@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "filter.setName(\"customers\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "listRegionByName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Region> regions = client.list(filter).getConfigResult()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(regions.get(0).getId()).isEqualTo(\"customers\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "listClusterLevel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(regions.get(0).getId()).isEqualTo(REGION_IN_CLUSTER)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5->2 [style = bold, label=""];
6->0 [style = bold, label=""];
2->7 [style = dashed, label="0"];
8->1 [style = bold, label=""];
9->8 [style = bold, label=""];
5->7 [style = bold, label=""];
0->8 [style = dashed, label="0"];
0->1 [style = bold, label=""];
4->0 [style = bold, label=""];
2->3 [style = bold, label=""];
1->5 [style = bold, label=""];
7->3 [style = bold, label=""];
}
