digraph {
37 [style = filled, label = "expectConverters()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sourceConnector)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "EasyMock.expect(sinkConnector.taskClass()).andReturn()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testStartAndStopConnector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "expectFileConfigProvider()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "props.put(ConnectorConfig.TASKS_MAX_CONFIG,\"1\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "worker.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "props.put(ConnectorConfig.NAME_CONFIG,CONNECTOR_ID)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sourceConnector.start(connectorProps)@@@14@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "ConnectorConfig connConfig = new SinkConnectorConfig(plugins,connProps)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "EasyMock.expectLastCall()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ConnectException e@@@39@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(1))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "expectFileConfigProvider()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.expectLastCall()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "EasyMock.expect(sinkConnector.taskConfigs(2)).andReturn(Arrays.asList(taskProps,taskProps))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "expectedTaskProps.put(TaskConfig.TASK_CLASS_CONFIG,.getName())@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertStatistics(worker,1,0)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "EasyMock.expect(plugins.newConnector(.getName())).andReturn(sinkConnector)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "worker.herder = herder@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "sourceConnector.initialize(anyObject())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "EasyMock.expect(plugins.currentThreadLoader()).andReturn(delegatingLoader).times(3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Map<String,String> connProps = new HashMap<>(props)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertStatistics(worker,0,0)@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "sinkConnector.initialize(anyObject())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "ConnectException e@@@35@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
55 [style = filled, label = "fail(\"Should have thrown exception when trying to add connector with same name.\")@@@33@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "worker = new Worker(WORKER_ID,new MockTime(),plugins,config,offsetBackingStore,noneConnectorClientConfigOverridePolicy)@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "connectorProps.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertStatistics(worker,0,0)@@@61@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EasyMock.expect(Plugins.compareAndSwapLoaders(delegatingLoader)).andReturn(pluginLoader).times(3)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@63@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@62@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expectLastCall()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sinkConnector.start(props)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "PowerMock.replayAll()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertStatistics(worker,0,0)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sourceConnector)).andReturn(delegatingLoader).times(2)@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
88 [style = filled, label = "assertEquals(2,taskConfigs.size())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
86 [style = filled, label = "worker.stop()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "worker.startConnector(CONNECTOR_ID,props,ctx,connectorStatusListener,TargetState.STARTED)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@60@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(expectedTaskProps,taskConfigs.get(0))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expectStopStorage()@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "ConnectException e@@@45@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "assertStatistics(worker,0,0)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "Map<String,String> taskProps = new HashMap<>()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "expectedTaskProps.put(\"foo\",\"bar\")@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "assertStatistics(worker,1,0)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "Map<String,String> expectedTaskProps = new HashMap<>()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "expectedTaskProps.put(SinkTask.TOPICS_CONFIG,\"foo,bar\")@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "EasyMock.expect(plugins.compareAndSwapLoaders(sinkConnector)).andReturn(delegatingLoader).times(3)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertStartupStatistics(worker,1,0,0,0)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "PowerMock.verifyAll()@@@66@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Collections.emptySet(),worker.connectorNames())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "testReconfigureConnectorTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "EasyMock.expectLastCall()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "EasyMock.expectLastCall()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "worker.herder = herder@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "{}@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertStatistics(worker,0,0)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "worker.start()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "EasyMock.expect(sourceConnector.version()).andReturn(\"1.0\")@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "EasyMock.expectLastCall()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expectStartStorage()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "sinkConnector.stop()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "connProps.put(ConnectorConfig.TASKS_MAX_CONFIG,\"2\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "connectorStatusListener.onShutdown(CONNECTOR_ID)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "props.put(ConnectorConfig.CONNECTOR_CLASS_CONFIG,.getName())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "List<Map<String,String>> taskConfigs = worker.connectorTaskConfigs(CONNECTOR_ID,connConfig)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "taskProps.put(\"foo\",\"bar\")@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "PowerMock.replayAll()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(CONNECTOR_ID)),worker.connectorNames())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "connectorStatusListener.onStartup(CONNECTOR_ID)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "props.put(SinkConnectorConfig.TOPICS_CONFIG,\"foo,bar\")@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testStartAndStopConnector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "Map<String,String> props = new HashMap<>()@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "worker.stopConnector(CONNECTOR_ID)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "sourceConnector.stop()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "EasyMock.expect(sinkConnector.version()).andReturn(\"1.0\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94->76 [style = bold, label=""];
41->5 [style = bold, label=""];
89->70 [style = solid, label="expectedTaskProps"];
76->62 [style = bold, label=""];
27->19 [style = solid, label="worker"];
40->47 [style = solid, label="worker"];
27->11 [style = dashed, label="0"];
27->66 [style = solid, label="worker"];
39->14 [style = bold, label=""];
49->48 [style = bold, label=""];
26->9 [style = bold, label=""];
33->90 [style = bold, label=""];
16->66 [style = bold, label=""];
53->54 [style = bold, label=""];
9->43 [style = bold, label=""];
26->68 [style = dashed, label="0"];
8->40 [style = bold, label=""];
32->6 [style = bold, label=""];
29->72 [style = bold, label=""];
40->44 [style = solid, label="worker"];
25->31 [style = bold, label=""];
23->28 [style = bold, label=""];
81->2 [style = bold, label=""];
41->80 [style = dashed, label="0"];
58->20 [style = bold, label=""];
41->80 [style = bold, label=""];
87->77 [style = bold, label=""];
29->46 [style = bold, label=""];
80->60 [style = bold, label=""];
2->63 [style = bold, label=""];
11->24 [style = solid, label="worker"];
46->34 [style = dashed, label="0"];
9->79 [style = dashed, label="0"];
27->85 [style = solid, label="worker"];
17->20 [style = bold, label=""];
82->91 [style = bold, label=""];
33->7 [style = bold, label=""];
0->3 [style = bold, label=""];
19->18 [style = bold, label=""];
13->32 [style = bold, label=""];
73->16 [style = bold, label=""];
36->87 [style = bold, label=""];
30->26 [style = bold, label=""];
4->19 [style = bold, label=""];
85->64 [style = bold, label=""];
3->11 [style = bold, label=""];
45->59 [style = bold, label=""];
48->50 [style = bold, label=""];
54->41 [style = bold, label=""];
67->89 [style = bold, label=""];
70->84 [style = bold, label=""];
77->67 [style = solid, label="connConfig"];
69->31 [style = bold, label=""];
60->74 [style = bold, label=""];
6->2 [style = bold, label=""];
89->61 [style = solid, label="expectedTaskProps"];
27->18 [style = solid, label="worker"];
2->5 [style = dashed, label="0"];
35->0 [style = bold, label=""];
40->16 [style = solid, label="worker"];
39->36 [style = solid, label="props"];
10->34 [style = bold, label=""];
83->37 [style = bold, label=""];
18->1 [style = bold, label=""];
71->68 [style = bold, label=""];
38->37 [style = bold, label=""];
43->46 [style = solid, label="props"];
47->44 [style = bold, label=""];
56->16 [style = bold, label=""];
27->84 [style = solid, label="worker"];
51->42 [style = bold, label=""];
27->29 [style = bold, label=""];
61->70 [style = bold, label=""];
11->25 [style = solid, label="worker"];
75->39 [style = bold, label=""];
21->4 [style = bold, label=""];
11->44 [style = solid, label="worker"];
66->65 [style = bold, label=""];
78->88 [style = bold, label=""];
57->37 [style = bold, label=""];
46->16 [style = bold, label=""];
40->35 [style = bold, label=""];
39->93 [style = solid, label="props"];
68->79 [style = bold, label=""];
1->86 [style = bold, label=""];
31->24 [style = bold, label=""];
6->51 [style = bold, label=""];
36->77 [style = solid, label="connProps"];
31->36 [style = bold, label=""];
34->55 [style = bold, label=""];
59->92 [style = bold, label=""];
43->2 [style = solid, label="props"];
5->60 [style = dashed, label="0"];
37->12 [style = bold, label=""];
28->41 [style = bold, label=""];
11->19 [style = solid, label="worker"];
62->11 [style = bold, label=""];
14->23 [style = bold, label=""];
16->44 [style = bold, label=""];
5->13 [style = bold, label=""];
45->8 [style = bold, label=""];
22->10 [style = bold, label=""];
79->75 [style = bold, label=""];
11->22 [style = bold, label=""];
40->24 [style = solid, label="worker"];
7->15 [style = bold, label=""];
44->25 [style = bold, label=""];
88->61 [style = bold, label=""];
77->67 [style = bold, label=""];
39->16 [style = solid, label="props"];
89->82 [style = bold, label=""];
55->16 [style = bold, label=""];
9->49 [style = bold, label=""];
43->39 [style = bold, label=""];
16->58 [style = bold, label=""];
46->73 [style = bold, label=""];
27->21 [style = solid, label="worker"];
15->45 [style = bold, label=""];
44->36 [style = bold, label=""];
63->33 [style = bold, label=""];
72->46 [style = bold, label=""];
42->33 [style = bold, label=""];
52->56 [style = bold, label=""];
12->30 [style = bold, label=""];
20->47 [style = bold, label=""];
20->44 [style = bold, label=""];
43->27 [style = solid, label="props"];
74->81 [style = bold, label=""];
59->94 [style = solid, label="taskProps"];
36->21 [style = bold, label=""];
39->2 [style = solid, label="props"];
24->36 [style = bold, label=""];
11->36 [style = solid, label="worker"];
40->58 [style = solid, label="worker"];
93->44 [style = bold, label=""];
86->85 [style = bold, label=""];
90->15 [style = bold, label=""];
27->46 [style = solid, label="worker"];
65->93 [style = bold, label=""];
22->34 [style = bold, label=""];
12->71 [style = bold, label=""];
92->94 [style = bold, label=""];
91->78 [style = bold, label=""];
84->21 [style = bold, label=""];
2->42 [style = bold, label=""];
50->53 [style = bold, label=""];
34->27 [style = bold, label=""];
}
