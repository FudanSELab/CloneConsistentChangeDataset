digraph {
12 [style = filled, label = "writer.getMessageHandler().handleMessage(new FlushControlMessage(new FlushControlMessage.FlushReason(\"flush\")))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "state.getJobState().setProp(CloseOnFlushWriterWrapper.WRITER_CLOSE_ON_FLUSH_KEY,\"true\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "byte(( record = new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a03cdc@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),2)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testCloseAfterFlush['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).recordsWritten(),1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertFalse(dummyWriters.get(0).handlerCalled)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "writer.writeEnvelope(new RecordEnvelope(record))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).recordsWritten(),1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).closeCount,1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "WorkUnitState state = new WorkUnitState()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "writer.getMessageHandler().handleMessage(FlushControlMessage.builder().build())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "CloseOnFlushWriterWrapper<byte((> writer = getCloseOnFlushWriter(dummyWriters,state)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(dummyWriters.get(0).committed)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "writer.getMessageHandler().handleMessage(new FlushControlMessage(new FlushControlMessage.FlushReason(\"flush\")))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).handlerCalled,1)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testWriteAfterFlush['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(dummyWriters.get(1).committed)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertFalse(dummyWriters.get(1).handlerCalled)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).closeCount,1)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testWriteAfterFlush['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(dummyWriters.size(),1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).closeCount,1)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "writer.getMessageHandler().handleMessage(FlushControlMessage.builder().build())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "writer.close()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertEquals(dummyWriters.get(1).flushCount,1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).flushCount,1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<DummyWriter> dummyWriters = new ArrayList<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(dummyWriters.get(0).handlerCalled,1)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "state.getJobState().setProp(ConfigurationKeys.WRITER_CLOSE_ON_FLUSH_KEY,\"true\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->16 [style = bold, label=""];
2->20 [style = bold, label=""];
10->15 [style = bold, label=""];
23->5 [style = bold, label=""];
17->24 [style = dashed, label="0"];
7->10 [style = bold, label=""];
6->22 [style = bold, label=""];
9->4 [style = bold, label=""];
27->3 [style = bold, label=""];
4->26 [style = bold, label=""];
0->26 [style = dashed, label="0"];
16->23 [style = bold, label=""];
16->19 [style = bold, label=""];
25->6 [style = bold, label=""];
1->7 [style = bold, label=""];
13->1 [style = bold, label=""];
4->0 [style = bold, label=""];
24->14 [style = bold, label=""];
19->5 [style = bold, label=""];
29->6 [style = bold, label=""];
15->17 [style = bold, label=""];
10->15 [style = solid, label="record"];
21->9 [style = bold, label=""];
30->28 [style = bold, label=""];
19->23 [style = dashed, label="0"];
17->2 [style = bold, label=""];
5->12 [style = bold, label=""];
18->6 [style = bold, label=""];
17->14 [style = bold, label=""];
3->8 [style = bold, label=""];
6->13 [style = bold, label=""];
15->24 [style = bold, label=""];
12->27 [style = dashed, label="0"];
8->21 [style = bold, label=""];
14->2 [style = bold, label=""];
12->3 [style = bold, label=""];
22->1 [style = bold, label=""];
5->27 [style = bold, label=""];
10->5 [style = solid, label="record"];
6->7 [style = solid, label="state"];
13->22 [style = dashed, label="0"];
1->7 [style = solid, label="dummyWriters"];
20->11 [style = bold, label=""];
19->30 [style = bold, label=""];
}
