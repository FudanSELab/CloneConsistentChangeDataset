digraph {
11 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),not(equalTo(expectedResult.getIngestDocument())))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "verify(ingestService,Mockito.atLeast(1)).getPipeline(pipelineId)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(resultList.get(2).getIngestDocument().hasField(key1))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(resultList.size(),equalTo(4))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "pipelineConfig.put(\"name\",pipelineId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String key1 = randomAlphaOfLength(10)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key1))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key3))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertFalse(resultList.get(2).getIngestDocument().hasField(key3))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,null,new CompoundProcessor(new TestProcessor(null),new TestProcessor(null),new TestProcessor(null)))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),nullValue())@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor,pipelineProcessor)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(resultList.get(1).getProcessorTag(),nullValue())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testActualPipelineProcessorRepeatedInvocation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testActualPipelineProcessor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null)))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String key3 = randomAlphaOfLength(10)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(resultList.get(3).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(resultList.get(3).getProcessorTag(),nullValue())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Map<String,Object> pipelineConfig = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(resultList.get(2).getIngestDocument().hasField(key2))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String pipelineId = \"pipeline1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "when(ingestService.getPipeline(pipelineId)).thenReturn(pipeline)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(resultList.get(3).getFailure(),nullValue())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getType(),actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument,null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "IngestService ingestService = createIngestService()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(resultList.get(2).getType(),equalTo(\"pipeline\"))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(resultList.get(1).getFailure(),nullValue())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertNull(resultList.get(2).getConditionalWithResult())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String key2 = randomAlphaOfLength(10)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNotEquals(resultList.get(1).getIngestDocument().getSourceAndMetadata().get(key1),resultList.get(3).getIngestDocument().getSourceAndMetadata().get(key1))@@@34@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(ingestService,Mockito.atLeast(2)).getPipeline(pipelineId)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key2))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testActualPipelineProcessor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Pipeline pipeline = new Pipeline(pipelineId,null,null,new CompoundProcessor(new TestProcessor(null),new TestProcessor(null),new TestProcessor(null)))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->10 [style = bold, label=""];
11->16 [style = bold, label=""];
7->9 [style = solid, label="pipelineId"];
21->8 [style = solid, label="pipelineProcessor"];
16->36 [style = bold, label=""];
0->9 [style = bold, label=""];
27->1 [style = bold, label=""];
42->41 [style = bold, label=""];
7->13 [style = solid, label="pipelineId"];
7->39 [style = solid, label="pipelineId"];
31->29 [style = solid, label="pipeline"];
15->16 [style = dashed, label="0"];
46->0 [style = bold, label=""];
7->46 [style = solid, label="pipelineId"];
10->27 [style = bold, label=""];
7->5 [style = solid, label="pipelineId"];
16->6 [style = bold, label=""];
1->19 [style = solid, label="key1"];
3->14 [style = bold, label=""];
12->17 [style = bold, label=""];
34->33 [style = bold, label=""];
4->38 [style = solid, label="pipelineConfig"];
1->3 [style = bold, label=""];
21->8 [style = bold, label=""];
40->25 [style = bold, label=""];
6->11 [style = dashed, label="0"];
35->32 [style = bold, label=""];
31->29 [style = bold, label=""];
39->45 [style = bold, label=""];
7->10 [style = solid, label="pipelineId"];
28->12 [style = bold, label=""];
3->15 [style = solid, label="key2"];
26->19 [style = bold, label=""];
14->26 [style = solid, label="key3"];
1->12 [style = solid, label="key1"];
38->39 [style = bold, label=""];
14->28 [style = solid, label="key3"];
29->21 [style = bold, label=""];
45->29 [style = bold, label=""];
6->15 [style = bold, label=""];
5->25 [style = bold, label=""];
8->22 [style = bold, label=""];
15->26 [style = bold, label=""];
37->12 [style = bold, label=""];
43->7 [style = bold, label=""];
24->27 [style = solid, label="ingestService"];
23->28 [style = bold, label=""];
4->21 [style = solid, label="pipelineConfig"];
13->29 [style = solid, label="pipeline"];
44->46 [style = bold, label=""];
39->45 [style = solid, label="pipeline"];
7->24 [style = bold, label=""];
13->29 [style = bold, label=""];
24->4 [style = bold, label=""];
22->18 [style = bold, label=""];
7->0 [style = solid, label="pipelineId"];
7->31 [style = solid, label="pipelineId"];
29->35 [style = solid, label="actualProcessor"];
17->2 [style = bold, label=""];
13->31 [style = dashed, label="0"];
25->11 [style = bold, label=""];
30->7 [style = bold, label=""];
19->23 [style = bold, label=""];
1->6 [style = solid, label="key1"];
14->31 [style = bold, label=""];
32->44 [style = bold, label=""];
9->5 [style = bold, label=""];
8->22 [style = solid, label="actualProcessor"];
23->41 [style = dashed, label="0"];
5->0 [style = dashed, label="0"];
26->36 [style = dashed, label="0"];
29->35 [style = bold, label=""];
14->13 [style = bold, label=""];
20->7 [style = bold, label=""];
33->37 [style = bold, label=""];
38->29 [style = solid, label="pipelineProcessor"];
41->34 [style = bold, label=""];
18->0 [style = bold, label=""];
19->42 [style = dashed, label="0"];
3->23 [style = solid, label="key2"];
36->42 [style = bold, label=""];
1->38 [style = bold, label=""];
9->40 [style = bold, label=""];
}
