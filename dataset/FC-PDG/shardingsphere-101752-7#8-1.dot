digraph {
13 [style = filled, label = "assertProjectionsContextCreatedProperlyWhenProjectionPresent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList(),0),orderByContext)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ProjectionsSegment projectionsSegment = new ProjectionsSegment(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(schema,new LinkedList<>(),selectStatement)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertProjectionsContextCreatedProperlyWhenProjectionPresent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNotNull(actual)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList(),0),new OrderByContext(Collections.emptyList(),false))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "projectionsSegment.getProjections().addAll(Collections.singleton(shorthandProjectionSegment))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "selectStatement.setProjections(projectionsSegment)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ProjectionsContext actual = new ProjectionsContextEngine(schema).createProjectionsContext(tables,projectionsSegment,new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "ShorthandProjectionSegment shorthandProjectionSegment = new ShorthandProjectionSegment(0,10)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertCreateProjectionsContextWithoutIndexOrderByItemSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final SelectStatement selectStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "OrderByItem orderByItem = new OrderByItem(new ExpressionOrderByItemSegment(0,1,\"\",OrderDirection.ASC))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Collection<SimpleTableSegment> tables = selectStatementContext.getAllSimpleTableSegments()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "OrderByContext orderByContext = new OrderByContext(Collections.singletonList(orderByItem),true)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shorthandProjectionSegment.setOwner(owner)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "OwnerSegment owner = new OwnerSegment(0,10,new IdentifierValue(\"name\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->16 [style = solid, label="orderByContext"];
5->10 [style = bold, label=""];
17->5 [style = bold, label=""];
10->16 [style = solid, label="tables"];
8->9 [style = solid, label="owner"];
4->2 [style = solid, label="projectionsSegment"];
16->7 [style = bold, label=""];
16->7 [style = solid, label="actual"];
18->17 [style = bold, label=""];
0->15 [style = dashed, label="0"];
4->2 [style = bold, label=""];
4->1 [style = solid, label="projectionsSegment"];
1->7 [style = bold, label=""];
12->7 [style = bold, label=""];
1->7 [style = solid, label="actual"];
3->18 [style = bold, label=""];
4->16 [style = solid, label="projectionsSegment"];
6->4 [style = bold, label=""];
14->15 [style = dotted, label="true"];
10->12 [style = solid, label="tables"];
3->5 [style = bold, label=""];
1->12 [style = dashed, label="0"];
11->3 [style = solid, label="shorthandProjectionSegment"];
10->1 [style = solid, label="tables"];
10->16 [style = bold, label=""];
13->0 [style = dotted, label="true"];
10->12 [style = bold, label=""];
15->5 [style = solid, label="selectStatement"];
1->16 [style = dashed, label="0"];
12->7 [style = solid, label="actual"];
8->9 [style = bold, label=""];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
0->5 [style = solid, label="selectStatement"];
6->0 [style = dotted, label="true"];
18->17 [style = solid, label="orderByItem"];
4->12 [style = solid, label="projectionsSegment"];
10->1 [style = bold, label=""];
2->11 [style = bold, label=""];
14->4 [style = bold, label=""];
13->4 [style = bold, label=""];
}
