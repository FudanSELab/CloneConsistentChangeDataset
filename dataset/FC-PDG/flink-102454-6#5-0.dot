digraph {
11 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "clusterClient.submitJob(closableJobGraph.getJobGraph(),.getClassLoader())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "ExecutionException e@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "fail()@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "fail()@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,1000L))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "env.setParallelism(maxParallelism)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Thread.sleep(50)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final long numElements = 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fail()@@@43@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownJobFuture = client.getKvState(wrongJobId,\"hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause() instanceof RuntimeException)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(JobStatus.RUNNING,jobStatusFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause().getMessage().contains(\"FlinkJobNotFoundException: Could not find Flink job (\" + wrongJobId + \")\"))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "env.setStateBackend(stateBackend)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownQSName = client.getKvState(closableJobGraph.getJobId(),\"wrong-hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@40@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final Deadline deadline = Deadline.now().plus(TEST_TIMEOUT)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "executeValueQuery(deadline,client,jobId,\"hakuna\",valueState,numElements)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "fail(\"Unexpected type of exception: \" + f.getMessage())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final JobGraph jobGraph = autoCancellableJob.getJobGraph()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "CompletableFuture<JobStatus> jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "clusterClient.setDetached(true)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testWrongJobIdAndWrongQueryableStateName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "final JobID jobId = autoCancellableJob.getJobId()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final JobID wrongJobId = new JobID()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ClientUtils.submitJob(clusterClient,closableJobGraph.getJobGraph())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testValueState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DataStream<Tuple2<Integer,Long>> source = env.addSource(new TestAscendingValueSource(numElements))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fail(\"Unexpected type of exception: \" + f.getMessage())@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Exception f@@@36@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownQSName = client.getKvState(closableJobGraph.getJobId(),\"wrong-hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> unknownJobFuture = client.getKvState(wrongJobId,\"hakuna\",0,BasicTypeInfo.INT_TYPE_INFO,valueState)@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "unknownJobFuture.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testWrongJobIdAndWrongQueryableStateName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "fail()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "clusterClient.submitJob(jobGraph,.getClassLoader())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ValueStateDescriptor<Tuple2<Integer,Long>> valueState = new ValueStateDescriptor<>(\"any\",source.getType())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "unknownQSName.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS)@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "jobStatusFuture = clusterClient.getJobStatus(closableJobGraph.getJobId())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "clusterClient.setDetached(true)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "source.keyBy(new KeySelector<Tuple2<Integer,Long>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Long> value){return value.f0}}).asQueryableState(\"hakuna\",valueState)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(\"GOT: \" + e.getCause().getMessage(),e.getCause().getMessage().contains(\"FlinkJobNotFoundException: Could not find Flink job (\" + wrongJobId + \")\"))@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
17->10 [style = bold, label=""];
29->15 [style = bold, label=""];
4->35 [style = bold, label=""];
19->9 [style = solid, label="valueState"];
19->36 [style = solid, label="valueState"];
16->18 [style = bold, label=""];
27->36 [style = bold, label=""];
10->28 [style = bold, label=""];
4->17 [style = bold, label=""];
19->5 [style = solid, label="valueState"];
25->33 [style = bold, label=""];
25->22 [style = bold, label=""];
23->18 [style = solid, label="numElements"];
13->27 [style = dotted, label="true"];
0->6 [style = bold, label=""];
4->10 [style = dotted, label="true"];
2->6 [style = bold, label=""];
31->13 [style = bold, label=""];
4->39 [style = bold, label=""];
22->33 [style = dashed, label="0"];
9->32 [style = bold, label=""];
18->19 [style = bold, label=""];
37->20 [style = bold, label=""];
3->26 [style = bold, label=""];
1->20 [style = bold, label=""];
38->4 [style = bold, label=""];
19->6 [style = solid, label="valueState"];
14->39 [style = dashed, label="0"];
19->25 [style = solid, label="valueState"];
12->24 [style = bold, label=""];
40->20 [style = bold, label=""];
26->6 [style = bold, label=""];
29->15 [style = dotted, label="true"];
15->0 [style = dotted, label="true"];
9->5 [style = solid, label="wrongJobId"];
19->25 [style = bold, label=""];
23->41 [style = solid, label="numElements"];
17->7 [style = bold, label=""];
7->9 [style = bold, label=""];
13->2 [style = dotted, label="true"];
17->10 [style = dotted, label="true"];
36->30 [style = bold, label=""];
42->41 [style = solid, label="jobId"];
3->36 [style = bold, label=""];
30->12 [style = bold, label=""];
13->27 [style = bold, label=""];
20->41 [style = solid, label="deadline"];
20->23 [style = bold, label=""];
38->39 [style = solid, label="jobGraph"];
15->0 [style = bold, label=""];
31->27 [style = dotted, label="true"];
7->9 [style = solid, label="wrongJobId"];
17->28 [style = dotted, label="true"];
10->4 [style = bold, label=""];
21->16 [style = bold, label=""];
8->21 [style = bold, label=""];
28->17 [style = bold, label=""];
11->8 [style = bold, label=""];
9->5 [style = bold, label=""];
34->4 [style = bold, label=""];
25->42 [style = bold, label=""];
39->41 [style = bold, label=""];
19->41 [style = solid, label="valueState"];
31->13 [style = dotted, label="true"];
23->11 [style = bold, label=""];
22->14 [style = bold, label=""];
32->3 [style = bold, label=""];
4->17 [style = dotted, label="true"];
33->34 [style = bold, label=""];
35->7 [style = bold, label=""];
27->2 [style = bold, label=""];
42->38 [style = bold, label=""];
15->36 [style = bold, label=""];
14->4 [style = bold, label=""];
6->12 [style = bold, label=""];
}
