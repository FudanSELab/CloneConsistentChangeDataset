digraph {
13 [style = filled, label = "init(factory.constructStream(streamExpressions.get(0)),factory.constructEqualitor(((StreamExpressionValue)byExpression.getParameter()).getValue(),))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "StreamFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StreamExpressionNamedParameter byExpression = factory.getNamedOperand(expression,\"by\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ReducerStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamFactory factory@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "null == overExpression || !(overExpression.getParameter() instanceof StreamExpressionValue)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "init(factory.constructStream(streamExpressions.get(0)),factory.constructComparator(((StreamExpressionValue)byExpression.getParameter()).getValue(),))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "UniqueStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "init(factory.constructStream(streamExpressions.get(0)),factory.constructEqualitor(((StreamExpressionValue)overExpression.getParameter()).getValue(),))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "1 != streamExpressions.size()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "StreamExpressionNamedParameter overExpression = factory.getNamedOperand(expression,\"over\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'by' parameter listing fields to group by but didn't find one\",expression))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ReducerStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "null == byExpression || !(byExpression.getParameter() instanceof StreamExpressionValue)@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 1@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->13 [style = dashed, label="0"];
14->3 [style = bold, label=""];
16->3 [style = bold, label=""];
6->10 [style = solid, label="expression"];
16->19 [style = dotted, label="true"];
9->20 [style = dashed, label="0"];
9->0 [style = bold, label=""];
14->12 [style = dotted, label="true"];
21->15 [style = dotted, label="true"];
0->10 [style = dotted, label="true"];
19->15 [style = solid, label="expression"];
8->2 [style = dotted, label="true"];
21->15 [style = bold, label=""];
11->1 [style = dotted, label="true"];
16->17 [style = dotted, label="true"];
4->13 [style = bold, label=""];
20->0 [style = bold, label=""];
6->3 [style = solid, label="expression"];
4->7 [style = dotted, label="true"];
19->2 [style = solid, label="expression"];
9->4 [style = solid, label="byExpression"];
5->18 [style = dashed, label="0"];
4->21 [style = dashed, label="0"];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
21->18 [style = bold, label=""];
4->7 [style = bold, label=""];
3->9 [style = bold, label=""];
0->10 [style = bold, label=""];
7->5 [style = bold, label=""];
3->20 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
19->3 [style = solid, label="expression"];
11->3 [style = bold, label=""];
2->21 [style = bold, label=""];
11->6 [style = dotted, label="true"];
20->21 [style = solid, label="overExpression"];
6->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
7->15 [style = dashed, label="0"];
8->21 [style = bold, label=""];
6->7 [style = solid, label="expression"];
19->10 [style = solid, label="expression"];
8->4 [style = bold, label=""];
6->2 [style = solid, label="expression"];
19->20 [style = solid, label="expression"];
4->5 [style = bold, label=""];
6->9 [style = solid, label="expression"];
14->6 [style = dotted, label="true"];
}
