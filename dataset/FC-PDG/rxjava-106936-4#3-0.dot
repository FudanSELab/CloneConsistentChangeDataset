digraph {
1 [style = filled, label = "Maybe.just(1).flatMapSingle(new Function<Integer,SingleSource<String>>(){@Override public SingleSource<String> apply(final Integer integer){if (integer == 1) {return Single.just(\"2\")}return Single.just(\"1\")}}).toSingle().test().assertResult(\"2\")@@@3@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Single.just(1).flatMap(new Function<Integer,SingleSource<String>>(){@Override public SingleSource<String> apply(final Integer integer){if (integer == 1) {return Single.just(\"2\")}return Single.just(\"1\")}}).test().assertResult(\"2\")@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "flatMapSingleValueDifferentType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "flatMapValueDifferentType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "flatMapSingleValueDifferentType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->4 [style = dashed, label="0"];
2->1 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
}
