digraph {
0 [style = filled, label = "accumulate(executeResults)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Collection<ExecutionGroup<JDBCExecutionUnit>> executionGroups = createExecutionGroups()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "{clearBatch()}@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "reply()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "executionContext = createExecutionContext()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "executeUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "executeUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "clearPrevious()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return driverJDBCExecutor.execute(executionGroups,executionContext.getSqlStatementContext().getSqlStatement(),executionContext.getRouteContext().getRouteUnits(),createExecuteCallback())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return driverJDBCExecutor.executeUpdate(executionGroups,executionContext.getSqlStatementContext(),executionContext.getRouteContext().getRouteUnits(),createExecuteUpdateCallback())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Collection<ExecuteResult> executeResults = rawExecutor.execute(createRawExecutionGroups(),new RawSQLExecutorCallback())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cacheStatements(executionGroups)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return executeResults.iterator().next() instanceof QueryResult@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "metaDataContexts.getDefaultMetaData().getRuleMetaData().getRules().stream().anyMatch(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
14->3 [style = bold, label=""];
1->4 [style = bold, label=""];
1->8 [style = bold, label=""];
0->6 [style = bold, label=""];
7->12 [style = bold, label=""];
6->1 [style = solid, label="executionGroups"];
10->3 [style = bold, label=""];
7->0 [style = bold, label=""];
5->0 [style = dotted, label="true"];
5->12 [style = dotted, label="true"];
0->12 [style = dashed, label="0"];
12->6 [style = bold, label=""];
6->1 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
11->3 [style = bold, label=""];
5->7 [style = dotted, label="true"];
7->0 [style = solid, label="executeResults"];
5->7 [style = bold, label=""];
13->9 [style = bold, label=""];
8->4 [style = bold, label=""];
4->13 [style = dashed, label="0"];
6->4 [style = solid, label="executionGroups"];
6->13 [style = solid, label="executionGroups"];
8->13 [style = bold, label=""];
2->5 [style = bold, label=""];
}
