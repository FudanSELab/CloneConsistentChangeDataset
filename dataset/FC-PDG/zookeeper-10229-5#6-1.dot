digraph {
9 [style = filled, label = "forceClose(badClientSocket)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Socket secureClientSocket = null@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final X509KeyType certKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "!handshakeCompleted@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final Boolean hostnameVerification@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "init(caKeyType,certKeyType,hostnameVerification,paramIndex)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Socket secureClientSocket = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Socket clientSocket = null@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(handshakeCompleted)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,false,DATA_TO_CLIENT)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "byte(( buf = new byte((((@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "!handshakeCompleted@@@32@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "handshakeCompletedLock@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "forceClose(badClientSocket)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "{forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Socket clientSocket = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertArrayEquals(DATA_FROM_CLIENT,serverThread.getDataFromClient(0))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "handshakeCompletedLock.wait(TIMEOUT)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerDisconnectedClient['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int bytesRead = clientSocket.getInputStream().read(buf,0,buf.length)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertTrue(handshakeCompleted)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte(( buf = new byte((((@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Socket badClientSocket = connectWithoutSSL()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "serverThread.start()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "clientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final Integer paramIndex@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertArrayEquals(DATA_TO_CLIENT,buf)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@36@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final X509KeyType caKeyType@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "secureClientSocket.getOutputStream().write(DATA_FROM_CLIENT)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "setUp()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "handshakeCompletedLock@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "{forceClose(clientSocket)forceClose(secureClientSocket)serverThread.shutdown(TIMEOUT)}@@@38@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "clientSocket = connectWithoutSSL()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testTLSDetectionNonBlockingNonStrictServerDisconnectedClient['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "testTLSDetectionNonBlockingStrictServerDisconnectedClient['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "UnifiedServerThread serverThread = new UnifiedServerThread(x509Util,localServerAddress,true,DATA_TO_CLIENT)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "handshakeCompletedLock@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "secureClientSocket.getOutputStream().flush()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(buf.length,bytesRead)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "int bytesRead = secureClientSocket.getInputStream().read(buf,0,buf.length)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "clientSocket.getOutputStream().flush()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "secureClientSocket = connectWithSSL()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->14 [style = solid, label="buf"];
0->15 [style = solid, label="secureClientSocket"];
28->9 [style = bold, label=""];
21->28 [style = bold, label=""];
3->34 [style = bold, label=""];
49->24 [style = bold, label=""];
26->5 [style = solid, label="buf"];
10->39 [style = bold, label=""];
29->14 [style = dotted, label="true"];
29->14 [style = bold, label=""];
14->11 [style = dotted, label="true"];
27->24 [style = solid, label="bytesRead"];
14->11 [style = bold, label=""];
13->14 [style = bold, label=""];
23->40 [style = solid, label="secureClientSocket"];
30->41 [style = dotted, label="true"];
48->49 [style = bold, label=""];
17->40 [style = solid, label="clientSocket"];
6->27 [style = solid, label="buf"];
37->1 [style = bold, label=""];
26->16 [style = solid, label="buf"];
9->17 [style = bold, label=""];
7->0 [style = bold, label=""];
32->10 [style = bold, label=""];
34->0 [style = bold, label=""];
23->24 [style = solid, label="buf"];
3->0 [style = bold, label=""];
23->48 [style = bold, label=""];
8->22 [style = bold, label=""];
26->16 [style = bold, label=""];
4->5 [style = solid, label="buf"];
0->23 [style = bold, label=""];
38->37 [style = bold, label=""];
35->38 [style = solid, label="hostnameVerification"];
2->21 [style = bold, label=""];
2->33 [style = bold, label=""];
21->7 [style = bold, label=""];
45->21 [style = bold, label=""];
11->19 [style = dotted, label="true"];
23->48 [style = solid, label="buf"];
28->15 [style = solid, label="clientSocket"];
18->23 [style = bold, label=""];
7->50 [style = solid, label="secureClientSocket"];
43->20 [style = bold, label=""];
14->42 [style = bold, label=""];
31->38 [style = solid, label="caKeyType"];
42->47 [style = bold, label=""];
19->10 [style = bold, label=""];
20->1 [style = bold, label=""];
29->13 [style = solid, label="bytesRead"];
6->29 [style = solid, label="buf"];
34->0 [style = dotted, label="true"];
47->50 [style = bold, label=""];
4->22 [style = solid, label="buf"];
30->36 [style = dotted, label="true"];
24->29 [style = solid, label="buf"];
6->27 [style = bold, label=""];
25->20 [style = bold, label=""];
5->8 [style = solid, label="bytesRead"];
19->32 [style = bold, label=""];
7->28 [style = bold, label=""];
11->10 [style = bold, label=""];
36->38 [style = solid, label="paramIndex"];
39->40 [style = bold, label=""];
23->6 [style = bold, label=""];
16->4 [style = solid, label="bytesRead"];
22->3 [style = dotted, label="true"];
21->7 [style = solid, label="badClientSocket"];
0->18 [style = bold, label=""];
27->24 [style = bold, label=""];
1->2 [style = bold, label=""];
32->39 [style = bold, label=""];
19->39 [style = dotted, label="true"];
16->4 [style = bold, label=""];
32->10 [style = dotted, label="true"];
27->48 [style = dashed, label="0"];
4->5 [style = bold, label=""];
28->9 [style = solid, label="badClientSocket"];
30->31 [style = dotted, label="true"];
5->8 [style = bold, label=""];
30->38 [style = bold, label=""];
45->21 [style = solid, label="badClientSocket"];
17->26 [style = bold, label=""];
10->15 [style = bold, label=""];
41->38 [style = solid, label="certKeyType"];
20->46 [style = bold, label=""];
24->29 [style = bold, label=""];
11->42 [style = bold, label=""];
11->19 [style = bold, label=""];
14->10 [style = dotted, label="true"];
44->43 [style = bold, label=""];
1->20 [style = dashed, label="0"];
22->3 [style = bold, label=""];
30->35 [style = dotted, label="true"];
12->25 [style = bold, label=""];
19->32 [style = dotted, label="true"];
46->45 [style = bold, label=""];
29->42 [style = dotted, label="true"];
33->21 [style = bold, label=""];
48->49 [style = solid, label="bytesRead"];
6->23 [style = dashed, label="0"];
29->13 [style = bold, label=""];
}
