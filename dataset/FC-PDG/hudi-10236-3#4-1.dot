digraph {
15 [style = filled, label = "String lastCheckpointString = TEST_TOPIC_NAME + \",0:250\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(250,nextOffsetRanges(0(.fromOffset())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testGetNextOffsetRangesFromLatest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "HoodieTestDataGenerator dataGenerator = new HoodieTestDataGenerator()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "OffsetRange(( nextOffsetRanges = kafkaOffsetGen.getNextOffsetRanges(Option.of(lastCheckpointString),500,metrics)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,nextOffsetRanges.length)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testUtils.createTopic(TEST_TOPIC_NAME,1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,nextOffsetRanges.length)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "KafkaOffsetGen kafkaOffsetGen = new KafkaOffsetGen(getConsumerConfigs(\"latest\",\"string\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testGetNextOffsetRangesFromCheckpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testGetNextOffsetRangesFromLatest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(750,nextOffsetRanges(0(.untilOffset())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testUtils.sendMessages(TEST_TOPIC_NAME,Helpers.jsonifyRecords(dataGenerator.generateInserts(\"000\",1000)))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1000,nextOffsetRanges(0(.untilOffset())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9->0 [style = bold, label=""];
3->1 [style = bold, label=""];
8->3 [style = bold, label=""];
0->11 [style = bold, label=""];
10->3 [style = bold, label=""];
0->11 [style = dashed, label="0"];
11->2 [style = bold, label=""];
4->0 [style = bold, label=""];
2->13 [style = bold, label=""];
6->4 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->2 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
2->13 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
0->5 [style = bold, label=""];
15->11 [style = solid, label="lastCheckpointString"];
15->1 [style = bold, label=""];
}
