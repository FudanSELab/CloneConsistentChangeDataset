digraph {
10 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final AlterConsumerGroupOffsetsResult result = env.adminClient().alterConsumerGroupOffsets(GROUP_ID,offsets)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.COORDINATOR_NOT_AVAILABLE))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "offsets.put(tp1,new OffsetAndMetadata(123L))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testAlterConsumerGroupOffsetsFindCoordinatorRetriableErrors['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.COORDINATOR_NOT_AVAILABLE))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(\"foo\",0,Errors.NONE))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_NOT_AVAILABLE,Node.noNode()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Map<TopicPartition,OffsetAndMetadata> offsets = new HashMap<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final DeleteConsumerGroupOffsetsResult errorResult1 = env.adminClient().deleteConsumerGroupOffsets(GROUP_ID,Stream.of(tp1).collect(Collectors.toSet()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetCommitResponse(tp1,Errors.NONE))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertNull(result.all().get())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS,Node.noNode()))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final TopicPartition tp1 = new TopicPartition(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testDeleteConsumerGroupOffsetsRetriableErrors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "env.kafkaClient().prepareResponse(prepareFindCoordinatorResponse(Errors.NONE,env.cluster().controller()))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(result.partitionResult(tp1).get())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testDeleteConsumerGroupOffsetsRetriableErrors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.COORDINATOR_LOAD_IN_PROGRESS))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "env.kafkaClient().prepareResponse(prepareOffsetDeleteResponse(Errors.NOT_COORDINATOR))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(errorResult1.partitionResult(tp1).get())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertNull(errorResult1.all().get())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->20 [style = bold, label=""];
16->11 [style = bold, label=""];
2->20 [style = dashed, label="0"];
18->23 [style = bold, label=""];
11->23 [style = solid, label="tp1"];
2->1 [style = bold, label=""];
21->15 [style = bold, label=""];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
11->9 [style = bold, label=""];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
20->18 [style = bold, label=""];
12->13 [style = bold, label=""];
6->4 [style = bold, label=""];
5->6 [style = bold, label=""];
5->12 [style = bold, label=""];
18->17 [style = solid, label="offsets"];
22->10 [style = bold, label=""];
9->19 [style = bold, label=""];
23->17 [style = bold, label=""];
10->2 [style = bold, label=""];
13->6 [style = bold, label=""];
10->1 [style = bold, label=""];
11->20 [style = solid, label="tp1"];
8->11 [style = bold, label=""];
14->11 [style = bold, label=""];
19->22 [style = bold, label=""];
17->21 [style = bold, label=""];
0->5 [style = bold, label=""];
}
