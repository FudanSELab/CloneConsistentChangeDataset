digraph {
29 [style = filled, label = "verify(releaseMessageService,times(1)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i < retryTimes@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "verify(releaseService,times(1)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(anotherRelease)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "String someIrrelevantKey = \"someIrrelevantKey\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(someRelease,stillOldRelease)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNull(anotherRelease)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Release anotherRelease = mock()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "verify(releaseMessageService,times(1)).findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "someNotificationMessages.put(someIrrelevantKey,someNewNotificationId)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "verify(releaseService,times(1)).findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Release stillOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(someRelease,release)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ReleaseMessage anotherReleaseMessage = mock()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(anotherReleaseMessage)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "assertNull(release)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testFindLatestActiveReleaseWithIrrelevantMessages['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Release release = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(someReleaseMessage.getId()).thenReturn(someNotificationId)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(anotherReleaseMessage.getId()).thenReturn(someNewNotificationId)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Release anotherRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(releaseMessageService.findLatestReleaseMessageForMessages(Lists.newArrayList(someKey))).thenReturn(someReleaseMessage)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "long someNewNotificationId = someNotificationId + 1@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testFindLatestActiveReleaseWithReleaseNotFound['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(someRelease,shouldStillBeOldRelease)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int retryTimes = 100@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "when(releaseService.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName)).thenReturn(someRelease)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Release shouldStillBeOldRelease = configServiceWithCache.findLatestActiveRelease(someAppId,someClusterName,someNamespaceName,someNotificationMessages)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->24 [style = solid, label="anotherRelease"];
0->16 [style = bold, label=""];
27->32 [style = bold, label=""];
25->33 [style = bold, label=""];
19->12 [style = bold, label=""];
8->18 [style = bold, label=""];
33->28 [style = bold, label=""];
22->9 [style = bold, label=""];
3->11 [style = bold, label=""];
24->29 [style = bold, label=""];
4->22 [style = dashed, label="0"];
2->9 [style = bold, label=""];
20->11 [style = bold, label=""];
11->19 [style = bold, label=""];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
29->21 [style = bold, label=""];
4->7 [style = solid, label="shouldStillBeOldRelease"];
15->5 [style = bold, label=""];
11->5 [style = solid, label="someNewNotificationId"];
9->6 [style = bold, label=""];
1->17 [style = bold, label=""];
26->30 [style = bold, label=""];
17->7 [style = bold, label=""];
9->28 [style = bold, label=""];
16->15 [style = solid, label="anotherRelease"];
12->13 [style = bold, label=""];
6->17 [style = solid, label="stillOldRelease"];
33->9 [style = solid, label="i"];
9->1 [style = solid, label="release"];
23->24 [style = bold, label=""];
11->0 [style = bold, label=""];
27->23 [style = solid, label="release"];
5->6 [style = bold, label=""];
31->27 [style = bold, label=""];
33->28 [style = solid, label="i"];
30->31 [style = bold, label=""];
28->23 [style = bold, label=""];
6->10 [style = bold, label=""];
32->25 [style = bold, label=""];
28->9 [style = dotted, label="true"];
28->22 [style = dotted, label="true"];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
0->14 [style = solid, label="anotherReleaseMessage"];
11->10 [style = solid, label="someNewNotificationId"];
25->28 [style = solid, label="retryTimes"];
19->10 [style = solid, label="someIrrelevantKey"];
28->22 [style = bold, label=""];
13->2 [style = bold, label=""];
9->28 [style = solid, label="i"];
}
