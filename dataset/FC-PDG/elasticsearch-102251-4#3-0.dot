digraph {
8 [style = filled, label = "final ShardLongFieldRange shardTimestampMillisRange = randomBoolean()? ShardLongFieldRange.UNKNOWN: randomBoolean()? ShardLongFieldRange.EMPTY: ShardLongFieldRange.of(1606407943000L,1606407944000L)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "tasks.add(new StartedShardEntry(shardId,replicaAllocationId,primaryTerm,\"test\",shardTimestampMillisRange))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "testDuplicateStartsAreOkay['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertNotSame(clusterState,result.resultingState)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "randomBoolean()@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testExpandsTimestampRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ShardRouting primaryShard = clusterState.routingTable().shardRoutingTable(shardId).primaryShard()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ClusterStateTaskExecutor.ClusterTasksResult result = executeTasks(clusterState,tasks)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "tasks.add(new StartedShardEntry(shardId,primaryAllocationId,primaryTerm,\"test\",shardTimestampMillisRange))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(indexMetadata.getTimestampMillisRange(),sameInstance(IndexLongFieldRange.NO_SHARDS))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertThat(indexMetadata.getTimestampRange(),sameInstance(IndexLongFieldRange.NO_SHARDS))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final String indexName = \"test\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final ShardId shardId = new ShardId(indexMetadata.getIndex(),0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final ShardLongFieldRange shardTimestampRange = randomBoolean()? ShardLongFieldRange.UNKNOWN: randomBoolean()? ShardLongFieldRange.EMPTY: ShardLongFieldRange.of(1606407943000L,1606407944000L)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "tasks.add(new StartedShardEntry(shardId,primaryAllocationId,primaryTerm,\"test\",shardTimestampRange))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final String primaryAllocationId = primaryShard.allocationId().getId()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final long primaryTerm = indexMetadata.primaryTerm(shardId.id())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tasks.forEach(null)@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "tasks.forEach(null)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final ClusterState clusterState = state(indexName,randomBoolean(),ShardRoutingState.INITIALIZING)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final ClusterStateTaskExecutor.ClusterTasksResult result = executeTasks(clusterState,tasks)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(result.executionResults.size(),equalTo(tasks.size()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final IndexMetadata indexMetadata = clusterState.metadata().index(indexName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<StartedShardEntry> tasks = IntStream.range(0,randomIntBetween(2,10)).mapToObj(null).collect(Collectors.toList())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final List<StartedShardEntry> tasks = new ArrayList<>()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final String allocationId = shardRouting.allocationId().getId()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(result.executionResults.size(),equalTo(tasks.size()))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final String replicaAllocationId = replicaShard.allocationId().getId()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final ShardRouting replicaShard = clusterState.routingTable().shardRoutingTable(shardId).replicaShards().iterator().next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tasks.add(new StartedShardEntry(shardId,replicaAllocationId,primaryTerm,\"test\",shardTimestampRange))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "final ShardRouting shardRouting = clusterState.routingTable().shardRoutingTable(shardId).primaryShard()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final ClusterState clusterState = state(indexName,randomBoolean(),ShardRoutingState.INITIALIZING,ShardRoutingState.INITIALIZING)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testExpandsTimestampRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertNotSame(clusterState,result.resultingState)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->17 [style = solid, label="primaryAllocationId"];
19->6 [style = solid, label="tasks"];
17->5 [style = bold, label=""];
10->20 [style = bold, label=""];
12->20 [style = dashed, label="0"];
15->18 [style = solid, label="shardId"];
23->5 [style = bold, label=""];
21->19 [style = bold, label=""];
5->18 [style = dotted, label="true"];
3->24 [style = bold, label=""];
8->19 [style = bold, label=""];
1->17 [style = solid, label="primaryTerm"];
0->2 [style = bold, label=""];
4->13 [style = bold, label=""];
15->24 [style = solid, label="shardId"];
8->18 [style = solid, label="shardTimestampMillisRange"];
32->27 [style = bold, label=""];
19->17 [style = bold, label=""];
21->23 [style = solid, label="shardTimestampRange"];
9->10 [style = bold, label=""];
25->14 [style = bold, label=""];
15->30 [style = bold, label=""];
31->1 [style = bold, label=""];
1->26 [style = bold, label=""];
0->2 [style = solid, label="indexName"];
5->3 [style = dotted, label="true"];
8->21 [style = dashed, label="0"];
0->14 [style = solid, label="indexName"];
7->3 [style = bold, label=""];
1->9 [style = bold, label=""];
15->17 [style = solid, label="shardId"];
3->18 [style = solid, label="replicaAllocationId"];
3->18 [style = bold, label=""];
20->21 [style = bold, label=""];
28->0 [style = bold, label=""];
5->24 [style = dotted, label="true"];
25->32 [style = solid, label="clusterState"];
11->0 [style = bold, label=""];
1->24 [style = solid, label="primaryTerm"];
8->17 [style = solid, label="shardTimestampMillisRange"];
22->0 [style = bold, label=""];
1->23 [style = solid, label="primaryTerm"];
5->6 [style = bold, label=""];
18->6 [style = bold, label=""];
0->25 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
1->18 [style = solid, label="primaryTerm"];
6->16 [style = bold, label=""];
19->23 [style = bold, label=""];
30->31 [style = bold, label=""];
26->33 [style = solid, label="tasks"];
2->14 [style = bold, label=""];
5->7 [style = dotted, label="true"];
2->25 [style = dashed, label="0"];
2->16 [style = solid, label="clusterState"];
2->6 [style = solid, label="clusterState"];
5->7 [style = bold, label=""];
33->32 [style = bold, label=""];
21->24 [style = solid, label="shardTimestampRange"];
14->15 [style = bold, label=""];
10->23 [style = solid, label="primaryAllocationId"];
17->23 [style = dashed, label="0"];
15->23 [style = solid, label="shardId"];
16->4 [style = bold, label=""];
27->29 [style = bold, label=""];
24->6 [style = bold, label=""];
3->24 [style = solid, label="replicaAllocationId"];
26->33 [style = bold, label=""];
18->24 [style = dashed, label="0"];
25->33 [style = solid, label="clusterState"];
0->25 [style = solid, label="indexName"];
15->1 [style = bold, label=""];
}
