digraph {
3 [style = filled, label = "assertEquals(c1,c2)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "c1.addSeries(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "XYSeriesCollection<String> c1 = new XYSeriesCollection<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "s1.update(0,0,1.1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "XYSeries s1 = new XYSeries(\"Series\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "s1.add(1.0,1.1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotSame(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(c1 != c2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "XYSeries<String> s1 = new XYSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertSame(c1.getClass(),c2.getClass())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(c1.equals(c2))@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "XYSeriesCollection<String> c2 = CloneUtils.clone(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertTrue(c1.equals(c2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "XYSeriesCollection c1 = new XYSeriesCollection()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "MatrixSeries s1 = new MatrixSeries(\"Series\",2,3)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "MatrixSeriesCollection c1 = new MatrixSeriesCollection()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "s1.setDescription(\"XYZ\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MatrixSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "XYSeriesCollection c2 = CloneUtils.clone(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11->4 [style = solid, label="c2"];
17->10 [style = bold, label=""];
10->18 [style = bold, label=""];
6->21 [style = dashed, label="0"];
2->3 [style = solid, label="c2"];
17->20 [style = solid, label="c1"];
9->16 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->8 [style = solid, label="c1"];
12->10 [style = solid, label="s1"];
21->10 [style = solid, label="s1"];
2->4 [style = solid, label="c2"];
18->4 [style = solid, label="c2"];
1->14 [style = dashed, label="0"];
21->15 [style = bold, label=""];
1->3 [style = solid, label="c1"];
8->20 [style = dashed, label="0"];
14->8 [style = solid, label="c1"];
22->21 [style = bold, label=""];
14->10 [style = bold, label=""];
11->3 [style = solid, label="c2"];
14->11 [style = solid, label="c1"];
18->19 [style = solid, label="c2"];
16->19 [style = bold, label=""];
12->7 [style = bold, label=""];
3->0 [style = bold, label=""];
19->0 [style = bold, label=""];
3->19 [style = dashed, label="0"];
7->14 [style = bold, label=""];
6->12 [style = dashed, label="0"];
18->20 [style = bold, label=""];
15->17 [style = bold, label=""];
6->10 [style = solid, label="s1"];
17->18 [style = solid, label="c1"];
1->17 [style = dashed, label="0"];
13->12 [style = bold, label=""];
20->16 [style = bold, label=""];
5->6 [style = bold, label=""];
0->4 [style = bold, label=""];
11->8 [style = solid, label="c2"];
8->9 [style = bold, label=""];
2->18 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
2->11 [style = dashed, label="0"];
10->2 [style = bold, label=""];
6->7 [style = bold, label=""];
14->3 [style = solid, label="c1"];
1->10 [style = bold, label=""];
2->8 [style = solid, label="c2"];
1->2 [style = solid, label="c1"];
2->8 [style = bold, label=""];
10->11 [style = bold, label=""];
18->20 [style = solid, label="c2"];
}
