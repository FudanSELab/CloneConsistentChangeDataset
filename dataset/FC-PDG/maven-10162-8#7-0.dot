digraph {
28 [style = filled, label = "MavenProject project0 = getProjectWithDependencies(pom0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertNotNull(\"No artifacts\",set)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(\"Incorrect version for \" + artifact.getDependencyConflictId(),artifact.getVersion().equals(\"1.0\"))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNotNull(\"No artifacts\",set)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertTrue(\"Set size should be 4, is \" + set.size(),set.size() == 4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertNotNull(set,\"No artifacts\")@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "File pom0 = new File(localRepo,\"p0/pom.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Artifact artifact = (Artifact)iter.next()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Iterator iter = set.iterator()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(\"No Artifacts\",set.size() > 0)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testDependencyManagement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MavenProject project1 = getProjectWithDependencies(pom1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(\"No Artifacts\",set.size() > 0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "File pom1 = new File(pom0Basedir,\"p1/pom.xml\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "System.out.println(\"Artifact: \" + artifact.getDependencyConflictId() + \" \" + artifact.getVersion() + \" Optional=\" + (artifact.isOptional()? \"true\": \"false\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(artifact.getVersion().equals(\"1.0\"),\"Incorrect version for \" + artifact.getDependencyConflictId())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "iter.hasNext()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testDependencyManagement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Artifact artifact = (Artifact)aSet@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(set.size() == 3,\"Set size should be 3, is \" + set.size())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertFalse(artifact.getArtifactId().equals(\"t07-d\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(\"Set size should be 3, is \" + set.size(),set.size() == 3)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "File localRepo = getLocalRepositoryPath()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFalse(\"\",artifact.getArtifactId().equals(\"t07-d\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertTrue(set.size() > 0,\"No Artifacts\")@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "File pom0Basedir = pom0.getParentFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testDependencyManagement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Set set = project1.getArtifacts()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->28 [style = bold, label=""];
4->3 [style = bold, label=""];
0->16 [style = bold, label=""];
27->5 [style = dotted, label="true"];
29->5 [style = bold, label=""];
7->25 [style = solid, label="set"];
7->17 [style = bold, label=""];
21->0 [style = bold, label=""];
25->22 [style = bold, label=""];
14->25 [style = dashed, label="0"];
7->14 [style = solid, label="set"];
0->2 [style = bold, label=""];
11->12 [style = solid, label="pom1"];
30->26 [style = bold, label=""];
10->1 [style = solid, label="pom0Basedir"];
10->11 [style = solid, label="pom0Basedir"];
7->17 [style = solid, label="set"];
5->15 [style = bold, label=""];
11->12 [style = bold, label=""];
20->3 [style = bold, label=""];
15->19 [style = dashed, label="0"];
9->10 [style = bold, label=""];
28->12 [style = bold, label=""];
27->15 [style = dotted, label="true"];
8->21 [style = dashed, label="0"];
12->1 [style = bold, label=""];
13->23 [style = dashed, label="0"];
1->13 [style = bold, label=""];
22->30 [style = bold, label=""];
6->22 [style = dashed, label="0"];
1->23 [style = bold, label=""];
19->0 [style = bold, label=""];
6->18 [style = dashed, label="0"];
7->14 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
5->19 [style = bold, label=""];
26->27 [style = bold, label=""];
12->13 [style = solid, label="project1"];
27->29 [style = dotted, label="true"];
13->7 [style = bold, label=""];
2->16 [style = dashed, label="0"];
15->0 [style = bold, label=""];
6->8 [style = bold, label=""];
16->5 [style = bold, label=""];
12->23 [style = solid, label="project1"];
14->17 [style = dashed, label="0"];
7->25 [style = bold, label=""];
23->7 [style = bold, label=""];
9->28 [style = solid, label="pom0"];
18->21 [style = bold, label=""];
27->29 [style = bold, label=""];
15->27 [style = bold, label=""];
24->3 [style = bold, label=""];
14->6 [style = bold, label=""];
17->18 [style = bold, label=""];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
3->9 [style = solid, label="localRepo"];
}
