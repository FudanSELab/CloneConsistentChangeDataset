digraph {
20 [style = filled, label = "currentStateOutput.setCurrentState(db,p,newMasterInstance,\"MASTER\")@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "pipeline.handle(event)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "p2pMessageEnabled@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),cache)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "instanceStateMap.put(slaveInstance,\"MASTER\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "pipeline.handle(event)@@@93@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "pipeline.handle(event)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "cache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@40@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MessageSelectionStageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "currentStateOutput.setPendingRelayMessage(db,p,masterInstance,relayMessage)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "Pipeline pipeline = createPipeline()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getToState(),MasterSlaveSMD.States.OFFLINE.name())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "preSetup()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "setClusterConfig(clusterConfig)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "CurrentStateOutput currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@62c96f,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "Assert.assertEquals(message.getTgtName(),masterInstance)@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getRelayMessages().entrySet().size(),1)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "event.addAttribute(AttributeName.INTERMEDIATE_STATE.name(),bestPossibleStateOutput)@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,masterInstance,toSlaveMessage)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "Boolean p2pMessageEnabled@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ClusterDataCache cache = new ClusterDataCache()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "pipeline.handle(event)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "String slaveInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.SLAVE.name())@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "Assert.assertEquals(message.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Message toSlaveMessage = messages.get(0)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "bestPossibleStateOutput.setState(db,p,instanceStateMap)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@88@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "testP2PMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "pipeline.addStage(new IntermediateStateCalcStage())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "ClusterConfig clusterConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),newMasterInstance)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "pipeline = new Pipeline(\"test\")@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "BestPossibleStateOutput bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertTrue(message.getRelayMessages().entrySet().isEmpty())@@@43@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "pipeline = createPipeline()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Message message = messages.get(0)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "pipeline.handle(event)@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "pipeline.addStage(new MessageSelectionStage())@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "Assert.assertEquals(toOfflineMessage.getTgtName(),masterInstance)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "toSlaveMessage = messages.get(0)@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"SLAVE\")@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "Message toOfflineMessage = messages.get(0)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ClusterDataCache cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "Assert.assertEquals(messages.size(),0)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "instanceStateMap.put(newMasterInstance,\"SLAVE\")@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(message.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "currentStateOutput.setPendingMessage(db,p,newMasterInstance,relayMessage)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "messages = messageOutput.getMessages(db,p)@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "event.addAttribute(AttributeName.BEST_POSSIBLE_STATE.name(),bestPossibleStateOutput)@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "pipeline.handle(event)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "pipeline.addStage(new MessageThrottleStage())@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getTgtName(),masterInstance)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "Assert.assertEquals(message.getRelayMessages().entrySet().size(),1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
125 [style = filled, label = "Message relayMessage = message.getRelayMessage(newMasterInstance)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
88 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "Assert.assertEquals(toSlaveMessage.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@112@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Map<String,String> instanceStateMap = bestPossibleStateOutput.getInstanceStateMap(db,p)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "currentStateOutput.setCurrentState(db,p,slaveInstance,\"SLAVE\")@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "pipeline.addStage(new MessageGenerationPhase())@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "testAvoidDuplicatedMessageWithP2PEnabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "currentStateOutput.setCurrentState(db,p,masterInstance,\"OFFLINE\")@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "pipeline.handle(event)@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
79->66 [style = bold, label=""];
55->47 [style = bold, label=""];
89->22 [style = solid, label="currentStateOutput"];
6->43 [style = solid, label="newMasterInstance"];
115->125 [style = dotted, label="true"];
100->87 [style = bold, label=""];
14->11 [style = solid, label="cache"];
76->61 [style = bold, label=""];
17->45 [style = bold, label=""];
15->125 [style = dashed, label="0"];
56->12 [style = bold, label=""];
33->91 [style = bold, label=""];
45->76 [style = bold, label=""];
79->72 [style = solid, label="clusterConfig"];
27->61 [style = solid, label="p"];
70->51 [style = bold, label=""];
102->33 [style = solid, label="masterInstance"];
18->53 [style = solid, label="bestPossibleStateOutput"];
84->93 [style = bold, label=""];
122->15 [style = bold, label=""];
79->73 [style = solid, label="clusterConfig"];
6->75 [style = solid, label="newMasterInstance"];
115->45 [style = bold, label=""];
107->55 [style = bold, label=""];
27->33 [style = solid, label="p"];
27->20 [style = solid, label="p"];
27->86 [style = solid, label="p"];
40->109 [style = bold, label=""];
53->36 [style = bold, label=""];
4->59 [style = bold, label=""];
99->86 [style = bold, label=""];
23->115 [style = bold, label=""];
9->56 [style = bold, label=""];
59->46 [style = solid, label="currentStateOutput"];
22->0 [style = bold, label=""];
38->101 [style = bold, label=""];
27->96 [style = solid, label="p"];
27->7 [style = solid, label="p"];
87->24 [style = solid, label="currentStateOutput"];
36->2 [style = bold, label=""];
4->46 [style = solid, label="masterInstance"];
123->112 [style = bold, label=""];
21->1 [style = bold, label=""];
51->39 [style = bold, label=""];
98->83 [style = bold, label=""];
93->64 [style = bold, label=""];
105->89 [style = bold, label=""];
66->73 [style = bold, label=""];
19->69 [style = bold, label=""];
27->43 [style = solid, label="p"];
115->15 [style = dotted, label="true"];
85->82 [style = bold, label=""];
2->4 [style = solid, label="p"];
40->87 [style = solid, label="bestPossibleStateOutput"];
27->52 [style = solid, label="p"];
114->113 [style = dotted, label="true"];
56->27 [style = dashed, label="0"];
96->23 [style = bold, label=""];
113->121 [style = solid, label="clusterConfig"];
11->95 [style = bold, label=""];
57->105 [style = bold, label=""];
102->61 [style = solid, label="masterInstance"];
49->7 [style = solid, label="slaveInstance"];
119->72 [style = bold, label=""];
27->31 [style = solid, label="p"];
47->6 [style = bold, label=""];
15->75 [style = solid, label="relayMessage"];
80->70 [style = bold, label=""];
88->90 [style = bold, label=""];
26->17 [style = bold, label=""];
120->115 [style = solid, label="p2pMessageEnabled"];
121->119 [style = solid, label="resourceMap"];
0->78 [style = bold, label=""];
2->106 [style = solid, label="p"];
121->119 [style = bold, label=""];
72->14 [style = bold, label=""];
74->63 [style = bold, label=""];
39->81 [style = bold, label=""];
68->92 [style = bold, label=""];
82->48 [style = bold, label=""];
94->96 [style = bold, label=""];
83->68 [style = bold, label=""];
102->65 [style = solid, label="masterInstance"];
49->62 [style = bold, label=""];
40->68 [style = solid, label="bestPossibleStateOutput"];
2->4 [style = bold, label=""];
55->23 [style = dashed, label="0"];
40->25 [style = solid, label="bestPossibleStateOutput"];
35->80 [style = bold, label=""];
5->57 [style = bold, label=""];
7->24 [style = bold, label=""];
14->77 [style = bold, label=""];
15->124 [style = bold, label=""];
54->100 [style = bold, label=""];
125->116 [style = bold, label=""];
1->16 [style = bold, label=""];
6->97 [style = solid, label="newMasterInstance"];
10->65 [style = bold, label=""];
102->64 [style = solid, label="masterInstance"];
94->109 [style = dashed, label="0"];
43->22 [style = bold, label=""];
23->10 [style = bold, label=""];
13->5 [style = bold, label=""];
40->94 [style = bold, label=""];
62->28 [style = bold, label=""];
9->111 [style = bold, label=""];
15->3 [style = solid, label="relayMessage"];
4->59 [style = solid, label="masterInstance"];
20->7 [style = bold, label=""];
90->79 [style = bold, label=""];
109->96 [style = bold, label=""];
124->37 [style = bold, label=""];
91->13 [style = bold, label=""];
115->123 [style = dotted, label="true"];
59->91 [style = solid, label="currentStateOutput"];
59->46 [style = bold, label=""];
69->74 [style = bold, label=""];
112->125 [style = solid, label="newMasterInstance"];
12->106 [style = bold, label=""];
87->20 [style = bold, label=""];
42->75 [style = bold, label=""];
3->37 [style = bold, label=""];
67->40 [style = bold, label=""];
30->108 [style = bold, label=""];
64->19 [style = bold, label=""];
92->34 [style = bold, label=""];
101->42 [style = bold, label=""];
10->61 [style = solid, label="toSlaveMessage"];
102->76 [style = solid, label="masterInstance"];
44->29 [style = bold, label=""];
2->112 [style = solid, label="p"];
27->6 [style = solid, label="p"];
65->94 [style = dashed, label="0"];
106->67 [style = bold, label=""];
37->97 [style = bold, label=""];
78->52 [style = bold, label=""];
115->123 [style = bold, label=""];
89->31 [style = bold, label=""];
6->28 [style = solid, label="newMasterInstance"];
15->3 [style = bold, label=""];
102->31 [style = solid, label="masterInstance"];
6->15 [style = bold, label=""];
24->41 [style = bold, label=""];
16->50 [style = bold, label=""];
103->99 [style = bold, label=""];
27->74 [style = solid, label="p"];
27->54 [style = solid, label="p"];
89->71 [style = solid, label="currentStateOutput"];
52->84 [style = bold, label=""];
60->18 [style = bold, label=""];
89->63 [style = solid, label="currentStateOutput"];
10->40 [style = dashed, label="0"];
115->116 [style = dotted, label="true"];
115->45 [style = dotted, label="false"];
72->118 [style = bold, label=""];
95->60 [style = bold, label=""];
73->72 [style = bold, label=""];
62->83 [style = solid, label="instanceStateMap"];
31->43 [style = bold, label=""];
115->124 [style = dotted, label="true"];
77->11 [style = bold, label=""];
27->101 [style = solid, label="p"];
71->8 [style = bold, label=""];
48->30 [style = bold, label=""];
112->15 [style = solid, label="newMasterInstance"];
34->21 [style = bold, label=""];
102->74 [style = solid, label="masterInstance"];
104->9 [style = bold, label=""];
27->83 [style = solid, label="p"];
53->36 [style = solid, label="currentStateOutput"];
81->54 [style = bold, label=""];
112->125 [style = bold, label=""];
29->58 [style = bold, label=""];
118->117 [style = bold, label=""];
6->20 [style = solid, label="newMasterInstance"];
63->49 [style = bold, label=""];
72->60 [style = solid, label="resourceMap"];
15->43 [style = solid, label="relayMessage"];
25->32 [style = bold, label=""];
28->98 [style = bold, label=""];
6->48 [style = solid, label="newMasterInstance"];
18->53 [style = bold, label=""];
15->33 [style = solid, label="relayMessage"];
49->98 [style = solid, label="slaveInstance"];
6->15 [style = solid, label="newMasterInstance"];
110->90 [style = bold, label=""];
114->120 [style = dotted, label="true"];
27->102 [style = bold, label=""];
117->95 [style = bold, label=""];
72->95 [style = solid, label="resourceMap"];
125->116 [style = solid, label="relayMessage"];
27->75 [style = solid, label="p"];
102->26 [style = solid, label="masterInstance"];
65->107 [style = bold, label=""];
111->12 [style = bold, label=""];
121->72 [style = solid, label="resourceMap"];
4->94 [style = solid, label="masterInstance"];
115->122 [style = dotted, label="true"];
27->49 [style = solid, label="p"];
40->89 [style = solid, label="bestPossibleStateOutput"];
86->85 [style = bold, label=""];
50->38 [style = bold, label=""];
102->9 [style = solid, label="masterInstance"];
27->57 [style = solid, label="p"];
27->76 [style = solid, label="p"];
46->27 [style = bold, label=""];
4->124 [style = solid, label="masterInstance"];
27->102 [style = solid, label="p"];
75->71 [style = bold, label=""];
114->121 [style = bold, label=""];
102->104 [style = bold, label=""];
102->104 [style = solid, label="masterInstance"];
40->8 [style = solid, label="bestPossibleStateOutput"];
58->103 [style = bold, label=""];
115->112 [style = dotted, label="true"];
107->96 [style = dashed, label="0"];
115->37 [style = dotted, label="true"];
115->97 [style = dotted, label="true"];
41->44 [style = bold, label=""];
8->25 [style = bold, label=""];
97->26 [style = bold, label=""];
61->33 [style = bold, label=""];
27->62 [style = solid, label="p"];
116->122 [style = bold, label=""];
4->59 [style = solid, label="bestPossibleStateOutput"];
}
