digraph {
38 [style = filled, label = "stringStream(a.defaultFormData()).map(null).forEach(null)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@28@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cpb.prependTo(REST_converters,a.converters())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cpb.set(RESTOP_httpMethod,v.substring(0,i).trim())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cpb.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "cpb.set(RESTOP_httpMethod,v)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "RestPost a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "cpb.set(REST_serializers,merge(ConverterUtils.toType(cpb.peek(REST_serializers),),a.serializers()))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "cpb.prependTo(RESTOP_matchers,a.matchers())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "cpb.set(REST_encoders,merge(ConverterUtils.toType(cpb.peek(REST_encoders),),a.encoders()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i == -1@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "AnnotationInfo<RestPost> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_httpMethod,\"post\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "cpb.appendToIfNotEmpty(REST_defaultRequestHeaders,contentType(string(a.defaultContentType())))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "cpb.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "VarResolverSession vr@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "cpb.set(REST_serializers,merge(ConverterUtils.toType(cpb.peek(REST_serializers),),a.serializers()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cpb.setIfNotEmpty(REST_maxInput,string(a.maxInput()))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "v != null@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cpb.prependTo(REST_guards,reverse(a.guards()))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "stringStream(a.path()).forEach(null)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "cpb.set(REST_parsers,merge(ConverterUtils.toType(cpb.peek(REST_parsers),),a.parsers()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "RestOp a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_path,a.value())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "cpb.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cpb.setIf(a.contextClass() != ,RESTOP_contextClass,a.contextClass())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "cpb.setIfNotEmpty(REST_consumes,stringList(a.consumes()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_debug,string(a.debug()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stringStream(a.defaultFormData()).map(null).forEach(null)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int i = v.indexOf(' ')@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "cpb.prependTo(RESTOP_path,v.substring(i).trim())@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "cpb.setIfNotEmpty(RESTOP_clientVersion,a.clientVersion())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "cpb.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "VarResolverSession vr@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ContextPropertiesBuilder cpb@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2->20 [style = dotted, label="true"];
6->17 [style = bold, label=""];
5->29 [style = bold, label=""];
30->22 [style = bold, label=""];
35->16 [style = bold, label=""];
16->18 [style = bold, label=""];
41->27 [style = bold, label=""];
47->42 [style = bold, label=""];
7->12 [style = bold, label=""];
42->45 [style = bold, label=""];
15->25 [style = bold, label=""];
8->19 [style = bold, label=""];
25->41 [style = bold, label=""];
12->8 [style = dotted, label="true"];
9->4 [style = bold, label=""];
29->31 [style = bold, label=""];
7->12 [style = solid, label="v"];
45->32 [style = bold, label=""];
10->35 [style = bold, label=""];
34->7 [style = bold, label=""];
19->23 [style = dotted, label="true"];
11->32 [style = bold, label=""];
33->10 [style = bold, label=""];
3->15 [style = bold, label=""];
13->30 [style = bold, label=""];
47->44 [style = dotted, label="true"];
40->38 [style = bold, label=""];
18->38 [style = dashed, label="0"];
36->37 [style = dotted, label="true"];
14->33 [style = bold, label=""];
19->4 [style = dotted, label="false"];
38->6 [style = bold, label=""];
24->42 [style = dashed, label="0"];
47->43 [style = dotted, label="true"];
28->0 [style = bold, label=""];
25->27 [style = bold, label=""];
35->40 [style = bold, label=""];
17->28 [style = bold, label=""];
27->34 [style = bold, label=""];
36->24 [style = bold, label=""];
36->39 [style = dotted, label="true"];
19->9 [style = bold, label=""];
18->6 [style = bold, label=""];
12->19 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
24->11 [style = bold, label=""];
12->8 [style = bold, label=""];
19->23 [style = bold, label=""];
47->46 [style = dotted, label="true"];
8->19 [style = solid, label="i"];
21->7 [style = bold, label=""];
2->26 [style = dotted, label="true"];
19->9 [style = dotted, label="false"];
2->24 [style = bold, label=""];
31->3 [style = bold, label=""];
32->13 [style = bold, label=""];
22->14 [style = bold, label=""];
7->23 [style = solid, label="v"];
16->40 [style = dashed, label="0"];
34->21 [style = bold, label=""];
36->26 [style = dotted, label="true"];
0->5 [style = bold, label=""];
26->46 [style = dashed, label="0"];
}
