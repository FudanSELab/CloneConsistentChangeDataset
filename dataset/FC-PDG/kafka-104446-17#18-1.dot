digraph {
28 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener(OptionalInt.of(localId))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "context.becomeLeader()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int localId = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "context.pollUntilResponse()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "context.pollUntilResponse()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "context.client.register(secondListener)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(OptionalInt.empty(),secondListener.currentClaimedEpoch())@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(10L,context.log.endOffset().offset)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int epoch = 7@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,500))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(OptionalLong.of(8L),secondListener.lastCommitOffset())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "context.deliverRequest(context.voteRequest(epoch + 1,otherNodeId,epoch,9L))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "context.time.sleep(context.electionTimeoutMs() * 2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "context.assertVotedCandidate(candidateEpoch,localId)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RaftClientTestContext context = new RaftClientTestContext.Builder(localId,voters).appendToLog(2,Arrays.asList(\"a\",\"b\",\"c\")).appendToLog(4,Arrays.asList(\"d\",\"e\",\"f\")).appendToLog(4,Arrays.asList(\"g\",\"h\",\"i\")).withUnknownLeader(epoch - 1).build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testHandleCommitCallbackFiresInCandidateState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RaftClientTestContext.MockListener secondListener = new RaftClientTestContext.MockListener()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "context.pollUntil(null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "context.client.poll()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "context.assertSentFetchPartitionResponse(Errors.NONE,epoch,OptionalInt.of(localId))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testHandleCommitCallbackFiresInVotedState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "int otherNodeId = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "context.deliverRequest(context.voteRequest(candidateEpoch,otherNodeId,epoch,10L))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "context.client.poll()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "context.client.poll()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int candidateEpoch = epoch + 2@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "context.assertUnknownLeader(epoch + 1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "context.pollUntil(null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "context.deliverRequest(context.fetchRequest(epoch,otherNodeId,10L,epoch,0))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(OptionalLong.of(10L),context.client.highWatermark())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "context.pollUntilResponse()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36->28 [style = solid, label="candidateEpoch"];
34->29 [style = bold, label=""];
18->3 [style = bold, label=""];
16->29 [style = solid, label="epoch"];
12->7 [style = solid, label="candidateEpoch"];
7->11 [style = bold, label=""];
30->1 [style = bold, label=""];
6->34 [style = bold, label=""];
3->1 [style = bold, label=""];
27->12 [style = bold, label=""];
36->30 [style = solid, label="candidateEpoch"];
11->14 [style = bold, label=""];
15->21 [style = bold, label=""];
16->2 [style = solid, label="epoch"];
21->7 [style = solid, label="otherNodeId"];
10->19 [style = bold, label=""];
16->36 [style = solid, label="epoch"];
15->9 [style = solid, label="localId"];
1->20 [style = solid, label="secondListener"];
0->32 [style = dashed, label="0"];
23->15 [style = bold, label=""];
1->20 [style = bold, label=""];
14->17 [style = bold, label=""];
8->6 [style = bold, label=""];
3->22 [style = dashed, label="0"];
21->0 [style = solid, label="otherNodeId"];
15->25 [style = solid, label="localId"];
12->10 [style = solid, label="candidateEpoch"];
9->8 [style = bold, label=""];
36->33 [style = bold, label=""];
2->4 [style = bold, label=""];
31->15 [style = bold, label=""];
16->10 [style = solid, label="epoch"];
16->12 [style = solid, label="epoch"];
16->26 [style = solid, label="epoch"];
28->14 [style = bold, label=""];
19->0 [style = bold, label=""];
24->30 [style = bold, label=""];
6->2 [style = bold, label=""];
21->10 [style = solid, label="otherNodeId"];
29->27 [style = bold, label=""];
26->0 [style = bold, label=""];
3->36 [style = bold, label=""];
12->10 [style = bold, label=""];
18->22 [style = bold, label=""];
10->26 [style = dashed, label="0"];
7->28 [style = bold, label=""];
5->12 [style = bold, label=""];
7->28 [style = dashed, label="0"];
12->25 [style = bold, label=""];
33->24 [style = bold, label=""];
25->26 [style = bold, label=""];
22->1 [style = solid, label="secondListener"];
12->0 [style = solid, label="candidateEpoch"];
21->16 [style = bold, label=""];
3->1 [style = solid, label="secondListener"];
15->22 [style = solid, label="localId"];
21->26 [style = solid, label="otherNodeId"];
0->18 [style = bold, label=""];
15->28 [style = solid, label="localId"];
21->29 [style = solid, label="otherNodeId"];
16->32 [style = solid, label="epoch"];
21->9 [style = solid, label="otherNodeId"];
13->15 [style = bold, label=""];
22->1 [style = bold, label=""];
0->32 [style = bold, label=""];
20->7 [style = bold, label=""];
4->29 [style = dashed, label="0"];
32->3 [style = bold, label=""];
4->5 [style = bold, label=""];
15->30 [style = solid, label="localId"];
16->9 [style = bold, label=""];
21->2 [style = solid, label="otherNodeId"];
16->25 [style = solid, label="epoch"];
17->35 [style = bold, label=""];
}
