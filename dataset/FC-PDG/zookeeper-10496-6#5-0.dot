digraph {
2 [style = filled, label = "assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromPropertyValueOrFileName(\"PEM\",\"prod.key\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromFilename(\"mykey.p12\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromPropertyValueOrFileName(\"JKS\",\"prod.key\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromPropertyValueOrFileName(\"\",\"prod.jks\"))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.jks\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.pem\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromFilename(\"mykey.pem\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testFromPropertyValueOrFileName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.p12\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromPropertyValueOrFileName(\"PKCS12\",\"prod.key\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(KeyStoreFileType.BCFKS,KeyStoreFileType.fromPropertyValueOrFileName(\"BCFKS\",\"prod.key\"))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testFromFilename['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testFromPropertyValueOrFileName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromFilename(\"mykey.jks\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->13 [style = dashed, label="0"];
10->12 [style = bold, label=""];
12->11 [style = bold, label=""];
9->13 [style = bold, label=""];
1->3 [style = bold, label=""];
5->3 [style = bold, label=""];
2->7 [style = dashed, label="0"];
13->7 [style = bold, label=""];
0->4 [style = bold, label=""];
7->8 [style = bold, label=""];
1->8 [style = dashed, label="0"];
6->4 [style = bold, label=""];
3->10 [style = dashed, label="0"];
2->1 [style = bold, label=""];
8->10 [style = bold, label=""];
4->2 [style = bold, label=""];
1->5 [style = bold, label=""];
}
