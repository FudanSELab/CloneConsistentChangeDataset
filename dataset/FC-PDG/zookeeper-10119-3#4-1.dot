digraph {
3 [style = filled, label = "setupProcessors(0,0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Request req1 = createWriteRequest(1L,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "Request req2 = createWriteRequest(1L,2)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_local_write_committed_time_ms\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Map<String,Object> values = MetricsUtils.currentServerMetrics()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),0l,1000l)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testLocalWriteCommittedTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0l,1000l)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "Request req2 = createWriteRequest(1l,2)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "checkTimeMetric((long)values.get(\"max_local_write_committed_time_ms\"),0L,1000L)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testWriteCommitProcTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "checkTimeMetric((long)values.get(\"max_write_commitproc_time_ms\"),1000L,2000L)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_local_write_committed_time_ms\"))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "commitWithWait(req2)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "commitWithWait(req1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Thread.sleep(1000)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(2L,values.get(\"cnt_write_commitproc_time_ms\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "processRequestWithWait(req1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(1L,values.get(\"cnt_local_write_committed_time_ms\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "processRequestWithWait(req2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Request req1 = createWriteRequest(1l,2)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(2L,values.get(\"cnt_local_write_committed_time_ms\"))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "values = MetricsUtils.currentServerMetrics()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(1L,values.get(\"cnt_write_commitproc_time_ms\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testLocalWriteCommittedTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->9 [style = bold, label=""];
18->3 [style = bold, label=""];
7->1 [style = bold, label=""];
0->26 [style = bold, label=""];
17->7 [style = solid, label="req1"];
13->20 [style = dashed, label="0"];
26->25 [style = bold, label=""];
0->2 [style = bold, label=""];
19->12 [style = solid, label="req2"];
5->24 [style = dashed, label="0"];
3->11 [style = bold, label=""];
4->21 [style = bold, label=""];
11->7 [style = solid, label="req1"];
10->3 [style = bold, label=""];
9->22 [style = dashed, label="0"];
8->6 [style = bold, label=""];
23->3 [style = bold, label=""];
1->0 [style = bold, label=""];
25->14 [style = bold, label=""];
11->17 [style = dashed, label="0"];
13->25 [style = dashed, label="0"];
0->15 [style = bold, label=""];
19->8 [style = bold, label=""];
19->8 [style = solid, label="req2"];
14->8 [style = solid, label="req2"];
2->13 [style = bold, label=""];
2->15 [style = dashed, label="0"];
17->7 [style = bold, label=""];
5->16 [style = dashed, label="0"];
14->12 [style = solid, label="req2"];
17->1 [style = solid, label="req1"];
12->4 [style = bold, label=""];
9->21 [style = dashed, label="0"];
15->20 [style = bold, label=""];
9->5 [style = bold, label=""];
21->16 [style = bold, label=""];
3->17 [style = bold, label=""];
14->19 [style = dashed, label="0"];
14->8 [style = bold, label=""];
11->1 [style = solid, label="req1"];
22->24 [style = bold, label=""];
2->26 [style = dashed, label="0"];
20->19 [style = bold, label=""];
13->14 [style = bold, label=""];
4->22 [style = bold, label=""];
11->7 [style = bold, label=""];
6->12 [style = bold, label=""];
}
