digraph {
13 [style = filled, label = "selector = Expressions.call(BuiltinMethod.IDENTITY_SELECTOR.method)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "collations.size() == 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Expression selector@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "JavaRules.BRIDGE_METHODS@@@32@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltinMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "generateCollationKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "arg0 = Types.castIfNecessary(,arg0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final int index = fieldCollation.getFieldIndex()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@32@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "JavaRules.BRIDGE_METHODS@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "return Pair.of(selector,Expressions.new_(,Collections.emptyList(),memberDeclarations))@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "memberDeclarations.add(JavaRules.EnumUtil.overridingMethodDecl(BuiltinMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "RelCollation collation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "return Expressions.new_(,Collections.emptyList(),memberDeclarations)@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "memberDeclarations.add(JavaRules.EnumUtil.overridingMethodDecl(BuiltinMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltinMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "generateCollationKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "generateComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltinMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
8->30 [style = bold, label=""];
7->32 [style = bold, label=""];
53->46 [style = dotted, label="true"];
49->43 [style = solid, label="mod"];
27->38 [style = dashed, label="0"];
39->22 [style = dotted, label="true"];
14->19 [style = dotted, label="true"];
11->14 [style = bold, label=""];
26->10 [style = bold, label=""];
39->9 [style = bold, label=""];
14->26 [style = dotted, label="true"];
5->8 [style = solid, label="index"];
29->0 [style = bold, label=""];
22->34 [style = solid, label="parameterO1"];
53->47 [style = bold, label=""];
39->6 [style = bold, label=""];
14->22 [style = dotted, label="true"];
15->27 [style = solid, label="selector"];
57->24 [style = solid, label="parameterC"];
5->25 [style = dashed, label="0"];
8->23 [style = solid, label="arg1"];
25->29 [style = bold, label=""];
53->54 [style = bold, label=""];
25->0 [style = solid, label="index"];
29->55 [style = solid, label="arg1"];
56->47 [style = bold, label=""];
15->38 [style = solid, label="selector"];
33->11 [style = bold, label=""];
12->2 [style = bold, label=""];
3->5 [style = bold, label=""];
46->21 [style = bold, label=""];
29->11 [style = solid, label="parameterV0"];
21->56 [style = bold, label=""];
22->26 [style = solid, label="parameterO1"];
1->21 [style = bold, label=""];
2->15 [style = bold, label=""];
45->48 [style = solid, label="javaRowClass"];
42->24 [style = solid, label="descending"];
14->9 [style = bold, label=""];
16->38 [style = dotted, label="true"];
9->10 [style = solid, label="parameterO0"];
0->55 [style = dotted, label="true"];
32->3 [style = bold, label=""];
36->6 [style = solid, label="selector"];
25->29 [style = solid, label="index"];
4->16 [style = bold, label=""];
0->7 [style = dotted, label="true"];
2->26 [style = solid, label="parameter"];
6->47 [style = dashed, label="0"];
39->35 [style = dotted, label="true"];
13->25 [style = bold, label=""];
15->38 [style = bold, label=""];
19->34 [style = bold, label=""];
39->9 [style = dotted, label="true"];
5->24 [style = solid, label="index"];
45->52 [style = solid, label="javaRowClass"];
52->23 [style = solid, label="parameterV0"];
2->15 [style = solid, label="parameter"];
2->22 [style = solid, label="parameter"];
42->8 [style = solid, label="descending"];
23->47 [style = solid, label="memberDeclarations"];
28->42 [style = dashed, label="0"];
2->0 [style = solid, label="parameter"];
55->24 [style = solid, label="arg1"];
7->55 [style = bold, label=""];
32->3 [style = solid, label="mod"];
0->7 [style = bold, label=""];
9->26 [style = solid, label="parameterO0"];
36->25 [style = bold, label=""];
18->4 [style = bold, label=""];
58->51 [style = bold, label=""];
1->24 [style = dashed, label="0"];
19->26 [style = bold, label=""];
0->11 [style = solid, label="parameterV1"];
52->48 [style = bold, label=""];
54->21 [style = solid, label="parameterO0"];
30->23 [style = dotted, label="true"];
41->7 [style = solid, label="arg0"];
2->34 [style = solid, label="parameter"];
40->56 [style = solid, label="parameterO1"];
18->17 [style = dotted, label="true"];
34->35 [style = bold, label=""];
24->8 [style = bold, label=""];
45->52 [style = bold, label=""];
10->35 [style = dashed, label="0"];
14->6 [style = bold, label=""];
39->34 [style = dotted, label="true"];
0->8 [style = solid, label="parameterV1"];
9->22 [style = bold, label=""];
54->40 [style = bold, label=""];
16->36 [style = bold, label=""];
16->13 [style = bold, label=""];
23->20 [style = bold, label=""];
5->1 [style = solid, label="index"];
8->31 [style = bold, label=""];
22->19 [style = bold, label=""];
5->30 [style = solid, label="index"];
45->21 [style = solid, label="javaRowClass"];
25->41 [style = bold, label=""];
13->6 [style = solid, label="selector"];
14->39 [style = dashed, label="0"];
7->24 [style = solid, label="arg0"];
24->31 [style = solid, label="arg0"];
11->23 [style = dashed, label="0"];
42->24 [style = bold, label=""];
10->6 [style = bold, label=""];
48->29 [style = solid, label="parameterV1"];
2->9 [style = solid, label="parameter"];
21->5 [style = bold, label=""];
22->10 [style = solid, label="parameterO1"];
50->42 [style = bold, label=""];
51->45 [style = bold, label=""];
30->31 [style = bold, label=""];
2->29 [style = solid, label="parameter"];
53->56 [style = dotted, label="true"];
5->24 [style = bold, label=""];
53->40 [style = dotted, label="true"];
32->49 [style = dashed, label="0"];
29->24 [style = solid, label="parameterV0"];
7->3 [style = solid, label="parameterC"];
16->27 [style = dotted, label="true"];
55->50 [style = bold, label=""];
9->34 [style = solid, label="parameterO0"];
26->34 [style = dashed, label="0"];
2->7 [style = solid, label="parameter"];
7->21 [style = solid, label="parameterC"];
22->35 [style = solid, label="parameterO1"];
28->21 [style = solid, label="descending"];
30->31 [style = dotted, label="true"];
16->15 [style = dotted, label="true"];
31->23 [style = bold, label=""];
16->12 [style = dotted, label="true"];
16->2 [style = dotted, label="true"];
13->36 [style = dashed, label="0"];
48->57 [style = bold, label=""];
35->6 [style = bold, label=""];
11->6 [style = solid, label="memberDeclarations"];
39->19 [style = dotted, label="true"];
7->1 [style = solid, label="parameterC"];
41->29 [style = bold, label=""];
21->33 [style = bold, label=""];
31->1 [style = solid, label="arg0"];
20->28 [style = bold, label=""];
38->36 [style = bold, label=""];
52->41 [style = solid, label="parameterV0"];
28->1 [style = bold, label=""];
9->35 [style = solid, label="parameterO0"];
49->43 [style = bold, label=""];
57->8 [style = solid, label="parameterC"];
14->10 [style = dotted, label="true"];
37->4 [style = bold, label=""];
25->41 [style = solid, label="index"];
40->46 [style = bold, label=""];
37->17 [style = dotted, label="true"];
58->44 [style = dotted, label="true"];
54->56 [style = solid, label="parameterO0"];
20->50 [style = dashed, label="0"];
25->24 [style = solid, label="index"];
48->23 [style = solid, label="parameterV1"];
11->39 [style = bold, label=""];
57->49 [style = bold, label=""];
23->53 [style = bold, label=""];
53->21 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
57->43 [style = solid, label="parameterC"];
53->54 [style = dotted, label="true"];
43->25 [style = bold, label=""];
15->27 [style = bold, label=""];
16->12 [style = bold, label=""];
8->25 [style = bold, label=""];
40->21 [style = solid, label="parameterO1"];
23->1 [style = solid, label="arg1"];
}
