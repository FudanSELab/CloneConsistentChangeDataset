digraph {
20 [style = filled, label = "ExecutorService t2 = Executors.newSingleThreadExecutor()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "client.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client,\"/lock\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final CountDownLatch releaseLatch = new CountDownLatch(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "f2.get()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testThatDowngradingRespectsThreads['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ExecutorService t1 = Executors.newSingleThreadExecutor()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "f1.get()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testThatUpgradingIsDisallowed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Future<Object> f1 = t1.submit(new Callable<Object>(){@Override public Object call(){lock.writeLock().acquire()latch.countDown()try {releaseLatch.await()}{lock.writeLock().release()}return null}})@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "lock.readLock().release()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Future<Object> f2 = t2.submit(new Callable<Object>(){@Override public Object call(){Assert.assertTrue(latch.await(10,TimeUnit.SECONDS))Assert.assertFalse(lock.readLock().acquire(5,TimeUnit.SECONDS))return null}})@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testThatUpgradingIsDisallowed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "releaseLatch.countDown()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "InterProcessReadWriteLock lock = new InterProcessReadWriteLock(client,\"/lock\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "lock.readLock().acquire()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(lock.writeLock().acquire(5,TimeUnit.SECONDS))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertFalse(lock.writeLock().acquire(5,TimeUnit.SECONDS))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
21->10 [style = bold, label=""];
2->19 [style = dashed, label="0"];
9->0 [style = bold, label=""];
4->19 [style = solid, label="client"];
5->9 [style = bold, label=""];
19->12 [style = bold, label=""];
11->14 [style = bold, label=""];
0->6 [style = bold, label=""];
4->6 [style = solid, label="client"];
18->15 [style = bold, label=""];
12->20 [style = bold, label=""];
10->17 [style = bold, label=""];
7->4 [style = bold, label=""];
4->2 [style = solid, label="client"];
3->0 [style = bold, label=""];
20->21 [style = bold, label=""];
4->15 [style = solid, label="client"];
3->9 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
14->13 [style = bold, label=""];
16->4 [style = bold, label=""];
1->19 [style = bold, label=""];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
