digraph {
4 [style = filled, label = "left.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT@@@12@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RelBuilder relBuilder = call.builder().push(druidJoin).project(RexUtil.fixUp(rexBuilder,newProjectExprs,RelOptUtil.getFieldTypeList(druidJoin.getRowType())))@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int i = 0@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final RelNode leftScan = left.getPartialDruidQuery().getScan()@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Iterables.addAll(newProjectExprs,RexUtil.shift(rightProject.getProjects(),newLeft.getRowType().getFieldCount()))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "RelOptRuleCall call@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final Project leftProject = left.getPartialDruidQuery().getSelectProject()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "newRight = right.withPartialQuery(PartialDruidQuery.create(rightScan))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final DruidJoinQueryRel druidJoin = DruidJoinQueryRel.create(join.copy(join.getTraitSet(),conditionAnalysis.getCondition(rexBuilder),newLeft,newRight,join.getJoinType(),join.isSemiJoinDone()),leftFilter,left.getQueryMaker())@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "onMatch['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "newLeft = left.withPartialQuery(PartialDruidQuery.create(leftScan))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "onMatch['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final List<RexNode> newProjectExprs = new ArrayList<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "newProjectExprs.addAll(leftProject.getProjects())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < right.getRowType().getFieldCount()@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final RelNode rightScan = right.getPartialDruidQuery().getScan()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i < left.getRowType().getFieldCount()@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Join join = call.rel(0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "right.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT && right.getPartialDruidQuery().getWhereFilter() == null && !right.getPartialDruidQuery().getSelectProject().isMapping() && conditionAnalysis.onlyUsesMappingsFromRightProject(right.getPartialDruidQuery().getSelectProject())@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "newLeft = left@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i++@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "conditionAnalysis = conditionAnalysis.pushThroughLeftProject(leftProject)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "i++@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ConditionAnalysis conditionAnalysis = analyzeCondition(join.getCondition(),join.getLeft().getRowType()).get()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "matches['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final DruidRel<?> newRight@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "newLeft = left@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "newRight = right@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "newRight = right@@@43@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "left.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT && (isLeftDirectAccessPossible || left.getPartialDruidQuery().getWhereFilter() == null)@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final DruidJoinQueryRel druidJoin = DruidJoinQueryRel.create(join.copy(join.getTraitSet(),conditionAnalysis.getCondition(rexBuilder),newLeft,newRight,join.getJoinType(),join.isSemiJoinDone()),leftFilter,left.getQueryMaker())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "right.getPartialDruidQuery().stage() == PartialDruidQuery.Stage.SELECT_PROJECT && right.getPartialDruidQuery().getWhereFilter() == null && !right.getPartialDruidQuery().getSelectProject().isMapping() && conditionAnalysis.onlyUsesMappingsFromRightProject(right.getPartialDruidQuery().getSelectProject())@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "RelOptRuleCall call@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "return canHandleCondition(join.getCondition(),join.getLeft().getRowType()) && left.getPartialDruidQuery() != null && right.getPartialDruidQuery() != null@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "call.transformTo(relBuilder.build())@@@47@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "leftFilter = null@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "int i = 0@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final DruidRel<?> newLeft@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final DruidRel<?> left = call.rel(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "leftFilter = left.getPartialDruidQuery().getWhereFilter()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final DruidRel<?> right = call.rel(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "conditionAnalysis = conditionAnalysis.pushThroughRightProject(rightProject)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "final RelNode leftScan = left.getPartialDruidQuery().getScan()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "newProjectExprs.add(rexBuilder.makeInputRef(join.getRowType().getFieldList().get(i).getType(),i))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "final Project rightProject = right.getPartialDruidQuery().getSelectProject()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "newProjectExprs.add(rexBuilder.makeInputRef(join.getRowType().getFieldList().get(left.getRowType().getFieldCount() + i).getType(),newLeft.getRowType().getFieldCount() + i))@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "final RexBuilder rexBuilder = join.getCluster().getRexBuilder()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final boolean isLeftDirectAccessPossible = enableLeftScanDirect && (left instanceof DruidQueryRel)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "int i = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Filter leftFilter@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->30 [style = dotted, label="true"];
38->26 [style = bold, label=""];
3->12 [style = dotted, label="true"];
12->33 [style = bold, label=""];
4->6 [style = bold, label=""];
25->15 [style = dotted, label="false"];
8->14 [style = bold, label=""];
32->46 [style = dotted, label="false"];
30->14 [style = solid, label="rightProject"];
42->1 [style = bold, label=""];
29->31 [style = solid, label="rexBuilder"];
9->31 [style = bold, label=""];
3->12 [style = solid, label="i"];
12->26 [style = dotted, label="true"];
40->2 [style = dotted, label="true"];
45->32 [style = bold, label=""];
32->30 [style = dotted, label="true"];
15->22 [style = bold, label=""];
40->3 [style = dotted, label="false"];
13->31 [style = solid, label="newLeft"];
46->1 [style = solid, label="newRight"];
3->13 [style = bold, label=""];
15->37 [style = solid, label="i"];
2->31 [style = solid, label="leftFilter"];
22->15 [style = solid, label="i"];
15->37 [style = dotted, label="true"];
36->50 [style = bold, label=""];
35->45 [style = bold, label=""];
40->24 [style = dotted, label="true"];
18->12 [style = solid, label="i"];
22->37 [style = solid, label="i"];
0->15 [style = bold, label=""];
30->7 [style = bold, label=""];
44->5 [style = bold, label=""];
40->16 [style = bold, label=""];
12->3 [style = solid, label="i"];
40->16 [style = dotted, label="true"];
35->1 [style = solid, label="newLeft"];
25->9 [style = dotted, label="false"];
32->42 [style = dotted, label="true"];
26->38 [style = solid, label="i"];
47->37 [style = bold, label=""];
44->28 [style = dotted, label="true"];
36->46 [style = solid, label="right"];
10->5 [style = bold, label=""];
3->38 [style = solid, label="i"];
24->35 [style = bold, label=""];
3->26 [style = dotted, label="true"];
17->27 [style = bold, label=""];
15->9 [style = bold, label=""];
37->22 [style = solid, label="i"];
32->14 [style = dotted, label="true"];
40->45 [style = dotted, label="true"];
22->47 [style = dotted, label="true"];
25->32 [style = dotted, label="true"];
17->1 [style = solid, label="newProjectExprs"];
32->15 [style = dotted, label="false"];
3->26 [style = solid, label="i"];
14->1 [style = solid, label="newRight"];
16->2 [style = bold, label=""];
20->33 [style = solid, label="left"];
32->7 [style = dotted, label="true"];
25->14 [style = dotted, label="true"];
43->1 [style = solid, label="leftFilter"];
40->43 [style = dotted, label="false"];
6->24 [style = solid, label="leftScan"];
25->0 [style = dotted, label="false"];
35->25 [style = bold, label=""];
26->12 [style = bold, label=""];
46->1 [style = bold, label=""];
20->36 [style = bold, label=""];
28->49 [style = dashed, label="0"];
32->8 [style = dotted, label="true"];
40->23 [style = dotted, label="true"];
24->31 [style = solid, label="newLeft"];
7->8 [style = bold, label=""];
43->32 [style = bold, label=""];
32->8 [style = solid, label="rightScan"];
2->45 [style = solid, label="leftProject"];
40->12 [style = dotted, label="false"];
39->40 [style = solid, label="isLeftDirectAccessPossible"];
4->18 [style = dotted, label="false"];
48->49 [style = dotted, label="true"];
4->24 [style = dotted, label="true"];
17->19 [style = solid, label="newProjectExprs"];
48->5 [style = bold, label=""];
16->35 [style = solid, label="leftScan"];
22->47 [style = bold, label=""];
29->1 [style = solid, label="rexBuilder"];
6->16 [style = bold, label=""];
14->31 [style = bold, label=""];
16->35 [style = solid, label="leftProject"];
7->42 [style = solid, label="rightProject"];
3->12 [style = bold, label=""];
12->3 [style = bold, label=""];
40->33 [style = dotted, label="false"];
12->26 [style = solid, label="i"];
12->38 [style = dotted, label="true"];
25->0 [style = bold, label=""];
37->22 [style = bold, label=""];
15->47 [style = solid, label="i"];
4->23 [style = dotted, label="true"];
15->22 [style = dotted, label="true"];
40->35 [style = dotted, label="true"];
26->12 [style = solid, label="i"];
40->3 [style = bold, label=""];
22->37 [style = dotted, label="true"];
29->19 [style = solid, label="rexBuilder"];
4->33 [style = dotted, label="false"];
33->43 [style = bold, label=""];
4->18 [style = bold, label=""];
4->2 [style = dotted, label="true"];
0->15 [style = solid, label="i"];
18->3 [style = bold, label=""];
17->8 [style = solid, label="newProjectExprs"];
25->32 [style = bold, label=""];
27->39 [style = bold, label=""];
11->21 [style = bold, label=""];
15->22 [style = solid, label="i"];
31->1 [style = bold, label=""];
4->16 [style = dotted, label="true"];
4->3 [style = dotted, label="false"];
15->37 [style = bold, label=""];
36->29 [style = bold, label=""];
3->26 [style = bold, label=""];
23->24 [style = bold, label=""];
14->42 [style = bold, label=""];
27->4 [style = bold, label=""];
36->9 [style = solid, label="right"];
25->8 [style = dotted, label="true"];
33->31 [style = solid, label="leftFilter"];
21->17 [style = bold, label=""];
10->28 [style = dotted, label="true"];
20->13 [style = solid, label="left"];
13->33 [style = bold, label=""];
0->37 [style = solid, label="i"];
22->15 [style = bold, label=""];
22->46 [style = bold, label=""];
37->47 [style = solid, label="i"];
8->31 [style = solid, label="newRight"];
12->38 [style = bold, label=""];
0->22 [style = solid, label="i"];
30->14 [style = solid, label="rightScan"];
18->26 [style = solid, label="i"];
29->34 [style = bold, label=""];
23->1 [style = solid, label="leftFilter"];
17->7 [style = solid, label="newProjectExprs"];
4->13 [style = dotted, label="false"];
4->35 [style = dotted, label="true"];
5->20 [style = bold, label=""];
1->19 [style = bold, label=""];
9->31 [style = solid, label="newRight"];
25->7 [style = dotted, label="true"];
19->41 [style = bold, label=""];
20->39 [style = solid, label="left"];
39->40 [style = bold, label=""];
32->30 [style = bold, label=""];
32->22 [style = dotted, label="false"];
33->1 [style = solid, label="newLeft"];
4->6 [style = dotted, label="true"];
33->25 [style = bold, label=""];
32->15 [style = bold, label=""];
18->3 [style = solid, label="i"];
2->23 [style = bold, label=""];
34->11 [style = bold, label=""];
}
