digraph {
4 [style = filled, label = "txn.newAppend().appendFile(FILE_A).appendFile(FILE_B).commit()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Table should have a snapshot for each operation\",2,readMetadata().snapshots().size())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "validateSnapshot(base.currentSnapshot(),readMetadata().currentSnapshot(),FILE_A,FILE_B)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertEquals(\"Table should have one manifest after commit\",1,readMetadata().currentSnapshot().allManifests().size())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "TableMetadata base = readMetadata()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(\"Table should be on version 0 after append\",0,(int)version())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Table should have one manifest after commit\",1,readMetadata().currentSnapshot().manifests().size())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Transaction txn = table.newTransaction()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "txn.commitTransaction()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Snapshot deleteSnapshot = txn.table().currentSnapshot()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "validateManifestEntries(readMetadata().currentSnapshot().manifests().get(0),ids(deleteSnapshot.snapshotId(),appendSnapshot.snapshotId()),files(FILE_A,FILE_B),statuses(Status.DELETED,Status.EXISTING))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(\"Table should be on version 0 after txn create\",0,(int)version())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "txn.newDelete().deleteFile(FILE_A).commit()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"Table snapshot should be the delete snapshot\",deleteSnapshot,readMetadata().currentSnapshot())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Table should be on version 1 after commit\",1,(int)version())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testSingleOperationTransaction['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testMultipleOperationTransaction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Snapshot appendSnapshot = txn.table().currentSnapshot()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Table should be on version 0 after txn create\",0,(int)version())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when commit is created\",base,readMetadata())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when commit is created\",base,readMetadata())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"Table should be on version 0\",0,(int)version())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testMultipleOperationTransaction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "validateManifestEntries(readMetadata().currentSnapshot().allManifests().get(0),ids(deleteSnapshot.snapshotId(),appendSnapshot.snapshotId()),files(FILE_A,FILE_B),statuses(Status.DELETED,Status.EXISTING))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertSame(\"Base metadata should not change when an append is committed\",base,readMetadata())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "validateManifestEntries(readMetadata().snapshots().get(0).manifests().get(0),ids(appendSnapshot.snapshotId(),appendSnapshot.snapshotId()),files(FILE_A,FILE_B),statuses(Status.ADDED,Status.ADDED))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "validateManifestEntries(readMetadata().snapshots().get(0).allManifests().get(0),ids(appendSnapshot.snapshotId(),appendSnapshot.snapshotId()),files(FILE_A,FILE_B),statuses(Status.ADDED,Status.ADDED))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13->10 [style = bold, label=""];
0->9 [style = bold, label=""];
23->20 [style = bold, label=""];
13->0 [style = solid, label="base"];
16->20 [style = solid, label="deleteSnapshot"];
3->1 [style = bold, label=""];
16->8 [style = bold, label=""];
19->12 [style = bold, label=""];
5->23 [style = bold, label=""];
13->8 [style = solid, label="base"];
2->3 [style = bold, label=""];
9->4 [style = bold, label=""];
18->17 [style = bold, label=""];
8->6 [style = bold, label=""];
1->21 [style = dashed, label="0"];
5->14 [style = bold, label=""];
15->18 [style = bold, label=""];
4->7 [style = bold, label=""];
20->2 [style = bold, label=""];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
26->12 [style = bold, label=""];
14->23 [style = dashed, label="0"];
22->12 [style = bold, label=""];
6->11 [style = bold, label=""];
13->7 [style = solid, label="base"];
10->0 [style = bold, label=""];
7->15 [style = bold, label=""];
3->21 [style = bold, label=""];
4->8 [style = bold, label=""];
25->5 [style = bold, label=""];
2->24 [style = dashed, label="0"];
20->24 [style = bold, label=""];
24->3 [style = bold, label=""];
17->16 [style = bold, label=""];
11->25 [style = bold, label=""];
14->20 [style = bold, label=""];
}
