digraph {
10 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "subscriptions.unsubscribe()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(100,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fetcher = createFetcher(subscriptions,metrics,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Double.NaN,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testReadCommittedLagMetric['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "subscriptions.seek(tp0,0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buildFetcher()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(147,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "assertEquals(50,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(197,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Metrics metrics = new Metrics()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "subscriptions.unsubscribe()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "v++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,150L,0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(197,(Double)partitionLag.metricValue(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testFetcherMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "int v = 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(147,(Double)partitionLag.metricValue(),EPSILON)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "v < 3@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(50,(Double)partitionLag.metricValue(),EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,50L,0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testFetcherMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->37 [style = solid, label="partitionLagMetric"];
8->14 [style = bold, label=""];
10->22 [style = solid, label="partitionLagMetric"];
21->22 [style = bold, label=""];
19->0 [style = solid, label="v"];
32->37 [style = bold, label=""];
19->0 [style = bold, label=""];
17->3 [style = bold, label=""];
7->35 [style = dashed, label="0"];
18->7 [style = solid, label="v"];
12->24 [style = bold, label=""];
16->23 [style = bold, label=""];
41->38 [style = bold, label=""];
13->29 [style = bold, label=""];
5->12 [style = bold, label=""];
6->10 [style = solid, label="maxLagMetric"];
21->36 [style = dashed, label="0"];
14->10 [style = bold, label=""];
35->34 [style = bold, label=""];
15->8 [style = bold, label=""];
1->2 [style = bold, label=""];
19->18 [style = dotted, label="true"];
40->30 [style = bold, label=""];
19->18 [style = solid, label="v"];
36->19 [style = bold, label=""];
0->7 [style = bold, label=""];
0->7 [style = dotted, label="true"];
11->9 [style = solid, label="v"];
20->4 [style = bold, label=""];
40->30 [style = solid, label="metrics"];
7->20 [style = bold, label=""];
0->27 [style = solid, label="v"];
8->13 [style = solid, label="partitionLagMetric"];
30->6 [style = bold, label=""];
2->14 [style = solid, label="tags"];
22->36 [style = bold, label=""];
7->39 [style = bold, label=""];
0->18 [style = solid, label="v"];
1->8 [style = solid, label="tags"];
18->27 [style = bold, label=""];
19->18 [style = bold, label=""];
17->41 [style = bold, label=""];
18->0 [style = solid, label="v"];
10->16 [style = bold, label=""];
20->34 [style = dashed, label="0"];
39->7 [style = solid, label="v"];
3->21 [style = bold, label=""];
8->3 [style = solid, label="partitionLagMetric"];
11->18 [style = solid, label="v"];
19->9 [style = dotted, label="true"];
33->40 [style = bold, label=""];
19->27 [style = solid, label="v"];
23->41 [style = dashed, label="0"];
17->38 [style = dashed, label="0"];
11->19 [style = bold, label=""];
18->0 [style = dotted, label="true"];
26->28 [style = bold, label=""];
4->13 [style = bold, label=""];
24->6 [style = bold, label=""];
23->17 [style = bold, label=""];
6->1 [style = bold, label=""];
25->6 [style = bold, label=""];
14->29 [style = solid, label="partitionLagMetric"];
18->7 [style = bold, label=""];
22->11 [style = bold, label=""];
9->18 [style = bold, label=""];
11->19 [style = solid, label="v"];
19->9 [style = bold, label=""];
2->23 [style = solid, label="maxLagMetric"];
27->0 [style = bold, label=""];
38->22 [style = bold, label=""];
40->16 [style = solid, label="metrics"];
0->31 [style = bold, label=""];
31->35 [style = bold, label=""];
1->16 [style = solid, label="maxLagMetric"];
18->27 [style = dotted, label="true"];
39->0 [style = solid, label="v"];
18->19 [style = bold, label=""];
18->39 [style = solid, label="v"];
18->19 [style = solid, label="v"];
39->0 [style = bold, label=""];
18->9 [style = solid, label="v"];
14->21 [style = solid, label="partitionLagMetric"];
18->0 [style = bold, label=""];
2->15 [style = bold, label=""];
28->25 [style = bold, label=""];
0->18 [style = bold, label=""];
0->39 [style = dotted, label="true"];
15->10 [style = solid, label="tags"];
34->32 [style = bold, label=""];
0->31 [style = dashed, label="0"];
}
