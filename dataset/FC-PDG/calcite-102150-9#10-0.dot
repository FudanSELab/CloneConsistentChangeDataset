digraph {
42 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "RelCollation collation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "arg0 = Types.castIfNecessary(,arg0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(method.getDeclaringClass(),method.getName(),arg0,arg1))))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "generateCollationKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final Method method = (fieldNullable(index)? (nullsFirst ^ descending? BuiltInMethod.COMPARE_NULLS_FIRST: BuiltInMethod.COMPARE_NULLS_LAST): BuiltInMethod.COMPARE).method@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return Pair.of(selector,Expressions.new_(,Collections.emptyList(),memberDeclarations))@@@40@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final int index = fieldCollation.getFieldIndex()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Expression selector@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "generateComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "return Expressions.new_(,Collections.emptyList(),memberDeclarations)@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "collations.size() == 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@40@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "generateCollationKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->0 [style = dashed, label="0"];
52->40 [style = solid, label="mod"];
6->3 [style = bold, label=""];
13->24 [style = dotted, label="true"];
21->4 [style = solid, label="index"];
32->22 [style = bold, label=""];
26->27 [style = solid, label="descending"];
2->6 [style = bold, label=""];
49->55 [style = dotted, label="true"];
20->32 [style = solid, label="parameterO0"];
17->1 [style = dotted, label="true"];
10->19 [style = bold, label=""];
27->28 [style = bold, label=""];
47->15 [style = solid, label="descending"];
4->15 [style = bold, label=""];
53->44 [style = bold, label=""];
39->54 [style = bold, label=""];
31->1 [style = bold, label=""];
42->43 [style = solid, label="javaRowClass"];
23->8 [style = solid, label="memberDeclarations"];
49->55 [style = bold, label=""];
22->8 [style = bold, label=""];
17->38 [style = bold, label=""];
44->46 [style = bold, label=""];
15->0 [style = bold, label=""];
11->13 [style = bold, label=""];
23->17 [style = bold, label=""];
13->37 [style = dotted, label="true"];
14->8 [style = solid, label="selector"];
36->17 [style = bold, label=""];
13->14 [style = bold, label=""];
41->4 [style = solid, label="parameterC"];
45->10 [style = bold, label=""];
12->34 [style = dotted, label="true"];
53->46 [style = solid, label="parameterO1"];
17->20 [style = bold, label=""];
13->9 [style = dotted, label="true"];
2->3 [style = dotted, label="true"];
17->20 [style = dotted, label="true"];
5->29 [style = bold, label=""];
50->43 [style = bold, label=""];
28->36 [style = bold, label=""];
10->39 [style = solid, label="arg1"];
19->15 [style = solid, label="parameterV1"];
12->11 [style = bold, label=""];
49->53 [style = dotted, label="true"];
40->0 [style = bold, label=""];
26->47 [style = dashed, label="0"];
53->27 [style = solid, label="parameterO1"];
20->31 [style = bold, label=""];
10->36 [style = solid, label="parameterV0"];
9->7 [style = solid, label="parameter"];
8->28 [style = dashed, label="0"];
21->15 [style = solid, label="index"];
49->27 [style = dotted, label="true"];
31->22 [style = solid, label="parameterO1"];
55->27 [style = solid, label="parameterO0"];
22->38 [style = bold, label=""];
19->36 [style = solid, label="parameterV1"];
7->5 [style = bold, label=""];
26->30 [style = solid, label="descending"];
9->10 [style = solid, label="parameter"];
49->44 [style = dotted, label="true"];
21->30 [style = solid, label="index"];
0->19 [style = solid, label="index"];
25->26 [style = bold, label=""];
1->32 [style = bold, label=""];
56->48 [style = bold, label=""];
41->15 [style = solid, label="parameterC"];
5->52 [style = dashed, label="0"];
42->46 [style = solid, label="javaRowClass"];
42->50 [style = solid, label="javaRowClass"];
49->46 [style = dotted, label="true"];
21->4 [style = bold, label=""];
18->37 [style = bold, label=""];
17->8 [style = bold, label=""];
0->45 [style = solid, label="index"];
13->18 [style = dotted, label="true"];
18->24 [style = bold, label=""];
16->27 [style = bold, label=""];
7->16 [style = solid, label="parameterC"];
0->45 [style = bold, label=""];
30->32 [style = solid, label="method"];
49->28 [style = bold, label=""];
9->31 [style = solid, label="parameter"];
10->23 [style = solid, label="parameterV0"];
19->7 [style = dotted, label="true"];
5->29 [style = solid, label="mod"];
6->16 [style = solid, label="arg0"];
4->6 [style = solid, label="arg0"];
29->21 [style = bold, label=""];
14->38 [style = solid, label="selector"];
20->22 [style = solid, label="parameterO0"];
23->3 [style = dashed, label="0"];
18->24 [style = solid, label="selector"];
47->4 [style = solid, label="descending"];
24->37 [style = dashed, label="0"];
9->18 [style = bold, label=""];
43->3 [style = solid, label="parameterV1"];
13->33 [style = dotted, label="true"];
7->39 [style = bold, label=""];
28->23 [style = bold, label=""];
52->40 [style = bold, label=""];
2->6 [style = dotted, label="true"];
55->46 [style = solid, label="parameterO0"];
19->23 [style = solid, label="parameterV1"];
43->41 [style = bold, label=""];
17->22 [style = dotted, label="true"];
19->39 [style = dotted, label="true"];
3->16 [style = solid, label="arg1"];
27->21 [style = bold, label=""];
36->38 [style = solid, label="memberDeclarations"];
15->3 [style = solid, label="arg1"];
15->2 [style = bold, label=""];
9->32 [style = solid, label="parameter"];
42->50 [style = bold, label=""];
10->4 [style = solid, label="parameterV0"];
7->4 [style = solid, label="arg0"];
25->54 [style = dashed, label="0"];
9->20 [style = solid, label="parameter"];
39->4 [style = solid, label="arg1"];
0->4 [style = solid, label="index"];
3->25 [style = bold, label=""];
45->7 [style = solid, label="arg0"];
30->22 [style = solid, label="method"];
15->6 [style = bold, label=""];
7->29 [style = solid, label="parameterC"];
33->9 [style = bold, label=""];
48->42 [style = bold, label=""];
17->32 [style = dotted, label="true"];
9->19 [style = solid, label="parameter"];
24->14 [style = bold, label=""];
26->30 [style = bold, label=""];
41->52 [style = bold, label=""];
50->45 [style = solid, label="parameterV0"];
17->31 [style = dotted, label="true"];
23->36 [style = dashed, label="0"];
37->14 [style = bold, label=""];
9->18 [style = solid, label="parameter"];
0->10 [style = bold, label=""];
54->47 [style = bold, label=""];
56->51 [style = dotted, label="true"];
14->0 [style = bold, label=""];
31->32 [style = solid, label="parameterO1"];
35->11 [style = bold, label=""];
46->27 [style = bold, label=""];
55->53 [style = bold, label=""];
0->10 [style = solid, label="index"];
3->28 [style = solid, label="memberDeclarations"];
35->34 [style = dotted, label="true"];
3->49 [style = bold, label=""];
43->10 [style = solid, label="parameterV1"];
21->2 [style = solid, label="index"];
13->33 [style = bold, label=""];
30->16 [style = bold, label=""];
7->27 [style = solid, label="parameterC"];
50->3 [style = solid, label="parameterV0"];
18->37 [style = solid, label="selector"];
19->7 [style = bold, label=""];
41->40 [style = solid, label="parameterC"];
47->4 [style = bold, label=""];
}
