digraph {
5 [style = filled, label = "checkToBeAlteredEncryptors['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!invalidEncryptors.isEmpty()@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new InvalidEncryptorsException(invalidEncryptors)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final AlterEncryptRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "checkToBeAlteredEncryptors['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "final AlterShardingTableRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "checkToBeAlteredKeyGenerators['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "encryptors.addAll(each.getColumns().stream().map(null).collect(Collectors.toSet()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throw new InvalidKeyGeneratorsException(notExistedKeyGenerators)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Collection<String> invalidEncryptors = encryptors.stream().filter(null).collect(Collectors.toList())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final AlterEncryptRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Collection<String> notExistedKeyGenerators = getToBeAlteredKeyGenerators(sqlStatement).stream().distinct().filter(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "!notExistedKeyGenerators.isEmpty()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Collection<String> encryptors = new LinkedHashSet<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
8->7 [style = dotted, label="true"];
4->1 [style = bold, label=""];
5->4 [style = bold, label=""];
10->12 [style = dotted, label="true"];
8->4 [style = bold, label=""];
4->11 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
0->6 [style = dotted, label="true"];
2->9 [style = dashed, label="0"];
0->6 [style = bold, label=""];
11->10 [style = bold, label=""];
10->12 [style = bold, label=""];
13->11 [style = bold, label=""];
3->6 [style = solid, label="invalidEncryptors"];
3->0 [style = bold, label=""];
5->2 [style = dotted, label="true"];
11->12 [style = solid, label="notExistedKeyGenerators"];
13->9 [style = dotted, label="true"];
}
