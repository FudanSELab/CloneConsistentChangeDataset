digraph {
24 [style = filled, label = "when(namespaceUtil.filterNamespaceName(defaultNamespaceAsFile)).thenReturn(defaultNamespace)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(deferredResults.get(watchKey).contains(deferredResult))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String notificationAsString = transformApolloConfigNotificationsToString(defaultNamespaceAsFile,someNotificationId,somePublicNamespace,someNotificationId,somePublicNamespaceAsFile,someNotificationId)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "when(namespaceUtil.filterNamespaceName(somePublicNamespaceAsFile)).thenReturn(somePublicNamespaceAsFile)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String someWatchKey = \"someKey\"@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(watchKeysMap.size(),deferredResults.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String defaultNamespaceAsFile = defaultNamespace + \".properties\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "watchKeysMap.putAll(assembleMultiMap(somePublicNamespace,Lists.newArrayList(somePublicWatchKey)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertWatchKeys(watchKeysMap,deferredResult)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String namespace = String.format(\"%s.%s\",defaultNamespace,\"properties\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String somePublicNamespaceAsFile = somePublicNamespace + \".xml\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> deferredResult = controller.pollNotification(someAppId,someCluster,notificationAsString,someDataCenter,someClientIp)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String somePublicFileWatchKey = \"somePublicFileWatchKey\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testPollNotificationWithDefaultNamespaceAsFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String someWatchKey = \"someKey\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "verify(watchKeysUtil,times(1)).assembleAllWatchKeys(someAppId,someCluster,Sets.newHashSet(defaultNamespace,somePublicNamespace,somePublicNamespaceAsFile),someDataCenter)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Multimap<String,String> watchKeysMap = assembleMultiMap(defaultNamespace,Lists.newArrayList(someWatchKey,anotherWatchKey))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testPollNotificationWithDefaultNamespaceAsFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String somePublicWatchKey = \"somePublicWatchKey\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "when(watchKeysUtil.assembleAllWatchKeys(someAppId,someCluster,Sets.newHashSet(defaultNamespace,somePublicNamespace,somePublicNamespaceAsFile),someDataCenter)).thenReturn(watchKeysMap)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String anotherWatchKey = \"anotherKey\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(deferredResults.get(watchKey).contains(deferredResult))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "watchKeysMap.putAll(assembleMultiMap(somePublicNamespaceAsFile,Lists.newArrayList(somePublicFileWatchKey)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "when(namespaceUtil.filterNamespaceName(namespace)).thenReturn(defaultNamespace)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DeferredResult<ResponseEntity<List<ApolloConfigNotification>>> deferredResult = controller.pollNotification(someAppId,someCluster,notificationAsString,someDataCenter,someClientIp)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String anotherWatchKey = \"anotherKey\"@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(watchKeysMap.size(),deferredResults.size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testPollNotificationWithMultipleNamespaces['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->24 [style = bold, label=""];
16->15 [style = bold, label=""];
15->13 [style = bold, label=""];
2->7 [style = solid, label="anotherWatchKey"];
21->27 [style = bold, label=""];
4->6 [style = bold, label=""];
25->23 [style = bold, label=""];
23->19 [style = solid, label="somePublicFileWatchKey"];
16->13 [style = solid, label="deferredResult"];
14->21 [style = solid, label="somePublicNamespaceAsFile"];
1->3 [style = bold, label=""];
8->5 [style = solid, label="deferredResult"];
25->20 [style = solid, label="somePublicWatchKey"];
0->11 [style = bold, label=""];
9->22 [style = dashed, label="0"];
7->20 [style = bold, label=""];
27->16 [style = bold, label=""];
17->22 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
24->18 [style = bold, label=""];
3->4 [style = bold, label=""];
4->6 [style = solid, label="anotherWatchKey"];
6->7 [style = solid, label="someWatchKey"];
6->2 [style = bold, label=""];
9->2 [style = solid, label="namespace"];
8->0 [style = bold, label=""];
6->11 [style = solid, label="watchKeysMap"];
22->21 [style = solid, label="defaultNamespaceAsFile"];
14->18 [style = solid, label="somePublicNamespaceAsFile"];
2->8 [style = solid, label="notificationAsString"];
21->16 [style = solid, label="notificationAsString"];
18->6 [style = bold, label=""];
13->26 [style = bold, label=""];
14->19 [style = solid, label="somePublicNamespaceAsFile"];
6->7 [style = solid, label="watchKeysMap"];
7->27 [style = solid, label="watchKeysMap"];
10->9 [style = bold, label=""];
23->7 [style = bold, label=""];
2->7 [style = bold, label=""];
9->1 [style = bold, label=""];
22->14 [style = bold, label=""];
20->19 [style = bold, label=""];
2->25 [style = bold, label=""];
3->6 [style = solid, label="someWatchKey"];
8->11 [style = solid, label="deferredResult"];
14->26 [style = solid, label="somePublicNamespaceAsFile"];
0->5 [style = bold, label=""];
19->21 [style = bold, label=""];
}
