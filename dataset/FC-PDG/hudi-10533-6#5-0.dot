digraph {
9 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsOne = runCleaner(config)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFour = runCleaner(config)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "testTable.addReplaceCommit(\"00000000000005\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "testCleanWithReplaceCommits['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(0,hoodieCleanStatsTwo.size(),\"Must not scan any partitions and clean any files\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_FILE_VERSIONS).retainFileVersions(1).build()).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(0,hoodieCleanStatsOne.size(),\"Must not scan any partitions and clean any files\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testTable.addReplaceCommit(\"00000000000002\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@59@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file3P1C2,file4P1C4)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "HoodieTestTable testTable = HoodieTestTable.of(metaClient)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"001\",file1P0))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStats = runCleaner(config)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String file3P1C2 = partitionAndFileId003.get(p1)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testTable.forDeltaCommit(\"000\").withLogFile(p0,file1P0,1).withLogFile(p0,file1P0,2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsFive = runCleaner(config,2)@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsThree = runCleaner(config)@@@34@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCleanWithReplaceCommits['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String file4P1C4 = partitionAndFileId005.get(p1)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@58@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "Map<String,String> partitionAndFileId005 = testTable.forReplaceCommit(\"00000000000005\").getFileIdsWithBaseFilesInPartitions(p1)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HoodieCommitMetadata commitMetadata = generateCommitMetadata(Collections.unmodifiableMap(new HashMap<String,List<String>>(){}))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@60@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p1,file1P1C0,file3P1C2)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
73 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"000\",file1P0))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assertEquals(0,hoodieCleanStatsThree.size(),\"Must not scan any partitions and clean any files\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Map<String,String> partitionAndFileId002 = testTable.forReplaceCommit(\"00000000000002\").getFileIdsWithBaseFilesInPartitions(p0)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "String file1P0C0 = UUID.randomUUID().toString()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testKeepLatestFileVersionsMOR['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String file1P1C0 = UUID.randomUUID().toString()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<HoodieCleanStat> hoodieCleanStatsTwo = runCleaner(config)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Map<String,String> partitionAndFileId003 = testTable.forReplaceCommit(\"00000000000003\").getFileIdsWithBaseFilesInPartitions(p1)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String file4P0C3 = partitionAndFileId004.get(p0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Pair<HoodieRequestedReplaceMetadata,HoodieReplaceCommitMetadata> replaceMetadata = generateReplaceCommitMetadata(p0,file1P0C0,file2P0C1)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "testTable.addReplaceCommit(\"00000000000004\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "testTable.addDeltaCommit(\"001\").withBaseFilesInPartition(p0,file1P0).withLogFile(p0,file1P0,3)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertFalse(testTable.logFilesExist(p0,\"000\",file1P0,1,2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "testTable.addReplaceCommit(\"00000000000003\",replaceMetadata.getKey(),replaceMetadata.getValue())@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000001\",file1P0C0))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000004\",file4P0C3))@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "HoodieTableMetaClient metaClient = HoodieTestUtils.init(hadoopConf,basePath,HoodieTableType.MERGE_ON_READ)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "HoodieWriteConfig config = HoodieWriteConfig.newBuilder().withPath(basePath).withMetadataConfig(HoodieMetadataConfig.newBuilder().withAssumeDatePartitioning(true).build()).withCompactionConfig(HoodieCompactionConfig.newBuilder().withCleanerPolicy(HoodieCleaningPolicy.KEEP_LATEST_COMMITS).retainCommits(2).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Map<String,String> partitionAndFileId004 = testTable.forReplaceCommit(\"00000000000004\").getFileIdsWithBaseFilesInPartitions(p0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "String file1P0 = testTable.addDeltaCommit(\"000\").getFileIdsWithBaseFilesInPartitions(p0).get(p0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(testTable.baseFileExists(p0,\"00000000000002\",file2P0C1))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "String p0 = \"2020/01/01\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "metaClient.getActiveTimeline().saveAsComplete(new HoodieInstant(State.INFLIGHT,HoodieTimeline.COMMIT_ACTION,\"00000000000001\"),Option.of(commitMetadata.toJsonString().getBytes(StandardCharsets.UTF_8)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertTrue(testTable.logFileExists(p0,\"001\",file1P0,3))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "replaceMetadata = generateReplaceCommitMetadata(p0,file2P0C1,file4P0C3)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "String file2P0C1 = partitionAndFileId002.get(p0)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testTable.addInflightCommit(\"00000000000001\").withBaseFilesInPartition(p0,file1P0C0).withBaseFilesInPartition(p1,file1P1C0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(3,getCleanStat(hoodieCleanStats,p0).getSuccessDeleteFiles().size(),\"Must clean three files, one parquet and 2 log files\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertTrue(testTable.baseFileExists(p1,\"00000000000003\",file3P1C2))@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertFalse(testTable.baseFileExists(p1,\"00000000000001\",file1P1C0))@@@61@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
37->47 [style = solid, label="p0"];
39->73 [style = solid, label="p0"];
58->50 [style = bold, label=""];
39->4 [style = solid, label="p1"];
37->4 [style = solid, label="p0"];
39->69 [style = bold, label=""];
36->54 [style = solid, label="file2P0C1"];
39->38 [style = solid, label="p1"];
39->72 [style = solid, label="p0"];
39->25 [style = solid, label="p1"];
50->44 [style = bold, label=""];
31->47 [style = solid, label="file1P0C0"];
11->29 [style = bold, label=""];
70->37 [style = bold, label=""];
19->11 [style = bold, label=""];
61->57 [style = bold, label=""];
57->20 [style = bold, label=""];
37->41 [style = solid, label="p0"];
64->73 [style = bold, label=""];
37->13 [style = solid, label="p0"];
1->13 [style = bold, label=""];
39->2 [style = solid, label="p1"];
22->30 [style = bold, label=""];
35->38 [style = solid, label="config"];
26->22 [style = bold, label=""];
6->13 [style = solid, label="file1P1C0"];
13->40 [style = solid, label="file4P0C3"];
21->38 [style = bold, label=""];
71->63 [style = bold, label=""];
0->53 [style = bold, label=""];
18->49 [style = bold, label=""];
31->6 [style = bold, label=""];
37->11 [style = solid, label="p0"];
37->46 [style = solid, label="p0"];
39->31 [style = bold, label=""];
69->73 [style = solid, label="file1P0"];
69->67 [style = solid, label="file1P0"];
39->8 [style = solid, label="p1"];
37->48 [style = solid, label="p0"];
6->34 [style = solid, label="file1P1C0"];
36->14 [style = solid, label="file2P0C1"];
13->46 [style = bold, label=""];
37->61 [style = solid, label="p0"];
31->4 [style = solid, label="file1P0C0"];
2->32 [style = bold, label=""];
53->60 [style = bold, label=""];
39->32 [style = solid, label="p1"];
12->47 [style = solid, label="file4P0C3"];
8->21 [style = solid, label="file4P1C4"];
33->44 [style = bold, label=""];
69->65 [style = solid, label="file1P0"];
14->48 [style = bold, label=""];
37->12 [style = solid, label="p0"];
36->43 [style = solid, label="file2P0C1"];
24->28 [style = bold, label=""];
37->29 [style = solid, label="p0"];
3->20 [style = solid, label="file3P1C2"];
73->67 [style = bold, label=""];
39->63 [style = solid, label="p0"];
37->55 [style = solid, label="p0"];
6->9 [style = solid, label="file1P1C0"];
39->52 [style = solid, label="p1"];
6->4 [style = solid, label="file1P1C0"];
35->68 [style = dashed, label="0"];
5->51 [style = dashed, label="0"];
39->21 [style = solid, label="p1"];
39->26 [style = solid, label="p1"];
6->29 [style = solid, label="file1P1C0"];
6->21 [style = solid, label="file1P1C0"];
36->25 [style = solid, label="file2P0C1"];
31->8 [style = solid, label="file1P0C0"];
68->70 [style = bold, label=""];
34->54 [style = bold, label=""];
35->24 [style = solid, label="config"];
37->17 [style = solid, label="p0"];
37->54 [style = solid, label="p0"];
6->26 [style = solid, label="file1P1C0"];
6->2 [style = solid, label="file1P1C0"];
36->19 [style = solid, label="file2P0C1"];
35->18 [style = solid, label="config"];
3->0 [style = bold, label=""];
0->7 [style = bold, label=""];
12->34 [style = solid, label="file4P0C3"];
12->41 [style = bold, label=""];
39->59 [style = solid, label="p1"];
45->14 [style = bold, label=""];
37->58 [style = solid, label="p0"];
65->72 [style = bold, label=""];
37->44 [style = solid, label="p0"];
31->23 [style = solid, label="file1P0C0"];
35->28 [style = solid, label="config"];
47->2 [style = bold, label=""];
44->34 [style = bold, label=""];
40->17 [style = bold, label=""];
28->19 [style = bold, label=""];
23->10 [style = bold, label=""];
54->59 [style = bold, label=""];
31->48 [style = solid, label="file1P0C0"];
59->55 [style = bold, label=""];
36->61 [style = solid, label="file2P0C1"];
0->59 [style = solid, label="file3P1C2"];
69->72 [style = solid, label="file1P0"];
39->33 [style = solid, label="p1"];
37->27 [style = solid, label="p0"];
3->33 [style = solid, label="file3P1C2"];
37->19 [style = solid, label="p0"];
41->43 [style = bold, label=""];
3->25 [style = solid, label="file3P1C2"];
37->8 [style = solid, label="p0"];
30->15 [style = bold, label=""];
39->9 [style = solid, label="p1"];
31->11 [style = solid, label="file1P0C0"];
39->0 [style = solid, label="p1"];
0->58 [style = solid, label="file3P1C2"];
39->69 [style = solid, label="p0"];
36->51 [style = bold, label=""];
42->37 [style = bold, label=""];
6->26 [style = bold, label=""];
36->51 [style = solid, label="file2P0C1"];
37->25 [style = solid, label="p0"];
35->42 [style = bold, label=""];
43->20 [style = bold, label=""];
37->1 [style = solid, label="p0"];
35->44 [style = solid, label="config"];
39->34 [style = solid, label="p1"];
3->0 [style = solid, label="file3P1C2"];
49->23 [style = bold, label=""];
39->13 [style = solid, label="p1"];
62->35 [style = bold, label=""];
37->14 [style = solid, label="p0"];
39->53 [style = solid, label="p1"];
69->71 [style = solid, label="file1P0"];
69->63 [style = solid, label="file1P0"];
63->74 [style = bold, label=""];
35->12 [style = solid, label="config"];
39->3 [style = solid, label="p1"];
0->32 [style = solid, label="file3P1C2"];
12->61 [style = solid, label="file4P0C3"];
0->53 [style = solid, label="file3P1C2"];
32->8 [style = bold, label=""];
60->14 [style = bold, label=""];
37->2 [style = solid, label="p0"];
39->65 [style = solid, label="p0"];
5->24 [style = bold, label=""];
9->3 [style = bold, label=""];
36->5 [style = bold, label=""];
4->1 [style = bold, label=""];
55->52 [style = bold, label=""];
6->0 [style = solid, label="file1P1C0"];
38->40 [style = bold, label=""];
31->29 [style = solid, label="file1P0C0"];
37->39 [style = bold, label=""];
36->2 [style = solid, label="file2P0C1"];
31->44 [style = solid, label="file1P0C0"];
37->36 [style = solid, label="p0"];
35->7 [style = solid, label="config"];
37->5 [style = solid, label="p0"];
36->11 [style = solid, label="file2P0C1"];
39->1 [style = solid, label="p1"];
46->61 [style = dashed, label="0"];
31->51 [style = solid, label="file1P0C0"];
27->36 [style = bold, label=""];
46->12 [style = bold, label=""];
39->40 [style = solid, label="p1"];
39->20 [style = solid, label="p1"];
10->27 [style = bold, label=""];
21->58 [style = dashed, label="0"];
36->5 [style = solid, label="file2P0C1"];
29->9 [style = bold, label=""];
0->1 [style = solid, label="file3P1C2"];
66->68 [style = bold, label=""];
35->20 [style = solid, label="config"];
37->40 [style = solid, label="p0"];
37->43 [style = solid, label="p0"];
25->4 [style = bold, label=""];
74->64 [style = bold, label=""];
51->56 [style = bold, label=""];
70->37 [style = solid, label="metaClient"];
0->53 [style = dashed, label="0"];
17->33 [style = bold, label=""];
67->65 [style = bold, label=""];
6->53 [style = solid, label="file1P1C0"];
15->18 [style = bold, label=""];
20->47 [style = bold, label=""];
40->58 [style = solid, label="file4P1C4"];
3->21 [style = solid, label="file3P1C2"];
6->52 [style = solid, label="file1P1C0"];
6->10 [style = solid, label="file1P1C0"];
7->45 [style = bold, label=""];
39->67 [style = solid, label="p0"];
12->61 [style = bold, label=""];
69->71 [style = bold, label=""];
13->46 [style = solid, label="file4P0C3"];
31->55 [style = solid, label="file1P0C0"];
39->29 [style = solid, label="p1"];
39->10 [style = solid, label="p1"];
56->28 [style = bold, label=""];
48->25 [style = bold, label=""];
8->21 [style = bold, label=""];
68->74 [style = solid, label="config"];
13->41 [style = solid, label="file4P0C3"];
36->17 [style = solid, label="file2P0C1"];
39->69 [style = dashed, label="0"];
16->35 [style = bold, label=""];
35->14 [style = solid, label="config"];
36->46 [style = solid, label="file2P0C1"];
37->23 [style = solid, label="p0"];
39->71 [style = solid, label="p0"];
37->34 [style = solid, label="p0"];
37->51 [style = solid, label="p0"];
31->5 [style = solid, label="file1P0C0"];
40->58 [style = bold, label=""];
}
