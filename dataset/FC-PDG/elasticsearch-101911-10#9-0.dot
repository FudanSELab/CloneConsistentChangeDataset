digraph {
13 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)),notNullValue())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Exception e = expectThrows(,null)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(newState.metadata().index(DataStream.getDefaultBackingIndexName(dataStreamName,1)).getSettings().get(\"index.hidden\"),equalTo(\"true\"))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(newState.metadata().dataStreams().get(dataStreamName).getName(),equalTo(dataStreamName))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCreateDataStreamNoValidTemplate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "CreateDataStreamClusterStateUpdateRequest req = new CreateDataStreamClusterStateUpdateRequest(dataStreamName,TimeValue.ZERO,TimeValue.ZERO)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"matching index template (template( for data stream (my-data-stream( has no data stream template\"))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"),null,null,null,null,null,new ComposableIndexTemplate.DataStreamTemplate(),null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ClusterState newState = MetadataCreateDataStreamService.createDataStream(metadataCreateIndexService,cs,req)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate(List.of(dataStreamName + \"*\"),null,null,null,null,null,null,null)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "testCreateDataStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(newState.metadata().dataStreams().size(),equalTo(1))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ClusterState cs = ClusterState.builder(new ClusterName(\"_name\")).metadata(Metadata.builder().put(\"template\",template).build()).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ComposableIndexTemplate template = new ComposableIndexTemplate.Builder().indexPatterns(List.of(dataStreamName + \"*\")).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final MetadataCreateIndexService metadataCreateIndexService = getMetadataCreateIndexService()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCreateDataStreamNoValidTemplate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final String dataStreamName = \"my-data-stream\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
16->13 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
3->11 [style = bold, label=""];
3->13 [style = solid, label="dataStreamName"];
1->0 [style = bold, label=""];
0->12 [style = solid, label="metadataCreateIndexService"];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
8->7 [style = bold, label=""];
7->12 [style = solid, label="cs"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
12->10 [style = bold, label=""];
3->11 [style = solid, label="dataStreamName"];
10->16 [style = bold, label=""];
14->0 [style = bold, label=""];
3->16 [style = solid, label="dataStreamName"];
3->8 [style = bold, label=""];
7->6 [style = bold, label=""];
3->6 [style = solid, label="dataStreamName"];
4->8 [style = dashed, label="0"];
13->15 [style = bold, label=""];
3->4 [style = solid, label="dataStreamName"];
4->11 [style = dashed, label="0"];
6->12 [style = solid, label="req"];
11->7 [style = bold, label=""];
6->12 [style = bold, label=""];
}
