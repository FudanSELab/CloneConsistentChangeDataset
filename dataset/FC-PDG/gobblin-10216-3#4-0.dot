digraph {
7 [style = filled, label = "consumer.shutDown()@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "consumerProps.setProperty(ConfigurationKeys.KAFKA_BROKERS,_kafkaBrokers)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MockedHighLevelConsumer consumer = new MockedHighLevelConsumer(TOPIC,ConfigUtils.propertiesToConfig(consumerProps),NUM_PARTITIONS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "consumer.shutDown()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "consumerProps.setProperty(Kafka09ConsumerClient.GOBBLIN_CONFIG_VALUE_DESERIALIZER_CLASS_KEY,\"org.apache.kafka.common.serialization.ByteArrayDeserializer\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KafkaPartition partition = new KafkaPartition.Builder().withTopicName(TOPIC).withId(i).build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Properties consumerProps = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testConsumerAutoOffsetCommit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "consumerProps.setProperty(HighLevelConsumer.ENABLE_AUTO_COMMIT_KEY,\"true\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "AssertWithBackoff.assertTrue(null,5000,\"waiting for committing offsets\",log,2,1000)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int i = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "consumerProps.setProperty(SOURCE_KAFKA_CONSUMERCONFIG_KEY_WITH_DOT + KAFKA_AUTO_OFFSET_RESET_KEY,\"earliest\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i < NUM_PARTITIONS@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "consumerProps.setProperty(SOURCE_KAFKA_CONSUMERCONFIG_KEY_WITH_DOT + HighLevelConsumer.GROUP_ID_KEY,consumerGroupId)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "i++@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "consumer.awaitExactlyNMessages(NUM_MSGS,10000)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "consumer.startAsync().awaitRunning()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "consumerProps.put(HighLevelConsumer.OFFSET_COMMIT_TIME_THRESHOLD_SECS_KEY,1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testConsumerAutoOffsetCommit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "consumer.awaitExactlyNMessages(NUM_MSGS,10000)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String consumerGroupId = Joiner.on(\"-\").join(TOPIC,\"auto\",System.currentTimeMillis())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testConsumerManualOffsetCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "consumer.awaitExactlyNMessages(NUM_MSGS,5000)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
5->8 [style = bold, label=""];
16->18 [style = bold, label=""];
15->14 [style = bold, label=""];
9->2 [style = bold, label=""];
21->15 [style = bold, label=""];
18->15 [style = bold, label=""];
15->20 [style = dotted, label="true"];
3->6 [style = solid, label="consumerProps"];
8->6 [style = bold, label=""];
9->10 [style = bold, label=""];
15->21 [style = dotted, label="true"];
15->14 [style = dotted, label="true"];
19->6 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
9->16 [style = bold, label=""];
2->10 [style = dashed, label="0"];
15->22 [style = bold, label=""];
18->15 [style = solid, label="i"];
20->21 [style = bold, label=""];
5->19 [style = bold, label=""];
13->12 [style = bold, label=""];
11->3 [style = bold, label=""];
12->8 [style = bold, label=""];
2->16 [style = dashed, label="0"];
5->13 [style = bold, label=""];
18->21 [style = solid, label="i"];
13->12 [style = solid, label="consumerGroupId"];
17->3 [style = bold, label=""];
4->1 [style = bold, label=""];
21->15 [style = solid, label="i"];
2->7 [style = bold, label=""];
6->9 [style = bold, label=""];
14->20 [style = bold, label=""];
}
