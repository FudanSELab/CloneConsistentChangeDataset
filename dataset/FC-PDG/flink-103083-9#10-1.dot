digraph {
11 [style = filled, label = "shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final BucketState<String> state = bucketUnderTest.onReceptionOfCheckpoint(0L)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "bucketUnderTest.onReceptionOfCheckpoint(2L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldNotCleanupResumablesThatArePartOfTheAckedCheckpoint['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Bucket<String,String> bucketUnderTest = createBucket(recoverableWriter,path,0,0,OutputFileConfig.builder().build())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "bucketUnderTest.onSuccessfulCompletionOfCheckpoint(0L)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(state,hasActiveInProgressFile())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "bucketUnderTest.write(\"test-element\",0L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final File outDir = TEMP_FOLDER.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Path path = new Path(outDir.toURI())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Bucket<String,String> bucketUnderTest = createBucket(recoverableWriter,path,0,0,new PartFileConfig())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(recoverableWriter,hasCalledDiscard(2))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(recoverableWriter,hasCalledDiscard(0))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "bucketUnderTest.onSuccessfulCompletionOfCheckpoint(2L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final TestRecoverableWriter recoverableWriter = getRecoverableWriter(path)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shouldCleanupOutdatedResumablesOnCheckpointAck['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "bucketUnderTest.onReceptionOfCheckpoint(1L)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->1 [style = solid, label="recoverableWriter"];
5->2 [style = solid, label="state"];
6->3 [style = bold, label=""];
16->15 [style = bold, label=""];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
3->15 [style = solid, label="recoverableWriter"];
6->10 [style = solid, label="path"];
8->14 [style = bold, label=""];
7->4 [style = bold, label=""];
12->0 [style = bold, label=""];
13->16 [style = bold, label=""];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
6->3 [style = solid, label="path"];
5->2 [style = bold, label=""];
11->0 [style = bold, label=""];
3->7 [style = bold, label=""];
10->4 [style = bold, label=""];
3->10 [style = solid, label="recoverableWriter"];
7->10 [style = dashed, label="0"];
14->13 [style = bold, label=""];
6->7 [style = solid, label="path"];
4->5 [style = bold, label=""];
2->8 [style = bold, label=""];
3->7 [style = solid, label="recoverableWriter"];
}
