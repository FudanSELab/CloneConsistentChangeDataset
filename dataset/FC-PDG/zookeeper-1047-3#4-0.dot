digraph {
11 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String name@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Stat stat@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String name = \"/foo\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "stat = newStat()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(0,stat.getAversion())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "validateCreateStat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "String name@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "validateCreateStat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "zk.getData(name,false,stat)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testDataSizeChange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertNotSame(stat.getCzxid(),stat.getMzxid())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "stat = newStat()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "zk.setData(name,(name + name).getBytes(),-1)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "zk.getData(name,false,stat)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(0,stat.getCversion())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(1,stat.getVersion())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(0,stat.getVersion())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertNotSame(stat.getCtime(),stat.getMtime())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Stat stat@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(name.length() * 2,stat.getDataLength())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28->29 [style = bold, label=""];
4->5 [style = dotted, label="true"];
34->25 [style = bold, label=""];
2->20 [style = dashed, label="0"];
35->44 [style = bold, label=""];
11->1 [style = bold, label=""];
25->23 [style = bold, label=""];
7->16 [style = dashed, label="0"];
41->30 [style = solid, label="stat"];
31->32 [style = bold, label=""];
19->20 [style = bold, label=""];
29->35 [style = solid, label="name"];
36->31 [style = bold, label=""];
18->12 [style = bold, label=""];
7->0 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
43->26 [style = bold, label=""];
42->36 [style = bold, label=""];
19->15 [style = dotted, label="true"];
17->22 [style = bold, label=""];
30->6 [style = bold, label=""];
44->39 [style = bold, label=""];
40->38 [style = bold, label=""];
29->30 [style = solid, label="name"];
0->17 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
1->9 [style = bold, label=""];
6->12 [style = dashed, label="0"];
1->13 [style = dashed, label="0"];
26->41 [style = bold, label=""];
0->10 [style = bold, label=""];
22->18 [style = bold, label=""];
41->30 [style = bold, label=""];
4->3 [style = dotted, label="true"];
20->16 [style = bold, label=""];
10->8 [style = bold, label=""];
29->43 [style = solid, label="name"];
9->21 [style = dashed, label="0"];
11->14 [style = dashed, label="0"];
6->11 [style = bold, label=""];
32->40 [style = bold, label=""];
44->39 [style = solid, label="stat"];
12->14 [style = bold, label=""];
38->34 [style = bold, label=""];
19->5 [style = dotted, label="true"];
29->43 [style = bold, label=""];
8->18 [style = dashed, label="0"];
37->45 [style = bold, label=""];
27->33 [style = bold, label=""];
2->7 [style = bold, label=""];
14->13 [style = bold, label=""];
29->39 [style = solid, label="name"];
33->37 [style = bold, label=""];
13->21 [style = bold, label=""];
39->42 [style = bold, label=""];
45->35 [style = bold, label=""];
24->27 [style = bold, label=""];
9->24 [style = bold, label=""];
}
