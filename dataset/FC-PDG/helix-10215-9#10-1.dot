digraph {
17 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@58@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testParticipantFlapping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testParticipantFlapping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "client.unsubscribeStateChanges(listener)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@48@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "String newSessionId = ZkTestHelper.getSessionId(client)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "final AtomicInteger expectDisconnectCnt = new AtomicInteger(0)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "participant.syncStop()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,1,1,\"MasterSlave\",false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertTrue(success,\"Leader should be gone after \" + (n + 1) + \" disconnects\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final int n = _disconnectThreshold@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "i < n@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "deleteCluster(clusterName)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))return liveInstance == null}},3 * 1000)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
63 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@56@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "i < _disconnectThreshold@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TestHelper.verify(null,30 * 1000)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "expectDisconnectCnt.incrementAndGet()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "String newSessionId = ZkTestHelper.getSessionId(client)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "{System.clearProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD)}@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final String instanceName = \"localhost_12918\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "{System.clearProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD)}@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "client.subscribeStateChanges(listener)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "boolean success = TestHelper.verify(null,30 * 1000)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "i++@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final ZkClient client = (ZkClient)controller.getZkClient()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(success,\"Live-instance should be gone after \" + (n + 1) + \" disconnects\")@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "final HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<>(_gZkClient))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "MockParticipantManager participant = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "System.setProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD,Integer.toString(_disconnectThreshold))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "participant.syncStart()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "{System.clearProperty(SystemPropertyKeys.MAX_DISCONNECT_THRESHOLD)}@@@55@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(newSessionId,oldSessionId)@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final HelixDataAccessor accessor = new ZKHelixDataAccessor(clusterName,new ZkBaseDataAccessor<ZNRecord>(_gZkClient))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "boolean success = TestHelper.verify(new Verifier(){@Override public boolean verify(){return client.getShutdownTrigger()}},30 * 1000)@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "success = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){LiveInstance leader = accessor.getProperty(keyBuilder.controllerLeader())return leader == null}},5 * 1000)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "TestHelper.verify(new Verifier(){@Override public boolean verify(){return listener.count == expectDisconnectCnt.get()}},30 * 1000)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "Assert.assertNotNull(leader,\"Leader should exist after \" + n + \" disconnects\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final ZkClient client = (ZkClient)participant.getZkClient()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "success = TestHelper.verify(null,3 * 1000)@@@36@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "testControllerFlapping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertTrue(success,\"Live-instance should be gone after \" + (n + 1) + \" disconnects\")@@@53@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final PropertyKey.Builder keyBuilder = accessor.keyBuilder()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertTrue(success,\"The \" + (n + 1) + \"th disconnect event should trigger ZkHelixManager#disonnect\")@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final ZkStateCountListener listener = new ZkStateCountListener()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "controller.syncStart()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "LiveInstance liveInstance = accessor.getProperty(keyBuilder.liveInstance(instanceName))@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertNotNull(liveInstance,\"Live-instance should exist after \" + n + \" disconnects\")@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "String oldSessionId = ZkTestHelper.getSessionId(client)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ZkTestHelper.simulateZkStateReconnected(client)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35->2 [style = solid, label="i"];
34->33 [style = solid, label="clusterName"];
64->51 [style = bold, label=""];
25->2 [style = solid, label="i"];
25->22 [style = bold, label=""];
2->22 [style = dotted, label="true"];
11->14 [style = bold, label=""];
2->6 [style = bold, label=""];
16->14 [style = solid, label="n"];
10->29 [style = solid, label="liveInstance"];
24->34 [style = bold, label=""];
20->3 [style = solid, label="client"];
61->22 [style = solid, label="client"];
31->21 [style = bold, label=""];
57->59 [style = bold, label=""];
35->12 [style = dotted, label="true"];
35->8 [style = dotted, label="true"];
58->35 [style = solid, label="i"];
25->3 [style = solid, label="oldSessionId"];
20->9 [style = solid, label="client"];
39->18 [style = bold, label=""];
22->8 [style = bold, label=""];
2->25 [style = dotted, label="true"];
1->28 [style = bold, label=""];
35->25 [style = solid, label="i"];
50->5 [style = bold, label=""];
34->15 [style = solid, label="clusterName"];
51->61 [style = bold, label=""];
34->64 [style = solid, label="clusterName"];
48->43 [style = bold, label=""];
2->44 [style = bold, label=""];
2->48 [style = dotted, label="true"];
45->0 [style = bold, label=""];
26->15 [style = bold, label=""];
62->49 [style = bold, label=""];
49->63 [style = bold, label=""];
5->30 [style = bold, label=""];
35->22 [style = dotted, label="true"];
56->55 [style = solid, label="leader"];
59->54 [style = bold, label=""];
2->8 [style = dotted, label="true"];
40->37 [style = bold, label=""];
2->3 [style = dotted, label="true"];
16->36 [style = solid, label="n"];
2->47 [style = dotted, label="true"];
20->8 [style = solid, label="client"];
36->41 [style = bold, label=""];
3->9 [style = solid, label="newSessionId"];
30->27 [style = bold, label=""];
58->35 [style = bold, label=""];
26->38 [style = solid, label="instanceName"];
54->62 [style = bold, label=""];
27->55 [style = solid, label="n"];
34->45 [style = solid, label="clusterName"];
12->48 [style = bold, label=""];
24->34 [style = solid, label="methodName"];
20->43 [style = solid, label="client"];
43->47 [style = solid, label="newSessionId"];
27->16 [style = bold, label=""];
25->2 [style = bold, label=""];
44->38 [style = bold, label=""];
4->0 [style = bold, label=""];
52->3 [style = solid, label="newSessionId"];
56->54 [style = solid, label="leader"];
57->59 [style = solid, label="success"];
43->47 [style = bold, label=""];
37->46 [style = bold, label=""];
47->25 [style = bold, label=""];
21->11 [style = bold, label=""];
38->3 [style = solid, label="liveInstance"];
16->21 [style = solid, label="n"];
54->62 [style = solid, label="success"];
2->12 [style = dotted, label="true"];
16->58 [style = solid, label="i"];
3->58 [style = bold, label=""];
5->44 [style = solid, label="listener"];
16->35 [style = solid, label="i"];
32->17 [style = bold, label=""];
61->25 [style = solid, label="client"];
35->25 [style = dotted, label="true"];
18->24 [style = bold, label=""];
20->19 [style = solid, label="client"];
9->42 [style = bold, label=""];
10->11 [style = solid, label="liveInstance"];
2->35 [style = dashed, label="0"];
27->35 [style = solid, label="n"];
22->9 [style = solid, label="oldSessionId"];
35->2 [style = bold, label=""];
16->3 [style = solid, label="n"];
16->6 [style = solid, label="n"];
31->42 [style = dashed, label="0"];
26->10 [style = solid, label="instanceName"];
7->20 [style = bold, label=""];
13->48 [style = dashed, label="0"];
38->3 [style = bold, label=""];
35->58 [style = dotted, label="true"];
33->26 [style = bold, label=""];
61->53 [style = solid, label="client"];
26->15 [style = solid, label="instanceName"];
35->25 [style = bold, label=""];
4->45 [style = dashed, label="0"];
3->9 [style = bold, label=""];
12->13 [style = bold, label=""];
60->18 [style = bold, label=""];
2->9 [style = dotted, label="true"];
29->19 [style = bold, label=""];
5->6 [style = solid, label="listener"];
41->40 [style = bold, label=""];
0->1 [style = bold, label=""];
6->10 [style = bold, label=""];
42->6 [style = solid, label="success"];
61->52 [style = solid, label="client"];
27->59 [style = solid, label="n"];
14->32 [style = bold, label=""];
23->18 [style = bold, label=""];
8->12 [style = bold, label=""];
11->14 [style = solid, label="success"];
11->10 [style = dashed, label="0"];
22->47 [style = solid, label="oldSessionId"];
34->37 [style = solid, label="clusterName"];
15->7 [style = bold, label=""];
35->52 [style = dotted, label="true"];
19->31 [style = bold, label=""];
53->57 [style = bold, label=""];
14->62 [style = dashed, label="0"];
2->43 [style = dotted, label="true"];
34->45 [style = bold, label=""];
35->3 [style = dotted, label="true"];
34->1 [style = solid, label="clusterName"];
50->5 [style = solid, label="listener"];
10->36 [style = solid, label="success"];
35->56 [style = bold, label=""];
34->17 [style = solid, label="clusterName"];
20->22 [style = solid, label="client"];
34->4 [style = solid, label="clusterName"];
10->36 [style = bold, label=""];
20->5 [style = bold, label=""];
18->34 [style = solid, label="className"];
28->33 [style = bold, label=""];
13->3 [style = bold, label=""];
10->29 [style = bold, label=""];
42->6 [style = bold, label=""];
34->63 [style = solid, label="clusterName"];
9->25 [style = bold, label=""];
31->21 [style = solid, label="success"];
55->53 [style = bold, label=""];
34->46 [style = solid, label="clusterName"];
61->50 [style = bold, label=""];
34->4 [style = bold, label=""];
12->52 [style = bold, label=""];
52->3 [style = bold, label=""];
16->35 [style = bold, label=""];
2->22 [style = bold, label=""];
16->29 [style = solid, label="n"];
5->30 [style = solid, label="listener"];
33->64 [style = bold, label=""];
26->11 [style = solid, label="instanceName"];
2->13 [style = dotted, label="true"];
56->55 [style = bold, label=""];
27->62 [style = solid, label="n"];
}
