digraph {
9 [style = filled, label = "testBasicSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Mockito.when(processService.findLastRunningProcess(Mockito.eq(2),Mockito.any(),Mockito.any())).thenReturn(dependentProcessInstance)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(ExecutionStatus.FAILURE,taskExecThread.getTaskInstance().getState())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Mockito.when(processService.findValidTaskListByProcessId(200)).thenReturn(Stream.of(getTaskInstanceForValidTaskList(2000,ExecutionStatus.FAILURE,\"A\",dependentProcessInstance),getTaskInstanceForValidTaskList(2000,ExecutionStatus.SUCCESS,\"B\",dependentProcessInstance)).collect(Collectors.toList()))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(ExecutionStatus.SUCCESS,taskExecThread.getTaskInstance().getState())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Mockito.when(processService.findLastRunningProcess(Mockito.eq(2L),Mockito.any(),Mockito.any())).thenReturn(dependentProcessInstance)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "ProcessInstance dependentProcessInstance = getProcessInstanceForFindLastRunningProcess(200,2,ExecutionStatus.FAILURE)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testBasicSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testBasicFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DependentTaskExecThread taskExecThread = new DependentTaskExecThread(taskInstance)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Mockito.when(processService.findValidTaskListByProcessId(200)).thenReturn(Stream.of(getTaskInstanceForValidTaskList(2000,ExecutionStatus.SUCCESS,\"A\",dependentProcessInstance),getTaskInstanceForValidTaskList(2000,ExecutionStatus.FAILURE,\"B\",dependentProcessInstance)).collect(Collectors.toList()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ProcessInstance dependentProcessInstance = getProcessInstanceForFindLastRunningProcess(200,ExecutionStatus.FAILURE)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "taskExecThread.call()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ProcessInstance dependentProcessInstance = getProcessInstanceForFindLastRunningProcess(200,2,ExecutionStatus.SUCCESS)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testBasicInit()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->10 [style = bold, label=""];
11->3 [style = solid, label="dependentProcessInstance"];
7->14 [style = dashed, label="0"];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
4->2 [style = bold, label=""];
10->8 [style = solid, label="dependentProcessInstance"];
13->1 [style = bold, label=""];
2->10 [style = dashed, label="0"];
6->14 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
12->4 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
2->3 [style = solid, label="dependentProcessInstance"];
3->13 [style = bold, label=""];
3->8 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
4->11 [style = bold, label=""];
}
