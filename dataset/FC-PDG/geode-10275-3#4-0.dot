digraph {
8 [style = filled, label = "verify(cacheForClientAccess).createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"),any(),any())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "InternalDistributedMember member = member(4,80)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "addMemberArtifactsCreatesMonitoringRegion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(hasCachePerfStats.hasOwnStats()).isTrue()@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "addMemberArtifactsCreatesNotificationRegionWithHasOwnStats['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "verify(cacheForClientAccess).createInternalRegion(eq(\"_monitoringRegion_null<v1>20\"),any(),any())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "federatingManager.addMemberArtifacts(member)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(cacheForClientAccess).createInternalRegion(eq(\"_notificationRegion_null<v4>80\"),any(),captor.capture())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ArgumentCaptor<InternalRegionArguments> captor = ArgumentCaptor.forClass()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "InternalRegionArguments internalRegionArguments = captor.getValue()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "addMemberArtifactsCreatesMonitoringRegion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "FederatingManager federatingManager = new FederatingManager(jmxAdapter,repo,system,service,cache,statisticsFactory,statisticsClock)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "federatingManager.startManager()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "federatingManager.startManager()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "FederatingManager federatingManager = new FederatingManager(repo,system,service,cache,statisticsFactory,statisticsClock,new MBeanProxyFactory(jmxAdapter,service),new MemberMessenger(jmxAdapter,system),LoggingExecutors.newFixedThreadPool(\"FederatingManager\",true,Runtime.getRuntime().availableProcessors()))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "HasCachePerfStats hasCachePerfStats = internalRegionArguments.getCachePerfStatsHolder()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InternalDistributedMember member = member(1,20)@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
16->13 [style = bold, label=""];
10->14 [style = bold, label=""];
11->1 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
4->2 [style = solid, label="member"];
7->0 [style = bold, label=""];
11->2 [style = solid, label="member"];
1->0 [style = bold, label=""];
2->10 [style = bold, label=""];
3->4 [style = bold, label=""];
9->6 [style = bold, label=""];
2->0 [style = dashed, label="0"];
0->8 [style = bold, label=""];
5->8 [style = dashed, label="0"];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->7 [style = bold, label=""];
2->5 [style = bold, label=""];
}
