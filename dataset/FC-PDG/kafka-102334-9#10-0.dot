digraph {
19 [style = filled, label = "final Sensor sensor = ThreadMetrics.skipRecordSensor(THREAD_ID,streamsMetrics)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final String operation = \"skipped-records\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "verify(,streamsMetrics)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "shouldGetSkipRecordSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "builtInMetricsVersion == Version.FROM_100_TO_24@@@7@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "final String operation = \"task-closed\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "builtInMetricsVersion == Version.FROM_100_TO_24@@@3@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "final String rateDescription = \"The average per-second number of skipped records\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "verify(,streamsMetrics)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final String rateDescription = \"The average per-second number of closed tasks\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "replay(,streamsMetrics)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final String totalDescription = \"The total number of skipped records\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "shouldGetSkipRecordSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "replay(,streamsMetrics)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "shouldGetCloseTaskSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(sensor,is(expectedSensor))@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final String totalDescription = \"The total number of closed tasks\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(sensor.isPresent())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertThat(sensor.orElse(null),is(expectedSensor))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final Sensor sensor = ThreadMetrics.closeTaskSensor(THREAD_ID,streamsMetrics)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
3->7 [style = dotted, label="true"];
15->2 [style = bold, label=""];
20->7 [style = solid, label="operation"];
21->7 [style = solid, label="totalDescription"];
4->6 [style = bold, label=""];
11->12 [style = dotted, label="false"];
16->10 [style = bold, label=""];
10->19 [style = dashed, label="0"];
6->25 [style = bold, label=""];
10->6 [style = dashed, label="0"];
10->19 [style = bold, label=""];
5->18 [style = solid, label="totalDescription"];
5->24 [style = dashed, label="0"];
1->4 [style = solid, label="rateDescription"];
3->4 [style = dotted, label="true"];
3->6 [style = bold, label=""];
1->18 [style = solid, label="rateDescription"];
19->11 [style = bold, label=""];
11->12 [style = bold, label=""];
4->18 [style = bold, label=""];
21->24 [style = bold, label=""];
2->4 [style = solid, label="operation"];
11->13 [style = dotted, label="true"];
3->9 [style = dotted, label="true"];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
16->4 [style = dotted, label="true"];
24->7 [style = solid, label="rateDescription"];
1->9 [style = bold, label=""];
19->17 [style = solid, label="sensor"];
5->4 [style = solid, label="totalDescription"];
6->8 [style = solid, label="sensor"];
20->21 [style = bold, label=""];
5->1 [style = bold, label=""];
3->5 [style = dotted, label="true"];
9->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
18->10 [style = bold, label=""];
22->20 [style = bold, label=""];
2->21 [style = dashed, label="0"];
6->10 [style = bold, label=""];
11->13 [style = bold, label=""];
2->18 [style = solid, label="operation"];
11->17 [style = bold, label=""];
1->14 [style = bold, label=""];
25->8 [style = bold, label=""];
16->4 [style = bold, label=""];
8->11 [style = bold, label=""];
23->9 [style = bold, label=""];
3->1 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
2->5 [style = bold, label=""];
24->23 [style = bold, label=""];
16->18 [style = dotted, label="true"];
}
