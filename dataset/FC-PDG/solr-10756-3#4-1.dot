digraph {
51 [style = filled, label = "assertEquals(10,tuples.size())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Statement statement = connection.createStatement()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "indexr(id,\"4\",\"rating_f\",\"4.3\",\"personId_i\",\"14\")@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "clearData()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (14,'Isabella','NL')\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "tuples = getTuples(stream)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "indexr(id,\"7\",\"rating_f\",\"3\",\"personId_i\",\"17\")@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "statement.close()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<Tuple> tuples@@@36@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (19,'Olivia','NL')\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NP', 'Nepal')\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "indexr(id,\"10\",\"rating_f\",\"4.8\",\"personId_i\",\"20\")@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testJDBCSolrInnerJoinExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",zkServer.getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"select\",).withFunctionName(\"innerJoin\",).withFunctionName(\"jdbc\",)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "tuples = getTuples(stream)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NO', 'Norway')\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "stream = factory.constructStream(expression)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "stream = factory.constructStream(expression)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "testJDBCSolrInnerJoinExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "new UpdateRequest().add(id,\"1\",\"rating_f\",\"3.5\",\"personId_i\",\"11\").add(id,\"2\",\"rating_f\",\"5\",\"personId_i\",\"12\").add(id,\"3\",\"rating_f\",\"2.2\",\"personId_i\",\"13\").add(id,\"4\",\"rating_f\",\"4.3\",\"personId_i\",\"14\").add(id,\"5\",\"rating_f\",\"3.5\",\"personId_i\",\"15\").add(id,\"6\",\"rating_f\",\"3\",\"personId_i\",\"16\").add(id,\"7\",\"rating_f\",\"3\",\"personId_i\",\"17\").add(id,\"8\",\"rating_f\",\"4\",\"personId_i\",\"18\").add(id,\"9\",\"rating_f\",\"4.1\",\"personId_i\",\"19\").add(id,\"10\",\"rating_f\",\"4.8\",\"personId_i\",\"20\").commit(cluster.getSolrClient(),COLLECTION)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "indexr(id,\"6\",\"rating_f\",\"3\",\"personId_i\",\"16\")@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "connection.close()@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (15,'Lily','NL')\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(10,tuples.size())@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (12,'Grace','US')\")@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (17,'Mia','US')\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('US', 'United States')\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "indexr(id,\"9\",\"rating_f\",\"4.1\",\"personId_i\",\"19\")@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "TupleStream stream@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(\" + COLLECTION + \", fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\"),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NL', 'Netherlands')\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "indexr(id,\"8\",\"rating_f\",\"4\",\"personId_i\",\"18\")@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "stream = factory.constructStream(expression)@@@38@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tuples = getTuples(stream)@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "indexr(id,\"3\",\"rating_f\",\"2.2\",\"personId_i\",\"13\")@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "indexr(id,\"2\",\"rating_f\",\"5\",\"personId_i\",\"12\")@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "String expression@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "testJDBCSolrInnerJoinExpressionWithProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TupleStream stream@@@35@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (16,'Madison','US')\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('US', 'United States')\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(collection1, fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID as PERSONID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\", get_column_name=true),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (11,'Emma','NL')\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "assertEquals(10,tuples.size())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTION,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"select\",).withFunctionName(\"innerJoin\",).withFunctionName(\"jdbc\",)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "indexr(id,\"1\",\"rating_f\",\"3.5\",\"personId_i\",\"11\")@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(collection1, fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID as PERSONID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"PERSONID asc\", get_column_name=false),\" + \" PERSONID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "indexr(id,\"5\",\"rating_f\",\"3.5\",\"personId_i\",\"15\")@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (18,'Natalie','NL')\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (13,'Hailey','NL')\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "commit()@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(collection1, fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\"),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "List<Tuple> tuples@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
64 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "String expression@@@34@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (20,'Samantha','US')\")@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52->44 [style = bold, label=""];
49->55 [style = solid, label="tuples"];
11->14 [style = bold, label=""];
55->47 [style = bold, label=""];
28->45 [style = dashed, label="0"];
34->18 [style = bold, label=""];
60->59 [style = solid, label="tuples"];
49->51 [style = bold, label=""];
21->24 [style = bold, label=""];
49->47 [style = solid, label="tuples"];
22->65 [style = bold, label=""];
60->67 [style = solid, label="tuples"];
1->15 [style = solid, label="stream"];
18->22 [style = bold, label=""];
38->7 [style = bold, label=""];
9->5 [style = bold, label=""];
29->43 [style = bold, label=""];
59->67 [style = bold, label=""];
35->12 [style = bold, label=""];
63->60 [style = solid, label="stream"];
14->16 [style = bold, label=""];
54->49 [style = bold, label=""];
58->63 [style = solid, label="expression"];
25->36 [style = bold, label=""];
36->57 [style = dashed, label="0"];
60->62 [style = bold, label=""];
7->0 [style = bold, label=""];
49->44 [style = solid, label="tuples"];
0->21 [style = bold, label=""];
28->65 [style = dashed, label="0"];
15->4 [style = solid, label="tuples"];
29->26 [style = bold, label=""];
15->13 [style = solid, label="tuples"];
24->20 [style = bold, label=""];
58->63 [style = bold, label=""];
23->37 [style = bold, label=""];
28->1 [style = solid, label="expression"];
64->66 [style = bold, label=""];
20->39 [style = bold, label=""];
56->48 [style = bold, label=""];
60->66 [style = solid, label="tuples"];
36->35 [style = bold, label=""];
65->1 [style = bold, label=""];
15->5 [style = solid, label="tuples"];
30->33 [style = bold, label=""];
8->31 [style = bold, label=""];
60->64 [style = solid, label="tuples"];
37->41 [style = bold, label=""];
22->28 [style = bold, label=""];
16->23 [style = bold, label=""];
32->30 [style = bold, label=""];
61->36 [style = bold, label=""];
48->46 [style = bold, label=""];
31->42 [style = bold, label=""];
54->49 [style = solid, label="stream"];
27->34 [style = bold, label=""];
4->58 [style = bold, label=""];
63->60 [style = bold, label=""];
49->52 [style = solid, label="tuples"];
39->40 [style = bold, label=""];
5->4 [style = bold, label=""];
40->32 [style = bold, label=""];
3->17 [style = bold, label=""];
13->9 [style = bold, label=""];
33->19 [style = bold, label=""];
47->52 [style = bold, label=""];
15->9 [style = solid, label="tuples"];
15->2 [style = bold, label=""];
45->54 [style = solid, label="expression"];
57->50 [style = bold, label=""];
53->57 [style = bold, label=""];
41->29 [style = bold, label=""];
1->15 [style = bold, label=""];
10->3 [style = bold, label=""];
28->1 [style = bold, label=""];
62->64 [style = bold, label=""];
12->6 [style = bold, label=""];
2->13 [style = bold, label=""];
45->54 [style = bold, label=""];
26->38 [style = bold, label=""];
51->55 [style = bold, label=""];
19->27 [style = bold, label=""];
42->10 [style = bold, label=""];
6->8 [style = bold, label=""];
50->8 [style = bold, label=""];
65->1 [style = solid, label="expression"];
46->45 [style = bold, label=""];
66->59 [style = bold, label=""];
43->56 [style = bold, label=""];
17->11 [style = bold, label=""];
}
