digraph {
19 [style = filled, label = "assertEquals(\"h1,h2\",record.getSvcParamValue(SVCBRecord.ALPN).toString())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(svcDomain,record.getTargetName())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThrows(,null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Options.unset(\"BINDTTL\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "List<SVCBRecord.ParameterBase> params = Arrays.asList(alpn,ipv4,alpn)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int svcPriority = 5@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThrows(,null)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(label,record.getName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Name svcDomain = Name.fromString(\"svc.test.com.\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SVCBRecord.ParameterAlpn alpn = new SVCBRecord.ParameterAlpn()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createRecordDuplicateParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Options.unset(\"noPrintIN\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNull(record.getSvcParamValue(1234))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "createRecord['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<SVCBRecord.ParameterBase> params = Arrays.asList(mandatory,ipv4,alpn)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SVCBRecord.ParameterMandatory mandatory = new SVCBRecord.ParameterMandatory()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(\"alpn\",record.getSvcParamValue(SVCBRecord.MANDATORY).toString())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "SVCBRecord record = new SVCBRecord(label,DClass.IN,300,svcPriority,svcDomain,params)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "createRecordDuplicateParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertEquals(\"h1,h2\",record.getSvcParamValue(SVCBRecord.ALPN).toString())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Name label = Name.fromString(\"test.com.\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"test.com.300INSVCB5 svc.test.com. mandatory=alpn alpn=h1,h2 ipv4hint=1.2.3.4,5.6.7.8\",record.toString())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Type.SVCB,record.getType())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SVCBRecord.ParameterIpv4Hint ipv4 = new SVCBRecord.ParameterIpv4Hint()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "alpn.fromString(\"h1,h2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mandatory.fromString(\"alpn\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(svcPriority,record.getSvcPriority())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(Arrays.asList(SVCBRecord.MANDATORY,SVCBRecord.ALPN,SVCBRecord.IPV4HINT).toString(),record.getSvcParamKeys().toString())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ipv4.fromString(\"1.2.3.4,5.6.7.8\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->15 [style = solid, label="mandatory"];
27->1 [style = bold, label=""];
16->18 [style = bold, label=""];
15->28 [style = solid, label="params"];
8->15 [style = bold, label=""];
22->19 [style = bold, label=""];
28->20 [style = bold, label=""];
0->27 [style = bold, label=""];
24->0 [style = bold, label=""];
2->3 [style = bold, label=""];
27->28 [style = solid, label="svcPriority"];
18->26 [style = bold, label=""];
14->22 [style = bold, label=""];
7->15 [style = solid, label="ipv4"];
5->9 [style = dashed, label="0"];
8->6 [style = bold, label=""];
21->25 [style = bold, label=""];
7->8 [style = bold, label=""];
7->6 [style = solid, label="ipv4"];
13->11 [style = bold, label=""];
1->13 [style = bold, label=""];
11->2 [style = bold, label=""];
4->0 [style = bold, label=""];
1->26 [style = solid, label="svcDomain"];
6->5 [style = bold, label=""];
26->12 [style = bold, label=""];
20->16 [style = bold, label=""];
3->7 [style = bold, label=""];
15->28 [style = bold, label=""];
6->15 [style = dashed, label="0"];
1->28 [style = solid, label="svcDomain"];
0->1 [style = bold, label=""];
19->23 [style = bold, label=""];
10->0 [style = bold, label=""];
2->6 [style = solid, label="alpn"];
12->14 [style = bold, label=""];
23->17 [style = bold, label=""];
1->2 [style = bold, label=""];
2->15 [style = solid, label="alpn"];
0->16 [style = solid, label="label"];
6->9 [style = bold, label=""];
17->21 [style = bold, label=""];
27->18 [style = solid, label="svcPriority"];
0->28 [style = solid, label="label"];
}
