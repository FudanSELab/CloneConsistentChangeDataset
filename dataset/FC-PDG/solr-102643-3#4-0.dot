digraph {
40 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "nodeBuilder.setFreeDiskGB(1L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "AttributeValues attributeValues = attributeFetcher.fetchAttributes()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < NUM_NODES@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testReplicaType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Nrt, TlOg\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String group = groupOptional.get()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "group.equals(\"one\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "PlacementPlanFactory placementPlanFactory = new PlacementPlanFactoryImpl()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testReplicaType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Pull,foobar\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "AttributeFetcher attributeFetcher = clusterBuilder.buildAttributeFetcher()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"two\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),1,0,1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i < NUM_NODES / 3 * 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(\"wrong replica type in group one\",(rp.getReplicaType() == Replica.ReplicaType.NRT) || rp.getReplicaType() == Replica.ReplicaType.TLOG)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Cluster cluster = clusterBuilder.build()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Optional<String> groupOptional = attributeValues.getSystemProperty(rp.getNode(),\"group\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String collectionName = \"replicaTypeCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Node smallNode = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "i == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"one\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "nodeBuilder.setFreeDiskGB(100L)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "int NUM_NODES = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "replicas.forEach(null)@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "!groupOptional.isPresent()@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "fail(\"missing group sysprop for node \" + rp.getNode())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testFreeDiskConstraints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int NUM_NODES = 6@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(cluster,placementRequest,attributeFetcher,placementPlanFactory)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(\"wrong replica type in group two\",Replica.ReplicaType.PULL,rp.getReplicaType())@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(group,null).incrementAndGet()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41->43 [style = solid, label="collectionName"];
32->37 [style = bold, label=""];
11->42 [style = solid, label="i"];
42->45 [style = bold, label=""];
49->14 [style = bold, label=""];
26->34 [style = bold, label=""];
11->1 [style = solid, label="i"];
43->3 [style = solid, label="collectionBuilder"];
34->0 [style = dashed, label="0"];
10->17 [style = bold, label=""];
21->24 [style = bold, label=""];
38->41 [style = bold, label=""];
11->20 [style = solid, label="i"];
4->9 [style = solid, label="attributeFetcher"];
19->20 [style = solid, label="NUM_NODES"];
3->16 [style = bold, label=""];
19->30 [style = solid, label="NUM_NODES"];
45->48 [style = bold, label=""];
29->6 [style = bold, label=""];
1->33 [style = bold, label=""];
40->11 [style = bold, label=""];
6->11 [style = bold, label=""];
0->9 [style = solid, label="cluster"];
32->25 [style = bold, label=""];
26->34 [style = solid, label="solrCollection"];
35->8 [style = bold, label=""];
42->48 [style = dotted, label="true"];
18->35 [style = bold, label=""];
47->46 [style = solid, label="smallNode"];
19->1 [style = solid, label="NUM_NODES"];
27->19 [style = bold, label=""];
25->37 [style = dashed, label="0"];
41->31 [style = solid, label="collectionName"];
43->44 [style = bold, label=""];
11->33 [style = solid, label="i"];
4->46 [style = bold, label=""];
42->40 [style = dotted, label="false"];
5->10 [style = bold, label=""];
18->4 [style = dashed, label="0"];
44->3 [style = bold, label=""];
12->11 [style = bold, label=""];
14->9 [style = solid, label="placementPlanFactory"];
26->49 [style = bold, label=""];
31->0 [style = solid, label="solrCollection"];
42->40 [style = bold, label=""];
1->32 [style = dotted, label="true"];
24->5 [style = bold, label=""];
27->26 [style = solid, label="collectionName"];
1->42 [style = dotted, label="true"];
7->24 [style = bold, label=""];
1->33 [style = dotted, label="true"];
47->2 [style = bold, label=""];
2->1 [style = solid, label="i"];
30->47 [style = bold, label=""];
34->14 [style = bold, label=""];
23->7 [style = bold, label=""];
20->22 [style = dotted, label="true"];
42->45 [style = dotted, label="true"];
32->42 [style = bold, label=""];
34->9 [style = solid, label="placementRequest"];
14->4 [style = bold, label=""];
4->9 [style = bold, label=""];
20->29 [style = dotted, label="false"];
20->6 [style = dotted, label="false"];
27->41 [style = dashed, label="0"];
2->1 [style = bold, label=""];
31->0 [style = bold, label=""];
1->3 [style = bold, label=""];
23->7 [style = dotted, label="true"];
2->33 [style = solid, label="i"];
2->20 [style = solid, label="i"];
10->17 [style = dotted, label="true"];
25->20 [style = bold, label=""];
2->11 [style = solid, label="i"];
9->18 [style = bold, label=""];
10->13 [style = bold, label=""];
19->39 [style = dashed, label="0"];
48->11 [style = bold, label=""];
16->31 [style = bold, label=""];
33->32 [style = bold, label=""];
17->13 [style = bold, label=""];
2->42 [style = solid, label="i"];
1->37 [style = dotted, label="true"];
3->31 [style = solid, label="collectionBuilder"];
1->20 [style = dotted, label="true"];
24->15 [style = bold, label=""];
1->25 [style = dotted, label="true"];
0->26 [style = bold, label=""];
20->29 [style = bold, label=""];
11->1 [style = bold, label=""];
1->43 [style = bold, label=""];
1->11 [style = dotted, label="true"];
16->14 [style = solid, label="cluster"];
37->20 [style = bold, label=""];
48->46 [style = solid, label="smallNode"];
20->22 [style = bold, label=""];
23->21 [style = dotted, label="false"];
39->30 [style = bold, label=""];
39->1 [style = solid, label="NUM_NODES"];
36->27 [style = bold, label=""];
8->5 [style = bold, label=""];
23->21 [style = bold, label=""];
22->12 [style = bold, label=""];
27->3 [style = solid, label="collectionName"];
13->23 [style = bold, label=""];
20->12 [style = dotted, label="true"];
28->27 [style = bold, label=""];
30->2 [style = bold, label=""];
41->39 [style = bold, label=""];
39->30 [style = solid, label="NUM_NODES"];
49->14 [style = solid, label="attributeFetcher"];
0->14 [style = solid, label="placementRequest"];
26->14 [style = solid, label="placementPlanFactory"];
19->30 [style = bold, label=""];
}
