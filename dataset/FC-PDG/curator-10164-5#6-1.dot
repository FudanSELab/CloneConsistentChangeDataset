digraph {
14 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ServiceDiscovery<String> discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "server.stop()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "discovery.start()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "{Collections.reverse(closeables)for (Closeable c : closeables){CloseableUtils.closeQuietly(c)}}@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "closeables.add(discovery)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "closeables.add(client)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "list.add(instance)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<ServiceInstance<String>> list = Lists.newArrayList()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "closeables.add(client)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Closeable> closeables = Lists.newArrayList()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "discovery.start()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "CuratorFramework client = null@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "client.start()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "server.restart()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<Closeable> closeables = Lists.newArrayList()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Timing timing = new Timing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(discovery.queryForInstances(\"test\"),list)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testNoServerOnStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "timing.sleepABit()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "client.start()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "testBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(discovery.queryForNames(),Collections.singletonList(\"test\"))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
9->1 [style = solid, label="client"];
23->25 [style = bold, label=""];
0->10 [style = solid, label="list"];
15->13 [style = bold, label=""];
28->5 [style = bold, label=""];
1->8 [style = bold, label=""];
10->28 [style = bold, label=""];
13->3 [style = solid, label="instance"];
2->6 [style = bold, label=""];
10->5 [style = solid, label="list"];
25->9 [style = bold, label=""];
27->3 [style = bold, label=""];
2->16 [style = solid, label="discovery"];
5->26 [style = bold, label=""];
7->0 [style = bold, label=""];
13->0 [style = solid, label="instance"];
3->16 [style = bold, label=""];
11->9 [style = bold, label=""];
9->8 [style = bold, label=""];
22->23 [style = bold, label=""];
21->18 [style = bold, label=""];
12->7 [style = bold, label=""];
11->5 [style = solid, label="closeables"];
14->16 [style = solid, label="client"];
9->26 [style = solid, label="closeables"];
3->10 [style = bold, label=""];
9->14 [style = dashed, label="0"];
10->5 [style = bold, label=""];
19->14 [style = bold, label=""];
2->6 [style = solid, label="discovery"];
2->21 [style = bold, label=""];
8->13 [style = solid, label="client"];
7->3 [style = solid, label="list"];
0->24 [style = bold, label=""];
6->28 [style = solid, label="instance"];
17->20 [style = bold, label=""];
14->15 [style = bold, label=""];
12->7 [style = solid, label="discovery"];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
20->19 [style = bold, label=""];
18->7 [style = bold, label=""];
24->27 [style = bold, label=""];
8->13 [style = bold, label=""];
13->2 [style = bold, label=""];
6->12 [style = bold, label=""];
}
