digraph {
1 [style = filled, label = "assignment.putAll(taskId01Assignment)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> assignment = new HashMap<>(taskId00Assignment)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shouldCommitNonCorruptedTasksOnTaskCorruptedException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "replay(stateManager)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "replay(activeTaskCreator,topologyBuilder,consumer,changeLogReader)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ProcessorStateManager stateManager = EasyMock.createStrictMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "taskManager.handleAssignment(assignment,emptyMap())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "expectLastCall().anyTimes()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final StateMachineTask nonRunningNonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "shouldNotCommitNonRunningNonCorruptedTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(nonRunningNonCorruptedTask.state(),is(Task.State.CREATED))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "nonRunningNonCorruptedTask.setCommitNeeded()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "verify(activeTaskCreator)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "stateManager.markChangelogAsCorrupted(taskId00Partitions)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expect(activeTaskCreator.createTasks(anyObject(),eq(assignment))).andStubReturn(asList(corruptedTask,nonRunningNonCorruptedTask))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(nonCorruptedTask.state(),is(Task.State.RUNNING))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final StateMachineTask corruptedTask = new StateMachineTask(taskId00,taskId00Partitions,true,stateManager)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final StateMachineTask nonCorruptedTask = new StateMachineTask(taskId01,taskId01Partitions,true,stateManager)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "nonCorruptedTask.setCommitNeeded()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replay(activeTaskCreator,topologyBuilder,consumer,changeLogReader)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "consumer.commitSync(eq(emptyMap()))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "taskManager.handleCorruption(singletonMap(taskId00,taskId00Partitions))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(nonRunningNonCorruptedTask.commitPrepared)@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "taskManager.handleCorruption(singletonMap(taskId00,taskId00Partitions))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "topologyBuilder.addSubscribedTopicsFromAssignment(anyObject(),anyString())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->24 [style = bold, label=""];
27->21 [style = solid, label="nonRunningNonCorruptedTask"];
3->11 [style = bold, label=""];
13->7 [style = bold, label=""];
7->8 [style = bold, label=""];
19->6 [style = bold, label=""];
2->26 [style = bold, label=""];
11->7 [style = solid, label="stateManager"];
8->4 [style = bold, label=""];
8->1 [style = solid, label="nonCorruptedTask"];
7->21 [style = solid, label="corruptedTask"];
11->8 [style = solid, label="stateManager"];
2->5 [style = bold, label=""];
9->16 [style = bold, label=""];
16->19 [style = bold, label=""];
6->0 [style = bold, label=""];
1->21 [style = bold, label=""];
16->0 [style = bold, label=""];
25->14 [style = bold, label=""];
1->21 [style = dashed, label="0"];
11->15 [style = bold, label=""];
23->11 [style = bold, label=""];
8->27 [style = dashed, label="0"];
27->22 [style = bold, label=""];
12->10 [style = bold, label=""];
18->2 [style = solid, label="assignment"];
17->9 [style = bold, label=""];
1->17 [style = bold, label=""];
16->6 [style = bold, label=""];
15->13 [style = bold, label=""];
22->18 [style = bold, label=""];
4->0 [style = solid, label="assignment"];
11->27 [style = solid, label="stateManager"];
18->1 [style = bold, label=""];
5->12 [style = bold, label=""];
7->1 [style = solid, label="corruptedTask"];
24->25 [style = bold, label=""];
21->9 [style = bold, label=""];
0->2 [style = bold, label=""];
11->13 [style = solid, label="stateManager"];
10->14 [style = bold, label=""];
7->27 [style = bold, label=""];
4->18 [style = bold, label=""];
20->11 [style = bold, label=""];
}
