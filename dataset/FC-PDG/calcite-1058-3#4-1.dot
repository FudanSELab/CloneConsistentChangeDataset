digraph {
5 [style = filled, label = "assertEquals(\"noel\",notEmptyEnumerator.current())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Enumerator<String> notEmptyEnumerator = notEmptyEnumerable.enumerator()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testDefaultIfEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "notEmptyEnumerator.moveNext()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Linq4j.emptyEnumerable()).defaultIfEmpty(\"N/A\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Enumerator<String> emptyEnumerator = emptyEnumerable.enumerator()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(\"jimi\",notEmptyEnumerator.current())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "notEmptyEnumerator.moveNext()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<String> experience = Arrays.asList(\"jimi\",\"mitch\",\"noel\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDefaultIfEmpty2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final Enumerable<String> notEmptyEnumerable = Linq4j.asEnumerable(experience).defaultIfEmpty(\"dummy\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Enumerable<String> emptyEnumerable = Linq4j.asEnumerable(Linq4j.emptyEnumerable()).defaultIfEmpty()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"mitch\",notEmptyEnumerator.current())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNull(emptyEnumerator.current())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"N/A\",emptyEnumerator.current())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testDefaultIfEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "final Enumerable<String> notEmptyEnumerable = Linq4j.asEnumerable(experience).defaultIfEmpty()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(emptyEnumerator.moveNext())@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(emptyEnumerator.moveNext())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "notEmptyEnumerator.moveNext()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
7->1 [style = bold, label=""];
0->13 [style = bold, label=""];
17->1 [style = bold, label=""];
7->17 [style = dashed, label="0"];
0->19 [style = bold, label=""];
2->6 [style = bold, label=""];
13->19 [style = dashed, label="0"];
5->17 [style = bold, label=""];
6->4 [style = bold, label=""];
12->10 [style = bold, label=""];
11->0 [style = bold, label=""];
6->16 [style = dashed, label="0"];
19->14 [style = bold, label=""];
3->8 [style = bold, label=""];
15->0 [style = bold, label=""];
9->5 [style = bold, label=""];
5->7 [style = bold, label=""];
10->9 [style = bold, label=""];
1->2 [style = bold, label=""];
16->4 [style = bold, label=""];
13->14 [style = bold, label=""];
18->0 [style = bold, label=""];
8->12 [style = bold, label=""];
2->16 [style = bold, label=""];
}
