digraph {
0 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(e1.getClass() == e2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "e1.setPieIndex(99)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(e1.equals(e2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "e1.setArea(new Rectangle2D.Double(4.0,3.0,2.0,1.0))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(e1.equals(e2))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(e1 != e2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(e1.equals(e2))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "e2.setToolTipText(\"New ToolTip\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertFalse(e1.equals(e2))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(e1.equals(e2))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "e1.setURLText(\"New URL\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(e1.equals(e2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertTrue(e1.equals(e2))@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PieSectionEntity<String> e2 = new PieSectionEntity<>(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset<String>(),1,2,\"Key\",\"ToolTip\",\"URL\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertFalse(e1.equals(e2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "PieSectionEntity<String> e2 = (PieSectionEntity)e1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "e1.setToolTipText(\"New ToolTip\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PieSectionEntity<String> e2 = CloneUtils.clone(e1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertFalse(e1.equals(e2))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "e1.setSectionIndex(66)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(e1.equals(e2))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertFalse(e1.equals(e2))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "e2.setArea(new Rectangle2D.Double(4.0,3.0,2.0,1.0))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "e2.setSectionIndex(66)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "e1.setSectionKey(\"ABC\")@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(e1.equals(e2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "e2.setDataset(null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "e2.setSectionKey(\"ABC\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "e2.setPieIndex(99)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(e1.equals(e2))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(e1.equals(e2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "PieSectionEntity<String> e1 = new PieSectionEntity<>(new Rectangle2D.Double(1.0,2.0,3.0,4.0),new DefaultPieDataset<String>(),1,2,\"Key\",\"ToolTip\",\"URL\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(e1.equals(e2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "e2.setURLText(\"New URL\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "e1.setDataset(null)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
19->15 [style = solid, label="e2"];
29->8 [style = bold, label=""];
19->29 [style = solid, label="e2"];
1->4 [style = bold, label=""];
4->2 [style = solid, label="e2"];
30->22 [style = bold, label=""];
7->1 [style = bold, label=""];
16->11 [style = bold, label=""];
25->33 [style = bold, label=""];
32->12 [style = bold, label=""];
10->27 [style = bold, label=""];
31->24 [style = bold, label=""];
27->28 [style = bold, label=""];
37->1 [style = bold, label=""];
1->5 [style = solid, label="e1"];
2->34 [style = bold, label=""];
35->2 [style = bold, label=""];
6->5 [style = solid, label="e2"];
19->14 [style = solid, label="e2"];
22->31 [style = bold, label=""];
14->10 [style = bold, label=""];
9->36 [style = bold, label=""];
11->29 [style = bold, label=""];
28->13 [style = bold, label=""];
18->17 [style = bold, label=""];
1->6 [style = solid, label="e1"];
13->30 [style = bold, label=""];
4->6 [style = dashed, label="0"];
21->18 [style = bold, label=""];
19->13 [style = solid, label="e2"];
19->16 [style = solid, label="e2"];
19->12 [style = solid, label="e2"];
19->9 [style = solid, label="e2"];
19->17 [style = solid, label="e2"];
6->5 [style = bold, label=""];
4->5 [style = solid, label="e2"];
1->6 [style = bold, label=""];
19->2 [style = solid, label="e2"];
3->2 [style = bold, label=""];
19->24 [style = solid, label="e2"];
0->1 [style = bold, label=""];
19->26 [style = bold, label=""];
12->25 [style = bold, label=""];
19->27 [style = solid, label="e2"];
26->35 [style = bold, label=""];
19->26 [style = solid, label="e2"];
36->16 [style = bold, label=""];
8->21 [style = bold, label=""];
19->33 [style = solid, label="e2"];
4->19 [style = dashed, label="0"];
34->14 [style = bold, label=""];
6->2 [style = solid, label="e2"];
19->21 [style = solid, label="e2"];
1->19 [style = bold, label=""];
19->22 [style = solid, label="e2"];
15->32 [style = bold, label=""];
23->9 [style = bold, label=""];
20->15 [style = bold, label=""];
4->5 [style = bold, label=""];
17->20 [style = bold, label=""];
24->23 [style = bold, label=""];
}
