digraph {
1 [style = filled, label = "testSearchWithDimensionProvider['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "checkSearchQuery(Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimensions(\"market\").intervals(QueryRunnerTestHelper.fullOnIntervalSpec).query(\"a\").build(),expectedHits)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.marketDimension,\"total_market\",186))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"travel\",93))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<SearchHit> expectedHits = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.MARKET_DIMENSION,\"total_market\",186))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "checkSearchQuery(Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.DATA_SOURCE).granularity(QueryRunnerTestHelper.ALL_GRAN).dimensions(\"market\").intervals(QueryRunnerTestHelper.FULL_ON_INTERVAL_SPEC).query(\"a\").build(),expectedHits)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "checkSearchQuery(Druids.newSearchQueryBuilder().dataSource(QueryRunnerTestHelper.dataSource).granularity(QueryRunnerTestHelper.allGran).dimensions(\"quality\").intervals(QueryRunnerTestHelper.fullOnIntervalSpec).query(\"a\").build(),expectedHits)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"health\",93))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSearchWithDimensionQuality['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"automotive\",93))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"mezzanine\",279))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "expectedHits.add(new SearchHit(QueryRunnerTestHelper.qualityDimension,\"entertainment\",93))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSearchWithDimensionProvider['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3->5 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
0->11 [style = bold, label=""];
13->0 [style = bold, label=""];
0->9 [style = solid, label="expectedHits"];
2->4 [style = dashed, label="0"];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
10->8 [style = bold, label=""];
0->4 [style = bold, label=""];
7->10 [style = bold, label=""];
4->5 [style = bold, label=""];
0->3 [style = solid, label="expectedHits"];
12->7 [style = bold, label=""];
0->5 [style = solid, label="expectedHits"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
8->9 [style = bold, label=""];
}
