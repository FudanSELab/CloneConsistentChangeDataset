digraph {
15 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(5),historyPageFilter.newestOnPage)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,0L,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasUpPage)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(5,historyPageFilter.runs.size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(true,historyPageFilter.hasDownPage)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<ModelObject> itemList = new ArrayList<ModelObject>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,11L,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(0,historyPageFilter.runs.size())@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "historyPageFilter.add(itemList)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "test_newerThan_lt_oldest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "test_newerThan_gt_newest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "itemList.addAll(newRuns(1,10))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "historyPageFilter.add(itemList)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "test_newerThan_gt_newest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<ModelObject> itemList = newRuns(1,10)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(false,historyPageFilter.hasDownPage)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(0,historyPageFilter.runs.size())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
15->13 [style = bold, label=""];
7->16 [style = dashed, label="0"];
10->9 [style = solid, label="itemList"];
12->17 [style = bold, label=""];
3->11 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->14 [style = dashed, label="0"];
2->3 [style = solid, label="itemList"];
3->0 [style = bold, label=""];
2->10 [style = dashed, label="0"];
0->7 [style = bold, label=""];
8->1 [style = bold, label=""];
1->17 [style = dashed, label="0"];
17->2 [style = bold, label=""];
7->6 [style = bold, label=""];
9->3 [style = bold, label=""];
16->14 [style = bold, label=""];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
1->10 [style = bold, label=""];
2->5 [style = bold, label=""];
}
