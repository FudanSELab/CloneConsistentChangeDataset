digraph {
19 [style = filled, label = "final DruidAvaticaHandler handler = new DruidAvaticaHandler(druidMeta,new DruidNode(\"dummy\",\"dummy\",1,null,true,false),new AvaticaMonitor())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clientLosAngeles = DriverManager.getConnection(url,propertiesLosAngeles)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "url = StringUtils.format(\"jdbc:avatica:remote:url=http://127.0.0.1:%d%s\",port,DruidAvaticaHandler.AVATICA_PATH)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(new Module(){@Override public void configure(Binder binder){binder.bindConstant().annotatedWith(Names.named(\"serviceName\")).to(\"test\")binder.bindConstant().annotatedWith(Names.named(\"servicePort\")).to(0)binder.bindConstant().annotatedWith(Names.named(\"tlsServicePort\")).to(-1)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHORIZER_MAPPER)binder.bind().toInstance(CalciteTests.TEST_AUTHENTICATOR_ESCALATOR)}}))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final PlannerConfig plannerConfig = new PlannerConfig()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final int port = new Random().nextInt(9999) + 10000@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "properties.put(keyPrefix + \".cacheExecutorFactory\",\"single_thread\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "server.setHandler(handler)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testFromProperties['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final JsonConfigurator configurator = injector.getInstance()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "server.start()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(10,config.getExpireAfter())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Assert.assertEquals(100,config.getSizeInBytes())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "propertiesLosAngeles.setProperty(\"user\",\"regularUserLA\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "properties.put(keyPrefix + \".sizeInBytes\",\"100\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final DruidSchema druidSchema = CalciteTests.createMockSchema(conglomerate,walker,plannerConfig)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final CaffeineCacheConfig config = caffeineCacheConfigJsonConfigProvider.get().get()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertNotNull(config.createExecutor())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final String keyPrefix = \"cache.config.prefix\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "server = new Server(new InetSocketAddress(\"127.0.0.1\",port))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "druidMeta = new DruidMeta(new PlannerFactory(druidSchema,CalciteTests.createMockQueryLifecycleFactory(walker,conglomerate),operatorTable,macroTable,plannerConfig,CalciteTests.TEST_AUTHORIZER_MAPPER,CalciteTests.getJsonMapper()),AVATICA_CONFIG,injector)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final Properties propertiesLosAngeles = new Properties()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "properties.put(keyPrefix + \".expireAfter\",\"10\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "client = DriverManager.getConnection(url,\"regularUser\",\"druid\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "caffeineCacheConfigJsonConfigProvider.inject(properties,configurator)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "walker = CalciteTests.createMockWalker(conglomerate,temporaryFolder.newFolder())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "superuserClient = DriverManager.getConnection(url,CalciteTests.TEST_SUPERUSER_NAME,\"druid\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final DruidOperatorTable operatorTable = CalciteTests.createOperatorTable()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final Injector injector = Initialization.makeInjectorWithModules(GuiceInjectors.makeStartupInjector(),ImmutableList.of(null))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "propertiesLosAngeles.setProperty(\"sqlTimeZone\",\"America/Los_Angeles\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final JsonConfigProvider<CaffeineCacheConfig> caffeineCacheConfigJsonConfigProvider = JsonConfigProvider.of(keyPrefix,)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final ExprMacroTable macroTable = CalciteTests.createExprMacroTable()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final int port = ThreadLocalRandom.current().nextInt(9999) + 10000@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "final Properties properties = new Properties()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->18 [style = solid, label="port"];
5->10 [style = bold, label=""];
18->14 [style = solid, label="url"];
20->17 [style = bold, label=""];
7->1 [style = bold, label=""];
32->23 [style = bold, label=""];
19->13 [style = solid, label="handler"];
7->21 [style = dashed, label="0"];
23->27 [style = bold, label=""];
28->30 [style = bold, label=""];
12->10 [style = solid, label="propertiesLosAngeles"];
0->17 [style = bold, label=""];
27->28 [style = bold, label=""];
11->6 [style = bold, label=""];
26->34 [style = bold, label=""];
30->26 [style = bold, label=""];
3->11 [style = bold, label=""];
22->29 [style = bold, label=""];
4->30 [style = dashed, label="0"];
2->18 [style = bold, label=""];
18->9 [style = solid, label="url"];
29->27 [style = solid, label="keyPrefix"];
29->23 [style = solid, label="keyPrefix"];
32->24 [style = solid, label="properties"];
16->19 [style = bold, label=""];
18->10 [style = solid, label="url"];
1->13 [style = bold, label=""];
6->15 [style = bold, label=""];
26->24 [style = solid, label="configurator"];
35->25 [style = bold, label=""];
6->16 [style = solid, label="operatorTable"];
24->33 [style = bold, label=""];
34->24 [style = bold, label=""];
31->35 [style = bold, label=""];
8->5 [style = bold, label=""];
12->8 [style = bold, label=""];
29->28 [style = solid, label="keyPrefix"];
29->32 [style = bold, label=""];
7->1 [style = solid, label="port"];
14->12 [style = bold, label=""];
21->1 [style = bold, label=""];
15->4 [style = bold, label=""];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
17->3 [style = bold, label=""];
17->16 [style = solid, label="walker"];
33->31 [style = bold, label=""];
7->18 [style = solid, label="port"];
11->16 [style = solid, label="druidSchema"];
29->34 [style = solid, label="keyPrefix"];
16->19 [style = solid, label="druidMeta"];
4->16 [style = solid, label="injector"];
21->1 [style = solid, label="port"];
17->11 [style = solid, label="walker"];
19->7 [style = bold, label=""];
3->11 [style = solid, label="plannerConfig"];
4->16 [style = bold, label=""];
3->16 [style = solid, label="plannerConfig"];
15->16 [style = solid, label="macroTable"];
13->2 [style = bold, label=""];
19->21 [style = bold, label=""];
}
