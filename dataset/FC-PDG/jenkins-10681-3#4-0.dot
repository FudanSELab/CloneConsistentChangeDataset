digraph {
6 [style = filled, label = "assertSame(t,u.getProperty())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(Messages.ApiTokenProperty_ChangeToken_TokenIsHidden(),form.getInputByName(\"_.apiToken\").getValueAttribute())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "WebClient wc = createClientForUser(\"foo\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "WebClient wc = createClientForUser(\"bar\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(u,wc.executeOnServer(new Callable<User>(){public User call(){return User.current()}}))@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "User u = User.get(\"foo\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "basics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "j.submit(form)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HtmlPage config = wc.goTo(u.getUrl() + \"/configure\")@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "j.jenkins.setSecurityRealm(j.createDummySecurityRealm())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertSame(t,u.getProperty())@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final String token = t.getApiToken()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(u,wc.executeOnServer(new Callable<User>(){public User call(){return User.current()}}))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(token,form.getInputByName(\"_.apiToken\").getValueAttribute())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "HtmlForm form = config.getFormByName(\"config\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "basics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "HtmlPage config = wc.goTo(u.getUrl() + \"/configure\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ACL.impersonate(u.impersonate(),new Runnable(){@Override public void run(){assertEquals(\"User is unable to get its own token\",token,t.getApiToken())}})@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HtmlForm form = config.getFormByName(\"config\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"User is unable to get its own token\",token,t.getApiToken())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "adminsShouldBeUnableToSeeTokensByDefault['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final ApiTokenProperty t = u.getProperty()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
11->1 [style = solid, label="u"];
2->6 [style = solid, label="form"];
7->2 [style = solid, label="token"];
11->4 [style = bold, label=""];
3->11 [style = bold, label=""];
20->3 [style = bold, label=""];
4->7 [style = bold, label=""];
15->12 [style = bold, label=""];
7->0 [style = solid, label="token"];
21->17 [style = bold, label=""];
12->1 [style = bold, label=""];
7->21 [style = bold, label=""];
6->8 [style = bold, label=""];
10->3 [style = bold, label=""];
12->16 [style = bold, label=""];
7->14 [style = bold, label=""];
9->6 [style = bold, label=""];
2->9 [style = bold, label=""];
9->19 [style = dashed, label="0"];
7->9 [style = solid, label="token"];
0->12 [style = bold, label=""];
18->19 [style = bold, label=""];
7->14 [style = solid, label="token"];
7->0 [style = bold, label=""];
16->5 [style = bold, label=""];
13->3 [style = bold, label=""];
4->8 [style = solid, label="t"];
5->9 [style = solid, label="form"];
11->12 [style = solid, label="u"];
4->6 [style = solid, label="t"];
14->15 [style = bold, label=""];
1->5 [style = bold, label=""];
17->18 [style = bold, label=""];
}
