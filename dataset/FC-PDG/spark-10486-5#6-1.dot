digraph {
4 [style = filled, label = "runDT['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JavaRDD<LabeledPoint> data = sc.parallelize(LogisticRegressionSuite.generateLogisticInputAsList(A,B,nPoints,42),2).cache()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Vector importances = model.featureImportances()@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RandomForestClassifier rf = new RandomForestClassifier().setMaxDepth(2).setMaxBins(10).setMinInstancesPerNode(5).setMinInfoGain(0.0).setMaxMemoryInMB(256).setCacheNodeIds(false).setCheckpointInterval(10).setSubsamplingRate(1.0).setSeed(1234).setNumTrees(3).setMaxDepth(2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RandomForestRegressor rf = new RandomForestRegressor().setMaxDepth(2).setMaxBins(10).setMinInstancesPerNode(5).setMinInfoGain(0.0).setMaxMemoryInMB(256).setCacheNodeIds(false).setCheckpointInterval(10).setSubsamplingRate(1.0).setSeed(1234).setNumTrees(3).setMaxDepth(2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "double A = 2.0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RandomForestRegressionModel model = rf.fit(dataFrame)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "rf.setFeatureSubsetStrategy(featureSubsetStrategy)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "runDT['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "double B = -1.5@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<Integer,Integer> categoricalFeatures = new HashMap<>()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "runDT['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "model.totalNumNodes()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "DataFrame dataFrame = TreeTests.setMetadata(data,categoricalFeatures,2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RandomForestClassificationModel model = rf.fit(dataFrame)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "model.toDebugString()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "DataFrame dataFrame = TreeTests.setMetadata(data,categoricalFeatures,0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "rf.setImpurity(impurity)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "model.trees()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "model.transform(dataFrame)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map<Integer,Integer> categoricalFeatures = new HashMap<Integer,Integer>()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int nPoints = 20@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "model.treeWeights()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
17->10 [style = bold, label=""];
8->16 [style = bold, label=""];
1->10 [style = solid, label="data"];
1->19 [style = solid, label="data"];
14->19 [style = solid, label="categoricalFeatures"];
7->1 [style = bold, label=""];
10->12 [style = solid, label="dataFrame"];
10->19 [style = dashed, label="0"];
19->20 [style = bold, label=""];
14->10 [style = bold, label=""];
19->12 [style = solid, label="dataFrame"];
14->19 [style = bold, label=""];
10->16 [style = solid, label="dataFrame"];
0->20 [style = dashed, label="0"];
16->21 [style = dashed, label="0"];
22->5 [style = bold, label=""];
0->15 [style = bold, label=""];
1->17 [style = bold, label=""];
21->12 [style = bold, label=""];
19->21 [style = solid, label="dataFrame"];
14->10 [style = solid, label="categoricalFeatures"];
12->2 [style = bold, label=""];
3->7 [style = bold, label=""];
18->5 [style = bold, label=""];
11->13 [style = bold, label=""];
10->0 [style = bold, label=""];
8->21 [style = bold, label=""];
17->10 [style = solid, label="categoricalFeatures"];
14->17 [style = dashed, label="0"];
1->14 [style = bold, label=""];
13->6 [style = bold, label=""];
6->9 [style = bold, label=""];
20->15 [style = bold, label=""];
16->12 [style = bold, label=""];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
2->11 [style = bold, label=""];
}
