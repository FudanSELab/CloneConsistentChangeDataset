digraph {
9 [style = filled, label = "createCore()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "raf.writeLong(0xffffffffffffffffL)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "updateJ(jsonAdd(sdoc(\"id\",\"F6\",\"_version_\",\"106\")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "raf.seek(0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertU(adoc(\"id\",\"F3\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = new Runnable(){@Override public void run(){logReplayFinish.release()}}@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "UpdateLog.testing_logReplayHook = new Runnable(){@Override public void run(){try {assertTrue(logReplay.tryAcquire(timeout,TimeUnit.SECONDS))}catch (Exception e) }}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RandomAccessFile raf = new RandomAccessFile(new File(logDir,files(files.length - 1(),\"rw\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "raf.write(new byte(((()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "logReplayFinish.drainPermits()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "testTruncatedLog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "createCore()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "deleteLogs()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertU(adoc(\"id\",\"F2\"))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertU(commit())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertU(adoc(\"id\",\"G1\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "updateJ(jsonAdd(sdoc(\"id\",\"G6\",\"_version_\",\"106\")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "updateJ(jsonAdd(sdoc(\"id\",\"F5\",\"_version_\",\"105\")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "h.close()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"3\"),\"/versions==(106,105,104(\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "File logDir = h.getCore().getUpdateHandler().getUpdateLog().getLogDir()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String(( files = UpdateLog.getLogList(logDir)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertU(commit())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertU(adoc(\"id\",\"G2\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "resetExceptionIgnores()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "updateJ(jsonAdd(sdoc(\"id\",\"G5\",\"_version_\",\"105\")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ignoreException(\"Failure to open existing log file\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Arrays.sort(files)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "clearIndex()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "final Semaphore logReplay = new Semaphore(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "raf.seek(raf.length())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "updateJ(jsonAdd(sdoc(\"id\",\"F4\",\"_version_\",\"104\")),params(DISTRIB_UPDATE_PARAM,FROM_LEADER))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "raf.writeChars(\"This should be appended to a good log file, representing a bad partially written record.\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "final Semaphore logReplayFinish = new Semaphore(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = null}@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DirectUpdateHandler2.commitOnClose = false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testCorruptLog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "raf.close()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertU(adoc(\"id\",\"G3\"))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "long len = raf.length()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertU(adoc(\"id\",\"F1\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"3\"),\"/versions==(106,105,104(\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCorruptLog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "logReplay.release(1000)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "ignoreException(\"OutOfBoundsException\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "resetExceptionIgnores()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->37 [style = bold, label=""];
48->0 [style = bold, label=""];
47->43 [style = bold, label=""];
6->48 [style = dashed, label="0"];
13->7 [style = bold, label=""];
30->48 [style = bold, label=""];
10->24 [style = bold, label=""];
44->46 [style = bold, label=""];
12->42 [style = dashed, label="0"];
4->42 [style = bold, label=""];
21->32 [style = bold, label=""];
25->19 [style = bold, label=""];
39->35 [style = bold, label=""];
6->0 [style = bold, label=""];
15->4 [style = bold, label=""];
18->5 [style = bold, label=""];
9->13 [style = bold, label=""];
31->47 [style = bold, label=""];
45->20 [style = bold, label=""];
18->10 [style = solid, label="files"];
28->8 [style = bold, label=""];
11->9 [style = bold, label=""];
20->33 [style = bold, label=""];
34->36 [style = bold, label=""];
3->30 [style = dashed, label="0"];
41->39 [style = bold, label=""];
16->22 [style = bold, label=""];
17->20 [style = bold, label=""];
46->9 [style = bold, label=""];
5->10 [style = bold, label=""];
27->20 [style = bold, label=""];
18->5 [style = solid, label="files"];
33->41 [style = bold, label=""];
40->21 [style = bold, label=""];
7->14 [style = bold, label=""];
3->6 [style = bold, label=""];
14->1 [style = bold, label=""];
37->13 [style = bold, label=""];
21->25 [style = bold, label=""];
24->34 [style = dashed, label="0"];
8->29 [style = bold, label=""];
26->15 [style = bold, label=""];
26->18 [style = solid, label="logDir"];
19->11 [style = bold, label=""];
22->40 [style = dashed, label="0"];
24->16 [style = bold, label=""];
12->3 [style = bold, label=""];
23->8 [style = bold, label=""];
29->31 [style = bold, label=""];
4->12 [style = bold, label=""];
26->10 [style = solid, label="logDir"];
32->44 [style = bold, label=""];
16->36 [style = dashed, label="0"];
23->28 [style = bold, label=""];
22->21 [style = bold, label=""];
13->8 [style = bold, label=""];
10->34 [style = bold, label=""];
36->40 [style = bold, label=""];
35->26 [style = bold, label=""];
20->26 [style = bold, label=""];
43->38 [style = bold, label=""];
0->18 [style = bold, label=""];
1->2 [style = bold, label=""];
2->23 [style = bold, label=""];
42->30 [style = bold, label=""];
}
