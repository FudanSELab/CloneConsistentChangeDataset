digraph {
27 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,magic,compressionType,TimestampType.CREATE_TIME,0L,logAppendTime,RecordBatch.NO_PRODUCER_ID,RecordBatch.NO_PRODUCER_EPOCH,RecordBatch.NO_SEQUENCE,false,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "args.compressionType != CompressionType.NONE@@@14@@@['1', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@b83b9e@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(0L,info.shallowOffsetOfMaxTimestamp)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ByteBuffer buffer = allocateBuffer(1024,args)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "compressionType == CompressionType.NONE@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,magic,compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,RecordBatch.NO_PRODUCER_ID,RecordBatch.NO_PRODUCER_EPOCH,RecordBatch.NO_SEQUENCE,false,false,RecordBatch.NO_PARTITION_LEADER_EPOCH,buffer.capacity())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "compressionType != CompressionType.NONE@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assumeAtLeastV2OrNotZstd(magic,args.compressionType)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "buildUsingCreateTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "builder.append(0L,\"a\".getBytes(),\"1\".getBytes())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "buildUsingLogAppendTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "builder.append(2L,\"b\".getBytes(),\"2\".getBytes())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "buildUsingLogAppendTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "MemoryRecords records = builder.build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "byte magic = RecordBatch.MAGIC_VALUE_V1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "builder.append(1L,\"c\".getBytes(),\"3\".getBytes())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "int i = 0@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "buffer.position(bufferOffset)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,batch.timestampType())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(0L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "MemoryRecords records = builder.build()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "builder.append(0L,\"c\".getBytes(),\"3\".getBytes())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,batch.timestampType())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Args args@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assumeAtLeastV2OrNotZstd(magic)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24->17 [style = solid, label="logAppendTime"];
12->35 [style = solid, label="magic"];
29->30 [style = bold, label=""];
15->11 [style = dashed, label="0"];
36->28 [style = bold, label=""];
10->35 [style = bold, label=""];
23->21 [style = solid, label="args"];
21->24 [style = bold, label=""];
24->6 [style = solid, label="logAppendTime"];
37->5 [style = bold, label=""];
13->17 [style = bold, label=""];
15->17 [style = bold, label=""];
26->12 [style = bold, label=""];
0->25 [style = dashed, label="0"];
21->10 [style = solid, label="buffer"];
6->11 [style = bold, label=""];
31->30 [style = bold, label=""];
9->14 [style = bold, label=""];
34->32 [style = bold, label=""];
10->9 [style = solid, label="logAppendTime"];
25->21 [style = bold, label=""];
17->20 [style = bold, label=""];
16->35 [style = solid, label="buffer"];
24->10 [style = bold, label=""];
19->20 [style = bold, label=""];
14->38 [style = bold, label=""];
26->23 [style = dotted, label="true"];
4->2 [style = bold, label=""];
15->36 [style = dashed, label="0"];
16->21 [style = dashed, label="0"];
11->18 [style = bold, label=""];
16->9 [style = solid, label="buffer"];
8->17 [style = bold, label=""];
13->28 [style = dashed, label="0"];
18->20 [style = bold, label=""];
5->6 [style = bold, label=""];
38->37 [style = bold, label=""];
2->37 [style = dashed, label="0"];
7->13 [style = dotted, label="false"];
22->14 [style = bold, label=""];
14->4 [style = bold, label=""];
10->35 [style = solid, label="logAppendTime"];
17->8 [style = bold, label=""];
12->10 [style = solid, label="magic"];
0->16 [style = bold, label=""];
36->28 [style = dotted, label="false"];
4->38 [style = dashed, label="0"];
3->12 [style = bold, label=""];
33->12 [style = bold, label=""];
35->14 [style = bold, label=""];
7->15 [style = dotted, label="true"];
28->32 [style = bold, label=""];
9->35 [style = dashed, label="0"];
6->27 [style = bold, label=""];
32->31 [style = solid, label="i"];
16->1 [style = bold, label=""];
10->11 [style = solid, label="logAppendTime"];
30->31 [style = bold, label=""];
7->15 [style = bold, label=""];
12->0 [style = solid, label="magic"];
24->10 [style = solid, label="logAppendTime"];
10->9 [style = bold, label=""];
11->27 [style = dashed, label="0"];
36->34 [style = bold, label=""];
2->5 [style = bold, label=""];
7->13 [style = bold, label=""];
10->22 [style = bold, label=""];
20->17 [style = bold, label=""];
27->36 [style = bold, label=""];
9->10 [style = dashed, label="0"];
10->8 [style = solid, label="logAppendTime"];
11->19 [style = bold, label=""];
11->18 [style = dotted, label="true"];
12->0 [style = bold, label=""];
12->25 [style = solid, label="magic"];
32->29 [style = bold, label=""];
12->9 [style = solid, label="magic"];
11->19 [style = dotted, label="false"];
12->25 [style = bold, label=""];
29->31 [style = solid, label="expectedTimestamps"];
8->31 [style = dashed, label="0"];
1->10 [style = bold, label=""];
36->34 [style = dotted, label="true"];
17->30 [style = dashed, label="0"];
11->7 [style = bold, label=""];
}
