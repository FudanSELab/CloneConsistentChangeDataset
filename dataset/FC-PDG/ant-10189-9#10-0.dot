digraph {
9 [style = filled, label = "assertContains(\"Removed 1 dangling directory from\",buildRule.getFullLog())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertFileIsPresent(f)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(buildRule.getFullLog().contains(\"Removing orphan file:\"))@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testCopyNoRemoveSelectors['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCopyAndRemove['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "testCopyAndRemove['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String target@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String d = buildRule.getProject().getProperty(\"dest\") + \"/a/b/c/d\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "buildRule.executeTarget(target)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(buildRule.getFullLog().contains(\"Removing orphan file:\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertThat(buildRule.getFullLog(),containsString(\"Removed 1 dangling directory from\"))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertContains(\"Removed 1 dangling file from\",buildRule.getFullLog())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "String f = buildRule.getProject().getProperty(\"dest\") + \"/e/f\"@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertFileIsPresent(d)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "buildRule.executeTarget(\"copynoremove-selectors\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(buildRule.getFullLog(),containsString((\"Removing orphan file:\")))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertFileIsNotPresent(f)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(buildRule.getFullLog(),containsString(\"Removed 1 dangling file from\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9->10 [style = dashed, label="0"];
7->17 [style = dashed, label="0"];
4->2 [style = solid, label="d"];
12->1 [style = dotted, label="true"];
0->15 [style = dashed, label="0"];
4->2 [style = bold, label=""];
16->17 [style = bold, label=""];
12->0 [style = bold, label=""];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
8->0 [style = bold, label=""];
3->9 [style = bold, label=""];
5->16 [style = bold, label=""];
8->1 [style = dotted, label="true"];
1->0 [style = solid, label="target"];
6->16 [style = dashed, label="0"];
5->6 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
6->13 [style = bold, label=""];
5->6 [style = solid, label="f"];
15->4 [style = bold, label=""];
7->13 [style = dashed, label="0"];
5->16 [style = solid, label="f"];
14->15 [style = bold, label=""];
6->7 [style = bold, label=""];
3->11 [style = dashed, label="0"];
2->5 [style = bold, label=""];
}
