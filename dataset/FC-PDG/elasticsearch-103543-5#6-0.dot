digraph {
18 [style = filled, label = "assertNull(tracker.getTrackedLocalCheckpointForShard(trackingAllocationId.getId()))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ReplicationTracker tracker = newTracker(inSyncAllocationId)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final AllocationId inSyncAllocationId = AllocationId.newInitializing()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertTrue(interrupted.get())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(complete.get())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testWaitForAllocationIdToBeInSync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(complete.get())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "barrier.await()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "barrier.await()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertFalse(tracker.getTrackedLocalCheckpointForShard(trackingAllocationId.getId()).inSync)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "tracker.activatePrimaryMode(globalCheckpoint)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "barrier.await()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final AtomicBoolean complete = new AtomicBoolean()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Thread thread = new Thread(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "tracker.updateFromMaster(clusterStateVersion + 1,Collections.singleton(inSyncAllocationId.getId()),routingTable(emptySet(),inSyncAllocationId),emptySet())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Thread thread = new Thread(null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tracker.updateLocalCheckpoint(trackingAllocationId.getId(),randomIntBetween(globalCheckpoint,64))@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "thread.join()@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "tracker.updateLocalCheckpoint(trackingAllocationId.getId(),elements.get(i))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "thread.interrupt()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final int globalCheckpoint = randomIntBetween(localCheckpoint + 1,64)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final CyclicBarrier barrier = new CyclicBarrier(2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final List<Integer> elements = IntStream.rangeClosed(0,globalCheckpoint - 1).boxed().collect(Collectors.toList())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "tracker.updateFromMaster(randomNonNegativeLong(),Collections.singleton(inSyncAllocationId.getId()),routingTable(Collections.singleton(trackingAllocationId),inSyncAllocationId),emptySet())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tracker.updateFromMaster(clusterStateVersion,Collections.singleton(inSyncAllocationId.getId()),routingTable(Collections.singleton(trackingAllocationId),inSyncAllocationId),emptySet())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "randomBoolean()@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "thread.start()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final long clusterStateVersion = randomNonNegativeLong()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testWaitForAllocationIdToBeInSyncCanBeInterrupted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "barrier.await()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertFalse(tracker.pendingInSync.contains(trackingAllocationId.getId()))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertBusy(null)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final AllocationId trackingAllocationId = AllocationId.newInitializing()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(complete.get())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testWaitForAllocationIdToBeInSync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "updateLocalCheckpoint(tracker,trackingAllocationId.getId(),elements.get(i))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "thread.join()@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "thread.start()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(tracker.getTrackedLocalCheckpointForShard(trackingAllocationId.getId()).inSync)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "updateLocalCheckpoint(tracker,trackingAllocationId.getId(),randomIntBetween(globalCheckpoint,64))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final int localCheckpoint = randomIntBetween(1,32)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final AtomicBoolean interrupted = new AtomicBoolean()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "barrier.await()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
8->16 [style = bold, label=""];
20->35 [style = solid, label="i"];
27->1 [style = dotted, label="true"];
29->14 [style = solid, label="trackingAllocationId"];
4->14 [style = solid, label="clusterStateVersion"];
32->12 [style = bold, label=""];
20->10 [style = solid, label="i"];
29->0 [style = bold, label=""];
38->12 [style = bold, label=""];
22->13 [style = solid, label="elements"];
10->35 [style = bold, label=""];
27->23 [style = dotted, label="true"];
14->17 [style = bold, label=""];
11->20 [style = solid, label="i"];
25->6 [style = bold, label=""];
12->9 [style = bold, label=""];
15->40 [style = dashed, label="0"];
1->23 [style = bold, label=""];
11->35 [style = solid, label="i"];
10->20 [style = dotted, label="true"];
35->7 [style = bold, label=""];
11->33 [style = solid, label="i"];
22->13 [style = bold, label=""];
27->36 [style = dotted, label="true"];
33->7 [style = bold, label=""];
18->31 [style = bold, label=""];
19->20 [style = bold, label=""];
27->30 [style = bold, label=""];
26->1 [style = bold, label=""];
30->26 [style = bold, label=""];
31->2 [style = bold, label=""];
30->36 [style = dashed, label="0"];
28->24 [style = solid, label="inSyncAllocationId"];
20->33 [style = solid, label="i"];
13->11 [style = bold, label=""];
7->5 [style = bold, label=""];
28->14 [style = solid, label="inSyncAllocationId"];
21->22 [style = bold, label=""];
4->24 [style = solid, label="clusterStateVersion"];
27->24 [style = dotted, label="false"];
29->41 [style = solid, label="trackingAllocationId"];
24->8 [style = bold, label=""];
12->9 [style = solid, label="localCheckpoint"];
4->41 [style = dashed, label="0"];
23->31 [style = bold, label=""];
11->10 [style = solid, label="i"];
28->29 [style = bold, label=""];
1->37 [style = dashed, label="0"];
4->14 [style = bold, label=""];
16->18 [style = bold, label=""];
10->43 [style = bold, label=""];
6->21 [style = bold, label=""];
27->18 [style = dotted, label="false"];
10->35 [style = dotted, label="true"];
0->41 [style = bold, label=""];
5->19 [style = bold, label=""];
15->28 [style = bold, label=""];
0->36 [style = solid, label="tracker"];
11->10 [style = bold, label=""];
10->19 [style = dotted, label="true"];
9->42 [style = solid, label="globalCheckpoint"];
9->3 [style = bold, label=""];
27->24 [style = bold, label=""];
10->33 [style = bold, label=""];
17->13 [style = bold, label=""];
27->8 [style = dotted, label="false"];
37->39 [style = bold, label=""];
9->30 [style = solid, label="globalCheckpoint"];
9->17 [style = solid, label="globalCheckpoint"];
27->36 [style = bold, label=""];
3->40 [style = bold, label=""];
27->16 [style = dotted, label="false"];
9->36 [style = solid, label="globalCheckpoint"];
10->27 [style = bold, label=""];
27->26 [style = dotted, label="true"];
42->17 [style = bold, label=""];
3->15 [style = bold, label=""];
43->37 [style = bold, label=""];
36->26 [style = bold, label=""];
40->28 [style = bold, label=""];
10->33 [style = dotted, label="true"];
34->12 [style = bold, label=""];
10->5 [style = dotted, label="true"];
0->35 [style = solid, label="tracker"];
20->10 [style = bold, label=""];
27->30 [style = dotted, label="true"];
28->41 [style = solid, label="inSyncAllocationId"];
0->4 [style = bold, label=""];
28->0 [style = solid, label="inSyncAllocationId"];
10->7 [style = dotted, label="true"];
41->42 [style = bold, label=""];
33->35 [style = dashed, label="0"];
}
