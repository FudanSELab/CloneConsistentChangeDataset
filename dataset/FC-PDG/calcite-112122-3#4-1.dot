digraph {
20 [style = filled, label = "AggResultContext result@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "BlockBuilder thenBlock = result.nestBlock()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "Expression defaultValue = rexArgs.size() == 3? currentRowTranslator.translate(rexArgs.get(2),res.type): getDefaultValue(res.type)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Expression rowInRange = winResult.rowInPartition(dstIndex)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Expression offset@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "BlockStatement thenBranch = thenBlock.toBlock()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "WinAggResultContext winResult = (WinAggResultContext)result@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "offset = currentRowTranslator.translate(rexArgs.get(1),)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "result.exitBlock()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ParameterExpression res = Expressions.parameter(0,info.returnType(),result.currentBlock().newName(isLead? \"lead\": \"lag\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "result.currentBlock().add(Expressions.ifThenElse(rowInRange,thenBranch,Expressions.statement(Expressions.assign(res,defaultValue))))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Expression defaultValue = getDefaultValue(res.type)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Expression nthValue = winResult.rowTranslator(dstIndex).translate(rexArgs.get(0),res.type)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "implementResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ParameterExpression res = Expressions.parameter(0,info.returnType(),result.currentBlock().newName(\"nth\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "RexToLixTranslator currentRowTranslator = winResult.rowTranslator(winResult.computeIndex(Expressions.constant(0),SeekType.SET))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "AggResultContext result@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "result.exitBlock()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rexArgs.size() >= 2@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "RexToLixTranslator currentRowTranslator = winResult.rowTranslator(winResult.computeIndex(Expressions.constant(0),SeekType.START))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BlockStatement thenBranch = thenBlock.toBlock()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "AggResultContext result@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "result.currentBlock().add(Expressions.declare(0,res,null))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<RexNode> rexArgs = winResult.rexArguments()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return res@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "implementResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "offset = Expressions.negate(offset)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Expression dstIndex = winResult.computeIndex(Expressions.subtract(currentRowTranslator.translate(rexArgs.get(1),),Expressions.constant(1)),SeekType.START)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Expression rowInRange = winResult.rowInPartition(dstIndex)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BlockBuilder thenBlock = result.nestBlock()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Expression dstIndex = winResult.computeIndex(offset,SeekType.SET)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "!isLead@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "offset = Expressions.constant(1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "implementResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "thenBlock.add(Expressions.statement(Expressions.assign(res,lagResult)))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "thenBlock.add(Expressions.statement(Expressions.assign(res,nthValue)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "return res@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "AggContext info@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "Expression lagResult = winResult.rowTranslator(dstIndex).translate(rexArgs.get(0),res.type)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "AggContext info@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "result.currentBlock().add(Expressions.ifThenElse(rowInRange,thenBranch,Expressions.statement(Expressions.assign(res,defaultValue))))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "result.currentBlock().add(Expressions.declare(0,res,null))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->0 [style = solid, label="result"];
2->17 [style = bold, label=""];
28->29 [style = bold, label=""];
8->10 [style = bold, label=""];
0->16 [style = bold, label=""];
17->5 [style = bold, label=""];
15->20 [style = dashed, label="0"];
27->32 [style = bold, label=""];
7->11 [style = bold, label=""];
24->29 [style = solid, label="res"];
8->37 [style = dashed, label="0"];
12->17 [style = solid, label="res"];
9->0 [style = bold, label=""];
25->33 [style = bold, label=""];
31->35 [style = dotted, label="true"];
19->20 [style = dotted, label="true"];
1->7 [style = solid, label="dstIndex"];
16->24 [style = bold, label=""];
37->41 [style = bold, label=""];
41->21 [style = bold, label=""];
12->5 [style = solid, label="res"];
19->18 [style = dotted, label="true"];
31->36 [style = dotted, label="false"];
22->31 [style = bold, label=""];
10->3 [style = bold, label=""];
31->36 [style = bold, label=""];
36->40 [style = solid, label="offset"];
15->0 [style = solid, label="result"];
24->39 [style = solid, label="res"];
32->34 [style = bold, label=""];
27->28 [style = solid, label="rowInRange"];
5->14 [style = bold, label=""];
2->5 [style = solid, label="defaultValue"];
12->6 [style = bold, label=""];
38->39 [style = bold, label=""];
1->7 [style = bold, label=""];
33->27 [style = bold, label=""];
2->38 [style = dashed, label="0"];
39->28 [style = bold, label=""];
12->8 [style = solid, label="res"];
19->0 [style = bold, label=""];
26->22 [style = bold, label=""];
21->38 [style = bold, label=""];
38->28 [style = solid, label="defaultValue"];
35->25 [style = bold, label=""];
40->33 [style = solid, label="offset"];
35->40 [style = solid, label="offset"];
6->1 [style = bold, label=""];
33->27 [style = solid, label="dstIndex"];
21->28 [style = solid, label="thenBranch"];
13->8 [style = solid, label="nthValue"];
24->26 [style = bold, label=""];
36->25 [style = bold, label=""];
40->33 [style = bold, label=""];
31->35 [style = bold, label=""];
3->2 [style = bold, label=""];
7->5 [style = solid, label="rowInRange"];
34->37 [style = bold, label=""];
20->0 [style = solid, label="result"];
25->40 [style = dotted, label="true"];
12->24 [style = dashed, label="0"];
3->5 [style = solid, label="thenBranch"];
11->13 [style = bold, label=""];
30->23 [style = dotted, label="true"];
35->33 [style = solid, label="offset"];
9->4 [style = dotted, label="true"];
9->15 [style = dotted, label="true"];
30->0 [style = bold, label=""];
12->14 [style = solid, label="res"];
13->8 [style = bold, label=""];
30->15 [style = dotted, label="true"];
13->34 [style = dashed, label="0"];
16->12 [style = bold, label=""];
36->33 [style = solid, label="offset"];
24->28 [style = solid, label="res"];
25->40 [style = bold, label=""];
24->37 [style = solid, label="res"];
34->37 [style = solid, label="lagResult"];
}
