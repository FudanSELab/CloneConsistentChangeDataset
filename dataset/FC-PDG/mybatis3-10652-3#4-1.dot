digraph {
8 [style = filled, label = "when(cs.getInt(1)).thenReturn(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldGetResultFromCallableStatement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "fail()@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(INSTANT,TYPE_HANDLER.getResult(rs,\"column\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldGetResultFromResultSetByName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(rs.getInt(\"column\")).thenReturn(0)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "TYPE_HANDLER.getResult(rs,\"column\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(cs.getInt(1)).thenReturn(INSTANT.getValue())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shouldGetResultFromResultSetByName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "when(rs.getInt(\"column\")).thenReturn(INSTANT.getValue(),0)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "when(rs.getInt(\"column\")).thenReturn(INSTANT.getValue())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(INSTANT,TYPE_HANDLER.getResult(cs,1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "TYPE_HANDLER.getResult(cs,1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->3 [style = bold, label=""];
5->8 [style = dashed, label="0"];
11->8 [style = bold, label=""];
5->1 [style = bold, label=""];
8->10 [style = bold, label=""];
10->3 [style = bold, label=""];
0->11 [style = dashed, label="0"];
6->0 [style = bold, label=""];
9->12 [style = bold, label=""];
4->12 [style = dashed, label="0"];
1->10 [style = dashed, label="0"];
4->6 [style = dashed, label="0"];
2->4 [style = bold, label=""];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
4->0 [style = bold, label=""];
0->5 [style = bold, label=""];
12->11 [style = bold, label=""];
}
