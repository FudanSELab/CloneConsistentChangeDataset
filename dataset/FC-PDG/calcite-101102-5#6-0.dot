digraph {
106 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
92 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(1, 2, 4, 5(\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "groupSets.add(ImmutableBitSet.of(2,4,5))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "testInduceGroupingType1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "groupSets.clear()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "groupSets.add(ImmutableBitSet.of(5))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "testInduceGroupingType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "final List<ImmutableBitSet> groupSets0 = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@76@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "groupSets.clear()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "groupSets = new ArrayList<>()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "groupSets.add(groupSet)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
102 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{}@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "groupSets = new ArrayList<>()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets),is(true))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(2(\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "groupSets.add(groupSet0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(4, 5, 1, 2(\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "IllegalArgumentException ignore@@@71@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "groupSets.clear()@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet0,groupSets),is(true))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4,5))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "groupSets.clear()@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "groupSets = new ArrayList<>()@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets1))@@@74@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "groupSets.clear()@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
88 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "fail(\"expected error, got \" + x)@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "groupSets.clear()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
91 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@79@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "final ImmutableBitSet groupSet0 = ImmutableBitSet.of(2)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
81 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "groupSets = new ArrayList<>()@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "IllegalArgumentException ignore@@@38@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "groupSets.clear()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets0),is(false))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "{}@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "groupSets.clear()@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testInduceGroupingType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "groupSets.clear()@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "groupSets.clear()@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
56 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets0))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
66 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(5, 4, 2, 1(\"))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet0,groupSets))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
98 [style = filled, label = "final List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "List<ImmutableBitSet> groupSets1 = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@64@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
85 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
107 [style = filled, label = "groupSets = new ArrayList<>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "groupSets = new ArrayList<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
77->89 [style = bold, label=""];
4->44 [style = solid, label="groupSet"];
37->0 [style = bold, label=""];
28->106 [style = solid, label="groupSets"];
99->72 [style = bold, label=""];
98->74 [style = solid, label="groupSets"];
98->19 [style = bold, label=""];
45->96 [style = bold, label=""];
35->41 [style = bold, label=""];
97->80 [style = bold, label=""];
107->104 [style = solid, label="groupSets"];
4->60 [style = solid, label="groupSet"];
24->32 [style = bold, label=""];
0->23 [style = solid, label="groupSets"];
6->28 [style = solid, label="groupSets"];
4->74 [style = solid, label="groupSet"];
43->81 [style = bold, label=""];
102->104 [style = solid, label="groupSet"];
89->68 [style = bold, label=""];
74->92 [style = bold, label=""];
107->104 [style = bold, label=""];
4->2 [style = solid, label="groupSet"];
59->78 [style = bold, label=""];
4->20 [style = solid, label="groupSet"];
93->57 [style = bold, label=""];
41->71 [style = dashed, label="0"];
2->53 [style = bold, label=""];
29->2 [style = solid, label="groupSets"];
58->99 [style = solid, label="groupSets0"];
4->10 [style = solid, label="groupSet"];
7->79 [style = bold, label=""];
41->26 [style = solid, label="groupSets"];
4->19 [style = solid, label="groupSet"];
84->4 [style = bold, label=""];
34->17 [style = bold, label=""];
29->106 [style = bold, label=""];
98->57 [style = solid, label="groupSets"];
4->97 [style = solid, label="groupSet"];
6->74 [style = dashed, label="0"];
67->57 [style = bold, label=""];
98->44 [style = solid, label="groupSets"];
4->86 [style = solid, label="groupSet"];
40->31 [style = bold, label=""];
98->64 [style = solid, label="groupSets"];
88->50 [style = bold, label=""];
50->63 [style = bold, label=""];
4->98 [style = bold, label=""];
72->16 [style = bold, label=""];
4->26 [style = solid, label="groupSet"];
15->13 [style = bold, label=""];
54->49 [style = bold, label=""];
73->93 [style = bold, label=""];
48->2 [style = bold, label=""];
8->35 [style = solid, label="groupSets"];
102->29 [style = solid, label="groupSet"];
87->46 [style = bold, label=""];
4->12 [style = solid, label="groupSet"];
30->42 [style = bold, label=""];
4->14 [style = solid, label="groupSet"];
22->12 [style = solid, label="groupSets"];
3->11 [style = bold, label=""];
81->77 [style = bold, label=""];
4->55 [style = solid, label="groupSet"];
57->60 [style = bold, label=""];
33->101 [style = solid, label="groupSets"];
11->12 [style = bold, label=""];
100->65 [style = bold, label=""];
25->7 [style = bold, label=""];
80->90 [style = bold, label=""];
71->75 [style = bold, label=""];
20->29 [style = dashed, label="0"];
106->107 [style = bold, label=""];
19->37 [style = bold, label=""];
66->69 [style = bold, label=""];
86->71 [style = bold, label=""];
57->60 [style = solid, label="groupSets1"];
94->85 [style = bold, label=""];
4->28 [style = solid, label="groupSet"];
29->20 [style = bold, label=""];
6->38 [style = bold, label=""];
0->23 [style = bold, label=""];
4->91 [style = solid, label="groupSet"];
17->2 [style = bold, label=""];
4->102 [style = dashed, label="0"];
58->76 [style = bold, label=""];
5->43 [style = dashed, label="0"];
53->87 [style = bold, label=""];
98->91 [style = solid, label="groupSets"];
96->82 [style = bold, label=""];
39->25 [style = bold, label=""];
20->74 [style = bold, label=""];
31->28 [style = bold, label=""];
98->77 [style = solid, label="groupSets"];
44->66 [style = bold, label=""];
83->55 [style = bold, label=""];
64->67 [style = solid, label="x"];
105->101 [style = bold, label=""];
28->29 [style = bold, label=""];
78->88 [style = bold, label=""];
90->59 [style = bold, label=""];
23->5 [style = bold, label=""];
70->14 [style = bold, label=""];
4->37 [style = solid, label="groupSet"];
4->7 [style = solid, label="groupSet"];
98->86 [style = solid, label="groupSets"];
65->89 [style = solid, label="groupSet0"];
102->19 [style = solid, label="groupSet"];
21->34 [style = bold, label=""];
38->16 [style = bold, label=""];
8->57 [style = dashed, label="0"];
12->36 [style = bold, label=""];
29->79 [style = dashed, label="0"];
102->101 [style = solid, label="groupSet"];
33->98 [style = dashed, label="0"];
102->33 [style = bold, label=""];
4->33 [style = bold, label=""];
52->22 [style = bold, label=""];
10->6 [style = bold, label=""];
8->35 [style = bold, label=""];
42->14 [style = bold, label=""];
79->11 [style = bold, label=""];
55->70 [style = bold, label=""];
30->14 [style = solid, label="groupSets"];
22->8 [style = solid, label="groupSets"];
98->7 [style = solid, label="groupSets"];
31->10 [style = bold, label=""];
51->64 [style = bold, label=""];
32->40 [style = bold, label=""];
4->99 [style = solid, label="groupSet"];
11->47 [style = bold, label=""];
36->8 [style = bold, label=""];
22->39 [style = bold, label=""];
27->24 [style = bold, label=""];
65->77 [style = solid, label="groupSet0"];
18->8 [style = bold, label=""];
64->67 [style = bold, label=""];
61->54 [style = bold, label=""];
33->19 [style = bold, label=""];
5->10 [style = solid, label="groupSets"];
98->97 [style = solid, label="groupSets"];
102->31 [style = solid, label="groupSet"];
58->76 [style = solid, label="groupSets0"];
85->83 [style = bold, label=""];
37->100 [style = bold, label=""];
98->55 [style = solid, label="groupSets"];
22->61 [style = dashed, label="0"];
82->51 [style = bold, label=""];
63->44 [style = bold, label=""];
16->15 [style = bold, label=""];
36->56 [style = bold, label=""];
19->105 [style = bold, label=""];
95->86 [style = bold, label=""];
62->97 [style = bold, label=""];
98->56 [style = solid, label="groupSets"];
92->48 [style = bold, label=""];
65->43 [style = solid, label="groupSet0"];
65->43 [style = bold, label=""];
47->12 [style = bold, label=""];
9->4 [style = bold, label=""];
76->99 [style = bold, label=""];
23->31 [style = solid, label="groupSets"];
4->35 [style = solid, label="groupSet"];
1->18 [style = bold, label=""];
56->61 [style = bold, label=""];
98->89 [style = solid, label="groupSets"];
103->102 [style = bold, label=""];
14->45 [style = bold, label=""];
33->37 [style = solid, label="groupSets"];
7->3 [style = bold, label=""];
26->30 [style = bold, label=""];
60->95 [style = bold, label=""];
20->21 [style = bold, label=""];
4->64 [style = solid, label="groupSet"];
98->37 [style = solid, label="groupSets"];
98->20 [style = solid, label="groupSets"];
75->91 [style = bold, label=""];
5->31 [style = bold, label=""];
21->106 [style = dashed, label="0"];
49->94 [style = bold, label=""];
4->23 [style = solid, label="groupSet"];
4->56 [style = solid, label="groupSet"];
41->26 [style = bold, label=""];
5->27 [style = bold, label=""];
69->52 [style = bold, label=""];
2->22 [style = bold, label=""];
101->23 [style = bold, label=""];
46->62 [style = bold, label=""];
4->76 [style = solid, label="groupSet"];
102->106 [style = solid, label="groupSet"];
13->28 [style = bold, label=""];
68->58 [style = bold, label=""];
12->36 [style = solid, label="x"];
}
