digraph {
4 [style = filled, label = "assertEquals(,rowPhysType.fieldClass(0))@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RelDataType columnType = TYPE_FACTORY.createStructType(ImmutableList.of(TYPE_FACTORY.createSqlType(SqlTypeName.INTEGER),TYPE_FACTORY.createSqlType(SqlTypeName.VARCHAR)),ImmutableList.of(\"intField\",\"strField\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testFieldClassOnColumnOfOneFieldStructType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "RelDataType columnType = TYPE_FACTORY.createStructType(ImmutableList.of(TYPE_FACTORY.createSqlType(SqlTypeName.INTEGER)),ImmutableList.of(\"intField\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testFieldClassOnColumnOfTwoFieldStructType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "RelDataType rowType = TYPE_FACTORY.createStructType(ImmutableList.of(columnType),ImmutableList.of(\"structField\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PhysType rowPhysType = PhysTypeImpl.of(TYPE_FACTORY,rowType,JavaRowFormat.ARRAY)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testFieldClassOnColumnOfOneFieldStructType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->1 [style = bold, label=""];
6->2 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
3->1 [style = bold, label=""];
0->4 [style = bold, label=""];
1->6 [style = dashed, label="0"];
2->0 [style = solid, label="rowType"];
7->6 [style = bold, label=""];
6->2 [style = solid, label="columnType"];
1->2 [style = solid, label="columnType"];
}
