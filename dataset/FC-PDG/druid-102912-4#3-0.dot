digraph {
7 [style = filled, label = "AWSCredentialsProvider provider = awsModule.getAWSCredentialsProvider(config)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(credentials.getAWSSecretKey(),\"secretKeySample\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "AWSCredentialsProvider provider = awsModule.getAWSCredentialsProvider(config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AWSCredentials credentials = provider.getCredentials()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s3Module.getAmazonS3Client(provider,new AWSProxyConfig(),new AWSEndpointConfig(),new AWSClientConfig(),new S3StorageConfig(new NoopServerSideEncryption()))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(config.getAccessKey()).andReturn(new DefaultPasswordProvider(\"accessKeySample\")).atLeastOnce()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(\"accessKeySample\",sessionCredentials.getAWSAccessKeyId())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "EasyMock.expect(config.getFileSessionCredentials()).andReturn(file.getAbsolutePath()).atLeastOnce()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AWSSessionCredentials sessionCredentials = (AWSSessionCredentials)credentials@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(credentials.getAWSAccessKeyId(),\"accessKeySample\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(sessionCredentials.getSessionToken(),\"sessionTokenSample\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertTrue(credentials instanceof AWSSessionCredentials)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "testWithFileSessionCredentials['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"secretKeySample\",sessionCredentials.getAWSSecretKey())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "File file = folder.newFile()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "AWSCredentialsConfig config = EasyMock.createMock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(sessionCredentials.getAWSSecretKey(),\"secretKeySample\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testWithFileSessionCredentials['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(sessionCredentials.getAWSAccessKeyId(),\"accessKeySample\")@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(\"sessionTokenSample\",sessionCredentials.getSessionToken())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "AWSCredentials credentials = provider.getCredentials()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testWithFixedAWSKeys['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "EasyMock.expect(config.getAccessKey()).andReturn(new DefaultPasswordProvider(\"\"))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.replay(config)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertTrue(credentials instanceof AWSSessionCredentials)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "s3Module.getAmazonS3Client(provider,new AWSProxyConfig(),new AWSEndpointConfig(),new AWSClientConfig(),new S3StorageConfig(new NoopServerSideEncryption()))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "out.write(\"sessionToken=sessionTokenSamplesecretKey=secretKeySampleaccessKey=accessKeySample\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
11->16 [style = bold, label=""];
22->25 [style = bold, label=""];
7->1 [style = bold, label=""];
19->20 [style = bold, label=""];
9->23 [style = solid, label="config"];
8->20 [style = dashed, label="0"];
13->17 [style = dashed, label="0"];
28->9 [style = bold, label=""];
2->9 [style = bold, label=""];
13->25 [style = dashed, label="0"];
16->19 [style = bold, label=""];
1->11 [style = solid, label="credentials"];
24->22 [style = bold, label=""];
13->11 [style = bold, label=""];
1->13 [style = bold, label=""];
4->7 [style = bold, label=""];
6->15 [style = bold, label=""];
1->17 [style = bold, label=""];
3->19 [style = dashed, label="0"];
5->16 [style = dashed, label="0"];
25->27 [style = bold, label=""];
11->5 [style = bold, label=""];
21->26 [style = bold, label=""];
0->10 [style = bold, label=""];
23->24 [style = bold, label=""];
27->4 [style = bold, label=""];
7->12 [style = solid, label="provider"];
6->26 [style = dashed, label="0"];
3->8 [style = bold, label=""];
15->0 [style = bold, label=""];
26->23 [style = bold, label=""];
9->7 [style = solid, label="config"];
20->12 [style = bold, label=""];
18->9 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
9->21 [style = bold, label=""];
9->24 [style = solid, label="config"];
1->13 [style = solid, label="credentials"];
14->21 [style = dashed, label="0"];
1->17 [style = solid, label="credentials"];
14->6 [style = bold, label=""];
8->12 [style = bold, label=""];
9->4 [style = solid, label="config"];
17->11 [style = bold, label=""];
24->4 [style = solid, label="provider"];
}
