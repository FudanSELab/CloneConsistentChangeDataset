digraph {
27 [style = filled, label = "subManyFieldsWithValues['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "values.put(\"c\",3)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "values.clear()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "values.clear()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "subManyFieldsWithValues['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "values.put(\"b\",2)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(24L,result)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(269.5791D,result)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "values.put(\"c\",3.1)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "values.put(\"b\",2)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "values.put(\"d\",4.1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "values.put(\"c\",3)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "multManyFieldsWithValues['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(-8L,result)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "values.clear()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "values.put(\"d\",4)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.clear()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(.8D,result)@@@28@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"sub(a,b,c,d)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "values.put(\"a\",1.1)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Object result@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "StreamEvaluator evaluator = factory.constructEvaluator(\"mult(a,b,c,d)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "values.put(\"a\",10.1)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(result instanceof Long)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(result instanceof Double)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(-8D,result)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(26.4D,result)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "values.put(\"d\",4)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "values.clear()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "values.put(\"b\",2.1)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "values.put(\"a\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result = evaluator.evaluate(new Tuple(values))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19->33 [style = bold, label=""];
16->3 [style = bold, label=""];
0->16 [style = bold, label=""];
18->24 [style = bold, label=""];
34->9 [style = bold, label=""];
1->8 [style = bold, label=""];
4->17 [style = bold, label=""];
3->31 [style = dashed, label="0"];
0->31 [style = solid, label="result"];
11->4 [style = bold, label=""];
23->15 [style = bold, label=""];
26->33 [style = dashed, label="0"];
28->9 [style = bold, label=""];
14->16 [style = solid, label="result"];
31->18 [style = bold, label=""];
30->32 [style = bold, label=""];
20->19 [style = solid, label="result"];
21->25 [style = bold, label=""];
25->29 [style = bold, label=""];
25->34 [style = solid, label="result"];
10->29 [style = dashed, label="0"];
17->23 [style = bold, label=""];
7->33 [style = solid, label="result"];
2->12 [style = bold, label=""];
24->5 [style = bold, label=""];
9->6 [style = bold, label=""];
3->18 [style = bold, label=""];
6->2 [style = bold, label=""];
29->28 [style = bold, label=""];
20->7 [style = solid, label="result"];
4->32 [style = dashed, label="0"];
27->4 [style = bold, label=""];
10->34 [style = bold, label=""];
14->0 [style = bold, label=""];
10->13 [style = bold, label=""];
22->20 [style = bold, label=""];
7->26 [style = solid, label="result"];
7->19 [style = solid, label="result"];
25->29 [style = solid, label="result"];
19->26 [style = bold, label=""];
16->31 [style = bold, label=""];
14->0 [style = solid, label="result"];
12->14 [style = bold, label=""];
0->3 [style = solid, label="result"];
8->21 [style = bold, label=""];
25->13 [style = solid, label="result"];
25->10 [style = bold, label=""];
0->16 [style = solid, label="result"];
25->10 [style = solid, label="result"];
13->9 [style = bold, label=""];
20->7 [style = bold, label=""];
5->22 [style = bold, label=""];
7->19 [style = bold, label=""];
13->34 [style = dashed, label="0"];
32->17 [style = bold, label=""];
15->1 [style = bold, label=""];
}
