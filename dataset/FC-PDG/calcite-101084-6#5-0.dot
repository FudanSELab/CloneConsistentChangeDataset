digraph {
5 [style = filled, label = "final RexNode node1 = f.eq(f.i,f.literal(30))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "f.checkImplies(node1,node1)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final RexNode node4 = f.le(f.i,f.literal(10))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "f.checkImplies(iNe10,iNe10)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "f.checkNotImplies(node3,node1)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "f.checkImplies(iEq30,iNe10)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "final RexNode node6 = f.ne(f.i,f.literal(10))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSimpleEq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "f.checkImplies(node1,node3)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testSimpleLesserCond['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "f.checkImplies(node1,node2)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testSimpleEq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "final RexNode node2 = f.lt(f.i,f.literal(30))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "f.checkNotImplies(iNe10,iEq30)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "final RexNode node5 = f.eq(f.i,f.literal(10))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "f.checkNotImplies(node2,node1)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RexNode iNe10 = f.ne(f.i,f.literal(10))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "f.checkNotImplies(iNe30,iEq30)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "final RexNode node3 = f.le(f.i,f.literal(30))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final RexNode node2 = f.ne(f.i,f.literal(10))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "f.checkImplies(node5,node2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final RexNode node1 = f.lt(f.i,f.literal(10))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "f.checkImplies(node1,node2)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RexNode iEq30 = f.eq(f.i,f.literal(30))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "f.checkNotImplies(node4,node6)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "f.checkNotImplies(node2,node5)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final RexNode iNe30 = f.ne(f.i,f.literal(30))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final Fixture f = new Fixture()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "f.checkNotImplies(node1,node6)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "f.checkImplies(iEq30,iEq30)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "f.checkNotImplies(node2,node1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "f.checkNotImplies(node1,node5)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
4->3 [style = bold, label=""];
0->16 [style = bold, label=""];
1->4 [style = bold, label=""];
28->20 [style = solid, label="node2"];
29->17 [style = bold, label=""];
16->30 [style = solid, label="node1"];
0->13 [style = bold, label=""];
16->18 [style = solid, label="node1"];
7->10 [style = bold, label=""];
20->26 [style = bold, label=""];
2->1 [style = bold, label=""];
23->27 [style = solid, label="node3"];
13->14 [style = solid, label="iEq30"];
16->31 [style = solid, label="node1"];
12->11 [style = bold, label=""];
22->21 [style = bold, label=""];
27->31 [style = bold, label=""];
30->25 [style = bold, label=""];
13->11 [style = solid, label="iEq30"];
28->30 [style = solid, label="node2"];
6->0 [style = bold, label=""];
22->20 [style = solid, label="node5"];
22->26 [style = solid, label="node5"];
21->30 [style = bold, label=""];
11->9 [style = bold, label=""];
24->22 [style = bold, label=""];
15->7 [style = solid, label="iNe10"];
19->0 [style = bold, label=""];
5->3 [style = solid, label="node1"];
14->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
8->0 [style = bold, label=""];
23->31 [style = solid, label="node3"];
25->27 [style = bold, label=""];
2->3 [style = solid, label="node2"];
5->16 [style = dashed, label="0"];
5->2 [style = bold, label=""];
23->24 [style = bold, label=""];
18->29 [style = bold, label=""];
16->25 [style = solid, label="node1"];
24->17 [style = solid, label="node4"];
16->28 [style = bold, label=""];
3->9 [style = dashed, label="0"];
28->23 [style = bold, label=""];
21->29 [style = solid, label="node6"];
15->14 [style = solid, label="iNe10"];
28->25 [style = solid, label="node2"];
28->26 [style = solid, label="node2"];
22->18 [style = solid, label="node5"];
2->4 [style = solid, label="node2"];
9->14 [style = bold, label=""];
2->28 [style = dashed, label="0"];
16->27 [style = solid, label="node1"];
15->12 [style = bold, label=""];
12->10 [style = solid, label="iNe30"];
13->15 [style = bold, label=""];
5->4 [style = solid, label="node1"];
21->17 [style = solid, label="node6"];
4->11 [style = dashed, label="0"];
31->20 [style = bold, label=""];
15->9 [style = solid, label="iNe10"];
16->29 [style = solid, label="node1"];
13->7 [style = solid, label="iEq30"];
5->1 [style = solid, label="node1"];
13->10 [style = solid, label="iEq30"];
0->5 [style = bold, label=""];
26->18 [style = bold, label=""];
}
