digraph {
11 [style = filled, label = "lowerBounds != null && lowerBounds.containsKey(id)@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Literal<T> lit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "return ROWS_MUST_MATCH@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "return ROWS_MIGHT_MATCH@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "eq['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "T lower = Conversions.fromByteBuffer(struct.field(id).type(),lowerBounds.get(id))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "upperBounds != null && upperBounds.containsKey(id)@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Integer id = ref.fieldId()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cmp > 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return ROWS_MUST_MATCH@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "BoundReference<T> ref@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Preconditions.checkNotNull(field,\"Cannot filter by nested column: %s\",schema.findField(id))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "T upper = Conversions.fromByteBuffer(ref.type(),upperBounds.get(id))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "T lower = Conversions.fromByteBuffer(ref.type(),lowerBounds.get(id))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "int cmp = lit.comparator().compare(upper,lit.value())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "return ROWS_CANNOT_MATCH@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int cmp = lit.comparator().compare(lower,lit.value())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "T upper = Conversions.fromByteBuffer(field.type(),upperBounds.get(id))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Types.NestedField field = struct.field(id)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Literal<T> lit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "cmp < 0@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "eq['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "notEq['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "BoundReference<T> ref@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "return ROWS_MIGHT_NOT_MATCH@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return ROWS_CANNOT_MATCH@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->16 [style = bold, label=""];
12->25 [style = bold, label=""];
0->19 [style = dashed, label="0"];
5->22 [style = dashed, label="0"];
11->2 [style = dotted, label="true"];
7->12 [style = solid, label="cmp"];
17->14 [style = dotted, label="true"];
2->13 [style = solid, label="lower"];
6->4 [style = bold, label=""];
11->10 [style = dotted, label="true"];
4->19 [style = solid, label="id"];
4->2 [style = solid, label="id"];
16->25 [style = bold, label=""];
0->7 [style = bold, label=""];
2->13 [style = bold, label=""];
19->7 [style = solid, label="upper"];
12->15 [style = bold, label=""];
15->25 [style = dashed, label="0"];
4->11 [style = solid, label="id"];
4->0 [style = solid, label="id"];
4->11 [style = bold, label=""];
16->19 [style = bold, label=""];
22->16 [style = bold, label=""];
18->13 [style = bold, label=""];
16->0 [style = bold, label=""];
16->15 [style = bold, label=""];
9->15 [style = bold, label=""];
6->1 [style = dotted, label="true"];
2->18 [style = dashed, label="0"];
6->14 [style = dotted, label="true"];
11->18 [style = bold, label=""];
21->23 [style = dotted, label="true"];
11->16 [style = bold, label=""];
10->22 [style = dotted, label="true"];
4->18 [style = solid, label="id"];
16->7 [style = dotted, label="true"];
14->26 [style = dashed, label="0"];
12->24 [style = bold, label=""];
11->2 [style = bold, label=""];
0->7 [style = solid, label="upper"];
12->9 [style = bold, label=""];
17->4 [style = bold, label=""];
13->10 [style = solid, label="cmp"];
8->11 [style = bold, label=""];
10->22 [style = bold, label=""];
16->12 [style = dotted, label="true"];
21->26 [style = dotted, label="true"];
18->13 [style = solid, label="lower"];
7->12 [style = bold, label=""];
12->9 [style = dotted, label="true"];
4->8 [style = solid, label="id"];
16->0 [style = dotted, label="true"];
17->20 [style = dotted, label="true"];
3->8 [style = bold, label=""];
11->18 [style = dotted, label="true"];
4->3 [style = solid, label="id"];
24->25 [style = bold, label=""];
19->7 [style = bold, label=""];
13->10 [style = bold, label=""];
11->13 [style = dotted, label="true"];
21->4 [style = bold, label=""];
4->3 [style = bold, label=""];
9->24 [style = dashed, label="0"];
5->16 [style = bold, label=""];
10->5 [style = bold, label=""];
3->8 [style = solid, label="field"];
10->5 [style = dotted, label="true"];
16->19 [style = dotted, label="true"];
12->24 [style = dotted, label="true"];
4->16 [style = solid, label="id"];
}
