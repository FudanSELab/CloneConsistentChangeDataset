digraph {
10 [style = filled, label = "tester.checkBoolean(\"(multiset(1, 2, 3, 4, 2( \" + \"multiset union distinct multiset(1, 4, 5, 7, 8() \" + \"submultiset of multiset(1, 2, 3, 4, 5, 7, 8(\",Boolean.TRUE)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tester.checkScalar(\"cardinality(multiset('a', 'b', 'c'( \" + \"multiset union all multiset('c', 'd', 'e'()\",\"6\",\"INTEGER NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tester.checkBoolean(\"(multiset('a', 'b', 'c'( \" + \"multiset union distinct multiset('c', 'd', 'e'() \" + \"submultiset of multiset('a', 'b', 'c', 'd', 'e', 'c'(\",Boolean.TRUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkScalar(\"multiset(cast(null as boolean)( multiset union multiset(cast(null as boolean)(\",\"(null, null(\",\"BOOLEAN MULTISET NOT NULL\")@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tester.checkBoolean(\"(multiset(1, 2, 3, 4, 2( \" + \"multiset union all multiset(1, 4, 5, 7, 8() \" + \"submultiset of multiset(1, 1, 2, 2, 3, 4, 4, 5, 7, 8(\",Boolean.TRUE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "tester.checkScalar(\"cardinality(multiset('a', 'b', 'c'( \" + \"multiset union distinct multiset('c', 'd', 'e'()\",\"5\",\"INTEGER NOT NULL\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "tester.checkBoolean(\"(multiset('a', 'b', 'c'( \" + \"multiset union all multiset('c', 'd', 'e'() \" + \"submultiset of multiset('a', 'b', 'c', 'd', 'e'(\",Boolean.FALSE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tester.setFor(SqlStdOperatorTable.MULTISET_UNION_DISTINCT,VM_FENNEL,VM_JAVA)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tester.checkScalar(\"cardinality(multiset('a', 'b', 'c'( \" + \"multiset union distinct multiset('c', 'd', 'e'()\",\"5\",\"INTEGER NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "tester.checkScalar(\"multiset(cast(null as double)( multiset union multiset(cast(null as double)(\",\"(null, null(\",\"DOUBLE MULTISET NOT NULL\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testMultisetUnionOperator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tester.checkScalar(\"multiset(cast(null as boolean)( multiset union all multiset(cast(null as boolean)(\",\"(null, null(\",\"BOOLEAN MULTISET NOT NULL\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkBoolean(\"(multiset('a', 'b', 'c'( \" + \"multiset union distinct multiset('c', 'd', 'e'()\" + \" submultiset of multiset('a', 'b', 'c', 'd', 'e'(\",Boolean.TRUE)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.setFor(SqlStdOperatorTable.MULTISET_UNION,VM_FENNEL,VM_JAVA)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "tester.checkBoolean(\"(multiset(1, 2, 3, 4, 2( \" + \"multiset union distinct multiset(1, 4, 5, 7, 8() \" + \"submultiset of multiset(1, 2, 3, 4, 5, 7, 8(\",Boolean.TRUE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tester.checkScalar(\"cardinality(multiset(1, 2, 3, 4, 2( \" + \"multiset union distinct multiset(1, 4, 5, 7, 8()\",\"7\",\"INTEGER NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "tester.checkBoolean(\"(multiset('a', 'b', 'c'( \" + \"multiset union distinct multiset('c', 'd', 'e'()\" + \" submultiset of multiset('a', 'b', 'c', 'd', 'e'(\",Boolean.TRUE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testMultisetUnionOperator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "tester.checkScalar(\"cardinality(multiset(1, 2, 3, 4, 2( \" + \"multiset union distinct multiset(1, 4, 5, 7, 8()\",\"7\",\"INTEGER NOT NULL\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testMultisetUnionAllOperator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "tester.checkScalar(\"cardinality(multiset(1, 2, 3, 4, 2( \" + \"multiset union all multiset(1, 4, 5, 7, 8()\",\"10\",\"INTEGER NOT NULL\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tester.checkScalar(\"multiset(cast(null as double)( multiset union all multiset(cast(null as double)(\",\"(null, null(\",\"DOUBLE MULTISET NOT NULL\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tester.checkBoolean(\"multiset(1,2( submultiset of (multiset(2( multiset union multiset(1()\",Boolean.TRUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "tester.checkBoolean(\"(multiset(1, 2, 3, 4, 2( \" + \"multiset union all multiset(1, 4, 5, 7, 8() \" + \"submultiset of multiset(1, 2, 3, 4, 5, 7, 8(\",Boolean.FALSE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
6->21 [style = dashed, label="0"];
12->5 [style = bold, label=""];
18->15 [style = bold, label=""];
14->19 [style = bold, label=""];
11->12 [style = bold, label=""];
20->14 [style = bold, label=""];
9->10 [style = bold, label=""];
17->22 [style = bold, label=""];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
4->7 [style = bold, label=""];
1->11 [style = bold, label=""];
19->16 [style = bold, label=""];
5->20 [style = dashed, label="0"];
3->9 [style = bold, label=""];
2->0 [style = bold, label=""];
7->2 [style = bold, label=""];
15->20 [style = bold, label=""];
16->21 [style = bold, label=""];
11->18 [style = dashed, label="0"];
6->8 [style = bold, label=""];
8->4 [style = bold, label=""];
3->14 [style = dashed, label="0"];
21->17 [style = bold, label=""];
23->18 [style = bold, label=""];
}
