digraph {
14 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "timeAdaptor.advanceTime(testHarness,42)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "timeAdaptor.advanceTime(testHarness,15)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),1L,new TimeWindow(0,100))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "timeAdaptor.setIsEventTime(mockAssigner)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(mockAssigner.assignWindows(anyInt(),anyLong(),anyAssignerContext())).thenReturn(Arrays.asList(new TimeWindow(0,100)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Trigger<Integer,TimeWindow> mockTrigger = mockTrigger()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "timeAdaptor.advanceTime(testHarness,50L)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness = createWindowOperator(mockAssigner,mockTrigger,0L,intListDescriptor,mockWindowFunction)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),2L,new TimeWindow(0,100))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(1),null,null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "InternalWindowFunction<Iterable<Integer>,Void,Integer,TimeWindow> mockWindowFunction = mockWindowFunction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness.open()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(4,timeAdaptor.numTimers(testHarness))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),17L,new TimeWindow(0,100))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testTimerFiring['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,atLeastOnce(),42L,new TimeWindow(0,100))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Integer,Void> testHarness = createWindowOperator(mockAssigner,mockTrigger,0L,mockWindowFunction)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "testTimerFiring['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,17)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(3),null,null)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "timeAdaptor.verifyTriggerCallback(mockTrigger,times(0),1L,null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "WindowAssigner<Integer,TimeWindow> mockAssigner = mockTimeWindowAssigner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(0,timeAdaptor.numTimers(testHarness))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,timeAdaptor.numTimers(testHarness))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(3,timeAdaptor.numTimers(testHarness))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "TimeDomainAdaptor timeAdaptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "timeAdaptor.shouldDeleteTimerOnElement(mockTrigger,1)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(2,timeAdaptor.numTimers(testHarness))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testHarness.processElement(new StreamRecord<>(0,0L))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testDeletedTimerDoesNotFire['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "timeAdaptor.shouldRegisterTimerOnElement(mockTrigger,2)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40->4 [style = bold, label=""];
2->35 [style = bold, label=""];
7->3 [style = solid, label="mockTrigger"];
26->10 [style = bold, label=""];
20->9 [style = bold, label=""];
32->12 [style = bold, label=""];
11->1 [style = dotted, label="true"];
4->39 [style = dashed, label="0"];
38->31 [style = bold, label=""];
25->6 [style = bold, label=""];
7->31 [style = solid, label="mockTrigger"];
7->24 [style = solid, label="mockTrigger"];
24->39 [style = solid, label="testHarness"];
34->17 [style = bold, label=""];
30->14 [style = bold, label=""];
4->8 [style = bold, label=""];
7->10 [style = solid, label="mockTrigger"];
8->27 [style = bold, label=""];
19->18 [style = bold, label=""];
29->15 [style = solid, label="testHarness"];
24->38 [style = solid, label="testHarness"];
29->25 [style = solid, label="testHarness"];
23->31 [style = dashed, label="0"];
29->18 [style = solid, label="testHarness"];
17->29 [style = solid, label="mockAssigner"];
21->25 [style = bold, label=""];
22->24 [style = solid, label="mockWindowFunction"];
16->19 [style = bold, label=""];
7->29 [style = solid, label="mockTrigger"];
12->37 [style = bold, label=""];
3->0 [style = bold, label=""];
35->40 [style = bold, label=""];
7->40 [style = solid, label="mockTrigger"];
24->6 [style = solid, label="testHarness"];
22->29 [style = solid, label="mockWindowFunction"];
11->17 [style = bold, label=""];
7->4 [style = solid, label="mockTrigger"];
29->16 [style = bold, label=""];
24->18 [style = solid, label="testHarness"];
29->6 [style = solid, label="testHarness"];
3->35 [style = dashed, label="0"];
7->5 [style = solid, label="mockTrigger"];
27->14 [style = bold, label=""];
31->32 [style = bold, label=""];
4->39 [style = bold, label=""];
2->3 [style = bold, label=""];
34->36 [style = dotted, label="true"];
24->9 [style = solid, label="testHarness"];
17->13 [style = solid, label="mockAssigner"];
22->29 [style = bold, label=""];
29->9 [style = solid, label="testHarness"];
28->1 [style = dotted, label="true"];
7->22 [style = bold, label=""];
7->20 [style = solid, label="mockTrigger"];
14->23 [style = bold, label=""];
7->12 [style = solid, label="mockTrigger"];
29->14 [style = solid, label="testHarness"];
29->27 [style = solid, label="testHarness"];
7->26 [style = solid, label="mockTrigger"];
14->38 [style = dashed, label="0"];
24->15 [style = solid, label="testHarness"];
7->23 [style = solid, label="mockTrigger"];
28->17 [style = bold, label=""];
24->25 [style = solid, label="testHarness"];
17->13 [style = bold, label=""];
24->33 [style = solid, label="testHarness"];
17->24 [style = solid, label="mockAssigner"];
27->33 [style = dashed, label="0"];
24->27 [style = solid, label="testHarness"];
6->12 [style = bold, label=""];
10->20 [style = bold, label=""];
7->32 [style = solid, label="mockTrigger"];
12->15 [style = bold, label=""];
7->30 [style = solid, label="mockTrigger"];
24->29 [style = dashed, label="0"];
24->14 [style = solid, label="testHarness"];
14->33 [style = bold, label=""];
15->26 [style = bold, label=""];
39->30 [style = bold, label=""];
24->16 [style = bold, label=""];
5->2 [style = bold, label=""];
24->35 [style = solid, label="testHarness"];
1->36 [style = dashed, label="0"];
23->21 [style = bold, label=""];
0->4 [style = bold, label=""];
13->7 [style = bold, label=""];
18->5 [style = bold, label=""];
7->21 [style = solid, label="mockTrigger"];
33->38 [style = bold, label=""];
22->24 [style = bold, label=""];
24->37 [style = solid, label="testHarness"];
}
