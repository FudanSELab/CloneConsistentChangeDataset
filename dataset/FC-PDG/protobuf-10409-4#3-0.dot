digraph {
3 [style = filled, label = "TestPackedTypes message = TestUtil.getPackedSet()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ByteString rawBytes = message.toByteString()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(rawBytes.size(),message.getSerializedSize())@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TestAllTypes message = TestUtil.getAllSet()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSerializationPacked['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "TestAllTypes message2 = TestAllTypes.parseFrom(rawBytes)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "TestUtil.assertAllFieldsSet(message2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "TestPackedTypes message2 = TestPackedTypes.parseFrom(rawBytes)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testSerializationPacked['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(message.getSerializedSize()).isEqualTo(rawBytes.size())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "TestUtil.assertPackedFieldsSet(message2)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
4->5 [style = bold, label=""];
5->10 [style = dashed, label="0"];
5->0 [style = bold, label=""];
10->8 [style = bold, label=""];
4->6 [style = dashed, label="0"];
11->9 [style = bold, label=""];
5->0 [style = solid, label="message2"];
10->8 [style = solid, label="message2"];
1->5 [style = solid, label="rawBytes"];
9->1 [style = bold, label=""];
1->6 [style = bold, label=""];
6->5 [style = bold, label=""];
1->10 [style = solid, label="rawBytes"];
3->9 [style = dashed, label="0"];
0->8 [style = dashed, label="0"];
3->1 [style = bold, label=""];
1->4 [style = bold, label=""];
2->3 [style = bold, label=""];
7->3 [style = bold, label=""];
}
