digraph {
0 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "MemoryRecords records = builder.build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "builder.append(0L,0L,\"a\".getBytes(),\"1\".getBytes())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(2L,info.maxTimestamp)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(logAppendTime,info.maxTimestamp)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int i = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "buildUsingCreateTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Iterator<Record> iterator = records.records()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long logAppendTime = System.currentTimeMillis()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.CREATE_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buildUsingCreateTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertEquals(TimestampType.LOG_APPEND_TIME,record.timestampType())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "builder.append(2L,0L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(TimestampType.CREATE_TIME,record.timestampType())@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertEquals(expectedTimestamps(i++(,record.timestamp())@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "compressionType == CompressionType.NONE@@@13@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "long(( expectedTimestamps = new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c95e20@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MemoryRecordsBuilder.RecordsInfo info = builder.info()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.append(1L,2L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Record record = iterator.next()@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "builder.append(1L,0L,\"b\".getBytes(),\"2\".getBytes())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(logAppendTime,record.timestamp())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(2L,info.shallowOffsetOfMaxTimestamp)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "MemoryRecordsBuilder builder = new MemoryRecordsBuilder(buffer,Record.MAGIC_VALUE_V1,compressionType,TimestampType.LOG_APPEND_TIME,0L,logAppendTime,buffer.capacity())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "ByteBuffer buffer = ByteBuffer.allocate(1024)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "buildUsingLogAppendTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "builder.append(2L,1L,\"c\".getBytes(),\"3\".getBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "buffer.position(bufferOffset)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "iterator.hasNext()@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->31 [style = dashed, label="0"];
14->17 [style = bold, label=""];
4->16 [style = dotted, label="false"];
19->9 [style = bold, label=""];
28->12 [style = bold, label=""];
7->24 [style = dashed, label="0"];
10->30 [style = bold, label=""];
4->16 [style = bold, label=""];
3->2 [style = bold, label=""];
18->24 [style = bold, label=""];
12->15 [style = bold, label=""];
17->19 [style = bold, label=""];
17->11 [style = solid, label="i"];
9->11 [style = dotted, label="true"];
13->6 [style = bold, label=""];
22->16 [style = bold, label=""];
1->29 [style = bold, label=""];
2->27 [style = dashed, label="0"];
11->30 [style = dashed, label="0"];
11->9 [style = bold, label=""];
4->17 [style = bold, label=""];
14->9 [style = bold, label=""];
9->20 [style = dotted, label="true"];
7->22 [style = bold, label=""];
17->20 [style = solid, label="i"];
31->26 [style = bold, label=""];
3->24 [style = solid, label="logAppendTime"];
6->8 [style = bold, label=""];
3->27 [style = bold, label=""];
26->14 [style = bold, label=""];
19->11 [style = solid, label="expectedTimestamps"];
29->25 [style = bold, label=""];
4->0 [style = dotted, label="true"];
12->2 [style = solid, label="buffer"];
9->10 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
14->30 [style = dotted, label="true"];
8->18 [style = bold, label=""];
19->21 [style = bold, label=""];
20->21 [style = bold, label=""];
20->10 [style = dashed, label="0"];
21->20 [style = bold, label=""];
27->1 [style = bold, label=""];
24->31 [style = bold, label=""];
23->12 [style = bold, label=""];
7->4 [style = bold, label=""];
16->14 [style = bold, label=""];
2->1 [style = bold, label=""];
22->4 [style = bold, label=""];
13->29 [style = dashed, label="0"];
14->10 [style = dotted, label="true"];
15->3 [style = bold, label=""];
19->20 [style = solid, label="expectedTimestamps"];
3->27 [style = solid, label="logAppendTime"];
8->26 [style = solid, label="records"];
22->16 [style = dotted, label="false"];
25->8 [style = bold, label=""];
5->12 [style = bold, label=""];
16->17 [style = bold, label=""];
8->14 [style = solid, label="records"];
0->14 [style = bold, label=""];
30->14 [style = bold, label=""];
3->30 [style = solid, label="logAppendTime"];
22->4 [style = dotted, label="true"];
6->25 [style = dashed, label="0"];
18->7 [style = bold, label=""];
4->0 [style = bold, label=""];
3->2 [style = solid, label="logAppendTime"];
12->27 [style = solid, label="buffer"];
9->10 [style = bold, label=""];
1->13 [style = bold, label=""];
20->11 [style = bold, label=""];
10->20 [style = bold, label=""];
}
