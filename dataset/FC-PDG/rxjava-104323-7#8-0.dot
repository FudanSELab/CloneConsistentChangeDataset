digraph {
18 [style = filled, label = "Function<? super T,? extends Publisher<? extends R>> mapper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "return empty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "int prefetch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "concatMapDelayError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "concatMapDelayError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableConcatMap<T,R>(this,mapper,prefetch,tillTheEnd? ErrorMode.END: ErrorMode.BOUNDARY))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Objects.requireNonNull(mapper,\"mapper is null\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableConcatMap<T,R>(this,mapper,prefetch,tillTheEnd? ErrorMode.END: ErrorMode.BOUNDARY))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "return FlowableScalarXMap.scalarXMap(v,mapper)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "boolean tillTheEnd@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean tillTheEnd@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "v == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ObjectHelper.verifyPositive(prefetch,\"prefetch\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "boolean tillTheEnd@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableConcatMap<>(this,mapper,prefetch,tillTheEnd? ErrorMode.END: ErrorMode.BOUNDARY))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "concatMapDelayError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int prefetch@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return ObservableScalarXMap.scalarXMap(v,mapper)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "this instanceof ScalarSupplier@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int prefetch@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "@SuppressWarnings(\"unchecked\") T v = ((ScalarSupplier<T>)this).get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->8 [style = solid, label="mapper"];
3->1 [style = bold, label=""];
9->4 [style = solid, label="v"];
20->17 [style = solid, label="tillTheEnd"];
19->20 [style = dotted, label="true"];
9->4 [style = bold, label=""];
3->10 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
9->2 [style = solid, label="v"];
4->21 [style = bold, label=""];
18->17 [style = solid, label="mapper"];
4->7 [style = dotted, label="true"];
2->8 [style = bold, label=""];
12->15 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
4->2 [style = bold, label=""];
11->4 [style = dotted, label="true"];
14->13 [style = solid, label="tillTheEnd"];
5->6 [style = solid, label="prefetch"];
18->1 [style = solid, label="mapper"];
0->8 [style = solid, label="tillTheEnd"];
10->2 [style = solid, label="mapper"];
10->13 [style = solid, label="prefetch"];
11->9 [style = bold, label=""];
12->1 [style = bold, label=""];
4->7 [style = bold, label=""];
8->13 [style = dashed, label="0"];
2->13 [style = bold, label=""];
16->6 [style = solid, label="prefetch"];
12->14 [style = dotted, label="true"];
16->17 [style = solid, label="prefetch"];
19->1 [style = bold, label=""];
11->2 [style = dotted, label="true"];
1->6 [style = bold, label=""];
3->5 [style = dotted, label="true"];
15->1 [style = solid, label="mapper"];
12->10 [style = dotted, label="true"];
18->21 [style = solid, label="mapper"];
2->21 [style = dashed, label="0"];
7->2 [style = bold, label=""];
6->11 [style = bold, label=""];
11->13 [style = bold, label=""];
3->0 [style = dotted, label="true"];
19->16 [style = dotted, label="true"];
7->21 [style = bold, label=""];
8->17 [style = dashed, label="0"];
11->8 [style = bold, label=""];
11->17 [style = bold, label=""];
10->20 [style = dashed, label="0"];
10->6 [style = solid, label="prefetch"];
11->21 [style = dotted, label="true"];
21->17 [style = bold, label=""];
15->13 [style = solid, label="mapper"];
15->2 [style = solid, label="mapper"];
9->21 [style = solid, label="v"];
5->8 [style = solid, label="prefetch"];
10->1 [style = solid, label="mapper"];
}
