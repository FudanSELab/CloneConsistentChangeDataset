digraph {
10 [style = filled, label = "File external = File.createTempFile(\"something\",\"\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "StringBuilder buf = new StringBuilder(768)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertTrue(\"Couldn't create \" + dir,dir.mkdir())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int i = 0@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(Util.resolveSymlink(new File(d,\"a\")))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assume.assumeFalse(Functions.isWindows())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "File dir = new File(d,\"dir\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "File anotherDir = new File(d,\"anotherDir\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "System.err.println(\"log output: \" + log)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "Util.createSymlink(d,\"original\",\"link\",l)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Util.createSymlink(d,\"dir\",\"anotherDir/symlinkDir\",l)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "log.length() > 0@@@18@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{Util.deleteRecursive(d)}@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assume.assumeTrue(!Functions.isWindows())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "File d = tmp.getRoot()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Util.createSymlink(d,external.getAbsolutePath(),\"outside\",l)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i++@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Util.createSymlink(d,\"a\",\"x\",l)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(buf.toString(),Util.resolveSymlink(new File(d,\"x\")))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testSymlink['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "{Util.deleteRecursive(d)}@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "{assertTrue(external.delete())}@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Util.createSymlink(d,buf.toString(),\"x\",l)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testIsSymlink['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testSymlink['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "buf.append((char)('0' + (i % 10)))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(external.getAbsolutePath(),Util.resolveSymlink(new File(d,\"outside\")))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < 768@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "new FilePath(new File(d,\"a\")).touch(0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String log = baos.toString()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"anotherDir/link\")))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(\"Couldn't create \" + anotherDir,anotherDir.mkdir())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"original\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "StreamTaskListener l = new StreamTaskListener(baos)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "log.length() > 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(\"a\",Util.resolveSymlink(new File(d,\"x\")))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "new FilePath(new File(d,\"original\")).touch(0)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "assertTrue(Util.isSymlink(new File(d,\"link\")))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Util.createSymlink(d,\"a\",\"anotherDir/link\",l)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertFalse(Util.isSymlink(new File(d,\"dir\")))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
30->23 [style = solid, label="i"];
25->22 [style = bold, label=""];
26->38 [style = dashed, label="0"];
12->6 [style = solid, label="l"];
11->30 [style = solid, label="i"];
10->19 [style = bold, label=""];
13->20 [style = dotted, label="true"];
24->31 [style = solid, label="log"];
14->7 [style = solid, label="d"];
9->16 [style = bold, label=""];
14->39 [style = solid, label="d"];
4->36 [style = dashed, label="0"];
35->37 [style = bold, label=""];
24->20 [style = solid, label="log"];
20->31 [style = dotted, label="true"];
37->38 [style = bold, label=""];
23->15 [style = dotted, label="true"];
12->7 [style = solid, label="l"];
14->17 [style = solid, label="d"];
12->43 [style = solid, label="l"];
14->16 [style = solid, label="d"];
27->12 [style = bold, label=""];
14->21 [style = solid, label="d"];
31->5 [style = bold, label=""];
18->11 [style = bold, label=""];
4->21 [style = bold, label=""];
33->41 [style = bold, label=""];
20->31 [style = bold, label=""];
23->8 [style = bold, label=""];
6->37 [style = dashed, label="0"];
3->0 [style = bold, label=""];
24->20 [style = bold, label=""];
3->0 [style = solid, label="anotherDir"];
7->24 [style = bold, label=""];
14->40 [style = solid, label="d"];
17->2 [style = bold, label=""];
22->28 [style = dashed, label="0"];
11->8 [style = solid, label="i"];
12->14 [style = bold, label=""];
30->15 [style = solid, label="i"];
13->5 [style = bold, label=""];
23->7 [style = bold, label=""];
36->35 [style = bold, label=""];
32->42 [style = bold, label=""];
33->41 [style = solid, label="anotherDir"];
41->43 [style = bold, label=""];
14->5 [style = solid, label="d"];
14->37 [style = solid, label="d"];
24->13 [style = bold, label=""];
14->4 [style = bold, label=""];
14->36 [style = bold, label=""];
6->26 [style = bold, label=""];
8->15 [style = bold, label=""];
2->1 [style = bold, label=""];
23->15 [style = bold, label=""];
12->19 [style = solid, label="l"];
14->38 [style = solid, label="d"];
14->3 [style = solid, label="d"];
19->17 [style = bold, label=""];
14->33 [style = solid, label="d"];
14->9 [style = solid, label="d"];
14->1 [style = solid, label="d"];
11->23 [style = solid, label="i"];
9->43 [style = dashed, label="0"];
40->32 [style = bold, label=""];
15->8 [style = solid, label="i"];
40->32 [style = solid, label="dir"];
21->35 [style = dashed, label="0"];
38->40 [style = bold, label=""];
43->39 [style = bold, label=""];
15->23 [style = bold, label=""];
0->9 [style = bold, label=""];
14->43 [style = solid, label="d"];
21->6 [style = bold, label=""];
23->8 [style = dotted, label="true"];
16->10 [style = bold, label=""];
14->19 [style = solid, label="d"];
30->23 [style = bold, label=""];
23->30 [style = dotted, label="true"];
42->33 [style = bold, label=""];
15->30 [style = bold, label=""];
14->42 [style = solid, label="d"];
11->15 [style = solid, label="i"];
34->22 [style = bold, label=""];
20->5 [style = bold, label=""];
14->26 [style = solid, label="d"];
29->28 [style = bold, label=""];
14->6 [style = solid, label="d"];
22->27 [style = bold, label=""];
27->12 [style = solid, label="baos"];
28->27 [style = bold, label=""];
15->23 [style = solid, label="i"];
11->23 [style = bold, label=""];
12->9 [style = solid, label="l"];
14->35 [style = solid, label="d"];
12->37 [style = solid, label="l"];
26->18 [style = bold, label=""];
13->20 [style = bold, label=""];
}
