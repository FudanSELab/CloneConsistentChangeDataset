digraph {
8 [style = filled, label = "planner.addRule(new AssertOperandsDifferentRule())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "VolcanoPlanner planner = new VolcanoPlanner()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "planner.addRule(new ThreeInputsUnionRule())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "planner.addRule(new PhysLeafRule())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "RelNode leftPhy = planner.changeTraits(leftRel,cluster.traitSetOf(PHYS_CALLING_CONVENTION))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "planner.ensureRegistered(leftPhy,rightPhy)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "planner.chooseDelegate().findBestExp()@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testMatchedOperandsDifferent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "RelOptCluster cluster = newCluster(planner)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "NoneLeafRel leftRel = new NoneLeafRel(cluster,\"a\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "planner.setRoot(parent)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "planner.setRoot(new EnumerableUnion(cluster,cluster.traitSetOf(PHYS_CALLING_CONVENTION),Arrays.asList(leftPhy,rightPhy),false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "NoneLeafRel leftRel = new NoneLeafRel(cluster,\"b\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "PhysLeafRel rightPhy = new PhysLeafRel(cluster,PHYS_CALLING_CONVENTION,\"b\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testMatchedOperandsDifferent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "planner.addRelTraitDef(ConventionTraitDef.INSTANCE)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "PhysLeafRel rightPhy = new PhysLeafRel(cluster,PHYS_CALLING_CONVENTION_2,\"b\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "PhysBiRel parent = new PhysBiRel(cluster,cluster.traitSetOf(PHYS_CALLING_CONVENTION),leftPhy,rightPhy)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "planner.chooseDelegate().findBestExp()@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testMultiInputsParentOpMatching['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19->3 [style = solid, label="leftRel"];
16->15 [style = bold, label=""];
9->4 [style = bold, label=""];
0->16 [style = dashed, label="0"];
14->19 [style = bold, label=""];
11->15 [style = solid, label="cluster"];
16->15 [style = solid, label="rightPhy"];
9->11 [style = solid, label="planner"];
11->0 [style = solid, label="cluster"];
3->16 [style = bold, label=""];
11->5 [style = solid, label="cluster"];
8->14 [style = dashed, label="0"];
1->7 [style = bold, label=""];
3->15 [style = solid, label="leftPhy"];
11->2 [style = bold, label=""];
3->5 [style = solid, label="leftPhy"];
3->0 [style = bold, label=""];
5->1 [style = solid, label="parent"];
5->1 [style = bold, label=""];
15->17 [style = bold, label=""];
11->19 [style = solid, label="cluster"];
12->19 [style = dashed, label="0"];
12->3 [style = solid, label="leftRel"];
2->14 [style = bold, label=""];
7->6 [style = bold, label=""];
18->9 [style = bold, label=""];
3->7 [style = solid, label="leftPhy"];
0->5 [style = solid, label="rightPhy"];
11->12 [style = solid, label="cluster"];
10->9 [style = bold, label=""];
12->3 [style = bold, label=""];
13->9 [style = bold, label=""];
4->11 [style = bold, label=""];
5->15 [style = dashed, label="0"];
19->3 [style = bold, label=""];
8->12 [style = bold, label=""];
11->16 [style = solid, label="cluster"];
2->8 [style = bold, label=""];
0->5 [style = bold, label=""];
0->7 [style = solid, label="rightPhy"];
}
