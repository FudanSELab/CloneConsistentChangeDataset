digraph {
13 [style = filled, label = "Builder<?> builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "KafkaAvroEventKeyValueReporter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Builder<?> builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Config config@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "KafkaAvroReporter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "builder.registry.isPresent()@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Schema schema = new Schema.Parser().parse(getClass().getClassLoader().getResourceAsStream(\"MetricReport.avsc\"))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KafkaAvroReporter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SchemaRegistryVersionWriter schemaVersionWriter = builder.schemaId.isPresent()? new SchemaRegistryVersionWriter(builder.registry.get(),builder.topic,schema,builder.schemaId.get()): new SchemaRegistryVersionWriter(builder.registry.get(),builder.topic,schema)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Schema schema = new Schema.Parser().parse(getClass().getClassLoader().getResourceAsStream(\"GobblinTrackingEvent.avsc\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "this.serializer.setSchemaVersionWriter(schemaVersionWriter)@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "super(builder,config)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "super(builder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "this.serializer.setSchemaVersionWriter(new SchemaRegistryVersionWriter(builder.registry.get(),builder.topic,Optional.of(schema)))@@@6@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.registry.isPresent()@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Schema schema = KafkaReporterUtils.getMetricReportSchema()@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "Builder<?> builder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5->8 [style = dotted, label="true"];
12->0 [style = bold, label=""];
5->0 [style = dotted, label="true"];
2->13 [style = dashed, label="0"];
10->3 [style = solid, label="config"];
1->3 [style = solid, label="builder"];
5->11 [style = dotted, label="true"];
8->7 [style = solid, label="schemaVersionWriter"];
15->12 [style = bold, label=""];
6->0 [style = bold, label=""];
9->3 [style = bold, label=""];
6->0 [style = solid, label="schema"];
3->14 [style = dashed, label="0"];
5->7 [style = dotted, label="true"];
16->13 [style = dotted, label="true"];
4->1 [style = dotted, label="true"];
9->2 [style = dotted, label="true"];
3->5 [style = bold, label=""];
9->10 [style = dotted, label="true"];
13->14 [style = solid, label="builder"];
5->6 [style = dotted, label="true"];
15->0 [style = dotted, label="true"];
6->12 [style = dashed, label="0"];
2->3 [style = solid, label="config"];
5->11 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
11->8 [style = solid, label="schema"];
8->7 [style = bold, label=""];
12->0 [style = solid, label="schema"];
14->15 [style = bold, label=""];
2->3 [style = solid, label="builder"];
4->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
5->6 [style = bold, label=""];
15->12 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
}
