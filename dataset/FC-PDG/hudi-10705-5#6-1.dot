digraph {
15 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "HoodieKey hk5 = keyGen.getKey(baseRecord)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(\"2020-01-06 12\",hk1.getPartitionPath())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "baseRecord.put(\"createTime\",18736)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"1970-01-01 08\",keyGen.getPartitionPath(baseRow))@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "baseRecord.put(\"createTime\",null)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"2020-01-06 12\",hk4.getPartitionPath())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "internalRow = KeyGeneratorTestUtilities.getInternalRow(baseRow)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "properties = getBaseKeyConfig(\"DATE_STRING\",\"yyyy-MM-dd hh:mm:ss\",\"GMT\",null)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(internalRow,baseRow.schema()))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "internalRow = KeyGeneratorTestUtilities.getInternalRow(baseRow)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "HoodieKey hk2 = keyGen.getKey(baseRecord)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(\"1970-01-01 12:00:00\",keyGen.getPartitionPath(internalRow,baseRow.schema()))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"1970-01-01 08\",hk5.getPartitionPath())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TimestampBasedKeyGenerator keyGen = new TimestampBasedKeyGenerator(properties)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "HoodieKey hk6 = keyGen.getKey(baseRecord)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "HoodieKey scalarSecondsKey = keyGen.getKey(baseRecord)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "testScalar['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertEquals(\"1970-01-01 08\",keyGen.getPartitionPath(internalRow,baseRow.schema()))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "properties = getBaseKeyConfig(\"SCALAR\",\"yyyy-MM-dd hh\",\"GMT\",\"days\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(\"2024-10-04 12\",keyGen.getPartitionPath(baseRow))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "properties = getBaseKeyConfig(\"DATE_STRING\",\"yyyy-MM-dd hh\",\"GMT\",null)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "properties = getBaseKeyConfig(\"DATE_STRING\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "baseRecord.put(\"createTime\",20000L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "HoodieKey hk3 = keyGen.getKey(baseRecord)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "baseRecord.put(\"createTime\",null)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "baseRecord.put(\"createTime\",1578283932000L)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HoodieKey hk4 = keyGen.getKey(baseRecord)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(\"1970-01-01 12:00:00\",hk6.getPartitionPath())@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(\"1970-01-01 12:00:00\",keyGen.getPartitionPath(baseRow))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertEquals(hk1.getPartitionPath(),\"2024-10-04 12\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(\"2020-01-06 04\",keyGen.getPartitionPath(baseRow))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(\"2021-04-19\",scalarSecondsKey.getPartitionPath())@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "baseRecord.put(\"createTime\",new BigDecimal(1578283932000.00001))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "properties.setProperty(\"hoodie.deltastreamer.keygen.timebased.input.dateformat\",\"yyyy-MM-dd hh:mm:ss\")@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(\"2020-01-06 12\",bigDecimalKey.getPartitionPath())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"2020-01-06 12\",hk3.getPartitionPath())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "properties.setProperty(\"hoodie.deltastreamer.keygen.timebased.input.dateformat\",\"yyyy-MM-dd hh:mm:ss\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "baseRecord.put(\"createTime\",null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "properties = getBaseKeyConfig(\"SCALAR\",\"yyyy-MM-dd\",\"GMT\",\"DAYS\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "HoodieKey hk1 = keyGen.getKey(baseRecord)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "properties = getBaseKeyConfig(\"SCALAR\",\"yyyy-MM-dd hh\",\"GMT\",\"days\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "testTimestampBasedKeyGenerator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertEquals(\"1970-01-02 12\",keyGen.getPartitionPath(baseRow))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "baseRecord.put(\"createTime\",\"2020-01-06 12:12:12\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testTimestampBasedKeyGenerator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "HoodieKey bigDecimalKey = keyGen.getKey(baseRecord)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "internalRow = KeyGeneratorTestUtilities.getInternalRow(baseRow)@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT\",null)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(\"1970-01-02 12\",hk2.getPartitionPath())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43->58 [style = dashed, label="0"];
61->66 [style = bold, label=""];
22->15 [style = bold, label=""];
69->21 [style = bold, label=""];
46->0 [style = bold, label=""];
68->69 [style = bold, label=""];
29->30 [style = bold, label=""];
17->9 [style = bold, label=""];
65->62 [style = bold, label=""];
49->48 [style = bold, label=""];
59->57 [style = bold, label=""];
58->60 [style = bold, label=""];
7->63 [style = dashed, label="0"];
35->43 [style = bold, label=""];
1->13 [style = bold, label=""];
9->35 [style = bold, label=""];
52->51 [style = solid, label="baseRow"];
62->67 [style = bold, label=""];
67->9 [style = bold, label=""];
22->15 [style = solid, label="properties"];
68->69 [style = solid, label="properties"];
63->55 [style = bold, label=""];
52->47 [style = bold, label=""];
36->24 [style = bold, label=""];
51->50 [style = bold, label=""];
2->36 [style = bold, label=""];
47->51 [style = bold, label=""];
3->27 [style = solid, label="baseRow"];
54->53 [style = bold, label=""];
23->49 [style = solid, label="baseRow"];
27->33 [style = bold, label=""];
19->3 [style = bold, label=""];
13->25 [style = bold, label=""];
67->9 [style = solid, label="properties"];
8->54 [style = solid, label="baseRow"];
0->17 [style = bold, label=""];
31->57 [style = dashed, label="0"];
16->6 [style = bold, label=""];
39->56 [style = solid, label="properties"];
1->49 [style = bold, label=""];
24->18 [style = bold, label=""];
43->11 [style = bold, label=""];
34->61 [style = dashed, label="0"];
4->55 [style = dashed, label="0"];
20->41 [style = bold, label=""];
14->12 [style = solid, label="properties"];
38->0 [style = bold, label=""];
5->7 [style = bold, label=""];
48->13 [style = bold, label=""];
39->20 [style = bold, label=""];
23->1 [style = solid, label="baseRow"];
15->29 [style = bold, label=""];
17->9 [style = solid, label="properties"];
60->61 [style = solid, label="baseRow"];
42->8 [style = bold, label=""];
21->34 [style = bold, label=""];
57->26 [style = bold, label=""];
12->32 [style = bold, label=""];
10->5 [style = solid, label="properties"];
21->64 [style = bold, label=""];
7->4 [style = bold, label=""];
32->19 [style = bold, label=""];
64->59 [style = bold, label=""];
25->16 [style = bold, label=""];
6->37 [style = bold, label=""];
34->28 [style = bold, label=""];
40->12 [style = bold, label=""];
0->62 [style = dashed, label="0"];
60->61 [style = bold, label=""];
10->5 [style = bold, label=""];
31->10 [style = bold, label=""];
8->45 [style = bold, label=""];
35->58 [style = bold, label=""];
56->63 [style = bold, label=""];
18->21 [style = bold, label=""];
21->20 [style = solid, label="baseRow"];
37->42 [style = bold, label=""];
33->22 [style = bold, label=""];
41->14 [style = bold, label=""];
49->48 [style = solid, label="internalRow"];
51->50 [style = solid, label="internalRow"];
3->31 [style = bold, label=""];
25->6 [style = solid, label="properties"];
30->23 [style = bold, label=""];
66->68 [style = bold, label=""];
3->31 [style = solid, label="baseRow"];
43->52 [style = bold, label=""];
8->45 [style = solid, label="baseRow"];
2->36 [style = solid, label="properties"];
52->47 [style = solid, label="baseRow"];
26->39 [style = bold, label=""];
11->2 [style = bold, label=""];
17->67 [style = dashed, label="0"];
45->54 [style = bold, label=""];
28->44 [style = solid, label="properties"];
39->64 [style = dashed, label="0"];
44->26 [style = bold, label=""];
50->11 [style = bold, label=""];
59->57 [style = solid, label="baseRow"];
54->53 [style = solid, label="internalRow"];
4->27 [style = bold, label=""];
39->56 [style = bold, label=""];
28->44 [style = bold, label=""];
23->1 [style = bold, label=""];
21->34 [style = solid, label="baseRow"];
14->40 [style = bold, label=""];
}
