digraph {
8 [style = filled, label = "removeEdge_queryAfterRemoval['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assume().that(graphIsMutable()).isTrue()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "fail(ERROR_EDGE_NOT_IN_GRAPH)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(network.removeEdge(E12))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "networkAsMutableNetwork.incidentNodes(E12)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "addEdge(N1,N2,E12)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "network.incidentNodes(E12)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "removeEdge_queryAfterRemoval['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "@SuppressWarnings(\"unused\") EndpointPair<Integer> unused = networkAsMutableNetwork.incidentNodes(E12)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertTrue(networkAsMutableNetwork.removeEdge(E12))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "removeEdge_queryAfterRemoval['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "@SuppressWarnings(\"unused\") EndpointPair<Integer> unused = network.incidentNodes(E12)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->0 [style = bold, label=""];
6->4 [style = bold, label=""];
2->10 [style = dashed, label="0"];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
8->6 [style = bold, label=""];
9->0 [style = bold, label=""];
1->7 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
7->10 [style = bold, label=""];
4->7 [style = bold, label=""];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
}
