digraph {
4 [style = filled, label = "taskManager.maybePurgeCommitedRecords()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(adminClient.deleteRecords(recordsToDelete)).andReturn(deleteRecordsResult).times(2)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "final KafkaFutureImpl<DeletedRecords> futureDeletedRecords = new KafkaFutureImpl<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "futureDeletedRecords.complete(null)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "taskManager.maybePurgeCommitedRecords()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "replay()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.expect(active.recordsToDelete()).andReturn(Collections.singletonMap(t1p1,5L)).times(2)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "shouldSendPurgeData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final Map<TopicPartition,RecordsToDelete> recordsToDelete = Collections.singletonMap(t1p1,RecordsToDelete.beforeOffset(5L))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expect(adminClient.deleteRecords(recordsToDelete)).andReturn(deleteRecordsResult).times(2)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "EasyMock.expect(adminClient.deleteRecords(recordsToDelete)).andReturn(deleteRecordsResult).once()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final KafkaFuture<DeletedRecords> futureDeletedRecords = new KafkaFutureImpl<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "verify(active,adminClient)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expect(active.recordsToDelete()).andReturn(Collections.singletonMap(t1p1,5L)).once()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final DeleteRecordsResult deleteRecordsResult = new DeleteRecordsResult(Collections.singletonMap(t1p1,(KafkaFuture<DeletedRecords>)futureDeletedRecords))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verify(active,adminClient)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "shouldNotSendPurgeDataIfPreviousNotDone['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final DeleteRecordsResult deleteRecordsResult = new DeleteRecordsResult(Collections.singletonMap(t1p1,futureDeletedRecords))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "expect(active.recordsToDelete()).andReturn(Collections.singletonMap(t1p1,5L)).times(2)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "shouldSendPurgeData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10->14 [style = bold, label=""];
11->1 [style = bold, label=""];
16->10 [style = bold, label=""];
1->7 [style = solid, label="futureDeletedRecords"];
7->14 [style = dashed, label="0"];
2->3 [style = bold, label=""];
16->14 [style = solid, label="futureDeletedRecords"];
14->17 [style = bold, label=""];
3->13 [style = dashed, label="0"];
12->6 [style = bold, label=""];
10->7 [style = bold, label=""];
15->18 [style = bold, label=""];
4->0 [style = bold, label=""];
9->6 [style = bold, label=""];
2->13 [style = bold, label=""];
19->16 [style = bold, label=""];
3->9 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
13->12 [style = bold, label=""];
18->6 [style = bold, label=""];
7->2 [style = bold, label=""];
1->16 [style = dashed, label="0"];
0->8 [style = bold, label=""];
17->15 [style = bold, label=""];
9->12 [style = dashed, label="0"];
1->10 [style = bold, label=""];
}
