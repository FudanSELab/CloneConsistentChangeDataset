digraph {
17 [style = filled, label = "when(backendConnection.getConnectionStatus()).thenReturn(connectionStatus)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "verify(connectionStatus).waitUntilConnectionRelease()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(backendConnection.closeConnections(false)).thenReturn(Collections.emptyList())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "when(engine.getCodecEngine()).thenReturn(codecEngine)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(executeEngine.getCommandPacket(eq(payload),eq(commandPacketType),eq(backendConnection))).thenReturn(commandPacket)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "verify(connectionStatus).switchToUsing()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "when(executeEngine.getCommandPacket(eq(payload),eq(commandPacketType),eq(backendConnection))).thenReturn(commandPacket)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandExecutor(commandPacketType,commandPacket,backendConnection)).thenReturn(queryCommandExecutor)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "when(codecEngine.createPacketPayload(eq(message))).thenReturn(payload)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "when(backendConnection.getConnectionStatus()).thenReturn(connectionStatus)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(commandExecutor)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandPacketType(payload)).thenReturn(commandPacketType)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "when(queryCommandExecutor.execute()).thenReturn(Collections.emptyList())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "verify(commandExecutor).close()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(executeEngine.getCommandPacketType(eq(payload))).thenReturn(commandPacketType)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "when(commandExecutor.execute()).thenReturn(Collections.singletonList(databasePacket))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertRunNeedFlushByFalse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "when(backendConnection.closeConnections(false)).thenReturn(Collections.emptyList())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "when(engine.getFrontendContext()).thenReturn(frontendContext)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "actual.run()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(backendConnection.closeFederateExecutor()).thenReturn(Collections.emptyList())@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertRunNeedFlushByFalse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "when(frontendContext.isFlushForPerCommandPacket()).thenReturn(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(executeEngine.getCommandExecutor(eq(commandPacketType),eq(commandPacket),eq(backendConnection))).thenReturn(queryCommandExecutor)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "verify(backendConnection).closeDatabaseCommunicationEngines(true)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "verify(handlerContext).flush()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(engine.getCommandExecuteEngine().getCommandPacket(payload,commandPacketType,backendConnection)).thenReturn(commandPacket)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "verify(handlerContext).write(databasePacket)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CommandExecutorTask actual = new CommandExecutorTask(engine,backendConnection,handlerContext,message)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "when(engine.getCommandExecuteEngine()).thenReturn(executeEngine)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "when(backendConnection.closeFederateExecutor()).thenReturn(Collections.emptyList())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertRunByCommandExecutor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19->18 [style = bold, label=""];
10->21 [style = dashed, label="0"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
7->10 [style = bold, label=""];
0->6 [style = bold, label=""];
1->15 [style = bold, label=""];
17->9 [style = bold, label=""];
28->31 [style = bold, label=""];
25->9 [style = bold, label=""];
8->3 [style = bold, label=""];
24->32 [style = bold, label=""];
15->24 [style = dashed, label="0"];
22->21 [style = bold, label=""];
31->29 [style = bold, label=""];
32->27 [style = bold, label=""];
5->9 [style = dashed, label="0"];
2->9 [style = bold, label=""];
16->23 [style = bold, label=""];
12->24 [style = bold, label=""];
13->16 [style = bold, label=""];
4->7 [style = bold, label=""];
23->22 [style = bold, label=""];
30->28 [style = bold, label=""];
20->16 [style = bold, label=""];
5->0 [style = bold, label=""];
18->6 [style = bold, label=""];
10->25 [style = bold, label=""];
6->11 [style = bold, label=""];
7->25 [style = dashed, label="0"];
9->5 [style = bold, label=""];
9->19 [style = bold, label=""];
29->10 [style = bold, label=""];
10->2 [style = bold, label=""];
14->8 [style = bold, label=""];
15->12 [style = bold, label=""];
16->4 [style = bold, label=""];
16->28 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
21->17 [style = bold, label=""];
7->22 [style = dashed, label="0"];
27->26 [style = bold, label=""];
}
