digraph {
2 [style = filled, label = "Schema newSchema = new SchemaUpdate(SCHEMA,SCHEMA_LAST_COLUMN_ID).addColumn(null,\"dot.field\",Types.StringType.get()).setIdentifierFields(\"id\",\"dot.field\").apply()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"add a field with dot as identifier should succeed\",Sets.newHashSet(newSchema.findField(\"id\").fieldId(),newSchema.findField(\"dot.field\").fieldId()),newSchema.identifierFieldIds())@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Schema newSchema = new SchemaUpdate(SCHEMA,SCHEMA_LAST_COLUMN_ID).allowIncompatibleChanges().addRequiredColumn(null,\"dot.field\",Types.StringType.get()).setIdentifierFields(\"id\",\"dot.field\").apply()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testAddDottedIdentifierFieldColumns['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Schema newSchema = new SchemaUpdate(SCHEMA,SCHEMA_LAST_COLUMN_ID).setIdentifierFields(\"id\").apply()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(\"add an existing field as identifier field should succeed\",Sets.newHashSet(newSchema.findField(\"id\").fieldId()),newSchema.identifierFieldIds())@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testAddDottedIdentifierFieldColumns['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testAddExistingIdentifierFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
0->5 [style = dashed, label="0"];
2->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
4->0 [style = bold, label=""];
2->4 [style = dashed, label="0"];
}
