digraph {
13 [style = filled, label = "Assert.assertNull(Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory()).getSegment(segment1.getId()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "waitForSync(filteredBatchServerInventoryView,testSegments)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "waitForSync(batchServerInventoryView,testSegments)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Set<DataSegment> segments = Sets.newHashSet(server.getSegments())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testSegments.add(segment1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(testSegments,Sets.newHashSet(server.getSegments().values()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "DruidServer server = Iterables.get(batchServerInventoryView.getInventory(),0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "segmentAnnouncer.announceSegments(testSegments)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "segmentAnnouncer.unannounceSegment(segment1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "segmentAnnouncer.announceSegment(segment2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DataSegment segment1 = makeSegment(101)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(testSegments,Sets.newHashSet(server.getSegments().values()))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertEquals(testSegments,segments)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRun['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "waitForSync(batchServerInventoryView,testSegments)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "segmentAnnouncer.announceSegment(segment1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testSegments.add(segment2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testSegments.remove(segment1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRunWithFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Set<DataSegment> segments = Sets.newHashSet(server.getSegments().values())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSegments.remove(segment2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "waitForSync(batchServerInventoryView,testSegments)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DruidServer server = Iterables.get(filteredBatchServerInventoryView.getInventory(),0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testRunWithFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertNull(Iterables.getOnlyElement(filteredBatchServerInventoryView.getInventory()).getSegment(segment1.getIdentifier()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "int prevUpdateCount = inventoryUpdateCounter.get()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "segmentAnnouncer.unannounceSegment(segment2)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "waitForUpdateEvents(prevUpdateCount + 1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "DataSegment segment2 = makeSegment(102)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
7->1 [style = bold, label=""];
18->23 [style = bold, label=""];
26->17 [style = bold, label=""];
22->19 [style = bold, label=""];
20->19 [style = solid, label="segment2"];
1->15 [style = bold, label=""];
0->12 [style = bold, label=""];
0->23 [style = dashed, label="0"];
11->4 [style = bold, label=""];
25->3 [style = bold, label=""];
20->21 [style = solid, label="segment2"];
0->11 [style = bold, label=""];
28->26 [style = bold, label=""];
4->2 [style = bold, label=""];
7->20 [style = bold, label=""];
9->10 [style = bold, label=""];
20->1 [style = bold, label=""];
11->12 [style = dashed, label="0"];
16->22 [style = bold, label=""];
20->16 [style = solid, label="segment2"];
5->18 [style = dashed, label="0"];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
21->28 [style = bold, label=""];
8->13 [style = dashed, label="0"];
3->18 [style = bold, label=""];
11->4 [style = solid, label="segments"];
7->17 [style = solid, label="segment1"];
2->10 [style = solid, label="prevUpdateCount"];
3->5 [style = bold, label=""];
20->15 [style = solid, label="segment2"];
10->8 [style = bold, label=""];
5->0 [style = bold, label=""];
12->4 [style = bold, label=""];
10->13 [style = bold, label=""];
7->22 [style = solid, label="segment1"];
15->9 [style = bold, label=""];
19->27 [style = bold, label=""];
9->21 [style = bold, label=""];
7->9 [style = solid, label="segment1"];
27->24 [style = bold, label=""];
2->7 [style = bold, label=""];
23->11 [style = bold, label=""];
12->4 [style = solid, label="segments"];
17->16 [style = bold, label=""];
7->1 [style = solid, label="segment1"];
}
