digraph {
28 [style = filled, label = "boolean includeStreams@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"on\",sb.toString()))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "toExpression['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "toExpression['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "sb.length() > 0@@@15@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "expression.addParameter(\"<stream>\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"hashed\",((Expressible)hashStream).toExpression(factory)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "String right = rightHashOn.get(idx)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "sb.append(left)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "String left = leftHashOn.get(idx)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "left.equals(right)@@@20@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "expression.addParameter(new StreamExpressionNamedParameter(\"on\",sb.toString()))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "expression.addParameter(\"hashed=<stream>\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "++idx@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "throw new IOException(\"This OuterHashJoinStream contains a non-expressible TupleStream - it cannot be converted to an expression\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "sb.append(left)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "includeStreams@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sb.append(\",\")@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StringBuilder sb = new StringBuilder()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return expression@@@25@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamExpression expression = new StreamExpression(factory.getFunctionName(this.getClass()))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sb.append(\"=\")@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "return expression@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "toExpression['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new IOException(\"This HashJoinStream contains a non-expressible TupleStream - it cannot be converted to an expression\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "idx < leftHashOn.size()@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "int idx = 0@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "sb.append(part)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "hashStream instanceof Expressible && fullStream instanceof Expressible@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sb.append(right)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "sb.length() > 0@@@19@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "expression.addParameter(((Expressible)fullStream).toExpression(factory))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
22->25 [style = bold, label=""];
0->16 [style = bold, label=""];
31->32 [style = dotted, label="false"];
27->32 [style = bold, label=""];
7->29 [style = dotted, label="false"];
7->10 [style = dotted, label="true"];
33->3 [style = bold, label=""];
15->14 [style = bold, label=""];
26->17 [style = bold, label=""];
3->25 [style = solid, label="expression"];
7->10 [style = bold, label=""];
9->2 [style = bold, label=""];
3->31 [style = bold, label=""];
16->13 [style = solid, label="idx"];
21->15 [style = bold, label=""];
30->11 [style = solid, label="factory"];
3->6 [style = solid, label="expression"];
32->0 [style = bold, label=""];
33->28 [style = dotted, label="true"];
29->0 [style = bold, label=""];
1->3 [style = bold, label=""];
16->26 [style = bold, label=""];
18->19 [style = bold, label=""];
18->19 [style = dotted, label="true"];
26->23 [style = dotted, label="true"];
8->11 [style = solid, label="factory"];
4->2 [style = bold, label=""];
26->13 [style = dotted, label="true"];
18->20 [style = dotted, label="false"];
18->15 [style = dotted, label="false"];
5->29 [style = dashed, label="0"];
12->6 [style = bold, label=""];
2->4 [style = bold, label=""];
33->30 [style = dotted, label="true"];
17->23 [style = bold, label=""];
31->7 [style = bold, label=""];
18->21 [style = dotted, label="false"];
2->12 [style = bold, label=""];
26->22 [style = bold, label=""];
31->7 [style = dotted, label="true"];
20->21 [style = bold, label=""];
14->26 [style = bold, label=""];
2->23 [style = bold, label=""];
23->20 [style = solid, label="left"];
18->20 [style = bold, label=""];
7->5 [style = bold, label=""];
13->15 [style = solid, label="right"];
11->0 [style = bold, label=""];
19->14 [style = bold, label=""];
7->11 [style = dotted, label="true"];
17->2 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
31->27 [style = bold, label=""];
0->4 [style = bold, label=""];
23->13 [style = bold, label=""];
23->19 [style = solid, label="left"];
26->14 [style = dotted, label="true"];
16->23 [style = solid, label="idx"];
26->17 [style = dotted, label="true"];
7->29 [style = bold, label=""];
1->8 [style = dotted, label="true"];
13->18 [style = solid, label="right"];
26->18 [style = dotted, label="true"];
8->30 [style = dashed, label="0"];
17->2 [style = dotted, label="true"];
16->26 [style = solid, label="idx"];
24->8 [style = dotted, label="true"];
30->10 [style = solid, label="factory"];
4->9 [style = dotted, label="true"];
7->5 [style = dotted, label="false"];
8->10 [style = solid, label="factory"];
28->31 [style = solid, label="includeStreams"];
24->3 [style = bold, label=""];
13->18 [style = bold, label=""];
10->11 [style = bold, label=""];
31->27 [style = dotted, label="false"];
}
