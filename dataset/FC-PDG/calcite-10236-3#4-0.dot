digraph {
2 [style = filled, label = "assertThat(r.next(),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(r.next(),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testInsertCastedValueOfCompositeUdt['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(x,is(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "b = s.execute(\"create schema a\")@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertThat(b,is(false))@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertThat(x,is(1))@@@31@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "b = s.execute(\"create table w (i int not null, j mytype)\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(b,is(false))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "b = s.execute(\"create type mytype as (i int)\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "boolean b = s.execute(\"create type mytype as (i int, j int)\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(b,is(false))@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "b = s.execute(\"create schema a.b\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertThat(x,is(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "x = s.executeUpdate(\"insert into w values (1, NULL)\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(b,is(false))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "x = s.executeUpdate(\"insert into t2 values (1, NULL)\")@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertThat(b,is(false))@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "b = s.execute(\"create type a.b.mytype as (i varchar(5))\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertThat(x,is(1))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean b = s.execute(\"create table t (i int not null)\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int x = s.executeUpdate(\"insert into w \" + \"values (1, cast((select j from w limit 1) as mytype))\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(b,is(false))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertThat(r.getInt(1),is(4))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
8->13 [style = solid, label="b"];
25->23 [style = bold, label=""];
24->21 [style = bold, label=""];
4->6 [style = bold, label=""];
28->3 [style = bold, label=""];
13->15 [style = bold, label=""];
22->17 [style = solid, label="b"];
23->24 [style = bold, label=""];
7->10 [style = bold, label=""];
24->21 [style = solid, label="x"];
15->0 [style = solid, label="x"];
2->11 [style = bold, label=""];
7->10 [style = solid, label="x"];
19->20 [style = bold, label=""];
29->28 [style = bold, label=""];
18->26 [style = solid, label="b"];
20->22 [style = bold, label=""];
27->0 [style = bold, label=""];
11->14 [style = solid, label="b"];
22->17 [style = bold, label=""];
18->26 [style = bold, label=""];
11->14 [style = bold, label=""];
10->12 [style = bold, label=""];
26->19 [style = bold, label=""];
12->5 [style = bold, label=""];
1->3 [style = bold, label=""];
15->0 [style = bold, label=""];
13->27 [style = bold, label=""];
16->1 [style = bold, label=""];
1->28 [style = dashed, label="0"];
1->3 [style = solid, label="b"];
3->8 [style = bold, label=""];
14->8 [style = bold, label=""];
8->13 [style = bold, label=""];
4->6 [style = solid, label="x"];
6->7 [style = bold, label=""];
25->23 [style = solid, label="b"];
15->27 [style = dashed, label="0"];
9->1 [style = bold, label=""];
28->3 [style = solid, label="b"];
0->18 [style = bold, label=""];
3->4 [style = bold, label=""];
17->25 [style = bold, label=""];
19->20 [style = solid, label="b"];
27->0 [style = solid, label="x"];
}
