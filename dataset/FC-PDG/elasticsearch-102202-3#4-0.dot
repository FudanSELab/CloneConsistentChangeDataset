digraph {
29 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test2\",INITIALIZING))@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@99@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test2\")@@@73@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "testClusterAllActive2['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@36@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 0@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "i++@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test2\",INITIALIZING))@@@80@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
90 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test1\")@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "int i = 0@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@79@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "AllocationService strategy = createAllocationService(Settings.builder().put(ClusterRebalanceAllocationDecider.CLUSTER_ROUTING_ALLOCATION_ALLOW_REBALANCE_SETTING.getKey(),ClusterRebalanceAllocationDecider.ClusterRebalanceType.INDICES_ALL_ACTIVE.toString()).build())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@45@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "i++@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@81@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@97@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(STARTED))@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "i++@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "logger.info(\"now, start 1 more node, check that rebalancing will not happen (for test1) because we set it to all_active\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@79@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "i++@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertThat(routingNodes.node(\"node3\").iterator().next().shardId().getIndex().getName(),anyOf(equalTo(\"test1\"),equalTo(\"test2\")))@@@101@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "assertThat(routingNodes.node(\"node3\").size(),equalTo(1))@@@100@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "i++@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
67 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@94@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "int i = 0@@@64@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@87@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(routingNodes.node(\"node3\").iterator().next().shardId().getIndex().getName(),anyOf(equalTo(\"test1\"),equalTo(\"test2\")))@@@93@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "testClusterAllActive1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
109 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@75@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "int i = 0@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@27@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
85 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "int i = 0@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testClusterAllActive1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "logger.info(\"now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active\")@@@96@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test1\",INITIALIZING))@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@43@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "i++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@52@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder(clusterState.nodes()).add(newNode(\"node3\"))).build()@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@71@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "logger.info(\"start two nodes\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "MetaData metaData = MetaData.builder().put(IndexMetaData.builder(\"test1\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).put(IndexMetaData.builder(\"test2\").settings(settings(Version.CURRENT)).numberOfShards(1).numberOfReplicas(1)).build()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@47@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(STARTED))@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@59@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "i++@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
105 [style = filled, label = "int i = 0@@@81@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "logger.info(\"start the test1 replica shards\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@66@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "RoutingNodes routingNodes = clusterState.getRoutingNodes()@@@91@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "i++@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(routingNodes.node(\"node3\").size(),equalTo(1))@@@92@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "i++@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).shards().size(),equalTo(2))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).replicaShards().get(0).state(),equalTo(UNASSIGNED))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).shards().size(),equalTo(2))@@@77@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@54@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ClusterState clusterState = ClusterState.builder(org.elasticsearch.cluster.ClusterName.CLUSTER_NAME_SETTING.getDefault(Settings.EMPTY)).metaData(metaData).routingTable(initialRoutingTable).build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "clusterState = ClusterState.builder(clusterState).nodes(DiscoveryNodes.builder().add(newNode(\"node1\")).add(newNode(\"node2\"))).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "clusterState = strategy.applyStartedShards(clusterState,routingNodes.shardsWithState(\"test1\",INITIALIZING))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "int i = 0@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "clusterState = startInitializingShardsAndReroute(strategy,clusterState,\"test1\")@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "int i = 0@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@98@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@62@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
112 [style = filled, label = "assertThat(routingNodes.node(\"node3\").isEmpty(),equalTo(true))@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "int i = 0@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(INITIALIZING))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).replicaShards().get(0).state(),equalTo(INITIALIZING))@@@70@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "logger.info(\"start the test2 replica shards\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test1\").shard(i).primaryShard().state(),equalTo(STARTED))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "logger.info(\"start all the primary shards for test1, replicas will start initializing\")@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "i < clusterState.routingTable().index(\"test2\").shards().size()@@@34@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "logger.info(\"now, start 1 more node, check that rebalancing happen (for test1) because we set it to all_active\")@@@88@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "routingNodes = clusterState.getRoutingNodes()@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "i++@@@55@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < clusterState.routingTable().index(\"test1\").shards().size()@@@29@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "RoutingTable initialRoutingTable = RoutingTable.builder().addAsNew(metaData.index(\"test1\")).addAsNew(metaData.index(\"test2\")).build()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assertThat(clusterState.routingTable().index(\"test2\").shard(i).primaryShard().state(),equalTo(STARTED))@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "clusterState = strategy.reroute(clusterState,\"reroute\")@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->2 [style = bold, label=""];
60->77 [style = solid, label="i"];
97->37 [style = dotted, label="true"];
18->31 [style = solid, label="i"];
22->54 [style = solid, label="i"];
0->5 [style = dotted, label="true"];
87->46 [style = dotted, label="true"];
81->28 [style = bold, label=""];
88->18 [style = bold, label=""];
61->30 [style = bold, label=""];
76->68 [style = bold, label=""];
31->89 [style = dotted, label="true"];
60->33 [style = solid, label="i"];
87->55 [style = dotted, label="true"];
35->71 [style = solid, label="i"];
87->80 [style = dotted, label="true"];
89->9 [style = bold, label=""];
73->74 [style = bold, label=""];
4->15 [style = bold, label=""];
71->85 [style = dotted, label="true"];
87->46 [style = solid, label="i"];
71->86 [style = dotted, label="true"];
96->15 [style = dotted, label="true"];
76->61 [style = bold, label=""];
55->28 [style = dotted, label="true"];
110->7 [style = solid, label="clusterState"];
44->82 [style = bold, label=""];
6->93 [style = bold, label=""];
1->19 [style = solid, label="i"];
85->86 [style = bold, label=""];
29->34 [style = bold, label=""];
7->106 [style = solid, label="clusterState"];
54->61 [style = dotted, label="true"];
5->104 [style = dotted, label="true"];
17->65 [style = solid, label="clusterState"];
94->107 [style = bold, label=""];
36->20 [style = bold, label=""];
12->7 [style = bold, label=""];
33->63 [style = bold, label=""];
36->100 [style = bold, label=""];
42->11 [style = solid, label="i"];
62->67 [style = bold, label=""];
71->36 [style = dotted, label="true"];
19->24 [style = bold, label=""];
97->66 [style = bold, label=""];
67->69 [style = bold, label=""];
65->51 [style = bold, label=""];
103->97 [style = solid, label="i"];
87->81 [style = dotted, label="true"];
69->16 [style = bold, label=""];
11->44 [style = solid, label="i"];
96->88 [style = bold, label=""];
42->44 [style = bold, label=""];
49->39 [style = bold, label=""];
113->109 [style = bold, label=""];
76->68 [style = solid, label="i"];
0->75 [style = dotted, label="true"];
5->0 [style = bold, label=""];
19->69 [style = dotted, label="true"];
51->69 [style = dashed, label="0"];
82->58 [style = bold, label=""];
103->97 [style = bold, label=""];
107->95 [style = bold, label=""];
38->23 [style = solid, label="i"];
31->60 [style = bold, label=""];
50->12 [style = bold, label=""];
24->17 [style = bold, label=""];
95->49 [style = bold, label=""];
19->69 [style = bold, label=""];
71->49 [style = bold, label=""];
0->72 [style = solid, label="i"];
54->6 [style = bold, label=""];
71->85 [style = bold, label=""];
88->108 [style = solid, label="i"];
86->36 [style = bold, label=""];
64->33 [style = bold, label=""];
31->9 [style = dotted, label="true"];
66->70 [style = solid, label="i"];
37->103 [style = bold, label=""];
31->88 [style = dotted, label="true"];
77->64 [style = dotted, label="true"];
52->21 [style = bold, label=""];
8->106 [style = dashed, label="0"];
15->96 [style = solid, label="i"];
12->110 [style = dashed, label="0"];
91->45 [style = bold, label=""];
55->80 [style = bold, label=""];
16->62 [style = bold, label=""];
39->29 [style = bold, label=""];
46->80 [style = bold, label=""];
54->68 [style = dotted, label="true"];
72->27 [style = bold, label=""];
63->43 [style = bold, label=""];
70->83 [style = bold, label=""];
18->31 [style = bold, label=""];
69->19 [style = solid, label="i"];
48->37 [style = bold, label=""];
98->35 [style = bold, label=""];
50->110 [style = bold, label=""];
90->53 [style = bold, label=""];
68->76 [style = bold, label=""];
87->46 [style = bold, label=""];
78->5 [style = solid, label="i"];
66->83 [style = solid, label="i"];
100->49 [style = dotted, label="true"];
11->44 [style = bold, label=""];
44->3 [style = bold, label=""];
53->52 [style = bold, label=""];
84->56 [style = bold, label=""];
41->37 [style = bold, label=""];
15->18 [style = solid, label="i"];
108->33 [style = dotted, label="true"];
19->62 [style = dotted, label="true"];
81->55 [style = bold, label=""];
21->59 [style = bold, label=""];
39->86 [style = dashed, label="0"];
17->65 [style = bold, label=""];
30->68 [style = bold, label=""];
109->114 [style = bold, label=""];
30->76 [style = solid, label="i"];
70->71 [style = dotted, label="true"];
37->83 [style = dotted, label="true"];
44->11 [style = dotted, label="true"];
97->92 [style = dotted, label="true"];
70->83 [style = dotted, label="true"];
60->77 [style = bold, label=""];
77->33 [style = dotted, label="true"];
70->98 [style = bold, label=""];
75->5 [style = bold, label=""];
68->93 [style = dotted, label="true"];
35->71 [style = bold, label=""];
79->26 [style = bold, label=""];
37->41 [style = dotted, label="true"];
44->82 [style = dotted, label="true"];
15->31 [style = bold, label=""];
23->74 [style = dotted, label="true"];
101->96 [style = solid, label="i"];
45->90 [style = solid, label="strategy"];
96->18 [style = dotted, label="true"];
10->45 [style = bold, label=""];
110->7 [style = bold, label=""];
74->38 [style = bold, label=""];
1->69 [style = solid, label="i"];
22->54 [style = bold, label=""];
15->31 [style = solid, label="i"];
70->85 [style = bold, label=""];
49->100 [style = solid, label="i"];
96->31 [style = dotted, label="true"];
77->43 [style = dotted, label="true"];
1->19 [style = bold, label=""];
21->29 [style = solid, label="clusterState"];
54->61 [style = bold, label=""];
46->55 [style = solid, label="i"];
29->79 [style = solid, label="clusterState"];
59->48 [style = bold, label=""];
49->100 [style = bold, label=""];
55->87 [style = bold, label=""];
25->23 [style = solid, label="i"];
106->90 [style = solid, label="clusterState"];
36->100 [style = solid, label="i"];
23->73 [style = dotted, label="true"];
68->99 [style = dotted, label="true"];
71->83 [style = bold, label=""];
53->103 [style = solid, label="i"];
14->4 [style = bold, label=""];
108->77 [style = dotted, label="true"];
111->45 [style = bold, label=""];
5->75 [style = dotted, label="true"];
14->21 [style = solid, label="clusterState"];
105->87 [style = solid, label="i"];
105->55 [style = solid, label="i"];
71->20 [style = dotted, label="true"];
66->70 [style = bold, label=""];
80->81 [style = bold, label=""];
93->76 [style = bold, label=""];
87->102 [style = bold, label=""];
30->68 [style = solid, label="i"];
68->105 [style = bold, label=""];
61->54 [style = solid, label="i"];
75->104 [style = bold, label=""];
37->70 [style = dotted, label="true"];
45->106 [style = solid, label="strategy"];
9->88 [style = bold, label=""];
64->90 [style = bold, label=""];
45->32 [style = bold, label=""];
58->57 [style = bold, label=""];
8->14 [style = bold, label=""];
77->63 [style = bold, label=""];
44->57 [style = dotted, label="true"];
54->76 [style = dotted, label="true"];
68->99 [style = bold, label=""];
71->113 [style = bold, label=""];
83->70 [style = bold, label=""];
18->89 [style = bold, label=""];
35->20 [style = solid, label="i"];
96->89 [style = dotted, label="true"];
106->101 [style = bold, label=""];
31->18 [style = dotted, label="true"];
37->66 [style = bold, label=""];
77->53 [style = bold, label=""];
19->16 [style = bold, label=""];
23->42 [style = bold, label=""];
34->78 [style = bold, label=""];
101->96 [style = bold, label=""];
57->11 [style = bold, label=""];
48->37 [style = solid, label="i"];
70->35 [style = dotted, label="true"];
100->94 [style = bold, label=""];
23->38 [style = dotted, label="true"];
51->84 [style = bold, label=""];
97->103 [style = dotted, label="true"];
63->60 [style = bold, label=""];
52->90 [style = dashed, label="0"];
3->8 [style = bold, label=""];
32->40 [style = bold, label=""];
6->13 [style = bold, label=""];
84->112 [style = dashed, label="0"];
100->107 [style = dotted, label="true"];
25->38 [style = solid, label="i"];
23->47 [style = bold, label=""];
5->27 [style = dotted, label="true"];
55->80 [style = dotted, label="true"];
53->97 [style = bold, label=""];
27->75 [style = bold, label=""];
105->87 [style = bold, label=""];
96->31 [style = bold, label=""];
20->71 [style = solid, label="i"];
22->61 [style = solid, label="i"];
115->112 [style = bold, label=""];
102->1 [style = bold, label=""];
37->35 [style = bold, label=""];
61->54 [style = bold, label=""];
0->72 [style = bold, label=""];
108->77 [style = bold, label=""];
101->15 [style = solid, label="i"];
5->72 [style = dotted, label="true"];
83->41 [style = bold, label=""];
90->86 [style = solid, label="clusterState"];
0->5 [style = bold, label=""];
46->55 [style = bold, label=""];
104->72 [style = bold, label=""];
5->54 [style = bold, label=""];
100->94 [style = dotted, label="true"];
108->63 [style = dotted, label="true"];
43->64 [style = bold, label=""];
108->64 [style = bold, label=""];
72->5 [style = solid, label="i"];
23->47 [style = dotted, label="true"];
68->76 [style = dotted, label="true"];
37->66 [style = dotted, label="true"];
26->87 [style = bold, label=""];
19->67 [style = dotted, label="true"];
92->48 [style = bold, label=""];
25->23 [style = bold, label=""];
47->73 [style = bold, label=""];
97->92 [style = bold, label=""];
77->63 [style = dotted, label="true"];
13->61 [style = dashed, label="0"];
55->81 [style = dotted, label="true"];
87->55 [style = bold, label=""];
31->89 [style = bold, label=""];
0->72 [style = dotted, label="true"];
100->0 [style = bold, label=""];
38->23 [style = bold, label=""];
54->30 [style = bold, label=""];
3->106 [style = bold, label=""];
31->18 [style = bold, label=""];
36->49 [style = solid, label="i"];
114->115 [style = bold, label=""];
2->50 [style = bold, label=""];
72->5 [style = bold, label=""];
88->60 [style = solid, label="i"];
20->71 [style = bold, label=""];
78->0 [style = bold, label=""];
99->6 [style = bold, label=""];
86->61 [style = solid, label="clusterState"];
0->5 [style = solid, label="i"];
55->46 [style = dotted, label="true"];
97->48 [style = dotted, label="true"];
42->44 [style = solid, label="i"];
12->7 [style = solid, label="clusterState"];
70->98 [style = dotted, label="true"];
100->95 [style = dotted, label="true"];
28->46 [style = bold, label=""];
83->70 [style = solid, label="i"];
68->6 [style = dotted, label="true"];
60->108 [style = solid, label="i"];
78->0 [style = solid, label="i"];
109->114 [style = solid, label="clusterState"];
53->97 [style = solid, label="i"];
15->96 [style = bold, label=""];
54->30 [style = dotted, label="true"];
0->22 [style = bold, label=""];
55->1 [style = bold, label=""];
55->87 [style = solid, label="i"];
7->14 [style = solid, label="clusterState"];
1->19 [style = solid, label="clusterState"];
13->79 [style = bold, label=""];
44->58 [style = dotted, label="true"];
77->33 [style = bold, label=""];
5->0 [style = solid, label="i"];
60->108 [style = bold, label=""];
87->55 [style = solid, label="i"];
33->77 [style = bold, label=""];
19->16 [style = dotted, label="true"];
108->60 [style = dotted, label="true"];
7->25 [style = bold, label=""];
33->77 [style = solid, label="i"];
5->27 [style = bold, label=""];
45->86 [style = solid, label="strategy"];
88->108 [style = bold, label=""];
45->61 [style = solid, label="strategy"];
0->27 [style = dotted, label="true"];
89->15 [style = bold, label=""];
69->19 [style = bold, label=""];
48->41 [style = solid, label="i"];
41->37 [style = solid, label="i"];
}
