digraph {
8 [style = filled, label = "assertThat(events.size()).isEqualTo(2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<AuditEvent> events = repository.find(\"dave\",null,\"a\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(events.get(0).getPrincipal()).isEqualTo(\"dave\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<AuditEvent> events = repository.find(\"dave\",null)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"a\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "capacity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"c\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"b\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "repository.add(new AuditEvent(\"phil\",\"d\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(events.get(0).getType()).isEqualTo(\"a\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "InMemoryAuditEventRepository repository = new InMemoryAuditEventRepository()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "InMemoryAuditEventRepository repository = new InMemoryAuditEventRepository(2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(events.get(0).getType()).isEqualTo(\"b\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(events.get(1).getType()).isEqualTo(\"c\")@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(events.size()).isEqualTo(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<AuditEvent> events = repository.find(\"dave\",null,null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "findByPrincipalAndType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "repository.add(new AuditEvent(\"phil\",\"b\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "capacity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4->18 [style = dashed, label="0"];
9->0 [style = bold, label=""];
18->11 [style = bold, label=""];
1->3 [style = bold, label=""];
8->6 [style = bold, label=""];
16->2 [style = bold, label=""];
7->8 [style = bold, label=""];
2->10 [style = bold, label=""];
14->1 [style = bold, label=""];
6->12 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
6->4 [style = bold, label=""];
15->17 [style = bold, label=""];
17->12 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
10->8 [style = bold, label=""];
1->16 [style = bold, label=""];
0->1 [style = bold, label=""];
2->15 [style = bold, label=""];
12->18 [style = bold, label=""];
7->10 [style = dashed, label="0"];
2->7 [style = bold, label=""];
13->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
}
