digraph {
15 [style = filled, label = "int i = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "i++@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "putValueSpace(valueSpace,segment,offset)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < 100@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "putKeySpace(keySpace,segment,offset)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ValueSpace valueSpace = createValueSpace(valueLen)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int keyLen = ThreadLocalRandom.current().nextInt(100) + 1@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int totalValueSpaceLen = valueMetaLen + valueLen@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int level = 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int keyMetaLen = SkipListUtils.getKeyMetaLen(level)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int totalKeySpaceLen = keyMetaLen + keyLen@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int valueMetaLen = SkipListUtils.getValueMetaLen()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MemorySegment segment = MemorySegmentFactory.allocateHeapSegment(totalKeySpaceLen + offset)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "int offset = 100@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verifyGetKeySpace(keySpace,segment,offset)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verifyGetValueSpace(valueSpace,segment,offset)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int valueLen = ThreadLocalRandom.current().nextInt(100) + 1@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "level <= MAX_LEVEL@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "KeySpace keySpace = createKeySpace(level,keyLen)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "MemorySegment segment = MemorySegmentFactory.allocateUnpooledSegment(totalValueSpaceLen + offset)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "MemorySegment segment = MemorySegmentFactory.allocateUnpooledSegment(totalKeySpaceLen + offset)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testKeySpacePutAndGet['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "testValueSpacePutAndGet['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testKeySpacePutAndGet['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "level++@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->24 [style = bold, label=""];
14->17 [style = solid, label="valueSpace"];
4->11 [style = solid, label="level"];
4->16 [style = dashed, label="0"];
8->0 [style = solid, label="offset"];
3->7 [style = solid, label="totalKeySpaceLen"];
15->21 [style = bold, label=""];
21->8 [style = dotted, label="true"];
6->1 [style = dotted, label="true"];
9->10 [style = bold, label=""];
12->1 [style = solid, label="segment"];
8->12 [style = solid, label="offset"];
5->1 [style = solid, label="keySpace"];
22->8 [style = bold, label=""];
21->24 [style = dotted, label="true"];
15->16 [style = solid, label="i"];
21->23 [style = dotted, label="true"];
6->0 [style = dotted, label="true"];
6->11 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
11->3 [style = solid, label="keyMetaLen"];
24->22 [style = solid, label="valueMetaLen"];
8->1 [style = solid, label="offset"];
15->21 [style = solid, label="i"];
10->15 [style = dashed, label="0"];
2->5 [style = solid, label="keyLen"];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
21->20 [style = dotted, label="true"];
7->1 [style = solid, label="segment"];
16->21 [style = solid, label="i"];
0->23 [style = dashed, label="0"];
18->15 [style = bold, label=""];
8->23 [style = solid, label="offset"];
21->22 [style = dotted, label="true"];
20->14 [style = bold, label=""];
21->17 [style = dotted, label="true"];
4->6 [style = solid, label="level"];
1->0 [style = bold, label=""];
3->22 [style = dashed, label="0"];
12->1 [style = bold, label=""];
6->2 [style = bold, label=""];
19->17 [style = solid, label="segment"];
5->0 [style = solid, label="keySpace"];
8->17 [style = solid, label="offset"];
6->7 [style = dotted, label="true"];
5->11 [style = bold, label=""];
6->12 [style = dotted, label="true"];
21->16 [style = dotted, label="true"];
13->10 [style = bold, label=""];
7->0 [style = solid, label="segment"];
2->3 [style = solid, label="keyLen"];
3->12 [style = solid, label="totalKeySpaceLen"];
19->17 [style = bold, label=""];
10->6 [style = bold, label=""];
17->23 [style = bold, label=""];
22->19 [style = solid, label="totalValueSpaceLen"];
10->6 [style = solid, label="level"];
10->11 [style = solid, label="level"];
6->2 [style = dotted, label="true"];
11->3 [style = bold, label=""];
6->8 [style = dotted, label="true"];
3->8 [style = bold, label=""];
8->12 [style = bold, label=""];
19->23 [style = solid, label="segment"];
8->19 [style = solid, label="offset"];
2->5 [style = bold, label=""];
6->21 [style = dashed, label="0"];
12->0 [style = solid, label="segment"];
10->4 [style = solid, label="level"];
23->16 [style = bold, label=""];
2->20 [style = dashed, label="0"];
4->6 [style = bold, label=""];
8->19 [style = bold, label=""];
20->14 [style = solid, label="valueLen"];
20->22 [style = solid, label="valueLen"];
4->5 [style = solid, label="level"];
24->22 [style = bold, label=""];
8->7 [style = solid, label="offset"];
8->7 [style = bold, label=""];
1->17 [style = dashed, label="0"];
21->20 [style = bold, label=""];
6->4 [style = dotted, label="true"];
7->19 [style = dashed, label="0"];
0->4 [style = bold, label=""];
16->21 [style = bold, label=""];
14->23 [style = solid, label="valueSpace"];
21->19 [style = dotted, label="true"];
11->24 [style = dashed, label="0"];
21->14 [style = dotted, label="true"];
7->12 [style = dashed, label="0"];
10->5 [style = solid, label="level"];
6->5 [style = dotted, label="true"];
}
