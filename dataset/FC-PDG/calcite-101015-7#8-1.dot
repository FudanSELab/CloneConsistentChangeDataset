digraph {
2 [style = filled, label = "testTableModifyUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AssertThat that = CalciteAssert.model(JdbcTest.FOODMART_MODEL).enable(CalciteAssert.DB == DatabaseInstance.HSQLDB)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testTableModifyUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "that.doWithConnection(null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "that.doWithConnection(new Function<CalciteConnection,Void>(){public Void apply(CalciteConnection connection){try {final String sql = \"DELETE FROM \"foodmart\".\"expense_fact\"\" + \"WHERE \"store_id\"=666\"final String explain = \"PLAN=JdbcToEnumerableConverter\" + \" JdbcTableModify(table=((foodmart, expense_fact((, operation=(DELETE(, flattened=(false()\" + \" JdbcFilter(condition=(=($0, 666)()\" + \" JdbcTableScan(table=((foodmart, expense_fact((\"final String jdbcSql = \"DELETE FROM \"foodmart\".\"expense_fact\"\" + \"WHERE \"store_id\" = 666\"that.query(sql).explainContains(explain).planUpdateHasSql(jdbcSql,1)return null}catch (SQLException e) }})@@@4@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testTableModifyDelete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->4 [style = dashed, label="0"];
2->0 [style = bold, label=""];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
0->1 [style = bold, label=""];
3->0 [style = bold, label=""];
}
