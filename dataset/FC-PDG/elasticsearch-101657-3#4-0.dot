digraph {
3 [style = filled, label = "Supplier<InboundChannelBuffer.Page> supplier = null@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "InboundChannelBuffer.Page(( pages = channelBuffer.sliceAndRetainPagesTo(PAGE_SIZE * 2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testCloseRetainedPages['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertFalse(closedRef.get())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(queue.poll().get())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "InboundChannelBuffer channelBuffer = new InboundChannelBuffer(supplier)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "pages(0(.close()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertFalse(closedRef.get())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(PAGE_SIZE * 2,channelBuffer.getCapacity())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertTrue(queue.poll().get())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testReleaseClosesPages['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertFalse(closedRef.get())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(closedRef.get())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "channelBuffer.ensureCapacity(PAGE_SIZE * 4)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int i = 0@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(PAGE_SIZE * 4,channelBuffer.getCapacity())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ConcurrentLinkedQueue<AtomicBoolean> queue = new ConcurrentLinkedQueue<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "pages(1(.close()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(queue.poll().get())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(4,queue.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < 1@@@24@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertFalse(queue.poll().get())@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "channelBuffer.close()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Supplier<Page> supplier = null@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertTrue(closedRef.get())@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "channelBuffer.release(2 * PAGE_SIZE)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "++i@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testReleaseClosesPages['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26->22 [style = bold, label=""];
8->9 [style = bold, label=""];
15->1 [style = bold, label=""];
27->26 [style = solid, label="i"];
24->18 [style = bold, label=""];
16->26 [style = bold, label=""];
19->20 [style = bold, label=""];
16->19 [style = bold, label=""];
6->0 [style = bold, label=""];
22->16 [style = bold, label=""];
14->13 [style = bold, label=""];
23->16 [style = bold, label=""];
3->14 [style = dashed, label="0"];
11->6 [style = bold, label=""];
1->14 [style = bold, label=""];
3->13 [style = bold, label=""];
2->8 [style = bold, label=""];
0->24 [style = bold, label=""];
10->1 [style = bold, label=""];
13->12 [style = bold, label=""];
1->3 [style = bold, label=""];
2->24 [style = dashed, label="0"];
26->23 [style = dotted, label="false"];
7->4 [style = bold, label=""];
14->13 [style = solid, label="supplier"];
27->26 [style = bold, label=""];
12->6 [style = bold, label=""];
26->23 [style = bold, label=""];
18->17 [style = bold, label=""];
12->11 [style = bold, label=""];
21->1 [style = bold, label=""];
0->2 [style = bold, label=""];
25->27 [style = bold, label=""];
3->13 [style = solid, label="supplier"];
9->5 [style = bold, label=""];
26->22 [style = dotted, label="true"];
5->17 [style = dashed, label="0"];
5->7 [style = bold, label=""];
17->25 [style = bold, label=""];
}
