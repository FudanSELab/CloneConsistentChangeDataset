digraph {
8 [style = filled, label = "state.initialize(new OffsetAndEpoch(0L,logEndEpoch))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testLeaderToUnattached['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "state.transitionToLeader(0L)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(ElectionState.withVotedCandidate(5,otherNodeId,voters),store.readElectionState())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "state.candidateStateOrThrow().recordGrantedVote(otherNodeId)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(5,state.epoch())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(ElectionState.withUnknownLeader(5,voters),store.readElectionState())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "QuorumState state = initializeEmptyState(voters)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int otherNodeId = 1@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(otherNodeId,votedState.votedId())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(OptionalInt.empty(),state.leaderId())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "VotedState votedState = state.votedStateOrThrow()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "state.transitionToCandidate()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "state.transitionToVoted(5,otherNodeId)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "state.transitionToLeader(0L,accumulator)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Set<Integer> voters = Utils.mkSet(localId,otherNodeId)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testLeaderToUnattached['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testLeaderToVoted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "state.transitionToUnattached(5)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->18 [style = solid, label="otherNodeId"];
10->15 [style = bold, label=""];
0->17 [style = bold, label=""];
11->7 [style = solid, label="otherNodeId"];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
10->3 [style = bold, label=""];
10->13 [style = dashed, label="0"];
9->8 [style = bold, label=""];
1->13 [style = bold, label=""];
15->5 [style = bold, label=""];
7->16 [style = solid, label="voters"];
11->16 [style = solid, label="otherNodeId"];
7->9 [style = bold, label=""];
3->5 [style = bold, label=""];
13->3 [style = bold, label=""];
5->0 [style = bold, label=""];
6->11 [style = bold, label=""];
17->18 [style = bold, label=""];
11->15 [style = solid, label="otherNodeId"];
11->1 [style = solid, label="otherNodeId"];
7->9 [style = solid, label="voters"];
3->15 [style = dashed, label="0"];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
7->2 [style = solid, label="voters"];
1->10 [style = bold, label=""];
14->11 [style = bold, label=""];
11->7 [style = bold, label=""];
18->16 [style = bold, label=""];
}
