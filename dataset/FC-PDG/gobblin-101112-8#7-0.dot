digraph {
21 [style = filled, label = "RestLiResponseException exception2 = null@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "masterJobs == 2@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.node2FlowConfigClient.createFlowConfig(flowConfig2)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "attempt++@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "int masterJobs = master.flowCatalog.getSpecs().size()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testCreate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "GobblinServiceManager master@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "logger.info(\"+++++++++++++++++++ testCreate END\")@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "attempt < 800@@@29@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "logger.info(\"#### node 2 is manager\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "logger.info(\"+++++++++++++++++++ testCreateAgain START\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(exception2.getStatus(),com.linkedin.restli.common.HttpStatus.S_409_CONFLICT.getCode())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Assert.assertNotNull(exception2)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "master = this.node1GobblinServiceManager@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "RestLiResponseException exception1 = null@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testCreateAgain['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "this.node1GobblinServiceManager.isLeader()@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testCreateAgain['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "RestLiResponseException e@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "this.node2FlowConfigClient.createFlowConfig(flowConfig2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "FlowConfig flowConfig1 = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME_1).setFlowName(TEST_FLOW_NAME_1)).setTemplateUris(TEST_TEMPLATE_URI_1).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE_1).setRunImmediately(true)).setProperties(new StringMap(flowProperties))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "master = this.node2GobblinServiceManager@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Assert.fail(\"No leader found in service cluster\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY,TEST_SOURCE_NAME)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RestLiResponseException e@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.fail(\"Create Again should pass without complaining that the spec already exists.\")@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<String,String> flowProperties = Maps.newHashMap()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "logger.info(\"#### node 1 is manager\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "this.node2GobblinServiceManager.isLeader()@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "boolean assertSuccess = false@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "exception2 = e@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Assert.fail(\"Create Again should pass without complaining that the spec already exists.\")@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "flowProperties.put(\"param1\",\"value1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.node1FlowConfigClient.createFlowConfig(flowConfig1)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int attempt = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertSuccess = true@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "logger.info(\"+++++++++++++++++++ testCreate START\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "Thread.sleep(3000)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "return@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "logger.info(\"+++++++++++++++++++ testCreateAgain END\")@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(assertSuccess,\"Flow that was created is not reflecting in FlowCatalog\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "long schedulingEndTime = System.currentTimeMillis()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "logger.info(\"Total scheduling time in ms: \" + (schedulingEndTime - schedulingStartTime))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_DESTINATION_IDENTIFIER_KEY,TEST_SINK_NAME)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(exception1.getStatus(),com.linkedin.restli.common.HttpStatus.S_409_CONFLICT.getCode())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertNotNull(exception1)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Thread.sleep(5)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "long schedulingStartTime = System.currentTimeMillis()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "exception1 = e@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "FlowConfig flowConfig2 = new FlowConfig().setId(new FlowId().setFlowGroup(TEST_GROUP_NAME_2).setFlowName(TEST_FLOW_NAME_2)).setTemplateUris(TEST_TEMPLATE_URI_2).setSchedule(new Schedule().setCronSchedule(TEST_SCHEDULE_2).setRunImmediately(true)).setProperties(new StringMap(flowProperties))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->34 [style = bold, label=""];
6->23 [style = dotted, label="true"];
3->10 [style = bold, label=""];
2->4 [style = bold, label=""];
11->12 [style = bold, label=""];
24->33 [style = bold, label=""];
31->27 [style = solid, label="attempt"];
30->43 [style = bold, label=""];
35->42 [style = bold, label=""];
12->1 [style = bold, label=""];
17->14 [style = bold, label=""];
10->11 [style = bold, label=""];
8->11 [style = solid, label="flowProperties"];
7->22 [style = bold, label=""];
16->13 [style = bold, label=""];
31->32 [style = bold, label=""];
5->13 [style = bold, label=""];
42->33 [style = dotted, label="true"];
46->43 [style = dotted, label="true"];
14->8 [style = bold, label=""];
15->16 [style = bold, label=""];
44->45 [style = dotted, label="true"];
38->35 [style = bold, label=""];
9->14 [style = bold, label=""];
45->26 [style = solid, label="assertSuccess"];
14->28 [style = dashed, label="0"];
49->31 [style = bold, label=""];
4->3 [style = bold, label=""];
48->25 [style = bold, label=""];
32->26 [style = solid, label="assertSuccess"];
27->48 [style = solid, label="attempt"];
11->20 [style = bold, label=""];
33->31 [style = bold, label=""];
48->27 [style = dotted, label="true"];
41->44 [style = bold, label=""];
41->44 [style = solid, label="masterJobs"];
28->8 [style = bold, label=""];
10->12 [style = solid, label="flowConfig1"];
6->0 [style = dotted, label="true"];
7->5 [style = dotted, label="true"];
46->39 [style = dotted, label="false"];
8->2 [style = bold, label=""];
46->39 [style = bold, label=""];
34->40 [style = solid, label="schedulingStartTime"];
12->18 [style = bold, label=""];
1->15 [style = bold, label=""];
11->1 [style = solid, label="flowConfig2"];
23->18 [style = bold, label=""];
23->18 [style = solid, label="exception1"];
6->23 [style = bold, label=""];
7->22 [style = dotted, label="true"];
20->12 [style = bold, label=""];
1->13 [style = bold, label=""];
42->24 [style = bold, label=""];
39->49 [style = bold, label=""];
25->40 [style = solid, label="schedulingEndTime"];
6->0 [style = bold, label=""];
48->41 [style = dotted, label="true"];
48->36 [style = dotted, label="true"];
48->44 [style = dotted, label="true"];
40->26 [style = bold, label=""];
47->48 [style = bold, label=""];
46->30 [style = bold, label=""];
11->38 [style = solid, label="flowConfig2"];
21->15 [style = solid, label="exception2"];
22->15 [style = solid, label="exception2"];
7->5 [style = bold, label=""];
21->1 [style = bold, label=""];
42->24 [style = dotted, label="true"];
25->40 [style = bold, label=""];
31->48 [style = solid, label="attempt"];
36->27 [style = bold, label=""];
43->31 [style = bold, label=""];
27->48 [style = bold, label=""];
29->28 [style = bold, label=""];
44->45 [style = bold, label=""];
46->49 [style = dotted, label="false"];
22->15 [style = bold, label=""];
46->30 [style = dotted, label="true"];
42->46 [style = dotted, label="false"];
12->38 [style = bold, label=""];
0->1 [style = bold, label=""];
48->41 [style = bold, label=""];
19->21 [style = bold, label=""];
18->19 [style = bold, label=""];
20->18 [style = solid, label="exception1"];
34->12 [style = bold, label=""];
42->46 [style = bold, label=""];
32->47 [style = bold, label=""];
44->36 [style = bold, label=""];
8->10 [style = solid, label="flowProperties"];
45->25 [style = bold, label=""];
26->37 [style = bold, label=""];
}
