digraph {
47 [style = filled, label = "Thread takeThread = new Thread(){public void run(){try {takeResult(0( = queueHandles(0(.take()}catch (KeeperException e) catch (InterruptedException e) }}@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "i++@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "int m@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "int n@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "final int numClients = 2@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "int i = 0@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "Thread offerThread = new Thread(){public void run(){try {queueHandles(0(.offer(testString.getBytes())}catch (KeeperException e) catch (InterruptedException e) }}@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final int num_clients = 2@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "offerThread.start()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "int m@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "offerThread.join()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "clients(i( = createClient()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i < m@@@21@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "final byte(( takeResult = new byte((((((@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < n@@@14@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "i++@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "testTakeWait1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int i = 0@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "createNremoveMtest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Assert.assertNotNull(data)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i++@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "Assert.assertTrue(takeResult(0( != null)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < clients.length@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = 0@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "i++@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "int i = 0@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String dir@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "i++@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "String dir@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "createNremoveMtest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Assert.assertEquals(new String(data),testString + (m - 1))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "takeThread.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "i < n@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "takeThread.join()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "Thread.sleep(1000)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String offerString = testString + i@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < m@@@21@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "data = queueHandles(1(.remove()@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "byte(( data = null@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int i = 0@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "i++@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final int num_clients = 1@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "int n@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
19->10 [style = dotted, label="true"];
39->19 [style = bold, label=""];
43->55 [style = bold, label=""];
14->7 [style = solid, label="i"];
10->54 [style = bold, label=""];
16->7 [style = bold, label=""];
17->6 [style = solid, label="m"];
30->29 [style = bold, label=""];
0->15 [style = bold, label=""];
24->30 [style = bold, label=""];
13->46 [style = dashed, label="0"];
19->5 [style = bold, label=""];
2->10 [style = solid, label="clients"];
32->25 [style = dotted, label="true"];
1->49 [style = dashed, label="0"];
36->24 [style = bold, label=""];
21->36 [style = bold, label=""];
38->15 [style = dotted, label="true"];
10->39 [style = bold, label=""];
37->38 [style = bold, label=""];
39->19 [style = solid, label="i"];
51->47 [style = bold, label=""];
12->18 [style = bold, label=""];
3->0 [style = dotted, label="true"];
1->12 [style = bold, label=""];
21->40 [style = solid, label="data"];
5->19 [style = solid, label="i"];
12->44 [style = dashed, label="0"];
18->52 [style = dashed, label="0"];
7->6 [style = solid, label="i"];
40->31 [style = bold, label=""];
46->50 [style = bold, label=""];
26->38 [style = solid, label="i"];
20->26 [style = dashed, label="0"];
5->10 [style = bold, label=""];
22->3 [style = solid, label="n"];
1->41 [style = bold, label=""];
50->19 [style = bold, label=""];
32->35 [style = dotted, label="true"];
37->38 [style = solid, label="i"];
19->20 [style = bold, label=""];
27->24 [style = solid, label="m"];
3->38 [style = dashed, label="0"];
26->37 [style = solid, label="i"];
5->39 [style = dashed, label="0"];
20->3 [style = bold, label=""];
19->2 [style = bold, label=""];
24->40 [style = bold, label=""];
57->45 [style = bold, label=""];
10->39 [style = solid, label="i"];
30->31 [style = solid, label="data"];
3->0 [style = bold, label=""];
29->24 [style = solid, label="i"];
13->28 [style = dashed, label="0"];
36->24 [style = solid, label="i"];
14->6 [style = solid, label="i"];
26->0 [style = solid, label="i"];
19->26 [style = bold, label=""];
54->2 [style = bold, label=""];
7->6 [style = bold, label=""];
38->0 [style = bold, label=""];
6->7 [style = dotted, label="true"];
56->48 [style = bold, label=""];
53->43 [style = bold, label=""];
2->5 [style = solid, label="i"];
14->6 [style = bold, label=""];
38->37 [style = dotted, label="true"];
20->8 [style = solid, label="i"];
10->5 [style = solid, label="i"];
20->3 [style = solid, label="i"];
52->46 [style = bold, label=""];
47->42 [style = bold, label=""];
23->40 [style = dashed, label="0"];
6->23 [style = bold, label=""];
5->10 [style = dotted, label="true"];
4->10 [style = solid, label="dir"];
49->44 [style = bold, label=""];
8->3 [style = bold, label=""];
35->38 [style = solid, label="n"];
11->17 [style = dotted, label="true"];
24->30 [style = dotted, label="true"];
21->31 [style = solid, label="data"];
11->4 [style = dotted, label="true"];
2->10 [style = bold, label=""];
58->49 [style = bold, label=""];
12->41 [style = dashed, label="0"];
49->54 [style = solid, label="dir"];
5->19 [style = bold, label=""];
34->28 [style = bold, label=""];
18->34 [style = dashed, label="0"];
10->5 [style = bold, label=""];
30->40 [style = solid, label="data"];
9->19 [style = solid, label="i"];
16->23 [style = solid, label="data"];
16->30 [style = dashed, label="0"];
27->31 [style = solid, label="m"];
32->1 [style = bold, label=""];
3->15 [style = dotted, label="true"];
20->0 [style = solid, label="i"];
19->5 [style = dotted, label="true"];
1->0 [style = solid, label="testString"];
9->19 [style = bold, label=""];
1->23 [style = solid, label="testString"];
21->23 [style = solid, label="data"];
3->21 [style = bold, label=""];
19->39 [style = dotted, label="true"];
13->9 [style = bold, label=""];
33->19 [style = bold, label=""];
15->37 [style = bold, label=""];
41->34 [style = bold, label=""];
15->8 [style = bold, label=""];
2->5 [style = bold, label=""];
21->14 [style = bold, label=""];
5->2 [style = dotted, label="true"];
22->35 [style = dashed, label="0"];
44->45 [style = solid, label="testString"];
1->31 [style = solid, label="testString"];
8->37 [style = dashed, label="0"];
8->0 [style = solid, label="i"];
5->51 [style = bold, label=""];
8->3 [style = solid, label="i"];
48->57 [style = bold, label=""];
11->1 [style = bold, label=""];
19->2 [style = dotted, label="true"];
17->23 [style = solid, label="m"];
24->29 [style = dotted, label="true"];
54->2 [style = solid, label="i"];
38->0 [style = dotted, label="true"];
14->36 [style = dashed, label="0"];
11->22 [style = dotted, label="true"];
55->56 [style = bold, label=""];
9->33 [style = dashed, label="0"];
26->38 [style = bold, label=""];
25->10 [style = solid, label="dir"];
32->27 [style = dotted, label="true"];
51->45 [style = solid, label="takeResult"];
10->54 [style = solid, label="clients"];
28->33 [style = bold, label=""];
19->5 [style = solid, label="i"];
37->0 [style = solid, label="i"];
6->16 [style = bold, label=""];
6->24 [style = dashed, label="0"];
36->29 [style = solid, label="i"];
44->52 [style = bold, label=""];
18->13 [style = bold, label=""];
5->54 [style = dotted, label="true"];
38->21 [style = bold, label=""];
7->29 [style = dashed, label="0"];
33->19 [style = solid, label="i"];
29->24 [style = bold, label=""];
3->8 [style = dotted, label="true"];
42->53 [style = bold, label=""];
51->57 [style = solid, label="takeResult"];
6->16 [style = dotted, label="true"];
3->47 [style = dashed, label="0"];
}
