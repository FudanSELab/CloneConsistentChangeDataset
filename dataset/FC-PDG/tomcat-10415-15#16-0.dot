digraph {
2 [style = filled, label = "netInBuffer.clear()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "boolean cont = false@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "netInBuffer.flip()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "throw new IOException(sm.getString(\"channel.nio.ssl.eofDuringHandshake\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int read = sc.read(netInBuffer)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "handshakeStatus = tasks()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "handshakeUnwrap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean doread@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "read == -1@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "handshakeUnwrap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doread@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "netInBuffer.compact()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "cont@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "result = sslEngine.unwrap(netInBuffer,getBufHandler().getReadBuffer())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SSLEngineResult result@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "getBufHandler().configureReadBufferForWrite()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "result.getStatus() == SSLEngineResult.Status.OK && result.getHandshakeStatus() == HandshakeStatus.NEED_TASK@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cont = result.getStatus() == SSLEngineResult.Status.OK && handshakeStatus == HandshakeStatus.NEED_UNWRAP@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cont@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "result.getStatus() == SSLEngineResult.Status.OK && result.getHandshakeStatus() == HandshakeStatus.NEED_TASK@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "handshakeStatus = result.getHandshakeStatus()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return result@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "handshakeUnwrap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "netInBuffer.position() == netInBuffer.limit()@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
3->19 [style = dashed, label="0"];
3->12 [style = dotted, label="true"];
23->22 [style = bold, label=""];
3->10 [style = bold, label=""];
5->19 [style = bold, label=""];
11->4 [style = bold, label=""];
19->10 [style = bold, label=""];
9->11 [style = bold, label=""];
14->18 [style = bold, label=""];
20->21 [style = dotted, label="true"];
2->13 [style = bold, label=""];
1->12 [style = bold, label=""];
6->0 [style = bold, label=""];
18->23 [style = dotted, label="true"];
14->13 [style = bold, label=""];
18->13 [style = bold, label=""];
3->8 [style = dotted, label="true"];
16->0 [style = bold, label=""];
19->5 [style = dotted, label="true"];
4->8 [style = bold, label=""];
19->9 [style = dotted, label="true"];
8->6 [style = bold, label=""];
22->17 [style = bold, label=""];
19->8 [style = dotted, label="true"];
19->4 [style = dotted, label="true"];
7->14 [style = bold, label=""];
6->0 [style = dotted, label="true"];
12->9 [style = bold, label=""];
19->16 [style = dotted, label="true"];
0->5 [style = solid, label="handshakeStatus"];
2->18 [style = bold, label=""];
19->11 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
16->0 [style = dotted, label="true"];
19->12 [style = dotted, label="true"];
3->12 [style = bold, label=""];
17->13 [style = bold, label=""];
5->19 [style = solid, label="cont"];
3->6 [style = dotted, label="true"];
8->5 [style = solid, label="handshakeStatus"];
6->16 [style = dashed, label="0"];
3->11 [style = dotted, label="true"];
15->13 [style = bold, label=""];
6->5 [style = bold, label=""];
14->2 [style = dotted, label="true"];
5->3 [style = solid, label="cont"];
16->5 [style = bold, label=""];
14->2 [style = bold, label=""];
13->1 [style = bold, label=""];
5->3 [style = bold, label=""];
0->5 [style = bold, label=""];
20->14 [style = bold, label=""];
3->9 [style = dotted, label="true"];
3->5 [style = dotted, label="true"];
22->17 [style = dotted, label="true"];
19->12 [style = bold, label=""];
18->22 [style = dotted, label="true"];
21->18 [style = solid, label="doread"];
23->22 [style = solid, label="read"];
22->13 [style = bold, label=""];
11->10 [style = solid, label="result"];
18->23 [style = bold, label=""];
}
