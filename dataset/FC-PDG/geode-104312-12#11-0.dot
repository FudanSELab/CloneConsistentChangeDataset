digraph {
15 [style = filled, label = "statusWithPidReturnsOnlineWithDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "givenRunningServer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(locatorState.getClasspath()).isEqualTo(getClassPath())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(serverState.getClasspath()).isEqualTo(getClassPath())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "LocatorState locatorState = new Builder().setPid(getLocatorPid()).build().status()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "statusWithPidReturnsOnlineWithDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(serverState.getUptime()).isGreaterThan(0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(serverState.getMemberName()).isEqualTo(getUniqueName())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertThat(locatorState.getPid().intValue()).isEqualTo(getLocatorPid())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(locatorState.getUptime()).isGreaterThan(0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(locatorState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "givenRunningLocator(withPort(0))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(serverState.getHost()).isEqualTo(getLocalHost().getCanonicalHostName())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "statusWithWorkingDirectoryReturnsOnlineWithDetails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath())@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(serverState.getPid().intValue()).isEqualTo(readPidFile())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "givenRunningLocator()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "ServerState serverState = new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(locatorState.getStatus()).isEqualTo(ONLINE)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(serverState.getStatus()).isEqualTo(ONLINE)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->28 [style = dashed, label="0"];
1->8 [style = bold, label=""];
2->20 [style = dashed, label="0"];
5->9 [style = bold, label=""];
15->14 [style = bold, label=""];
9->24 [style = dashed, label="0"];
7->16 [style = dashed, label="0"];
22->29 [style = bold, label=""];
11->23 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
1->18 [style = dashed, label="0"];
5->25 [style = dashed, label="0"];
16->17 [style = bold, label=""];
8->21 [style = dashed, label="0"];
17->23 [style = bold, label=""];
14->1 [style = bold, label=""];
19->25 [style = bold, label=""];
23->28 [style = bold, label=""];
25->24 [style = bold, label=""];
12->10 [style = bold, label=""];
10->26 [style = dashed, label="0"];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
29->19 [style = bold, label=""];
8->2 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
6->11 [style = bold, label=""];
7->6 [style = bold, label=""];
0->29 [style = dashed, label="0"];
3->13 [style = bold, label=""];
4->19 [style = dashed, label="0"];
2->7 [style = bold, label=""];
18->21 [style = bold, label=""];
10->1 [style = bold, label=""];
13->22 [style = dashed, label="0"];
4->5 [style = bold, label=""];
10->14 [style = dashed, label="0"];
28->22 [style = bold, label=""];
13->0 [style = bold, label=""];
26->18 [style = bold, label=""];
27->26 [style = bold, label=""];
}
