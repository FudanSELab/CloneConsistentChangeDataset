digraph {
4 [style = filled, label = "testReentrant2Threads['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testReentrant['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),new ExponentialBackoffRetry(100,3))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.start()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "{CloseableUtils.closeQuietly(client)}@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "foo(mutex)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testReentrant2Threads['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "foo(mutex)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "InterProcessLock mutex = makeLock(client)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertFalse(mutex.isAcquiredInThisProcess())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Executors.newSingleThreadExecutor().submit(new Callable<Object>(){@Override public Object call(){Assert.assertTrue(countLatchForBar.await(10,TimeUnit.SECONDS))try {mutex.acquire(10,TimeUnit.SECONDS)Assert.fail()}catch (Exception e) {waitLatchForBar.countDown()}return null}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "countLatchForBar = new CountDownLatch(1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{TestCleanState.closeAndTestClean(client)}@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "waitLatchForBar = new CountDownLatch(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final InterProcessLock mutex = makeLock(client)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(mutex.isAcquiredInThisProcess())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
6->14 [style = solid, label="client"];
14->15 [style = solid, label="mutex"];
4->6 [style = bold, label=""];
6->0 [style = solid, label="client"];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
6->11 [style = solid, label="client"];
1->0 [style = bold, label=""];
6->5 [style = solid, label="client"];
10->6 [style = bold, label=""];
8->7 [style = bold, label=""];
3->9 [style = bold, label=""];
7->5 [style = bold, label=""];
0->8 [style = solid, label="mutex"];
14->15 [style = bold, label=""];
15->12 [style = bold, label=""];
13->6 [style = bold, label=""];
9->1 [style = bold, label=""];
2->8 [style = bold, label=""];
}
