digraph {
26 [style = filled, label = "when(metricsCreator.createHistogramMetric(any(),any(),any(),any(),any())).thenReturn(new HistogramMetrics(){@Override public void observe(double value){}})@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "remoteMessage.setNextWorkerId(testWorkerId)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "streamObserver.onCompleted()@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "moduleManager.put(TelemetryModule.NAME,telemetryModuleDefine)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,classGetter)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "StreamDataClassGetter classGetter = mock()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "when(metricsCreator.createCounter(any(),any(),any(),any())).thenReturn(new CounterMetrics(){@Override public void inc(){}@Override public void inc(double value){}})@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "callTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "RemoteData.Builder remoteData = RemoteData.newBuilder()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ModuleManagerTesting moduleManager = new ModuleManagerTesting()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "gRPCCleanup.register(InProcessServerBuilder.forName(serverName).directExecutor().addService(new RemoteServiceHandler(moduleManager)).build().start())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "Class<?> dataClass = @@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "final int testWorkerId = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "telemetryModuleDefine.provider().registerServiceImplementation(,metricsCreator)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "RemoteMessage.Builder remoteMessage = RemoteMessage.newBuilder()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "before['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "RemoteServiceGrpc.RemoteServiceStub remoteServiceStub = RemoteServiceGrpc.newStub(gRPCCleanup.register(InProcessChannelBuilder.forName(serverName).directExecutor().build()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,workerInstancesService)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "WorkerInstancesService workerInstancesService = new WorkerInstancesService()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int streamDataClassId = 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "moduleDefine.provider().registerServiceImplementation(,classGetter)@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "moduleManager.put(CoreModule.NAME,moduleDefine)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "remoteData.addDataStrings(\"test2\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "when(classGetter.findClassById(streamDataClassId)).thenReturn((Class<StreamData>)dataClass)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "remoteData.addDataStrings(\"test1\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "StreamObserver<RemoteMessage> streamObserver = remoteServiceStub.call(new StreamObserver<Empty>(){@Override public void onNext(Empty empty){}@Override public void onError(Throwable throwable){}@Override public void onCompleted(){}})@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "classGetter = mock()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "remoteMessage.setRemoteData(remoteData)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "ModuleDefineTesting telemetryModuleDefine = new ModuleDefineTesting()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "remoteData.addDataLongs(10)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "remoteData.addDataLongs(20)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ModuleDefineTesting moduleDefine = new ModuleDefineTesting()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "before['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "MetricsCreator metricsCreator = mock()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "remoteMessage.setStreamDataId(streamDataClassId)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "String serverName = InProcessServerBuilder.generateName()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "streamObserver.onNext(remoteMessage.build())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "moduleManager = new ModuleManagerTesting()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
4->6 [style = bold, label=""];
38->32 [style = bold, label=""];
1->25 [style = dashed, label="0"];
14->38 [style = bold, label=""];
11->4 [style = bold, label=""];
8->11 [style = dashed, label="0"];
8->4 [style = bold, label=""];
39->13 [style = solid, label="metricsCreator"];
7->10 [style = bold, label=""];
4->0 [style = solid, label="workerInstancesService"];
2->5 [style = bold, label=""];
5->9 [style = solid, label="moduleManager"];
6->0 [style = bold, label=""];
35->24 [style = solid, label="dataClass"];
1->8 [style = bold, label=""];
0->9 [style = bold, label=""];
14->28 [style = solid, label="streamDataClassId"];
1->8 [style = solid, label="moduleDefine"];
10->11 [style = bold, label=""];
10->11 [style = solid, label="classGetter"];
3->7 [style = bold, label=""];
19->33 [style = bold, label=""];
13->18 [style = bold, label=""];
40->26 [style = bold, label=""];
32->1 [style = bold, label=""];
27->29 [style = bold, label=""];
4->6 [style = solid, label="workerInstancesService"];
15->27 [style = bold, label=""];
20->21 [style = bold, label=""];
12->5 [style = bold, label=""];
23->17 [style = solid, label="telemetryModuleDefine"];
21->19 [style = bold, label=""];
3->7 [style = solid, label="moduleDefine"];
28->36 [style = bold, label=""];
25->35 [style = bold, label=""];
36->31 [style = bold, label=""];
17->13 [style = bold, label=""];
38->36 [style = solid, label="testWorkerId"];
8->25 [style = bold, label=""];
31->21 [style = solid, label="remoteData"];
1->10 [style = dashed, label="0"];
24->9 [style = bold, label=""];
18->37 [style = bold, label=""];
30->28 [style = bold, label=""];
26->23 [style = bold, label=""];
1->8 [style = solid, label="classGetter"];
39->40 [style = bold, label=""];
25->9 [style = solid, label="classGetter"];
5->3 [style = bold, label=""];
7->1 [style = bold, label=""];
16->30 [style = bold, label=""];
31->15 [style = bold, label=""];
35->24 [style = bold, label=""];
23->17 [style = bold, label=""];
34->14 [style = bold, label=""];
37->16 [style = bold, label=""];
29->20 [style = bold, label=""];
22->39 [style = bold, label=""];
}
