digraph {
10 [style = filled, label = "TestAllExtensions.Builder builder = TestAllExtensions.newBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Message.Builder fieldBuilder = builder.newBuilderForField(UnittestProto.optionalNestedMessageExtension.getDescriptor())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGetBuilderForExtensionField['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "fieldBuilder.setField(field,expected)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(fieldBuilder.build().getField(field)).isEqualTo(expected)@@@8@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "fieldBuilder.setField(field,expected)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "FieldDescriptor field = NestedMessage.getDescriptor().findFieldByNumber(NestedMessage.BB_FIELD_NUMBER)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Message.Builder fieldBuilder = builder.getFieldBuilder(UnittestProto.optionalNestedMessageExtension.getDescriptor())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int expected = 7432@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expected += 100@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testGetBuilderForExtensionField['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final int expected = 7432@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testGetFieldBuilderWithExistingMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DynamicMessage.Builder builder = DynamicMessage.newBuilder(TestAllExtensions.getDescriptor())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.setExtension(UnittestProto.optionalNestedMessageExtension,NestedMessage.newBuilder().setBb(123).build())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "FieldDescriptor field = NestedMessage.getDescriptor().findFieldByNumber(NestedMessage.BB_FIELD_NUMBER)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(expected,builder.build().getExtension(UnittestProto.optionalNestedMessageExtension).getBb())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = solid, label="field"];
5->2 [style = solid, label="expected"];
0->2 [style = solid, label="field"];
2->7 [style = bold, label=""];
6->14 [style = dashed, label="0"];
15->12 [style = bold, label=""];
13->17 [style = bold, label=""];
11->14 [style = solid, label="expected"];
2->12 [style = solid, label="field"];
5->7 [style = solid, label="expected"];
3->13 [style = dashed, label="0"];
15->12 [style = solid, label="expected"];
3->5 [style = bold, label=""];
11->2 [style = bold, label=""];
16->10 [style = bold, label=""];
4->1 [style = bold, label=""];
8->1 [style = bold, label=""];
12->9 [style = bold, label=""];
5->0 [style = bold, label=""];
1->3 [style = bold, label=""];
6->14 [style = bold, label=""];
10->13 [style = bold, label=""];
11->6 [style = solid, label="expected"];
5->6 [style = solid, label="expected"];
1->10 [style = dashed, label="0"];
17->11 [style = bold, label=""];
2->6 [style = solid, label="field"];
2->6 [style = bold, label=""];
0->2 [style = bold, label=""];
14->15 [style = bold, label=""];
6->7 [style = dashed, label="0"];
15->9 [style = solid, label="expected"];
}
