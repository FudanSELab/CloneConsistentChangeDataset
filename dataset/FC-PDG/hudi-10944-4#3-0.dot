digraph {
1 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,getSimpleSchema().toString())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testBasicAppendAndRead['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "writer.close()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "dataBlock = new HoodieAvroDataBlock(records2,header)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "HoodieAvroDataBlock dataBlock = new HoodieAvroDataBlock(records,header)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(copyOfRecords2.size(),dataBlockRead.getRecords().size(),\"Read records size should be equal to the written records size\")@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "reader.hasNext()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Schema schema = getSimpleSchema()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<IndexedRecord> copyOfRecords2 = records2.stream().map(null).collect(Collectors.toList())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "dataBlockRead = (HoodieDataBlock)nextBlock@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "writer = writer.appendBlock(dataBlock)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nextBlock = reader.next()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(copyOfRecords3.size(),dataBlockRead.getRecords().size(),\"Read records size should be equal to the written records size\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Map<HoodieLogBlock.HeaderMetadataType,String> header = new HashMap<>()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "dataBlock = getDataBlock(records2,header)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(copyOfRecords2,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "HoodieDataBlock dataBlock = getDataBlock(records1,header)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "dataBlockRead = (HoodieAvroDataBlock)nextBlock@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "HoodieLogBlock nextBlock = reader.next()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(dataBlockRead.getSchema(),getSimpleSchema())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<IndexedRecord> copyOfRecords1 = records1.stream().map(null).collect(Collectors.toList())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "reader.close()@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "writer = writer.appendBlock(dataBlock)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<IndexedRecord> records1 = SchemaTestUtil.generateTestRecords(0,100)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<HoodieLogBlock.HeaderMetadataType,String> header = new HashMap<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "List<IndexedRecord> copyOfRecords3 = records3.stream().map(null).collect(Collectors.toList())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "reader.hasNext()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "dataBlockRead = (HoodieAvroDataBlock)nextBlock@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "Reader reader = HoodieLogFormat.newReader(fs,writer.getLogFile(),SchemaTestUtil.getSimpleSchema())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "nextBlock = reader.next()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(copyOfRecords3,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Reader reader = HoodieLogFormat.newReader(fs,writer.getLogFile(),SchemaTestUtil.getSimpleSchema())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(copyOfRecords1,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "reader.close()@@@44@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "List<IndexedRecord> copyOfRecords = records.stream().map(null).collect(Collectors.toList())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "dataBlockRead = (HoodieDataBlock)nextBlock@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "Writer writer = HoodieLogFormat.newWriterBuilder().onParentPath(partitionPath).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(\"test-fileid1\").overBaseCommit(\"100\").withFs(fs).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "writer = writer.appendBlock(dataBlock)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "HoodieDataBlock dataBlockRead = (HoodieDataBlock)nextBlock@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "testBasicWriteAndScan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "dataBlock = new HoodieAvroDataBlock(records3,header)@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertTrue(reader.hasNext(),\"We wrote a block, we should be able to read it\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "HoodieLogBlock nextBlock = reader.next()@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testBasicAppendAndRead['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "writer.close()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,getSimpleSchema().toString())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<IndexedRecord> records3 = SchemaTestUtil.generateTestRecords(0,100)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "dataBlock = getDataBlock(records3,header)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(copyOfRecords,dataBlockRead.getRecords(),\"Both records lists should be the same. (ordering guaranteed)\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.INSTANT_TIME,\"100\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "List<IndexedRecord> records = SchemaTestUtil.generateTestRecords(0,100)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertEquals(HoodieLogBlockType.AVRO_DATA_BLOCK,nextBlock.getBlockType(),\"The next block should be a data block\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "List<IndexedRecord> records2 = SchemaTestUtil.generateTestRecords(0,100)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(copyOfRecords.size(),dataBlockRead.getRecords().size(),\"Read records size should be equal to the written records size\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "HoodieAvroDataBlock dataBlockRead = (HoodieAvroDataBlock)nextBlock@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "header.put(HoodieLogBlock.HeaderMetadataType.SCHEMA,getSimpleSchema().toString())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "writer.close()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "writer = writer.appendBlock(dataBlock)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "writer = HoodieLogFormat.newWriterBuilder().onParentPath(partitionPath).withFileExtension(HoodieLogFile.DELTA_EXTENSION).withFileId(\"test-fileid1\").overBaseCommit(\"100\").withFs(fs).build()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
14->42 [style = solid, label="nextBlock"];
55->17 [style = bold, label=""];
2->26 [style = bold, label=""];
17->56 [style = solid, label="header"];
30->20 [style = bold, label=""];
57->33 [style = bold, label=""];
29->0 [style = bold, label=""];
38->12 [style = bold, label=""];
13->9 [style = solid, label="header"];
49->0 [style = bold, label=""];
29->56 [style = bold, label=""];
46->27 [style = solid, label="dataBlock"];
3->4 [style = bold, label=""];
43->35 [style = solid, label="dataBlock"];
28->14 [style = bold, label=""];
22->8 [style = bold, label=""];
13->17 [style = bold, label=""];
43->35 [style = bold, label=""];
50->55 [style = bold, label=""];
29->56 [style = dashed, label="0"];
39->49 [style = bold, label=""];
24->52 [style = dashed, label="0"];
40->22 [style = bold, label=""];
38->12 [style = solid, label="nextBlock"];
18->46 [style = bold, label=""];
35->10 [style = bold, label=""];
9->46 [style = dashed, label="0"];
39->29 [style = bold, label=""];
10->11 [style = bold, label=""];
11->28 [style = bold, label=""];
23->25 [style = bold, label=""];
25->28 [style = bold, label=""];
38->45 [style = bold, label=""];
25->2 [style = bold, label=""];
0->23 [style = bold, label=""];
5->43 [style = dashed, label="0"];
17->39 [style = bold, label=""];
7->6 [style = bold, label=""];
22->49 [style = solid, label="records1"];
18->9 [style = bold, label=""];
31->41 [style = bold, label=""];
56->23 [style = bold, label=""];
2->9 [style = solid, label="records2"];
13->46 [style = solid, label="header"];
56->23 [style = solid, label="dataBlock"];
34->38 [style = bold, label=""];
51->42 [style = bold, label=""];
47->36 [style = bold, label=""];
33->58 [style = bold, label=""];
55->52 [style = solid, label="copyOfRecords"];
15->36 [style = bold, label=""];
32->24 [style = solid, label="copyOfRecords1"];
38->45 [style = solid, label="nextBlock"];
54->40 [style = bold, label=""];
12->45 [style = dashed, label="0"];
21->34 [style = bold, label=""];
14->42 [style = bold, label=""];
44->33 [style = bold, label=""];
2->46 [style = solid, label="records2"];
20->1 [style = bold, label=""];
42->33 [style = solid, label="nextBlock"];
28->51 [style = dashed, label="0"];
9->27 [style = bold, label=""];
13->43 [style = solid, label="header"];
24->31 [style = bold, label=""];
42->57 [style = bold, label=""];
33->24 [style = bold, label=""];
5->35 [style = solid, label="dataBlock"];
8->50 [style = bold, label=""];
41->16 [style = bold, label=""];
29->0 [style = solid, label="dataBlock"];
30->5 [style = solid, label="records3"];
33->58 [style = dashed, label="0"];
5->35 [style = bold, label=""];
13->49 [style = solid, label="header"];
50->56 [style = solid, label="records"];
49->0 [style = solid, label="dataBlock"];
16->15 [style = bold, label=""];
52->53 [style = bold, label=""];
8->32 [style = bold, label=""];
16->47 [style = bold, label=""];
26->21 [style = solid, label="copyOfRecords2"];
1->43 [style = bold, label=""];
15->47 [style = dashed, label="0"];
9->27 [style = solid, label="dataBlock"];
27->3 [style = bold, label=""];
22->29 [style = solid, label="records1"];
42->33 [style = bold, label=""];
14->44 [style = solid, label="nextBlock"];
28->51 [style = bold, label=""];
20->7 [style = solid, label="copyOfRecords3"];
14->44 [style = bold, label=""];
13->5 [style = solid, label="header"];
13->29 [style = solid, label="header"];
48->40 [style = bold, label=""];
42->44 [style = dashed, label="0"];
36->21 [style = bold, label=""];
4->30 [style = bold, label=""];
16->15 [style = solid, label="nextBlock"];
45->19 [style = bold, label=""];
46->27 [style = bold, label=""];
29->49 [style = dashed, label="0"];
58->52 [style = bold, label=""];
32->13 [style = bold, label=""];
12->19 [style = bold, label=""];
16->47 [style = solid, label="nextBlock"];
19->7 [style = bold, label=""];
37->40 [style = bold, label=""];
40->8 [style = bold, label=""];
26->18 [style = bold, label=""];
30->43 [style = solid, label="records3"];
}
