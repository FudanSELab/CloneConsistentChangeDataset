digraph {
6 [style = filled, label = "@NotNull DBCPlan plan@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "serialize['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "serialize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "@NotNull Writer writer@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "@NotNull Writer writer@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "serialize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "serializeJson(writer,plan,dataSource.getInfo().getDriverName(),new DBCQueryPlannerSerialInfo(){@Override public String version(){return \"json\"}@Override public void addNodeProperties(DBCPlanNode node,JsonObject nodeJson){JsonObject attributes = new JsonObject()OcientPlanNodeJson jsNode = (OcientPlanNodeJson)nodefor (Map.Entry<String,String> e : jsNode.getNodeProps().entrySet()){attributes.add(e.getKey(),new JsonPrimitive(CommonUtils.notEmpty(e.getValue())))}nodeJson.add(PROP_ATTRIBUTES,attributes)}})@@@3@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "@NotNull DBCPlan plan@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4->5 [style = dotted, label="true"];
3->2 [style = solid, label="plan"];
3->2 [style = solid, label="writer"];
1->3 [style = dotted, label="true"];
4->2 [style = bold, label=""];
5->2 [style = solid, label="plan"];
4->3 [style = dotted, label="true"];
7->2 [style = bold, label=""];
1->2 [style = bold, label=""];
1->0 [style = dotted, label="true"];
7->3 [style = dotted, label="true"];
6->2 [style = solid, label="plan"];
0->2 [style = solid, label="writer"];
7->6 [style = dotted, label="true"];
}
