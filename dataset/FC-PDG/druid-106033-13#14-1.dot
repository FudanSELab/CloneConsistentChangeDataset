digraph {
2 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(joinableClauses,originalFilter)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "VirtualColumns virtualColumns = VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(\"v1\",\"concat('virtual-column-', \"channel\")\",ValueType.STRING,TestExprMacroTable.INSTANCE)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableList.of())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\")))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableSet.of())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\"),null,ImmutableList.of())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8223,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8229,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c822f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8235,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c823b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8241,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8247,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c824d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8253,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8259,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c825f,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8265,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c826b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@8c8271))@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"channel\",\"#en.wikipedia\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
7->2 [style = solid, label="joinableClauses"];
5->8 [style = bold, label=""];
0->9 [style = bold, label=""];
8->4 [style = solid, label="originalFilter"];
15->7 [style = bold, label=""];
0->6 [style = bold, label=""];
7->0 [style = solid, label="joinableClauses"];
14->3 [style = solid, label="expectedFilterSplit"];
6->9 [style = dashed, label="0"];
12->15 [style = bold, label=""];
1->3 [style = bold, label=""];
7->13 [style = solid, label="originalFilter"];
6->3 [style = solid, label="expectedFilterSplit"];
1->3 [style = solid, label="actualFilterSplit"];
2->1 [style = solid, label="joinFilterPreAnalysis"];
2->0 [style = solid, label="joinFilterPreAnalysis"];
11->3 [style = solid, label="actualFilterSplit"];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
15->13 [style = solid, label="joinableClauses"];
6->1 [style = bold, label=""];
0->14 [style = bold, label=""];
2->0 [style = bold, label=""];
10->8 [style = bold, label=""];
7->4 [style = solid, label="originalFilter"];
11->3 [style = bold, label=""];
7->2 [style = bold, label=""];
0->4 [style = solid, label="virtualColumns"];
13->11 [style = solid, label="joinFilterPreAnalysis"];
9->1 [style = bold, label=""];
13->2 [style = solid, label="joinFilterPreAnalysis"];
14->11 [style = bold, label=""];
9->3 [style = solid, label="expectedFilterSplit"];
8->2 [style = solid, label="originalFilter"];
13->2 [style = bold, label=""];
15->2 [style = solid, label="joinableClauses"];
}
