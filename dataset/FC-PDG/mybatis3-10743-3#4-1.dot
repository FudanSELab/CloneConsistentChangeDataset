digraph {
7 [style = filled, label = "List<Map<String,String>> products = executor.query(selectStatement,null,RowBounds.DEFAULT,Executor.NO_RESULT_HANDLER)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{executor.rollback(true)executor.close(false)}@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertNotNull(m.get(\"subject\"))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertEquals(2,products.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Executor executor = createExecutor(new JdbcTransaction(connection))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Map<String,String>> products = executor.query(selectStatement,null,RowBounds.DEFAULT,Executor.NO_RESULT_HANDLER)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "List<Map<String,String>> products = executor.query(selectStatement,null,new RowBounds(2,2),Executor.NO_RESULT_HANDLER)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "shouldSelectDiscriminatedPost['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Executor executor = createExecutor(new JdbcTransaction(ds,null,false))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "shouldSelectDiscriminatedPost['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "{executor.rollback(true)executor.close(false)}@@@20@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MappedStatement selectStatement = ExecutorTestHelper.prepareSelectDiscriminatedPost(config)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "connection.rollback()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "\"IMAGES\".equals(m.get(\"SECTION\"))@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(m.get(\"subject\"))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNull(m.get(\"subject\"))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "Connection connection = ds.getConnection()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shouldSelect2DiscriminatedPosts['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DataSource ds = createBlogDataSource()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNotNull(m.get(\"subject\"))@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "\"IMAGES\".equals(m.get(\"SECTION\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->10 [style = bold, label=""];
16->0 [style = bold, label=""];
7->21 [style = dashed, label="0"];
9->0 [style = bold, label=""];
5->9 [style = bold, label=""];
5->9 [style = solid, label="connection"];
18->16 [style = solid, label="selectStatement"];
1->14 [style = dashed, label="0"];
11->12 [style = dotted, label="true"];
8->3 [style = bold, label=""];
12->11 [style = bold, label=""];
12->15 [style = bold, label=""];
4->19 [style = bold, label=""];
0->11 [style = bold, label=""];
11->12 [style = bold, label=""];
0->21 [style = bold, label=""];
7->4 [style = bold, label=""];
20->1 [style = bold, label=""];
8->10 [style = dotted, label="false"];
8->3 [style = dotted, label="true"];
19->8 [style = bold, label=""];
0->21 [style = solid, label="selectStatement"];
0->7 [style = bold, label=""];
6->1 [style = bold, label=""];
3->2 [style = bold, label=""];
10->8 [style = bold, label=""];
11->19 [style = dashed, label="0"];
3->8 [style = bold, label=""];
17->15 [style = bold, label=""];
11->17 [style = dotted, label="false"];
11->8 [style = bold, label=""];
11->17 [style = bold, label=""];
14->18 [style = bold, label=""];
10->2 [style = bold, label=""];
0->7 [style = solid, label="selectStatement"];
4->11 [style = bold, label=""];
13->14 [style = bold, label=""];
21->4 [style = bold, label=""];
17->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
