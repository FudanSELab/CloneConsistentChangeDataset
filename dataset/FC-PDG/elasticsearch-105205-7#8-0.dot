digraph {
8 [style = filled, label = "directory.close()@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 0@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "FilterAggregationBuilder builder = new FilterAggregationBuilder(\"test\",filter)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "filters(i( = QueryBuilders.termQuery(\"field\",randomAlphaOfLength(5))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FiltersAggregationBuilder builder = new FiltersAggregationBuilder(\"test\",filters)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i < filters.length@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "indexReader.close()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i++@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertFalse(AggregationInspectionHelper.hasValue(response))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int numFilters = randomIntBetween(1,10)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "IndexReader indexReader = DirectoryReader.open(directory)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "QueryBuilder filter = QueryBuilders.termQuery(\"field\",randomAlphaOfLength(5))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(AggregationInspectionHelper.hasValue(response))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(filter.getDocCount(),0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "IndexSearcher indexSearcher = newSearcher(indexReader,true,true)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(response.getDocCount(),0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "QueryBuilder(( filters = new QueryBuilder((((@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "InternalFilters response = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),builder,fieldType)@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "testEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "InternalFilter response = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),builder,fieldType)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "InternalFilters response = searchAndReduce(indexSearcher,new MatchAllDocsQuery(),builder,new KeywordFieldMapper.KeywordFieldType(\"field\"))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "directory.close()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "indexWriter.close()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "RandomIndexWriter indexWriter = new RandomIndexWriter(random(),directory)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "indexReader.close()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(response.getBuckets().size(),numFilters)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "builder.otherBucketKey(\"other\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Directory directory = newDirectory()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->20 [style = solid, label="builder"];
2->19 [style = solid, label="numFilters"];
5->10 [style = bold, label=""];
4->11 [style = solid, label="filters"];
16->13 [style = bold, label=""];
25->28 [style = bold, label=""];
23->27 [style = bold, label=""];
13->3 [style = dotted, label="true"];
7->3 [style = solid, label="i"];
19->12 [style = bold, label=""];
26->25 [style = bold, label=""];
18->19 [style = bold, label=""];
18->1 [style = solid, label="response"];
17->25 [style = solid, label="indexSearcher"];
13->7 [style = dotted, label="true"];
5->15 [style = solid, label="directory"];
5->10 [style = solid, label="directory"];
9->8 [style = bold, label=""];
12->1 [style = bold, label=""];
3->13 [style = solid, label="i"];
2->4 [style = bold, label=""];
10->6 [style = bold, label=""];
13->11 [style = bold, label=""];
22->5 [style = bold, label=""];
7->3 [style = bold, label=""];
17->20 [style = solid, label="indexSearcher"];
6->15 [style = bold, label=""];
11->18 [style = solid, label="builder"];
17->18 [style = solid, label="indexSearcher"];
1->9 [style = bold, label=""];
24->26 [style = solid, label="filter"];
20->1 [style = solid, label="response"];
21->5 [style = bold, label=""];
24->26 [style = bold, label=""];
15->17 [style = bold, label=""];
11->0 [style = bold, label=""];
17->24 [style = bold, label=""];
17->2 [style = bold, label=""];
25->23 [style = solid, label="response"];
28->23 [style = bold, label=""];
13->7 [style = bold, label=""];
18->20 [style = dashed, label="0"];
3->13 [style = bold, label=""];
0->18 [style = bold, label=""];
0->20 [style = bold, label=""];
16->13 [style = solid, label="i"];
7->11 [style = solid, label="filters"];
27->29 [style = bold, label=""];
20->19 [style = bold, label=""];
15->17 [style = solid, label="indexReader"];
26->25 [style = solid, label="builder"];
4->16 [style = bold, label=""];
14->5 [style = bold, label=""];
}
