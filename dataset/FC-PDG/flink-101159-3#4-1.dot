digraph {
56 [style = filled, label = "final MultipleInputTransformation<TestDataElement> multipleInputsTransform = new MultipleInputTransformation<>(\"MultipleInputOperator\",new MultiInputTestOperatorFactory(inputs.length,eventQueue,multipleInput),TypeInformation.of(),env.getParallelism())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "DataStream<?>(( inputs = new DataStream((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b6be83@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> forwardTransform = src.transform(\"transform-1-forward\",TypeInformation.of(),new OneInputTestStreamOperatorFactory(mapForward,eventQueue)).setUidHash(mapForward)@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "TestEventQueue eventQueue = TestEventQueue.createShared(shared)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "operatorsNumberOfInputs.put(mapForward,1)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "String mapForward = OP_ID_HASH_PREFIX + \"5\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "String multipleInput = OP_ID_HASH_PREFIX + \"8\"@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "return \"simple graph\"@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "String unitedSourceLeft = OP_ID_HASH_PREFIX + \"1\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String mapForward = OP_ID_HASH_PREFIX + \"5\"@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "DataStream<TestDataElement> unitedSources = env.addSource(new TestEventSource(unitedSourceLeft,eventQueue,commandQueue)).setUidHash(unitedSourceLeft).assignTimestampsAndWatermarks(createWmAssigner()).union(env.addSource(new TestEventSource(unitedSourceRight,eventQueue,commandQueue)).setUidHash(unitedSourceRight).assignTimestampsAndWatermarks(createWmAssigner()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "operatorsNumberOfInputs.put(mapKeyed,1)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> keyedTransform = forwardTransform.startNewChain().keyBy(null).transform(\"transform-2-keyed\",TypeInformation.of(),new OneInputTestStreamOperatorFactory(mapKeyed,eventQueue)).setUidHash(mapKeyed)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "operatorsNumberOfInputs.put(multipleInput,2)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "String unitedSourceRight = OP_ID_HASH_PREFIX + \"2\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return new TestJobWithDescription(env.getStreamGraph().getJobGraph(),singleton(unitedSourceLeft),new HashSet<>(singletonList(mapForward)),new HashSet<>(asList(unitedSourceLeft,mapForward)),operatorsNumberOfInputs,eventQueue,commandQueue)@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> forwardTransform = multipleSources.startNewChain().transform(\"transform-1-forward\",TypeInformation.of(),new OneInputTestStreamOperatorFactory(mapForward,eventQueue)).setUidHash(mapForward)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "String mapForward = OP_ID_HASH_PREFIX + \"5\"@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "operatorsNumberOfInputs.put(mapTwoInput,2)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Consumer<StreamExecutionEnvironment> envConsumer@@@3@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return new TestJobWithDescription(env.getStreamGraph().getJobGraph(),singleton(unitedSourceLeft),new HashSet<>(singletonList(mapForward)),new HashSet<>(asList(unitedSourceLeft,mapForward)),operatorsNumberOfInputs,eventQueue,commandQueue)@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "return new TestJobWithDescription(env.getStreamGraph().getJobGraph(),new HashSet<>(asList(unitedSourceLeft,unitedSourceRight,connectedSource)),new HashSet<>(asList(mapForward,mapKeyed,mapTwoInput,multipleInput)),new HashSet<>(asList(unitedSourceLeft,unitedSourceRight,connectedSource,mapForward,mapKeyed,mapTwoInput,multipleInput)),operatorsNumberOfInputs,eventQueue,commandQueue)@@@36@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "forwardTransform.addSink(new DiscardingSink<>())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "String multiSource = OP_ID_HASH_PREFIX + \"4\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Consumer<StreamExecutionEnvironment> envConsumer@@@3@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "multipleInputsTransform.setChainingStrategy(ChainingStrategy.HEAD_WITH_SOURCES)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "toString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "multipleInputsTransform.addInput(input.getTransformation())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Map<String,Integer> operatorsNumberOfInputs = new HashMap<>()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "DataStream<TestDataElement> src = env.addSource(new TestEventSource(unitedSourceLeft,eventQueue,commandQueue)).setUidHash(unitedSourceLeft).assignTimestampsAndWatermarks(createWmAssigner())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "operatorsNumberOfInputs.put(mapForward,1)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Consumer<StreamExecutionEnvironment> envConsumer@@@3@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> forwardTransform = src.transform(\"transform-1-forward\",TypeInformation.of(),new OneInputTestStreamOperatorFactory(mapForward,eventQueue)).setUidHash(mapForward)@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String mapKeyed = OP_ID_HASH_PREFIX + \"6\"@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "String connectedSource = OP_ID_HASH_PREFIX + \"3\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "StreamExecutionEnvironment env = prepareEnv(confConsumer,envConsumer)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TestCommandDispatcher commandQueue = TestCommandDispatcher.createShared(shared)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Map<String,Integer> operatorsNumberOfInputs = new HashMap<>()@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "env.addOperator(multipleInputsTransform)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "String mapTwoInput = OP_ID_HASH_PREFIX + \"7\"@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> multipleSources = new MultipleConnectedStreams(env).transform(multipleInputsTransform).setUidHash(multiSource)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "TestEventQueue eventQueue = TestEventQueue.createShared(shared)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "build['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "TestCommandDispatcher commandQueue = TestCommandDispatcher.createShared(shared)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "operatorsNumberOfInputs.put(mapForward,1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "return \"complex graph\"@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "toString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Map<String,Integer> operatorsNumberOfInputs = new HashMap<>()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "TestEventQueue eventQueue = TestEventQueue.createShared(shared)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> twoInputTransform = keyedTransform.startNewChain().connect(env.addSource(new TestEventSource(connectedSource,eventQueue,commandQueue)).setUidHash(connectedSource)).transform(\"transform-3-two-input\",TypeInformation.of(),new TwoInputTestStreamOperator(mapTwoInput,eventQueue)).setUidHash(mapTwoInput)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "forwardTransform.addSink(new DiscardingSink<>())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String unitedSourceLeft = OP_ID_HASH_PREFIX + \"1\"@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "DataStream<TestDataElement> src = env.addSource(new TestEventSource(unitedSourceLeft,eventQueue,commandQueue)).setUidHash(unitedSourceLeft).assignTimestampsAndWatermarks(createWmAssigner())@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "TestCommandDispatcher commandQueue = TestCommandDispatcher.createShared(shared)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "StreamExecutionEnvironment env = prepareEnv(confConsumer,envConsumer)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "twoInputTransform.addSink(new DiscardingSink<>())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "String unitedSourceLeft = OP_ID_HASH_PREFIX + \"1\"@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "toString['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "SingleOutputStreamOperator<TestDataElement> sideSource = env.addSource(new TestEventSource(multiSource,eventQueue,commandQueue)).setUidHash(multiSource).assignTimestampsAndWatermarks(createWmAssigner())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "StreamExecutionEnvironment env = prepareEnv(confConsumer,envConsumer)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->15 [style = solid, label="shared"];
45->35 [style = solid, label="multipleInput"];
4->1 [style = dotted, label="true"];
44->60 [style = solid, label="unitedSourceLeft"];
2->6 [style = bold, label=""];
24->17 [style = solid, label="mapForward"];
53->47 [style = bold, label=""];
21->24 [style = bold, label=""];
42->29 [style = bold, label=""];
36->46 [style = solid, label="sideSource"];
42->48 [style = solid, label="confConsumer"];
13->10 [style = solid, label="mapForward"];
24->22 [style = solid, label="mapForward"];
18->22 [style = bold, label=""];
19->11 [style = dotted, label="true"];
43->53 [style = bold, label=""];
54->37 [style = bold, label=""];
29->47 [style = solid, label="shared"];
24->28 [style = solid, label="mapForward"];
37->60 [style = solid, label="operatorsNumberOfInputs"];
15->17 [style = solid, label="eventQueue"];
19->15 [style = bold, label=""];
20->17 [style = solid, label="operatorsNumberOfInputs"];
12->6 [style = solid, label="envConsumer"];
5->10 [style = bold, label=""];
4->3 [style = bold, label=""];
33->61 [style = solid, label="mapForward"];
47->48 [style = bold, label=""];
10->14 [style = bold, label=""];
32->52 [style = solid, label="multiSource"];
47->60 [style = solid, label="commandQueue"];
1->6 [style = solid, label="confConsumer"];
48->44 [style = bold, label=""];
59->39 [style = bold, label=""];
59->60 [style = solid, label="unitedSourceRight"];
51->58 [style = bold, label=""];
30->31 [style = solid, label="mapKeyed"];
24->18 [style = bold, label=""];
11->3 [style = solid, label="shared"];
22->23 [style = bold, label=""];
37->61 [style = bold, label=""];
40->46 [style = solid, label="unitedSources"];
1->11 [style = bold, label=""];
36->46 [style = bold, label=""];
3->2 [style = bold, label=""];
33->30 [style = bold, label=""];
49->41 [style = bold, label=""];
33->60 [style = solid, label="mapForward"];
30->58 [style = solid, label="mapKeyed"];
34->35 [style = bold, label=""];
52->51 [style = bold, label=""];
55->38 [style = solid, label="mapTwoInput"];
45->60 [style = solid, label="multipleInput"];
53->56 [style = solid, label="eventQueue"];
6->7 [style = bold, label=""];
41->50 [style = bold, label=""];
7->14 [style = solid, label="unitedSourceLeft"];
26->27 [style = solid, label="envConsumer"];
19->26 [style = dotted, label="true"];
23->20 [style = bold, label=""];
46->56 [style = bold, label=""];
16->27 [style = bold, label=""];
16->17 [style = solid, label="commandQueue"];
38->54 [style = bold, label=""];
13->14 [style = solid, label="mapForward"];
4->11 [style = dotted, label="true"];
53->60 [style = solid, label="eventQueue"];
56->50 [style = solid, label="multipleInputsTransform"];
11->16 [style = solid, label="shared"];
39->60 [style = solid, label="connectedSource"];
32->33 [style = bold, label=""];
31->34 [style = bold, label=""];
58->38 [style = bold, label=""];
29->53 [style = solid, label="shared"];
40->36 [style = bold, label=""];
11->2 [style = solid, label="shared"];
39->32 [style = bold, label=""];
28->17 [style = bold, label=""];
35->60 [style = bold, label=""];
4->12 [style = dotted, label="true"];
27->21 [style = bold, label=""];
45->40 [style = bold, label=""];
21->17 [style = solid, label="unitedSourceLeft"];
0->5 [style = bold, label=""];
7->13 [style = bold, label=""];
57->48 [style = solid, label="envConsumer"];
19->25 [style = dotted, label="true"];
56->49 [style = bold, label=""];
55->60 [style = solid, label="mapTwoInput"];
9->0 [style = bold, label=""];
13->9 [style = solid, label="mapForward"];
61->31 [style = bold, label=""];
20->28 [style = bold, label=""];
11->29 [style = dashed, label="0"];
30->60 [style = solid, label="mapKeyed"];
33->51 [style = solid, label="mapForward"];
5->14 [style = solid, label="operatorsNumberOfInputs"];
43->42 [style = dotted, label="true"];
15->16 [style = bold, label=""];
50->52 [style = bold, label=""];
43->29 [style = dotted, label="true"];
55->34 [style = solid, label="mapTwoInput"];
2->14 [style = solid, label="commandQueue"];
30->55 [style = bold, label=""];
25->27 [style = solid, label="confConsumer"];
25->11 [style = bold, label=""];
8->9 [style = bold, label=""];
3->14 [style = solid, label="eventQueue"];
13->8 [style = bold, label=""];
45->56 [style = solid, label="multipleInput"];
55->45 [style = bold, label=""];
43->57 [style = dotted, label="true"];
44->59 [style = bold, label=""];
}
