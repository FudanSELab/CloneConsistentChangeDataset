digraph {
7 [style = filled, label = "verifyAll()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(FILENAME,taskConfigs.get(0).get(FileStreamSinkConnector.FILE_CONFIG))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(FILENAME,taskConfigs.get(0).get(FileStreamSourceConnector.FILE_CONFIG))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(FILENAME,taskConfigs.get(0).get(FileStreamSourceConnector.FILE_CONFIG))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(1,taskConfigs.size())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testSourceTasks['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(FILENAME,taskConfigs.get(0).get(FileStreamSinkConnector.FILE_CONFIG))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(1,taskConfigs.size())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Map<String,String>> taskConfigs = connector.taskConfigs(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSinkTasks['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "connector.start(sourceProperties)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i < 2@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verifyAll()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(SINGLE_TOPIC,taskConfigs.get(0).get(FileStreamSourceConnector.TOPIC_CONFIG))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSinkTasks['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "connector.start(sinkProperties)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "taskConfigs = connector.taskConfigs(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(SINGLE_TOPIC,taskConfigs.get(0).get(FileStreamSourceConnector.TOPIC_CONFIG))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "taskConfigs = connector.taskConfigs(2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "replayAll()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->2 [style = solid, label="taskConfigs"];
10->21 [style = dashed, label="0"];
3->5 [style = solid, label="i"];
2->3 [style = bold, label=""];
11->21 [style = bold, label=""];
20->0 [style = bold, label=""];
12->11 [style = bold, label=""];
12->8 [style = solid, label="taskConfigs"];
3->6 [style = bold, label=""];
2->18 [style = bold, label=""];
14->19 [style = bold, label=""];
1->0 [style = bold, label=""];
0->15 [style = bold, label=""];
19->16 [style = bold, label=""];
3->6 [style = solid, label="i"];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
17->2 [style = bold, label=""];
6->9 [style = dotted, label="true"];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
4->15 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
4->12 [style = bold, label=""];
15->12 [style = bold, label=""];
6->9 [style = bold, label=""];
6->7 [style = bold, label=""];
21->17 [style = bold, label=""];
18->14 [style = bold, label=""];
5->6 [style = solid, label="i"];
6->5 [style = dotted, label="true"];
13->4 [style = bold, label=""];
}
