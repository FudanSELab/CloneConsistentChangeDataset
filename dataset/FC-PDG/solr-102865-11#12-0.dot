digraph {
52 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "delayedReorderingFetchesMissingUpdateFromLeaderTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",2,8000)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "log.info(\"RTG with DBQs are not working in tlog replicas\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "TimeoutException e@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "log.info(\"reorderedDBQsUsingUpdatedValueFromADroppedUpdate: This test passed fine...\")@@@41@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "buildRandomIndex(inplace_updatable_float,Collections.singletonList(1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "commit()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Replica rep@@@33@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "float inplace_updatable_float = 1F@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "i++@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertNull(client.getById(\"1\",params(\"distrib\",\"false\")))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "threadpool.submit(task)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "log.info(\"Testing client (Fetch missing test): \" + ((HttpSolrClient)client).getBaseURL())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "commit()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "log.info(\"delayedReorderingFetchesMissingUpdateFromLeaderTest: This test passed fine...\")@@@95@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "return@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "ClusterState state = cloudClient.getZkStateReader().getClusterState()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "buildRandomIndex(inplace_updatable_float,Collections.singletonList(1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "reorderedDBQsUsingUpdatedValueFromADroppedUpdate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"inplace_updatable_float\",map(\"inc\",1)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "List<UpdateRequest> updates = new ArrayList<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "commit()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int i = 0@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "{}@@@48@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new SolrNamedThreadFactory(getTestName()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int numActiveReplicas = 0@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "i < 100@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "log.info(\"Testing client (testDBQUsingUpdatedFieldFromDroppedUpdate): \" + ((HttpSolrClient)client).getBaseURL())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Replica rep@@@29@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "onlyLeaderIndexes@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "Thread.sleep(10)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "threadpool.shutdown()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "delayedReorderingFetchesMissingUpdateFromLeaderTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@29@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "Replica rep@@@29@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "clearIndex()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertReplicaValue(client,1,\"title_s\",\"title1_new\",\"Title didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TimeoutException e@@@48@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "ExecutorService threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new DefaultSolrThreadFactory(getTestName()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "log.info(\"Version at \" + ((HttpSolrClient)client).getBaseURL() + \" is: \" + getReplicaValue(client,1,\"_version_\"))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "threadpool.submit(task)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "threadpool.shutdown()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Thread.sleep(100)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Thread.sleep(100)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "numActiveReplicas++@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "float inplace_updatable_float = 1F@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "updates.add(regularUpdateRequest(\"id\",1,\"id_i\",1,\"inplace_updatable_float\",12,\"title_s\",\"mytitle\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "updates.add(regularDeleteByQueryRequest(\"inplace_updatable_float:14\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertTrue(\"Thread pool didn't terminate within 12 secs\",threadpool.awaitTermination(12,TimeUnit.SECONDS))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertReplicaValue(client,1,\"inplace_updatable_float\",(newinplace_updatable_float + 2.0f),\"inplace_updatable_float didn't match for replica at client: \" + ((HttpSolrClient)client).getBaseURL())@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "clearIndex()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "{clearIndex()commit()shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().unsetDelay()updates.add(regularDeleteRequest(1))shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",1,5999)shardToJetty.get(SHARD1).get(1).jetty.getDebugFilter().addDelay(\"Waiting for dependant update to timeout\",4,5998)threadpool = ExecutorUtil.newMDCAwareFixedThreadPool(updates.size() + 1,new SolrNamedThreadFactory(getTestName()))for (UpdateRequest update : updates){AsyncUpdateWithRandomCommit task = new AsyncUpdateWithRandomCommit(update,cloudClient,random().nextLong())threadpool.submit(task)Thread.sleep(100)}threadpool.shutdown()assertTrue(\"Thread pool didn't terminate within 15 secs\",threadpool.awaitTermination(15,TimeUnit.SECONDS))commit()try {for (int i = 0 i < 100 i++){Thread.sleep(10)cloudClient.getZkStateReader().forceUpdateCollection(DEFAULT_COLLECTION)ClusterState state = cloudClient.getZkStateReader().getClusterState()int numActiveReplicas = 0for (Replica rep : state.getCollection(DEFAULT_COLLECTION).getSlice(SHARD1).getReplicas()){assertTrue(zkShardTerms.canBecomeLeader(rep.getName()))if (rep.getState().equals(Replica.State.ACTIVE)) numActiveReplicas++}assertEquals(\"The replica receiving reordered updates must not have gone down\",3,numActiveReplicas)}}for (SolrClient client : new SolrClient((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@ed47ae){SolrDocument doc = client.getById(String.valueOf(1),params(\"distrib\",\"false\"))assertNull(\"This doc was supposed to have been deleted, but was: \" + doc,doc)}}@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < 100@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Thread.sleep(10)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "rep.getState().equals(Replica.State.ACTIVE)@@@33@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39->62 [style = bold, label=""];
34->61 [style = bold, label=""];
14->0 [style = solid, label="task"];
38->4 [style = solid, label="task"];
34->15 [style = bold, label=""];
55->2 [style = bold, label=""];
38->4 [style = bold, label=""];
34->2 [style = dotted, label="true"];
40->36 [style = dotted, label="true"];
17->48 [style = dashed, label="0"];
26->43 [style = dashed, label="0"];
48->54 [style = bold, label=""];
55->63 [style = bold, label=""];
63->55 [style = bold, label=""];
30->28 [style = bold, label=""];
24->17 [style = bold, label=""];
2->36 [style = bold, label=""];
34->51 [style = dotted, label="true"];
16->43 [style = bold, label=""];
49->56 [style = bold, label=""];
23->15 [style = dotted, label="true"];
32->18 [style = bold, label=""];
31->20 [style = bold, label=""];
53->38 [style = bold, label=""];
41->13 [style = bold, label=""];
21->50 [style = bold, label=""];
22->13 [style = bold, label=""];
34->19 [style = solid, label="numActiveReplicas"];
34->52 [style = dotted, label="true"];
38->50 [style = dashed, label="0"];
34->18 [style = dotted, label="true"];
63->2 [style = bold, label=""];
60->64 [style = bold, label=""];
37->27 [style = solid, label="newinplace_updatable_float"];
23->21 [style = dotted, label="true"];
16->26 [style = bold, label=""];
26->14 [style = bold, label=""];
11->37 [style = bold, label=""];
2->18 [style = bold, label=""];
23->3 [style = bold, label=""];
29->23 [style = bold, label=""];
23->42 [style = dotted, label="true"];
27->22 [style = bold, label=""];
33->27 [style = bold, label=""];
23->9 [style = dotted, label="true"];
18->55 [style = solid, label="numActiveReplicas"];
23->40 [style = dotted, label="true"];
36->19 [style = solid, label="numActiveReplicas"];
18->2 [style = solid, label="numActiveReplicas"];
6->38 [style = bold, label=""];
7->5 [style = bold, label=""];
23->1 [style = dotted, label="true"];
34->63 [style = dotted, label="true"];
23->3 [style = dotted, label="true"];
29->38 [style = bold, label=""];
29->21 [style = solid, label="i"];
24->19 [style = solid, label="updates"];
59->46 [style = bold, label=""];
34->62 [style = dotted, label="true"];
15->36 [style = bold, label=""];
21->23 [style = bold, label=""];
34->36 [style = solid, label="numActiveReplicas"];
17->30 [style = solid, label="inplace_updatable_float"];
36->40 [style = bold, label=""];
37->24 [style = bold, label=""];
34->40 [style = bold, label=""];
22->19 [style = bold, label=""];
34->36 [style = dotted, label="true"];
47->61 [style = bold, label=""];
56->37 [style = bold, label=""];
19->10 [style = bold, label=""];
4->29 [style = bold, label=""];
35->14 [style = bold, label=""];
36->39 [style = bold, label=""];
29->21 [style = bold, label=""];
34->39 [style = dotted, label="true"];
64->37 [style = bold, label=""];
23->39 [style = dotted, label="true"];
63->55 [style = dotted, label="true"];
39->21 [style = bold, label=""];
64->56 [style = dotted, label="true"];
14->19 [style = solid, label="task"];
40->39 [style = bold, label=""];
43->14 [style = bold, label=""];
40->36 [style = bold, label=""];
3->8 [style = bold, label=""];
34->39 [style = bold, label=""];
16->48 [style = bold, label=""];
23->45 [style = dotted, label="true"];
32->41 [style = bold, label=""];
36->34 [style = solid, label="i"];
44->5 [style = bold, label=""];
41->18 [style = bold, label=""];
36->39 [style = solid, label="numActiveReplicas"];
23->18 [style = bold, label=""];
36->34 [style = bold, label=""];
20->11 [style = solid, label="inplace_updatable_float"];
54->14 [style = bold, label=""];
20->11 [style = bold, label=""];
55->2 [style = solid, label="numActiveReplicas"];
9->34 [style = solid, label="i"];
64->49 [style = dotted, label="true"];
23->8 [style = dotted, label="true"];
35->6 [style = bold, label=""];
21->19 [style = solid, label="i"];
15->36 [style = dotted, label="true"];
36->15 [style = bold, label=""];
46->53 [style = bold, label=""];
25->32 [style = bold, label=""];
34->57 [style = dotted, label="true"];
37->17 [style = solid, label="newinplace_updatable_float"];
17->30 [style = bold, label=""];
57->18 [style = bold, label=""];
61->58 [style = bold, label=""];
18->2 [style = bold, label=""];
62->57 [style = bold, label=""];
28->16 [style = bold, label=""];
9->36 [style = solid, label="i"];
2->13 [style = bold, label=""];
18->63 [style = bold, label=""];
58->47 [style = bold, label=""];
5->31 [style = bold, label=""];
14->0 [style = bold, label=""];
15->39 [style = bold, label=""];
8->9 [style = bold, label=""];
0->35 [style = bold, label=""];
50->8 [style = bold, label=""];
47->65 [style = bold, label=""];
29->23 [style = solid, label="i"];
64->49 [style = bold, label=""];
14->59 [style = bold, label=""];
32->13 [style = bold, label=""];
13->33 [style = bold, label=""];
30->16 [style = bold, label=""];
23->12 [style = dotted, label="true"];
29->19 [style = solid, label="i"];
21->23 [style = solid, label="i"];
23->34 [style = dotted, label="true"];
34->39 [style = solid, label="numActiveReplicas"];
9->34 [style = bold, label=""];
}
