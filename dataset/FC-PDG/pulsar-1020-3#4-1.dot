digraph {
12 [style = filled, label = "i < permits@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long end = System.currentTimeMillis()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int permits = 100@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final long rateTimeMSec = 1000@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAcquire['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "rate.close()@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testTryAcquire['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testAcquire['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "rate.acquire()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rate.tryAcquire()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue((end - start) < rateTimeMSec)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(rate.getAvailablePermits() == 0)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "long start = System.currentTimeMillis()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RateLimiter rate = new RateLimiter(permits,rateTimeMSec,TimeUnit.MILLISECONDS)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(rate.getAvailablePermits(),0)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->5 [style = bold, label=""];
13->10 [style = bold, label=""];
4->14 [style = bold, label=""];
9->11 [style = bold, label=""];
8->9 [style = solid, label="permits"];
16->10 [style = bold, label=""];
7->14 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
12->15 [style = bold, label=""];
3->11 [style = bold, label=""];
12->15 [style = dotted, label="true"];
12->1 [style = dotted, label="true"];
11->12 [style = bold, label=""];
11->5 [style = solid, label="i"];
12->1 [style = bold, label=""];
12->6 [style = bold, label=""];
12->7 [style = bold, label=""];
4->7 [style = bold, label=""];
15->5 [style = bold, label=""];
10->4 [style = solid, label="rateTimeMSec"];
6->4 [style = bold, label=""];
0->10 [style = bold, label=""];
6->4 [style = solid, label="end"];
10->8 [style = bold, label=""];
11->12 [style = solid, label="i"];
5->12 [style = bold, label=""];
12->5 [style = dotted, label="true"];
7->2 [style = bold, label=""];
8->9 [style = bold, label=""];
10->9 [style = solid, label="rateTimeMSec"];
9->3 [style = bold, label=""];
3->4 [style = solid, label="start"];
14->2 [style = bold, label=""];
8->12 [style = solid, label="permits"];
5->12 [style = solid, label="i"];
}
