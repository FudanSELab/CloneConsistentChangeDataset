digraph {
26 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(\"test\").port(10064).build()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client.start()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "InstanceSerializer<String> slowSerializer = new JsonInstanceSerializer<String>(){@Override public byte(( serialize(ServiceInstance<String> instance){if (first) {System.out.println(\"Serializer first registration.\")first = false}{System.out.println(\"Waiting for reconnect to finish.\")restartLatch.await()}return super.edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@11facacinstance}}@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "discovery.start()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "CuratorFramework client = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testUnregisterService['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "server.restart()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(((ServiceDiscoveryImpl)discovery).debugServicesQty(),0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).build()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "CuratorFramework client = null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertFalse(discovery.queryForInstances(name).isEmpty(),\"Service should start registered.\")@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "discovery.unregisterService(instance)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testUnregisterService['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "discovery.start()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(discovery.queryForInstances(name).isEmpty(),\"Service should start registered.\")@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "discovery.unregisterService(instance)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "restartLatch.countDown()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String name = \"name\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertTrue(discovery.queryForInstances(name).isEmpty(),\"Service should have unregistered.\")@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ServiceInstance<String> instance = ServiceInstance.builder().payload(\"thing\").name(name).port(10064).build()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final CountDownLatch restartLatch = new CountDownLatch(1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ServiceDiscovery<String> discovery = null@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "new Timing().sleepABit()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "client.start()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(discovery.queryForInstances(name).isEmpty(),\"Service should have unregistered.\")@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "server.stop()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "{CloseableUtils.closeQuietly(discovery)CloseableUtils.closeQuietly(client)}@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "discovery = ServiceDiscoveryBuilder.builder().basePath(\"/test\").client(client).thisInstance(instance).serializer(slowSerializer).watchInstances(true).build()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "client = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryOneTime(1))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCleaning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->17 [style = bold, label=""];
5->10 [style = bold, label=""];
11->4 [style = solid, label="discovery"];
23->25 [style = bold, label=""];
17->5 [style = bold, label=""];
27->32 [style = bold, label=""];
7->11 [style = bold, label=""];
11->14 [style = bold, label=""];
13->20 [style = dashed, label="0"];
30->27 [style = solid, label="instance"];
9->4 [style = bold, label=""];
0->12 [style = bold, label=""];
29->31 [style = bold, label=""];
16->7 [style = bold, label=""];
11->29 [style = dashed, label="0"];
1->0 [style = bold, label=""];
19->2 [style = bold, label=""];
15->16 [style = bold, label=""];
26->24 [style = bold, label=""];
24->22 [style = bold, label=""];
10->6 [style = bold, label=""];
30->29 [style = bold, label=""];
22->30 [style = bold, label=""];
6->15 [style = bold, label=""];
15->4 [style = solid, label="client"];
8->1 [style = bold, label=""];
20->8 [style = bold, label=""];
3->2 [style = bold, label=""];
31->27 [style = bold, label=""];
9->21 [style = dashed, label="0"];
29->28 [style = solid, label="discovery"];
7->30 [style = dashed, label="0"];
25->26 [style = bold, label=""];
12->18 [style = bold, label=""];
18->9 [style = bold, label=""];
14->13 [style = bold, label=""];
18->21 [style = bold, label=""];
13->8 [style = bold, label=""];
24->28 [style = solid, label="client"];
7->0 [style = solid, label="instance"];
32->28 [style = bold, label=""];
14->20 [style = bold, label=""];
21->4 [style = bold, label=""];
}
