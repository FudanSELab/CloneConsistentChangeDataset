digraph {
1 [style = filled, label = "n0.secondary.add(String.format(\"s%d\",i))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "policy0.parameters.put(\"min_limit\",\"3\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "n1 = NamespaceIsolationData.builder().namespaces(n0.getNamespaces()).primary(n0.getPrimary()).secondary(n0.getSecondary()).autoFailoverPolicy(policy1).build()@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "fail(\"Should not happen\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "n1.auto_failover_policy = policy1@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "p1parameters.put(\"usage_threshold\",\"10\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "NamespaceIsolationData n1 = NamespaceIsolationData.builder().namespaces(n0.getNamespaces()).primary(n0.getPrimary()).secondary(n0.getSecondary()).build()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "policy1.policy_type = AutoFailoverPolicyType.min_available@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "policy1.parameters = new HashMap<>(policy0.parameters)@@@35@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "n0.getNamespaces().add(String.format(\"ns%d\",i))@@@8@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "policy0.parameters = new HashMap<>()@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "AutoFailoverPolicyDataImpl policy0 = new AutoFailoverPolicyDataImpl()@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "NamespaceIsolationDataImpl n0 = new NamespaceIsolationDataImpl()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "AutoFailoverPolicyData policy0 = AutoFailoverPolicyData.builder().policyType(AutoFailoverPolicyType.min_available).parameters(p1parameters).build()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(n1,n0)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "n0.secondary = new ArrayList<>()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "Map<String,String> p1parameters = new HashMap<>()@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "n0.namespaces.add(String.format(\"ns%d\",i))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "n0.primary.add(String.format(\"p%d\",i))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "NamespaceIsolationDataImpl n1 = new NamespaceIsolationDataImpl()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "n0.validate()@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "n0.getPrimary().add(String.format(\"p%d\",i))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "int i = 0@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "fail(\"Should not happen\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "testNamespaceIsolationData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "n1.validate()@@@43@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "Map<String,String> p2parameters = new HashMap<>()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "i++@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "policy0.validate()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "policy0.policy_type = AutoFailoverPolicyType.min_available@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "n0.getNamespaces().add(String.format(\"ns%d\",i))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "assertEquals(policy1,policy0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "AutoFailoverPolicyData policy1 = AutoFailoverPolicyData.builder().policyType(AutoFailoverPolicyType.min_available).parameters(p1parameters).build()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "n0.namespaces = new ArrayList<>()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "NamespaceIsolationData n0 = NamespaceIsolationData.builder().namespaces(new ArrayList<>()).primary(new ArrayList<>()).secondary(new ArrayList<>()).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "i++@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "policy0.parameters.put(\"min_limit\",\"3\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Exception e@@@17@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertNotEquals(policy1,policy0)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "p2parameters.put(\"min_limit\",\"3\")@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertNotEquals(new NamespaceIsolationDataImpl(),n0)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "assertNotEquals(new OldPolicies(),n0)@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "assertNotEquals(NamespaceIsolationData.builder().build(),n0)@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "n0.primary = new ArrayList<>()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "n1.namespaces = n0.namespaces@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "n0.validate()@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "AutoFailoverPolicyDataImpl policy0 = new AutoFailoverPolicyDataImpl()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Exception e@@@26@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "n0 = NamespaceIsolationData.builder().namespaces(new ArrayList<>()).primary(new ArrayList<>()).secondary(new ArrayList<>()).autoFailoverPolicy(policy0).build()@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "n1.validate()@@@40@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "n0.auto_failover_policy = policy0@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "i < 5@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "policy0.parameters.put(\"usage_threshold\",\"10\")@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "policy1.parameters.put(\"min_limit\",\"5\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "policy1.parameters.put(\"usage_threshold\",\"10\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "policy1.parameters.put(\"min_limit\",\"3\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "AutoFailoverPolicyDataImpl policy1 = new AutoFailoverPolicyDataImpl()@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "policy0.parameters.put(\"usage_threshold\",\"10\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "n0.getSecondary().add(String.format(\"s%d\",i))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "testNamespaceIsolationData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "{}@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "fail(\"Should not happen\")@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "n0.validate()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "n1.secondary = n0.secondary@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "n0.validate()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertNotEquals(new OldPolicies(),n0)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "p2parameters.put(\"usage_threshold\",\"10\")@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "n0.getSecondary().add(String.format(\"s%d\",i))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertNotEquals(new OldPolicies(),policy1)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "testAutoFailoverPolicyData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "n1.primary = n0.primary@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "Exception e@@@20@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "i < 5@@@33@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "policy1.policy_type = AutoFailoverPolicyType.min_available@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "AutoFailoverPolicyDataImpl policy1 = new AutoFailoverPolicyDataImpl()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "n1.validate()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "n0.getPrimary().add(String.format(\"p%d\",i))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "assertNotEquals(NamespaceIsolationData.builder().build(),n0)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "policy1.parameters = new HashMap<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int i = 0@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "policy0.parameters = new HashMap<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "p1parameters.put(\"min_limit\",\"3\")@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "policy0.policy_type = AutoFailoverPolicyType.min_available@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "policy1.validate()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->15 [style = dashed, label="0"];
66->79 [style = solid, label="policy0"];
65->67 [style = bold, label=""];
15->33 [style = solid, label="i"];
51->64 [style = dotted, label="true"];
10->38 [style = dotted, label="true"];
25->30 [style = bold, label=""];
0->44 [style = dashed, label="0"];
27->28 [style = bold, label=""];
51->45 [style = dotted, label="true"];
36->64 [style = solid, label="i"];
73->74 [style = bold, label=""];
3->72 [style = dashed, label="0"];
59->51 [style = bold, label=""];
28->62 [style = bold, label=""];
53->44 [style = bold, label=""];
61->12 [style = bold, label=""];
47->37 [style = bold, label=""];
58->18 [style = bold, label=""];
10->41 [style = bold, label=""];
8->71 [style = dashed, label="0"];
8->0 [style = bold, label=""];
31->52 [style = dashed, label="0"];
44->46 [style = bold, label=""];
37->53 [style = bold, label=""];
11->18 [style = solid, label="n1"];
80->68 [style = solid, label="policy1"];
9->76 [style = dashed, label="0"];
12->10 [style = bold, label=""];
83->69 [style = bold, label=""];
34->2 [style = bold, label=""];
70->71 [style = bold, label=""];
15->16 [style = solid, label="i"];
59->45 [style = solid, label="i"];
74->70 [style = bold, label=""];
0->24 [style = bold, label=""];
2->14 [style = bold, label=""];
38->56 [style = bold, label=""];
66->80 [style = bold, label=""];
10->33 [style = solid, label="i"];
13->15 [style = dotted, label="true"];
20->39 [style = dashed, label="0"];
45->64 [style = bold, label=""];
21->12 [style = solid, label="n0"];
6->47 [style = dashed, label="0"];
0->77 [style = dashed, label="0"];
15->38 [style = bold, label=""];
15->13 [style = bold, label=""];
24->82 [style = dashed, label="0"];
36->45 [style = solid, label="i"];
49->58 [style = bold, label=""];
13->56 [style = solid, label="i"];
20->8 [style = solid, label="parameters"];
1->56 [style = dashed, label="0"];
82->72 [style = bold, label=""];
46->36 [style = bold, label=""];
11->12 [style = bold, label=""];
78->66 [style = bold, label=""];
13->16 [style = bold, label=""];
23->35 [style = bold, label=""];
57->23 [style = bold, label=""];
29->20 [style = bold, label=""];
59->64 [style = solid, label="i"];
60->57 [style = bold, label=""];
66->83 [style = solid, label="policy0"];
43->47 [style = bold, label=""];
10->16 [style = solid, label="i"];
21->11 [style = bold, label=""];
16->33 [style = bold, label=""];
33->38 [style = dashed, label="0"];
56->13 [style = bold, label=""];
48->55 [style = bold, label=""];
7->23 [style = bold, label=""];
21->26 [style = solid, label="n0"];
13->15 [style = solid, label="i"];
65->67 [style = dotted, label="true"];
32->17 [style = bold, label=""];
24->3 [style = bold, label=""];
59->63 [style = solid, label="i"];
51->63 [style = bold, label=""];
63->45 [style = bold, label=""];
2->0 [style = solid, label="policy0"];
51->63 [style = dotted, label="true"];
5->37 [style = dashed, label="0"];
13->10 [style = bold, label=""];
13->16 [style = dotted, label="true"];
80->81 [style = bold, label=""];
36->51 [style = bold, label=""];
31->32 [style = bold, label=""];
12->15 [style = solid, label="i"];
36->59 [style = solid, label="i"];
35->39 [style = bold, label=""];
69->79 [style = bold, label=""];
18->60 [style = bold, label=""];
10->1 [style = solid, label="i"];
64->59 [style = bold, label=""];
77->82 [style = bold, label=""];
13->38 [style = solid, label="i"];
10->13 [style = solid, label="i"];
55->49 [style = solid, label="n0"];
26->41 [style = dashed, label="0"];
55->61 [style = bold, label=""];
10->56 [style = dotted, label="true"];
3->9 [style = bold, label=""];
15->1 [style = solid, label="i"];
51->40 [style = bold, label=""];
6->5 [style = bold, label=""];
13->10 [style = solid, label="i"];
26->31 [style = bold, label=""];
4->43 [style = dashed, label="0"];
13->33 [style = dotted, label="true"];
10->13 [style = bold, label=""];
50->42 [style = bold, label=""];
10->15 [style = solid, label="i"];
13->26 [style = bold, label=""];
10->13 [style = dotted, label="true"];
81->75 [style = bold, label=""];
22->10 [style = bold, label=""];
14->29 [style = bold, label=""];
75->73 [style = bold, label=""];
23->2 [style = bold, label=""];
22->17 [style = solid, label="secondary"];
67->83 [style = bold, label=""];
79->68 [style = bold, label=""];
55->61 [style = solid, label="n0"];
80->79 [style = solid, label="policy1"];
30->32 [style = solid, label="primary"];
55->41 [style = solid, label="n0"];
51->59 [style = dotted, label="true"];
19->21 [style = bold, label=""];
14->24 [style = solid, label="policy1"];
5->8 [style = bold, label=""];
44->40 [style = solid, label="n0"];
40->54 [style = bold, label=""];
30->22 [style = bold, label=""];
10->15 [style = bold, label=""];
80->83 [style = solid, label="policy1"];
28->34 [style = bold, label=""];
4->6 [style = bold, label=""];
52->49 [style = bold, label=""];
1->15 [style = bold, label=""];
21->55 [style = dashed, label="0"];
39->43 [style = bold, label=""];
21->18 [style = solid, label="n0"];
15->13 [style = solid, label="i"];
12->10 [style = solid, label="i"];
44->46 [style = solid, label="n0"];
33->1 [style = bold, label=""];
62->57 [style = bold, label=""];
52->49 [style = solid, label="n1"];
59->51 [style = solid, label="i"];
72->76 [style = bold, label=""];
20->4 [style = bold, label=""];
41->52 [style = bold, label=""];
54->50 [style = bold, label=""];
10->15 [style = dotted, label="true"];
13->1 [style = dotted, label="true"];
76->83 [style = bold, label=""];
71->77 [style = bold, label=""];
18->27 [style = bold, label=""];
12->25 [style = bold, label=""];
25->31 [style = solid, label="namespaces"];
12->13 [style = solid, label="i"];
12->56 [style = solid, label="i"];
17->18 [style = bold, label=""];
12->38 [style = solid, label="i"];
36->63 [style = solid, label="i"];
36->51 [style = solid, label="i"];
}
