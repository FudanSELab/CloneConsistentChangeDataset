digraph {
4 [style = filled, label = "Collections.sort(tmutations,new RmComparator())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c2\")).value())@@@24@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Row row = update.iterator().next()@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "update.metadata().cfName.equals(\"cf1\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "CFMetaData metadata = makeCfMetaData(\"ks1\",\"cf1\",TriggerDefinition.create(\"test\",.getName()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")).value())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(bytes(\"k2v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Collections.sort(mutatedCFs,new CfComparator())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "ColumnFamily cf1 = makeCf(metadata,\"k1v1\",null)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(1).getColumnFamilies())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertEquals(bytes(\"k1v1\"),row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))).value())@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "Mutation rm1 = new Mutation(\"ks1\",cf1.partitionKey()).add(cf1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "sameKeySameCfRowMutations['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(1,mutatedCFs.size())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(bytes(\"k2v1\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")).value())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Mutation rm2 = new Mutation(bytes(\"k2\"),cf2)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Collections.sort(mutatedCFs,new CfComparator())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))))@@@31@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "sameKeyDifferentCfRowMutations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "ColumnFamily cf2 = makeCf(metadata,\"k2v1\",null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Row row = update.iterator().next()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")).value())@@@18@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "PartitionUpdate cf2 = makeCf(metadata,\"k2\",\"k2v1\",null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "PartitionUpdate cf1 = makeCf(metadata,\"k1\",\"k1v1\",null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "update.metadata().cfName.equals(\"cf1\")@@@14@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "Row row = update.iterator().next()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Mutation rm2 = new Mutation(\"ks1\",cf2.partitionKey()).add(cf2)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Mutation rm1 = new Mutation(bytes(\"k1\"),cf1)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNull(mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c1\")))@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertNull(mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c1\")))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "CFMetaData metadata = makeCfMetaData(\"ks1\",\"cf1\",TriggerDefinition.create(\"test\",.getName()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(2,tmutations.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "List<PartitionUpdate> mutatedCFs = new ArrayList<>(tmutations.get(0).getPartitionUpdates())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "List<? extends IMutation> tmutations = new ArrayList<>(TriggerExecutor.instance.execute(Arrays.asList(rm1,rm2)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(bytes(\"k2v1\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")).value())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Row row = update.iterator().next()@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(bytes(\"trigger\"),mutatedCFs.get(1).getColumn(getColumnName(metadata,\"c2\")).value())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,mutatedCFs.size())@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c1\"))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "mutatedCFs = new ArrayList<>(tmutations.get(1).getPartitionUpdates())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "assertNull(row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "assertEquals(bytes(\"k1v1\"),mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c1\")).value())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<ColumnFamily> mutatedCFs = new ArrayList<>(tmutations.get(0).getColumnFamilies())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(mutatedCFs.get(0).getColumn(getColumnName(metadata,\"c2\")))@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(bytes(\"trigger\"),row.getCell(metadata.getColumnDefinition(bytes(\"c2\"))).value())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "sameKeyDifferentCfRowMutations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->10 [style = solid, label="rm2"];
8->10 [style = bold, label=""];
27->38 [style = bold, label=""];
37->28 [style = bold, label=""];
2->6 [style = bold, label=""];
25->30 [style = bold, label=""];
34->32 [style = solid, label="cf2"];
8->32 [style = dashed, label="0"];
5->15 [style = bold, label=""];
1->44 [style = dashed, label="0"];
4->44 [style = bold, label=""];
30->29 [style = bold, label=""];
7->42 [style = dashed, label="0"];
33->11 [style = bold, label=""];
35->37 [style = bold, label=""];
39->31 [style = bold, label=""];
49->13 [style = bold, label=""];
47->51 [style = bold, label=""];
0->8 [style = bold, label=""];
13->22 [style = bold, label=""];
28->27 [style = dotted, label="true"];
50->17 [style = solid, label="metadata"];
28->35 [style = dotted, label="false"];
26->36 [style = dotted, label="true"];
11->9 [style = solid, label="metadata"];
14->16 [style = bold, label=""];
24->28 [style = bold, label=""];
23->25 [style = bold, label=""];
19->12 [style = bold, label=""];
43->32 [style = bold, label=""];
11->16 [style = solid, label="metadata"];
48->50 [style = bold, label=""];
42->43 [style = solid, label="cf1"];
32->10 [style = bold, label=""];
28->37 [style = dotted, label="false"];
11->6 [style = solid, label="metadata"];
43->10 [style = solid, label="rm1"];
36->30 [style = bold, label=""];
11->34 [style = solid, label="metadata"];
28->24 [style = dotted, label="true"];
18->4 [style = bold, label=""];
0->10 [style = solid, label="rm1"];
21->11 [style = bold, label=""];
25->26 [style = bold, label=""];
12->14 [style = bold, label=""];
28->38 [style = dotted, label="true"];
45->46 [style = bold, label=""];
16->20 [style = bold, label=""];
10->18 [style = bold, label=""];
7->17 [style = bold, label=""];
40->35 [style = bold, label=""];
22->19 [style = bold, label=""];
38->24 [style = bold, label=""];
5->26 [style = bold, label=""];
31->36 [style = bold, label=""];
1->15 [style = solid, label="mutatedCFs"];
0->43 [style = dashed, label="0"];
26->23 [style = dotted, label="false"];
28->40 [style = dotted, label="false"];
14->13 [style = dashed, label="0"];
11->17 [style = solid, label="metadata"];
26->41 [style = bold, label=""];
26->31 [style = dotted, label="true"];
17->0 [style = bold, label=""];
51->2 [style = bold, label=""];
26->41 [style = dotted, label="false"];
2->45 [style = bold, label=""];
9->3 [style = bold, label=""];
4->1 [style = bold, label=""];
17->8 [style = solid, label="cf2"];
34->43 [style = bold, label=""];
7->0 [style = solid, label="cf1"];
44->5 [style = bold, label=""];
50->7 [style = solid, label="metadata"];
11->42 [style = solid, label="metadata"];
10->4 [style = solid, label="tmutations"];
42->34 [style = bold, label=""];
15->2 [style = bold, label=""];
28->40 [style = bold, label=""];
13->19 [style = solid, label="mutatedCFs"];
17->34 [style = dashed, label="0"];
32->10 [style = solid, label="rm2"];
5->47 [style = dashed, label="0"];
26->39 [style = dotted, label="true"];
46->49 [style = bold, label=""];
11->50 [style = dashed, label="0"];
22->46 [style = dashed, label="0"];
50->7 [style = bold, label=""];
36->26 [style = bold, label=""];
11->42 [style = bold, label=""];
26->39 [style = bold, label=""];
11->14 [style = solid, label="metadata"];
29->28 [style = bold, label=""];
11->7 [style = solid, label="metadata"];
1->47 [style = bold, label=""];
3->13 [style = bold, label=""];
28->27 [style = bold, label=""];
6->9 [style = bold, label=""];
41->23 [style = bold, label=""];
11->7 [style = bold, label=""];
6->2 [style = dashed, label="0"];
26->25 [style = dotted, label="false"];
}
