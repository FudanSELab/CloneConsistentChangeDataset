digraph {
0 [style = filled, label = "testUpsertFormatCloseBeforeOpen['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testUpsertFormatCloseBeforeOpen['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "JdbcOptions options = JdbcOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "JdbcConnectorOptions options = JdbcConnectorOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "format = new TableJdbcUpsertOutputFormat(new SimpleJdbcConnectionProvider(options),dmlOptions,JdbcExecutionOptions.defaults())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "format.writeRecord(Tuple2.of(true,toRow(entry)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "format.flush()@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JdbcDmlOptions dmlOptions = JdbcDmlOptions.builder().withTableName(options.getTableName()).withDialect(options.getDialect()).withFieldNames(fieldNames).withKeyFields(keyFields).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "alterTable()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ExecutionConfig config = Mockito.mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "format.open(0,1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testMaxRetry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "format = JdbcBatchingOutputFormat.builder().setOptions(JdbcOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()).setFieldNames(fieldNames).setKeyFields(null).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RuntimeContext context = Mockito.mock()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "doReturn(true).when(config).isObjectReuseEnabled()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "format.close()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "doReturn(config).when(context).getExecutionConfig()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "format.setRuntimeContext(context)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
15->10 [style = bold, label=""];
16->13 [style = bold, label=""];
1->5 [style = dashed, label="0"];
10->14 [style = bold, label=""];
1->15 [style = dashed, label="0"];
10->16 [style = solid, label="context"];
1->3 [style = solid, label="options"];
11->9 [style = bold, label=""];
7->8 [style = bold, label=""];
12->7 [style = bold, label=""];
9->16 [style = bold, label=""];
6->5 [style = bold, label=""];
13->12 [style = bold, label=""];
3->2 [style = bold, label=""];
0->1 [style = bold, label=""];
4->3 [style = solid, label="dmlOptions"];
5->4 [style = bold, label=""];
17->15 [style = bold, label=""];
5->3 [style = solid, label="options"];
14->11 [style = bold, label=""];
}
