digraph {
8 [style = filled, label = "testSinglePartitionNamesAbort['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testSinglePartitionNamesAbort['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "testSinglePartitionSliceAbort['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ReadCommand readCommand = Util.cmd(cfs,Util.dk(\"key\")).includeRow(\"cc\").includeRow(\"dd\").build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,Util.getAll(readCommand).size())@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,partitions.size())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "readCommand.abort()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "new RowUpdateBuilder(cfs.metadata,0,ByteBufferUtil.bytes(\"key\")).clustering(\"cc\").add(\"a\",ByteBufferUtil.bytes(\"abcd\")).build().apply()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ColumnFamilyStore cfs = Keyspace.open(KEYSPACE).getColumnFamilyStore(CF2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "cfs.forceBlockingFlush()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(2,partitions.get(0).rowCount())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "cfs.truncateBlocking()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "List<FilteredPartition> partitions = Util.getAll(readCommand)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "new RowUpdateBuilder(cfs.metadata,0,ByteBufferUtil.bytes(\"key\")).clustering(\"dd\").add(\"a\",ByteBufferUtil.bytes(\"abcd\")).build().apply()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ReadCommand readCommand = Util.cmd(cfs,Util.dk(\"key\")).build()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "new RowUpdateBuilder(cfs.metadata,0,ByteBufferUtil.bytes(\"key\")).clustering(\"cdd\").add(\"a\",ByteBufferUtil.bytes(\"abcd\")).build().apply()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "new RowUpdateBuilder(cfs.metadata,0,ByteBufferUtil.bytes(\"key\")).clustering(\"dd\").add(\"a\",ByteBufferUtil.bytes(\"abcd\")).build().apply()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5->10 [style = bold, label=""];
16->15 [style = bold, label=""];
15->0 [style = solid, label="readCommand"];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
9->16 [style = bold, label=""];
13->1 [style = bold, label=""];
14->1 [style = bold, label=""];
1->11 [style = bold, label=""];
2->15 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
12->2 [style = bold, label=""];
2->0 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
15->0 [style = bold, label=""];
9->3 [style = bold, label=""];
9->12 [style = bold, label=""];
2->0 [style = solid, label="readCommand"];
11->7 [style = bold, label=""];
3->16 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
