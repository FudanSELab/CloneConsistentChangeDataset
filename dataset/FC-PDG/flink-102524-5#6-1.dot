digraph {
9 [style = filled, label = "createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.of(restore))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(headOperatorID,new StatelessOperator(),tailOperatorID,new CounterOperator(),Optional.of(stateHandles))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRestoreWithoutState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JobManagerTaskRestore restore = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(2,stateHandles.getSubtaskStateMappings().size())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "TaskStateSnapshot stateHandles = restore.getTaskStateSnapshot()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertEquals(2,environment1.getCheckpointStateHandles().getSubtaskStateMappings().size())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "TaskStateSnapshot stateHandles = environment1.getCheckpointStateHandles()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "AcknowledgeStreamMockEnvironment environment1 = createRunAndCheckpointOperatorChain(headOperatorID,new StatelessOperator(),tailOperatorID,new CounterOperator(),Optional.empty())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(headOperatorID,tailOperatorID)),RESTORED_OPERATORS)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "AcknowledgeStreamMockEnvironment environment2 = createRunAndCheckpointOperatorChain(headOperatorID,new CounterOperator(),tailOperatorID,new CounterOperator(),Optional.of(stateHandles))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "OperatorID headOperatorID = new OperatorID(42L,42L)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "OperatorID tailOperatorID = new OperatorID(44L,44L)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->1 [style = bold, label=""];
1->15 [style = solid, label="stateHandles"];
9->0 [style = bold, label=""];
2->13 [style = solid, label="tailOperatorID"];
2->6 [style = bold, label=""];
1->15 [style = bold, label=""];
10->9 [style = solid, label="restore"];
8->3 [style = bold, label=""];
2->0 [style = solid, label="tailOperatorID"];
3->4 [style = solid, label="headOperatorID"];
11->12 [style = bold, label=""];
2->4 [style = solid, label="tailOperatorID"];
2->10 [style = solid, label="tailOperatorID"];
3->9 [style = solid, label="headOperatorID"];
2->6 [style = solid, label="tailOperatorID"];
2->10 [style = bold, label=""];
12->9 [style = bold, label=""];
3->0 [style = solid, label="headOperatorID"];
3->13 [style = solid, label="headOperatorID"];
2->15 [style = solid, label="tailOperatorID"];
4->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
2->13 [style = bold, label=""];
4->9 [style = dashed, label="0"];
6->13 [style = dashed, label="0"];
3->2 [style = bold, label=""];
13->7 [style = bold, label=""];
4->15 [style = dashed, label="0"];
15->0 [style = bold, label=""];
1->4 [style = solid, label="stateHandles"];
2->9 [style = solid, label="tailOperatorID"];
3->10 [style = solid, label="headOperatorID"];
3->6 [style = solid, label="headOperatorID"];
3->15 [style = solid, label="headOperatorID"];
6->7 [style = bold, label=""];
10->11 [style = bold, label=""];
}
