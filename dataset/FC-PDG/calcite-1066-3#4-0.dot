digraph {
6 [style = filled, label = "final List<String> nameSeqs = Linq4j.asEnumerable(depts).selectMany(new Function2<Department,Integer,Enumerable<Employee>>(){public Enumerable<Employee> apply(Department element,Integer index){assertEquals(indexRef(0(,index.longValue())indexRef(0( = index + 1return Linq4j.asEnumerable(element.employees)}},new Function2<Department,Employee,String>(){public String apply(Department element,Employee subElement){return subElement.name + \"@\" + element.name}}).select(new Function2<String,Integer,String>(){public String apply(String v0,Integer v1){return \"#\" + v1 + \": \" + v0}}).toList()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final int(( indexRef = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@110161a@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSelectManyWithResultSelector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(\"(#0: Fred@Sales, #1: Eric@Sales, #2: Janet@Sales, #3: Bill@Marketing(\",nameSeqs.toString())@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(\"(#0: Fred@Sales, #1: Eric@Sales, #2: Janet@Sales, #3: Bill@Marketing(\",nameSeqs.toString())@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testSelectManyWithIndexableSelectorAndResultSelector['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final List<String> nameSeqs = Linq4j.asEnumerable(depts).selectMany(DEPT_EMPLOYEES_SELECTOR,null).select(null).toList()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "testSelectManyWithResultSelector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final List<String> nameSeqs = Linq4j.asEnumerable(depts).selectMany(DEPT_EMPLOYEES_SELECTOR,new Function2<Department,Employee,String>(){public String apply(Department element,Employee subElement){return subElement.name + \"@\" + element.name}}).select(new Function2<String,Integer,String>(){public String apply(String v0,Integer v1){return \"#\" + v1 + \": \" + v0}}).toList()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(\"(#0: Fred@Sales, #1: Eric@Sales, #2: Janet@Sales, #3: Bill@Marketing(\",nameSeqs.toString())@@@4@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
2->3 [style = dashed, label="0"];
9->6 [style = bold, label=""];
8->9 [style = bold, label=""];
}
