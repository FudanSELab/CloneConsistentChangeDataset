digraph {
19 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "coerce = ((LegacyGeoShapeFieldMapper)fieldMapper).coerce().value()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testCoerceParsing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(coerce,equalTo(false))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Mapper fieldMapper = mapper.mappers().getMapper(\"field\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(coerce,equalTo(true))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fieldMapper = mapper.mappers().getMapper(\"field\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "boolean coerce = ((LegacyGeoShapeFieldMapper)fieldMapper).coerce()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "coerce = ((LegacyGeoShapeFieldMapper)fieldMapper).coerce()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testCoerceParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "boolean coerce = ((LegacyGeoShapeFieldMapper)fieldMapper).coerce().value()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "coerce = ((GeoShapeFieldMapper)fieldMapper).coerce().value()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "boolean coerce = ((GeoShapeFieldMapper)fieldMapper).coerce().value()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFieldWarnings(\"tree\",\"strategy\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testCoerceParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mapper = createDocumentMapper(fieldMapping(null))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertFieldWarnings(\"tree\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21->10 [style = bold, label=""];
5->12 [style = dashed, label="0"];
14->12 [style = solid, label="coerce"];
16->7 [style = solid, label="coerce"];
10->15 [style = bold, label=""];
9->0 [style = bold, label=""];
2->20 [style = dashed, label="0"];
5->7 [style = solid, label="coerce"];
0->1 [style = solid, label="fieldMapper"];
3->21 [style = dashed, label="0"];
4->6 [style = bold, label=""];
0->19 [style = bold, label=""];
22->16 [style = bold, label=""];
11->15 [style = dashed, label="0"];
11->4 [style = bold, label=""];
1->19 [style = dashed, label="0"];
16->7 [style = bold, label=""];
1->3 [style = bold, label=""];
3->10 [style = solid, label="coerce"];
18->17 [style = bold, label=""];
14->10 [style = bold, label=""];
14->10 [style = solid, label="coerce"];
0->19 [style = solid, label="fieldMapper"];
7->20 [style = bold, label=""];
12->7 [style = bold, label=""];
6->22 [style = dashed, label="0"];
4->6 [style = solid, label="fieldMapper"];
5->16 [style = dashed, label="0"];
3->10 [style = bold, label=""];
21->10 [style = solid, label="coerce"];
6->5 [style = bold, label=""];
17->0 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
4->22 [style = solid, label="fieldMapper"];
9->17 [style = dashed, label="0"];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
5->7 [style = bold, label=""];
1->14 [style = bold, label=""];
13->9 [style = bold, label=""];
3->14 [style = dashed, label="0"];
12->7 [style = solid, label="coerce"];
4->22 [style = bold, label=""];
6->12 [style = bold, label=""];
10->11 [style = bold, label=""];
19->21 [style = bold, label=""];
}
