digraph {
25 [style = filled, label = "final ContinuousFileMonitoringFunction<String> monitoringFunction = createTestContinuousFileMonitoringFunction(format,FileProcessingMode.PROCESS_ONCE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final org.apache.hadoop.fs.Path(( filesCreated = new org.apache.hadoop.fs.Path((((@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String testBasePath = hdfsURI + \"/\" + UUID.randomUUID() + \"/\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "final FileVerifyingSourceContext context = new FileVerifyingSourceContext(latch,monitoringFunction,1,totalNoOfFilesToBeRead)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "hdfs.delete(path,false)@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "filesToBeRead.add(file.f0.getName())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertArrayEquals(filesToBeRead.toArray(),context.getSeenFiles().toArray())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "format.setFilesFilter(FilePathFilter.createDefaultFilter())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TextInputFormat format = new TextInputFormat(new Path(testBasePath))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < NO_OF_FILES@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Tuple2<org.apache.hadoop.fs.Path,String> file = createFileAndFillWithData(testBasePath,\"file\",i,\"This is test line.\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final FileVerifyingSourceContext context = new FileVerifyingSourceContext(latch,monitoringFunction)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "filesCreated(i( = ignoredFile.f0@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "filesCreated(i( = file.f0@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testProcessOnce['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "final int totalNoOfFilesToBeRead = NO_OF_FILES + 1@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "t.start()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Tuple2<org.apache.hadoop.fs.Path,String> bootstrap = createFileAndFillWithData(testBasePath,\"file\",NO_OF_FILES + 1,\"This is test line.\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "t.join()@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final ContinuousFileMonitoringFunction<String> monitoringFunction = new ContinuousFileMonitoringFunction<>(format,FileProcessingMode.PROCESS_ONCE,1,INTERVAL)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "t.start()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final org.apache.hadoop.fs.Path(( filesCreated = new org.apache.hadoop.fs.Path((((@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final Thread t = new Thread(){@Override public void run(){try {monitoringFunction.open(new Configuration())monitoringFunction.run(context)context.close()}catch (Exception e) }}@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertArrayEquals(filesToBeRead.toArray(),context.getSeenFiles().toArray())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "testProcessOnce['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "latch.await()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final Thread t = new Thread(){@Override public void run(){try {monitoringFunction.open(new Configuration())monitoringFunction.run(context)}catch (Exception e) }}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final ContinuousFileMonitoringFunction<String> monitoringFunction = new ContinuousFileMonitoringFunction<>(format,FileProcessingMode.PROCESS_CONTINUOUSLY,1,INTERVAL)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "hdfs.delete(bootstrap.f0,false)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(hdfs.exists(bootstrap.f0))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "t.join()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "filesToBeRead.add(bootstrap.f0.getName())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final Set<String> filesToBeRead = new TreeSet<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "!latch.isTriggered()@@@27@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testProcessContinuously['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final OneShotLatch latch = new OneShotLatch()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
31->37 [style = bold, label=""];
16->0 [style = bold, label=""];
14->7 [style = solid, label="i"];
29->30 [style = bold, label=""];
7->3 [style = solid, label="i"];
6->22 [style = bold, label=""];
2->13 [style = solid, label="latch"];
7->35 [style = bold, label=""];
29->14 [style = solid, label="i"];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
25->13 [style = solid, label="monitoringFunction"];
19->9 [style = bold, label=""];
31->37 [style = solid, label="context"];
26->15 [style = bold, label=""];
30->14 [style = bold, label=""];
22->13 [style = bold, label=""];
10->11 [style = bold, label=""];
15->35 [style = solid, label="testBasePath"];
3->7 [style = dotted, label="true"];
33->31 [style = solid, label="monitoringFunction"];
22->25 [style = dashed, label="0"];
22->13 [style = solid, label="monitoringFunction"];
20->34 [style = bold, label=""];
4->19 [style = bold, label=""];
27->31 [style = bold, label=""];
2->18 [style = bold, label=""];
11->3 [style = solid, label="i"];
33->27 [style = bold, label=""];
9->25 [style = solid, label="format"];
14->35 [style = solid, label="i"];
7->29 [style = dotted, label="true"];
13->5 [style = solid, label="context"];
3->7 [style = bold, label=""];
15->14 [style = solid, label="testBasePath"];
13->5 [style = bold, label=""];
1->32 [style = bold, label=""];
7->35 [style = dotted, label="true"];
14->35 [style = dashed, label="0"];
23->7 [style = bold, label=""];
27->31 [style = solid, label="totalNoOfFilesToBeRead"];
37->16 [style = bold, label=""];
3->23 [style = dotted, label="true"];
35->29 [style = bold, label=""];
15->18 [style = solid, label="testBasePath"];
22->33 [style = dashed, label="0"];
2->31 [style = solid, label="latch"];
15->9 [style = solid, label="testBasePath"];
12->20 [style = bold, label=""];
0->11 [style = bold, label=""];
7->20 [style = bold, label=""];
20->1 [style = bold, label=""];
3->14 [style = dotted, label="true"];
21->12 [style = bold, label=""];
14->23 [style = bold, label=""];
11->3 [style = bold, label=""];
6->33 [style = bold, label=""];
11->14 [style = solid, label="i"];
3->21 [style = bold, label=""];
3->35 [style = solid, label="i"];
17->4 [style = bold, label=""];
7->14 [style = solid, label="i"];
24->15 [style = bold, label=""];
5->8 [style = bold, label=""];
0->28 [style = dotted, label="true"];
15->2 [style = bold, label=""];
9->22 [style = solid, label="format"];
16->10 [style = bold, label=""];
25->13 [style = bold, label=""];
34->1 [style = bold, label=""];
28->11 [style = bold, label=""];
3->14 [style = bold, label=""];
36->15 [style = bold, label=""];
3->7 [style = solid, label="i"];
18->17 [style = bold, label=""];
23->29 [style = dashed, label="0"];
7->3 [style = bold, label=""];
0->10 [style = bold, label=""];
16->0 [style = dotted, label="true"];
9->33 [style = solid, label="format"];
23->7 [style = solid, label="i"];
7->30 [style = dotted, label="true"];
0->28 [style = bold, label=""];
6->25 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
