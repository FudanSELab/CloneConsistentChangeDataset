digraph {
11 [style = filled, label = "String md5 = mockSearches(\"GeoIP2-City.mmdb\",0,9)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "verify(client,never()).search(any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "PersistentTask<?> task = new PersistentTask<>(taskId,GeoIpDownloader.GEOIP_DOWNLOADER,new GeoIpTaskParams(),1,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).routingTable(createIndexRoutingTable()).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(files.collect(Collectors.toList()),empty())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCheckDatabases_dontCheckDatabaseWhenNoDatabasesIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ClusterState state = ClusterState.builder(new ClusterName(\"name\")).metadata(Metadata.builder().putCustom(TYPE,tasksCustomMetadata).build()).nodes(new DiscoveryNodes.Builder().add(new DiscoveryNode(\"_id1\",buildNewFakeTransportAddress(),Version.CURRENT)).localNodeId(\"_id1\")).build()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testCheckDatabases_dontCheckDatabaseWhenNoDatabasesIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "databaseRegistry.checkDatabases(state)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(0L,0,9,md5))))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "verify(client,never()).search(any())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "databaseRegistry.checkDatabases(state)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "PersistentTasksCustomMetadata tasksCustomMetadata = new PersistentTasksCustomMetadata(0L,Map.of())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String taskId = GeoIpDownloader.GEOIP_DOWNLOADER@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "mockSearches(\"GeoIP2-City.mmdb\",0,9)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(databaseRegistry.getDatabase(\"GeoIP2-City.mmdb\",false),nullValue())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testCheckDatabases_dontCheckDatabaseWhenGeoIpDownloadTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PersistentTasksCustomMetadata tasksCustomMetadata = new PersistentTasksCustomMetadata(1L,Map.of(taskId,task))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(files.collect(Collectors.toList()),empty())@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "task = new PersistentTask<>(task,new GeoIpTaskState(Map.of(\"GeoIP2-City.mmdb\",new GeoIpTaskState.Metadata(0L,0,9,\"8a76ac17c58d8f3f2e15e3f1ec37d473\"))))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->15 [style = bold, label=""];
5->12 [style = dashed, label="0"];
15->14 [style = bold, label=""];
11->1 [style = bold, label=""];
18->19 [style = bold, label=""];
14->17 [style = bold, label=""];
9->10 [style = solid, label="state"];
9->10 [style = bold, label=""];
1->2 [style = solid, label="taskId"];
2->12 [style = solid, label="task"];
13->11 [style = bold, label=""];
3->4 [style = bold, label=""];
12->7 [style = bold, label=""];
2->12 [style = bold, label=""];
11->12 [style = solid, label="md5"];
4->0 [style = bold, label=""];
2->5 [style = solid, label="task"];
19->16 [style = bold, label=""];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
6->1 [style = bold, label=""];
12->7 [style = solid, label="task"];
16->14 [style = solid, label="state"];
0->8 [style = bold, label=""];
10->4 [style = bold, label=""];
17->3 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
1->7 [style = solid, label="taskId"];
1->2 [style = bold, label=""];
2->5 [style = bold, label=""];
5->7 [style = solid, label="task"];
}
