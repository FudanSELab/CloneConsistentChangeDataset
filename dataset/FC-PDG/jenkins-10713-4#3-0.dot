digraph {
1 [style = filled, label = "Assume.assumeThat(\"We assume that JNLP4-connect is disabled\",defaultProtocols,not(hasItem(\"JNLP4-connect\")))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "newProtocols.add(MockOptInProtocol2.NAME)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assume.assumeThat(\"We assume that JNLP3-connect is disabled\",defaultProtocols,not(hasItem(\"JNLP3-connect\")))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(\"JNLP3-connect must be enabled before the roundtrip\",j.jenkins.getAgentProtocols(),hasItem(\"JNLP3-connect\"))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol1.NAME,\"after the roundtrip\")@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final Set<String> agentProtocolsBeforeReload = j.jenkins.getAgentProtocols()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol2.NAME,\"before the roundtrip\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "newProtocols.add(MockOptInProtocol1.NAME)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertFalse(\"The protocol list must have been really reloaded\",agentProtocolsBeforeReload == reloadedProtocols)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(\"We should have two additional enabled protocols\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 2))@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "assertThat(\"We should have additional enabled protocol\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 1))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "agentProtocols_multipleEnable_roundtrip['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "j.jenkins.setAgentProtocols(newProtocols)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "j.jenkins.save()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(\"JNLP3-connect must be enabled after the roundtrip\",reloadedProtocols,hasItem(\"JNLP3-connect\"))@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Set<String> newProtocols = new HashSet<>(defaultProtocols)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertThat(\"There should be two additional enabled protocols\",reloadedProtocols.size(),equalTo(defaultProtocols.size() + 2))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final Set<String> defaultProtocols = Collections.unmodifiableSet(j.jenkins.getAgentProtocols())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "j.jenkins.reload()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "agentProtocols_multipleEnable_roundtrip['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final Set<String> reloadedProtocols = j.jenkins.getAgentProtocols()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol1.NAME,\"before the roundtrip\")@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "newProtocols.add(\"JNLP4-connect\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertThat(\"JNLP3-connect must be enabled after the roundtrip\",reloadedProtocols,hasItem(\"JNLP4-connect\"))@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(\"JNLP4-connect must be enabled before the roundtrip\",j.jenkins.getAgentProtocols(),hasItem(\"JNLP4-connect\"))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "newProtocols.add(\"JNLP3-connect\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "agentProtocols_singleEnable_roundtrip['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertProtocolEnabled(MockOptInProtocol2.NAME,\"after the roundtrip\")@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2->17 [style = bold, label=""];
0->3 [style = bold, label=""];
10->18 [style = bold, label=""];
8->10 [style = bold, label=""];
15->13 [style = bold, label=""];
7->11 [style = bold, label=""];
18->24 [style = bold, label=""];
14->25 [style = bold, label=""];
21->0 [style = bold, label=""];
26->17 [style = bold, label=""];
14->16 [style = solid, label="agentProtocolsBeforeReload"];
11->14 [style = bold, label=""];
17->6 [style = bold, label=""];
20->9 [style = bold, label=""];
27->9 [style = bold, label=""];
16->26 [style = bold, label=""];
9->10 [style = bold, label=""];
3->16 [style = bold, label=""];
16->2 [style = bold, label=""];
16->22 [style = bold, label=""];
3->6 [style = solid, label="reloadedProtocols"];
9->8 [style = bold, label=""];
12->9 [style = bold, label=""];
10->7 [style = solid, label="newProtocols"];
22->23 [style = bold, label=""];
5->18 [style = dashed, label="0"];
4->7 [style = bold, label=""];
8->1 [style = bold, label=""];
9->1 [style = solid, label="defaultProtocols"];
9->10 [style = solid, label="defaultProtocols"];
10->5 [style = bold, label=""];
23->19 [style = bold, label=""];
15->0 [style = bold, label=""];
5->4 [style = bold, label=""];
3->17 [style = solid, label="reloadedProtocols"];
5->7 [style = bold, label=""];
3->16 [style = solid, label="reloadedProtocols"];
14->15 [style = bold, label=""];
9->8 [style = solid, label="defaultProtocols"];
4->24 [style = dashed, label="0"];
2->26 [style = dashed, label="0"];
24->7 [style = bold, label=""];
1->10 [style = bold, label=""];
2->22 [style = dashed, label="0"];
25->21 [style = bold, label=""];
13->0 [style = bold, label=""];
}
