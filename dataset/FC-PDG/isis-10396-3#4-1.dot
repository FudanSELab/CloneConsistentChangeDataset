digraph {
1 [style = filled, label = "jsonValueEncoder.asAdapter(mockObjectSpec,representation,null)@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "allowingObjectSpecCorrespondingClassAndObjectTypeIs()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "context.checking(new Expectations(){})@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "whenObjectSpecIsBooleanButReprIsNot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "allowingObjectSpecCorrespondingClassAndSpecIdIs()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "whenObjectSpecIsLongButReprIsNot['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "whenObjectSpecIsBooleanButReprIsNot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "allowingObjectSpecCorrespondingClassAndSpecIdIs()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "allowingObjectSpecHas(,mockEncodableFacet)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
4->3 [style = bold, label=""];
2->5 [style = dashed, label="0"];
3->5 [style = bold, label=""];
2->0 [style = bold, label=""];
7->0 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
3->7 [style = bold, label=""];
2->7 [style = dashed, label="0"];
0->1 [style = bold, label=""];
8->3 [style = bold, label=""];
}
