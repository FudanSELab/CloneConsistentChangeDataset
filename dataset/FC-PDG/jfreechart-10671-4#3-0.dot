digraph {
8 [style = filled, label = "dataset.add(item2,\"R1\",\"C1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testAddUpdatesCachedRange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(8.0,dataset.getMaxOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(7.0,dataset.getMinOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(1.5,dataset.getMeanValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BoxAndWhiskerItem item2 = new BoxAndWhiskerItem(1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,new ArrayList())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(new Range(7.5,8.5),dataset.getRangeBounds(false))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(3.5,dataset.getQ1Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "dataset.add(item1,\"R1\",\"C1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(3.0,dataset.getQ1Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DefaultBoxAndWhiskerCategoryDataset dataset = new DefaultBoxAndWhiskerCategoryDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(5.0,dataset.getMinRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "BoxAndWhiskerItem item2 = new BoxAndWhiskerItem(1.5,2.5,3.5,4.5,5.5,6.5,7.5,8.5,new ArrayList<>())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "BoxAndWhiskerItem item1 = new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList<>())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(8.5,dataset.getMaxOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(7.5,dataset.getMinOutlier(\"R1\",\"C1\").doubleValue(),EPSILON)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(1.0,dataset.getMeanValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(2.0,dataset.getValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(new Range(7.0,8.0),dataset.getRangeBounds(false))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(6.5,dataset.getMaxRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(6.0,dataset.getMaxRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(2.5,dataset.getMedianValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(4.5,dataset.getQ3Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(5.5,dataset.getMinRegularValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2.0,dataset.getMedianValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "BoxAndWhiskerItem item1 = new BoxAndWhiskerItem(1.0,2.0,3.0,4.0,5.0,6.0,7.0,8.0,new ArrayList())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(2.5,dataset.getValue(\"R1\",\"C1\").doubleValue(),EPSILON)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testAddUpdatesCachedRange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(4.0,dataset.getQ3Value(\"R1\",\"C1\").doubleValue(),EPSILON)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testAdd['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
17->10 [style = bold, label=""];
8->19 [style = dashed, label="0"];
15->16 [style = dashed, label="0"];
1->8 [style = bold, label=""];
10->15 [style = bold, label=""];
16->11 [style = bold, label=""];
0->13 [style = bold, label=""];
24->19 [style = bold, label=""];
18->8 [style = solid, label="item2"];
11->1 [style = bold, label=""];
2->6 [style = bold, label=""];
13->20 [style = dashed, label="0"];
22->29 [style = bold, label=""];
1->18 [style = dashed, label="0"];
11->24 [style = bold, label=""];
12->0 [style = bold, label=""];
20->25 [style = bold, label=""];
11->18 [style = bold, label=""];
21->28 [style = bold, label=""];
7->27 [style = dashed, label="0"];
3->9 [style = bold, label=""];
29->20 [style = bold, label=""];
26->27 [style = bold, label=""];
7->5 [style = bold, label=""];
15->11 [style = solid, label="item1"];
15->11 [style = bold, label=""];
10->16 [style = bold, label=""];
6->26 [style = dashed, label="0"];
1->8 [style = solid, label="item2"];
25->26 [style = bold, label=""];
12->22 [style = dashed, label="0"];
0->29 [style = dashed, label="0"];
2->25 [style = dashed, label="0"];
9->14 [style = bold, label=""];
23->10 [style = bold, label=""];
16->11 [style = solid, label="item1"];
5->21 [style = dashed, label="0"];
18->8 [style = bold, label=""];
6->7 [style = bold, label=""];
27->21 [style = bold, label=""];
19->22 [style = bold, label=""];
8->12 [style = bold, label=""];
13->2 [style = bold, label=""];
}
