digraph {
36 [style = filled, label = "assertEquals(DefaultScopeDefine.SERVICE_INSTANCE,metaInAlarm.getScopeId())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "when(metadata.getId()).thenReturn(EndpointTraffic.buildId(1,endpointInventoryName,DetectPoint.SERVER))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "EndpointTraffic endpointTraffic = mock()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "String metricsName = \"endpoint-metrics\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "verify(rule).in(metaCaptor.capture(),any())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testNotifyWithEndpointCatalog['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(DefaultScopeDefine.SERVICE_INSTANCE_CATALOG_NAME,metaInAlarm.getScope())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "when(endpointInventoryCache.get(anyInt())).thenReturn(endpointInventory)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(endpointInventoryName + \" in \" + serviceInventoryName,metaInAlarm.getName())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(metaInAlarm instanceof EndpointMetaInAlarm)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(endpointInventory.getName()).thenReturn(endpointInventoryName)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "when(instanceInventory.getName()).thenReturn(instanceInventoryName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ArgumentCaptor<MetaInAlarm> metaCaptor = ArgumentCaptor.forClass()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "String instanceInventoryName = \"instance-inventory-name\"@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "MetaInAlarm metaInAlarm = metaCaptor.getValue()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT_CATALOG_NAME,metaInAlarm.getScope())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "prepareNotify()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "notifyHandler.notify(metrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String endpointInventoryName = \"endpoint-inventory-name\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "when(endpointTraffic.getName()).thenReturn(endpointInventoryName)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(instanceInventoryName,metaInAlarm.getName())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "EndpointInventory endpointInventory = mock()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(mockId,metaInAlarm.getId0())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "String metricsName = \"service-instance-metrics\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(serviceInventoryCache.get(anyInt())).thenReturn(serviceInventory)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"1_ZW5kcG9pbnQtaW52ZW50b3J5LW5hbWU=_0\",metaInAlarm.getId0())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(mockId,metaInAlarm.getId0())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testNotifyWithServiceInstanceCatalog['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "when(DefaultScopeDefine.inServiceInstanceCatalog(0)).thenReturn(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(DefaultScopeDefine.ENDPOINT,metaInAlarm.getScopeId())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(serviceInventory.getName()).thenReturn(serviceInventoryName)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "when(DefaultScopeDefine.inEndpointCatalog(0)).thenReturn(true)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "when(metadata.getMetricsName()).thenReturn(metricsName)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String serviceInventoryName = \"service-inventory-name\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(metaInAlarm instanceof ServiceInstanceMetaInAlarm)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "when(serviceInstanceInventoryCache.get(anyInt())).thenReturn(instanceInventory)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(metricsName,metaInAlarm.getMetricsName())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testNotifyWithEndpointCatalog['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "ServiceInventory serviceInventory = mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ServiceInstanceInventory instanceInventory = mock()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12->38 [style = dashed, label="0"];
8->10 [style = bold, label=""];
27->18 [style = bold, label=""];
8->15 [style = solid, label="endpointInventoryName"];
18->19 [style = solid, label="serviceInventoryName"];
29->17 [style = bold, label=""];
7->14 [style = solid, label="metricsName"];
16->11 [style = bold, label=""];
10->15 [style = bold, label=""];
28->36 [style = bold, label=""];
8->27 [style = solid, label="endpointInventoryName"];
6->1 [style = dashed, label="0"];
26->17 [style = bold, label=""];
11->1 [style = bold, label=""];
0->19 [style = bold, label=""];
22->16 [style = bold, label=""];
3->25 [style = bold, label=""];
37->16 [style = solid, label="metricsName"];
19->20 [style = bold, label=""];
34->22 [style = solid, label="metaInAlarm"];
0->20 [style = solid, label="serviceInventory"];
1->3 [style = bold, label=""];
15->30 [style = dashed, label="0"];
25->4 [style = bold, label=""];
9->17 [style = bold, label=""];
14->38 [style = bold, label=""];
30->32 [style = bold, label=""];
3->22 [style = dashed, label="0"];
31->30 [style = solid, label="instanceInventoryName"];
17->37 [style = bold, label=""];
10->21 [style = solid, label="endpointInventory"];
2->4 [style = bold, label=""];
15->18 [style = bold, label=""];
40->32 [style = solid, label="instanceInventory"];
32->33 [style = bold, label=""];
34->22 [style = bold, label=""];
7->5 [style = solid, label="metricsName"];
37->14 [style = solid, label="metricsName"];
7->14 [style = bold, label=""];
20->21 [style = bold, label=""];
17->7 [style = bold, label=""];
37->14 [style = bold, label=""];
1->28 [style = bold, label=""];
23->22 [style = bold, label=""];
1->3 [style = solid, label="metaInAlarm"];
20->23 [style = bold, label=""];
3->2 [style = bold, label=""];
33->39 [style = bold, label=""];
21->22 [style = bold, label=""];
18->13 [style = solid, label="serviceInventoryName"];
12->8 [style = bold, label=""];
39->35 [style = bold, label=""];
5->13 [style = bold, label=""];
14->12 [style = bold, label=""];
31->30 [style = bold, label=""];
2->25 [style = dashed, label="0"];
8->23 [style = solid, label="endpointInventoryName"];
7->37 [style = dashed, label="0"];
15->27 [style = dashed, label="0"];
40->31 [style = bold, label=""];
13->6 [style = bold, label=""];
35->34 [style = bold, label=""];
31->28 [style = solid, label="instanceInventoryName"];
38->40 [style = bold, label=""];
21->23 [style = dashed, label="0"];
4->5 [style = bold, label=""];
24->27 [style = bold, label=""];
18->0 [style = bold, label=""];
10->24 [style = dashed, label="0"];
8->13 [style = solid, label="endpointInventoryName"];
8->24 [style = bold, label=""];
}
