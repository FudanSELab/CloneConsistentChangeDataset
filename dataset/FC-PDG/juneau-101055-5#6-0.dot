digraph {
15 [style = filled, label = "c.get().header(contentLocation(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "c.get().header(ifMatch(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "c.get().header(contentLocation(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "c.get().header(ifMatch((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c.get().header(ifMatch(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "c.get().header(contentLocation((Supplier<URI>)null)).run().assertBody().isEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "c.get().header(new IfMatch(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "c.get().header(contentLocation((String)null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "c.get().header(contentLocation((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "c.get().header(contentLocation(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "c.get().header(ifMatch(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c.get().header(contentLocation(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "c.get().header(ifMatch(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "c.get().header(ifMatch((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c.get().header(contentLocation((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "c.get().header(contentLocation(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "c.get().header(contentLocation((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "c.get().header(new ContentLocation(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "c.get().header(ifMatch(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "c.get().header(ifMatch((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "c.get().header(contentLocation(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "c.get().header(contentLocation(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "c.get().header(contentLocation(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->9 [style = bold, label=""];
16->0 [style = bold, label=""];
19->20 [style = bold, label=""];
26->25 [style = bold, label=""];
4->13 [style = bold, label=""];
10->12 [style = dashed, label="0"];
25->18 [style = bold, label=""];
7->20 [style = dashed, label="0"];
1->21 [style = dashed, label="0"];
0->21 [style = bold, label=""];
7->4 [style = bold, label=""];
17->19 [style = bold, label=""];
10->18 [style = dashed, label="0"];
0->7 [style = bold, label=""];
3->10 [style = bold, label=""];
24->26 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
22->0 [style = bold, label=""];
8->5 [style = bold, label=""];
0->1 [style = bold, label=""];
6->8 [style = bold, label=""];
9->13 [style = dashed, label="0"];
12->14 [style = bold, label=""];
9->26 [style = dashed, label="0"];
3->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
23->17 [style = bold, label=""];
8->17 [style = dashed, label="0"];
15->12 [style = bold, label=""];
13->15 [style = bold, label=""];
4->24 [style = dashed, label="0"];
20->24 [style = bold, label=""];
5->19 [style = dashed, label="0"];
14->11 [style = bold, label=""];
6->23 [style = dashed, label="0"];
21->23 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
