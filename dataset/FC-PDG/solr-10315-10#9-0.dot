digraph {
20 [style = filled, label = "ReduceOperation reduceOperation = null@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "UniqueStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "null == overExpression || !(overExpression.getParameter() instanceof StreamExpressionValue)@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ReducerStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "StreamOperation operation = factory.constructOperation(ex)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "StreamExpression expression@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "StreamExpressionNamedParameter overExpression = factory.getNamedOperand(expression,\"over\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'over' parameter listing fields to unique over but didn't find one\",expression))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'by' parameter listing fields to group by but didn't find one\",expression))@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "StreamExpression ex = operationExpressions.get(0)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "StreamExpressionNamedParameter byExpression = factory.getNamedOperand(expression,\"by\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "reduceOperation = (ReduceOperation)operation@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 1@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "operationExpressions != null && operationExpressions.size() == 1@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "throw new IOException(\"The ReducerStream requires a ReduceOperation. A StreamOperation was provided.\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "1 != streamExpressions.size()@@@8@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "List<StreamExpression> operationExpressions = factory.getExpressionOperandsRepresentingTypes(expression,)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "init(factory.constructStream(streamExpressions.get(0)),factory.constructEqualitor(((StreamExpressionValue)byExpression.getParameter()).getValue(),))@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "init(factory.constructStream(streamExpressions.get(0)),factory.constructEqualitor(((StreamExpressionValue)byExpression.getParameter()).getValue(),),reduceOperation)@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "null == byExpression || !(byExpression.getParameter() instanceof StreamExpressionValue)@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "null == byExpression || !(byExpression.getParameter() instanceof StreamExpressionValue)@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ReducerStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "throw new IOException(\"The ReducerStream requires a ReduceOperation.\")@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "operation instanceof ReduceOperation@@@19@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 2@@@6@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "init(factory.constructStream(streamExpressions.get(0)),factory.constructEqualitor(((StreamExpressionValue)overExpression.getParameter()).getValue(),))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11->34 [style = bold, label=""];
3->24 [style = bold, label=""];
6->30 [style = dashed, label="0"];
2->4 [style = bold, label=""];
17->21 [style = bold, label=""];
32->34 [style = solid, label="overExpression"];
31->28 [style = dotted, label="true"];
10->29 [style = dashed, label="0"];
3->32 [style = dashed, label="0"];
0->8 [style = bold, label=""];
3->6 [style = solid, label="byExpression"];
19->23 [style = dotted, label="true"];
6->25 [style = dotted, label="true"];
6->25 [style = bold, label=""];
20->17 [style = bold, label=""];
23->18 [style = solid, label="expression"];
23->3 [style = solid, label="expression"];
22->13 [style = bold, label=""];
26->22 [style = solid, label="ex"];
29->30 [style = solid, label="expression"];
26->22 [style = bold, label=""];
5->0 [style = dotted, label="true"];
8->11 [style = dotted, label="true"];
5->24 [style = dashed, label="0"];
7->9 [style = bold, label=""];
7->10 [style = dotted, label="true"];
17->13 [style = dotted, label="true"];
11->18 [style = bold, label=""];
19->10 [style = dotted, label="true"];
11->6 [style = bold, label=""];
6->20 [style = bold, label=""];
1->9 [style = solid, label="expression"];
34->30 [style = dotted, label="true"];
23->9 [style = solid, label="expression"];
8->2 [style = bold, label=""];
1->11 [style = solid, label="expression"];
4->33 [style = dashed, label="0"];
17->22 [style = dotted, label="true"];
9->32 [style = bold, label=""];
34->30 [style = bold, label=""];
13->14 [style = dotted, label="true"];
18->6 [style = bold, label=""];
17->26 [style = bold, label=""];
22->13 [style = solid, label="operation"];
5->8 [style = bold, label=""];
6->4 [style = bold, label=""];
29->0 [style = solid, label="expression"];
15->12 [style = bold, label=""];
23->25 [style = solid, label="expression"];
17->21 [style = dotted, label="false"];
34->33 [style = bold, label=""];
7->1 [style = dotted, label="true"];
13->16 [style = dotted, label="false"];
1->3 [style = solid, label="expression"];
11->2 [style = bold, label=""];
1->0 [style = solid, label="expression"];
30->33 [style = bold, label=""];
15->11 [style = bold, label=""];
13->16 [style = bold, label=""];
29->9 [style = solid, label="expression"];
16->27 [style = bold, label=""];
20->27 [style = solid, label="reduceOperation"];
2->6 [style = bold, label=""];
14->27 [style = solid, label="reduceOperation"];
17->26 [style = dotted, label="true"];
14->27 [style = bold, label=""];
19->9 [style = bold, label=""];
3->2 [style = solid, label="byExpression"];
32->5 [style = bold, label=""];
31->9 [style = bold, label=""];
25->20 [style = bold, label=""];
24->15 [style = bold, label=""];
9->3 [style = bold, label=""];
2->6 [style = dotted, label="true"];
3->5 [style = bold, label=""];
8->34 [style = bold, label=""];
2->34 [style = dashed, label="0"];
8->11 [style = bold, label=""];
1->6 [style = solid, label="expression"];
23->12 [style = solid, label="expression"];
5->0 [style = bold, label=""];
24->17 [style = solid, label="operationExpressions"];
23->24 [style = solid, label="expression"];
11->18 [style = dotted, label="true"];
29->32 [style = solid, label="expression"];
31->29 [style = dotted, label="true"];
21->27 [style = bold, label=""];
12->11 [style = bold, label=""];
13->14 [style = bold, label=""];
29->11 [style = solid, label="expression"];
22->14 [style = solid, label="operation"];
15->12 [style = dotted, label="true"];
}
