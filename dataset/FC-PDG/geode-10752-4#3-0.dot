digraph {
0 [style = filled, label = "cycleDurableClient(client1,\"client1_dc\",server1Port,regionName,timeout)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "createClient1CqsAndDurableCqs(client1,regionName)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "VM server = host.getVM(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testGetDurableCqsFromServerCycleClientsAndMoreCqs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client2.invoke(null)@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testGetDurableCqsFromServer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "createClient1CqsAndDurableCqs(client1,regionName)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String regionName = \"testGetAllDurableCqsFromServerCycleClients\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "createClient2CqsAndDurableCqs(client2,regionName)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"check durable cqs for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(2,list.size())assertTrue(list.contains(\"client1DCQ1\"))assertTrue(list.contains(\"client1DCQ2\"))}})@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testGetDurableCqsFromServerCycleClientsAndMoreCqs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "VM client2 = host.getVM(2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client1.invoke(null)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client2.invoke(new CacheSerializableRunnable(\"check durable cqs for client 2\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(8,list.size())assertTrue(list.contains(\"client2DCQ1\"))assertTrue(list.contains(\"client2DCQ2\"))assertTrue(list.contains(\"client2DCQ3\"))assertTrue(list.contains(\"client2DCQ4\"))assertTrue(list.contains(\"client2MoreDCQ1\"))assertTrue(list.contains(\"client2MoreDCQ2\"))assertTrue(list.contains(\"client2MoreDCQ3\"))assertTrue(list.contains(\"client2MoreDCQ4\"))}})@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "client2.invoke(new CacheSerializableRunnable(\"Register more cq for client 2\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()CqAttributesFactory cqAf = new CqAttributesFactory()CqAttributes attributes = cqAf.create()try {queryService.newCq(\"client2MoreDCQ1\",\"Select * From \" + SEPARATOR + regionName + \" where id = 1\",attributes,true).execute()queryService.newCq(\"client2MoreDCQ2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 10\",attributes,true).execute()queryService.newCq(\"client2MoreDCQ3\",\"Select * From \" + SEPARATOR + regionName,attributes,true).execute()queryService.newCq(\"client2MoreDCQ4\",\"Select * From \" + SEPARATOR + regionName + \" where id = 3\",attributes,true).execute()}catch (RegionNotFoundException e) catch (CqException e) catch (CqExistsException e) }})@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client1.invoke(null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client2.invoke(new CacheSerializableRunnable(\"check durable cqs for client 2\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(4,list.size())assertTrue(list.contains(\"client2DCQ1\"))assertTrue(list.contains(\"client2DCQ2\"))assertTrue(list.contains(\"client2DCQ3\"))assertTrue(list.contains(\"client2DCQ4\"))}})@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final Host host = Host.getHost(0)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "client2.invoke(null)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final String cq1Name = \"testCq1\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "disconnectAllFromDS()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "client2.invoke(null)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createClient2CqsAndDurableCqs(client2,regionName)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "VM server = host.getVM(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "client1.invoke(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"check durable cqs for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()List<String> list = nulltry {list = queryService.getAllDurableCqsFromServer()}catch (CqException e) assertEquals(4,list.size())assertTrue(list.contains(\"client1DCQ1\"))assertTrue(list.contains(\"client1DCQ2\"))assertTrue(list.contains(\"client1MoreDCQ1\"))assertTrue(list.contains(\"client1MoreDCQ2\"))}})@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "client1.invoke(null)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "server.invoke(null)@@@51@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "cycleDurableClient(client2,\"client2_dc\",server1Port,regionName,timeout)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int server1Port = ((Integer)server.invoke(null)).intValue()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Host host = Host.getHost(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "VM client1 = host.getVM(1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String regionName = \"testGetAllDurableCqsFromServer\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client1.invoke(new CacheSerializableRunnable(\"Register more cq for client 1\"){@Override public void run2(){QueryService queryService = CacheServerTestUtil.getCache().getQueryService()CqAttributesFactory cqAf = new CqAttributesFactory()CqAttributes attributes = cqAf.create()try {queryService.newCq(\"client1MoreDCQ1\",\"Select * From \" + SEPARATOR + regionName + \" where id = 1\",attributes,true).execute()queryService.newCq(\"client1MoreDCQ2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 10\",attributes,true).execute()queryService.newCq(\"client1MoreNoDC1\",\"Select * From \" + SEPARATOR + regionName,attributes,false).execute()queryService.newCq(\"client1MoreNoDC2\",\"Select * From \" + SEPARATOR + regionName + \" where id = 3\",attributes,false).execute()}catch (RegionNotFoundException e) catch (CqException e) catch (CqExistsException e) }})@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->22 [style = solid, label="regionName"];
11->9 [style = solid, label="client1"];
23->2 [style = bold, label=""];
14->17 [style = bold, label=""];
29->26 [style = bold, label=""];
13->33 [style = dashed, label="0"];
2->4 [style = solid, label="regionName"];
21->14 [style = bold, label=""];
3->11 [style = bold, label=""];
25->15 [style = bold, label=""];
0->4 [style = bold, label=""];
11->21 [style = bold, label=""];
19->6 [style = bold, label=""];
10->2 [style = bold, label=""];
3->1 [style = solid, label="client2"];
11->4 [style = solid, label="timeout"];
2->1 [style = solid, label="regionName"];
21->1 [style = solid, label="client2"];
12->15 [style = bold, label=""];
21->4 [style = solid, label="server1Port"];
16->19 [style = bold, label=""];
2->0 [style = solid, label="regionName"];
15->0 [style = solid, label="client1"];
2->17 [style = solid, label="regionName"];
22->9 [style = bold, label=""];
6->8 [style = bold, label=""];
28->9 [style = solid, label="regionName"];
8->27 [style = bold, label=""];
11->9 [style = solid, label="timeout"];
2->9 [style = solid, label="regionName"];
28->1 [style = solid, label="regionName"];
15->9 [style = solid, label="client1"];
14->24 [style = dashed, label="0"];
11->1 [style = solid, label="timeout"];
32->8 [style = bold, label=""];
21->9 [style = solid, label="server1Port"];
2->20 [style = bold, label=""];
30->32 [style = bold, label=""];
7->0 [style = bold, label=""];
3->22 [style = solid, label="client2"];
18->16 [style = bold, label=""];
3->4 [style = solid, label="client2"];
1->30 [style = bold, label=""];
14->33 [style = bold, label=""];
26->28 [style = bold, label=""];
11->0 [style = solid, label="timeout"];
15->3 [style = bold, label=""];
21->0 [style = solid, label="server1Port"];
24->9 [style = bold, label=""];
17->22 [style = bold, label=""];
21->1 [style = solid, label="server1Port"];
13->14 [style = bold, label=""];
15->17 [style = solid, label="client1"];
33->24 [style = bold, label=""];
9->1 [style = bold, label=""];
20->12 [style = bold, label=""];
28->25 [style = bold, label=""];
5->7 [style = bold, label=""];
27->31 [style = bold, label=""];
4->18 [style = bold, label=""];
21->13 [style = bold, label=""];
1->5 [style = bold, label=""];
}
