digraph {
22 [style = filled, label = "builtInMetricsVersion == Version.FROM_100_TO_24@@@3@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(dummyTagMap)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(sensor,is(dummySensor))@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final String operation = \"task-created\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "shouldGetSkipRecordSensor['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(expectedSensor)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "final Sensor sensor = ThreadMetrics.createTaskSensor(THREAD_ID,streamsMetrics)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String operation = \"skipped-records\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Sensor sensor = ThreadMetrics.skipRecordSensor(THREAD_ID,streamsMetrics)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertFalse(sensor.isPresent())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(expectedSensor,threadLevelGroup,tagMap,operation,rateDescription,totalDescription)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "shouldGetCreateTaskSensor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verifyAll()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verify(,streamsMetrics)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "StreamsMetricsImpl.addInvocationRateAndCountToSensor(dummySensor,THREAD_LEVEL_GROUP,dummyTagMap,operation,totalDescription,rateDescription)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "replay()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "replayAll()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "mockStatic()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "shouldGetSkipRecordSensor['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "expect(streamsMetrics.threadLevelSensor(THREAD_ID,operation,RecordingLevel.INFO)).andReturn(dummySensor)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "verify()@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final Optional<Sensor> sensor = ThreadMetrics.skipRecordSensor(THREAD_ID,streamsMetrics)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "replay(,streamsMetrics)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final String rateDescription = \"The average per-second number of newly created tasks\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expect(streamsMetrics.threadLevelTagMap(THREAD_ID)).andReturn(tagMap)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "final String totalDescription = \"The total number of newly created tasks\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final String rateDescription = \"The average per-second number of skipped records\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(sensor.orElse(null),is(expectedSensor))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "builtInMetricsVersion == Version.FROM_100_TO_24@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "final String totalDescription = \"The total number of skipped records\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->16 [style = bold, label=""];
13->23 [style = solid, label="rateDescription"];
4->5 [style = solid, label="totalDescription"];
23->20 [style = bold, label=""];
0->8 [style = solid, label="sensor"];
1->8 [style = bold, label=""];
12->28 [style = bold, label=""];
26->5 [style = solid, label="operation"];
22->23 [style = dotted, label="true"];
19->17 [style = dotted, label="true"];
2->1 [style = bold, label=""];
25->5 [style = solid, label="rateDescription"];
26->29 [style = bold, label=""];
0->2 [style = bold, label=""];
4->13 [style = bold, label=""];
18->15 [style = bold, label=""];
25->9 [style = bold, label=""];
3->11 [style = bold, label=""];
22->7 [style = dotted, label="true"];
13->5 [style = solid, label="rateDescription"];
29->25 [style = bold, label=""];
19->17 [style = bold, label=""];
7->4 [style = bold, label=""];
16->23 [style = bold, label=""];
4->23 [style = solid, label="totalDescription"];
13->25 [style = dashed, label="0"];
15->19 [style = bold, label=""];
0->28 [style = dashed, label="0"];
24->22 [style = bold, label=""];
12->0 [style = bold, label=""];
10->7 [style = bold, label=""];
22->7 [style = bold, label=""];
22->14 [style = dotted, label="true"];
20->18 [style = bold, label=""];
7->5 [style = solid, label="operation"];
28->2 [style = bold, label=""];
11->5 [style = bold, label=""];
9->14 [style = dashed, label="0"];
5->6 [style = bold, label=""];
22->20 [style = bold, label=""];
29->5 [style = solid, label="totalDescription"];
28->8 [style = solid, label="sensor"];
22->16 [style = dotted, label="true"];
7->23 [style = solid, label="operation"];
22->13 [style = dotted, label="true"];
19->21 [style = dotted, label="false"];
9->3 [style = bold, label=""];
19->21 [style = bold, label=""];
13->9 [style = bold, label=""];
4->29 [style = dashed, label="0"];
7->26 [style = dashed, label="0"];
22->4 [style = dotted, label="true"];
13->14 [style = bold, label=""];
3->16 [style = dashed, label="0"];
27->26 [style = bold, label=""];
6->12 [style = bold, label=""];
}
