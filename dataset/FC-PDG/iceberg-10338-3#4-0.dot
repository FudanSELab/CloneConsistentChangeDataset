digraph {
33 [style = filled, label = "(Integer)record.get(\"status\") < 2@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Files table should have two rows\",2,expected.size())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "GenericData.Record file = (GenericData.Record)record.get(\"data_file\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "expected.add(file)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"all_data_files\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expected.add((GenericData.Record)record.get(\"data_file\"))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "df1.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testFilesTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(i),actual.get(i))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "i += 1@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "df2.select(\"id\",\"data\").write().format(\"iceberg\").mode(\"append\").save(loadLocation(tableIdentifier))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testAllDataFilesTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Files table should have one row\",1,expected.size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "TableIdentifier tableIdentifier = TableIdentifier.of(\"db\",\"files_test\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testFilesTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "actual.sort(Comparator.comparing(null))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "table.newDelete().deleteFromRowFilter(Expressions.equal(\"id\",1)).commit()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Table table = createTable(tableIdentifier,SCHEMA,PartitionSpec.builderFor(SCHEMA).identity(\"id\").build())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(\"Actual results should have two rows\",2,actual.size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Table entriesTable = loadTable(tableIdentifier,\"entries\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestHelpers.assertEqualsSafe(filesTable.schema().asStruct(),expected.get(0),actual.get(0))@@@28@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Table filesTable = loadTable(tableIdentifier,\"files\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Files table should have one row\",1,expected.size())@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "file.put(0,FileContent.DATA.id())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "i < expected.size()@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "InputFile in = table.io().newInputFile(manifest.path())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Actual results should have one row\",1,actual.size())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "table.refresh()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<GenericData.Record> expected = Lists.newArrayList()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"all_data_files\")).orderBy(\"file_path\").collectAsList()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "int i = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "expected.sort(Comparator.comparing(null))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Dataset<Row> df2 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(2,\"b\")),)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Dataset<Row> df1 = spark.createDataFrame(Lists.newArrayList(new SimpleRecord(1,\"a\")),)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Row> actual = spark.read().format(\"iceberg\").load(loadLocation(tableIdentifier,\"files\")).collectAsList()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
38->5 [style = bold, label=""];
18->3 [style = bold, label=""];
29->15 [style = bold, label=""];
15->10 [style = bold, label=""];
9->12 [style = dotted, label="true"];
34->9 [style = bold, label=""];
28->36 [style = bold, label=""];
5->32 [style = solid, label="tableIdentifier"];
23->5 [style = bold, label=""];
5->8 [style = solid, label="tableIdentifier"];
28->39 [style = solid, label="i"];
24->35 [style = bold, label=""];
35->9 [style = bold, label=""];
9->33 [style = bold, label=""];
25->36 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
37->25 [style = bold, label=""];
34->33 [style = bold, label=""];
30->26 [style = bold, label=""];
28->36 [style = solid, label="i"];
33->34 [style = dotted, label="true"];
17->32 [style = dashed, label="0"];
4->2 [style = bold, label=""];
5->14 [style = bold, label=""];
5->16 [style = solid, label="tableIdentifier"];
9->7 [style = bold, label=""];
12->9 [style = bold, label=""];
33->9 [style = bold, label=""];
36->28 [style = dotted, label="true"];
10->6 [style = bold, label=""];
34->30 [style = bold, label=""];
0->15 [style = bold, label=""];
12->7 [style = bold, label=""];
36->39 [style = bold, label=""];
39->28 [style = bold, label=""];
1->17 [style = bold, label=""];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
20->18 [style = bold, label=""];
6->1 [style = bold, label=""];
11->5 [style = bold, label=""];
5->0 [style = solid, label="tableIdentifier"];
22->18 [style = solid, label="file"];
5->14 [style = solid, label="tableIdentifier"];
36->39 [style = dotted, label="true"];
12->4 [style = bold, label=""];
16->1 [style = bold, label=""];
5->6 [style = solid, label="tableIdentifier"];
22->20 [style = bold, label=""];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
3->19 [style = bold, label=""];
31->27 [style = bold, label=""];
9->20 [style = dotted, label="true"];
12->22 [style = dashed, label="0"];
18->9 [style = bold, label=""];
0->29 [style = dashed, label="0"];
33->30 [style = bold, label=""];
1->32 [style = bold, label=""];
9->3 [style = bold, label=""];
9->18 [style = dotted, label="true"];
26->37 [style = bold, label=""];
27->24 [style = bold, label=""];
14->8 [style = bold, label=""];
17->13 [style = bold, label=""];
9->12 [style = bold, label=""];
25->36 [style = solid, label="i"];
2->26 [style = dashed, label="0"];
18->7 [style = bold, label=""];
9->22 [style = dotted, label="true"];
25->39 [style = solid, label="i"];
5->29 [style = solid, label="tableIdentifier"];
33->34 [style = bold, label=""];
8->29 [style = bold, label=""];
32->31 [style = bold, label=""];
19->21 [style = bold, label=""];
}
