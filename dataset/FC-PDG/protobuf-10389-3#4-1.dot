digraph {
11 [style = filled, label = "inputStream.readBytes()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "CodedInputStream inputStream = CodedInputStream.newInstance(input)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fail()@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testInvalidInputYieldsInvalidProtocolBufferException_readTag['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertWithMessage(\"Should have thrown an exception\").fail()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "byte(( input = new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@35d796@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "inputStream.readTag()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testInvalidInputYieldsInvalidProtocolBufferException_readTag['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "testInvalidInputYieldsInvalidProtocolBufferException_readBytes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "int size = inputStream.readRawVarint32()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "inputStream.readTag()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "inputStream.pushLimit(size)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
3->11 [style = bold, label=""];
0->5 [style = solid, label="input"];
6->1 [style = bold, label=""];
3->6 [style = bold, label=""];
10->0 [style = bold, label=""];
1->9 [style = dashed, label="0"];
2->3 [style = solid, label="size"];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
6->9 [style = bold, label=""];
11->1 [style = bold, label=""];
5->4 [style = bold, label=""];
2->3 [style = bold, label=""];
0->5 [style = bold, label=""];
6->11 [style = dashed, label="0"];
}
