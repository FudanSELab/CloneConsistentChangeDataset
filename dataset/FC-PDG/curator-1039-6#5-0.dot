digraph {
9 [style = filled, label = "CloseableExecutorService service = new CloseableExecutorService(executorService)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testListeningRunnable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(startLatch.await(3,TimeUnit.SECONDS))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "++i@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Future<?> future = service.submit((Callable<Void>)null)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i < QTY@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Future<?> future = service.submit(new Callable<Void>(){@Override public Void call(){try {startLatch.countDown()Thread.currentThread().join()}catch (InterruptedException e) return null}})@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "future.cancel(true)@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "future.cancel(true)@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Future<?> future = service.submit(new Runnable(){@Override public void run(){try {startLatch.countDown()Thread.currentThread().join()}catch (InterruptedException e) }})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<Future<?>> futures = Lists.newArrayList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(startLatch.await(3,TimeUnit.SECONDS))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testListeningCallable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(service.size(),0)@@@27@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final CountDownLatch startLatch = new CountDownLatch(QTY)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testListeningCallable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "assertEquals(service.size(),0)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "futures.add(future)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final CountDownLatch startLatch = new CountDownLatch(QTY)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "futures.add(future)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5->3 [style = bold, label=""];
14->16 [style = bold, label=""];
11->20 [style = bold, label=""];
18->8 [style = solid, label="future"];
3->7 [style = dotted, label="true"];
9->11 [style = bold, label=""];
7->18 [style = dashed, label="0"];
5->3 [style = solid, label="i"];
0->6 [style = bold, label=""];
2->3 [style = bold, label=""];
3->14 [style = bold, label=""];
16->17 [style = bold, label=""];
3->12 [style = bold, label=""];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
4->0 [style = bold, label=""];
1->11 [style = bold, label=""];
20->5 [style = bold, label=""];
3->18 [style = bold, label=""];
12->13 [style = bold, label=""];
11->5 [style = bold, label=""];
8->2 [style = bold, label=""];
3->7 [style = bold, label=""];
19->9 [style = bold, label=""];
15->9 [style = bold, label=""];
3->12 [style = dotted, label="true"];
3->18 [style = dotted, label="true"];
7->12 [style = dashed, label="0"];
7->8 [style = solid, label="future"];
10->9 [style = bold, label=""];
18->8 [style = bold, label=""];
9->1 [style = bold, label=""];
3->8 [style = dotted, label="true"];
12->13 [style = solid, label="future"];
3->13 [style = dotted, label="true"];
3->2 [style = dotted, label="true"];
13->2 [style = bold, label=""];
}
