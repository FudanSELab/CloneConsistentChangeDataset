digraph {
2 [style = filled, label = "XIntervalDataItem item2 = (XIntervalDataItem)item1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.0,4.0,1.0,3.0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "XIntervalDataItem item2 = CloneUtils.clone(item1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.3)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "OHLCItem item2 = new OHLCItem(new Year(2006),2.0,4.0,1.0,3.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertTrue(item1.equals(item2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertTrue(item1.equals(item2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.0,1.0,3.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(item1.equals(item2))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertTrue(item1.equals(item2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.0,1.0,3.0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "OHLCItem item1 = new OHLCItem(new Year(2006),2.0,4.0,1.0,3.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.3)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertFalse(item1.equals(item2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.0,4.0,1.0,3.0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(item1.equals(item2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(item1.equals(item2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertTrue(item1 != item2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(item2.equals(item1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertFalse(item1.equals(item2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFalse(item1.equals(item2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "XIntervalDataItem item1 = new XIntervalDataItem(1.0,2.0,3.0,4.0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.4,1.0,3.0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertFalse(item1.equals(item2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertFalse(item1.equals(item2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(item1.getClass() == item2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.4,1.0,3.0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
17->10 [style = bold, label=""];
6->3 [style = bold, label=""];
7->5 [style = solid, label="item2"];
11->23 [style = solid, label="item2"];
10->20 [style = bold, label=""];
7->0 [style = solid, label="item2"];
18->8 [style = solid, label="item2"];
17->10 [style = solid, label="item2"];
20->0 [style = bold, label=""];
25->9 [style = bold, label=""];
12->15 [style = bold, label=""];
3->5 [style = solid, label="item1"];
1->3 [style = bold, label=""];
22->26 [style = solid, label="item2"];
18->30 [style = bold, label=""];
22->24 [style = solid, label="item2"];
9->17 [style = bold, label=""];
31->18 [style = bold, label=""];
24->29 [style = bold, label=""];
2->7 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
26->11 [style = bold, label=""];
9->20 [style = solid, label="item1"];
4->0 [style = bold, label=""];
8->22 [style = bold, label=""];
29->26 [style = bold, label=""];
18->30 [style = solid, label="item2"];
17->31 [style = solid, label="item2"];
3->7 [style = solid, label="item1"];
7->5 [style = bold, label=""];
11->15 [style = solid, label="item2"];
27->19 [style = solid, label="item2"];
30->28 [style = bold, label=""];
3->2 [style = bold, label=""];
3->7 [style = bold, label=""];
21->13 [style = bold, label=""];
3->9 [style = dashed, label="0"];
28->8 [style = bold, label=""];
5->4 [style = bold, label=""];
27->13 [style = solid, label="item2"];
23->12 [style = bold, label=""];
27->19 [style = bold, label=""];
22->24 [style = bold, label=""];
14->16 [style = solid, label="item2"];
2->0 [style = solid, label="item2"];
15->27 [style = bold, label=""];
2->5 [style = solid, label="item2"];
11->23 [style = bold, label=""];
13->14 [style = bold, label=""];
0->31 [style = bold, label=""];
2->5 [style = bold, label=""];
19->21 [style = bold, label=""];
}
