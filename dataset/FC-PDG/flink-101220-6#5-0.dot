digraph {
15 [style = filled, label = "testParameterizableAggregator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "DataSet<Tuple2<Long,Long>> edges = env.fromCollection(edgesInput)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final String UPDATED_ELEMENTS = \"updated.elements.aggr\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "List<Tuple2<Long,Long>> result = iteration.closeWith(updatedComponentId).collect()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "IterativeDataSet<Tuple2<Long,Long>> iteration = initialSolutionSet.iterate(MAX_ITERATIONS)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "IterativeDataSet<Tuple2<Long,Long>> iteration = initialSolutionSet.iterate(maxIterations)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "List<Tuple2<Long,Long>> result = iteration.closeWith(updatedComponentId,updatedComponentId).collect()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testParameterizableAggregator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithNewComponents = iteration.join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).groupBy(0).min(1)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(5,aggr_values(2()@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(4,aggrValues(1()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final long componentId = 1l@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration).where(0).equalTo(0).flatMap(new MinimumIdFilterCounting(aggregatorName))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(3,aggrValues(0()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
37 [style = filled, label = "iteration.registerAggregationConvergenceCriterion(UPDATED_ELEMENTS,new LongSumAggregator(),new UpdatedElementsConvergenceCriterion(convergence_threshold))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "final String aggregatorName = \"elements.in.component.aggregator\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "assertEquals(5,aggrValues(2()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(4,aggr_values(1()@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration).where(0).equalTo(0).flatMap(new MinimumIdFilterCounting(AGGREGATOR_NAME))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "final long convergence_threshold = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "iteration.registerAggregator(aggregatorName,new LongSumAggregatorWithParameter(componentId))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "long(( aggr_values = MinimumIdFilterCounting.aggr_value@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "final String AGGREGATOR_NAME = \"elements.in.component.aggregator\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "final ExecutionEnvironment env = ExecutionEnvironment.getExecutionEnvironment()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "iteration.registerAggregator(AGGREGATOR_NAME,new LongSumAggregatorWithParameter(componentId))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "DataSet<Tuple2<Long,Long>> verticesWithNewComponents = iteration.getWorkset().join(edges).where(0).equalTo(0).with(new NeighborWithComponentIDJoin()).groupBy(0).min(1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(6,aggrValues(3()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "DeltaIteration<Tuple2<Long,Long>,Tuple2<Long,Long>> iteration = initialSolutionSet.iterateDelta(initialSolutionSet,10,0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<Tuple2<Long,Long>> expectedResult = Arrays.asList(new Tuple2<>(1L,1L),new Tuple2<>(2L,1L),new Tuple2<>(3L,1L),new Tuple2<>(4L,1L),new Tuple2<>(5L,1L),new Tuple2<>(6L,1L),new Tuple2<>(7L,7L),new Tuple2<>(8L,7L),new Tuple2<>(9L,7L))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<Tuple2<Long,Long>> expectedResult = Arrays.asList(new Tuple2<>(1L,1L),new Tuple2<>(2L,1L),new Tuple2<>(3L,1L),new Tuple2<>(4L,1L),new Tuple2<>(5L,1L),new Tuple2<>(6L,1L),new Tuple2<>(7L,7L),new Tuple2<>(8L,7L),new Tuple2<>(9L,7L))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(6,aggr_values(3()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "Collections.sort(result,new TestBaseUtils.TupleComparator<Tuple2<Long,Long>>())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "testDeltaConnectedComponentsWithParametrizableConvergence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(expectedResult,result)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final long componentId = 1L@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "DataSet<Tuple2<Long,Long>> initialSolutionSet = env.fromCollection(verticesInput)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final int maxIterations = 5@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(expectedResult,result)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(3,aggr_values(0()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "long(( aggrValues = MinimumIdFilterCounting.aggr_value@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "DataSet<Tuple2<Long,Long>> updatedComponentId = verticesWithNewComponents.join(iteration.getSolutionSet()).where(0).equalTo(0).flatMap(new MinimumIdFilter(UPDATED_ELEMENTS))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final int MAX_ITERATIONS = 5@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
12->38 [style = dashed, label="0"];
16->37 [style = bold, label=""];
41->37 [style = solid, label="convergence_threshold"];
21->22 [style = solid, label="aggrValues"];
5->24 [style = dashed, label="0"];
8->17 [style = solid, label="componentId"];
38->41 [style = bold, label=""];
36->33 [style = bold, label=""];
3->4 [style = bold, label=""];
11->0 [style = solid, label="result"];
23->28 [style = bold, label=""];
19->1 [style = bold, label=""];
38->33 [style = solid, label="UPDATED_ELEMENTS"];
32->29 [style = solid, label="aggregatorName"];
27->7 [style = bold, label=""];
28->31 [style = solid, label="maxIterations"];
39->38 [style = bold, label=""];
21->20 [style = solid, label="aggrValues"];
19->14 [style = solid, label="aggr_values"];
8->30 [style = dashed, label="0"];
1->25 [style = dashed, label="0"];
7->29 [style = bold, label=""];
17->27 [style = dashed, label="0"];
10->11 [style = bold, label=""];
2->16 [style = bold, label=""];
37->36 [style = bold, label=""];
9->2 [style = bold, label=""];
0->19 [style = bold, label=""];
6->20 [style = dashed, label="0"];
14->22 [style = dashed, label="0"];
0->21 [style = bold, label=""];
4->26 [style = dashed, label="0"];
21->25 [style = bold, label=""];
10->29 [style = dashed, label="0"];
4->0 [style = bold, label=""];
13->32 [style = dashed, label="0"];
25->24 [style = bold, label=""];
19->1 [style = solid, label="aggr_values"];
26->0 [style = bold, label=""];
38->37 [style = solid, label="UPDATED_ELEMENTS"];
21->24 [style = solid, label="aggrValues"];
31->27 [style = bold, label=""];
22->20 [style = bold, label=""];
9->16 [style = solid, label="initialSolutionSet"];
18->16 [style = dashed, label="0"];
35->34 [style = solid, label="result"];
15->12 [style = bold, label=""];
35->34 [style = bold, label=""];
18->31 [style = dashed, label="0"];
14->6 [style = bold, label=""];
29->11 [style = bold, label=""];
16->18 [style = bold, label=""];
21->25 [style = solid, label="aggrValues"];
26->0 [style = solid, label="expectedResult"];
3->26 [style = bold, label=""];
30->9 [style = bold, label=""];
40->9 [style = bold, label=""];
32->30 [style = bold, label=""];
28->32 [style = bold, label=""];
19->6 [style = solid, label="aggr_values"];
12->13 [style = bold, label=""];
11->3 [style = solid, label="result"];
41->40 [style = bold, label=""];
11->3 [style = bold, label=""];
16->31 [style = bold, label=""];
35->3 [style = solid, label="result"];
4->0 [style = solid, label="expectedResult"];
33->35 [style = bold, label=""];
13->10 [style = solid, label="AGGREGATOR_NAME"];
7->10 [style = bold, label=""];
18->17 [style = bold, label=""];
10->33 [style = dashed, label="0"];
13->17 [style = solid, label="AGGREGATOR_NAME"];
5->14 [style = bold, label=""];
24->22 [style = bold, label=""];
32->27 [style = solid, label="aggregatorName"];
17->7 [style = bold, label=""];
19->21 [style = dashed, label="0"];
34->3 [style = bold, label=""];
12->28 [style = dashed, label="0"];
8->9 [style = bold, label=""];
12->18 [style = solid, label="MAX_ITERATIONS"];
19->5 [style = solid, label="aggr_values"];
17->37 [style = dashed, label="0"];
13->8 [style = bold, label=""];
7->36 [style = dashed, label="0"];
30->27 [style = solid, label="componentId"];
11->35 [style = dashed, label="0"];
}
