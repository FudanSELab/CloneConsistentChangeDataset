digraph {
20 [style = filled, label = "env.enableCheckpointing(500)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "createTestTopic(topic,parallelism,1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "FailingIdentityMapper.failedBefore = false@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "tryExecute(env,\"One-to-one exactly once test\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "runOneToOneExactlyOnceTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final String topic = \"oneToOneTopic\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final int parallelism = 5@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DataGenerators.generateRandomizedIntegerSequence(StreamExecutionEnvironment.getExecutionEnvironment(),kafkaServer,topic,numPartitions,numElementsPerPartition,true)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int failAfterElements = numElementsPerPartition / 3@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "createTestTopic(topic,numPartitions,1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final String topic = \"manyToOneTopic\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "env.setBufferTimeout(0)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "DeserializationSchema<Integer> schema = new TypeInformationSerializationSchema<>(BasicTypeInfo.INT_TYPE_INFO,new ExecutionConfig())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "FailingIdentityMapper.failedBefore = false@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final int numElementsPerPartition = 1000@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tryExecute(env,\"multi-source-one-partitions exactly once test\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "runMultipleSourcesOnePartitionExactlyOnceTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "FlinkKafkaConsumerBase<Integer> kafkaSource = kafkaServer.getConsumer(topic,schema,props)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Properties props = new Properties()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final int parallelism = 8@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "deleteTestTopic(topic)@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "DataGenerators.generateRandomizedIntegerSequence(StreamExecutionEnvironment.getExecutionEnvironment(),kafkaServer,topic,parallelism,numElementsPerPartition,true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "runOneToOneExactlyOnceTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int totalElements = parallelism * numElementsPerPartition@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final int totalElements = numPartitions * numElementsPerPartition@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "props.putAll(secureProps)@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "deleteTestTopic(topic)@@@22@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(1,0))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "env.setParallelism(parallelism)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "getStream(env,topic,schema,props).map(new PartitionValidatingMapper(parallelism,1)).map(new FailingIdentityMapper<Integer>(failAfterElements)).addSink(new ValidatingExactlyOnceSink(totalElements)).setParallelism(1)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "env.addSource(kafkaSource).map(new PartitionValidatingMapper(numPartitions,1)).map(new FailingIdentityMapper<Integer>(failAfterElements)).addSink(new ValidatingExactlyOnceSink(totalElements)).setParallelism(1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "DeserializationSchema<Integer> schema = new TypeInformationSerializationSchema<>(BasicTypeInfo.INT_TYPE_INFO,new ExecutionConfig())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "props.putAll(standardProps)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final int numPartitions = 5@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
27->18 [style = bold, label=""];
0->16 [style = bold, label=""];
2->20 [style = bold, label=""];
16->18 [style = bold, label=""];
14->25 [style = bold, label=""];
34->9 [style = bold, label=""];
31->30 [style = solid, label="topic"];
3->28 [style = dashed, label="0"];
17->1 [style = bold, label=""];
31->32 [style = bold, label=""];
25->30 [style = bold, label=""];
1->31 [style = dashed, label="0"];
29->31 [style = bold, label=""];
3->14 [style = bold, label=""];
30->27 [style = bold, label=""];
31->33 [style = solid, label="topic"];
32->27 [style = solid, label="numPartitions"];
11->26 [style = dashed, label="0"];
19->11 [style = bold, label=""];
16->4 [style = solid, label="schema"];
18->2 [style = bold, label=""];
31->7 [style = solid, label="topic"];
4->21 [style = dashed, label="0"];
1->13 [style = bold, label=""];
32->6 [style = bold, label=""];
6->14 [style = solid, label="numElementsPerPartition"];
4->7 [style = bold, label=""];
11->15 [style = bold, label=""];
28->14 [style = bold, label=""];
32->28 [style = solid, label="numPartitions"];
32->30 [style = solid, label="numPartitions"];
1->8 [style = solid, label="topic"];
6->28 [style = solid, label="numElementsPerPartition"];
13->32 [style = dashed, label="0"];
8->0 [style = bold, label=""];
5->21 [style = bold, label=""];
11->26 [style = bold, label=""];
18->7 [style = solid, label="schema"];
7->24 [style = bold, label=""];
12->10 [style = bold, label=""];
10->34 [style = bold, label=""];
13->8 [style = solid, label="parallelism"];
1->11 [style = solid, label="topic"];
18->11 [style = solid, label="env"];
6->27 [style = solid, label="numElementsPerPartition"];
7->24 [style = dashed, label="0"];
24->11 [style = bold, label=""];
23->19 [style = bold, label=""];
1->0 [style = solid, label="topic"];
5->4 [style = bold, label=""];
18->19 [style = solid, label="env"];
20->12 [style = bold, label=""];
2->26 [style = solid, label="env"];
6->0 [style = solid, label="numElementsPerPartition"];
9->5 [style = bold, label=""];
31->27 [style = solid, label="topic"];
8->25 [style = dashed, label="0"];
10->4 [style = solid, label="props"];
14->8 [style = bold, label=""];
10->9 [style = bold, label=""];
13->3 [style = solid, label="parallelism"];
22->1 [style = bold, label=""];
9->7 [style = solid, label="props"];
13->6 [style = bold, label=""];
1->4 [style = solid, label="topic"];
13->20 [style = solid, label="parallelism"];
26->33 [style = bold, label=""];
7->19 [style = bold, label=""];
6->3 [style = solid, label="numElementsPerPartition"];
13->0 [style = solid, label="parallelism"];
6->28 [style = bold, label=""];
1->15 [style = solid, label="topic"];
21->23 [style = bold, label=""];
25->12 [style = solid, label="parallelism"];
}
