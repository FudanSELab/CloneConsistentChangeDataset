digraph {
4 [style = filled, label = "latch.addListener(new LeaderLatchListener(){@Override public void isLeader(){if (!beenLeader) {masterCounter.incrementAndGet()beenLeader = truetry {latch.reset()}catch (Exception e) }{masterCounter.incrementAndGet()CloseableUtils.closeQuietly(latch)timesSquare.countDown()}}@Override public void notLeader(){notLeaderCounter.incrementAndGet()}},exec)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i < PARTICIPANT_QTY@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final CountDownLatch timesSquare = new CountDownLatch(PARTICIPANT_QTY)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final AtomicLong notLeaderCounter = new AtomicLong(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final LeaderLatch latch = new LeaderLatch(client,PATH_NAME)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "{for (LeaderLatch latch : latches){if (latch.getState() != LeaderLatch.State.CLOSED) {CloseableUtils.closeQuietly(latch)}}TestCleanState.closeAndTestClean(client)}@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "timesSquare.await()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final LeaderLatch latch = new LeaderLatch(client,PATH_NAME,\"\",closeMode)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(latch.getState(),LeaderLatch.State.CLOSED)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "latch.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "timesSquare.await()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ExecutorService exec = Executors.newSingleThreadExecutor(new ThreadFactoryBuilder().setDaemon(true).setNameFormat(\"callbackNotifyLeader-%s\").build())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final int PARTICIPANT_QTY = 10@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(masterCounter.get(),PARTICIPANT_QTY * 2)@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "latch.addListener(new LeaderLatchListener(){@Override public void isLeader(){if (!beenLeader) {masterCounter.incrementAndGet()beenLeader = truetry {latch.reset()}catch (Exception e) }{masterCounter.incrementAndGet()CloseableUtils.closeQuietly(latch)timesSquare.countDown()}}@Override public void notLeader(){notLeaderCounter.incrementAndGet()}},exec)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ExecutorService exec = Executors.newSingleThreadExecutor(new ThreadFactoryBuilder().setDaemon(true).setNameFormat(\"callbackSanity-%s\").build())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(notLeaderCounter.get(),PARTICIPANT_QTY * 2 - SILENT_QTY)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final int SILENT_QTY = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testCallbackSanity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "{for (LeaderLatch latch : latches){if (latch.getState() != LeaderLatch.State.CLOSED) {CloseableUtils.closeQuietly(latch)}}CloseableUtils.closeQuietly(client)}@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "List<LeaderLatch> latches = Lists.newArrayList()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "latch.start()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(latch.getState(),LeaderLatch.State.CLOSED)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "LeaderLatch.CloseMode closeMode = i < SILENT_QTY? LeaderLatch.CloseMode.SILENT: LeaderLatch.CloseMode.NOTIFY_LEADER@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testCallbackSanity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.newClient(server.getConnectString(),timing.session(),timing.connection(),new RetryOneTime(1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "latches.add(latch)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "latches.add(latch)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "++i@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final AtomicLong masterCounter = new AtomicLong(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testCallbackNotifyLeader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "client.start()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Timing timing = new Timing()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client.start()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->33 [style = solid, label="i"];
19->33 [style = bold, label=""];
19->10 [style = dotted, label="true"];
15->21 [style = solid, label="latches"];
19->18 [style = bold, label=""];
27->32 [style = bold, label=""];
19->25 [style = dotted, label="true"];
28->15 [style = bold, label=""];
8->15 [style = bold, label=""];
11->14 [style = bold, label=""];
12->21 [style = bold, label=""];
18->20 [style = solid, label="latch"];
30->32 [style = solid, label="latch"];
0->17 [style = bold, label=""];
10->19 [style = bold, label=""];
30->29 [style = solid, label="latch"];
2->3 [style = bold, label=""];
17->9 [style = bold, label=""];
7->32 [style = solid, label="client"];
19->20 [style = dotted, label="true"];
19->18 [style = dotted, label="true"];
14->1 [style = solid, label="PARTICIPANT_QTY"];
16->26 [style = bold, label=""];
19->33 [style = dotted, label="true"];
29->25 [style = bold, label=""];
7->30 [style = solid, label="client"];
14->19 [style = solid, label="PARTICIPANT_QTY"];
28->29 [style = solid, label="exec"];
24->13 [style = bold, label=""];
31->1 [style = bold, label=""];
14->26 [style = solid, label="PARTICIPANT_QTY"];
8->28 [style = dashed, label="0"];
18->4 [style = solid, label="latch"];
7->8 [style = bold, label=""];
19->30 [style = dotted, label="true"];
18->21 [style = solid, label="latch"];
30->25 [style = solid, label="latch"];
13->16 [style = bold, label=""];
14->1 [style = bold, label=""];
15->5 [style = bold, label=""];
19->0 [style = bold, label=""];
30->29 [style = bold, label=""];
20->10 [style = bold, label=""];
6->2 [style = bold, label=""];
16->26 [style = dashed, label="0"];
5->19 [style = bold, label=""];
26->27 [style = bold, label=""];
23->24 [style = bold, label=""];
1->6 [style = bold, label=""];
14->16 [style = solid, label="PARTICIPANT_QTY"];
14->13 [style = solid, label="PARTICIPANT_QTY"];
31->26 [style = solid, label="SILENT_QTY"];
18->4 [style = bold, label=""];
7->28 [style = bold, label=""];
3->7 [style = bold, label=""];
19->29 [style = dotted, label="true"];
19->4 [style = dotted, label="true"];
15->32 [style = solid, label="latches"];
19->23 [style = bold, label=""];
31->33 [style = solid, label="SILENT_QTY"];
14->31 [style = bold, label=""];
4->20 [style = bold, label=""];
33->30 [style = solid, label="closeMode"];
33->30 [style = bold, label=""];
5->19 [style = solid, label="i"];
9->13 [style = bold, label=""];
25->10 [style = bold, label=""];
8->4 [style = solid, label="exec"];
34->14 [style = bold, label=""];
22->14 [style = bold, label=""];
7->18 [style = solid, label="client"];
16->12 [style = bold, label=""];
7->21 [style = solid, label="client"];
}
