digraph {
21 [style = filled, label = "Observable<String> w = Observable.unsafeCreate(f)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "f.t.join()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "verify(subscriber,times(1)).onError(any())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "TestFlowable f = new TestFlowable(\"one\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Flowable<String> w = Flowable.unsafeCreate(f)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "functionThrowsError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "verify(subscriber,times(1)).onNext(\"one\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Flowable<String> flowable = w.onErrorReturn(new Function<Throwable,String>(){@Override public String apply(Throwable e){capturedException.set(e)throw new RuntimeException(\"exception from function\")}})@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Observable<String> observable = w.onErrorReturn(new Function<Throwable,String>(){@Override public String apply(Throwable e){capturedException.set(e)throw new RuntimeException(\"exception from function\")}})@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "verify(observer,times(1)).onNext(\"one\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "TestObservable f = new TestObservable(\"one\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "fail(e.getMessage())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InterruptedException e@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "flowable.subscribe(subscriber)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final AtomicReference<Throwable> capturedException = new AtomicReference<Throwable>()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(observer,times(1)).onError(any())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "observable.subscribe(observer)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "verify(observer,times(0)).onComplete()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "functionThrowsError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotNull(capturedException.get())@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final AtomicReference<Throwable> capturedException = new AtomicReference<>()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "verify(subscriber,times(0)).onComplete()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "functionThrowsError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->10 [style = bold, label=""];
23->16 [style = bold, label=""];
13->24 [style = bold, label=""];
2->1 [style = bold, label=""];
12->11 [style = bold, label=""];
5->24 [style = dashed, label="0"];
1->3 [style = bold, label=""];
22->21 [style = bold, label=""];
18->17 [style = bold, label=""];
20->3 [style = bold, label=""];
4->2 [style = bold, label=""];
11->17 [style = dashed, label="0"];
24->18 [style = bold, label=""];
13->15 [style = dashed, label="0"];
15->5 [style = bold, label=""];
14->7 [style = bold, label=""];
1->20 [style = dashed, label="0"];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
7->9 [style = solid, label="f"];
0->23 [style = bold, label=""];
5->12 [style = bold, label=""];
21->13 [style = bold, label=""];
0->4 [style = bold, label=""];
11->10 [style = bold, label=""];
9->15 [style = bold, label=""];
10->23 [style = bold, label=""];
9->21 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
10->4 [style = bold, label=""];
13->5 [style = bold, label=""];
12->18 [style = dashed, label="0"];
12->11 [style = solid, label="subscriber"];
8->0 [style = dotted, label="true"];
18->17 [style = solid, label="observer"];
6->7 [style = bold, label=""];
16->20 [style = bold, label=""];
4->23 [style = dashed, label="0"];
19->22 [style = bold, label=""];
7->22 [style = dashed, label="0"];
22->21 [style = solid, label="f"];
9->13 [style = bold, label=""];
}
