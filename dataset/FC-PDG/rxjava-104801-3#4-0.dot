digraph {
3 [style = filled, label = "timeoutSetuped.await()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldTimeoutIfSynchronizedObservableEmitFirstOnNextNotWithinTimeout['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final CountDownLatch exit = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final TestObserverEx<String> observer = new TestObserverEx<String>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "exit.countDown()@@@29@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldTimeoutIfSynchronizedObservableEmitFirstOnNextNotWithinTimeout['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldTimeoutIfSynchronizedFlowableEmitFirstOnNextNotWithinTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final TestSubscriberEx<String> subscriber = new TestSubscriberEx<String>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testScheduler.advanceTimeBy(2,TimeUnit.SECONDS)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "new Thread(new Runnable(){@Override public void run(){Flowable.unsafeCreate(new Publisher<String>(){@Override public void subscribe(Subscriber<? super String> subscriber){subscriber.onSubscribe(new BooleanSubscription())try {timeoutSetuped.countDown()exit.await()}catch (InterruptedException e) subscriber.onNext(\"a\")subscriber.onComplete()}}).timeout(1,TimeUnit.SECONDS,testScheduler).subscribe(subscriber)}}).start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriber.assertFailureAndMessage(,timeoutMessage(1,TimeUnit.SECONDS))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final CountDownLatch timeoutSetuped = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "observer.assertFailureAndMessage(,timeoutMessage(1,TimeUnit.SECONDS))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
6->0 [style = bold, label=""];
4->5 [style = bold, label=""];
4->11 [style = bold, label=""];
1->3 [style = bold, label=""];
7->1 [style = bold, label=""];
12->1 [style = bold, label=""];
0->12 [style = bold, label=""];
8->6 [style = bold, label=""];
10->6 [style = bold, label=""];
3->4 [style = bold, label=""];
5->11 [style = dashed, label="0"];
11->2 [style = bold, label=""];
7->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
9->6 [style = bold, label=""];
}
