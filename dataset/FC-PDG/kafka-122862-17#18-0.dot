digraph {
17 [style = filled, label = "final StateStore root@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final Sensor restoreSensor = StateStoreMetrics.restoreSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "initStoreSerde(context)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rangeSensor = StateStoreMetrics.rangeSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final ProcessorContext context@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "putAllSensor = StateStoreMetrics.putAllSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "final Sensor restoreSensor = StateStoreMetrics.restoreSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "e2eLatencySensor = StateStoreMetrics.e2ELatencySensor(taskId,metricsScope,name(),streamsMetrics)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "maybeMeasureLatency(null,time,restoreSensor)@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "taskId = context.taskId().toString()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "init['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "e2eLatencySensor = StateStoreMetrics.e2ELatencySensor(taskId,metricsScope,name(),streamsMetrics)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final ProcessorContext context@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "flushSensor = StateStoreMetrics.flushSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "maybeMeasureLatency(null,time,restoreSensor)@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "registerMetrics()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "this.context = context instanceof InternalProcessorContext? (InternalProcessorContext)context: null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "deleteSensor = StateStoreMetrics.deleteSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "flushSensor = StateStoreMetrics.flushSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "streamsMetrics = (StreamsMetricsImpl)context.metrics()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "fetchSensor = StateStoreMetrics.fetchSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final ProcessorContext context@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.context = context@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "putSensor = StateStoreMetrics.putSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "maybeMeasureLatency(null,time,restoreSensor)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "taskId = context.taskId().toString()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "allSensor = StateStoreMetrics.allSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "final Sensor restoreSensor = StateStoreMetrics.restoreSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "getSensor = StateStoreMetrics.getSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "init['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "init['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "putIfAbsentSensor = StateStoreMetrics.putIfAbsentSensor(threadId,taskId,metricsScope,name(),streamsMetrics)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13->16 [style = solid, label="taskId"];
0->30 [style = bold, label=""];
13->12 [style = solid, label="taskId"];
0->16 [style = bold, label=""];
27->1 [style = bold, label=""];
16->11 [style = bold, label=""];
10->15 [style = bold, label=""];
1->8 [style = bold, label=""];
13->22 [style = solid, label="taskId"];
24->0 [style = solid, label="taskId"];
15->14 [style = bold, label=""];
5->26 [style = solid, label="streamsMetrics"];
24->29 [style = solid, label="taskId"];
13->15 [style = solid, label="taskId"];
21->19 [style = bold, label=""];
3->1 [style = solid, label="context"];
24->0 [style = bold, label=""];
5->0 [style = solid, label="streamsMetrics"];
5->6 [style = solid, label="streamsMetrics"];
19->8 [style = solid, label="context"];
26->25 [style = bold, label=""];
1->19 [style = dashed, label="0"];
13->11 [style = solid, label="taskId"];
16->30 [style = dashed, label="0"];
24->25 [style = solid, label="taskId"];
21->17 [style = dotted, label="true"];
5->18 [style = bold, label=""];
23->19 [style = solid, label="context"];
5->9 [style = solid, label="streamsMetrics"];
5->12 [style = solid, label="streamsMetrics"];
12->6 [style = bold, label=""];
5->11 [style = solid, label="streamsMetrics"];
5->22 [style = solid, label="streamsMetrics"];
5->7 [style = solid, label="streamsMetrics"];
1->13 [style = bold, label=""];
30->29 [style = bold, label=""];
29->26 [style = bold, label=""];
25->31 [style = bold, label=""];
7->9 [style = bold, label=""];
27->28 [style = dotted, label="true"];
1->8 [style = solid, label="context"];
13->0 [style = solid, label="taskId"];
13->6 [style = solid, label="taskId"];
18->22 [style = bold, label=""];
4->3 [style = dotted, label="true"];
13->14 [style = solid, label="taskId"];
5->25 [style = solid, label="streamsMetrics"];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
5->16 [style = solid, label="streamsMetrics"];
5->29 [style = solid, label="streamsMetrics"];
24->30 [style = solid, label="taskId"];
19->13 [style = bold, label=""];
22->20 [style = bold, label=""];
5->15 [style = solid, label="streamsMetrics"];
28->1 [style = solid, label="context"];
14->2 [style = solid, label="restoreSensor"];
11->7 [style = bold, label=""];
6->10 [style = bold, label=""];
5->24 [style = bold, label=""];
21->23 [style = dotted, label="true"];
13->10 [style = solid, label="taskId"];
22->20 [style = solid, label="restoreSensor"];
13->7 [style = solid, label="taskId"];
25->31 [style = solid, label="restoreSensor"];
5->30 [style = solid, label="streamsMetrics"];
9->12 [style = bold, label=""];
14->2 [style = bold, label=""];
4->1 [style = bold, label=""];
13->8 [style = bold, label=""];
27->17 [style = dotted, label="true"];
24->26 [style = solid, label="taskId"];
4->17 [style = dotted, label="true"];
5->10 [style = solid, label="streamsMetrics"];
13->9 [style = solid, label="taskId"];
5->14 [style = solid, label="streamsMetrics"];
}
