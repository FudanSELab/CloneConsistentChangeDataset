digraph {
8 [style = filled, label = "QueryShardContext context = new QueryShardContext(0,new IndexSettings(IndexMetaData.builder(\"foo\").settings(indexSettings).build(),indexSettings),BigArrays.NON_RECYCLING_INSTANCE,null,null,null,null,null,xContentRegistry(),writableRegistry(),null,null,null,null,null,null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ft.setName(\"field\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ft.setIndexOptions(IndexOptions.DOCS)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String date = \"2015-10-12T14:10:55\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String date1 = \"2015-10-12T14:10:55\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(expected,ft.rangeQuery(\"now\",instant2,true,true,null,null,null,context))@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "expected = new DateRangeIncludingNowQuery(new IndexOrDocValuesQuery(LongPoint.newRangeQuery(\"field\",instant1,instant2),SortedNumericDocValuesField.newSlowRangeQuery(\"field\",instant1,instant2)))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expected,ft.termQuery(date,context))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "long instant2 = DateFormatters.from(DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(date2)).toInstant().toEpochMilli() + 999@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long instant1 = DateFormatters.from(DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(date1)).toInstant().toEpochMilli()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Query expected = new IndexOrDocValuesQuery(LongPoint.newRangeQuery(\"field\",instant,instant + 999),SortedNumericDocValuesField.newSlowRangeQuery(\"field\",instant,instant + 999))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MappedFieldType ft = createDefaultFieldType()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "long instant = DateFormatters.from(DateFieldMapper.DEFAULT_DATE_TIME_FORMATTER.parse(date)).toInstant().toEpochMilli()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testRangeQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Query expected = new IndexOrDocValuesQuery(LongPoint.newRangeQuery(\"field\",instant1,instant2),SortedNumericDocValuesField.newSlowRangeQuery(\"field\",instant1,instant2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "instant1 = nowInMillis@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "testTermQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,1).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expected,ft.rangeQuery(date1,date2,true,true,null,null,null,context).rewrite(new MultiReader()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"Cannot search on field (field( since it is not indexed.\",e.getMessage())@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testRangeQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "IllegalArgumentException e = expectThrows(,null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "ft.setIndexOptions(IndexOptions.NONE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "instant2 = instant1 + 100@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String date2 = \"2016-04-28T11:33:52\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->26 [style = dashed, label="0"];
26->21 [style = bold, label=""];
20->6 [style = bold, label=""];
21->22 [style = bold, label=""];
8->4 [style = bold, label=""];
24->23 [style = bold, label=""];
23->1 [style = bold, label=""];
0->7 [style = bold, label=""];
19->17 [style = solid, label="instant2"];
4->5 [style = bold, label=""];
12->7 [style = solid, label="instant1"];
15->19 [style = bold, label=""];
14->12 [style = bold, label=""];
11->1 [style = bold, label=""];
8->17 [style = solid, label="context"];
9->0 [style = bold, label=""];
2->10 [style = bold, label=""];
11->15 [style = bold, label=""];
7->11 [style = bold, label=""];
7->25 [style = dashed, label="0"];
6->8 [style = bold, label=""];
5->26 [style = bold, label=""];
5->13 [style = bold, label=""];
3->6 [style = bold, label=""];
0->24 [style = bold, label=""];
12->9 [style = bold, label=""];
18->17 [style = solid, label="expected"];
11->0 [style = dashed, label="0"];
26->0 [style = solid, label="date"];
6->8 [style = solid, label="indexSettings"];
22->25 [style = bold, label=""];
9->7 [style = solid, label="instant2"];
25->0 [style = solid, label="expected"];
16->6 [style = bold, label=""];
19->18 [style = solid, label="instant2"];
2->23 [style = dashed, label="0"];
7->11 [style = solid, label="expected"];
15->19 [style = solid, label="instant1"];
18->17 [style = bold, label=""];
8->0 [style = solid, label="context"];
25->0 [style = bold, label=""];
13->14 [style = bold, label=""];
21->25 [style = solid, label="instant"];
19->18 [style = bold, label=""];
1->2 [style = bold, label=""];
15->18 [style = solid, label="instant1"];
17->1 [style = bold, label=""];
}
