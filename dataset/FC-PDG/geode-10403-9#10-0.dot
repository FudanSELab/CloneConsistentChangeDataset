digraph {
7 [style = filled, label = "client1.invoke(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client1.invoke(null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client2.invoke(null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "List<VersionTag<?>> client1Versions = server1.invoke(null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "List<VersionTag<?>> client2Versions = server2.invoke(null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testRAVersionsOnClientsWithNotificationsOnly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertThat(client2RAVersions).contains(tag)@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(client1Versions).contains(tag)@@@44@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int serverPort2 = server2.invoke(null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "client2.invoke(null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "server2.invoke(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "client2.invoke(null)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testVersionsOnReplicasAfterPutAllAndRemoveAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(client1RAVersions.size()).isEqualTo(ONE_HUNDRED * 2)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<VersionTag<?>> client1RAVersions = client1.invoke(null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testRAVersionsOnClientsWithNotificationsOnly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int serverPort1 = server1.invoke(null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(client1Versions.size()).isEqualTo(ONE_HUNDRED * 2)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tag.setMemberID(null)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "int serverPort1 = server1.invoke(null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "client1.invoke(null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "List<VersionTag<?>> client2RAVersions = client2.invoke(null)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->19 [style = dashed, label="0"];
1->4 [style = bold, label=""];
0->13 [style = bold, label=""];
19->20 [style = bold, label=""];
2->3 [style = bold, label=""];
9->10 [style = bold, label=""];
13->11 [style = bold, label=""];
1->7 [style = bold, label=""];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
3->0 [style = bold, label=""];
20->21 [style = bold, label=""];
1->13 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
15->17 [style = bold, label=""];
21->20 [style = bold, label=""];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
6->15 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->6 [style = bold, label=""];
10->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
7->15 [style = bold, label=""];
12->3 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->9 [style = bold, label=""];
11->7 [style = bold, label=""];
3->16 [style = dashed, label="0"];
18->16 [style = bold, label=""];
}
