digraph {
38 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_FACTORY_CLASS_KEY,.getName())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "RepositoryCache.FileKey fileKey = RepositoryCache.FileKey.exact(new File(GIT_REMOTE_REPO_DIR),FS.DETECTED)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.gobblinServiceManager.start()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "flowProperties.put(\"param1\",\"value1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_JOB_STATUS_MONITOR_ENABLED_KEY,false)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "serviceCoreProperties.put(FsJobStatusRetriever.CONF_PREFIX + \".\" + ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY,JOB_STATUS_STATE_STORE_DIR)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "serviceCoreProperties.put(\"zookeeper.connect\",testingServer.getConnectString())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.gobblinServiceManager.stop()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.TOPOLOGYSPEC_STORE_DIR_KEY,TOPOLOGY_SPEC_STORE_DIR)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "this.flowConfigClient = new FlowConfigV2Client(String.format(\"http://127.0.0.1:%s/\",this.gobblinServiceManager.getRestLiServer().getListeningURI().getPort()))@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "this.gobblinServiceManager = new MockGobblinServiceManager(\"CoreService\",\"1\",ConfigUtils.propertiesToConfig(serviceCoreProperties),Optional.of(new Path(SERVICE_WORK_DIR)))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "fileKey.open(false).create(true)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "serviceReboot['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "serviceCoreProperties.put(FlowCatalog.FLOWSPEC_STORE_DIR_KEY,FLOW_SPEC_STORE_DIR)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "cleanUpDir(SERVICE_WORK_DIR)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.flowConfigClient = new FlowConfigV2Client(String.format(\"http://127.0.0.1:%s/\",this.gobblinServiceManager.getRestLiServer().getPort()))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".uri\",\"gobblinExecutor\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "this.flowConfigClient = new FlowConfigV2Client(String.format(\"http://127.0.0.1:%s/\",this.gobblinServiceManager.getRestLiServer().getPort()),transportClientProperties)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "this.gitForPush.commit().setMessage(\"First commit\").call()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "this.gobblinServiceManager.start()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "cleanUpDir(SPEC_STORE_PARENT_DIR)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "serviceCoreProperties.put(GitConfigMonitor.GIT_CONFIG_MONITOR_PREFIX + \".\" + ConfigurationKeys.GIT_MONITOR_REPO_DIR,GIT_LOCAL_REPO_DIR)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_DESTINATION_IDENTIFIER_KEY,TEST_SINK_NAME)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_FLOWCOMPILER_CLASS_KEY,.getCanonicalName())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "serviceCoreProperties.put(GitConfigMonitor.GIT_CONFIG_MONITOR_PREFIX + \".\" + ConfigurationKeys.GIT_MONITOR_REPO_URI,GIT_REMOTE_REPO_DIR)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "flowProperties.put(ServiceConfigKeys.FLOW_SOURCE_IDENTIFIER_KEY,TEST_SOURCE_NAME)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_USER_KEY,\"testUser\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.gitForPush = Git.cloneRepository().setURI(GIT_REMOTE_REPO_DIR).setDirectory(new File(GIT_CLONE_DIR)).call()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".description\",\"StandaloneTestExecutor\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "serviceReboot['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.gobblinServiceManager = new MockGobblinServiceManager(\"CoreService\",\"1\",ConfigUtils.propertiesToConfig(serviceCoreProperties),Optional.of(new Path(SERVICE_WORK_DIR)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".specExecutorInstance\",\"org.apache.gobblin.service.InMemorySpecExecutor\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "serviceCoreProperties.put(GitConfigMonitor.GIT_CONFIG_MONITOR_PREFIX + \".\" + ConfigurationKeys.GIT_MONITOR_POLLING_INTERVAL,5)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_TOPOLOGY_NAMES_KEY,TEST_GOBBLIN_EXECUTOR_NAME)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".specExecInstance.capabilities\",TEST_SOURCE_NAME + \":\" + TEST_SINK_NAME)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.TOPOLOGY_FACTORY_PREFIX + TEST_GOBBLIN_EXECUTOR_NAME + \".version\",FlowSpec.Builder.DEFAULT_VERSION)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testingServer = new TestingServer(true)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_PASSWORD_KEY,\"testPassword\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "this.gitForPush.push().setRemote(\"origin\").setRefSpecs(new RefSpec(\"master\")).call()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "serviceCoreProperties.put(ConfigurationKeys.STATE_STORE_DB_URL_KEY,testMetastoreDatabase.getJdbcUrl())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "ITestMetastoreDatabase testMetastoreDatabase = TestMetastoreDatabaseFactory.get()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "serviceCoreProperties.put(ServiceConfigKeys.GOBBLIN_SERVICE_GIT_CONFIG_MONITOR_ENABLED_KEY,true)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3->5 [style = dashed, label="0"];
24->28 [style = bold, label=""];
4->3 [style = bold, label=""];
31->37 [style = bold, label=""];
1->4 [style = bold, label=""];
16->13 [style = bold, label=""];
21->10 [style = bold, label=""];
42->41 [style = bold, label=""];
27->12 [style = bold, label=""];
35->42 [style = bold, label=""];
37->25 [style = bold, label=""];
30->26 [style = bold, label=""];
38->16 [style = bold, label=""];
40->19 [style = bold, label=""];
14->38 [style = bold, label=""];
18->36 [style = bold, label=""];
19->17 [style = bold, label=""];
11->35 [style = bold, label=""];
34->22 [style = bold, label=""];
7->14 [style = bold, label=""];
33->29 [style = bold, label=""];
22->8 [style = bold, label=""];
6->1 [style = bold, label=""];
5->2 [style = bold, label=""];
20->40 [style = bold, label=""];
41->30 [style = bold, label=""];
3->2 [style = bold, label=""];
36->7 [style = bold, label=""];
15->9 [style = bold, label=""];
28->23 [style = bold, label=""];
0->1 [style = bold, label=""];
12->18 [style = bold, label=""];
9->21 [style = bold, label=""];
25->15 [style = bold, label=""];
23->34 [style = bold, label=""];
32->39 [style = bold, label=""];
10->33 [style = bold, label=""];
13->31 [style = bold, label=""];
17->27 [style = bold, label=""];
39->20 [style = bold, label=""];
29->24 [style = bold, label=""];
8->11 [style = bold, label=""];
4->5 [style = bold, label=""];
}
