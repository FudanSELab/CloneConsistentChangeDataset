digraph {
1 [style = filled, label = "InternalMultiBucketAggregation.InternalBucket bucket = new InternalMultiBucketAggregation.InternalBucket(){@Override public void writeTo(StreamOutput out){}@Override public Object getKey(){return null}@Override public String getKeyAsString(){return null}@Override public long getDocCount(){return 0}@Override public Aggregations getAggregations(){return null}@Override public XContentBuilder toXContent(XContentBuilder builder,Params params){return null}@Override public Object getProperty(String containingAggName,List<String> path){return mock()}}@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testReturnsObjectArray['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"buckets_path must reference either a number value or a single value numeric \" + \"metric aggregation, but (foo( contains multiple values. Please specify which to use.\"))@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testReturnMultiValueObject['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(e.getMessage(),equalTo(\"buckets_path must reference either a number value or a single value numeric \" + \"metric aggregation, got: (Object((( at aggregation (foo(\"))@@@45@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "AggregationExecutionException e = expectThrows(,null)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testReturnsObjectArray['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MultiBucketsAggregation agg = new MultiBucketsAggregation(){@Override public List<? extends Bucket> getBuckets(){return null}@Override public String getName(){return \"foo\"}@Override public String getType(){return null}@Override public Map<String,Object> getMetaData(){return null}@Override public XContentBuilder toXContent(XContentBuilder builder,Params params){return null}}@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
3->6 [style = bold, label=""];
2->0 [style = bold, label=""];
7->0 [style = bold, label=""];
5->0 [style = bold, label=""];
4->6 [style = dashed, label="0"];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
}
