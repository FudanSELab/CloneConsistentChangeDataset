digraph {
3 [style = filled, label = "testGroupJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(\"((Fred, Bill, Eric, Janet, Cedric( work(s) in Marketing(\",s)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String s = Linq4j.asEnumerable(depts).groupJoin(Linq4j.asEnumerable(emps).concat(Linq4j.asEnumerable(badEmps)),DEPT_DEPTNO_SELECTOR,EMP_DEPTNO_SELECTOR,null,new EqualityComparer<Integer>(){public boolean equal(Integer v1,Integer v2){return true}public int hashCode(Integer integer){return 0}}).toList().toString()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testGroupJoinWithComparer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testGroupJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(\"((Fred, Eric, Janet( work(s) in Sales, \" + \"(( work(s) in HR, \" + \"(Bill( work(s) in Marketing(\",s)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0->1 [style = solid, label="s"];
2->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
0->1 [style = bold, label=""];
0->5 [style = solid, label="s"];
3->0 [style = bold, label=""];
4->0 [style = bold, label=""];
0->5 [style = bold, label=""];
}
