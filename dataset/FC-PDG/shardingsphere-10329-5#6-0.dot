digraph {
6 [style = filled, label = "final String ruleName@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final DatabaseDiscoveryRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final ReadwriteSplittingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final ReadwriteSplittingRuleConfiguration toBeAlteredRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final String ruleName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Preconditions.checkState(toBeRemovedDataSourceRuleConfig.isPresent())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "dropRuleConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "dropRule['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "currentRuleConfig.getDiscoveryTypes().remove(dataSourceRuleConfig.get().getDiscoveryTypeName())@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "currentRuleConfig.getLoadBalancers().remove(toBeRemovedDataSourceRuleConfig.get().getLoadBalancerName())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "currentRuleConfig.getDataSources().remove(dataSourceRuleConfig.get())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "currentRuleConfig.getDataSources().remove(toBeRemovedDataSourceRuleConfig.get())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Preconditions.checkState(dataSourceRuleConfig.isPresent())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "isDiscoveryTypeNotInUse(currentRuleConfig,dataSourceRuleConfig.get().getDiscoveryTypeName())@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "dropRule['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Optional<ReadwriteSplittingDataSourceRuleConfiguration> toBeRemovedDataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(null).findAny()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Optional<DatabaseDiscoveryDataSourceRuleConfiguration> dataSourceRuleConfig = currentRuleConfig.getDataSources().stream().filter(null).findAny()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->8 [style = dotted, label="true"];
7->4 [style = dotted, label="true"];
2->4 [style = bold, label=""];
2->7 [style = bold, label=""];
5->3 [style = dotted, label="true"];
4->16 [style = dashed, label="0"];
13->10 [style = dotted, label="true"];
14->12 [style = bold, label=""];
9->0 [style = bold, label=""];
11->16 [style = bold, label=""];
0->1 [style = bold, label=""];
9->6 [style = dotted, label="true"];
5->6 [style = dotted, label="true"];
13->12 [style = bold, label=""];
5->0 [style = bold, label=""];
7->4 [style = bold, label=""];
16->14 [style = bold, label=""];
1->12 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
12->11 [style = bold, label=""];
13->15 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
8->7 [style = solid, label="currentRuleConfig"];
1->2 [style = bold, label=""];
}
