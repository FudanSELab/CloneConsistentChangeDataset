digraph {
35 [style = filled, label = "assertEquals(3,changeEvent.changedKeys().size())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "testGetProperty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(PropertyChangeType.DELETED,anotherKeyChange.getChangeType())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(someValueNew,someKeyChange.getNewValue())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ConfigChangeListener someListener = new ConfigChangeListener(){@Override public void onChange(ConfigChangeEvent changeEvent){configChangeFuture.set(changeEvent)}}@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String newValue = \"newValue\"@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String newKey = \"newKey\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String anotherValue = \"anotherValue\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "config.onRepositoryChange(someNamespace,anotherProperties)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "SimpleConfig config = new SimpleConfig(someNamespace,configRepository)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Properties someProperties = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String anotherKey = \"anotherKey\"@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ArgumentCaptor<ConfigChangeEvent> captor = ArgumentCaptor.forClass()@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String someKey = \"someKey\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ConfigChangeEvent changeEvent = captor.getValue()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertEquals(someValue,config.getProperty(someKey,null))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(someValueNew,someKeyChange.getNewValue())@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testOnRepositoryChange['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(PropertyChangeType.ADDED,newKeyChange.getChangeType())@@@39@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "ConfigChange anotherKeyChange = changeEvent.getChange(anotherKey)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "ConfigChangeEvent changeEvent = configChangeFuture.get(500,TimeUnit.MILLISECONDS)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "config.addChangeListener(someListener)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(null,newKeyChange.getOldValue())@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "ConfigChangeListener someListener = mock()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testOnRepositoryChange['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(PropertyChangeType.MODIFIED,someKeyChange.getChangeType())@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SimpleConfig config = new SimpleConfig(someNamespace,configRepository)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "someProperties.putAll(ImmutableMap.of(someKey,someValue,anotherKey,anotherValue))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "anotherProperties.putAll(ImmutableMap.of(someKey,someValueNew,newKey,newValue))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String someValueNew = \"someValueNew\"@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ConfigChange someKeyChange = changeEvent.getChange(someKey)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(someNamespace,changeEvent.getNamespace())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "final SettableFuture<ConfigChangeEvent> configChangeFuture = SettableFuture.create()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "someProperties.setProperty(someKey,someValue)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(newValue,newKeyChange.getNewValue())@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "verify(someListener,times(1)).onChange(captor.capture())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(someValue,someKeyChange.getOldValue())@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SimpleConfig config = new SimpleConfig(someNamespace,configRepository)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "config.addChangeListener(someListener)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(null,anotherKeyChange.getNewValue())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(someValue,someKeyChange.getOldValue())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(PropertyChangeType.MODIFIED,someKeyChange.getChangeType())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "config.onRepositoryChange(someNamespace,anotherProperties)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ConfigChange newKeyChange = changeEvent.getChange(newKey)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "Properties anotherProperties = new Properties()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String someValue = \"someValue\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(anotherValue,anotherKeyChange.getOldValue())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46->44 [style = bold, label=""];
19->6 [style = solid, label="someValueNew"];
24->28 [style = bold, label=""];
26->45 [style = solid, label="someKey"];
27->45 [style = solid, label="someValue"];
15->13 [style = bold, label=""];
9->0 [style = bold, label=""];
17->1 [style = bold, label=""];
33->3 [style = bold, label=""];
10->43 [style = bold, label=""];
19->12 [style = bold, label=""];
28->20 [style = bold, label=""];
37->36 [style = bold, label=""];
0->19 [style = bold, label=""];
27->20 [style = solid, label="someValue"];
11->25 [style = bold, label=""];
17->7 [style = solid, label="anotherKey"];
39->34 [style = bold, label=""];
31->24 [style = bold, label=""];
9->30 [style = solid, label="newKey"];
26->33 [style = solid, label="someKey"];
29->9 [style = bold, label=""];
0->11 [style = solid, label="newValue"];
0->39 [style = solid, label="newValue"];
23->15 [style = bold, label=""];
43->42 [style = bold, label=""];
22->21 [style = bold, label=""];
35->33 [style = bold, label=""];
16->32 [style = bold, label=""];
42->31 [style = bold, label=""];
17->33 [style = solid, label="anotherKey"];
20->6 [style = bold, label=""];
19->8 [style = solid, label="someValueNew"];
27->46 [style = solid, label="someValue"];
18->2 [style = bold, label=""];
9->12 [style = solid, label="newKey"];
1->4 [style = solid, label="anotherValue"];
1->7 [style = bold, label=""];
29->18 [style = solid, label="anotherProperties"];
36->39 [style = bold, label=""];
14->33 [style = bold, label=""];
26->7 [style = solid, label="someKey"];
28->41 [style = bold, label=""];
1->7 [style = solid, label="anotherValue"];
26->12 [style = solid, label="someKey"];
6->14 [style = bold, label=""];
26->28 [style = solid, label="someKey"];
13->45 [style = dashed, label="0"];
26->27 [style = bold, label=""];
21->26 [style = bold, label=""];
1->3 [style = solid, label="anotherValue"];
12->10 [style = bold, label=""];
48->45 [style = bold, label=""];
27->46 [style = bold, label=""];
9->37 [style = solid, label="newKey"];
8->5 [style = bold, label=""];
21->10 [style = solid, label="someProperties"];
26->46 [style = solid, label="someKey"];
25->37 [style = bold, label=""];
10->23 [style = bold, label=""];
30->4 [style = bold, label=""];
44->48 [style = bold, label=""];
3->8 [style = bold, label=""];
0->12 [style = solid, label="newValue"];
23->13 [style = solid, label="someListener"];
29->28 [style = solid, label="anotherProperties"];
42->24 [style = solid, label="someListener"];
27->17 [style = bold, label=""];
27->7 [style = solid, label="someValue"];
19->12 [style = solid, label="someValueNew"];
41->38 [style = bold, label=""];
27->3 [style = solid, label="someValue"];
5->30 [style = bold, label=""];
47->21 [style = bold, label=""];
4->11 [style = bold, label=""];
38->35 [style = bold, label=""];
21->44 [style = solid, label="someProperties"];
17->30 [style = solid, label="anotherKey"];
32->31 [style = bold, label=""];
40->21 [style = bold, label=""];
13->18 [style = bold, label=""];
7->29 [style = bold, label=""];
2->16 [style = bold, label=""];
}
