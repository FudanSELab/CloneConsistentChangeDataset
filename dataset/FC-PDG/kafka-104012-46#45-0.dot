digraph {
21 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final String consumerId = \"leader\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final List<String> updatedSubscription = Arrays.asList(topic1,topic2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "coordinator.maybeUpdateSubscriptionMetadata()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "joinAsFollowerAndReceiveAssignment(coordinator,assigned)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "subscriptions.subscribe(new HashSet<>(Arrays.asList(topic1,otherTopic)),rebalanceListener)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "rebalanceListener.revoked = null@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final List<TopicPartition> assigned = Arrays.asList(t1p)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testRejoinGroup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "client.prepareResponse(syncGroupResponse(assigned,Errors.NONE))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "revokedCount += 1@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Map<String,List<String>> initialSubscription = singletonMap(consumerId,singletonList(topic1))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "client.prepareResponse(syncGroupResponse(oldAssigned,Errors.NONE))@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "int revokedCount = revoked.isEmpty()? 0: 1@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "testMetadataRefreshDuringRebalance['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String otherTopic = \"otherTopic\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFalse(revoked.isEmpty())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(3,rebalanceListener.assignedCount)@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(oldAssigned,newAssigned)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,newAssigned))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(getAdded(owned,oldAssigned),rebalanceListener.assigned)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "coordinator.joinGroupIfNeeded(time.timer(Long.MAX_VALUE))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))return true}},syncGroupResponse(newAssigned,Errors.NONE))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "revoked = getRevoked(newAssigned,oldAssigned)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Collection<TopicPartition> revoked = getRevoked(assigned,assigned)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Collection<TopicPartition> added = getAdded(newAssigned,oldAssigned)@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(singleton(topic1),subscriptions.subscription())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "final Map<String,List<String>> updatedSubscriptions = singletonMap(consumerId,Arrays.asList(topic1,topic2))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(getAdded(oldAssigned,newAssigned),rebalanceListener.assigned)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertEquals(revokedCount,rebalanceListener.revokedCount)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(toSet(oldAssigned),subscriptions.assignedPartitions())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "client.updateMetadata(TestUtils.metadataUpdateWith(1,singletonMap(topic1,1)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "coordinator.poll(time.timer(Long.MAX_VALUE))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "final List<TopicPartition> oldAssigned = Arrays.asList(t1p)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "partitionAssignor.prepare(singletonMap(consumerId,oldAssigned))@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testRejoinGroup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "client.prepareResponse(joinGroupLeaderResponse(1,consumerId,initialSubscription,Errors.NONE))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(1,rebalanceListener.assignedCount)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(toSet(newAssigned),subscriptions.assignedPartitions())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "List<TopicPartition> newAssigned = Arrays.asList(t1p,t2p)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertFalse(coordinator.rejoinNeededOrPending())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,consumerId,\"leader\",Errors.NONE))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "coordinator.ensureCoordinatorReady(time.timer(Long.MAX_VALUE))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertEquals(toSet(updatedSubscription),subscriptions.subscription())@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(0,rebalanceListener.lostCount)@@@89@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "subscriptions.subscribe(singleton(topic1),rebalanceListener)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(getAdded(owned,assigned),rebalanceListener.assigned)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "subscriptions.subscribe(Pattern.compile(\".*\"),rebalanceListener)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final List<TopicPartition> owned = Collections.emptyList()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(2,rebalanceListener.assignedCount)@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertNull(rebalanceListener.revoked)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(revoked.isEmpty()? null: revoked,rebalanceListener.revoked)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "rebalanceListener.assigned = null@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "client.prepareResponse(null,joinGroupLeaderResponse(2,consumerId,updatedSubscriptions,Errors.NONE))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "joinAsFollowerAndReceiveAssignment(\"consumer\",coordinator,assigned)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@23@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(added,rebalanceListener.assigned)@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(revoked.isEmpty()? 0: 1,rebalanceListener.revokedCount)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "client.prepareResponse(null,syncGroupResponse(oldAssigned,Errors.NONE))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "client.prepareResponse(joinGroupFollowerResponse(2,\"consumer\",\"leader\",Errors.NONE))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Collection<TopicPartition> added = getAdded(assigned,assigned)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,rebalanceListener.revokedCount)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "client.prepareResponse(groupCoordinatorResponse(node,Errors.NONE))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "client.prepareResponse(new MockClient.RequestMatcher(){@Override public boolean matches(AbstractRequest body){JoinGroupRequest join = (JoinGroupRequest)bodyIterator<JoinGroupRequestData.JoinGroupRequestProtocol> protocolIterator = join.data().protocols().iterator()assertTrue(protocolIterator.hasNext())JoinGroupRequestData.JoinGroupRequestProtocol protocolMetadata = protocolIterator.next()ByteBuffer metadata = ByteBuffer.wrap(protocolMetadata.metadata())ConsumerPartitionAssignor.Subscription subscription = ConsumerProtocol.deserializeSubscription(metadata)metadata.rewind()return subscription.topics().contains(topic1)}},joinGroupLeaderResponse(3,consumerId,initialSubscription,Errors.NONE))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61->66 [style = bold, label=""];
48->65 [style = solid, label="added"];
70->29 [style = bold, label=""];
34->37 [style = solid, label="consumerId"];
76->68 [style = bold, label=""];
19->6 [style = solid, label="owned"];
28->50 [style = bold, label=""];
56->45 [style = solid, label="revoked"];
50->56 [style = bold, label=""];
57->59 [style = bold, label=""];
9->7 [style = bold, label=""];
56->47 [style = bold, label=""];
41->28 [style = bold, label=""];
34->46 [style = solid, label="consumerId"];
27->73 [style = bold, label=""];
33->66 [style = solid, label="revokedCount"];
9->67 [style = dashed, label="0"];
58->31 [style = solid, label="oldAssigned"];
57->54 [style = solid, label="initialSubscription"];
58->63 [style = solid, label="oldAssigned"];
15->20 [style = bold, label=""];
0->6 [style = solid, label="assigned"];
7->16 [style = bold, label=""];
24->17 [style = bold, label=""];
33->48 [style = bold, label=""];
74->30 [style = bold, label=""];
51->39 [style = bold, label=""];
1->10 [style = solid, label="assigned"];
58->75 [style = solid, label="oldAssigned"];
16->14 [style = bold, label=""];
34->72 [style = solid, label="consumerId"];
62->40 [style = bold, label=""];
53->75 [style = bold, label=""];
14->11 [style = bold, label=""];
52->26 [style = solid, label="updatedSubscription"];
25->57 [style = bold, label=""];
27->28 [style = solid, label="newAssigned"];
18->15 [style = solid, label="otherTopic"];
34->19 [style = bold, label=""];
73->37 [style = bold, label=""];
27->69 [style = solid, label="newAssigned"];
60->64 [style = bold, label=""];
18->19 [style = bold, label=""];
58->61 [style = solid, label="oldAssigned"];
55->76 [style = bold, label=""];
6->71 [style = dashed, label="0"];
5->1 [style = bold, label=""];
46->63 [style = bold, label=""];
22->18 [style = bold, label=""];
47->49 [style = solid, label="revokedCount"];
27->37 [style = solid, label="newAssigned"];
3->2 [style = bold, label=""];
8->21 [style = solid, label="revoked"];
1->17 [style = solid, label="assigned"];
0->58 [style = dashed, label="0"];
2->21 [style = bold, label=""];
19->71 [style = solid, label="owned"];
20->41 [style = dashed, label="0"];
66->51 [style = bold, label=""];
47->44 [style = bold, label=""];
29->38 [style = bold, label=""];
58->67 [style = bold, label=""];
34->73 [style = solid, label="consumerId"];
58->72 [style = solid, label="oldAssigned"];
35->34 [style = bold, label=""];
38->33 [style = bold, label=""];
1->8 [style = solid, label="assigned"];
0->7 [style = solid, label="assigned"];
13->18 [style = bold, label=""];
52->54 [style = bold, label=""];
21->4 [style = bold, label=""];
27->48 [style = solid, label="newAssigned"];
58->56 [style = solid, label="oldAssigned"];
4->10 [style = bold, label=""];
49->45 [style = bold, label=""];
73->41 [style = solid, label="updatedSubscriptions"];
27->75 [style = solid, label="newAssigned"];
46->64 [style = solid, label="subscription"];
29->51 [style = solid, label="revoked"];
67->77 [style = bold, label=""];
7->23 [style = dashed, label="0"];
68->25 [style = bold, label=""];
37->41 [style = bold, label=""];
8->3 [style = bold, label=""];
63->70 [style = bold, label=""];
27->56 [style = solid, label="newAssigned"];
45->53 [style = bold, label=""];
57->46 [style = solid, label="initialSubscription"];
1->3 [style = solid, label="assigned"];
19->0 [style = bold, label=""];
30->71 [style = bold, label=""];
18->34 [style = dashed, label="0"];
31->42 [style = bold, label=""];
6->5 [style = bold, label=""];
17->12 [style = bold, label=""];
34->57 [style = solid, label="consumerId"];
40->36 [style = bold, label=""];
12->8 [style = bold, label=""];
58->29 [style = solid, label="oldAssigned"];
27->29 [style = solid, label="newAssigned"];
3->10 [style = solid, label="added"];
77->55 [style = bold, label=""];
75->72 [style = bold, label=""];
64->61 [style = bold, label=""];
58->71 [style = solid, label="oldAssigned"];
58->59 [style = solid, label="oldAssigned"];
26->69 [style = bold, label=""];
69->49 [style = bold, label=""];
0->23 [style = solid, label="assigned"];
34->54 [style = solid, label="consumerId"];
0->9 [style = bold, label=""];
23->16 [style = bold, label=""];
20->17 [style = bold, label=""];
43->62 [style = bold, label=""];
42->43 [style = bold, label=""];
34->41 [style = solid, label="consumerId"];
72->46 [style = bold, label=""];
1->15 [style = bold, label=""];
11->6 [style = bold, label=""];
59->52 [style = bold, label=""];
58->48 [style = solid, label="oldAssigned"];
48->60 [style = bold, label=""];
58->40 [style = solid, label="oldAssigned"];
39->65 [style = bold, label=""];
9->23 [style = bold, label=""];
19->58 [style = bold, label=""];
36->74 [style = bold, label=""];
54->31 [style = bold, label=""];
44->26 [style = bold, label=""];
20->24 [style = dashed, label="0"];
15->24 [style = bold, label=""];
71->27 [style = bold, label=""];
34->59 [style = solid, label="consumerId"];
65->32 [style = bold, label=""];
}
