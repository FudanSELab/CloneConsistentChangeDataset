digraph {
15 [style = filled, label = "assertEquals(\"local length\",data.length - 1,local.length)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "System.arraycopy(dCentral,0,data2,4 + aLocal.length,dCentral.length)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"central length\",data2.length,central.length)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "System.arraycopy(data,0,data2,0,4 + aLocal.length + 2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i < local.length@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d.parseFromLocalFileData(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d3e023,0,4)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(\"local byte \" + i,data(i(,local(i()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testMerge['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 0@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "System.arraycopy(dummyCentral,0,data2,4 + aLocal.length + 4,dummyCentral.length)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "byte(( data2 = new byte((((@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "byte(( b = UNRECOGNIZED_HEADER.getBytes()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "byte(( central = ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d3e099)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "byte(( dummyCentral = dummy.getCentralDirectoryData()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "int i = 0@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "System.arraycopy(data,0,data2,0,4 + aLocal.length + 2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "byte(( data2 = new byte((((@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testMergeWithUnparseableData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "System.arraycopy(dummy.getCentralDirectoryLength().getBytes(),0,data2,4 + aLocal.length + 2,2)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(\"local byte \" + i,data(i(,local(i()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"central byte \" + i,data2(i(,central(i()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"local length\",data.length,local.length)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testMergeWithUnparseableData['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "i < local.length@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "i++@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ZipExtraField d = new UnparseableExtraFieldData()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "byte(( central = ExtraFieldUtils.mergeCentralDirectoryData(new ZipExtraField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d3e143)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "byte(( local = ExtraFieldUtils.mergeLocalFileDataData(new ZipExtraField((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@d3e0d0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "byte(( dCentral = d.getCentralDirectoryData()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "i < central.length@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(\"central byte \" + i,data2(i(,central(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < central.length@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28->21 [style = bold, label=""];
16->11 [style = solid, label="i"];
3->11 [style = solid, label="i"];
21->3 [style = bold, label=""];
5->13 [style = solid, label="local"];
1->18 [style = bold, label=""];
31->18 [style = bold, label=""];
19->0 [style = bold, label=""];
33->32 [style = bold, label=""];
28->34 [style = dotted, label="true"];
1->31 [style = solid, label="i"];
2->17 [style = bold, label=""];
4->17 [style = solid, label="central"];
26->25 [style = bold, label=""];
0->20 [style = bold, label=""];
28->34 [style = bold, label=""];
18->30 [style = dashed, label="0"];
22->28 [style = bold, label=""];
16->13 [style = solid, label="i"];
15->16 [style = bold, label=""];
6->21 [style = dashed, label="0"];
30->31 [style = solid, label="i"];
17->18 [style = dashed, label="0"];
13->34 [style = dashed, label="0"];
25->34 [style = solid, label="local"];
5->28 [style = bold, label=""];
23->29 [style = bold, label=""];
14->5 [style = bold, label=""];
30->1 [style = solid, label="i"];
1->18 [style = solid, label="i"];
18->2 [style = solid, label="i"];
18->10 [style = solid, label="i"];
5->22 [style = solid, label="i"];
22->28 [style = solid, label="i"];
11->6 [style = bold, label=""];
4->1 [style = bold, label=""];
30->31 [style = bold, label=""];
2->31 [style = dashed, label="0"];
7->3 [style = dashed, label="0"];
7->12 [style = bold, label=""];
11->13 [style = bold, label=""];
10->2 [style = solid, label="i"];
22->34 [style = solid, label="i"];
34->22 [style = bold, label=""];
0->14 [style = bold, label=""];
25->27 [style = bold, label=""];
23->18 [style = solid, label="central"];
5->34 [style = solid, label="i"];
7->8 [style = solid, label="data2"];
11->28 [style = dashed, label="0"];
3->33 [style = bold, label=""];
11->3 [style = dotted, label="true"];
1->31 [style = bold, label=""];
6->8 [style = solid, label="dCentral"];
7->17 [style = solid, label="data2"];
9->0 [style = bold, label=""];
5->28 [style = solid, label="i"];
0->4 [style = solid, label="d"];
3->33 [style = solid, label="data2"];
0->5 [style = solid, label="d"];
3->24 [style = solid, label="data2"];
8->32 [style = dashed, label="0"];
13->3 [style = bold, label=""];
18->1 [style = bold, label=""];
31->18 [style = dotted, label="true"];
16->5 [style = dashed, label="0"];
11->13 [style = dotted, label="true"];
16->11 [style = bold, label=""];
12->8 [style = bold, label=""];
20->14 [style = solid, label="b"];
15->27 [style = dashed, label="0"];
29->30 [style = bold, label=""];
2->17 [style = dotted, label="true"];
3->11 [style = bold, label=""];
10->2 [style = bold, label=""];
18->2 [style = bold, label=""];
8->4 [style = bold, label=""];
24->23 [style = bold, label=""];
3->18 [style = solid, label="data2"];
16->3 [style = solid, label="i"];
2->10 [style = dotted, label="true"];
31->1 [style = dotted, label="true"];
3->32 [style = solid, label="data2"];
30->18 [style = solid, label="i"];
27->5 [style = bold, label=""];
3->13 [style = solid, label="i"];
18->17 [style = solid, label="i"];
21->24 [style = solid, label="dummyCentral"];
10->17 [style = solid, label="i"];
6->7 [style = bold, label=""];
20->14 [style = bold, label=""];
7->12 [style = solid, label="data2"];
28->22 [style = dotted, label="true"];
17->10 [style = bold, label=""];
5->15 [style = bold, label=""];
32->24 [style = bold, label=""];
}
