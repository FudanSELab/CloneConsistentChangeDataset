digraph {
14 [style = filled, label = "StringBuilder builder = new StringBuilder()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ByteString.Output rawOutput = ByteString.newOutput()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "output.writeRawVarint32(bytes.length)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(tag,input.readTag())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "CodedInputStream input = CodedInputStream.newInstance(new ByteArrayInputStream(rawOutput.toByteString().toByteArray()))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String text = input.readString()@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(lorem,text)@@@22@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < 4096@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testReadString['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "byte(( rawInput = rawOutput.toByteString().toByteArray()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "String text = input.readString()@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "builder.append(lorem)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "output.flush()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "output.writeRawBytes(bytes)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "byte(( bytes = lorem.getBytes(\"UTF-8\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testReadStringRequireUtf8['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "CodedInputStream input = inputType.newDecoder(rawInput)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i += lorem.length()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testReadString['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "int i = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "output.writeRawVarint32(tag)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "lorem = builder.toString().substring(0,4096)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "String text = input.readStringRequireUtf8()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CodedOutputStream output = CodedOutputStream.newInstance(rawOutput,bytes.length)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int tag = WireFormat.makeTag(1,WireFormat.WIRETYPE_LENGTH_DELIMITED)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(inputType.name(),tag,input.readTag())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(inputType.name(),lorem,text)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "String lorem = \"Lorem ipsum dolor sit amet \"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
16->15 [style = bold, label=""];
8->0 [style = solid, label="i"];
0->13 [style = dotted, label="true"];
0->13 [style = bold, label=""];
17->1 [style = bold, label=""];
7->6 [style = solid, label="bytes"];
1->10 [style = solid, label="tag"];
7->12 [style = bold, label=""];
0->2 [style = bold, label=""];
12->17 [style = bold, label=""];
2->23 [style = solid, label="lorem"];
9->27 [style = dashed, label="0"];
15->21 [style = dashed, label="0"];
21->24 [style = bold, label=""];
18->13 [style = solid, label="lorem"];
9->19 [style = solid, label="text"];
11->18 [style = bold, label=""];
3->0 [style = bold, label=""];
20->23 [style = solid, label="text"];
3->0 [style = solid, label="i"];
8->0 [style = bold, label=""];
25->20 [style = bold, label=""];
23->24 [style = bold, label=""];
22->18 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
13->3 [style = bold, label=""];
20->23 [style = bold, label=""];
19->23 [style = dashed, label="0"];
6->16 [style = bold, label=""];
16->21 [style = bold, label=""];
24->25 [style = bold, label=""];
4->27 [style = bold, label=""];
12->17 [style = solid, label="rawOutput"];
15->4 [style = bold, label=""];
9->19 [style = bold, label=""];
14->8 [style = bold, label=""];
27->19 [style = bold, label=""];
0->3 [style = dotted, label="true"];
1->25 [style = solid, label="tag"];
2->7 [style = bold, label=""];
2->19 [style = solid, label="lorem"];
21->24 [style = solid, label="rawInput"];
1->10 [style = bold, label=""];
18->14 [style = bold, label=""];
27->19 [style = solid, label="text"];
1->4 [style = solid, label="tag"];
26->18 [style = bold, label=""];
}
