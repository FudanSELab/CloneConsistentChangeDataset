digraph {
15 [style = filled, label = "b1.setItemCount(99)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(b1,b2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DialBackground b1 = new DialBackground()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SimpleHistogramBin b2 = (SimpleHistogramBin)b1.clone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(b1.equals(b2))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(b1.equals(b2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "b2 = (DialBackground)TestUtils.serialised(b1)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "b2 = TestUtils.serialised(b1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(b1,b2)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "b2.setItemCount(111)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SimpleHistogramBin b1 = new SimpleHistogramBin(1.1,2.2,false,true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DialBackground b2 = TestUtils.serialised(b1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "DialBackground b2 = (DialBackground)TestUtils.serialised(b1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "b1 = new DialBackground()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(b1 != b2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "b1.setPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.green))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
0->6 [style = solid, label="b2"];
20->13 [style = bold, label=""];
11->4 [style = solid, label="b2"];
19->12 [style = bold, label=""];
0->6 [style = bold, label=""];
2->1 [style = bold, label=""];
7->4 [style = solid, label="b2"];
8->4 [style = solid, label="b1"];
11->4 [style = bold, label=""];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
8->7 [style = solid, label="b1"];
7->11 [style = dashed, label="0"];
18->20 [style = solid, label="b1"];
14->19 [style = bold, label=""];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
16->12 [style = solid, label="b2"];
15->16 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
8->11 [style = solid, label="b1"];
9->6 [style = bold, label=""];
6->12 [style = dashed, label="0"];
3->9 [style = bold, label=""];
9->6 [style = solid, label="b2"];
10->8 [style = bold, label=""];
17->18 [style = bold, label=""];
16->20 [style = solid, label="b2"];
2->0 [style = solid, label="b1"];
8->18 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
16->20 [style = bold, label=""];
8->11 [style = bold, label=""];
2->6 [style = solid, label="b1"];
13->14 [style = bold, label=""];
2->9 [style = solid, label="b1"];
16->14 [style = solid, label="b2"];
}
