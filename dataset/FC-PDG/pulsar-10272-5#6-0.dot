digraph {
2 [style = filled, label = "encoded.hasMemoryAddress()@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "return uncompressed@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return uncompressed@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int uncompressedLength@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "decompressor.decompress(encodedNio,encodedNio.position(),uncompressedNio,uncompressedNio.position(),uncompressedNio.remaining())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ZSTD_RAW_DECOMPRESSOR.get().decompress(null,encoded.memoryAddress() + encoded.readerIndex(),encoded.memoryAddress() + encoded.writerIndex(),null,uncompressed.memoryAddress() + uncompressed.writerIndex(),uncompressed.memoryAddress() + uncompressed.writerIndex() + uncompressedLength)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Zstd.decompress(uncompressedNio,encodedNio)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "decode['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "decode['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ZSTD_DECOMPRESSOR.get().decompress(encodedNio,uncompressedNio)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.directBuffer(uncompressedLength,uncompressedLength)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ByteBuf encoded@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int uncompressedLength@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "ByteBuf uncompressed = PulsarByteBufAllocator.DEFAULT.buffer(uncompressedLength,uncompressedLength)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Zstd.decompressUnsafe(uncompressed.memoryAddress(),uncompressedLength,encoded.memoryAddress() + encoded.readerIndex(),encoded.readableBytes())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "ByteBuffer uncompressedNio = uncompressed.nioBuffer(0,uncompressedLength)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "uncompressed.writerIndex(uncompressedLength)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "ByteBuf encoded@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ByteBuffer encodedNio = encoded.nioBuffer(encoded.readerIndex(),encoded.readableBytes())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "encoded.hasMemoryAddress() && uncompressed.hasMemoryAddress()@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "decode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->3 [style = dotted, label="true"];
9->20 [style = dashed, label="0"];
0->9 [style = solid, label="uncompressedNio"];
11->16 [style = bold, label=""];
14->4 [style = solid, label="uncompressedLength"];
7->3 [style = solid, label="uncompressedLength"];
7->6 [style = solid, label="uncompressedLength"];
11->12 [style = dotted, label="false"];
2->3 [style = bold, label=""];
9->4 [style = bold, label=""];
23->21 [style = dotted, label="true"];
6->17 [style = dashed, label="0"];
13->7 [style = dotted, label="true"];
18->20 [style = solid, label="encodedNio"];
2->0 [style = dotted, label="false"];
2->10 [style = dotted, label="false"];
23->7 [style = dotted, label="true"];
10->9 [style = solid, label="encodedNio"];
17->22 [style = bold, label=""];
7->0 [style = solid, label="uncompressedLength"];
3->4 [style = bold, label=""];
22->20 [style = solid, label="uncompressedNio"];
10->12 [style = solid, label="encodedNio"];
19->0 [style = bold, label=""];
2->9 [style = dotted, label="false"];
6->2 [style = bold, label=""];
1->7 [style = dotted, label="true"];
7->4 [style = solid, label="uncompressedLength"];
14->16 [style = solid, label="uncompressedLength"];
18->20 [style = bold, label=""];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
11->0 [style = bold, label=""];
22->18 [style = bold, label=""];
15->11 [style = bold, label=""];
12->4 [style = bold, label=""];
6->15 [style = dashed, label="0"];
11->0 [style = dotted, label="false"];
10->12 [style = bold, label=""];
6->8 [style = solid, label="uncompressed"];
0->12 [style = solid, label="uncompressedNio"];
14->0 [style = solid, label="uncompressedLength"];
21->22 [style = solid, label="uncompressedLength"];
11->16 [style = dotted, label="true"];
17->0 [style = solid, label="uncompressed"];
21->19 [style = solid, label="uncompressedLength"];
4->8 [style = bold, label=""];
23->17 [style = bold, label=""];
10->9 [style = bold, label=""];
2->11 [style = dashed, label="0"];
13->15 [style = bold, label=""];
9->12 [style = dashed, label="0"];
16->4 [style = bold, label=""];
14->15 [style = solid, label="uncompressedLength"];
15->8 [style = solid, label="uncompressed"];
20->19 [style = bold, label=""];
11->10 [style = dotted, label="false"];
13->14 [style = dotted, label="true"];
1->5 [style = dotted, label="true"];
3->16 [style = dashed, label="0"];
21->17 [style = solid, label="uncompressedLength"];
}
