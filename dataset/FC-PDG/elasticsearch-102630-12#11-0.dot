digraph {
11 [style = filled, label = "final PlainActionFuture<Boolean> future = PlainActionFuture.newFuture()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testRestoreShard['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "closeShard(source,false)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "target.refresh(\"test\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "IndexShardTestCase.updateRoutingEntry(target,routing.moveToStarted())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "target.markAsRecovering(\"store\",new RecoveryState(routing,localNode,null))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(2L))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "flushShard(source)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
39 [style = filled, label = "flushShard(source)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "final IndexShard source = newStartedShard(true,Settings.EMPTY)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "assertThat(target.getLocalCheckpoint(),equalTo(2L))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertDocs(target,\"1\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final PlainActionFuture<Boolean> future = PlainActionFuture.newFuture()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(target.seqNoStats().getMaxSeqNo(),equalTo(2L))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final Snapshot snapshot = new Snapshot(\"foo\",new SnapshotId(\"bar\",UUIDs.randomBase64UUID()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "closeShards(target)@@@48@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "IndexShard target = newStartedShard(true)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(target.seqNoStats().getGlobalCheckpoint(),equalTo(0L))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertThat(IndexShardTestCase.getEngine(target),instanceOf())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "EngineTestCase.generateNewSeqNo(source.getEngine())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertDocs(target,\"0\",\"2\")@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(future.actionGet())@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "randomBoolean()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(target.getReplicationTracker().getTrackedLocalCheckpointForShard(target.routingEntry().allocationId().getId()).getLocalCheckpoint(),equalTo(2L))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testRestoreShard['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Store sourceStore = source.store()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState,ActionListener<Void> listener){ActionListener.completeWith(listener,null)}},future)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState,ActionListener<Void> listener){ActionListener.completeWith(listener,null)}},future)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "source.refresh(\"test\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "randomBoolean()@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "routing = ShardRoutingHelper.newWithRestoreSource(routing,new RecoverySource.SnapshotRecoverySource(UUIDs.randomBase64UUID(),snapshot,Version.CURRENT,\"test\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "IndexShard target = newStartedShard(true,targetSettings,new FollowingEngineFactory())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
49 [style = filled, label = "assertTrue(future.actionGet())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "indexDoc(source,\"_doc\",\"0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "indexDoc(target,\"_doc\",\"1\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "closeShards(target)@@@49@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Store targetStore = target.store()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testRestoreShard['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "final IndexShard source = newStartedShard(true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "closeShard(source,false)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "target.restoreFromRepository(new RestoreOnlyRepository(\"test\"){@Override public void restoreShard(Store store,SnapshotId snapshotId,IndexId indexId,ShardId snapshotShardId,RecoveryState recoveryState,ActionListener<Void> listener){ActionListener.completeWith(listener,null)}},future)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final IndexShard source = newStartedShard(true,sourceSettings)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Settings targetSettings = Settings.builder().put(CcrSettings.CCR_FOLLOWING_INDEX_SETTING.getKey(),true).build()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "DiscoveryNode localNode = new DiscoveryNode(\"foo\",buildNewFakeTransportAddress(),emptyMap(),emptySet(),Version.CURRENT)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "closeShards(target)@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final Settings sourceSettings = Settings.builder().put(IndexSettings.INDEX_SOFT_DELETES_SETTING.getKey(),true).build()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "indexDoc(source,\"_doc\",\"2\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "ShardRouting routing = ShardRoutingHelper.initWithSameId(target.routingEntry(),RecoverySource.ExistingStoreRecoverySource.INSTANCE)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "target = reinitShard(target,routing)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
3->24 [style = bold, label=""];
20->26 [style = bold, label=""];
24->17 [style = dotted, label="true"];
43->42 [style = bold, label=""];
29->43 [style = dashed, label="0"];
11->9 [style = bold, label=""];
36->33 [style = bold, label=""];
43->24 [style = solid, label="target"];
27->15 [style = bold, label=""];
33->31 [style = solid, label="source"];
4->8 [style = solid, label="routing"];
16->2 [style = solid, label="target"];
1->28 [style = bold, label=""];
8->5 [style = solid, label="routing"];
18->22 [style = bold, label=""];
29->22 [style = solid, label="source"];
12->21 [style = solid, label="localNode"];
24->17 [style = bold, label=""];
25->19 [style = bold, label=""];
5->11 [style = solid, label="routing"];
33->2 [style = solid, label="source"];
30->8 [style = bold, label=""];
33->3 [style = solid, label="source"];
42->46 [style = bold, label=""];
34->19 [style = bold, label=""];
10->14 [style = bold, label=""];
11->9 [style = solid, label="future"];
12->21 [style = bold, label=""];
40->51 [style = bold, label=""];
51->4 [style = solid, label="snapshot"];
38->48 [style = solid, label="source"];
31->4 [style = bold, label=""];
48->44 [style = bold, label=""];
35->5 [style = solid, label="target"];
13->16 [style = bold, label=""];
22->7 [style = bold, label=""];
5->23 [style = solid, label="target"];
29->3 [style = solid, label="source"];
38->39 [style = solid, label="source"];
30->5 [style = solid, label="routing"];
45->14 [style = bold, label=""];
5->27 [style = solid, label="target"];
28->24 [style = dotted, label="true"];
5->6 [style = bold, label=""];
21->11 [style = bold, label=""];
16->6 [style = solid, label="target"];
1->46 [style = dashed, label="0"];
28->24 [style = bold, label=""];
41->38 [style = bold, label=""];
17->52 [style = bold, label=""];
47->3 [style = bold, label=""];
51->4 [style = bold, label=""];
3->1 [style = bold, label=""];
2->3 [style = bold, label=""];
30->15 [style = solid, label="target"];
12->21 [style = solid, label="future"];
6->18 [style = solid, label="target"];
5->22 [style = solid, label="target"];
0->12 [style = bold, label=""];
28->31 [style = bold, label=""];
32->35 [style = solid, label="targetSettings"];
21->11 [style = solid, label="localNode"];
19->10 [style = bold, label=""];
30->45 [style = solid, label="target"];
4->0 [style = solid, label="routing"];
10->53 [style = dashed, label="0"];
43->30 [style = solid, label="target"];
33->18 [style = solid, label="source"];
53->37 [style = bold, label=""];
13->16 [style = solid, label="targetSettings"];
19->45 [style = bold, label=""];
30->44 [style = solid, label="target"];
24->31 [style = bold, label=""];
4->30 [style = solid, label="routing"];
39->40 [style = bold, label=""];
15->48 [style = bold, label=""];
9->25 [style = solid, label="future"];
33->32 [style = bold, label=""];
21->49 [style = bold, label=""];
6->15 [style = solid, label="target"];
6->7 [style = solid, label="target"];
14->27 [style = bold, label=""];
23->18 [style = bold, label=""];
17->4 [style = bold, label=""];
38->43 [style = bold, label=""];
30->8 [style = solid, label="snapshot"];
8->21 [style = solid, label="routing"];
3->50 [style = bold, label=""];
50->24 [style = bold, label=""];
15->23 [style = bold, label=""];
52->39 [style = bold, label=""];
35->16 [style = bold, label=""];
3->50 [style = dotted, label="true"];
35->16 [style = solid, label="target"];
6->0 [style = solid, label="localNode"];
26->29 [style = bold, label=""];
26->29 [style = solid, label="sourceSettings"];
9->34 [style = bold, label=""];
43->52 [style = solid, label="target"];
38->47 [style = solid, label="source"];
38->42 [style = solid, label="source"];
6->0 [style = bold, label=""];
16->2 [style = bold, label=""];
46->47 [style = bold, label=""];
49->53 [style = bold, label=""];
29->4 [style = solid, label="source"];
24->4 [style = bold, label=""];
4->30 [style = bold, label=""];
8->5 [style = bold, label=""];
9->25 [style = bold, label=""];
33->1 [style = solid, label="source"];
40->4 [style = solid, label="routing"];
29->1 [style = solid, label="source"];
29->28 [style = solid, label="source"];
37->19 [style = bold, label=""];
5->6 [style = solid, label="routing"];
8->5 [style = solid, label="snapshot"];
23->14 [style = dashed, label="0"];
29->13 [style = bold, label=""];
}
