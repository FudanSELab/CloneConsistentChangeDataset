digraph {
6 [style = filled, label = "inOrder.verify(subscriber,times(numRetries + 1)).onNext(\"beginningEveryTime\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "origin.retry().subscribe(new TestSubscriber<>(subscriber))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "inOrder.verify(subscriber,times(1)).onComplete()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"onSuccessOnly\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "inOrder.verifyNoMoreInteractions()@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "retryIndefinitely['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int numRetries = 20@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "retryIndefinitely['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "retryIndefinitely['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "inOrder.verify(subscriber,never()).onError(any())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "origin.retry().subscribe(new TestObserver<String>(observer))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Observable<String> origin = Observable.unsafeCreate(new FuncWithErrors(numRetries))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"onSuccessOnly\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "inOrder.verify(observer,times(1)).onComplete()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "inOrder.verify(observer,times(numRetries + 1)).onNext(\"beginningEveryTime\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "inOrder.verify(observer,never()).onError(any())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "origin.retry().subscribe(new TestSubscriber<String>(subscriber))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Flowable<String> origin = Flowable.unsafeCreate(new FuncWithErrors(numRetries))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = dashed, label="0"];
6->3 [style = bold, label=""];
8->19 [style = dashed, label="0"];
17->5 [style = bold, label=""];
16->13 [style = bold, label=""];
0->10 [style = solid, label="subscriber"];
2->20 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
5->20 [style = bold, label=""];
17->16 [style = solid, label="observer"];
4->6 [style = bold, label=""];
0->12 [style = solid, label="subscriber"];
3->18 [style = dashed, label="0"];
10->12 [style = dashed, label="0"];
18->19 [style = bold, label=""];
7->0 [style = bold, label=""];
0->4 [style = solid, label="subscriber"];
2->10 [style = bold, label=""];
15->16 [style = bold, label=""];
0->17 [style = dashed, label="0"];
2->12 [style = bold, label=""];
14->1 [style = bold, label=""];
5->2 [style = solid, label="numRetries"];
5->2 [style = bold, label=""];
11->0 [style = bold, label=""];
9->14 [style = dashed, label="0"];
19->14 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->20 [style = solid, label="numRetries"];
12->4 [style = bold, label=""];
3->8 [style = bold, label=""];
8->9 [style = bold, label=""];
17->15 [style = solid, label="observer"];
10->4 [style = bold, label=""];
9->1 [style = bold, label=""];
20->15 [style = bold, label=""];
21->17 [style = bold, label=""];
13->18 [style = bold, label=""];
0->5 [style = bold, label=""];
}
