digraph {
83 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@60@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "List<ImmutableBitSet> groupSets1 = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@73@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
81 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(2(\"))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@63@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
90 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(1, 2, 4, 5(\"))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "IllegalArgumentException ignore@@@38@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "final Aggregate.Group x = Aggregate.Group.induce(groupSet,groupSets)@@@68@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
95 [style = filled, label = "final List<ImmutableBitSet> groupSets0 = ImmutableBitSet.ORDERING.sortedCopy(groupSet.powerSet())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "groupSets = new ArrayList<>()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "groupSets.add(ImmutableBitSet.of(5))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet0,groupSets),is(true))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
80 [style = filled, label = "final ImmutableBitSet groupSet0 = ImmutableBitSet.of(2)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@64@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets1))@@@74@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@50@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@79@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "groupSets.clear()@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets),is(true))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "{}@@@38@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "groupSets.clear()@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "assertThat(Aggregate.Group.isRollup(groupSet,groupSets0),is(false))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "groupSets.clear()@@@77@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "fail(\"expected error, got \" + x)@@@69@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
97 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets))@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "testInduceGroupingType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,5))@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "groupSets.add(groupSet0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
82 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "groupSets = new ArrayList<>()@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
66 [style = filled, label = "final List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "groupSets.clear()@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet,groupSets0))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(Aggregate.Group.CUBE,Aggregate.Group.induce(groupSet0,groupSets))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "groupSets.clear()@@@75@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "groupSets.add(groupSet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final ImmutableBitSet groupSet = ImmutableBitSet.of(1,2,4,5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "groupSets.clear()@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "groupSets.clear()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4,5))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(4, 5, 1, 2(\"))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "List<ImmutableBitSet> groupSets = new ArrayList<>()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "testInduceGroupingType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
92 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "groupSets.clear()@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
91 [style = filled, label = "groupSets.clear()@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "groupSets = ImmutableBitSet.ORDERING.sortedCopy(groupSets)@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "groupSets.clear()@@@61@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,4))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
74 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "testInduceGroupingType0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@66@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@14@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Aggregate.Group.OTHER,Aggregate.Group.induce(groupSet,groupSets))@@@76@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "groupSets = new ArrayList<>()@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "IllegalArgumentException ignore@@@71@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(Aggregate.Group.ROLLUP,Aggregate.Group.induce(groupSet,groupSets))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "{}@@@71@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1,2,4,5))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "groupSets.add(ImmutableBitSet.of(4,5))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "assertThat(Aggregate.Group.getRollup(groupSets).toString(),is(\"(5, 4, 2, 1(\"))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(Aggregate.Group.SIMPLE,Aggregate.Group.induce(groupSet,groupSets))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "groupSets.add(ImmutableBitSet.of())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "groupSets = new ArrayList<>()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "groupSets.add(ImmutableBitSet.of(1))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "groupSets.add(ImmutableBitSet.of(2,4,5))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40->4 [style = bold, label=""];
0->97 [style = solid, label="groupSet"];
55->72 [style = bold, label=""];
0->13 [style = solid, label="groupSet"];
65->47 [style = bold, label=""];
70->86 [style = bold, label=""];
21->66 [style = dashed, label="0"];
38->76 [style = bold, label=""];
76->90 [style = bold, label=""];
41->8 [style = bold, label=""];
66->40 [style = solid, label="groupSets"];
66->43 [style = solid, label="groupSets"];
9->10 [style = bold, label=""];
95->78 [style = bold, label=""];
0->27 [style = solid, label="groupSet"];
38->15 [style = bold, label=""];
86->60 [style = bold, label=""];
88->63 [style = bold, label=""];
0->44 [style = solid, label="groupSet"];
95->78 [style = solid, label="groupSets0"];
47->92 [style = bold, label=""];
95->58 [style = solid, label="groupSets0"];
27->73 [style = bold, label=""];
0->66 [style = bold, label=""];
63->93 [style = bold, label=""];
1->73 [style = dashed, label="0"];
84->65 [style = bold, label=""];
66->64 [style = solid, label="groupSets"];
66->38 [style = solid, label="groupSets"];
2->14 [style = bold, label=""];
85->68 [style = bold, label=""];
0->57 [style = solid, label="groupSet"];
14->76 [style = dashed, label="0"];
78->58 [style = bold, label=""];
46->50 [style = bold, label=""];
8->32 [style = solid, label="groupSets"];
14->11 [style = bold, label=""];
35->7 [style = bold, label=""];
0->2 [style = solid, label="groupSet"];
75->0 [style = bold, label=""];
80->94 [style = solid, label="groupSet0"];
1->38 [style = bold, label=""];
21->13 [style = bold, label=""];
90->51 [style = bold, label=""];
79->83 [style = bold, label=""];
57->54 [style = bold, label=""];
0->40 [style = solid, label="groupSet"];
8->28 [style = bold, label=""];
0->41 [style = solid, label="groupSet"];
93->96 [style = bold, label=""];
7->1 [style = bold, label=""];
66->13 [style = bold, label=""];
36->71 [style = bold, label=""];
10->31 [style = bold, label=""];
0->33 [style = solid, label="groupSet"];
22->26 [style = solid, label="groupSets"];
97->62 [style = bold, label=""];
60->64 [style = bold, label=""];
8->17 [style = solid, label="groupSets"];
68->82 [style = bold, label=""];
89->80 [style = bold, label=""];
66->84 [style = solid, label="groupSets"];
13->40 [style = bold, label=""];
0->21 [style = bold, label=""];
3->33 [style = bold, label=""];
16->17 [style = bold, label=""];
40->89 [style = bold, label=""];
74->87 [style = bold, label=""];
69->77 [style = bold, label=""];
0->26 [style = solid, label="groupSet"];
100->56 [style = bold, label=""];
21->40 [style = solid, label="groupSets"];
64->57 [style = solid, label="groupSets1"];
0->7 [style = solid, label="groupSet"];
61->48 [style = bold, label=""];
102->7 [style = solid, label="groupSet"];
30->19 [style = bold, label=""];
66->44 [style = solid, label="groupSets"];
23->6 [style = solid, label="groupSets"];
101->102 [style = bold, label=""];
86->60 [style = solid, label="x"];
22->69 [style = dashed, label="0"];
40->3 [style = bold, label=""];
54->44 [style = bold, label=""];
67->30 [style = bold, label=""];
71->32 [style = bold, label=""];
80->49 [style = solid, label="groupSet0"];
58->67 [style = bold, label=""];
39->25 [style = bold, label=""];
87->79 [style = bold, label=""];
96->46 [style = bold, label=""];
0->78 [style = solid, label="groupSet"];
98->85 [style = bold, label=""];
62->91 [style = bold, label=""];
64->57 [style = bold, label=""];
11->30 [style = bold, label=""];
41->98 [style = bold, label=""];
92->74 [style = bold, label=""];
4->9 [style = bold, label=""];
22->26 [style = bold, label=""];
23->20 [style = bold, label=""];
0->38 [style = solid, label="groupSet"];
0->99 [style = solid, label="groupSet"];
0->84 [style = solid, label="groupSet"];
45->55 [style = bold, label=""];
83->52 [style = bold, label=""];
0->58 [style = solid, label="groupSet"];
33->4 [style = bold, label=""];
48->64 [style = bold, label=""];
91->59 [style = bold, label=""];
66->83 [style = solid, label="groupSets"];
80->100 [style = bold, label=""];
0->76 [style = solid, label="groupSet"];
28->12 [style = bold, label=""];
32->16 [style = bold, label=""];
59->8 [style = bold, label=""];
1->41 [style = solid, label="groupSets"];
4->7 [style = solid, label="groupSets"];
25->17 [style = bold, label=""];
4->7 [style = bold, label=""];
42->0 [style = bold, label=""];
31->34 [style = bold, label=""];
102->21 [style = bold, label=""];
66->99 [style = solid, label="groupSets"];
44->69 [style = bold, label=""];
66->76 [style = solid, label="groupSets"];
0->83 [style = solid, label="groupSet"];
17->64 [style = dashed, label="0"];
77->99 [style = bold, label=""];
19->35 [style = bold, label=""];
81->95 [style = bold, label=""];
52->6 [style = bold, label=""];
94->81 [style = bold, label=""];
53->97 [style = bold, label=""];
37->2 [style = bold, label=""];
27->24 [style = bold, label=""];
43->88 [style = bold, label=""];
0->86 [style = solid, label="groupSet"];
4->2 [style = solid, label="groupSets"];
12->27 [style = bold, label=""];
0->29 [style = solid, label="groupSet"];
8->65 [style = dashed, label="0"];
66->27 [style = solid, label="groupSets"];
66->97 [style = solid, label="groupSets"];
66->49 [style = solid, label="groupSets"];
56->49 [style = bold, label=""];
72->70 [style = bold, label=""];
32->16 [style = solid, label="x"];
36->32 [style = bold, label=""];
20->6 [style = bold, label=""];
82->43 [style = bold, label=""];
0->32 [style = solid, label="groupSet"];
0->6 [style = solid, label="groupSet"];
0->102 [style = dashed, label="0"];
15->18 [style = bold, label=""];
102->40 [style = solid, label="groupSet"];
0->43 [style = solid, label="groupSet"];
24->36 [style = bold, label=""];
73->36 [style = bold, label=""];
5->41 [style = bold, label=""];
3->33 [style = solid, label="groupSets"];
34->37 [style = bold, label=""];
49->94 [style = bold, label=""];
4->100 [style = dashed, label="0"];
18->5 [style = bold, label=""];
16->84 [style = bold, label=""];
26->23 [style = bold, label=""];
14->7 [style = solid, label="groupSets"];
66->94 [style = solid, label="groupSets"];
102->13 [style = solid, label="groupSet"];
29->22 [style = bold, label=""];
80->100 [style = solid, label="groupSet0"];
17->29 [style = bold, label=""];
6->45 [style = bold, label=""];
51->41 [style = bold, label=""];
17->29 [style = solid, label="groupSets"];
50->53 [style = bold, label=""];
66->86 [style = solid, label="groupSets"];
}
