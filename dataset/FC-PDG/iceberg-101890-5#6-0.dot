digraph {
24 [style = filled, label = "leafStruct.setField(\"leafLongCol\",20L)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertBounds(7,DoubleType.get(),Double.NaN,Double.NaN,metrics)@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "Record nestedStruct = GenericRecord.create(NESTED_STRUCT_TYPE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertBounds(6,BinaryType.get(),ByteBuffer.wrap(\"A\".getBytes()),ByteBuffer.wrap(\"A\".getBytes()),metrics)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "leafStruct.setField(\"leafBinaryCol\",ByteBuffer.wrap(\"A\".getBytes()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testMetricsForNestedStructFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "Record record = GenericRecord.create(NESTED_SCHEMA)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Metrics metrics = getMetrics(NESTED_SCHEMA,buildNestedTestRecord())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "record.setField(\"intCol\",Integer.MAX_VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertBounds(3,LongType.get(),100L,100L,metrics)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "return record@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertBounds(5,LongType.get(),20L,20L,metrics)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertCounts(1,1L,0L,metrics)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Record leafStruct = GenericRecord.create(LEAF_STRUCT_TYPE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertCounts(7,1L,0L,1L,metrics)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertCounts(6,1L,0L,metrics)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "buildNestedTestRecord['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertCounts(3,1L,0L,metrics)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertCounts(5,1L,0L,metrics)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertBounds(1,IntegerType.get(),Integer.MAX_VALUE,Integer.MAX_VALUE,metrics)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(1L,(long)metrics.recordCount())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "record.setField(\"nestedStructCol\",nestedStruct)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testMetricsForNestedStructFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "nestedStruct.setField(\"longCol\",100L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "nestedStruct.setField(\"leafStructCol\",leafStruct)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
21->14 [style = bold, label=""];
8->0 [style = solid, label="metrics"];
7->8 [style = bold, label=""];
23->15 [style = bold, label=""];
8->5 [style = bold, label=""];
17->21 [style = bold, label=""];
8->6 [style = solid, label="metrics"];
9->3 [style = bold, label=""];
24->17 [style = bold, label=""];
20->22 [style = bold, label=""];
2->10 [style = bold, label=""];
15->24 [style = bold, label=""];
14->19 [style = bold, label=""];
5->9 [style = bold, label=""];
8->4 [style = solid, label="metrics"];
4->1 [style = bold, label=""];
6->2 [style = bold, label=""];
1->11 [style = bold, label=""];
15->19 [style = solid, label="leafStruct"];
8->1 [style = solid, label="metrics"];
8->13 [style = solid, label="metrics"];
10->4 [style = bold, label=""];
3->0 [style = bold, label=""];
18->16 [style = bold, label=""];
11->13 [style = bold, label=""];
16->20 [style = bold, label=""];
8->11 [style = solid, label="metrics"];
8->9 [style = solid, label="metrics"];
8->3 [style = solid, label="metrics"];
8->2 [style = solid, label="metrics"];
12->8 [style = bold, label=""];
19->18 [style = bold, label=""];
8->10 [style = solid, label="metrics"];
21->20 [style = solid, label="nestedStruct"];
18->22 [style = solid, label="record"];
}
