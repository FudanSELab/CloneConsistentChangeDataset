digraph {
5 [style = filled, label = "PackagedProgram inputSplitTestProg = PackagedProgram.newBuilder().setJarFile(new File(INPUT_SPLITS_PROG_JAR_FILE)).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "inputSplitTestProg.invokeInteractiveModeForExecution()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestEnvironment.setAsContext(miniClusterResource.getMiniCluster(),parallelism,Collections.singleton(new Path(INPUT_SPLITS_PROG_JAR_FILE)),Collections.emptyList())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestStreamEnvironment.setAsContext(miniClusterResource.getMiniCluster(),parallelism,Collections.singleton(new Path(STREAMING_PROG_JAR_FILE)),Collections.emptyList())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "PackagedProgram streamingProg = new PackagedProgram(new File(STREAMING_PROG_JAR_FILE))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "streamingProg.invokeInteractiveModeForExecution()@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testCustomSplitJobWithCustomClassLoaderJar['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "PackagedProgram inputSplitTestProg = new PackagedProgram(new File(INPUT_SPLITS_PROG_JAR_FILE))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "testStreamingClassloaderJobWithCustomClassLoader['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCustomSplitJobWithCustomClassLoaderJar['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
7->9 [style = bold, label=""];
2->5 [style = dashed, label="0"];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
3->6 [style = dashed, label="0"];
0->9 [style = dashed, label="0"];
5->0 [style = bold, label=""];
2->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
8->7 [style = bold, label=""];
9->6 [style = bold, label=""];
}
