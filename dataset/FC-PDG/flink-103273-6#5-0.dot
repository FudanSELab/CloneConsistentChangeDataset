digraph {
27 [style = filled, label = "testStateAndTimerStateShufflingScalingUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "testHarness.processElement(new Tuple2<>(1,\"SET_PROC_TIME_TIMER:20\"),0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "testProcessingTimeTimersDontInterfere['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int key2 = getKeyInKeyGroupRange(subKeyGroupRange2,maxParallelism)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_PROC_TIME_TIMER:10\"),0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "OperatorStateHandles snapshot = testHarness.snapshot(0,0)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_PROC_TIME_TIMER:20\"),0)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testHarness.open()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertThat(extractResult(testHarness),contains(\"ON_PROC_TIME:HELLO\"))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(extractResult(testHarness2),contains(\"ON_PROC_TIME:CIAO\"))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "KeyGroupRange subKeyGroupRange2 = new KeyGroupRange(subKeyGroupRange1.getEndKeyGroup() + 1,maxParallelism - 1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testHarness2.setProcessingTime(10L)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness1.setProcessingTime(20L)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testHarness.setProcessingTime(20L)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "TestOperator testOperator = new TestOperator()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_STATE:HELLO\"),0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KeyGroupRange subKeyGroupRange1 = new KeyGroupRange(0,(maxParallelism / 2) - 1)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(extractResult(testHarness).isEmpty())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "testHarness.processElement(new Tuple2<>(0,\"SET_PROC_TIME_TIMER:10\"),0)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TestOperator testOperator1 = new TestOperator()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testHarness1.processWatermark(10L)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_STATE:HELLO\"),0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_STATE:CIAO\"),0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testHarness1.setProcessingTime(10L)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testHarness.setProcessingTime(0L)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testHarness2.initializeState(snapshot)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testHarness2.processWatermark(20L)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness1.initializeState(snapshot)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "OperatorSubtaskState snapshot = testHarness.snapshot(0,0)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "testHarness.processElement(new Tuple2<>(key2,\"SET_EVENT_TIME_TIMER:20\"),0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness2 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator2,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,1)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_EVENT_TIME:HELLO\"))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testHarness.processWatermark(0L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness.processElement(new Tuple2<>(key1,\"SET_EVENT_TIME_TIMER:10\"),0)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final int maxParallelism = 10@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "testStateAndTimerStateShufflingScalingUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testHarness2.processWatermark(10L)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testHarness.processElement(new Tuple2<>(1,\"SET_STATE:CIAO\"),0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(extractResult(testHarness2).isEmpty())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertThat(extractResult(testHarness2),contains(\"ON_EVENT_TIME:CIAO\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "int key1 = getKeyInKeyGroupRange(subKeyGroupRange1,maxParallelism)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "testHarness2.setup()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(extractResult(testHarness1).isEmpty())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness2.setProcessingTime(20L)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(testOperator,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,1,0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KeyedOneInputStreamOperatorTestHarness<Integer,Tuple2<Integer,String>,String> testHarness1 = new KeyedOneInputStreamOperatorTestHarness<>(testOperator1,new TestKeySelector(),BasicTypeInfo.INT_TYPE_INFO,maxParallelism,2,0)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHarness1.setup()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(extractResult(testHarness),contains(\"ON_PROC_TIME:CIAO\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(extractResult(testHarness1),contains(\"ON_PROC_TIME:HELLO\"))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testHarness2.open()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "TestOperator testOperator2 = new TestOperator()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.setProcessingTime(10L)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness1.processWatermark(20L)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testHarness1.open()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->49 [style = bold, label=""];
25->56 [style = dashed, label="0"];
46->25 [style = bold, label=""];
41->19 [style = bold, label=""];
41->33 [style = solid, label="key2"];
27->28 [style = bold, label=""];
49->14 [style = bold, label=""];
40->0 [style = solid, label="snapshot"];
29->0 [style = bold, label=""];
52->59 [style = bold, label=""];
53->54 [style = bold, label=""];
30->59 [style = dashed, label="0"];
50->58 [style = solid, label="testHarness"];
6->29 [style = bold, label=""];
3->34 [style = bold, label=""];
9->26 [style = bold, label=""];
37->5 [style = bold, label=""];
28->4 [style = solid, label="maxParallelism"];
33->37 [style = dashed, label="0"];
15->20 [style = bold, label=""];
50->55 [style = bold, label=""];
40->17 [style = solid, label="snapshot"];
33->45 [style = bold, label=""];
35->10 [style = bold, label=""];
13->22 [style = bold, label=""];
5->30 [style = bold, label=""];
25->40 [style = bold, label=""];
28->12 [style = solid, label="maxParallelism"];
21->1 [style = solid, label="testHarness2"];
18->38 [style = bold, label=""];
40->49 [style = dashed, label="0"];
26->7 [style = bold, label=""];
31->51 [style = dashed, label="0"];
6->9 [style = solid, label="testHarness1"];
56->57 [style = bold, label=""];
28->21 [style = solid, label="maxParallelism"];
58->56 [style = bold, label=""];
0->36 [style = bold, label=""];
12->41 [style = bold, label=""];
41->44 [style = solid, label="key2"];
12->30 [style = solid, label="key1"];
34->21 [style = solid, label="testOperator2"];
12->45 [style = solid, label="key1"];
31->33 [style = bold, label=""];
6->20 [style = solid, label="testHarness1"];
42->41 [style = solid, label="subKeyGroupRange2"];
45->46 [style = bold, label=""];
48->28 [style = bold, label=""];
28->6 [style = solid, label="maxParallelism"];
14->6 [style = bold, label=""];
30->44 [style = bold, label=""];
10->18 [style = bold, label=""];
22->2 [style = bold, label=""];
19->43 [style = solid, label="testOperator"];
4->12 [style = solid, label="subKeyGroupRange1"];
38->9 [style = bold, label=""];
11->32 [style = bold, label=""];
43->50 [style = dashed, label="0"];
14->6 [style = solid, label="testOperator1"];
51->37 [style = bold, label=""];
21->39 [style = bold, label=""];
16->1 [style = bold, label=""];
39->17 [style = bold, label=""];
40->14 [style = bold, label=""];
17->13 [style = bold, label=""];
5->58 [style = bold, label=""];
21->32 [style = solid, label="testHarness2"];
55->52 [style = bold, label=""];
28->43 [style = solid, label="maxParallelism"];
19->51 [style = bold, label=""];
37->8 [style = bold, label=""];
47->23 [style = bold, label=""];
19->43 [style = bold, label=""];
2->11 [style = bold, label=""];
44->31 [style = bold, label=""];
34->21 [style = bold, label=""];
28->42 [style = solid, label="maxParallelism"];
44->19 [style = dashed, label="0"];
49->0 [style = solid, label="snapshot"];
28->41 [style = solid, label="maxParallelism"];
23->16 [style = bold, label=""];
50->57 [style = solid, label="testHarness"];
54->50 [style = solid, label="testOperator"];
36->15 [style = bold, label=""];
4->42 [style = bold, label=""];
43->37 [style = bold, label=""];
42->12 [style = bold, label=""];
7->3 [style = bold, label=""];
54->50 [style = bold, label=""];
32->47 [style = bold, label=""];
8->5 [style = bold, label=""];
1->24 [style = bold, label=""];
20->35 [style = bold, label=""];
49->17 [style = solid, label="snapshot"];
41->46 [style = solid, label="key2"];
12->31 [style = solid, label="key1"];
28->4 [style = bold, label=""];
59->19 [style = bold, label=""];
}
