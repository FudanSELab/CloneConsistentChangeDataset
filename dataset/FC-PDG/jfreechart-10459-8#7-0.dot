digraph {
17 [style = filled, label = "assertFalse(g1.equals(g2))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(g1.equals(g2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CustomPieURLGenerator g1 = new CustomPieURLGenerator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CustomPieURLGenerator g2 = (CustomPieURLGenerator)g1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(g1,g2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "CustomPieURLGenerator g2 = (CustomPieURLGenerator)TestUtils.serialised(g1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertTrue(g1.getClass() == g2.getClass())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(g1 != g2)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "g1.addURLs(m2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Map<String,String> m1 = new HashMap<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,String> m2 = new HashMap<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "CustomPieURLGenerator g2 = TestUtils.serialised(g1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "m1.put(\"A\",\"http://www.jfree.org/\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "g1.addURLs(m1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "m2.put(\"B\",\"XYZ\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
1->4 [style = bold, label=""];
15->13 [style = bold, label=""];
16->11 [style = bold, label=""];
4->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
16->10 [style = solid, label="g2"];
6->11 [style = dashed, label="0"];
14->10 [style = bold, label=""];
2->4 [style = solid, label="g1"];
1->7 [style = bold, label=""];
16->17 [style = solid, label="g2"];
13->17 [style = bold, label=""];
5->2 [style = bold, label=""];
12->2 [style = bold, label=""];
2->0 [style = bold, label=""];
8->2 [style = bold, label=""];
7->6 [style = solid, label="g2"];
1->16 [style = bold, label=""];
9->15 [style = bold, label=""];
4->7 [style = dashed, label="0"];
7->6 [style = bold, label=""];
2->6 [style = solid, label="g1"];
9->13 [style = solid, label="m2"];
10->9 [style = bold, label=""];
2->7 [style = solid, label="g1"];
0->1 [style = solid, label="m1"];
16->11 [style = solid, label="g2"];
4->6 [style = solid, label="g2"];
2->11 [style = solid, label="g1"];
}
