digraph {
16 [style = filled, label = "lookupReferencesManager.start()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "lookupMap.put(\"testMockForRemoveNonExisting\",container)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "replay(druidLeaderClient)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createStrictMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "lookupMap.put(\"testMockForCloseIsCalledAfterStopping\",container)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "lookupReferencesManager.stop()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "replay(druidLeaderClient)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EasyMock.verify(lookupExtractorFactory)@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testRemoveNonExisting['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testCloseIsCalledAfterStopping['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "replay(config)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "FullResponseHolder responseHolder = new FullResponseHolder(HttpResponseStatus.OK,EasyMock.createNiceMock(),new StringBuilder().append(strResult))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.close()).andReturn(true).once()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "lookupReferencesManager.add(\"testMock\",new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "lookupReferencesManager.handlePendingNotices()@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "lookupReferencesManager.start()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCloseIsCalledAfterStopping['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "EasyMock.replay(config)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
11->17 [style = solid, label="lookupExtractorFactory"];
14->24 [style = bold, label=""];
0->16 [style = bold, label=""];
7->11 [style = bold, label=""];
10->21 [style = dashed, label="0"];
28->30 [style = bold, label=""];
11->1 [style = bold, label=""];
25->23 [style = bold, label=""];
6->21 [style = bold, label=""];
26->29 [style = bold, label=""];
9->4 [style = bold, label=""];
27->28 [style = bold, label=""];
6->10 [style = solid, label="responseHolder"];
30->26 [style = bold, label=""];
12->15 [style = bold, label=""];
15->30 [style = dashed, label="0"];
8->14 [style = bold, label=""];
8->6 [style = solid, label="strResult"];
14->18 [style = solid, label="responseHolder"];
29->8 [style = solid, label="request"];
28->26 [style = solid, label="lookupMap"];
19->17 [style = bold, label=""];
12->31 [style = bold, label=""];
18->2 [style = bold, label=""];
11->5 [style = solid, label="lookupExtractorFactory"];
0->20 [style = dashed, label="0"];
26->14 [style = solid, label="strResult"];
13->23 [style = dashed, label="0"];
2->13 [style = bold, label=""];
3->9 [style = bold, label=""];
12->8 [style = solid, label="lookupMap"];
17->12 [style = bold, label=""];
29->12 [style = bold, label=""];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
5->6 [style = dashed, label="0"];
14->13 [style = solid, label="request"];
24->25 [style = bold, label=""];
6->10 [style = bold, label=""];
23->6 [style = bold, label=""];
10->0 [style = bold, label=""];
2->25 [style = dashed, label="0"];
16->5 [style = bold, label=""];
14->18 [style = bold, label=""];
11->4 [style = solid, label="lookupExtractorFactory"];
13->6 [style = bold, label=""];
1->19 [style = bold, label=""];
31->8 [style = bold, label=""];
15->8 [style = bold, label=""];
22->11 [style = bold, label=""];
18->24 [style = dashed, label="0"];
6->21 [style = solid, label="responseHolder"];
14->23 [style = solid, label="request"];
}
