digraph {
12 [style = filled, label = "final CountDownLatch flushDone = new CountDownLatch(1)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(getReconnectEvent.await(2,TimeUnit.SECONDS))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SharedCount sharedCount = new SharedCount(curatorFramework,\"/count\",10)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "final AtomicInteger numChangeEvents = new AtomicInteger(0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "sharedCount.addListener(new SharedCountListener(){@Override public void countHasChanged(SharedCountReader sharedCount,int newCount){numChangeEvents.incrementAndGet()gotChangeEvent.countDown()}@Override public void stateChanged(CuratorFramework client,ConnectionState newState){if (newState == ConnectionState.SUSPENDED) {gotSuspendEvent.countDown()}if (newState == ConnectionState.RECONNECTED) {getReconnectEvent.countDown()}}})@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{CloseableUtils.closeQuietly(sharedCount)CloseableUtils.closeQuietly(curatorFramework)}@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testDisconnectEventOnWatcherDoesNotRetry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "{CloseableUtils.closeQuietly(sharedCount)TestCleanState.closeAndTestClean(curatorFramework)}@@@46@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertTrue(gotChangeEvent.await(2,TimeUnit.SECONDS))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "sharedCount.setCount(11)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Assert.assertEquals(numChangeEvents.get(),1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "server.stop()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertTrue(gotSuspendEvent.await(5,TimeUnit.SECONDS))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "curatorFramework.getData().inBackground(new BackgroundCallback(){@Override public void processResult(CuratorFramework client,CuratorEvent event){flushDone.countDown()}}).forPath(\"/count\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "sharedCount.trySetCount(sharedCount.getVersionedValue(),12)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "curatorFramework.start()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CuratorFramework curatorFramework = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryNTimes(10,1000))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SharedCount sharedCount = new SharedCount(curatorFramework,\"/count\",10)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final CountDownLatch getReconnectEvent = new CountDownLatch(1)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "curatorFramework.blockUntilConnected()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final CountDownLatch gotChangeEvent = new CountDownLatch(1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "curatorFramework.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "flushDone.await(5,TimeUnit.SECONDS)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "curatorFramework.blockUntilConnected()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sharedCount.start()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(numChangeEvents.get(),3)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testDisconnectReconnectEventDoesNotFireValueWatcher['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "server.restart()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testDisconnectEventOnWatcherDoesNotRetry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(gotSuspendEvent.await(2,TimeUnit.SECONDS))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final CountDownLatch gotSuspendEvent = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CuratorFramework curatorFramework = CuratorFrameworkFactory.newClient(server.getConnectString(),new RetryNTimes(10,500))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "server.stop()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->29 [style = solid, label="curatorFramework"];
5->8 [style = bold, label=""];
4->3 [style = bold, label=""];
1->4 [style = bold, label=""];
9->0 [style = bold, label=""];
15->14 [style = bold, label=""];
25->22 [style = bold, label=""];
28->30 [style = bold, label=""];
0->5 [style = solid, label="curatorFramework"];
8->6 [style = bold, label=""];
20->31 [style = bold, label=""];
12->16 [style = bold, label=""];
16->32 [style = bold, label=""];
11->9 [style = bold, label=""];
31->15 [style = bold, label=""];
18->28 [style = bold, label=""];
0->7 [style = bold, label=""];
6->20 [style = bold, label=""];
6->1 [style = bold, label=""];
21->26 [style = bold, label=""];
30->12 [style = bold, label=""];
24->20 [style = solid, label="curatorFramework"];
22->27 [style = bold, label=""];
19->9 [style = bold, label=""];
23->13 [style = bold, label=""];
7->2 [style = bold, label=""];
9->25 [style = bold, label=""];
26->23 [style = bold, label=""];
20->29 [style = solid, label="sharedCount"];
27->24 [style = bold, label=""];
10->9 [style = bold, label=""];
8->31 [style = dashed, label="0"];
24->8 [style = bold, label=""];
5->3 [style = solid, label="sharedCount"];
17->29 [style = bold, label=""];
0->3 [style = solid, label="curatorFramework"];
4->23 [style = dashed, label="0"];
32->17 [style = bold, label=""];
14->21 [style = bold, label=""];
13->18 [style = bold, label=""];
2->5 [style = bold, label=""];
}
