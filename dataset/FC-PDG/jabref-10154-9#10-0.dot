digraph {
14 [style = filled, label = "assertEquals(auxResult.getFoundKeysInAux() + auxResult.getCrossRefEntriesCount(),auxResult.getResolvedKeysCount() + auxResult.getUnresolvedKeysCount())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(0,auxResult.getCrossRefEntriesCount())@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<BibEntry> newEntries = newDB.getEntries()@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "AuxParserResult auxResult = auxParser.parse(auxFile)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testNormal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "Path auxFile = Path.of(.getResource(\"nested.aux\").toURI())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(2,auxResult.getResolvedKeysCount())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "AuxParser auxParser = new DefaultAuxParser(result.getDatabase())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "InputStream originalStream = .getResourceAsStream(\"origin.bib\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(0,auxResult.getCrossRefEntriesCount())@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(newEntries.get(1).hasChanged())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testNestedAux['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(2,newDB.getEntries().size())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(newEntries.get(0).hasChanged())@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(2,auxResult.getFoundKeysInAux())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNormal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(auxResult.getGeneratedBibDatabase().hasEntries())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(2,auxResult.getFoundKeysInAux())@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "BibDatabase newDB = auxResult.getGeneratedBibDatabase()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(auxResult.getFoundKeysInAux() + auxResult.getCrossRefEntriesCount(),auxResult.getResolvedKeysCount() + auxResult.getUnresolvedKeysCount())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Path auxFile = Path.of(.getResource(\"paper.aux\").toURI())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(2,newEntries.size())@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(0,auxResult.getUnresolvedKeysCount())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ParserResult result = new BibtexParser(importFormatPreferences,new DummyFileUpdateMonitor()).parse(originalReader)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->7 [style = bold, label=""];
3->10 [style = bold, label=""];
10->2 [style = bold, label=""];
1->9 [style = bold, label=""];
13->0 [style = bold, label=""];
14->21 [style = bold, label=""];
11->1 [style = bold, label=""];
0->3 [style = bold, label=""];
17->20 [style = bold, label=""];
12->23 [style = bold, label=""];
5->4 [style = bold, label=""];
2->8 [style = bold, label=""];
20->19 [style = bold, label=""];
7->13 [style = bold, label=""];
8->18 [style = bold, label=""];
16->12 [style = bold, label=""];
8->11 [style = bold, label=""];
7->23 [style = dashed, label="0"];
23->13 [style = bold, label=""];
15->14 [style = bold, label=""];
23->3 [style = solid, label="auxFile"];
11->18 [style = dashed, label="0"];
6->12 [style = bold, label=""];
19->4 [style = bold, label=""];
18->17 [style = bold, label=""];
7->3 [style = solid, label="auxFile"];
22->12 [style = bold, label=""];
4->15 [style = bold, label=""];
9->5 [style = bold, label=""];
}
