digraph {
3 [style = filled, label = "assertEquals(new Integer(1234),casted.getObject())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "LongValue casted = (LongValue)val@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1234L,casted.getLong())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(20L,casted.getLong())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(val instanceof AnalyticsValue)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "objectCastingTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(20,casted.getObject())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "val.setValue(20).setExists(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "longCastingTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(casted.exists())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(new Integer(20),casted.getObject())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1234,casted.getObject())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "TestIntValue val = new TestIntValue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "AnalyticsValue casted = (AnalyticsValue)val@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "objectCastingTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "val.setValue(1234).setExists(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(val instanceof LongValue)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(casted.exists())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
4->2 [style = solid, label="val"];
0->9 [style = bold, label=""];
1->8 [style = bold, label=""];
2->1 [style = bold, label=""];
4->13 [style = bold, label=""];
11->4 [style = bold, label=""];
3->6 [style = bold, label=""];
8->12 [style = dashed, label="0"];
15->6 [style = bold, label=""];
7->4 [style = bold, label=""];
9->10 [style = bold, label=""];
8->14 [style = dashed, label="0"];
12->0 [style = bold, label=""];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
8->0 [style = bold, label=""];
5->2 [style = bold, label=""];
14->0 [style = bold, label=""];
16->1 [style = bold, label=""];
9->15 [style = bold, label=""];
2->16 [style = dashed, label="0"];
4->13 [style = solid, label="val"];
1->12 [style = bold, label=""];
3->15 [style = dashed, label="0"];
9->3 [style = bold, label=""];
1->14 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
17->4 [style = bold, label=""];
4->5 [style = solid, label="val"];
4->16 [style = solid, label="val"];
}
