digraph {
13 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS',\" + \" 'YYYY-MM-DD')\").withOperatorTable(opTable).fails(\"Invalid number of arguments to function 'TO_TIMESTAMP'. \" + \"Was expecting 2 arguments\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "wholeExpr(\"translate('abc', 'ab')\").withOperatorTable(oracleTable).fails(\"Invalid number of arguments to function 'TRANSLATE3'. \" + \"Was expecting 3 arguments\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP(2000, 'YYYY')\").withOperatorTable(postgresTable).withTypeCoercion(false).fails(\"Cannot apply 'TO_TIMESTAMP' to arguments of type \" + \"'TO_TIMESTAMP\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_TIMESTAMP\(<STRING>, <STRING>\)'\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "testTranslate3['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "expr(\"TO_TIMESTAMP(2000, 'YYYY')\").withOperatorTable(opTable).columnType(\"DATE NOT NULL\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "expr(\"TO_TIMESTAMP(2000, 'YYYY')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testToTimestampFunction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_TIMESTAMP'. \" + \"Was expecting 2 arguments\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final SqlOperatorTable opTable = operatorTableFor(SqlLibrary.POSTGRESQL)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "expr(\"translate('aabbcc', 'ab', '+-')\").withOperatorTable(oracleTable).columnType(\"VARCHAR(6) NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "wholeExpr(\"translate('abc', 'ab', 123)\").withOperatorTable(oracleTable).withTypeCoercion(false).fails(\"(?s)Cannot apply 'TRANSLATE3' to arguments of type \" + \"'TRANSLATE3\(<CHAR\(3\)>, <CHAR\(2\)>, <INTEGER>\)'\. .*\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS',\" + \" 'YYYY-MM-DD')\").withOperatorTable(postgresTable).fails(\"Invalid number of arguments to function 'TO_TIMESTAMP'. \" + \"Was expecting 2 arguments\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "expr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\").withOperatorTable(opTable).columnType(\"DATE NOT NULL\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "expr(\"translate('abc', 'ab', 123)\").withOperatorTable(oracleTable).columnType(\"VARCHAR(3) NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "wholeExpr(\"translate('aabbcc', 'ab', '+-')\").fails(\"No match found for function signature \" + \"TRANSLATE3\(<CHARACTER>, <CHARACTER>, <CHARACTER>\)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final SqlOperatorTable postgresTable = SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.POSTGRESQL)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final SqlOperatorTable oracleTable = SqlLibraryOperatorTableFactory.INSTANCE.getOperatorTable(SqlLibrary.STANDARD,SqlLibrary.ORACLE)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "wholeExpr(\"translate('abc', 'ab', '+-', 'four')\").withOperatorTable(oracleTable).fails(\"Invalid number of arguments to function 'TRANSLATE3'. \" + \"Was expecting 3 arguments\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP(2000, 'YYYY')\").withOperatorTable(opTable).withTypeCoercion(false).fails(\"Cannot apply 'TO_TIMESTAMP' to arguments of type \" + \"'TO_TIMESTAMP\(<INTEGER>, <CHAR\(4\)>\)'\. \" + \"Supported form\(s\): 'TO_TIMESTAMP\(<STRING>, <STRING>\)'\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\").fails(\"No match found for function signature \" + \"TO_TIMESTAMP\(<CHARACTER>, <CHARACTER>\)\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testToTimestampFunction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "wholeExpr(\"TO_TIMESTAMP('2000-01-01 01:00:00')\").withOperatorTable(opTable).fails(\"Invalid number of arguments to function 'TO_TIMESTAMP'. \" + \"Was expecting 2 arguments\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "expr(\"TO_TIMESTAMP('2000-01-01 01:00:00', 'YYYY-MM-DD HH:MM:SS')\").withOperatorTable(postgresTable).columnType(\"DATE NOT NULL\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16->15 [style = bold, label=""];
7->1 [style = bold, label=""];
7->18 [style = dashed, label="0"];
19->20 [style = bold, label=""];
0->2 [style = bold, label=""];
6->11 [style = dashed, label="0"];
1->3 [style = bold, label=""];
8->14 [style = bold, label=""];
3->6 [style = bold, label=""];
11->12 [style = bold, label=""];
1->21 [style = dashed, label="0"];
15->19 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
10->7 [style = bold, label=""];
4->0 [style = bold, label=""];
20->22 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->4 [style = bold, label=""];
6->15 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
21->16 [style = bold, label=""];
5->7 [style = bold, label=""];
4->19 [style = dashed, label="0"];
18->21 [style = bold, label=""];
0->9 [style = dashed, label="0"];
3->14 [style = dashed, label="0"];
2->22 [style = dashed, label="0"];
14->11 [style = bold, label=""];
17->18 [style = bold, label=""];
9->13 [style = bold, label=""];
}
