digraph {
59 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.RUNNING.name())@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "kafkaReporter.report()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KafkaEventReporter kafkaReporter = builder.build(\"localhost:0000\",\"topic1\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "state = stateList.get(0)@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@84@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StateStore stateStore = jobStatusMonitor.getStateStore()@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.ORCHESTRATED.name())@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "MockKafkaAvroJobStatusMonitor jobStatusMonitor = new MockKafkaAvroJobStatusMonitor(\"test\",config,1)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "context.submitEvent(event5)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.RUNNING.name())@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "jobStatusMonitor.shutDown()@@@88@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "byte(( undecodeableMessage = Arrays.copyOf(messageAndMetadata.message(),messageAndMetadata.message().length - 1)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "context.submitEvent(event2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "context.submitEvent(event6)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "GobblinTrackingEvent event3 = createJobStartEvent()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "state = stateList.get(0)@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "GobblinTrackingEvent event5 = createJobOrchestratedEvent(2)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "messageAndMetadata = iterator.next()@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "String tableName = KafkaJobStatusMonitor.jobStatusTableName(this.flowExecutionId,\"NA\",\"NA\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "kafkaReporter.report()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "kafkaReporter.report()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "GobblinTrackingEvent event5 = createDummyEvent()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.COMPILED.name())@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "messageAndMetadata = iterator.next()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "state = stateList.get(0)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Thread.currentThread().interrupt()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "String storeName = KafkaJobStatusMonitor.jobStatusStoreName(flowGroup,flowName)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "GobblinTrackingEvent event2 = createJobOrchestratedEvent(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "GobblinTrackingEvent event4 = createJobSucceededEvent()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "MessageAndMetadata<byte((,byte((> messageAndMetadata = iterator.next()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "jobStatusMonitor.buildMetricsContextAndMetrics()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tableName = KafkaJobStatusMonitor.jobStatusTableName(this.flowExecutionId,this.jobGroup,this.jobName)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "context.submitEvent(event7)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "GobblinTrackingEvent event4 = createJobFailedEvent()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "kafkaReporter.report()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "state = stateList.get(0)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "Assert.assertEquals(state.getProp(TimingEvent.FlowEventConstants.SHOULD_RETRY_FIELD),Boolean.toString(true))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "Assert.assertEquals(state.getProp(TimingEvent.FlowEventConstants.SHOULD_RETRY_FIELD),Boolean.toString(false))@@@87@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "kafkaReporter.report()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "KafkaEventReporter kafkaReporter = builder.build(\"localhost:0000\",\"topic2\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@63@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "kafkaReporter.report()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "state = stateList.get(0)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testProcessMessageForSuccessfulFlow['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "state = stateList.get(0)@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "GobblinTrackingEvent event7 = createJobFailedEvent()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
85 [style = filled, label = "messageAndMetadata = iterator.next()@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "messageAndMetadata = iterator.next()@@@62@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "Assert.assertEquals(jobStatusMonitor.getMessageParseFailures().getCount(),1L)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "InterruptedException ex@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Config config = ConfigFactory.empty().withValue(ConfigurationKeys.KAFKA_BROKERS,ConfigValueFactory.fromAnyRef(\"localhost:0000\")).withValue(Kafka09ConsumerClient.GOBBLIN_CONFIG_VALUE_DESERIALIZER_CLASS_KEY,ConfigValueFactory.fromAnyRef(\"org.apache.kafka.common.serialization.ByteArrayDeserializer\")).withValue(ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY,ConfigValueFactory.fromAnyRef(stateStoreDir)).withValue(\"zookeeper.connect\",ConfigValueFactory.fromAnyRef(\"localhost:2121\"))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.COMPLETE.name())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "Assert.assertEquals(jobStatusMonitor.getMessageParseFailures().getCount(),0L)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "messageAndMetadata = iterator.next()@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "messageAndMetadata = iterator.next()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "GobblinTrackingEvent event1 = createFlowCompiledEvent()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "messageAndMetadata = iterator.next()@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "context.submitEvent(event3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.ORCHESTRATED.name())@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "jobStatusMonitor.processMessage(new Kafka09ConsumerClient.Kafka09ConsumerRecord(undecodeableRecord))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.FAILED.name())@@@86@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testProcessMessageForSuccessfulFlow['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "GobblinTrackingEvent event6 = createJobStartEvent()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "state = stateList.get(0)@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "context.submitEvent(event4)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ConsumerIterator<byte((,byte((> iterator = this.kafkaTestHelper.getIteratorForTopic(TOPIC)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "List<State> stateList = stateStore.getAll(storeName,tableName)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "ConsumerRecord undecodeableRecord = new ConsumerRecord<>(TOPIC,messageAndMetadata.partition(),messageAndMetadata.offset(),messageAndMetadata.key(),undecodeableMessage)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.PENDING_RETRY.name())@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "kafkaReporter.report()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "State state = stateList.get(0)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Thread.sleep(1000)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "testProcessMessageForFailedFlow['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "messageAndMetadata = iterator.next()@@@69@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "context.submitEvent(event1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Assert.assertNull(jobStatusMonitor.parseJobStatus(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata)))@@@61@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->71 [style = bold, label=""];
78->95 [style = solid, label="undecodeableMessage"];
81->84 [style = bold, label=""];
44->3 [style = bold, label=""];
69->35 [style = bold, label=""];
48->8 [style = bold, label=""];
41->61 [style = solid, label="event6"];
38->66 [style = dashed, label="0"];
80->88 [style = solid, label="event7"];
64->17 [style = bold, label=""];
15->56 [style = bold, label=""];
62->66 [style = bold, label=""];
71->45 [style = bold, label=""];
8->31 [style = bold, label=""];
67->79 [style = bold, label=""];
79->90 [style = bold, label=""];
51->1 [style = bold, label=""];
86->69 [style = bold, label=""];
12->33 [style = solid, label="storeName"];
16->23 [style = bold, label=""];
90->74 [style = bold, label=""];
60->55 [style = bold, label=""];
71->45 [style = solid, label="event5"];
63->62 [style = bold, label=""];
3->89 [style = bold, label=""];
2->33 [style = bold, label=""];
25->42 [style = bold, label=""];
38->52 [style = bold, label=""];
9->26 [style = bold, label=""];
30->54 [style = dotted, label="true"];
31->29 [style = bold, label=""];
66->52 [style = bold, label=""];
17->69 [style = dashed, label="0"];
7->33 [style = solid, label="tableName"];
76->87 [style = bold, label=""];
94->76 [style = bold, label=""];
7->93 [style = solid, label="tableName"];
30->54 [style = bold, label=""];
26->21 [style = bold, label=""];
14->45 [style = solid, label="event5"];
70->83 [style = bold, label=""];
14->45 [style = bold, label=""];
61->5 [style = bold, label=""];
24->0 [style = bold, label=""];
62->38 [style = bold, label=""];
66->52 [style = solid, label="event4"];
13->43 [style = bold, label=""];
74->81 [style = bold, label=""];
7->25 [style = solid, label="tableName"];
22->63 [style = solid, label="event3"];
50->60 [style = bold, label=""];
0->12 [style = bold, label=""];
57->51 [style = bold, label=""];
42->20 [style = bold, label=""];
7->39 [style = solid, label="tableName"];
3->89 [style = dashed, label="0"];
85->67 [style = solid, label="messageAndMetadata"];
5->47 [style = bold, label=""];
29->10 [style = bold, label=""];
46->7 [style = bold, label=""];
12->79 [style = solid, label="storeName"];
19->2 [style = bold, label=""];
58->48 [style = bold, label=""];
21->6 [style = bold, label=""];
33->49 [style = bold, label=""];
41->61 [style = bold, label=""];
39->59 [style = bold, label=""];
45->4 [style = bold, label=""];
28->17 [style = bold, label=""];
1->32 [style = bold, label=""];
44->65 [style = bold, label=""];
12->72 [style = solid, label="storeName"];
6->18 [style = bold, label=""];
73->68 [style = bold, label=""];
82->73 [style = bold, label=""];
37->68 [style = dashed, label="0"];
96->3 [style = bold, label=""];
58->48 [style = solid, label="tableName"];
3->65 [style = dashed, label="0"];
12->58 [style = bold, label=""];
77->96 [style = bold, label=""];
75->47 [style = bold, label=""];
38->52 [style = solid, label="event4"];
56->13 [style = bold, label=""];
9->26 [style = solid, label="config"];
35->27 [style = bold, label=""];
44->65 [style = solid, label="messageAndMetadata"];
37->11 [style = solid, label="messageAndMetadata"];
55->15 [style = bold, label=""];
65->16 [style = bold, label=""];
36->44 [style = bold, label=""];
7->25 [style = bold, label=""];
80->88 [style = bold, label=""];
32->22 [style = bold, label=""];
43->36 [style = bold, label=""];
93->94 [style = bold, label=""];
88->75 [style = bold, label=""];
12->25 [style = solid, label="storeName"];
3->89 [style = solid, label="messageAndMetadata"];
3->16 [style = bold, label=""];
95->70 [style = bold, label=""];
10->46 [style = bold, label=""];
72->82 [style = bold, label=""];
20->34 [style = bold, label=""];
10->46 [style = solid, label="messageAndMetadata"];
17->35 [style = bold, label=""];
22->63 [style = bold, label=""];
19->2 [style = solid, label="messageAndMetadata"];
43->77 [style = bold, label=""];
27->57 [style = bold, label=""];
14->71 [style = dashed, label="0"];
36->77 [style = dashed, label="0"];
95->83 [style = solid, label="undecodeableRecord"];
7->79 [style = solid, label="tableName"];
53->37 [style = bold, label=""];
5->80 [style = bold, label=""];
18->24 [style = bold, label=""];
55->15 [style = solid, label="messageAndMetadata"];
51->1 [style = solid, label="event2"];
89->93 [style = bold, label=""];
23->39 [style = bold, label=""];
16->23 [style = solid, label="messageAndMetadata"];
47->9 [style = bold, label=""];
18->24 [style = solid, label="messageAndMetadata"];
12->56 [style = solid, label="storeName"];
52->40 [style = bold, label=""];
35->27 [style = solid, label="event1"];
12->39 [style = solid, label="storeName"];
12->93 [style = solid, label="storeName"];
54->9 [style = bold, label=""];
4->41 [style = bold, label=""];
40->14 [style = bold, label=""];
7->56 [style = solid, label="tableName"];
78->95 [style = bold, label=""];
91->24 [style = bold, label=""];
87->37 [style = bold, label=""];
59->53 [style = bold, label=""];
85->67 [style = bold, label=""];
37->11 [style = bold, label=""];
7->72 [style = solid, label="tableName"];
18->78 [style = bold, label=""];
83->91 [style = bold, label=""];
68->85 [style = bold, label=""];
84->92 [style = bold, label=""];
11->72 [style = bold, label=""];
34->19 [style = bold, label=""];
49->50 [style = bold, label=""];
12->48 [style = solid, label="storeName"];
}
