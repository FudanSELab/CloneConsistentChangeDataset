digraph {
39 [style = filled, label = "subscriptions.unsubscribe()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "buildFetcher(OffsetResetStrategy.EARLIEST,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MetricName maxLagMetric = metrics.metricInstance(metricsRegistry.recordsLagMax)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fetchRecords(tp0,builder.build(),Errors.NONE,200L,0)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "subscriptions.seek(tp0,0)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(147,(Double)partitionLag.metricValue(),EPSILON)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tags.put(\"topic\",tp0.topic())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.unsubscribe()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testFetcherMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@27@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testReadCommittedLagMetric['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "Map<String,String> tags = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(50,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(100,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int v = 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "fetchRecords(tp0,MemoryRecords.EMPTY,Errors.NONE,100L,0)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(147,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "v++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tags.put(\"partition\",String.valueOf(tp0.partition()))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Double.NaN,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Metrics metrics = new Metrics()@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(197,(Double)partitionLag.metricValue(),EPSILON)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "assertFalse(allMetrics.containsKey(partitionLagMetric))@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "v < 3@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(197,(Double)recordsFetchLagMax.metricValue(),EPSILON)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "KafkaMetric recordsFetchLagMax = allMetrics.get(maxLagMetric)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "MetricName partitionLagMetric = metrics.metricName(\"records-lag\",metricGroup,tags)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fetcher = createFetcher(subscriptions,metrics,new ByteArrayDeserializer(),new ByteArrayDeserializer(),Integer.MAX_VALUE,IsolationLevel.READ_COMMITTED)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testReadCommittedLagMetric['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(100,(Double)partitionLag.metricValue(),EPSILON)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "KafkaMetric partitionLag = allMetrics.get(partitionLagMetric)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->4 [style = bold, label=""];
10->24 [style = bold, label=""];
2->8 [style = dotted, label="true"];
24->6 [style = solid, label="partitionLagMetric"];
4->8 [style = bold, label=""];
4->17 [style = dotted, label="true"];
7->22 [style = bold, label=""];
10->12 [style = solid, label="partitionLagMetric"];
39->41 [style = bold, label=""];
30->27 [style = bold, label=""];
17->4 [style = bold, label=""];
8->4 [style = solid, label="v"];
12->18 [style = dashed, label="0"];
19->0 [style = solid, label="tags"];
9->17 [style = bold, label=""];
4->9 [style = bold, label=""];
14->16 [style = solid, label="maxLagMetric"];
8->2 [style = solid, label="v"];
2->33 [style = bold, label=""];
4->9 [style = dotted, label="true"];
40->2 [style = bold, label=""];
4->8 [style = solid, label="v"];
14->10 [style = solid, label="tags"];
20->24 [style = solid, label="maxLagMetric"];
2->29 [style = solid, label="v"];
8->17 [style = solid, label="v"];
17->9 [style = solid, label="v"];
36->35 [style = bold, label=""];
17->1 [style = bold, label=""];
15->32 [style = dashed, label="0"];
26->16 [style = bold, label=""];
6->15 [style = bold, label=""];
27->28 [style = bold, label=""];
13->0 [style = bold, label=""];
22->26 [style = solid, label="metrics"];
14->13 [style = bold, label=""];
28->19 [style = bold, label=""];
4->17 [style = bold, label=""];
37->32 [style = bold, label=""];
15->2 [style = bold, label=""];
40->2 [style = solid, label="v"];
4->1 [style = bold, label=""];
21->17 [style = dashed, label="0"];
8->2 [style = bold, label=""];
22->25 [style = bold, label=""];
40->33 [style = solid, label="v"];
34->39 [style = bold, label=""];
0->41 [style = solid, label="partitionLagMetric"];
19->14 [style = bold, label=""];
10->3 [style = solid, label="partitionLagMetric"];
24->26 [style = bold, label=""];
0->37 [style = solid, label="partitionLagMetric"];
19->26 [style = solid, label="maxLagMetric"];
21->11 [style = bold, label=""];
11->3 [style = bold, label=""];
33->8 [style = bold, label=""];
17->4 [style = solid, label="v"];
24->5 [style = solid, label="partitionLagMetric"];
2->8 [style = bold, label=""];
20->19 [style = bold, label=""];
23->16 [style = dashed, label="0"];
23->12 [style = bold, label=""];
8->33 [style = solid, label="v"];
32->6 [style = bold, label=""];
40->8 [style = solid, label="v"];
31->30 [style = bold, label=""];
8->29 [style = dotted, label="true"];
11->34 [style = dashed, label="0"];
4->29 [style = solid, label="v"];
12->6 [style = bold, label=""];
18->23 [style = bold, label=""];
2->4 [style = solid, label="v"];
13->24 [style = solid, label="tags"];
8->4 [style = bold, label=""];
16->18 [style = bold, label=""];
25->20 [style = bold, label=""];
2->33 [style = dotted, label="true"];
1->21 [style = bold, label=""];
8->9 [style = solid, label="v"];
1->4 [style = dashed, label="0"];
29->4 [style = bold, label=""];
8->17 [style = bold, label=""];
3->5 [style = bold, label=""];
0->10 [style = bold, label=""];
8->29 [style = bold, label=""];
35->38 [style = bold, label=""];
2->8 [style = solid, label="v"];
18->37 [style = bold, label=""];
38->20 [style = bold, label=""];
17->34 [style = bold, label=""];
22->25 [style = solid, label="metrics"];
8->4 [style = dotted, label="true"];
6->40 [style = bold, label=""];
}
