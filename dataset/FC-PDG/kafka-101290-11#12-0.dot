digraph {
4 [style = filled, label = "rocksDBStore.init(context,rocksDBStore)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final List<KeyValue<byte((,byte((>> entries = getKeyValueEntries()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,\"1\")))),\"a\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "keys.add(stringDeserializer.deserialize(null,iterator.next().key.get()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(keys,equalTo(Utils.mkSet(\"2\",\"3\")))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "iterator.hasNext()@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "entries.add(new KeyValue<>(\"1\".getBytes(\"UTF-8\"),null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "shouldRestoreAll['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.restore(rocksDBStore.name(),entries)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shouldHandleDeletesOnRestoreAll['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,\"2\")))),\"b\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldRestoreAll['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final Set<String> keys = new HashSet<>()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final KeyValueIterator<Bytes,byte((> iterator = rocksDBStore.all()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(stringDeserializer.deserialize(null,rocksDBStore.get(new Bytes(stringSerializer.serialize(null,\"3\")))),\"c\")@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->5 [style = bold, label=""];
12->4 [style = bold, label=""];
10->8 [style = bold, label=""];
14->9 [style = solid, label="keys"];
0->2 [style = bold, label=""];
13->14 [style = bold, label=""];
2->4 [style = bold, label=""];
14->10 [style = bold, label=""];
2->5 [style = solid, label="entries"];
10->8 [style = dotted, label="true"];
7->2 [style = bold, label=""];
1->6 [style = bold, label=""];
6->3 [style = bold, label=""];
8->10 [style = bold, label=""];
11->2 [style = bold, label=""];
2->12 [style = bold, label=""];
5->13 [style = bold, label=""];
10->9 [style = bold, label=""];
5->1 [style = bold, label=""];
}
