digraph {
7 [style = filled, label = "client.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.fail()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "{}@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "SessionFailRetryLoop retryLoop = client.newSessionFailRetryLoop(SessionFailRetryLoop.Mode.FAIL)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testBasic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{}@@@31@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Exception e@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SessionFailRetryLoop.callWithRetry(client,SessionFailRetryLoop.Mode.FAIL,new Callable<Object>(){@Override public Object call(){RetryLoop.callWithRetry(client,new Callable<Void>(){@Override public Void call(){Assert.assertNull(client.getZooKeeper().exists(\"/foo/bar\",false))KillSession.kill(client.getZooKeeper(),server.getConnectString())client.getZooKeeper()client.blockUntilConnectedOrTimedOut()Assert.assertNull(client.getZooKeeper().exists(\"/foo/bar\",false))return null}})return null}})@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "{}@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "retryLoop.takeException(e)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SessionFailRetryLoop.SessionFailedException dummy@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Timing timing = new Timing()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testBasic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "retryLoop.shouldContinue()@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Timing timing = new Timing()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RetryLoop.callWithRetry(client,new Callable<Void>(){@Override public Void call(){Assert.assertNull(client.getZooKeeper().exists(\"/foo/bar\",false))KillSession2.kill(client.getZooKeeper())timing.sleepABit()client.getZooKeeper()client.blockUntilConnectedOrTimedOut()Assert.assertNull(client.getZooKeeper().exists(\"/foo/bar\",false))return null}})@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final CuratorZookeeperClient client = new CuratorZookeeperClient(server.getConnectString(),timing.session(),timing.connection(),null,new ExponentialBackoffRetry(100,3))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testBasicStatic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "{retryLoop.close()CloseableUtils.closeQuietly(client)}@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "retryLoop.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
13->10 [style = bold, label=""];
16->3 [style = bold, label=""];
18->3 [style = bold, label=""];
1->4 [style = bold, label=""];
7->11 [style = bold, label=""];
11->16 [style = dashed, label="0"];
12->15 [style = bold, label=""];
19->10 [style = bold, label=""];
11->5 [style = dotted, label="true"];
13->19 [style = dashed, label="0"];
11->9 [style = bold, label=""];
15->3 [style = bold, label=""];
12->0 [style = bold, label=""];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
2->13 [style = bold, label=""];
11->5 [style = bold, label=""];
6->8 [style = dotted, label="true"];
10->5 [style = solid, label="client"];
7->16 [style = bold, label=""];
6->8 [style = bold, label=""];
12->18 [style = bold, label=""];
10->3 [style = solid, label="client"];
9->3 [style = bold, label=""];
5->11 [style = bold, label=""];
14->13 [style = bold, label=""];
10->1 [style = bold, label=""];
8->11 [style = bold, label=""];
10->16 [style = solid, label="client"];
}
