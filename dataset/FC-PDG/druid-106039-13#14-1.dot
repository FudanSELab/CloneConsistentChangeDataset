digraph {
8 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"countryNumber\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91168c))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#de.wikipedia\"),new InDimFilter(\"countryIsoCode\",ImmutableSet.of(\"DE\"),null,null).toFilter())),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"Germany\"),ImmutableSet.of())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "test_filterPushDown_factToCountryRightWithFilterOnChannelAndJoinable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "test_filterPushDown_factToCountryFullWithFilterOnChannelAndCountryName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(joinableClauses,filter)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#de.wikipedia\"),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"Germany\")))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(filter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"countryNumber\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryIsoCode\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryNumber\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@91175f))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(originalFilter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(joinableClauses,originalFilter)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Filter filter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#es.wikipedia\"),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"El Salvador\")))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.FULL))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#de.wikipedia\"),new InDimFilter(\"countryIsoCode\",ImmutableSet.of(\"DE\"),null,null).toFilter())),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"Germany\"),ImmutableSet.of())@@@10@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "test_filterPushDown_factToCountryRightWithFilterOnChannelAndJoinable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",\"#es.wikipedia\"),new InDimFilter(\"countryIsoCode\",ImmutableSet.of(\"SV\"),null,null).toFilter())),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"countryName\",\"El Salvador\"),ImmutableSet.of())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryOnIsoCode(JoinType.RIGHT))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->14 [style = bold, label=""];
0->2 [style = solid, label="joinableClauses"];
16->18 [style = bold, label=""];
2->19 [style = dashed, label="0"];
18->19 [style = solid, label="joinableClauses"];
18->1 [style = solid, label="joinableClauses"];
2->8 [style = solid, label="joinFilterPreAnalysis"];
2->1 [style = bold, label=""];
6->21 [style = bold, label=""];
4->5 [style = solid, label="originalFilter"];
14->10 [style = solid, label="joinFilterPreAnalysisGroup"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
18->19 [style = bold, label=""];
14->10 [style = bold, label=""];
5->15 [style = bold, label=""];
1->20 [style = bold, label=""];
20->6 [style = solid, label="expectedFilterSplit"];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
4->2 [style = bold, label=""];
1->10 [style = dashed, label="0"];
0->1 [style = solid, label="joinableClauses"];
2->1 [style = solid, label="joinFilterPreAnalysis"];
16->21 [style = solid, label="filter"];
19->1 [style = solid, label="joinFilterPreAnalysis"];
6->5 [style = bold, label=""];
19->1 [style = bold, label=""];
20->8 [style = bold, label=""];
0->10 [style = solid, label="joinableClauses"];
4->14 [style = solid, label="originalFilter"];
4->9 [style = solid, label="originalFilter"];
2->14 [style = dashed, label="0"];
0->4 [style = bold, label=""];
12->11 [style = solid, label="actualFilterSplit"];
3->8 [style = bold, label=""];
3->20 [style = dashed, label="0"];
15->12 [style = solid, label="joinFilterPreAnalysis"];
5->11 [style = solid, label="expectedFilterSplit"];
16->19 [style = solid, label="filter"];
9->5 [style = bold, label=""];
3->6 [style = solid, label="expectedFilterSplit"];
5->21 [style = dashed, label="0"];
10->9 [style = bold, label=""];
15->12 [style = bold, label=""];
4->2 [style = solid, label="originalFilter"];
8->6 [style = solid, label="actualFilterSplit"];
0->14 [style = solid, label="joinableClauses"];
17->16 [style = bold, label=""];
19->8 [style = solid, label="joinFilterPreAnalysis"];
13->0 [style = bold, label=""];
}
