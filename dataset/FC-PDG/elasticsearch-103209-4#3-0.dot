digraph {
0 [style = filled, label = "assertEquals(\"Invalid (path( value (non-existent( for field alias (invalid-alias(: an alias\" + \" must refer to an existing field in the mappings.\",e.getMessage())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FieldAliasMapper invalidAlias = new FieldAliasMapper(\"invalid-alias\",\"invalid-alias\",\"non-existent\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "MapperParsingException e = expectThrows(,null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testAliasThatRefersToItself['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"Invalid (path( value (invalid-alias( for field alias (invalid-alias(: an alias\" + \" cannot refer to itself.\",e.getMessage())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testAliasWithNonExistentPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "FieldAliasMapper invalidAlias = new FieldAliasMapper(\"invalid-alias\",\"invalid-alias\",\"invalid-alias\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testAliasWithNonExistentPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3->1 [style = bold, label=""];
2->0 [style = bold, label=""];
1->6 [style = dashed, label="0"];
0->7 [style = dashed, label="0"];
6->2 [style = bold, label=""];
1->2 [style = bold, label=""];
2->7 [style = bold, label=""];
5->6 [style = bold, label=""];
4->1 [style = bold, label=""];
}
