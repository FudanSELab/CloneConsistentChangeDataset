digraph {
4 [style = filled, label = "return MockMessagingService.when(all(verb(Verb.REPAIR_REQ),payload(null))).respond(null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "return MockMessagingService.when(all(verb(Verb.REPAIR_REQ),payload(null))).respond(null)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Collection<InetAddressAndPort> timeout@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "createFinalizeSpy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Collection<InetAddressAndPort> timeout@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createPrepareSpy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "return MockMessagingService.when(verb(Verb.PREPARE_CONSISTENT_REQ)).respond(null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Collection<InetAddressAndPort> failed@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Collection<InetAddressAndPort> failed@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Collection<InetAddressAndPort> failed@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Collection<InetAddressAndPort> timeout@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "createPrepareSpy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Function<PrepareConsistentRequest,UUID> sessionIdFunc@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
2->3 [style = dotted, label="true"];
4->9 [style = dashed, label="0"];
7->6 [style = dotted, label="true"];
10->9 [style = bold, label=""];
10->12 [style = dotted, label="true"];
2->0 [style = dotted, label="true"];
3->12 [style = dashed, label="0"];
10->11 [style = dotted, label="true"];
7->3 [style = dotted, label="true"];
2->1 [style = dotted, label="true"];
2->4 [style = bold, label=""];
7->8 [style = bold, label=""];
4->8 [style = dashed, label="0"];
7->5 [style = dotted, label="true"];
}
