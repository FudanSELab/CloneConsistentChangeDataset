digraph {
8 [style = filled, label = "ConstantFloatValue val = new ConstantFloatValue(24F)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(24.0,val.getDouble(),.00001)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "counter.setValue(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(new Float(24F),val.getObject())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "assertEquals(new Double(24.0),val.getObject())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "val.streamObjects(null)@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(24F,val.getFloat(),.00001)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "counter.setValue(0)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "constantDoubleTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "counter.setValue(0)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "val.streamDoubles(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "constantFloatTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(val.exists())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "counter.setValue(0)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "TestIntValue counter = new TestIntValue()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "val.streamStrings(null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ConstantDoubleValue val = new ConstantDoubleValue(24.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"24.0\",val.getString())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "val.streamFloats(null)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "constantFloatTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(24F,val.getObject())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->3 [style = bold, label=""];
17->8 [style = bold, label=""];
18->3 [style = bold, label=""];
12->16 [style = dashed, label="0"];
7->12 [style = bold, label=""];
2->6 [style = bold, label=""];
19->20 [style = bold, label=""];
8->20 [style = dashed, label="0"];
0->11 [style = bold, label=""];
2->10 [style = bold, label=""];
11->9 [style = bold, label=""];
10->6 [style = bold, label=""];
3->0 [style = bold, label=""];
20->2 [style = bold, label=""];
5->1 [style = bold, label=""];
8->2 [style = bold, label=""];
7->16 [style = bold, label=""];
15->4 [style = bold, label=""];
9->5 [style = bold, label=""];
7->18 [style = bold, label=""];
12->18 [style = dashed, label="0"];
1->14 [style = bold, label=""];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
13->8 [style = bold, label=""];
6->7 [style = bold, label=""];
0->5 [style = bold, label=""];
}
