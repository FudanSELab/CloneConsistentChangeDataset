digraph {
3 [style = filled, label = "BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.red)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.BLUE)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.RED)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertTrue(b1.equals(b2))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(b1,b2)@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.blue)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.BLUE)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.red)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertTrue(b1.equals(b2))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(b1.equals(b2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.red)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "assertFalse(b1.equals(b2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(b1.equals(b2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(b2.equals(b2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BlockBorder b2 = (BlockBorder)TestUtilities.serialised(b1)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "BlockBorder b2 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.RED)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "BlockBorder b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(1.0,2.0,3.0,4.0),Color.blue)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.red)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "b2 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.RED)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "b1 = new BlockBorder(new RectangleInsets(UnitType.RELATIVE,1.0,2.0,3.0,4.0),Color.RED)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
4->10 [style = bold, label=""];
16->4 [style = solid, label="b2"];
23->20 [style = bold, label=""];
10->15 [style = bold, label=""];
19->5 [style = solid, label="b2"];
20->22 [style = solid, label="b1"];
11->15 [style = dashed, label="0"];
0->17 [style = bold, label=""];
1->12 [style = solid, label="b2"];
22->21 [style = bold, label=""];
3->6 [style = bold, label=""];
17->2 [style = solid, label="b2"];
4->21 [style = dashed, label="0"];
12->7 [style = bold, label=""];
6->22 [style = dashed, label="0"];
20->22 [style = bold, label=""];
2->13 [style = bold, label=""];
8->13 [style = dashed, label="0"];
16->0 [style = solid, label="b2"];
19->5 [style = bold, label=""];
16->10 [style = solid, label="b2"];
6->4 [style = bold, label=""];
7->5 [style = bold, label=""];
11->0 [style = bold, label=""];
7->5 [style = solid, label="b2"];
13->12 [style = bold, label=""];
22->21 [style = solid, label="b2"];
6->16 [style = dashed, label="0"];
6->0 [style = solid, label="b2"];
17->2 [style = bold, label=""];
1->17 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
0->1 [style = bold, label=""];
15->0 [style = bold, label=""];
3->20 [style = dashed, label="0"];
6->4 [style = solid, label="b2"];
9->3 [style = bold, label=""];
20->21 [style = solid, label="b1"];
1->2 [style = bold, label=""];
17->12 [style = solid, label="b2"];
6->10 [style = solid, label="b2"];
16->4 [style = bold, label=""];
12->19 [style = bold, label=""];
3->14 [style = dashed, label="0"];
18->14 [style = bold, label=""];
8->12 [style = bold, label=""];
2->8 [style = bold, label=""];
1->2 [style = solid, label="b2"];
10->11 [style = bold, label=""];
}
