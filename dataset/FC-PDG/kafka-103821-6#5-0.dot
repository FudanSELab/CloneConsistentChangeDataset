digraph {
18 [style = filled, label = "TestUtils.assertFutureThrows(resultIds.values().get(topicId3),)@@@29@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ThrottlingQuotaExceededException e = TestUtils.assertFutureThrows(result.values().get(\"topic2\"),)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "time.sleep(defaultApiTimeout + 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "e = TestUtils.assertFutureThrows(resultIds.values().get(topicId2),)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "CreateTopicsResult result = env.adminClient().createTopics(asList(new NewTopic(\"topic1\",1,(short)1),new NewTopic(\"topic2\",1,(short)1),new NewTopic(\"topic3\",1,(short)1)),new CreateTopicsOptions().retryOnQuotaViolation(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Uuid topicId3 = Uuid.randomUuid()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "testDeleteTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeOut['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "DeleteTopicsResult result = env.adminClient().deleteTopics(asList(\"topic1\",\"topic2\",\"topic3\"),new DeleteTopicsOptions().retryOnQuotaViolation(true))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "MockTime time = new MockTime()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopics(\"topic2\"),prepareDeleteTopicsResponse(1000,deletableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "DeleteTopicsWithIdsResult resultIds = env.adminClient().deleteTopicsWithIds(asList(topicId1,topicId2,topicId3),new DeleteTopicsOptions().retryOnQuotaViolation(true))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "TestUtils.assertFutureThrows(result.values().get(\"topic3\"),)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting next DeleteTopics request\")@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopicIds(topicId1,topicId2,topicId3),prepareDeleteTopicsResponse(1000,deletableTopicResultWithId(topicId1,Errors.NONE),deletableTopicResultWithId(topicId2,Errors.THROTTLING_QUOTA_EXCEEDED),deletableTopicResultWithId(topicId3,Errors.UNKNOWN_TOPIC_ID)))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting DeleteTopics requests\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "env.kafkaClient().prepareResponse(expectCreateTopicsRequestWithTopics(\"topic2\"),prepareCreateTopicsResponse(1000,creatableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED)))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNull(result.values().get(\"topic1\").get())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting DeleteTopics requests\")@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting next DeleteTopics request\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "long defaultApiTimeout = 60000@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "env.kafkaClient().prepareResponse(expectCreateTopicsRequestWithTopics(\"topic1\",\"topic2\",\"topic3\"),prepareCreateTopicsResponse(1000,creatableTopicResult(\"topic1\",Errors.NONE),creatableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED),creatableTopicResult(\"topic3\",Errors.TOPIC_ALREADY_EXISTS)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "env.kafkaClient().setNodeApiVersions(NodeApiVersions.create())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting CreateTopics requests\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testDeleteTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeOut['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopics(\"topic1\",\"topic2\",\"topic3\"),prepareDeleteTopicsResponse(1000,deletableTopicResult(\"topic1\",Errors.NONE),deletableTopicResult(\"topic2\",Errors.THROTTLING_QUOTA_EXCEEDED),deletableTopicResult(\"topic3\",Errors.TOPIC_ALREADY_EXISTS)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "time.sleep(defaultApiTimeout + 1)@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(0,e.throttleTimeMs())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TestUtils.waitForCondition(null,\"Failed awaiting next CreateTopics request\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Uuid topicId1 = Uuid.randomUuid()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(0,e.throttleTimeMs())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "env.kafkaClient().prepareResponse(expectDeleteTopicsRequestWithTopicIds(topicId2),prepareDeleteTopicsResponse(1000,deletableTopicResultWithId(topicId2,Errors.THROTTLING_QUOTA_EXCEEDED)))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Uuid topicId2 = Uuid.randomUuid()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertNull(resultIds.values().get(topicId1).get())@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testCreateTopicsRetryThrottlingExceptionWhenEnabledUntilRequestTimeOut['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24->21 [style = bold, label=""];
11->25 [style = bold, label=""];
7->28 [style = bold, label=""];
26->22 [style = bold, label=""];
25->24 [style = solid, label="topicId1"];
32->9 [style = bold, label=""];
16->24 [style = solid, label="topicId2"];
25->15 [style = solid, label="topicId1"];
33->31 [style = bold, label=""];
4->28 [style = dashed, label="0"];
12->2 [style = bold, label=""];
6->11 [style = bold, label=""];
14->18 [style = solid, label="topicId3"];
27->0 [style = bold, label=""];
13->6 [style = bold, label=""];
15->19 [style = bold, label=""];
3->31 [style = dashed, label="0"];
19->24 [style = bold, label=""];
22->20 [style = bold, label=""];
0->1 [style = bold, label=""];
14->15 [style = solid, label="topicId3"];
10->3 [style = bold, label=""];
29->0 [style = bold, label=""];
16->15 [style = solid, label="topicId2"];
2->9 [style = bold, label=""];
5->0 [style = bold, label=""];
10->33 [style = dashed, label="0"];
25->16 [style = bold, label=""];
16->19 [style = solid, label="topicId2"];
3->12 [style = bold, label=""];
7->4 [style = bold, label=""];
21->26 [style = bold, label=""];
28->33 [style = bold, label=""];
0->9 [style = solid, label="defaultApiTimeout"];
16->14 [style = bold, label=""];
30->32 [style = bold, label=""];
0->22 [style = solid, label="defaultApiTimeout"];
8->13 [style = bold, label=""];
16->17 [style = solid, label="topicId2"];
17->23 [style = bold, label=""];
23->18 [style = bold, label=""];
4->10 [style = bold, label=""];
20->17 [style = bold, label=""];
31->30 [style = bold, label=""];
1->7 [style = bold, label=""];
9->8 [style = bold, label=""];
2->32 [style = dashed, label="0"];
14->15 [style = bold, label=""];
14->24 [style = solid, label="topicId3"];
12->30 [style = dashed, label="0"];
}
