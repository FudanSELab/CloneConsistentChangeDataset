digraph {
11 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(b1,b2)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "b1.setPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.green))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "b2 = (DialBackground)TestUtils.serialised(b1)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertTrue(b1.getClass() == b2.getClass())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "b2.setItemCount(111)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(b1,b2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(b1 != b2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(b1.equals(b2))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "DialBackground b2 = (DialBackground)TestUtilities.serialised(b1)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "DialBackground b2 = (DialBackground)TestUtils.serialised(b1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "SimpleHistogramBin b1 = new SimpleHistogramBin(1.1,2.2,false,true)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(b1.equals(b2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DialBackground b1 = new DialBackground()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "b1.setGradientPaintTransformer(new StandardGradientPaintTransformer(GradientPaintTransformType.CENTER_VERTICAL))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "b1.setItemCount(99)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "SimpleHistogramBin b2 = (SimpleHistogramBin)b1.clone()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "b1 = new DialBackground()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "b2 = (DialBackground)TestUtilities.serialised(b1)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->10 [style = bold, label=""];
15->14 [style = solid, label="b1"];
20->14 [style = solid, label="b2"];
20->17 [style = solid, label="b2"];
19->20 [style = bold, label=""];
0->2 [style = bold, label=""];
6->9 [style = dashed, label="0"];
1->3 [style = bold, label=""];
10->2 [style = solid, label="b2"];
20->14 [style = bold, label=""];
1->0 [style = solid, label="b1"];
7->6 [style = solid, label="b1"];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
9->8 [style = solid, label="b2"];
2->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
0->10 [style = dashed, label="0"];
20->18 [style = solid, label="b2"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
7->8 [style = solid, label="b1"];
3->5 [style = bold, label=""];
1->10 [style = solid, label="b1"];
7->9 [style = solid, label="b1"];
5->0 [style = bold, label=""];
14->12 [style = bold, label=""];
6->8 [style = bold, label=""];
7->6 [style = bold, label=""];
12->18 [style = bold, label=""];
7->15 [style = dashed, label="0"];
10->2 [style = bold, label=""];
13->15 [style = bold, label=""];
0->2 [style = solid, label="b2"];
11->7 [style = bold, label=""];
6->8 [style = solid, label="b2"];
1->2 [style = solid, label="b1"];
18->16 [style = bold, label=""];
}
