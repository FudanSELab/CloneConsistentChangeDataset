digraph {
15 [style = filled, label = "DoubleValue casted = (DoubleValue)val@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "TestLongValue val = new TestLongValue()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(20.0,casted.getDouble(),.00001)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "objectCastingTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(casted.exists())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "val.setValue(20L).setExists(true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "objectCastingTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertTrue(casted.exists())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(val instanceof DoubleValue)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1234.0,casted.getDouble(),.00001)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "AnalyticsValue casted = (AnalyticsValue)val@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(new Long(1234),casted.getObject())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertEquals(20L,casted.getObject())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(1234L,casted.getObject())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "doubleCastingTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "val.setValue(1234L).setExists(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(val instanceof AnalyticsValue)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(new Long(20),casted.getObject())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
8->16 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
17->6 [style = bold, label=""];
6->15 [style = solid, label="val"];
2->6 [style = bold, label=""];
11->6 [style = bold, label=""];
1->10 [style = dashed, label="0"];
5->14 [style = bold, label=""];
0->12 [style = dashed, label="0"];
9->8 [style = bold, label=""];
6->13 [style = solid, label="val"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
0->14 [style = dashed, label="0"];
5->0 [style = bold, label=""];
5->12 [style = bold, label=""];
1->16 [style = dashed, label="0"];
6->9 [style = solid, label="val"];
6->13 [style = bold, label=""];
7->13 [style = dashed, label="0"];
10->4 [style = bold, label=""];
6->7 [style = solid, label="val"];
12->3 [style = bold, label=""];
13->15 [style = bold, label=""];
16->4 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
9->15 [style = dashed, label="0"];
}
