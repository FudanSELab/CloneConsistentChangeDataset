digraph {
39 [style = filled, label = "MessageOutput messageOutput = event.getAttribute(AttributeName.MESSAGES_SELECTED.name())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "Assert.assertTrue(message.getRelayMessages().entrySet().isEmpty())@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "String newMasterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "clusterConfig.enableP2PMessage(true)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "preSetup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_fullPipeline.addStage(new ReadClusterDataStage())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "event.addAttribute(AttributeName.ClusterDataCache.name(),_dataCache)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "admin.enableInstance(_clusterName,masterInstance,false)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "_fullPipeline = new Pipeline(\"FullPipeline\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "preSetup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "_fullPipeline.addStage(new BestPossibleStateCalcStage())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "_messagePipeline = new Pipeline(\"MessagePipeline\")@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(relayMessage.getToState(),MasterSlaveSMD.States.MASTER.name())@@@40@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "cache.notifyDataChange(HelixConstants.ChangeType.INSTANCE_CONFIG)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "pipeline.handle(event)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Map<String,Resource> resourceMap = getResourceMap(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@684b97,numPartition,BuiltInStateModelDefinitions.MasterSlave.name(),clusterConfig,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "setupLiveInstances(3)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "String masterInstance = getTopStateInstance(bestPossibleStateOutput.getInstanceStateMap(db,p),MasterSlaveSMD.States.MASTER.name())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Assert.assertEquals(relayMessage.getMsgSubType(),Message.MessageType.RELAYED_MESSAGE.name())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),currentStateOutput)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Message relayMessage = message.getRelayMessage(newMasterInstance)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES_TO_REBALANCE.name(),resourceMap)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "_fullPipeline.addStage(new MessageGenerationPhase())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "setupIdealState(3,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@684ab7,_numPartition,_numReplica,IdealState.RebalanceMode.SEMI_AUTO,BuiltInStateModelDefinitions.MasterSlave.name())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assert.assertNotNull(relayMessage)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "event.addAttribute(AttributeName.CURRENT_STATE.name(),new CurrentStateOutput())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "_dataCache.setAsyncTasksThreadPool(Executors.newSingleThreadExecutor())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertEquals(relayMessage.getRelaySrcHost(),masterInstance)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "_messagePipeline.addStage(new MessageGenerationPhase())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "Message message = messages.get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "Assert.assertNotNull(masterInstance)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Pipeline pipeline = createPipeline()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "event.addAttribute(AttributeName.helixmanager.name(),manager)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "_dataCache = new ClusterDataCache()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Assert.assertEquals(relayMessage.getFromState(),MasterSlaveSMD.States.SLAVE.name())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "p2pMessageEnabled@@@31@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertEquals(message.getRelayMessages().entrySet().size(),1)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "BestPossibleStateOutput bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "_fullPipeline.handle(event)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "_fullPipeline.addStage(new MessageSelectionStage())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "_messagePipeline.addStage(new MessageThrottleStage())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "_bestpossibleState = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "List<Message> messages = messageOutput.getMessages(db,p)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "_fullPipeline.addStage(new ResourceMessageGenerationPhase())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "CurrentStateOutput currentStateOutput = populateCurrentStateFromBestPossible(bestPossibleStateOutput)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "_messagePipeline.addStage(new MessageSelectionStage())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "Assert.assertEquals(message.getTgtName(),masterInstance)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertEquals(message.getToState(),MasterSlaveSMD.States.SLAVE.name())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "setupStateModel()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "ClusterConfig clusterConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Assert.assertEquals(relayMessage.getTgtName(),newMasterInstance)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "Assert.assertEquals(messages.size(),1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Partition p = new Partition(db + \"_0\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "_fullPipeline.addStage(new MessageThrottleStage())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ClusterConfig clusterConfig = new ClusterConfig(_clusterName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "pipeline = createPipeline()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "setClusterConfig(clusterConfig)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "_messagePipeline.addStage(new ResourceMessageGenerationPhase())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Boolean p2pMessageEnabled@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "testP2PMessage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "pipeline.handle(event)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "event.addAttribute(AttributeName.RESOURCES.name(),resourceMap)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "bestPossibleStateOutput = event.getAttribute(AttributeName.BEST_POSSIBLE_STATE.name())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "setupInstances(3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "_fullPipeline.addStage(new IntermediateStateCalcStage())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertEquals(message.getFromState(),MasterSlaveSMD.States.MASTER.name())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ClusterDataCache cache = event.getAttribute(AttributeName.ClusterDataCache.name())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->49 [style = bold, label=""];
6->22 [style = bold, label=""];
57->33 [style = bold, label=""];
54->63 [style = bold, label=""];
61->57 [style = bold, label=""];
59->62 [style = bold, label=""];
15->60 [style = dashed, label="0"];
25->14 [style = bold, label=""];
19->7 [style = dashed, label="0"];
26->11 [style = bold, label=""];
25->59 [style = bold, label=""];
51->54 [style = solid, label="p"];
21->2 [style = solid, label="clusterConfig"];
66->64 [style = bold, label=""];
15->0 [style = bold, label=""];
53->32 [style = bold, label=""];
33->48 [style = bold, label=""];
35->45 [style = bold, label=""];
17->27 [style = bold, label=""];
2->25 [style = bold, label=""];
26->29 [style = dashed, label="0"];
16->3 [style = bold, label=""];
24->28 [style = bold, label=""];
32->65 [style = solid, label="resourceMap"];
25->24 [style = solid, label="resourceMap"];
1->4 [style = bold, label=""];
48->37 [style = bold, label=""];
21->25 [style = solid, label="clusterConfig"];
9->2 [style = bold, label=""];
51->54 [style = bold, label=""];
37->58 [style = bold, label=""];
16->25 [style = dashed, label="0"];
54->35 [style = solid, label="masterInstance"];
54->33 [style = solid, label="masterInstance"];
58->47 [style = dotted, label="true"];
32->46 [style = solid, label="resourceMap"];
25->59 [style = solid, label="bestPossibleStateOutput"];
10->7 [style = bold, label=""];
11->18 [style = bold, label=""];
46->41 [style = bold, label=""];
60->55 [style = bold, label=""];
21->9 [style = bold, label=""];
55->25 [style = bold, label=""];
43->47 [style = bold, label=""];
14->12 [style = solid, label="_dataCache"];
53->38 [style = dotted, label="true"];
58->40 [style = dotted, label="true"];
39->42 [style = bold, label=""];
51->42 [style = solid, label="p"];
65->46 [style = bold, label=""];
27->8 [style = bold, label=""];
3->29 [style = bold, label=""];
29->11 [style = bold, label=""];
42->61 [style = bold, label=""];
7->66 [style = bold, label=""];
0->16 [style = bold, label=""];
44->56 [style = bold, label=""];
58->43 [style = bold, label=""];
62->51 [style = bold, label=""];
47->40 [style = bold, label=""];
58->56 [style = dotted, label="true"];
49->44 [style = bold, label=""];
45->36 [style = bold, label=""];
3->26 [style = bold, label=""];
53->50 [style = dotted, label="true"];
54->24 [style = solid, label="masterInstance"];
12->24 [style = bold, label=""];
20->1 [style = bold, label=""];
27->31 [style = dashed, label="0"];
54->63 [style = solid, label="masterInstance"];
63->24 [style = bold, label=""];
56->35 [style = bold, label=""];
58->52 [style = dotted, label="false"];
47->56 [style = solid, label="newMasterInstance"];
25->28 [style = solid, label="resourceMap"];
13->19 [style = bold, label=""];
40->49 [style = solid, label="relayMessage"];
58->49 [style = dotted, label="true"];
51->47 [style = solid, label="p"];
38->58 [style = solid, label="p2pMessageEnabled"];
7->15 [style = bold, label=""];
31->8 [style = bold, label=""];
41->34 [style = bold, label=""];
50->32 [style = solid, label="clusterConfig"];
8->13 [style = bold, label=""];
14->5 [style = bold, label=""];
47->40 [style = solid, label="newMasterInstance"];
28->10 [style = bold, label=""];
30->1 [style = bold, label=""];
58->43 [style = dotted, label="true"];
4->6 [style = bold, label=""];
17->31 [style = bold, label=""];
58->36 [style = dotted, label="true"];
22->21 [style = bold, label=""];
18->17 [style = bold, label=""];
32->65 [style = bold, label=""];
64->39 [style = bold, label=""];
58->35 [style = dotted, label="true"];
58->44 [style = dotted, label="true"];
34->60 [style = bold, label=""];
5->12 [style = bold, label=""];
19->23 [style = bold, label=""];
58->45 [style = dotted, label="true"];
58->52 [style = bold, label=""];
59->62 [style = solid, label="currentStateOutput"];
}
