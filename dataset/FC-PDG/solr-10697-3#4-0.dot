digraph {
11 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\",\"s_multi\",\"aaaa\",\"s_multi\",\"bbbb\",\"i_multi\",\"4\",\"i_multi\",\"7\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\",\"s_multi\",\"aaaa1\",\"s_multi\",\"bbbb1\",\"i_multi\",\"44\",\"i_multi\",\"77\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\",\"s_multi\",\"aaaa2\",\"s_multi\",\"bbbb2\",\"i_multi\",\"444\",\"i_multi\",\"777\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\",\"s_multi\",\"aaaa3\",\"s_multi\",\"bbbb3\",\"i_multi\",\"4444\",\"i_multi\",\"7777\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\",\"s_multi\",\"aaaa4\",\"s_multi\",\"bbbb4\",\"i_multi\",\"44444\",\"i_multi\",\"77777\").commit(cluster.getSolrClient(),\"collection1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "Tuple tuple = tuples.get(0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "stopTime == 0@@@69@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
107 [style = filled, label = "Exception e@@@87@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
106 [style = filled, label = "solrStream.close()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "StreamExpression expression@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "tuples = getTuples(stream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "int workersComplete = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "sParams = new ModifiableSolrParams()@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "solrStream.close()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "solrStream.open()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "testCommitStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "workersComplete = 0@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Thread.sleep(1000)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "t = tuples.get(0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Exception e@@@42@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"destinationCollection\",cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
110 [style = filled, label = "String updateExpression = \"daemon(update(parallelDestinationCollection1, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\")), runInterval=\"1000\", id=\"test\")\"@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "assertEquals(5,t.get(\"batchIndexed\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
142 [style = filled, label = "assert(t.EOF == false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 2)@@@117@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@103@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "iterations = (int)l@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "stream = factory.constructStream(expression)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "++workersComplete@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TupleStream parallelUpdateStream = factory.constructStream(\"parallel(collection1, \" + updateExpression + \", workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"batchNumber asc\")\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "solrStream.close()@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "stopTime = tupleResponse.getLong(\"stopTime\")@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "sParams.set(\"action\",\"stop\")@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "tuple = tuples.get(3)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
159 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "solrStream.open()@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tuple = tuples.get(3)@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa1\",\"bbbb1\")@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@109@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "Tuple t@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "solrStream.close()@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "tuple = tuples.get(2)@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "sParams = new ModifiableSolrParams()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 3.0)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
151 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"destinationCollection\").process(cluster.getSolrClient())solrClientCache.close()}@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "{}@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
132 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello3\"))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "tupleResponse.EOF@@@74@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa\",\"bbbb\")@@@105@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "tuple = tuples.get(4)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
134 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"destinationCollection\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"commit\",)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assert(tuples.size() == 2)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "sParams.set(\"action\",\"list\")@@@65@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44444\"),Long.parseLong(\"77777\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 4.0)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "List<Tuple> tuples = getTuples(stream)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
140 [style = filled, label = "stream.setStreamContext(streamContext)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
124 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
120 [style = filled, label = "tuple = tuples.get(2)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@101@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "sParams.set(\"id\",\"test\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "cluster.getSolrClient().commit(\"parallelDestinationCollection1\")@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "CollectionAdminRequest.createCollection(\"parallelDestinationCollection1\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "tuples = getTuples(stream)@@@98@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"444\"),Long.parseLong(\"777\"))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Exception e@@@87@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "Tuple tupleResponse = solrStream.read()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "parallelUpdateStream.setStreamContext(streamContext)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@122@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "tupleResponse.EOF@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa3\",\"bbbb3\")@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
150 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "{CollectionAdminRequest.deleteCollection(\"parallelDestinationCollection1\").process(cluster.getSolrClient())solrClientCache.close()}@@@136@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@104@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "{}@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 3)@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "tuple = tuples.get(1)@@@107@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa4\",\"bbbb4\")@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "expression = StreamExpressionParser.parse(\"commit(destinationCollection, batchSize=2, update(destinationCollection, batchSize=5, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\")))\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "solrStream.close()@@@75@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "AbstractDistribZkTestBase.waitForRecoveriesToFinish(\"parallelDestinationCollection1\",cluster.getSolrClient().getZkStateReader(),false,true,TIMEOUT)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "String updateExpression = \"daemon(update(parallelDestinationCollection1, batchSize=2, search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\")), runInterval=\"1000\", id=\"test\")\"@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
152 [style = filled, label = "assertEquals(5,tuples.size())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 0.0)@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "tuple = tuples.get(1)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
156 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 4)@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "assert(tuples.size() == 1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
127 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
138 [style = filled, label = "stream.setStreamContext(streamContext)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "long stopTime = 0@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello4\"))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "Tuple tuple = tuples.get(0)@@@100@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4\"),Long.parseLong(\"7\"))@@@106@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello2\"))@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withCollectionZkHost(\"parallelDestinationCollection1\",cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"update\",).withFunctionName(\"parallel\",).withFunctionName(\"daemon\",)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "l > 0@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(5,tuples.size())@@@99@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "solrStream.setStreamContext(streamContext)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello1\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(cluster.getJettySolrRunners().size(),workersComplete)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "solrStream.open()@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ModifiableSolrParams sParams = new ModifiableSolrParams(StreamingTest.mapParams(CommonParams.QT,\"/stream\",\"action\",\"list\"))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "sParams.set(CommonParams.QT,\"/stream\")@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "iterations == 0@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "++workersComplete@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
157 [style = filled, label = "assert(tuple.getLong(\"id\") == 0)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl() + \"/collection1\",sParams)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assert(tuple.getLong(\"id\") == 2)@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "TupleStream stream@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "testParallelDaemonUpdateStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
115 [style = filled, label = "assert(tuple.getDouble(\"a_f\") == 1.0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "List<Tuple> tuples = getTuples(parallelUpdateStream)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
113 [style = filled, label = "assert(tuple.getLong(\"id\") == 3)@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
160 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 0)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testParallelDaemonUpdateStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@96@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "long l = tupleResponse.getLong(\"iterations\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "stopTime > 0@@@80@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int iterations = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Thread.sleep(1000)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(parallelDestinationCollection1, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"4444\"),Long.parseLong(\"7777\"))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
137 [style = filled, label = "expression = StreamExpressionParser.parse(\"search(destinationCollection, q=*:*, fl=\"id,a_s,a_i,a_f,s_multi,i_multi\", sort=\"a_i asc\")\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
135 [style = filled, label = "CollectionAdminRequest.createCollection(\"destinationCollection\",\"conf\",2,1).process(cluster.getSolrClient())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
162 [style = filled, label = "assert(tuple.getLong(\"id\") == 4)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Exception e@@@42@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "stream.setStreamContext(streamContext)@@@97@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "SolrStream solrStream = new SolrStream(jetty.getBaseUrl().toString() + \"/collection1\",sParams)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertList(tuple.getLongs(\"i_multi\"),Long.parseLong(\"44\"),Long.parseLong(\"77\"))@@@120@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "stream = new CloudSolrStream(expression,factory)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "assert(tuple.getLong(\"a_i\") == 1)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assert(tuple.getLong(\"id\") == 1)@@@108@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assert(tuple.get(\"a_s\").equals(\"hello0\"))@@@102@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
100 [style = filled, label = "assertList(tuple.getStrings(\"s_multi\"),\"aaaa2\",\"bbbb2\")@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "tuple = tuples.get(4)@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
159->122 [style = bold, label=""];
14->24 [style = bold, label=""];
1->69 [style = bold, label=""];
62->14 [style = bold, label=""];
84->1 [style = bold, label=""];
5->91 [style = dotted, label="true"];
123->140 [style = bold, label=""];
156->116 [style = bold, label=""];
66->52 [style = bold, label=""];
99->55 [style = bold, label=""];
85->78 [style = bold, label=""];
105->40 [style = bold, label=""];
19->36 [style = bold, label=""];
102->67 [style = solid, label="solrClientCache"];
137->144 [style = bold, label=""];
33->68 [style = bold, label=""];
71->38 [style = bold, label=""];
21->30 [style = bold, label=""];
18->43 [style = solid, label="sParams"];
147->149 [style = bold, label=""];
104->29 [style = dotted, label="true"];
26->108 [style = bold, label=""];
20->27 [style = bold, label=""];
13->96 [style = solid, label="stream"];
9->26 [style = bold, label=""];
143->150 [style = bold, label=""];
78->41 [style = bold, label=""];
77->106 [style = dotted, label="true"];
153->52 [style = bold, label=""];
104->43 [style = bold, label=""];
93->65 [style = dotted, label="true"];
107->31 [style = bold, label=""];
39->71 [style = solid, label="streamContext"];
65->37 [style = bold, label=""];
87->163 [style = dashed, label="0"];
39->138 [style = solid, label="streamContext"];
39->16 [style = solid, label="streamContext"];
47->103 [style = bold, label=""];
133->147 [style = bold, label=""];
103->82 [style = bold, label=""];
104->43 [style = dotted, label="true"];
80->15 [style = bold, label=""];
73->71 [style = bold, label=""];
140->125 [style = bold, label=""];
57->53 [style = solid, label="workersComplete"];
87->110 [style = dashed, label="0"];
126->131 [style = bold, label=""];
22->55 [style = solid, label="parallelUpdateStream"];
46->50 [style = bold, label=""];
157->127 [style = bold, label=""];
68->58 [style = dotted, label="false"];
104->33 [style = dotted, label="true"];
43->44 [style = bold, label=""];
101->13 [style = bold, label=""];
27->2 [style = bold, label=""];
28->97 [style = solid, label="sParams"];
55->60 [style = bold, label=""];
16->3 [style = bold, label=""];
81->37 [style = bold, label=""];
146->142 [style = bold, label=""];
24->59 [style = bold, label=""];
148->157 [style = bold, label=""];
10->61 [style = bold, label=""];
109->98 [style = bold, label=""];
55->125 [style = dashed, label="0"];
122->118 [style = bold, label=""];
92->85 [style = bold, label=""];
113->143 [style = bold, label=""];
68->23 [style = dotted, label="false"];
12->11 [style = bold, label=""];
60->119 [style = dashed, label="0"];
104->41 [style = bold, label=""];
4->137 [style = dashed, label="0"];
129->162 [style = bold, label=""];
21->25 [style = bold, label=""];
5->3 [style = dotted, label="true"];
2->73 [style = bold, label=""];
51->94 [style = bold, label=""];
101->13 [style = solid, label="expression"];
5->97 [style = dotted, label="true"];
111->161 [style = bold, label=""];
66->153 [style = dashed, label="0"];
87->22 [style = solid, label="updateExpression"];
18->92 [style = bold, label=""];
142->145 [style = bold, label=""];
134->144 [style = solid, label="factory"];
104->68 [style = dotted, label="true"];
98->135 [style = dashed, label="0"];
97->16 [style = bold, label=""];
40->95 [style = bold, label=""];
68->54 [style = dotted, label="true"];
11->76 [style = bold, label=""];
96->90 [style = bold, label=""];
82->64 [style = bold, label=""];
119->146 [style = bold, label=""];
131->120 [style = bold, label=""];
79->37 [style = solid, label="l"];
21->30 [style = dotted, label="true"];
34->89 [style = bold, label=""];
5->53 [style = bold, label=""];
68->21 [style = dotted, label="false"];
26->37 [style = bold, label=""];
95->45 [style = bold, label=""];
160->111 [style = bold, label=""];
137->144 [style = solid, label="expression"];
67->134 [style = bold, label=""];
123->125 [style = solid, label="stream"];
39->44 [style = solid, label="streamContext"];
90->62 [style = bold, label=""];
128->112 [style = bold, label=""];
100->63 [style = bold, label=""];
112->151 [style = bold, label=""];
0->31 [style = bold, label=""];
104->35 [style = bold, label=""];
67->10 [style = bold, label=""];
69->74 [style = bold, label=""];
74->75 [style = bold, label=""];
54->35 [style = bold, label=""];
89->48 [style = bold, label=""];
125->119 [style = bold, label=""];
161->158 [style = bold, label=""];
72->32 [style = bold, label=""];
4->5 [style = solid, label="iterations"];
39->102 [style = bold, label=""];
117->136 [style = bold, label=""];
44->29 [style = bold, label=""];
7->56 [style = bold, label=""];
41->104 [style = solid, label="stopTime"];
141->156 [style = bold, label=""];
93->81 [style = dotted, label="true"];
106->53 [style = bold, label=""];
93->65 [style = bold, label=""];
17->98 [style = bold, label=""];
58->21 [style = solid, label="stopTime"];
162->141 [style = bold, label=""];
70->19 [style = bold, label=""];
135->153 [style = bold, label=""];
134->163 [style = bold, label=""];
77->79 [style = dotted, label="false"];
87->22 [style = bold, label=""];
102->67 [style = bold, label=""];
152->148 [style = bold, label=""];
118->129 [style = bold, label=""];
63->84 [style = bold, label=""];
139->152 [style = bold, label=""];
61->87 [style = bold, label=""];
48->46 [style = bold, label=""];
21->25 [style = dotted, label="true"];
83->100 [style = bold, label=""];
77->106 [style = bold, label=""];
144->138 [style = bold, label=""];
38->80 [style = bold, label=""];
121->133 [style = bold, label=""];
35->101 [style = bold, label=""];
59->105 [style = bold, label=""];
60->28 [style = bold, label=""];
5->4 [style = bold, label=""];
37->88 [style = bold, label=""];
37->5 [style = solid, label="iterations"];
127->160 [style = bold, label=""];
5->16 [style = dotted, label="true"];
115->126 [style = bold, label=""];
39->6 [style = solid, label="streamContext"];
110->22 [style = bold, label=""];
79->93 [style = solid, label="l"];
163->123 [style = bold, label=""];
158->130 [style = bold, label=""];
13->6 [style = bold, label=""];
28->57 [style = bold, label=""];
130->114 [style = bold, label=""];
23->104 [style = bold, label=""];
77->93 [style = dotted, label="false"];
41->104 [style = bold, label=""];
4->5 [style = bold, label=""];
61->13 [style = solid, label="factory"];
8->12 [style = bold, label=""];
57->4 [style = bold, label=""];
110->22 [style = solid, label="updateExpression"];
144->139 [style = solid, label="stream"];
124->121 [style = bold, label=""];
22->99 [style = bold, label=""];
108->37 [style = bold, label=""];
94->20 [style = bold, label=""];
32->86 [style = bold, label=""];
5->77 [style = dotted, label="true"];
75->70 [style = bold, label=""];
49->42 [style = bold, label=""];
42->34 [style = bold, label=""];
31->23 [style = bold, label=""];
56->49 [style = bold, label=""];
53->51 [style = bold, label=""];
154->135 [style = bold, label=""];
58->104 [style = solid, label="stopTime"];
25->23 [style = bold, label=""];
88->5 [style = bold, label=""];
30->23 [style = bold, label=""];
52->72 [style = bold, label=""];
77->37 [style = dotted, label="false"];
145->137 [style = bold, label=""];
114->117 [style = bold, label=""];
136->115 [style = bold, label=""];
61->110 [style = bold, label=""];
93->81 [style = bold, label=""];
6->96 [style = bold, label=""];
15->18 [style = bold, label=""];
163->123 [style = solid, label="expression"];
10->134 [style = dashed, label="0"];
77->79 [style = bold, label=""];
78->35 [style = solid, label="workersComplete"];
64->7 [style = bold, label=""];
76->83 [style = bold, label=""];
77->88 [style = dotted, label="false"];
29->33 [style = bold, label=""];
10->22 [style = solid, label="zkHost"];
155->113 [style = bold, label=""];
132->155 [style = bold, label=""];
98->66 [style = bold, label=""];
149->132 [style = bold, label=""];
45->47 [style = bold, label=""];
3->91 [style = bold, label=""];
50->8 [style = bold, label=""];
39->99 [style = solid, label="streamContext"];
58->21 [style = bold, label=""];
94->73 [style = solid, label="sParams"];
120->124 [style = bold, label=""];
150->159 [style = bold, label=""];
99->140 [style = dashed, label="0"];
86->39 [style = bold, label=""];
79->93 [style = bold, label=""];
91->77 [style = bold, label=""];
68->54 [style = bold, label=""];
5->97 [style = bold, label=""];
15->73 [style = bold, label=""];
138->139 [style = bold, label=""];
39->140 [style = solid, label="streamContext"];
104->44 [style = dotted, label="true"];
116->128 [style = bold, label=""];
68->58 [style = bold, label=""];
}
