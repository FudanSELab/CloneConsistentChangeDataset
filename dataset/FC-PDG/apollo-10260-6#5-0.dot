digraph {
14 [style = filled, label = "verify(someProperties,times(2)).getProperty(someKey)@@@17@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "someProperties.setProperty(someKey,String.valueOf(someValue))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String someKey = \"someKey\"@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtilWithShortExpireTime())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TimeUnit.MILLISECONDS.sleep(50)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Integer anotherValue = 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testGetIntPropertyMultipleTimesWithPropertyChanges['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final Integer someValue = 2@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testGetIntPropertyMultipleTimesWithShortExpireTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "final Integer someDefaultValue = -1@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "someProperties = new Properties()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "defaultConfig.onRepositoryChange(someNamespace,anotherProperties)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Properties anotherProperties = new Properties()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "await().atMost(500,TimeUnit.MILLISECONDS).untilAsserted(new ThrowingRunnable(){@Override public void run(){assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))verify(someProperties,times(2)).getProperty(someKey)}})@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "verify(someProperties,times(1)).getProperty(someKey)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final String someKey = \"someKey\"@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "final DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Integer someValue = 2@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "when(someProperties.getProperty(someKey)).thenReturn(String.valueOf(someValue))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Integer someDefaultValue = -1@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "someProperties = mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "anotherProperties.setProperty(someKey,String.valueOf(anotherValue))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(someValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(anotherValue,defaultConfig.getIntProperty(someKey,someDefaultValue))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
24->28 [style = bold, label=""];
28->29 [style = bold, label=""];
4->9 [style = solid, label="someValue"];
11->0 [style = solid, label="someDefaultValue"];
10->5 [style = solid, label="someKey"];
10->0 [style = solid, label="someKey"];
23->27 [style = bold, label=""];
4->5 [style = solid, label="someValue"];
21->0 [style = solid, label="someDefaultValue"];
10->27 [style = solid, label="someKey"];
26->3 [style = bold, label=""];
1->15 [style = bold, label=""];
1->27 [style = dashed, label="0"];
10->9 [style = solid, label="someKey"];
10->8 [style = solid, label="someKey"];
17->0 [style = solid, label="someKey"];
20->15 [style = solid, label="someValue"];
5->28 [style = solid, label="anotherProperties"];
21->5 [style = solid, label="someDefaultValue"];
3->6 [style = bold, label=""];
11->12 [style = bold, label=""];
17->18 [style = solid, label="someKey"];
16->17 [style = bold, label=""];
11->8 [style = solid, label="someDefaultValue"];
11->5 [style = solid, label="someDefaultValue"];
20->5 [style = solid, label="someValue"];
15->3 [style = bold, label=""];
12->1 [style = bold, label=""];
10->14 [style = solid, label="someKey"];
17->5 [style = solid, label="someKey"];
4->6 [style = solid, label="someValue"];
22->24 [style = solid, label="anotherValue"];
23->26 [style = solid, label="someProperties"];
4->27 [style = solid, label="someValue"];
4->0 [style = solid, label="someValue"];
0->7 [style = bold, label=""];
21->12 [style = bold, label=""];
20->21 [style = bold, label=""];
17->7 [style = solid, label="someKey"];
19->5 [style = bold, label=""];
6->5 [style = bold, label=""];
10->29 [style = solid, label="someKey"];
20->0 [style = solid, label="someValue"];
21->18 [style = solid, label="someDefaultValue"];
22->29 [style = solid, label="anotherValue"];
5->0 [style = bold, label=""];
3->19 [style = bold, label=""];
7->24 [style = dashed, label="0"];
10->6 [style = solid, label="someKey"];
11->9 [style = solid, label="someDefaultValue"];
7->2 [style = bold, label=""];
4->20 [style = dashed, label="0"];
5->24 [style = bold, label=""];
4->15 [style = solid, label="someValue"];
6->19 [style = dashed, label="0"];
8->9 [style = bold, label=""];
9->14 [style = bold, label=""];
10->4 [style = bold, label=""];
7->18 [style = bold, label=""];
1->3 [style = solid, label="someProperties"];
11->29 [style = solid, label="someDefaultValue"];
10->17 [style = dashed, label="0"];
2->18 [style = dashed, label="0"];
25->10 [style = bold, label=""];
11->6 [style = solid, label="someDefaultValue"];
4->11 [style = bold, label=""];
10->7 [style = solid, label="someKey"];
11->23 [style = bold, label=""];
20->18 [style = solid, label="someValue"];
4->22 [style = bold, label=""];
22->11 [style = bold, label=""];
8->29 [style = dashed, label="0"];
10->24 [style = solid, label="someKey"];
2->8 [style = bold, label=""];
4->8 [style = solid, label="someValue"];
17->20 [style = bold, label=""];
27->26 [style = bold, label=""];
11->21 [style = dashed, label="0"];
}
