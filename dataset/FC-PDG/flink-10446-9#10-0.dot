digraph {
5 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "tEnv.executeSql(\"INSERT INTO upsertSink \" + \"SELECT cnt, COUNT(len) AS lencnt, cTag, MAX(ts) AS ts\" + \"FROM (\" + \" SELECT len, COUNT(id) as cnt, cTag, MAX(ts) AS ts\" + \" FROM (SELECT id, CHAR_LENGTH(text) AS len, (CASE WHEN id > 0 THEN 1 ELSE 0 END) cTag, ts FROM T)\" + \" GROUP BY len, cTag\" + \")\" + \"GROUP BY cnt, cTag\").await()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "StreamTableEnvironment tEnv = StreamTableEnvironment.create(env)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "check(new Row((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b945bc,DB_URL,OUTPUT_TABLE1,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b945df)@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE upsertSink (\" + \" cnt BIGINT,\" + \" lencnt BIGINT,\" + \" cTag INT,\" + \" ts TIMESTAMP(3),\" + \" PRIMARY KEY (cnt, cTag) NOT ENFORCED\" + \") WITH (\" + \" 'connector'='jdbc',\" + \" 'url'='\" + DB_URL + \"',\" + \" 'table-name'='\" + OUTPUT_TABLE1 + \"',\" + \" 'sink.buffer-flush.max-rows' = '2',\" + \" 'sink.buffer-flush.interval' = '0'\" + \")\")@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE upsertSink (\" + \" cnt BIGINT,\" + \" lencnt BIGINT,\" + \" cTag INT,\" + \" ts TIMESTAMP(3),\" + \" PRIMARY KEY (cnt, cTag) NOT ENFORCED\" + \") WITH (\" + \" 'connector'='jdbc',\" + \" 'url'='\" + DB_URL + \"',\" + \" 'table-name'='\" + OUTPUT_TABLE1 + \"',\" + \" 'sink.buffer-flush.max-rows' = '2',\" + \" 'sink.buffer-flush.interval' = '0',\" + \" 'sink.max-retries' = '0'\" + \")\")@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testUpsert['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tEnv.createTemporaryView(\"T\",t)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testUpsert['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "env.getConfig().enableObjectReuse()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "tEnv.executeSql(\"CREATE TABLE upsertSink (\" + \" cnt BIGINT,\" + \" lencnt BIGINT,\" + \" cTag INT,\" + \" ts TIMESTAMP(3)\" + \") WITH (\" + \" 'connector.type'='jdbc',\" + \" 'connector.url'='\" + DB_URL + \"',\" + \" 'connector.table'='\" + OUTPUT_TABLE1 + \"'\" + \")\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testUpsert['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Table t = tEnv.fromDataStream(get4TupleDataStream(env).assignTimestampsAndWatermarks(new AscendingTimestampExtractor<Tuple4<Integer,Long,String,Timestamp>>(){@Override public long extractAscendingTimestamp(Tuple4<Integer,Long,String,Timestamp> element){return element.f0}}),$(\"id\"),$(\"num\"),$(\"text\"),$(\"ts\"))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Table t = tEnv.fromDataStream(get4TupleDataStream(env).assignTimestampsAndWatermarks(new AscendingTimestampExtractor<Tuple4<Integer,Long,String,Timestamp>>(){@Override public long extractAscendingTimestamp(Tuple4<Integer,Long,String,Timestamp> element){return element.f0}}),$(\"id\"),$(\"num\"),$(\"text\"),$(\"ts\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "EnvironmentSettings envSettings = EnvironmentSettings.newInstance().useBlinkPlanner().inStreamingMode().build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamTableEnvironment tEnv = StreamTableEnvironment.create(env,envSettings)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "check(new Row((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b94527,DB_URL,OUTPUT_TABLE1,new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b9454a)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
15->2 [style = bold, label=""];
2->6 [style = bold, label=""];
0->2 [style = bold, label=""];
1->3 [style = bold, label=""];
2->10 [style = bold, label=""];
10->7 [style = bold, label=""];
5->12 [style = solid, label="env"];
3->0 [style = bold, label=""];
14->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
5->3 [style = solid, label="env"];
11->5 [style = bold, label=""];
0->2 [style = solid, label="t"];
2->14 [style = bold, label=""];
16->5 [style = bold, label=""];
13->15 [style = solid, label="t"];
13->15 [style = bold, label=""];
6->7 [style = bold, label=""];
4->5 [style = bold, label=""];
1->3 [style = solid, label="envSettings"];
8->12 [style = bold, label=""];
6->2 [style = dashed, label="0"];
}
