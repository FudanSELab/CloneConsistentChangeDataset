digraph {
11 [style = filled, label = "task.getRunner().pause()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,200L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,500L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null,false))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,2L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null,false))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "testRunWithDuplicateRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "task.getRunner().pause()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "kafkaProducer.send(record).get()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "task.getRunner().setEndOffsets(ImmutableMap.of(0,500L),true)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "runTask(task)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "task.getRunner().setEndOffsets(ImmutableMap.of(0,500L),true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(Status.READING,task.getRunner().getStatus())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Thread.sleep(2000)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(Status.READING,task.getRunner().getStatus())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "runTask(task)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "task.getRunner().pause()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "!task.getRunner().getStatus().equals(Status.READING)@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Thread.sleep(20)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final KafkaIndexTask task = createTask(null,new KafkaIndexTaskIOConfig(0,\"sequence0\",new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,2L)),new SeekableStreamPartitions<>(topic,ImmutableMap.of(0,5L)),kafkaServer.consumerProperties(),KafkaSupervisorIOConfig.DEFAULT_POLL_TIMEOUT_MILLIS,true,null,null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "testRunWithOffsetOutOfRangeExceptionAndPause['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
2->3 [style = bold, label=""];
12->15 [style = bold, label=""];
19->10 [style = bold, label=""];
11->12 [style = bold, label=""];
6->0 [style = bold, label=""];
1->0 [style = bold, label=""];
0->6 [style = dotted, label="true"];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
18->7 [style = solid, label="task"];
9->1 [style = solid, label="task"];
7->5 [style = dotted, label="true"];
5->16 [style = bold, label=""];
15->17 [style = bold, label=""];
7->5 [style = bold, label=""];
6->16 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
5->16 [style = dotted, label="true"];
8->9 [style = bold, label=""];
16->5 [style = bold, label=""];
7->12 [style = dashed, label="0"];
5->7 [style = bold, label=""];
14->18 [style = bold, label=""];
5->11 [style = bold, label=""];
9->1 [style = bold, label=""];
18->7 [style = bold, label=""];
13->14 [style = bold, label=""];
3->1 [style = solid, label="task"];
}
