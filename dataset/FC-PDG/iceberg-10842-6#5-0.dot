digraph {
22 [style = filled, label = "spark.conf().set(\"spark.sql.catalog.spark_catalog.type\",\"hadoop\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "spark.conf().set(\"spark.sql.catalog.spark_catalog.warehouse\",tableLocation)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<String> results = Actions.forTable(table.table()).removeOrphanFiles().olderThan(System.currentTimeMillis() + 1000).execute()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "spark.conf().unset(\"spark.sql.catalog.spark_catalog\")@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<String,String> options = Maps.newHashMap()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "SparkSessionCatalog cat = (SparkSessionCatalog)spark.sessionState().catalogManager().v2SessionCatalog()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String(( database = {\"default\"}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cat.createTable(id,SparkSchemaUtil.convert(SCHEMA),transforms,options)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "spark.conf().set(\"spark.sql.catalog.spark_catalog\",\"org.apache.iceberg.spark.SparkSessionCatalog\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Identifier id = Identifier.of(database,\"table\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Identifier id = Identifier.of(database,\"sessioncattest\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String location = table.table().location().replaceFirst(\"file:\",\"\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "spark.sql(\"INSERT INTO default.table VALUES (1,1,1)\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "spark.conf().unset(\"spark.sql.catalog.spark_catalog.type\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "cat.dropTable(id)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "spark.conf().unset(\"spark.sql.catalog.spark_catalog.warehouse\")@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Transform(( transforms = {}@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testSparkSessionCatalogHiveTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,String> options = Maps.newHashMap()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "String location = table.table().location().replaceFirst(\"file:\",\"\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "new File(location + \"/data/trashfile\").createNewFile()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(\"trash file should be removed\",results.contains(\"file:\" + location + \"/data/trashfile\"))@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testSparkSessionCatalogHadoopTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SparkSessionCatalog cat = (SparkSessionCatalog)spark.sessionState().catalogManager().v2SessionCatalog()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "SparkTable table = (SparkTable)cat.loadTable(id)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "cat.createTable(id,SparkSchemaUtil.convert(SCHEMA),transforms,options)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "spark.conf().set(\"spark.sql.catalog.spark_catalog.type\",\"hive\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testSparkSessionCatalogHiveTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->6 [style = bold, label=""];
9->6 [style = solid, label="options"];
0->2 [style = solid, label="database"];
7->24 [style = bold, label=""];
23->11 [style = solid, label="id"];
14->16 [style = bold, label=""];
8->0 [style = bold, label=""];
25->19 [style = bold, label=""];
13->22 [style = dashed, label="0"];
6->11 [style = bold, label=""];
22->27 [style = bold, label=""];
27->0 [style = bold, label=""];
2->4 [style = solid, label="id"];
24->11 [style = bold, label=""];
7->11 [style = solid, label="options"];
5->15 [style = solid, label="location"];
14->26 [style = bold, label=""];
14->26 [style = dashed, label="0"];
11->14 [style = bold, label=""];
20->1 [style = bold, label=""];
3->1 [style = bold, label=""];
9->7 [style = bold, label=""];
12->10 [style = bold, label=""];
2->9 [style = bold, label=""];
2->6 [style = solid, label="id"];
26->5 [style = bold, label=""];
7->6 [style = solid, label="transforms"];
21->23 [style = solid, label="database"];
7->4 [style = bold, label=""];
23->14 [style = solid, label="id"];
2->11 [style = solid, label="id"];
0->21 [style = bold, label=""];
16->10 [style = solid, label="location"];
23->7 [style = bold, label=""];
2->23 [style = dashed, label="0"];
16->5 [style = bold, label=""];
18->1 [style = bold, label=""];
5->12 [style = bold, label=""];
10->15 [style = bold, label=""];
13->8 [style = bold, label=""];
0->2 [style = bold, label=""];
1->22 [style = bold, label=""];
21->23 [style = bold, label=""];
24->11 [style = solid, label="transforms"];
17->25 [style = bold, label=""];
1->13 [style = bold, label=""];
15->17 [style = bold, label=""];
}
