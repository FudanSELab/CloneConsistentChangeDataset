digraph {
25 [style = filled, label = "keepCountOption != null@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "serverBootstrap.childOption(NioChannelOption.of(keepCountOption),SETTING_HTTP_TCP_KEEP_COUNT.get(settings))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "createClientBootstrap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "{if (success == false) {doStop()}}@@@52@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "bindServer()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "serverBootstrap = new ServerBootstrap()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "boolean success = false@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "keepIntervalOption != null@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final ByteSizeValue tcpSendBufferSize = SETTING_HTTP_TCP_SEND_BUFFER_SIZE.get(settings)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "serverBootstrap.option(ChannelOption.SO_REUSEADDR,reuseAddress)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "final SocketOption<Integer> keepIntervalOption = NetUtils.getTcpKeepIntervalSocketOptionOrNull()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "doStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "SETTING_HTTP_TCP_KEEP_COUNT.get(settings) >= 0@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "serverBootstrap.group(new NioEventLoopGroup(workerCount,daemonThreadFactory(settings,HTTP_SERVER_WORKER_THREAD_NAME_PREFIX)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_REUSEADDR,reuseAddress)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "success = true@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "final boolean reuseAddress = SETTING_HTTP_TCP_REUSE_ADDRESS.get(settings)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "TransportSettings.TCP_KEEP_ALIVE.get(settings)@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "SETTING_HTTP_TCP_KEEP_IDLE.get(settings) >= 0@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "tcpSendBufferSize.getBytes() > 0@@@32@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "keepIdleOption != null@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "serverBootstrap.childOption(ChannelOption.RCVBUF_ALLOCATOR,recvByteBufAllocator)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "bootstrap.channel(NettyAllocator.getChannelType())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_KEEPALIVE,SETTING_HTTP_TCP_KEEP_ALIVE.get(settings))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "bootstrap.option(ChannelOption.TCP_NODELAY,TransportSettings.TCP_NO_DELAY.get(settings))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "keepIntervalOption != null@@@24@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "SETTING_HTTP_TCP_KEEP_ALIVE.get(settings)@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "bootstrap.group(eventLoopGroup)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "serverBootstrap.childHandler(configureServerChannelHandler())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "bootstrap.option(ChannelOption.SO_KEEPALIVE,TransportSettings.TCP_KEEP_ALIVE.get(settings))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final SocketOption<Integer> keepIdleOption = NetUtils.getTcpKeepIdleSocketOptionOrNull()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "serverBootstrap.childOption(NioChannelOption.of(keepIdleOption),SETTING_HTTP_TCP_KEEP_IDLE.get(settings))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "SETTING_HTTP_TCP_KEEP_INTERVAL.get(settings) >= 0@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "bootstrap.group(sharedGroup.getLowLevelGroup())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "return bootstrap@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "bootstrap.option(NioChannelOption.of(keepIntervalOption),TransportSettings.TCP_KEEP_INTERVAL.get(settings))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_SNDBUF,Math.toIntExact(tcpSendBufferSize.getBytes()))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "tcpReceiveBufferSize.getBytes() > 0@@@36@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Bootstrap bootstrap = new Bootstrap()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final SocketOption<Integer> keepIdleOption = NetUtils.getTcpKeepIdleSocketOptionOrNull()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "bootstrap.option(ChannelOption.RCVBUF_ALLOCATOR,recvByteBufAllocator)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final ByteSizeValue tcpReceiveBufferSize = TransportSettings.TCP_RECEIVE_BUFFER_SIZE.get(settings)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "serverBootstrap.handler(new ServerChannelExceptionHandler(this))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final boolean reuseAddress = TransportSettings.TCP_REUSE_ADDRESS.get(settings)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "bootstrap.option(ChannelOption.ALLOCATOR,NettyAllocator.getAllocator())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "NioEventLoopGroup eventLoopGroup@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "bootstrap.option(ChannelOption.SO_SNDBUF,Math.toIntExact(tcpSendBufferSize.getBytes()))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tcpReceiveBufferSize.getBytes() > 0@@@41@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final SocketOption<Integer> keepCountOption = NetUtils.getTcpKeepCountSocketOptionOrNull()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "TransportSettings.TCP_KEEP_IDLE.get(settings) >= 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "bootstrap.option(NioChannelOption.of(keepIdleOption),TransportSettings.TCP_KEEP_IDLE.get(settings))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "keepCountOption != null@@@30@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "serverBootstrap.option(ChannelOption.RCVBUF_ALLOCATOR,recvByteBufAllocator)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IOUtils.LINUX || IOUtils.MAC_OS_X@@@10@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "createClientBootstrap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "final ByteSizeValue tcpReceiveBufferSize = SETTING_HTTP_TCP_RECEIVE_BUFFER_SIZE.get(settings)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "keepIdleOption != null@@@13@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "serverBootstrap.channel(NettyAllocator.getServerChannelType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "serverBootstrap.childOption(ChannelOption.TCP_NODELAY,SETTING_HTTP_TCP_NO_DELAY.get(settings))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "SharedGroupFactory.SharedGroup sharedGroup@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
62 [style = filled, label = "IOUtils.LINUX || IOUtils.MAC_OS_X@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "serverBootstrap.option(ChannelOption.ALLOCATOR,NettyAllocator.getAllocator())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "final ByteSizeValue tcpSendBufferSize = TransportSettings.TCP_SEND_BUFFER_SIZE.get(settings)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "tcpSendBufferSize.getBytes() > 0@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "serverBootstrap.childOption(NioChannelOption.of(keepIntervalOption),SETTING_HTTP_TCP_KEEP_INTERVAL.get(settings))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "serverBootstrap.childOption(ChannelOption.ALLOCATOR,NettyAllocator.getAllocator())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "bootstrap.option(NioChannelOption.of(keepCountOption),TransportSettings.TCP_KEEP_COUNT.get(settings))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "serverBootstrap.childOption(ChannelOption.SO_RCVBUF,Math.toIntExact(tcpReceiveBufferSize.getBytes()))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21->10 [style = bold, label=""];
57->31 [style = bold, label=""];
5->20 [style = bold, label=""];
38->52 [style = bold, label=""];
2->6 [style = bold, label=""];
62->57 [style = dotted, label="true"];
17->9 [style = bold, label=""];
16->17 [style = dotted, label="true"];
55->40 [style = bold, label=""];
31->21 [style = bold, label=""];
57->58 [style = bold, label=""];
48->61 [style = bold, label=""];
38->52 [style = dotted, label="true"];
13->19 [style = solid, label="keepCountOption"];
64->3 [style = dotted, label="true"];
3->28 [style = solid, label="keepIntervalOption"];
20->46 [style = dashed, label="0"];
35->52 [style = solid, label="keepCountOption"];
22->42 [style = dashed, label="0"];
23->18 [style = dotted, label="true"];
62->64 [style = dotted, label="true"];
24->21 [style = bold, label=""];
58->38 [style = dotted, label="true"];
30->46 [style = bold, label=""];
51->47 [style = bold, label=""];
40->63 [style = bold, label=""];
31->13 [style = solid, label="keepIntervalOption"];
25->19 [style = bold, label=""];
12->44 [style = dashed, label="0"];
35->38 [style = bold, label=""];
29->1 [style = bold, label=""];
48->61 [style = solid, label="success"];
25->19 [style = dotted, label="true"];
16->9 [style = bold, label=""];
25->21 [style = bold, label=""];
53->48 [style = bold, label=""];
9->28 [style = dotted, label="true"];
0->15 [style = solid, label="eventLoopGroup"];
13->25 [style = bold, label=""];
64->9 [style = bold, label=""];
31->25 [style = dotted, label="true"];
31->58 [style = dashed, label="0"];
13->25 [style = solid, label="keepCountOption"];
59->60 [style = bold, label=""];
10->14 [style = bold, label=""];
58->35 [style = bold, label=""];
19->52 [style = dashed, label="0"];
46->36 [style = bold, label=""];
30->50 [style = dotted, label="true"];
65->66 [style = bold, label=""];
47->43 [style = bold, label=""];
11->5 [style = dotted, label="true"];
16->17 [style = bold, label=""];
66->41 [style = bold, label=""];
32->26 [style = bold, label=""];
62->58 [style = dotted, label="true"];
62->43 [style = bold, label=""];
7->23 [style = dotted, label="true"];
5->59 [style = dotted, label="true"];
27->11 [style = bold, label=""];
4->30 [style = solid, label="reuseAddress"];
54->44 [style = bold, label=""];
0->33 [style = dashed, label="0"];
7->23 [style = bold, label=""];
1->32 [style = bold, label=""];
18->16 [style = solid, label="keepIdleOption"];
67->51 [style = bold, label=""];
54->44 [style = solid, label="reuseAddress"];
24->7 [style = bold, label=""];
64->57 [style = bold, label=""];
24->7 [style = dotted, label="true"];
9->3 [style = dotted, label="true"];
8->24 [style = bold, label=""];
35->38 [style = solid, label="keepCountOption"];
23->16 [style = dotted, label="true"];
29->0 [style = dotted, label="true"];
58->43 [style = bold, label=""];
3->37 [style = bold, label=""];
13->42 [style = bold, label=""];
5->59 [style = bold, label=""];
1->12 [style = solid, label="bootstrap"];
9->31 [style = bold, label=""];
31->13 [style = bold, label=""];
28->31 [style = bold, label=""];
7->31 [style = dotted, label="true"];
15->32 [style = dashed, label="0"];
49->65 [style = bold, label=""];
54->39 [style = solid, label="reuseAddress"];
3->37 [style = dotted, label="true"];
39->53 [style = bold, label=""];
30->50 [style = bold, label=""];
47->62 [style = bold, label=""];
11->5 [style = bold, label=""];
3->28 [style = bold, label=""];
52->43 [style = bold, label=""];
30->12 [style = bold, label=""];
56->45 [style = bold, label=""];
42->58 [style = bold, label=""];
43->5 [style = bold, label=""];
34->33 [style = dotted, label="true"];
28->22 [style = dotted, label="true"];
31->42 [style = solid, label="keepIntervalOption"];
9->3 [style = bold, label=""];
9->3 [style = solid, label="keepIdleOption"];
14->59 [style = dashed, label="0"];
31->13 [style = dotted, label="true"];
14->27 [style = bold, label=""];
57->13 [style = dotted, label="true"];
23->18 [style = bold, label=""];
28->22 [style = bold, label=""];
38->43 [style = bold, label=""];
57->31 [style = dotted, label="true"];
37->57 [style = bold, label=""];
18->16 [style = bold, label=""];
19->21 [style = bold, label=""];
11->20 [style = bold, label=""];
5->50 [style = dashed, label="0"];
21->43 [style = dashed, label="0"];
27->60 [style = dashed, label="0"];
5->60 [style = bold, label=""];
47->62 [style = dotted, label="true"];
10->27 [style = bold, label=""];
34->1 [style = bold, label=""];
50->46 [style = bold, label=""];
1->15 [style = bold, label=""];
63->49 [style = bold, label=""];
9->57 [style = dashed, label="0"];
22->31 [style = bold, label=""];
41->56 [style = bold, label=""];
8->66 [style = dashed, label="0"];
13->42 [style = dotted, label="true"];
45->67 [style = bold, label=""];
62->64 [style = bold, label=""];
7->9 [style = dotted, label="true"];
13->58 [style = bold, label=""];
44->39 [style = bold, label=""];
58->35 [style = dotted, label="true"];
20->4 [style = bold, label=""];
15->26 [style = bold, label=""];
10->14 [style = dotted, label="true"];
26->2 [style = bold, label=""];
30->54 [style = dashed, label="0"];
64->9 [style = dotted, label="true"];
4->30 [style = bold, label=""];
6->8 [style = bold, label=""];
18->17 [style = solid, label="keepIdleOption"];
60->30 [style = bold, label=""];
3->22 [style = solid, label="keepIntervalOption"];
7->21 [style = bold, label=""];
17->37 [style = dashed, label="0"];
3->57 [style = bold, label=""];
36->54 [style = bold, label=""];
9->37 [style = solid, label="keepIdleOption"];
23->9 [style = bold, label=""];
23->64 [style = dashed, label="0"];
}
