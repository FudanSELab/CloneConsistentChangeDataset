digraph {
81 [style = filled, label = "jobStatusMonitor.processMessage(new Kafka09ConsumerClient.Kafka09ConsumerRecord(undecodeableRecord))@@@39@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.ORCHESTRATED.name())@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "GobblinTrackingEvent event4 = createJobSucceededEvent()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "Assert.assertEquals(jobStatusMonitor.getMessageParseFailures().getCount(),0L)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "testProcessMessageForFailedFlow['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "kafkaReporter.report()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "String tableName = KafkaJobStatusMonitor.jobStatusTableName(this.flowExecutionId,\"NA\",\"NA\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.RUNNING.name())@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Config config = ConfigFactory.empty().withValue(ConfigurationKeys.KAFKA_BROKERS,ConfigValueFactory.fromAnyRef(\"localhost:0000\")).withValue(Kafka09ConsumerClient.GOBBLIN_CONFIG_VALUE_DESERIALIZER_CLASS_KEY,ConfigValueFactory.fromAnyRef(\"org.apache.kafka.common.serialization.ByteArrayDeserializer\")).withValue(ConfigurationKeys.STATE_STORE_ROOT_DIR_KEY,ConfigValueFactory.fromAnyRef(stateStoreDir)).withValue(\"zookeeper.connect\",ConfigValueFactory.fromAnyRef(\"localhost:2121\"))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "kafkaReporter.report()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.COMPLETE.name())@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "kafkaReporter.report()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "GobblinTrackingEvent event4 = createJobFailedEvent()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.RUNNING.name())@@@80@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "kafkaReporter.report()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.COMPILED.name())@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "GobblinTrackingEvent event5 = createJobOrchestratedEvent(2)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "GobblinTrackingEvent event1 = createFlowCompiledEvent()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StateStore stateStore = jobStatusMonitor.getStateStore()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ConsumerIterator<byte((,byte((> iterator = this.kafkaTestHelper.getIteratorForTopic(TOPIC)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "KafkaEventReporter kafkaReporter = builder.build(\"localhost:0000\",\"topic2\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "state = stateList.get(0)@@@85@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "GobblinTrackingEvent event7 = createJobFailedEvent()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "jobStatusMonitor.shutDown()@@@88@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "State state = stateList.get(0)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "state = stateList.get(0)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "kafkaReporter.report()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "jobStatusMonitor.buildMetricsContextAndMetrics()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "context.submitEvent(event2)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "testProcessMessageForSuccessfulFlow['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MessageAndMetadata<byte((,byte((> messageAndMetadata = iterator.next()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "messageAndMetadata = iterator.next()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "jobStatusMonitor.shutDown()@@@68@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "messageAndMetadata = iterator.next()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.FAILED.name())@@@86@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "messageAndMetadata = iterator.next()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "GobblinTrackingEvent event6 = createJobStartEvent()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "byte(( undecodeableMessage = Arrays.copyOf(messageAndMetadata.message(),messageAndMetadata.message().length - 1)@@@36@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "testProcessMessageForFailedFlow['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "List<State> stateList = stateStore.getAll(storeName,tableName)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "state = stateList.get(0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "KafkaEventReporter kafkaReporter = builder.build(\"localhost:0000\",\"topic1\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertNull(jobStatusMonitor.parseJobStatus(messageAndMetadata.message()))@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.ORCHESTRATED.name())@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "GobblinTrackingEvent event2 = createJobOrchestratedEvent(1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "MockKafkaAvroJobStatusMonitor jobStatusMonitor = new MockKafkaAvroJobStatusMonitor(\"test\",config,1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.PENDING_RETRY.name())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@82@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "messageAndMetadata = iterator.next()@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "GobblinTrackingEvent event3 = createJobStartEvent()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "messageAndMetadata = iterator.next()@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "context.submitEvent(event7)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "context.submitEvent(event3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(state.getProp(TimingEvent.FlowEventConstants.SHOULD_RETRY_FIELD),Boolean.toString(true))@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "GobblinTrackingEvent event5 = createDummyEvent()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "context.submitEvent(event1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "kafkaReporter.report()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "tableName = KafkaJobStatusMonitor.jobStatusTableName(this.flowExecutionId,this.jobGroup,this.jobName)@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "Thread.currentThread().interrupt()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(state.getProp(JobStatusRetriever.EVENT_NAME_FIELD),ExecutionStatus.COMPLETE.name())@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "context.submitEvent(event5)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "Assert.assertEquals(state.getProp(TimingEvent.FlowEventConstants.SHOULD_RETRY_FIELD),Boolean.toString(false))@@@87@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "state = stateList.get(0)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "InterruptedException ex@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "state = stateList.get(0)@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String storeName = KafkaJobStatusMonitor.jobStatusStoreName(flowGroup,flowName)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "jobStatusMonitor.processMessage(convertMessageAndMetadataToDecodableKafkaRecord(messageAndMetadata))@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "ConsumerRecord undecodeableRecord = new ConsumerRecord<>(TOPIC,messageAndMetadata.partition(),messageAndMetadata.offset(),messageAndMetadata.key(),undecodeableMessage)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
89 [style = filled, label = "state = stateList.get(0)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
93 [style = filled, label = "messageAndMetadata = iterator.next()@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@84@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@78@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "stateList = stateStore.getAll(storeName,tableName)@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "kafkaReporter.report()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "Assert.assertEquals(stateList.size(),1)@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "Thread.sleep(1000)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "context.submitEvent(event6)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "Assert.assertEquals(jobStatusMonitor.getMessageParseFailures().getCount(),1L)@@@40@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "context.submitEvent(event4)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "state = stateList.get(0)@@@79@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->28 [style = bold, label=""];
74->9 [style = bold, label=""];
13->45 [style = bold, label=""];
37->51 [style = bold, label=""];
81->82 [style = bold, label=""];
28->26 [style = bold, label=""];
51->68 [style = bold, label=""];
5->35 [style = solid, label="messageAndMetadata"];
63->39 [style = bold, label=""];
92->90 [style = bold, label=""];
36->21 [style = bold, label=""];
15->0 [style = bold, label=""];
10->43 [style = solid, label="messageAndMetadata"];
0->38 [style = solid, label="event7"];
85->8 [style = bold, label=""];
57->7 [style = bold, label=""];
6->40 [style = solid, label="messageAndMetadata"];
15->65 [style = bold, label=""];
2->31 [style = bold, label=""];
39->66 [style = bold, label=""];
55->16 [style = bold, label=""];
32->22 [style = solid, label="storeName"];
79->84 [style = solid, label="undecodeableMessage"];
29->60 [style = bold, label=""];
65->42 [style = bold, label=""];
76->3 [style = bold, label=""];
62->69 [style = dashed, label="0"];
22->13 [style = bold, label=""];
17->61 [style = dotted, label="true"];
52->59 [style = bold, label=""];
84->81 [style = solid, label="undecodeableRecord"];
40->11 [style = bold, label=""];
59->34 [style = bold, label=""];
64->11 [style = solid, label="tableName"];
12->8 [style = solid, label="event4"];
33->65 [style = bold, label=""];
47->27 [style = bold, label=""];
18->46 [style = bold, label=""];
41->24 [style = bold, label=""];
75->29 [style = solid, label="messageAndMetadata"];
77->73 [style = bold, label=""];
80->50 [style = bold, label=""];
89->69 [style = bold, label=""];
87->91 [style = solid, label="messageAndMetadata"];
34->54 [style = bold, label=""];
70->15 [style = bold, label=""];
25->14 [style = bold, label=""];
58->95 [style = dashed, label="0"];
0->38 [style = bold, label=""];
26->62 [style = bold, label=""];
94->86 [style = bold, label=""];
50->55 [style = bold, label=""];
79->84 [style = bold, label=""];
66->71 [style = bold, label=""];
32->39 [style = solid, label="storeName"];
32->74 [style = solid, label="storeName"];
58->44 [style = solid, label="event5"];
1->79 [style = bold, label=""];
32->60 [style = solid, label="storeName"];
4->58 [style = bold, label=""];
73->5 [style = bold, label=""];
62->75 [style = bold, label=""];
38->33 [style = bold, label=""];
32->11 [style = solid, label="storeName"];
78->19 [style = bold, label=""];
30->50 [style = bold, label=""];
61->42 [style = bold, label=""];
49->85 [style = bold, label=""];
50->90 [style = dashed, label="0"];
35->2 [style = bold, label=""];
1->76 [style = solid, label="messageAndMetadata"];
64->22 [style = solid, label="tableName"];
42->23 [style = bold, label=""];
58->44 [style = bold, label=""];
67->10 [style = bold, label=""];
19->70 [style = bold, label=""];
86->89 [style = bold, label=""];
45->88 [style = bold, label=""];
55->16 [style = solid, label="event1"];
64->2 [style = solid, label="tableName"];
32->94 [style = solid, label="storeName"];
5->35 [style = bold, label=""];
12->85 [style = dashed, label="0"];
63->39 [style = solid, label="tableName"];
9->77 [style = bold, label=""];
95->44 [style = bold, label=""];
46->52 [style = bold, label=""];
64->60 [style = solid, label="tableName"];
48->67 [style = bold, label=""];
64->7 [style = solid, label="tableName"];
95->44 [style = solid, label="event5"];
69->57 [style = solid, label="messageAndMetadata"];
84->83 [style = bold, label=""];
32->2 [style = solid, label="storeName"];
27->6 [style = bold, label=""];
64->94 [style = solid, label="tableName"];
21->1 [style = bold, label=""];
4->95 [style = bold, label=""];
83->81 [style = bold, label=""];
43->22 [style = bold, label=""];
12->8 [style = bold, label=""];
82->76 [style = bold, label=""];
75->29 [style = bold, label=""];
91->94 [style = bold, label=""];
34->54 [style = solid, label="event3"];
32->7 [style = solid, label="storeName"];
24->64 [style = bold, label=""];
47->88 [style = dashed, label="0"];
20->53 [style = bold, label=""];
41->24 [style = solid, label="messageAndMetadata"];
54->49 [style = bold, label=""];
85->8 [style = solid, label="event4"];
88->93 [style = bold, label=""];
8->4 [style = bold, label=""];
53->37 [style = bold, label=""];
46->52 [style = solid, label="event2"];
6->87 [style = bold, label=""];
16->18 [style = bold, label=""];
31->48 [style = bold, label=""];
1->76 [style = bold, label=""];
14->69 [style = bold, label=""];
45->47 [style = bold, label=""];
3->32 [style = bold, label=""];
93->6 [style = bold, label=""];
17->61 [style = bold, label=""];
71->56 [style = bold, label=""];
64->74 [style = bold, label=""];
60->20 [style = bold, label=""];
32->63 [style = bold, label=""];
87->91 [style = bold, label=""];
44->78 [style = bold, label=""];
19->70 [style = solid, label="event6"];
23->36 [style = bold, label=""];
10->43 [style = bold, label=""];
56->41 [style = bold, label=""];
90->55 [style = bold, label=""];
42->23 [style = solid, label="config"];
11->72 [style = bold, label=""];
49->12 [style = bold, label=""];
72->25 [style = bold, label=""];
64->74 [style = solid, label="tableName"];
6->40 [style = bold, label=""];
69->57 [style = bold, label=""];
}
