digraph {
5 [style = filled, label = "subscriptions.get(i).dispose()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "doOnUnSubscribeWorksWithRefCount['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<TestSubscriber<Long>> subscribers = new ArrayList<TestSubscriber<Long>>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final CountDownLatch upperLatch = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"There should exactly 1 un-subscription events for upper stream\",1,upperCount.get())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(\"There should exactly 1 un-subscription events for lower stream\",1,lowerCount.get())@@@46@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestSubscriber<Long> subscriber = new TestSubscriber<Long>()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final AtomicInteger upperCount = new AtomicInteger()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "++i@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "upperLatch.await()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Disposable> subscriptions = new ArrayList<Disposable>()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TestObserver<Long> observer = new TestObserver<Long>()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Observable<Long> longs = Observable.interval(50,TimeUnit.MILLISECONDS).doOnDispose(new Action(){@Override public void run(){upperLatch.countDown()upperCount.incrementAndGet()}}).doOnNext(new Consumer<Long>(){@Override public void accept(Long aLong){onNextLatch.countDown()}}).doOnDispose(new Action(){@Override public void run(){lowerLatch.countDown()lowerCount.incrementAndGet()}}).publish().refCount()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < subCount@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "subscribers.add(subscriber)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i < subCount@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "++i@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "subscriptions.add(observer)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final CountDownLatch onNextLatch = new CountDownLatch(subCount)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "longs.subscribe(subscriber)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "onNextLatch.await()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subscriptions.add(Disposables.fromSubscription(subscriber))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int subCount = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "List<TestObserver<Long>> subscribers = new ArrayList<TestObserver<Long>>()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final AtomicInteger lowerCount = new AtomicInteger()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "subscriptions.add(Disposable.fromSubscription(subscriber))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "doOnUnSubscribeWorksWithRefCount['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "Flowable<Long> longs = Flowable.interval(50,TimeUnit.MILLISECONDS).doOnCancel(new Action(){@Override public void run(){upperLatch.countDown()upperCount.incrementAndGet()}}).doOnNext(new Consumer<Long>(){@Override public void accept(Long aLong){onNextLatch.countDown()}}).doOnCancel(new Action(){@Override public void run(){lowerLatch.countDown()lowerCount.incrementAndGet()}}).publish().refCount()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "longs.subscribe(observer)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "lowerLatch.await()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "subscribers.add(observer)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final CountDownLatch lowerLatch = new CountDownLatch(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "doOnUnSubscribeWorksWithRefCount['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "int i = 0@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
3->11 [style = dotted, label="true"];
17->25 [style = bold, label=""];
15->23 [style = bold, label=""];
25->21 [style = solid, label="i"];
32->22 [style = bold, label=""];
23->20 [style = bold, label=""];
13->24 [style = bold, label=""];
4->15 [style = solid, label="subCount"];
5->9 [style = bold, label=""];
24->2 [style = bold, label=""];
28->30 [style = bold, label=""];
3->29 [style = dotted, label="true"];
18->30 [style = dashed, label="0"];
8->18 [style = bold, label=""];
28->33 [style = solid, label="observer"];
16->6 [style = bold, label=""];
18->11 [style = bold, label=""];
3->33 [style = dotted, label="true"];
14->22 [style = bold, label=""];
10->31 [style = dashed, label="0"];
11->29 [style = dashed, label="0"];
3->30 [style = dotted, label="true"];
20->31 [style = bold, label=""];
31->1 [style = bold, label=""];
7->4 [style = bold, label=""];
11->19 [style = bold, label=""];
8->28 [style = dashed, label="0"];
26->4 [style = bold, label=""];
28->29 [style = solid, label="observer"];
30->29 [style = bold, label=""];
8->19 [style = solid, label="subscriber"];
6->15 [style = bold, label=""];
19->0 [style = bold, label=""];
2->12 [style = bold, label=""];
8->18 [style = solid, label="subscriber"];
20->10 [style = bold, label=""];
8->11 [style = solid, label="subscriber"];
28->30 [style = solid, label="observer"];
33->0 [style = bold, label=""];
22->3 [style = bold, label=""];
4->21 [style = solid, label="subCount"];
21->5 [style = bold, label=""];
3->27 [style = dotted, label="true"];
3->28 [style = bold, label=""];
29->33 [style = bold, label=""];
3->19 [style = dotted, label="true"];
14->32 [style = dashed, label="0"];
21->9 [style = dotted, label="true"];
18->27 [style = bold, label=""];
3->8 [style = bold, label=""];
3->18 [style = dotted, label="true"];
9->21 [style = bold, label=""];
3->0 [style = dotted, label="true"];
4->3 [style = solid, label="subCount"];
1->32 [style = bold, label=""];
34->4 [style = bold, label=""];
3->17 [style = bold, label=""];
22->3 [style = solid, label="i"];
1->14 [style = bold, label=""];
27->19 [style = bold, label=""];
11->27 [style = dashed, label="0"];
10->1 [style = bold, label=""];
8->27 [style = solid, label="subscriber"];
3->8 [style = dotted, label="true"];
19->33 [style = dashed, label="0"];
4->16 [style = bold, label=""];
25->21 [style = bold, label=""];
21->13 [style = bold, label=""];
21->5 [style = dotted, label="true"];
3->28 [style = dotted, label="true"];
}
