digraph {
7 [style = filled, label = "int i = 1@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "client.close()@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "selector.clear()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeMax)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<>())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Node node = cluster.nodes().get(0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "client.close()@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(400,(Double)maxMetric.metricValue(),EPS)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "selector.clear()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client.poll(1,time.milliseconds())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "selector.clear()@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.poll(1,time.milliseconds())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "builder.rackId(\"\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i <= 3@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int throttleTimeMs = 100 * i@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(400,(Double)maxMetric.metricValue(),EPSILON)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "client.poll(1,time.milliseconds())@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,ClientDnsLookup.DEFAULT,time,true,new ApiVersions(),throttleTimeSensor,new LogContext())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "client.close()@@@36@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "client.send(request,time.milliseconds())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(250,(Double)avgMetric.metricValue(),EPSILON)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "client.poll(1,time.milliseconds())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "int i = 1@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "buildFetcher()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "client.poll(1,time.milliseconds())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "!client.ready(node,time.milliseconds())@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "FetchResponse response = fullFetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(ApiKeys.API_VERSIONS,0)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "client.send(request,time.milliseconds())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
29->15 [style = bold, label=""];
4->45 [style = dotted, label="true"];
34->35 [style = solid, label="buffer"];
25->1 [style = bold, label=""];
9->28 [style = solid, label="selector"];
8->16 [style = solid, label="i"];
20->26 [style = bold, label=""];
19->1 [style = solid, label="node"];
23->48 [style = dashed, label="0"];
4->44 [style = dotted, label="true"];
40->25 [style = bold, label=""];
28->39 [style = dashed, label="0"];
8->16 [style = solid, label="builder"];
16->45 [style = solid, label="throttleTimeMs"];
2->37 [style = dotted, label="true"];
17->7 [style = solid, label="i"];
7->8 [style = bold, label=""];
3->14 [style = solid, label="buffer"];
2->18 [style = dotted, label="true"];
30->29 [style = bold, label=""];
7->4 [style = solid, label="i"];
7->16 [style = solid, label="i"];
2->8 [style = solid, label="i"];
13->45 [style = dashed, label="0"];
48->51 [style = bold, label=""];
24->49 [style = bold, label=""];
16->47 [style = dashed, label="0"];
43->53 [style = bold, label=""];
0->8 [style = bold, label=""];
7->16 [style = dotted, label="true"];
4->8 [style = bold, label=""];
27->19 [style = bold, label=""];
19->28 [style = bold, label=""];
36->17 [style = bold, label=""];
8->4 [style = bold, label=""];
32->20 [style = bold, label=""];
24->27 [style = bold, label=""];
9->24 [style = bold, label=""];
19->29 [style = solid, label="node"];
8->4 [style = solid, label="i"];
4->16 [style = bold, label=""];
2->8 [style = dotted, label="true"];
53->48 [style = bold, label=""];
2->10 [style = dotted, label="true"];
19->25 [style = solid, label="node"];
8->13 [style = solid, label="throttleTimeMs"];
5->10 [style = bold, label=""];
7->10 [style = dotted, label="true"];
14->30 [style = bold, label=""];
26->17 [style = bold, label=""];
2->29 [style = dotted, label="true"];
35->20 [style = bold, label=""];
22->43 [style = dashed, label="0"];
7->13 [style = dotted, label="true"];
20->26 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
7->45 [style = solid, label="i"];
28->44 [style = solid, label="node"];
32->20 [style = solid, label="buffer"];
7->0 [style = bold, label=""];
20->26 [style = solid, label="buffer"];
6->53 [style = dashed, label="0"];
49->39 [style = solid, label="throttleTimeSensor"];
28->40 [style = solid, label="node"];
2->4 [style = bold, label=""];
24->28 [style = solid, label="throttleTimeSensor"];
25->2 [style = bold, label=""];
4->8 [style = solid, label="i"];
7->29 [style = dotted, label="true"];
4->13 [style = dotted, label="true"];
13->37 [style = bold, label=""];
4->10 [style = solid, label="throttleTimeMs"];
21->9 [style = bold, label=""];
17->2 [style = bold, label=""];
7->2 [style = bold, label=""];
38->0 [style = bold, label=""];
2->4 [style = solid, label="i"];
13->37 [style = solid, label="buffer"];
26->1 [style = dotted, label="true"];
16->18 [style = solid, label="request"];
47->41 [style = bold, label=""];
8->45 [style = solid, label="i"];
34->35 [style = bold, label=""];
45->46 [style = bold, label=""];
7->8 [style = dotted, label="true"];
12->34 [style = dashed, label="0"];
4->22 [style = bold, label=""];
0->31 [style = bold, label=""];
22->6 [style = bold, label=""];
22->42 [style = bold, label=""];
4->7 [style = solid, label="i"];
16->18 [style = bold, label=""];
20->25 [style = dotted, label="true"];
7->2 [style = solid, label="i"];
4->10 [style = dotted, label="true"];
6->23 [style = bold, label=""];
28->39 [style = bold, label=""];
4->47 [style = dotted, label="true"];
3->45 [style = bold, label=""];
12->32 [style = bold, label=""];
15->44 [style = bold, label=""];
10->13 [style = solid, label="request"];
3->46 [style = dashed, label="0"];
2->13 [style = solid, label="i"];
2->30 [style = dotted, label="true"];
31->42 [style = dashed, label="0"];
7->4 [style = bold, label=""];
41->10 [style = bold, label=""];
28->12 [style = bold, label=""];
7->10 [style = solid, label="i"];
4->15 [style = dotted, label="true"];
3->13 [style = dashed, label="0"];
7->15 [style = dotted, label="true"];
4->7 [style = bold, label=""];
46->29 [style = bold, label=""];
7->5 [style = dotted, label="true"];
12->32 [style = solid, label="apiVersionsResponseVersion"];
4->29 [style = dotted, label="true"];
19->30 [style = solid, label="node"];
25->20 [style = bold, label=""];
4->3 [style = dotted, label="true"];
10->13 [style = bold, label=""];
4->46 [style = dotted, label="true"];
39->32 [style = bold, label=""];
49->19 [style = bold, label=""];
2->4 [style = dotted, label="true"];
18->5 [style = solid, label="request"];
7->18 [style = dotted, label="true"];
2->14 [style = dotted, label="true"];
52->50 [style = bold, label=""];
32->20 [style = solid, label="apiVersionsResponseVersion"];
23->11 [style = bold, label=""];
2->5 [style = dotted, label="true"];
7->8 [style = solid, label="i"];
20->36 [style = bold, label=""];
50->24 [style = bold, label=""];
2->16 [style = dotted, label="true"];
17->10 [style = solid, label="i"];
24->39 [style = solid, label="selector"];
2->7 [style = solid, label="i"];
25->1 [style = dotted, label="true"];
24->49 [style = dashed, label="0"];
42->43 [style = bold, label=""];
31->22 [style = bold, label=""];
17->4 [style = solid, label="i"];
16->18 [style = solid, label="builder"];
28->34 [style = bold, label=""];
1->40 [style = bold, label=""];
16->47 [style = bold, label=""];
26->25 [style = dotted, label="true"];
26->25 [style = bold, label=""];
3->14 [style = bold, label=""];
4->8 [style = dotted, label="true"];
46->29 [style = solid, label="buffer"];
1->26 [style = bold, label=""];
33->9 [style = bold, label=""];
4->13 [style = solid, label="i"];
2->38 [style = bold, label=""];
37->14 [style = bold, label=""];
25->40 [style = dotted, label="true"];
13->3 [style = bold, label=""];
7->3 [style = dotted, label="true"];
18->5 [style = bold, label=""];
2->7 [style = dotted, label="true"];
7->4 [style = dotted, label="true"];
15->4 [style = bold, label=""];
4->41 [style = dotted, label="true"];
29->7 [style = bold, label=""];
47->10 [style = solid, label="builder"];
4->16 [style = dotted, label="true"];
2->7 [style = bold, label=""];
17->2 [style = solid, label="i"];
7->30 [style = dotted, label="true"];
2->13 [style = dotted, label="true"];
44->0 [style = bold, label=""];
7->14 [style = dotted, label="true"];
}
