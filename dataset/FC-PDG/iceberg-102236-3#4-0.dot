digraph {
9 [style = filled, label = "state = harness.snapshot(1,1)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestFlinkScan.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(recordsList)),SCHEMA)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestFlinkScan.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(newRecordsList)),SCHEMA)@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<List<Record>> recordsList = generateRecordsAndCommitTxn(10)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "harness.open()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "runSourceFunctionInTask(sourceContext,function)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ScanContext scanContext = ScanContext.builder().monitorInterval(Duration.ofMillis(100)).startSnapshotId(startSnapshotId).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "generateRecordsAndCommitTxn(5)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testConsumeFromStartSnapshotId['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "List<List<Record>> newRecordsList = generateRecordsAndCommitTxn(10)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Thread.sleep(1000L)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ScanContext scanContext = ScanContext.builder().monitorInterval(Duration.ofMillis(100)).build()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "harness.open()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long startSnapshotId = table.currentSnapshot().snapshotId()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "func.close()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "harness.setup()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "StreamingMonitorFunction newFunc = createFunction(scanContext)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "newFunc.close()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Thread.sleep(1000L)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "testCheckpointRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "TestSourceContext sourceContext = new TestSourceContext(latch)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testConsumeFromStartSnapshotId['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<List<Record>> recordsList = generateRecordsAndCommitTxn(5)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"Should produce the expected splits\",1,sourceContext.splits.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "harness.initializeState(state)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(\"Should produce the expected splits\",1,sourceContext.splits.size())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(\"Should have expected elements.\",latch.await(WAIT_TIME_MILLIS,TimeUnit.MILLISECONDS))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TestSourceContext sourceContext = new TestSourceContext(latch)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamingMonitorFunction function = createFunction(scanContext)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "StreamingMonitorFunction func = createFunction(scanContext)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "CountDownLatch latch = new CountDownLatch(1)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "harness.setup()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "OperatorSubtaskState state@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Assert.assertTrue(\"Should have expected elements.\",latch.await(WAIT_TIME_MILLIS,TimeUnit.MILLISECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TestHelpers.assertRecords(sourceContext.toRows(),Lists.newArrayList(Iterables.concat(recordsList)),SCHEMA)@@@18@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "runSourceFunctionInTask(sourceContext,newFunc)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "runSourceFunctionInTask(sourceContext,func)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "function.close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(\"Should produce the expected splits\",1,sourceContext.splits.size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29->30 [style = bold, label=""];
28->31 [style = bold, label=""];
12->0 [style = bold, label=""];
30->34 [style = bold, label=""];
9->30 [style = solid, label="state"];
38->36 [style = bold, label=""];
15->1 [style = bold, label=""];
4->7 [style = bold, label=""];
15->1 [style = solid, label="sourceContext"];
39->28 [style = bold, label=""];
35->21 [style = solid, label="sourceContext"];
23->24 [style = bold, label=""];
24->20 [style = bold, label=""];
0->2 [style = solid, label="recordsList"];
13->17 [style = bold, label=""];
36->2 [style = bold, label=""];
39->28 [style = solid, label="scanContext"];
2->17 [style = dashed, label="0"];
25->26 [style = bold, label=""];
10->14 [style = solid, label="function"];
10->8 [style = bold, label=""];
27->23 [style = bold, label=""];
11->9 [style = bold, label=""];
6->13 [style = bold, label=""];
14->11 [style = bold, label=""];
5->10 [style = bold, label=""];
1->14 [style = bold, label=""];
31->32 [style = bold, label=""];
2->25 [style = bold, label=""];
5->10 [style = solid, label="scanContext"];
19->35 [style = solid, label="latch"];
8->3 [style = bold, label=""];
1->37 [style = bold, label=""];
9->6 [style = bold, label=""];
39->26 [style = solid, label="scanContext"];
28->1 [style = solid, label="func"];
33->22 [style = bold, label=""];
7->12 [style = bold, label=""];
21->18 [style = bold, label=""];
32->8 [style = bold, label=""];
7->22 [style = dashed, label="0"];
1->14 [style = solid, label="sourceContext"];
37->11 [style = bold, label=""];
3->15 [style = bold, label=""];
25->20 [style = solid, label="newRecordsList"];
35->21 [style = bold, label=""];
26->21 [style = solid, label="newFunc"];
14->1 [style = dashed, label="0"];
16->7 [style = bold, label=""];
9->38 [style = bold, label=""];
0->5 [style = bold, label=""];
0->17 [style = solid, label="recordsList"];
13->2 [style = bold, label=""];
34->19 [style = bold, label=""];
18->27 [style = bold, label=""];
3->15 [style = solid, label="latch"];
15->1 [style = solid, label="latch"];
26->29 [style = bold, label=""];
19->35 [style = bold, label=""];
22->39 [style = bold, label=""];
22->2 [style = solid, label="recordsList"];
}
