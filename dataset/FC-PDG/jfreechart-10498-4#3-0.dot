digraph {
0 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BlockContainer c1 = new BlockContainer(new FlowArrangement())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Graphics2D g2 = image.createGraphics()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "BufferedImage image = new BufferedImage(200,100,BufferedImage.TYPE_INT_RGB)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c1.add(new EmptyBlock(1.2,3.4))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(60.0,size.width,EPSILON)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "BlockContainer container = new BlockContainer(new BorderArrangement())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "BlockContainer c2 = CloneUtils.clone(c1)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "container.add(new EmptyBlock(300.0,6.0))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "container.clear()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "container.add(new EmptyBlock(30.0,6.0))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "container.add(new EmptyBlock(20.0,6.0),RectangleEdge.RIGHT)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "size = container.arrange(g2,constraint)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Size2D size = container.arrange(g2,constraint)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(c1.equals(c2))@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BlockContainer c2 = (BlockContainer)c1.clone()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "assertEquals(6.0,size.height,EPSILON)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(c1.getClass() == c2.getClass())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testBugX['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(6.0,size.height,EPSILON)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(200.0,size.width,EPSILON)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "container.add(new EmptyBlock(10.0,6.0),RectangleEdge.LEFT)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "container.add(new EmptyBlock(20.0,6.0),RectangleEdge.RIGHT)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "RectangleConstraint constraint = new RectangleConstraint(new Range(0.0,200.0),new Range(0.0,100.0))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "container.add(new EmptyBlock(10.0,6.0),RectangleEdge.LEFT)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(c1 != c2)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->23 [style = solid, label="g2"];
11->16 [style = bold, label=""];
15->10 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = solid, label="c1"];
15->22 [style = solid, label="constraint"];
20->26 [style = bold, label=""];
2->3 [style = bold, label=""];
14->22 [style = bold, label=""];
5->4 [style = solid, label="c2"];
10->17 [style = bold, label=""];
4->2 [style = bold, label=""];
12->24 [style = bold, label=""];
24->23 [style = bold, label=""];
6->5 [style = bold, label=""];
18->20 [style = bold, label=""];
26->12 [style = bold, label=""];
1->6 [style = bold, label=""];
5->3 [style = solid, label="c2"];
0->1 [style = bold, label=""];
23->19 [style = bold, label=""];
5->4 [style = bold, label=""];
6->8 [style = bold, label=""];
8->3 [style = solid, label="c2"];
9->14 [style = bold, label=""];
25->15 [style = bold, label=""];
5->8 [style = dashed, label="0"];
1->4 [style = solid, label="c1"];
11->22 [style = solid, label="g2"];
15->23 [style = solid, label="constraint"];
8->4 [style = solid, label="c2"];
8->4 [style = bold, label=""];
16->9 [style = bold, label=""];
22->13 [style = bold, label=""];
13->18 [style = bold, label=""];
17->11 [style = bold, label=""];
19->21 [style = bold, label=""];
}
