digraph {
23 [style = filled, label = "updateList.add(getType(\"name\",\"double\",\"class\",RANDOMIZED_NUMERIC_FIELDTYPES.get()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "defineFields(updateList,fieldsToTestGroupSortFirst,false,\"sorMissingFirst\",\"true\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "updateList.add(getType(\"name\",\"boolean\",\"class\",\"solr.BoolField\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cluster.getSolrClient().setDefaultCollection(COLLECTION)@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "fieldsToTestGroupSortLast = Collections.unmodifiableList(Arrays.asList(new FieldProps(\"intGSL\",\"int\"),new FieldProps(\"longGSL\",\"long\"),new FieldProps(\"doubleGSL\",\"double\"),new FieldProps(\"floatGSL\",\"float\"),new FieldProps(\"dateGSL\",\"date\"),new FieldProps(\"stringGSL\",\"string\"),new FieldProps(\"boolGSL\",\"boolean\")))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertNull(\"Error adding fields\",multipleUpdatesResponse.getResponse().get(\"errors\"))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "fieldsToTestGroupSortFirst = Collections.unmodifiableList(Arrays.asList(new FieldProps(\"intGSF\",\"int\"),new FieldProps(\"longGSF\",\"long\"),new FieldProps(\"doubleGSF\",\"double\"),new FieldProps(\"floatGSF\",\"float\"),new FieldProps(\"dateGSF\",\"date\"),new FieldProps(\"stringGSF\",\"string\"),new FieldProps(\"boolGSF\",\"boolean\")))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "CollectionAdminRequest.createCollection(COLL_NAME,\"conf1\",1,2).process(cluster.getSolrClient())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "createCluster['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "System.setProperty(\"managed.schema.mutable\",\"true\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "defineFields(updateList,fieldsToTestSingle,false)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "createCluster['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "updateList.add(getType(\"name\",\"float\",\"class\",RANDOMIZED_NUMERIC_FIELDTYPES.get()))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "fieldsToTestMulti = Collections.unmodifiableList(Arrays.asList(new FieldProps(\"intFieldMulti\",\"int\",5),new FieldProps(\"longFieldMulti\",\"long\",5),new FieldProps(\"doubleFieldMulti\",\"double\",5),new FieldProps(\"floatFieldMulti\",\"float\",5),new FieldProps(\"dateFieldMulti\",\"date\",5),new FieldProps(\"stringFieldMulti\",\"string\",5),new FieldProps(\"boolFieldMulti\",\"boolean\",2)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "MultiUpdate multiUpdateRequest = new MultiUpdate(updateList)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "defineFields(updateList,fieldsToTestGroupSortLast,false,\"sorMissingLast\",\"true\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "cluster.waitForActiveCollection(COLL_NAME,1,2)@@@6@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "defineFields(updateList,fieldsToTestMulti,true)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "CollectionAdminRequest.createCollection(COLLECTION,\"conf1\",4,1).setMaxShardsPerNode(2).process(cluster.getSolrClient())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "createCluster['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "fieldsToTestSingle = Collections.unmodifiableList(Arrays.asList(new FieldProps(\"intField\",\"int\",1),new FieldProps(\"longField\",\"long\",1),new FieldProps(\"doubleField\",\"double\",1),new FieldProps(\"floatField\",\"float\",1),new FieldProps(\"dateField\",\"date\",1),new FieldProps(\"stringField\",\"string\",1),new FieldProps(\"boolField\",\"boolean\",1)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SchemaResponse.UpdateResponse multipleUpdatesResponse = multiUpdateRequest.process(cluster.getSolrClient(),COLLECTION)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Update> updateList = new ArrayList<>(fieldsToTestSingle.size() + fieldsToTestMulti.size() + fieldsToTestGroupSortFirst.size() + fieldsToTestGroupSortLast.size() + 4)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "configureCluster(2).addConfig(\"conf1\",TEST_PATH().resolve(\"configsets\").resolve(\"cloud-managed\").resolve(\"conf\")).configure()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "updateList.add(getType(\"name\",\"date\",\"class\",RANDOMIZED_NUMERIC_FIELDTYPES.get()))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11->20 [style = bold, label=""];
21->22 [style = bold, label=""];
20->16 [style = bold, label=""];
22->24 [style = bold, label=""];
10->16 [style = solid, label="updateList"];
7->9 [style = bold, label=""];
13->23 [style = bold, label=""];
12->18 [style = solid, label="fieldsToTestGroupSortLast"];
16->8 [style = bold, label=""];
19->0 [style = bold, label=""];
10->20 [style = solid, label="updateList"];
10->18 [style = solid, label="updateList"];
15->7 [style = bold, label=""];
14->11 [style = bold, label=""];
2->17 [style = bold, label=""];
8->18 [style = bold, label=""];
12->10 [style = bold, label=""];
10->13 [style = bold, label=""];
17->15 [style = bold, label=""];
3->0 [style = bold, label=""];
10->8 [style = solid, label="updateList"];
2->1 [style = bold, label=""];
7->16 [style = solid, label="fieldsToTestMulti"];
23->14 [style = bold, label=""];
18->21 [style = bold, label=""];
15->20 [style = solid, label="fieldsToTestSingle"];
0->2 [style = bold, label=""];
24->6 [style = bold, label=""];
10->21 [style = solid, label="updateList"];
1->17 [style = dashed, label="0"];
9->8 [style = solid, label="fieldsToTestGroupSortFirst"];
4->0 [style = bold, label=""];
9->12 [style = bold, label=""];
1->5 [style = bold, label=""];
}
