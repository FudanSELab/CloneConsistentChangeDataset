digraph {
43 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertOrder(tuples,0,1,3,4)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SolrParams sParamsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertOrder(tuples,0,2,1,3,4)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(5,tuples.size())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertOrder(tuples,0,1,2,3,4)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tuples = getTuples(mstream)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING)))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.DESCENDING))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "tuples = getTuples(mstream)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "testMergeStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertEquals(4,tuples.size())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(4 1)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i desc\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "SolrParams sParamsB = mapParams(\"q\",\"id:(0 2 3)\",\"fl\",\"id,a_s,a_i\",\"sort\",\"a_i asc\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mstream = new MergeStream(streamA,streamB,new MultipleFieldComparator(new FieldComparator(\"a_f\",ComparatorOrder.ASCENDING),new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING)))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertOrder(tuples,2,0,1,3,4)@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "SolrParams sParams = StreamingTest.mapParams(\"q\",\"*:*\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(5,tuples.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "testUniqueStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "testMergeStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "CloudSolrStream stream = new CloudSolrStream(zkHost,COLLECTION,sParams)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "sParamsA = mapParams(\"q\",\"id:(2 4 1)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i asc\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "UniqueStream ustream = new UniqueStream(stream,new FieldEqualitor(\"a_f\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertOrder(tuples,4,3,2,1,0)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "sParamsB = mapParams(\"q\",\"id:(0 3)\",\"fl\",\"id,a_s,a_i,a_f\",\"sort\",\"a_f asc,a_i desc\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "CloudSolrStream streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "tuples = getTuples(mstream)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "CloudSolrStream streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "MergeStream mstream = new MergeStream(streamA,streamB,new FieldComparator(\"a_i\",ComparatorOrder.ASCENDING))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsB)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "List<Tuple> tuples = getTuples(ustream)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTIONORALIAS,sParamsA)@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "streamA = new CloudSolrStream(zkHost,COLLECTION,sParamsA)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "streamB = new CloudSolrStream(zkHost,COLLECTION,sParamsB)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "List<Tuple> tuples = getTuples(mstream)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(5,tuples.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(5,tuples.size())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->36 [style = dashed, label="0"];
15->10 [style = bold, label=""];
20->26 [style = bold, label=""];
48->44 [style = solid, label="tuples"];
2->17 [style = solid, label="streamB"];
1->20 [style = bold, label=""];
28->9 [style = bold, label=""];
49->48 [style = bold, label=""];
25->43 [style = dashed, label="0"];
22->30 [style = bold, label=""];
21->28 [style = bold, label=""];
9->6 [style = bold, label=""];
16->47 [style = dashed, label="0"];
12->37 [style = solid, label="sParamsA"];
33->18 [style = bold, label=""];
17->33 [style = solid, label="mstream"];
34->17 [style = bold, label=""];
40->22 [style = bold, label=""];
25->15 [style = bold, label=""];
37->32 [style = bold, label=""];
14->20 [style = solid, label="tuples"];
39->6 [style = solid, label="streamA"];
41->13 [style = bold, label=""];
36->6 [style = bold, label=""];
12->19 [style = solid, label="sParamsA"];
13->34 [style = bold, label=""];
22->30 [style = solid, label="mstream"];
28->36 [style = bold, label=""];
26->7 [style = bold, label=""];
31->43 [style = solid, label="sParamsA"];
6->23 [style = solid, label="mstream"];
18->11 [style = bold, label=""];
27->16 [style = bold, label=""];
16->39 [style = solid, label="sParamsA"];
13->34 [style = solid, label="sParamsB"];
13->2 [style = solid, label="sParamsB"];
32->8 [style = solid, label="sParamsB"];
12->37 [style = bold, label=""];
29->27 [style = bold, label=""];
15->10 [style = solid, label="sParamsB"];
8->38 [style = dashed, label="0"];
26->7 [style = solid, label="sParamsA"];
37->5 [style = solid, label="streamA"];
32->38 [style = solid, label="sParamsB"];
16->39 [style = bold, label=""];
33->11 [style = solid, label="tuples"];
27->47 [style = bold, label=""];
36->6 [style = solid, label="streamB"];
24->3 [style = bold, label=""];
25->22 [style = solid, label="streamA"];
16->21 [style = solid, label="sParamsA"];
2->17 [style = bold, label=""];
21->46 [style = dashed, label="0"];
38->5 [style = bold, label=""];
30->24 [style = bold, label=""];
31->25 [style = bold, label=""];
40->22 [style = solid, label="streamB"];
5->14 [style = solid, label="mstream"];
50->27 [style = bold, label=""];
35->42 [style = bold, label=""];
6->23 [style = bold, label=""];
42->16 [style = bold, label=""];
49->48 [style = solid, label="ustream"];
3->12 [style = bold, label=""];
28->36 [style = solid, label="sParamsB"];
9->6 [style = solid, label="streamB"];
23->0 [style = bold, label=""];
45->44 [style = bold, label=""];
27->42 [style = dashed, label="0"];
21->39 [style = dashed, label="0"];
26->41 [style = solid, label="sParamsA"];
4->31 [style = bold, label=""];
26->41 [style = bold, label=""];
32->8 [style = bold, label=""];
19->32 [style = bold, label=""];
10->40 [style = dashed, label="0"];
41->17 [style = solid, label="streamA"];
43->22 [style = solid, label="streamA"];
31->43 [style = bold, label=""];
15->40 [style = bold, label=""];
7->41 [style = dashed, label="0"];
10->22 [style = solid, label="streamB"];
13->2 [style = bold, label=""];
7->13 [style = bold, label=""];
10->22 [style = bold, label=""];
46->49 [style = solid, label="stream"];
46->49 [style = bold, label=""];
47->46 [style = bold, label=""];
19->5 [style = solid, label="streamA"];
17->33 [style = bold, label=""];
30->3 [style = solid, label="tuples"];
31->25 [style = solid, label="sParamsA"];
5->14 [style = bold, label=""];
23->4 [style = solid, label="tuples"];
39->28 [style = bold, label=""];
14->1 [style = bold, label=""];
32->38 [style = bold, label=""];
48->45 [style = bold, label=""];
8->5 [style = bold, label=""];
43->15 [style = bold, label=""];
0->4 [style = bold, label=""];
16->21 [style = bold, label=""];
34->17 [style = solid, label="streamB"];
2->34 [style = dashed, label="0"];
28->9 [style = solid, label="sParamsB"];
15->40 [style = solid, label="sParamsB"];
8->5 [style = solid, label="streamB"];
47->46 [style = solid, label="sParams"];
7->17 [style = solid, label="streamA"];
12->19 [style = bold, label=""];
19->37 [style = dashed, label="0"];
21->6 [style = solid, label="streamA"];
38->5 [style = solid, label="streamB"];
}
