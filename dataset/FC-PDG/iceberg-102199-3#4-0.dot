digraph {
12 [style = filled, label = "Map<String,String> props = ImmutableMap.of(TableProperties.DEFAULT_FILE_FORMAT,format.name())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "before['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tablePath = warehouse.concat(\"/test\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "File folder = TEMPORARY_FOLDER.newFolder()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "tablePath = folder.getAbsolutePath()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String warehouse = folder.getAbsolutePath()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "before['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "env = StreamExecutionEnvironment.getExecutionEnvironment(MiniClusterResource.DISABLE_CLASSLOADER_CHECK_CONFIG).enableCheckpointing(100).setParallelism(parallelism).setMaxParallelism(parallelism)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "before['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Map<String,String> props = ImmutableMap.of(TableProperties.DEFAULT_FILE_FORMAT,format.name())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(\"Should create the table path correctly.\",new File(tablePath).mkdir())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "tableLoader = TableLoader.fromHadoopTable(tablePath)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "table = SimpleDataUtil.createTable(tablePath,props,partitioned)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "table = SimpleDataUtil.createTable(tablePath,props,partitioned)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "File folder = tempFolder.newFolder()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "env = StreamExecutionEnvironment.getExecutionEnvironment().enableCheckpointing(100).setParallelism(parallelism).setMaxParallelism(parallelism)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->9 [style = bold, label=""];
8->0 [style = solid, label="props"];
2->7 [style = solid, label="tablePath"];
13->14 [style = solid, label="tablePath"];
2->3 [style = bold, label=""];
1->9 [style = dashed, label="0"];
9->7 [style = bold, label=""];
1->7 [style = bold, label=""];
10->6 [style = bold, label=""];
15->5 [style = bold, label=""];
6->2 [style = bold, label=""];
8->0 [style = bold, label=""];
13->12 [style = bold, label=""];
6->13 [style = dashed, label="0"];
5->6 [style = bold, label=""];
5->10 [style = dashed, label="0"];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
3->8 [style = bold, label=""];
5->13 [style = bold, label=""];
12->14 [style = bold, label=""];
2->0 [style = solid, label="tablePath"];
4->5 [style = bold, label=""];
12->14 [style = solid, label="props"];
}
