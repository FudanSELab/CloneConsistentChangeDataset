digraph {
3 [style = filled, label = "String serverHost = InetAddress.getLocalHost().getHostAddress()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "server.start()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "createSelector(sslClientConfigs)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "sslServerConfigs = serverCertStores.getTrustingConfig(clientCertStores)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "selector.connect(node,addr,BUFFER_SIZE,BUFFER_SIZE)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol),securityProtocol,new TestSecurityConfig(sslServerConfigs),serverHost,null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "NetworkTestUtils.waitForChannelClose(selector,node,ChannelState.AUTHENTICATE)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String node = \"0\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "serverCertStores = new CertStores(true,\"notahost\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SecurityProtocol securityProtocol = SecurityProtocol.SSL@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testEndpointIdentificationDisabled['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testInvalidEndpointIdentification['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createSelector(sslClientConfigs)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "server = createEchoServer(SecurityProtocol.SSL)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "server = new NioEchoServer(ListenerName.forSecurityProtocol(securityProtocol),securityProtocol,new TestSecurityConfig(sslServerConfigs),serverHost)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "clientCertStores = new CertStores(false,\"localhost\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "sslClientConfigs.put(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG,\"HTTPS\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "selector.connect(node,addr,BUFFER_SIZE,BUFFER_SIZE)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testEndpointIdentificationDisabled['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "sslClientConfigs = clientCertStores.getTrustingConfig(serverCertStores)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "sslClientConfigs.remove(SslConfigs.SSL_ENDPOINT_IDENTIFICATION_ALGORITHM_CONFIG)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "InetSocketAddress addr = new InetSocketAddress(\"localhost\",server.port())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
14->16 [style = bold, label=""];
2->19 [style = dashed, label="0"];
9->10 [style = solid, label="securityProtocol"];
15->14 [style = bold, label=""];
7->5 [style = solid, label="node"];
19->1 [style = solid, label="sslClientConfigs"];
19->20 [style = bold, label=""];
7->0 [style = solid, label="node"];
10->12 [style = dashed, label="0"];
3->1 [style = solid, label="serverHost"];
7->13 [style = solid, label="node"];
1->21 [style = dashed, label="0"];
3->12 [style = solid, label="serverHost"];
1->0 [style = bold, label=""];
9->10 [style = bold, label=""];
16->19 [style = bold, label=""];
14->16 [style = solid, label="clientCertStores"];
2->4 [style = bold, label=""];
7->3 [style = bold, label=""];
17->7 [style = bold, label=""];
3->9 [style = bold, label=""];
8->1 [style = bold, label=""];
20->18 [style = bold, label=""];
21->5 [style = bold, label=""];
12->2 [style = bold, label=""];
15->19 [style = solid, label="serverCertStores"];
18->1 [style = bold, label=""];
4->20 [style = dashed, label="0"];
1->21 [style = bold, label=""];
5->13 [style = bold, label=""];
4->8 [style = bold, label=""];
7->15 [style = bold, label=""];
21->5 [style = solid, label="addr"];
10->2 [style = bold, label=""];
9->12 [style = bold, label=""];
3->10 [style = solid, label="serverHost"];
1->0 [style = solid, label="addr"];
9->12 [style = solid, label="securityProtocol"];
6->7 [style = bold, label=""];
11->7 [style = bold, label=""];
0->5 [style = bold, label=""];
}
