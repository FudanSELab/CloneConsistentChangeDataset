digraph {
16 [style = filled, label = "Assert.assertTrue(iterator.hasNext())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertTrue(usersCursor.isConsumed())@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(3,user.getGroups().size())@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
50 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(1,user.getRoles().size())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
38 [style = filled, label = "shouldGetAllUser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "Assertions.assertEquals(2,user.getRoles().size())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Assertions.assertEquals(1,user.getRoles().size())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "usersCursor = mapper.getAllUsers()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "testCursorMultipleCloseCall['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertFalse(iterator.hasNext())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "user = iterator.next()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(3,user.getRoles().size())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "Cursor<User> usersCursor = mapper.getAllUsers()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(2,user.getGroups().size())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "shouldGetAllUser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assertions.assertEquals(2,user.getGroups().size())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "Assertions.assertTrue(usersCursor.isConsumed())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(\"User1\",user.getName())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assertions.assertEquals(1,user.getGroups().size())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "Assertions.assertEquals(3,user.getGroups().size())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Iterator<User> iterator = usersCursor.iterator()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(usersCursor.isOpen())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertFalse(usersCursor.isOpen())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "usersCursor.close()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "Assertions.assertFalse(usersCursor.isOpen())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "user = iterator.next()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Cursor<User> usersCursor@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "User user = iterator.next()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "user = iterator.next()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assertions.assertTrue(usersCursor.isOpen())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Assertions.assertEquals(3,user.getRoles().size())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "Assert.assertEquals(1,user.getGroups().size())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(2,user.getRoles().size())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "usersCursor.close()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertFalse(usersCursor.isConsumed())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assertions.assertFalse(usersCursor.isConsumed())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44->30 [style = bold, label=""];
13->32 [style = bold, label=""];
9->51 [style = bold, label=""];
52->46 [style = bold, label=""];
0->37 [style = dashed, label="0"];
18->23 [style = bold, label=""];
37->36 [style = bold, label=""];
17->43 [style = dashed, label="0"];
0->6 [style = bold, label=""];
29->39 [style = bold, label=""];
16->45 [style = bold, label=""];
39->13 [style = bold, label=""];
3->33 [style = dashed, label="0"];
26->32 [style = dashed, label="0"];
1->31 [style = dashed, label="0"];
22->9 [style = bold, label=""];
34->33 [style = bold, label=""];
4->19 [style = bold, label=""];
41->37 [style = bold, label=""];
36->31 [style = bold, label=""];
1->20 [style = bold, label=""];
10->48 [style = bold, label=""];
19->10 [style = bold, label=""];
32->27 [style = bold, label=""];
30->9 [style = bold, label=""];
21->25 [style = bold, label=""];
35->43 [style = bold, label=""];
23->0 [style = bold, label=""];
45->44 [style = bold, label=""];
8->35 [style = bold, label=""];
25->2 [style = bold, label=""];
50->52 [style = bold, label=""];
47->50 [style = bold, label=""];
38->19 [style = bold, label=""];
28->41 [style = bold, label=""];
43->28 [style = bold, label=""];
2->13 [style = bold, label=""];
49->53 [style = bold, label=""];
6->1 [style = bold, label=""];
31->42 [style = bold, label=""];
11->35 [style = dashed, label="0"];
21->29 [style = bold, label=""];
40->16 [style = bold, label=""];
10->5 [style = bold, label=""];
20->42 [style = dashed, label="0"];
21->47 [style = dashed, label="0"];
5->10 [style = dashed, label="0"];
13->26 [style = bold, label=""];
6->36 [style = dashed, label="0"];
22->30 [style = dashed, label="0"];
24->9 [style = dashed, label="0"];
14->12 [style = bold, label=""];
51->47 [style = bold, label=""];
7->16 [style = bold, label=""];
26->15 [style = bold, label=""];
14->45 [style = dashed, label="0"];
2->39 [style = dashed, label="0"];
1->46 [style = dashed, label="0"];
12->44 [style = dashed, label="0"];
25->29 [style = dashed, label="0"];
18->28 [style = dashed, label="0"];
5->7 [style = bold, label=""];
16->14 [style = bold, label=""];
3->21 [style = bold, label=""];
11->17 [style = bold, label=""];
48->7 [style = bold, label=""];
15->27 [style = dashed, label="0"];
23->41 [style = dashed, label="0"];
5->40 [style = bold, label=""];
33->21 [style = bold, label=""];
53->10 [style = bold, label=""];
8->11 [style = bold, label=""];
24->3 [style = bold, label=""];
9->24 [style = bold, label=""];
12->22 [style = bold, label=""];
17->18 [style = bold, label=""];
15->8 [style = bold, label=""];
27->8 [style = bold, label=""];
24->34 [style = dashed, label="0"];
7->40 [style = dashed, label="0"];
9->34 [style = bold, label=""];
}
