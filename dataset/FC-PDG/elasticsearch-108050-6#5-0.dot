digraph {
5 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "ensureNoIndexMetadata['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Path indicesPath = nodePath.indicesPath@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shardDataPaths.isEmpty() == false@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false and \" + Node.NODE_MASTER_SETTING.getKey() + \"=false, but has index metadata: \" + indexMetadataPaths + \". Use 'elasticsearch-node repurpose' tool to clean up\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "List<Path> shardDataPaths = new ArrayList<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Files.isDirectory(indexPath)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Path indexPath@@@8@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Files.isDirectory(indicesPath)@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false, but has shard data: \" + shardDataPaths)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "List<Path> indexMetaDataPaths = collectIndexMetaDataPaths(nodePaths)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "indexMetaDataPaths.isEmpty() == false@@@4@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "indexMetadataPaths.isEmpty() == false@@@4@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "indexStream@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ensureNoIndexMetaData['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Path> indexMetadataPaths = collectIndexMetadataPaths(nodePaths)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "throw new IllegalStateException(\"Node is started with \" + Node.NODE_DATA_SETTING.getKey() + \"=false and \" + Node.NODE_MASTER_SETTING.getKey() + \"=false, but has index metadata: \" + indexMetaDataPaths + \". Use 'elasticsearch-node repurpose' tool to clean up\")@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "shardStream.filter(null).map(null).forEach(null)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ensureNoShardData['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final NodePath(( nodePaths@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
4->18 [style = dashed, label="0"];
7->6 [style = dotted, label="true"];
15->13 [style = bold, label=""];
3->1 [style = bold, label=""];
15->14 [style = bold, label=""];
20->11 [style = dotted, label="true"];
17->18 [style = dotted, label="true"];
16->10 [style = bold, label=""];
9->6 [style = solid, label="indexMetadataPaths"];
1->2 [style = solid, label="indexMetaDataPaths"];
0->2 [style = bold, label=""];
3->4 [style = dotted, label="true"];
1->9 [style = dashed, label="0"];
20->14 [style = bold, label=""];
1->0 [style = bold, label=""];
9->7 [style = bold, label=""];
15->16 [style = bold, label=""];
16->10 [style = dotted, label="true"];
13->16 [style = bold, label=""];
12->10 [style = solid, label="shardDataPaths"];
15->13 [style = dotted, label="true"];
1->12 [style = dashed, label="0"];
17->12 [style = bold, label=""];
20->16 [style = bold, label=""];
4->1 [style = solid, label="nodePaths"];
8->5 [style = dotted, label="true"];
7->6 [style = bold, label=""];
12->14 [style = bold, label=""];
14->20 [style = solid, label="indicesPath"];
8->9 [style = bold, label=""];
2->6 [style = dashed, label="0"];
4->5 [style = dashed, label="0"];
20->19 [style = dotted, label="true"];
13->15 [style = bold, label=""];
0->2 [style = dotted, label="true"];
0->7 [style = dashed, label="0"];
20->15 [style = bold, label=""];
5->9 [style = solid, label="nodePaths"];
13->14 [style = bold, label=""];
20->15 [style = dotted, label="true"];
14->20 [style = bold, label=""];
}
