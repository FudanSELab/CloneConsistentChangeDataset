digraph {
31 [style = filled, label = "client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "client.getConnectionStateListenable().addListener(null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testAdd['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "CountDownLatch latch = setChangeWaiter(client)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final CountDownLatch reconnectLatch = new CountDownLatch(1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testAddWithoutEnsembleTracker['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client.start()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertConfig(newConfig,newInstances)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@17@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(newConfigData)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "newConfigData = client.getConfig().forEnsemble()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final String initialClusterCS = cluster.getConnectString()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertTrue(reconnectLatch.await(2,TimeUnit.SECONDS))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "newCluster.start()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(((CuratorFrameworkImpl)client).getEnsembleTracker(),null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testAdd['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12->7 [style = bold, label=""];
25->32 [style = bold, label=""];
22->5 [style = bold, label=""];
8->9 [style = bold, label=""];
10->2 [style = bold, label=""];
20->7 [style = bold, label=""];
9->4 [style = bold, label=""];
29->17 [style = solid, label="initialClusterCS"];
8->19 [style = solid, label="newConfig"];
27->28 [style = bold, label=""];
7->3 [style = solid, label="latch"];
2->11 [style = bold, label=""];
11->5 [style = solid, label="oldConfig"];
17->19 [style = bold, label=""];
24->17 [style = bold, label=""];
9->24 [style = solid, label="newInstances"];
9->15 [style = bold, label=""];
4->15 [style = dashed, label="0"];
28->23 [style = bold, label=""];
12->1 [style = solid, label="latch"];
29->27 [style = solid, label="initialClusterCS"];
31->18 [style = bold, label=""];
4->17 [style = dashed, label="0"];
30->25 [style = bold, label=""];
1->6 [style = bold, label=""];
3->13 [style = bold, label=""];
29->25 [style = solid, label="initialClusterCS"];
0->1 [style = bold, label=""];
32->21 [style = bold, label=""];
19->27 [style = bold, label=""];
23->31 [style = bold, label=""];
3->15 [style = solid, label="newConfig"];
4->24 [style = bold, label=""];
29->30 [style = solid, label="initialClusterCS"];
13->8 [style = solid, label="newConfigData"];
12->16 [style = solid, label="latch"];
7->0 [style = bold, label=""];
6->3 [style = bold, label=""];
16->6 [style = bold, label=""];
12->20 [style = bold, label=""];
3->9 [style = solid, label="newConfig"];
12->20 [style = solid, label="oldConfig"];
8->21 [style = solid, label="newConfig"];
1->16 [style = dashed, label="0"];
14->2 [style = bold, label=""];
29->22 [style = bold, label=""];
3->4 [style = solid, label="newConfig"];
8->24 [style = solid, label="newConfig"];
5->12 [style = bold, label=""];
7->1 [style = bold, label=""];
13->8 [style = bold, label=""];
18->30 [style = bold, label=""];
26->29 [style = bold, label=""];
11->5 [style = bold, label=""];
13->9 [style = solid, label="newInstances"];
6->3 [style = solid, label="newConfigData"];
0->16 [style = bold, label=""];
}
