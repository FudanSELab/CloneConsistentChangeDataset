digraph {
12 [style = filled, label = "shouldReturnAllStores['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "topology.addProcessor(\"processor\",null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "final Map<String,StateStore> allStores = testDriver.getAllStateStores()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(testDriver.getAllStateStores().keySet(),equalTo(expectedStoreNames))@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "topology.addStateStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"store\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()),\"processor\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expectedStoreNames.add(\"globalStore\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNotNull(store)@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "topology.addProcessor(\"processor\",null,\"source\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "shouldReturnAllStoresNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "topology.addGlobalStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"globalStore\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()).withLoggingDisabled(),\"sourceProcessorName\",Serdes.ByteArray().deserializer(),Serdes.ByteArray().deserializer(),\"globalTopicName\",\"globalProcessorName\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Set<String> expectedStoreNames = new HashSet<>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "topology.addStateStore(new KeyValueStoreBuilder<>(Stores.inMemoryKeyValueStore(\"store\"),Serdes.ByteArray(),Serdes.ByteArray(),new SystemTime()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(allStores.keySet(),equalTo(expectedStoreNames))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "shouldReturnAllStores['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expectedStoreNames.add(\"store\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Topology topology = setupSourceSinkTopology()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDriver = new TopologyTestDriver(topology,config)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
7->10 [style = bold, label=""];
0->16 [style = dashed, label="0"];
12->9 [style = bold, label=""];
9->4 [style = solid, label="topology"];
9->16 [style = bold, label=""];
15->5 [style = bold, label=""];
10->7 [style = dashed, label="0"];
9->5 [style = solid, label="topology"];
3->9 [style = bold, label=""];
4->7 [style = solid, label="expectedStoreNames"];
6->5 [style = bold, label=""];
5->4 [style = bold, label=""];
0->13 [style = dashed, label="0"];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
1->11 [style = solid, label="expectedStoreNames"];
2->7 [style = bold, label=""];
13->6 [style = bold, label=""];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
}
