digraph {
10 [style = filled, label = "Assert.assertTrue(a.equals(b))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(a,b)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testFixAuthorLastNameFirstCommasOxfordComma['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith\",false,true))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertTrue(a.equals(b))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(\"\",AuthorList.fixAuthorLastNameFirstCommas(\"\",true,true))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "Assert.assertTrue(AuthorList.fixAuthorLastNameOnlyCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true).equals(AuthorList.fixAuthorLastNameOnlyCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(\"Smith, J.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith\",true,true))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(\"von Neumann, Smith, and Black Brown\",AuthorList.fixAuthorLastNameOnlyCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith and Black Brown, Peter\",false,true))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Assert.assertEquals(\"Smith\",AuthorList.fixAuthorLastNameOnlyCommas(\"John Smith\",true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorLastNameFirstCommas(\"\",false,true))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(\"von Neumann, J. P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Peter von Neumann\",true,true))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(a,b)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "String a = AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(\"Smith\",AuthorList.fixAuthorLastNameOnlyCommas(\"Smith, Jr, John\",false))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String b = AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"\",AuthorList.fixAuthorLastNameFirstCommas(\"\",true,true))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(\"von Neumann, Smith and Black Brown\",AuthorList.fixAuthorLastNameOnlyCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(\"\",AuthorList.fixAuthorLastNameFirstCommas(\"\",false,true))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(\"Smith\",AuthorList.fixAuthorLastNameOnlyCommas(\"Smith, Jr, John\",true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(\"\",AuthorList.fixAuthorLastNameOnlyCommas(\"\",false))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertEquals(\"Smith\",AuthorList.fixAuthorLastNameOnlyCommas(\"John Smith\",false))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(\"\",AuthorList.fixAuthorLastNameOnlyCommas(\"\",true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testFixAuthorLastNameOnlyCommas['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testFixAuthorLastNameFirstCommasOxfordComma['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "assertEquals(\"Smith, John and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith and Black Brown, Peter\",false,true))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(\"Smith, John\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith\",false,true))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(AuthorList.fixAuthorLastNameOnlyCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false).equals(AuthorList.fixAuthorLastNameOnlyCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false)))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false,true))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertEquals(\"von Neumann, J., Smith, J., and Black Brown, P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",true,true))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(\"Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith and Black Brown, Peter\",true,true))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(\"von Neumann, J. P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Peter von Neumann\",true,true))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"Smith, J. and Black Brown, P.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith and Black Brown, Peter\",true,true))@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"Smith, J.\",AuthorList.fixAuthorLastNameFirstCommas(\"John Smith\",true,true))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "assertEquals(\"von Neumann, John, Smith, John, and Black Brown, Peter\",AuthorList.fixAuthorLastNameFirstCommas(\"John von Neumann and John Smith and Black Brown, Peter\",false,true))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32->35 [style = bold, label=""];
23->16 [style = bold, label=""];
0->33 [style = dashed, label="0"];
26->32 [style = bold, label=""];
7->31 [style = dashed, label="0"];
1->7 [style = solid, label="b"];
4->17 [style = dashed, label="0"];
7->10 [style = bold, label=""];
5->26 [style = dashed, label="0"];
5->23 [style = dashed, label="0"];
11->34 [style = dashed, label="0"];
3->36 [style = dashed, label="0"];
1->15 [style = bold, label=""];
33->28 [style = bold, label=""];
2->32 [style = dashed, label="0"];
1->30 [style = dashed, label="0"];
22->21 [style = bold, label=""];
14->17 [style = bold, label=""];
21->24 [style = bold, label=""];
2->9 [style = bold, label=""];
36->26 [style = bold, label=""];
29->34 [style = bold, label=""];
8->21 [style = dashed, label="0"];
10->27 [style = dashed, label="0"];
8->28 [style = dashed, label="0"];
1->7 [style = bold, label=""];
0->22 [style = dashed, label="0"];
20->22 [style = bold, label=""];
24->14 [style = bold, label=""];
3->19 [style = dashed, label="0"];
9->35 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
13->24 [style = dashed, label="0"];
13->12 [style = bold, label=""];
12->14 [style = dashed, label="0"];
1->20 [style = solid, label="b"];
9->7 [style = solid, label="a"];
12->4 [style = bold, label=""];
31->27 [style = bold, label=""];
11->3 [style = bold, label=""];
30->31 [style = bold, label=""];
15->20 [style = bold, label=""];
19->23 [style = bold, label=""];
6->11 [style = bold, label=""];
34->36 [style = bold, label=""];
10->0 [style = bold, label=""];
9->15 [style = solid, label="a"];
2->16 [style = dashed, label="0"];
0->8 [style = bold, label=""];
25->19 [style = bold, label=""];
18->25 [style = bold, label=""];
11->25 [style = dashed, label="0"];
7->15 [style = dashed, label="0"];
1->15 [style = solid, label="b"];
10->20 [style = dashed, label="0"];
27->33 [style = bold, label=""];
1->10 [style = solid, label="b"];
9->1 [style = bold, label=""];
35->30 [style = bold, label=""];
16->9 [style = bold, label=""];
8->13 [style = bold, label=""];
}
