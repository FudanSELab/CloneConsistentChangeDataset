digraph {
15 [style = filled, label = "assertThat(coordinator.getMode(),equalTo(Coordinator.Mode.FOLLOWER))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "handleFollowerCheckFrom['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "long term@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(isLocalNodeElectedMaster())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "followerCheckHandler.processMessageReceived(new FollowersChecker.FollowerCheckRequest(term,node),channel)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "long term@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "handleStartJoinFrom['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DiscoveryNode node@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "long term@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "startJoinHandler.processMessageReceived(new StartJoinRequest(node,term),new TestTransportChannel(new ActionListener<>(){@Override public void onResponse(TransportResponse transportResponse){}@Override public void onFailure(Exception e){fail()}}))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "DiscoveryNode node@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final RequestHandlerRegistry<StartJoinRequest> startJoinHandler = transport.getRequestHandlers().getHandler(JoinHelper.START_JOIN_ACTION_NAME)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TestTransportChannel channel = new TestTransportChannel(new ActionListener<>(){@Override public void onResponse(TransportResponse transportResponse){}@Override public void onFailure(Exception e){fail()}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "deterministicTaskQueue.runAllRunnableTasks()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final RequestHandlerRegistry<StartJoinRequest> startJoinHandler = (RequestHandlerRegistry<StartJoinRequest>)transport.getRequestHandler(JoinHelper.START_JOIN_ACTION_NAME)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "final RequestHandlerRegistry<FollowersChecker.FollowerCheckRequest> followerCheckHandler = (RequestHandlerRegistry<FollowersChecker.FollowerCheckRequest>)transport.getRequestHandler(FollowersChecker.FOLLOWER_CHECK_ACTION_NAME)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "handleStartJoinFrom['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5->12 [style = dashed, label="0"];
11->1 [style = bold, label=""];
7->17 [style = dashed, label="0"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
14->17 [style = bold, label=""];
3->15 [style = bold, label=""];
9->10 [style = bold, label=""];
9->6 [style = dotted, label="true"];
14->13 [style = dotted, label="true"];
12->11 [style = solid, label="channel"];
13->11 [style = solid, label="term"];
4->5 [style = solid, label="term"];
9->8 [style = dotted, label="true"];
16->11 [style = solid, label="node"];
14->16 [style = dotted, label="true"];
6->5 [style = solid, label="term"];
7->5 [style = bold, label=""];
17->12 [style = bold, label=""];
6->16 [style = dashed, label="0"];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
2->6 [style = dotted, label="true"];
0->1 [style = bold, label=""];
2->4 [style = dotted, label="true"];
6->5 [style = solid, label="node"];
3->15 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
8->5 [style = solid, label="node"];
2->7 [style = bold, label=""];
}
