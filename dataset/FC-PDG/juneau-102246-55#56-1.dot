digraph {
20 [style = filled, label = "string(a.maxInput()).ifPresent(null)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "string(a.defaultAccept()).map(null).ifPresent(null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "string(a.roleGuard()).ifPresent(null)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "none(a.encoders()).ifPresent(null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "string(a.value()).ifPresent(null)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "none(a.serializers()).ifPresent(null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "RestOpContextBuilder b@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "RestOp a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "classes(a.encoders()).ifPresent(null)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "strings_cdl(a.rolesDeclared()).forEach(null)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "type(a.contextClass()).ifPresent(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "b.matchers(a.matchers())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "strings(a.produces()).map(null).forEach(null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "strings(a.path()).forEach(null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "classes(a.encoders()).ifPresent(null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "none(a.serializers()).ifPresent(null)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "b.httpMethod(v)@@@34@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "classes(a.serializers()).ifPresent(null)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "b.httpMethod(\"put\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "b.httpMethod(v)@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "string(a.debug()).map(null).ifPresent(null)@@@30@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "strings(a.defaultRequestAttributes()).map(null).forEach(null)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "b.set(REST_parsers,merge(ConverterUtils.toType(b.peek(REST_parsers),),a.parsers()))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String v = StringUtils.trim(string(a.value()).orElse(null))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "RestPut a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "strings(a.defaultQueryData()).map(null).forEach(null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "string(a.defaultCharset()).map(null).ifPresent(null)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "b.path(v.substring(i).trim())@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "b.guards(a.guards())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "string(a.defaultContentType()).map(null).ifPresent(null)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "b.converters(a.converters())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "RestOpContextBuilder b@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "classes(a.parsers()).ifPresent(null)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "int i = v.indexOf(' ')@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "i == -1@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "strings(a.consumes()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "b.path(v.substring(i).trim())@@@38@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "strings(a.defaultFormData()).map(null).forEach(null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "strings(a.defaultResponseHeaders()).map(null).forEach(null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "b.httpMethod(v.substring(0,i).trim())@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "strings(a.defaultRequestHeaders()).map(null).forEach(null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "string(a.clientVersion()).ifPresent(null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "AnnotationInfo<RestPut> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "AnnotationInfo<RestOp> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32->8 [style = solid, label="v"];
19->34 [style = bold, label=""];
0->9 [style = bold, label=""];
27->1 [style = bold, label=""];
14->25 [style = bold, label=""];
20->17 [style = bold, label=""];
28->8 [style = solid, label="i"];
8->11 [style = dotted, label="false"];
29->18 [style = dotted, label="true"];
0->37 [style = bold, label=""];
28->8 [style = dotted, label="true"];
21->6 [style = bold, label=""];
28->11 [style = dotted, label="false"];
31->16 [style = bold, label=""];
35->20 [style = bold, label=""];
34->15 [style = bold, label=""];
22->29 [style = bold, label=""];
10->35 [style = bold, label=""];
28->41 [style = dotted, label="false"];
22->32 [style = bold, label=""];
23->3 [style = bold, label=""];
18->8 [style = dotted, label="true"];
6->19 [style = bold, label=""];
41->11 [style = bold, label=""];
33->46 [style = dashed, label="0"];
42->24 [style = bold, label=""];
17->42 [style = bold, label=""];
24->22 [style = bold, label=""];
2->4 [style = bold, label=""];
23->0 [style = bold, label=""];
18->28 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
28->41 [style = bold, label=""];
29->18 [style = bold, label=""];
15->26 [style = bold, label=""];
38->6 [style = bold, label=""];
32->29 [style = bold, label=""];
47->43 [style = dotted, label="true"];
26->2 [style = bold, label=""];
11->5 [style = bold, label=""];
8->36 [style = bold, label=""];
12->10 [style = bold, label=""];
17->24 [style = bold, label=""];
13->30 [style = dotted, label="true"];
13->33 [style = dotted, label="true"];
29->28 [style = dotted, label="true"];
23->44 [style = dashed, label="0"];
25->12 [style = bold, label=""];
47->46 [style = dotted, label="true"];
37->38 [style = bold, label=""];
18->28 [style = dotted, label="true"];
28->8 [style = bold, label=""];
39->23 [style = bold, label=""];
45->0 [style = bold, label=""];
29->36 [style = solid, label="v"];
18->28 [style = solid, label="i"];
9->21 [style = bold, label=""];
13->23 [style = bold, label=""];
7->27 [style = bold, label=""];
47->44 [style = bold, label=""];
16->14 [style = bold, label=""];
39->40 [style = dotted, label="true"];
8->5 [style = dotted, label="false"];
8->36 [style = dotted, label="true"];
1->31 [style = bold, label=""];
44->45 [style = bold, label=""];
8->11 [style = bold, label=""];
29->18 [style = solid, label="v"];
39->33 [style = dotted, label="true"];
32->29 [style = solid, label="v"];
}
