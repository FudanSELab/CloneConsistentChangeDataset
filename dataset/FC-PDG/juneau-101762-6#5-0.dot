digraph {
19 [style = filled, label = "BasicHttpEntity x12 = stringEntity(\"foo\").build()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "BasicHttpResource x7 = httpResource(new StringReader(\"foo\"))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "a02_StringEntity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "client().build().post(\"/\",x9).run().assertBody().isEmpty()@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "client().build().post(\"/\",x7).run().assertBody().is(\"foo\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "a01_BasicHttpResource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "client().build().post(\"/\",x1).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").doesNotExist().assertHeader(\"X-Content-Type\").doesNotExist().assertHeader(\"X-Transfer-Encoding\").doesNotExist()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HttpEntity x2 = stringEntity(\"foo\").contentType(\"text/plain\").contentEncoding(\"identity\").build()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "client().build().post(\"/\",x5).run().assertHeader(\"X-Foo\").is(\"bar\").assertHeader(\"X-Baz\").is(\"qux\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "HttpEntity x8 = readerEntity(new StringReader(\"foo\")).cached().build()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HttpEntity x4 = stringEntity(\"foo\",contentType(\"text/plain\")).contentEncoding(\"identity\").build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "client().build().post(\"/\",x2).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").doesNotExist()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BasicHttpResource x6 = httpResource(\"foo\").headers(Arrays.asList(header(\"Foo\",\"bar\"),header(\"Baz\",\"qux\")))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "client().build().post(\"/\",x3).run().assertHeader(\"X-Content-Length\").doesNotExist().assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").is(\"chunked\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "x12.assertBytes().asString().is(\"foo\")@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "BasicHttpResource x8 = httpResource(new StringReader(\"foo\")).cache()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "client().build().post(\"/\",x8).run().assertBody().is(\"foo\")@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "client().build().post(\"/\",x4).run().assertHeader(\"X-Content-Length\").asInteger().is(3).assertHeader(\"X-Content-Encoding\").is(\"identity\").assertHeader(\"X-Content-Type\").is(\"text/plain\").assertHeader(\"X-Transfer-Encoding\").doesNotExist()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HttpEntity x7 = readerEntity(new StringReader(\"foo\")).build()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "client().build().post(\"/\",x8).run().assertBody().is(\"foo\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "BasicHttpResource x3 = httpResource(\"foo\").contentType(contentType(\"text/plain\")).contentEncoding(contentEncoding(\"identity\")).chunked()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "a02_StringEntity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "BasicHttpResource x5 = httpResource(\"foo\").header(\"Foo\",\"bar\").header(header(\"Baz\",\"qux\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "HttpEntity x3 = stringEntity(\"foo\").contentType(contentType(\"text/plain\")).contentEncoding(contentEncoding(\"identity\")).chunked().build()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "HttpEntity x1 = stringEntity(\"foo\").build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "BasicHttpResource x4 = new BasicHttpResource(\"foo\",contentType(\"text/plain\"),contentEncoding(\"identity\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "client().build().post(\"/\",x9).run().assertBody().isEmpty()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "BasicHttpResource x2 = httpResource(\"foo\").contentType(\"text/plain\").contentEncoding(\"identity\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "client().build().post(\"/\",x8).run().assertBody().is(\"foo\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "BasicHttpResource x1 = httpResource(\"foo\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "client().build().post(\"/\",x8).run().assertBody().is(\"foo\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "client().build().post(\"/\",x6).run().assertHeader(\"X-Foo\").is(\"bar\").assertHeader(\"X-Baz\").is(\"qux\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "BasicHttpResource x9 = httpResource(null)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "client().build().post(\"/\",x7).run().assertBody().is(\"foo\")@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->5 [style = bold, label=""];
4->31 [style = dashed, label="0"];
32->23 [style = bold, label=""];
5->19 [style = bold, label=""];
11->12 [style = bold, label=""];
16->26 [style = bold, label=""];
23->24 [style = bold, label=""];
25->2 [style = bold, label=""];
13->0 [style = bold, label=""];
31->9 [style = bold, label=""];
7->18 [style = bold, label=""];
9->16 [style = bold, label=""];
12->2 [style = bold, label=""];
1->8 [style = bold, label=""];
1->21 [style = dashed, label="0"];
21->8 [style = bold, label=""];
6->17 [style = bold, label=""];
6->28 [style = dashed, label="0"];
15->30 [style = dashed, label="0"];
8->6 [style = bold, label=""];
5->9 [style = bold, label=""];
3->7 [style = bold, label=""];
26->27 [style = bold, label=""];
16->10 [style = bold, label=""];
22->32 [style = bold, label=""];
19->16 [style = bold, label=""];
14->31 [style = bold, label=""];
9->19 [style = dashed, label="0"];
17->15 [style = bold, label=""];
30->3 [style = bold, label=""];
2->1 [style = bold, label=""];
8->28 [style = bold, label=""];
15->3 [style = bold, label=""];
4->13 [style = bold, label=""];
3->22 [style = bold, label=""];
29->14 [style = bold, label=""];
0->14 [style = bold, label=""];
24->29 [style = bold, label=""];
17->30 [style = bold, label=""];
33->25 [style = bold, label=""];
20->12 [style = bold, label=""];
2->21 [style = bold, label=""];
18->4 [style = bold, label=""];
28->17 [style = bold, label=""];
}
