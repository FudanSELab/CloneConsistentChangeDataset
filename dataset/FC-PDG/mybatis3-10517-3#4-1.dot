digraph {
8 [style = filled, label = "SqlSession session = sqlSessionFactory.openSession()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Post firstPost = result.getPosts().get(0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Blog result = mapper.selectBlogByPrimaryKeyColumnPrefix(2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(1,firstPost.getBlog().getId())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Post secondPost = result.getPosts().get(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(2,secondPost.getComments().get(0).getPost().getId())@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testSelectBlogWithoutPostsColumnPrefix['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertNotNull(result)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(2,firstPost.getComments().size())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSelectBlogWithPostsColumnPrefix['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(2,result.getPosts().size())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testSelectBlogWithPostsColumnPrefix['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(1,secondPost.getComments().size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"Blog without posts\",result.getTitle())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "{session.close()}@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Mapper mapper = session.getMapper()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertNotNull(result)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{session.close()}@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Mapper mapper = session.getMapper()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(2,secondPost.getComments().get(0).getPost().getId())@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(0,result.getPosts().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
5->8 [style = bold, label=""];
15->2 [style = bold, label=""];
9->16 [style = dashed, label="0"];
10->4 [style = solid, label="result"];
2->18 [style = bold, label=""];
16->17 [style = bold, label=""];
3->12 [style = bold, label=""];
2->10 [style = bold, label=""];
12->0 [style = bold, label=""];
13->11 [style = bold, label=""];
19->8 [style = bold, label=""];
1->9 [style = bold, label=""];
9->6 [style = bold, label=""];
1->20 [style = dashed, label="0"];
20->16 [style = bold, label=""];
18->4 [style = bold, label=""];
8->2 [style = bold, label=""];
11->3 [style = bold, label=""];
4->20 [style = bold, label=""];
10->4 [style = bold, label=""];
2->10 [style = solid, label="result"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
18->4 [style = solid, label="result"];
6->7 [style = bold, label=""];
10->18 [style = dashed, label="0"];
}
