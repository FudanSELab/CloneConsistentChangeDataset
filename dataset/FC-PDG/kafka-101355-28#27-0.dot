digraph {
76 [style = filled, label = "store.put(8,\"eight\")@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "testRolling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
89 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 4))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{store.close()}@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "context.restore(windowName,changeLog)@@@57@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "Utils.delete(baseDir)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "{store2.close()}@@@55@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "context.restore(windowName,changeLog)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
100 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3),segments.segmentName(4)),segmentDirs(baseDir))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@65@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "long incr = segmentSize / 2@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
90 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRolling\"){@Override public void send(final String topic,K1 key,V1 value,Integer partition,Long timestamp,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(topic,key),valueSerializer.serialize(topic,value)))}}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
91 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
115 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
99 [style = filled, label = "store.put(6,\"six\")@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
94 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@64@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(0,startTime - windowSize,startTime + windowSize)))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
112 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "store2.flush()@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
63 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store2.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
83 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 2))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 3))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store2.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "testRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
102 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
101 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(store.fetch(7,startTime + incr * 7 - windowSize,startTime + incr * 7 + windowSize)))@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store2.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRestore\"){@Override public void send(final String topic,K1 key,V1 value,Integer partition,Long timestamp,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(topic,key),valueSerializer.serialize(topic,value)))}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "store.put(2,\"two\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(store.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store2.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@59@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "store.put(1,\"one\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(baseDir,byteArraySerde,byteArraySerde,recordCollector,cache)@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(0,startTime - windowSize,startTime + windowSize)))@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
82 [style = filled, label = "store.put(7,\"seven\")@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Segments segments = new Segments(windowName,retentionPeriod,numSegments)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "context.setRecordContext(createRecordContext(startTime))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@66@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
85 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
104 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
84 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,false,true)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
111 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 7))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(3),segments.segmentName(4),segments.segmentName(5)),segmentDirs(baseDir))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@68@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "RecordCollector recordCollector = new RecordCollectorImpl(producer,\"RocksDBWindowStoreTest-TestRestoreII\"){@Override public void send(final String topic,K1 key,V1 value,Integer partition,Long timestamp,Serializer<K1> keySerializer,Serializer<V1> valueSerializer){changeLog.add(new KeyValue<>(keySerializer.serialize(topic,key),valueSerializer.serialize(topic,value)))}}@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "{Utils.delete(baseDir)}@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "testRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "{store.close()}@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "{Utils.delete(baseDir2)}@@@74@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "store.put(4,\"four\")@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "{Utils.delete(baseDir)}@@@80@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "File baseDir2 = Files.createTempDirectory(\"test\").toFile()@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(store2.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
87 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(8,startTime + incr * 8 - windowSize,startTime + incr * 8 + windowSize)))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "store.flush()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "long startTime = segmentSize * 2@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "store.put(5,\"five\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "long incr = segmentSize / 2@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 8))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
75 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 6))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "File baseDir = Files.createTempDirectory(\"test\").toFile()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "{store.close()}@@@70@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
119 [style = filled, label = "final List<KeyValue<byte((,byte((>> changeLog = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
120 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(store.fetch(1,startTime + incr - windowSize,startTime + incr + windowSize)))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "long startTime = segmentSize * 2@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
113 [style = filled, label = "store.put(0,\"zero\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(6,startTime + incr * 6 - windowSize,startTime + incr * 6 + windowSize)))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(store.fetch(5,startTime + incr * 5 - windowSize,startTime + incr * 5 + windowSize)))@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
116 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(3,startTime + incr * 3 - windowSize,startTime + incr * 3 + windowSize)))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
96 [style = filled, label = "context.setRecordContext(createRecordContext(startTime + incr * 5))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(Utils.mkList(),toList(store2.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
107 [style = filled, label = "store.flush()@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "store.put(3,\"three\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "MockProcessorContext context = new MockProcessorContext(baseDir,byteArraySerde,byteArraySerde,recordCollector,cache)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "store.flush()@@@67@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
98 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(0,startTime - windowSize,startTime + windowSize)))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(store.fetch(4,startTime + incr * 4 - windowSize,startTime + incr * 4 + windowSize)))@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Producer<byte((,byte((> producer = new MockProducer<>(true,byteArraySerde.serializer(),byteArraySerde.serializer())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "WindowStore<Integer,String> store2 = createWindowStore(context,false,true)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "WindowStore<Integer,String> store = createWindowStore(context,false,true)@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertEquals(Utils.mkList(),toList(store.fetch(2,startTime + incr * 2 - windowSize,startTime + incr * 2 + windowSize)))@@@66@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->91 [style = bold, label=""];
32->43 [style = solid, label="context"];
30->57 [style = solid, label="startTime"];
92->120 [style = bold, label=""];
30->25 [style = solid, label="startTime"];
30->49 [style = solid, label="startTime"];
39->8 [style = solid, label="incr"];
20->56 [style = dashed, label="0"];
30->71 [style = solid, label="startTime"];
117->100 [style = solid, label="incr"];
90->86 [style = bold, label=""];
30->51 [style = solid, label="startTime"];
48->106 [style = solid, label="startTime"];
117->96 [style = solid, label="incr"];
39->19 [style = solid, label="incr"];
48->102 [style = solid, label="startTime"];
114->35 [style = bold, label=""];
39->25 [style = solid, label="incr"];
30->72 [style = solid, label="startTime"];
48->114 [style = solid, label="startTime"];
79->114 [style = bold, label=""];
66->62 [style = bold, label=""];
39->61 [style = solid, label="incr"];
39->47 [style = solid, label="incr"];
57->59 [style = bold, label=""];
34->59 [style = dashed, label="0"];
7->48 [style = bold, label=""];
25->6 [style = bold, label=""];
48->12 [style = solid, label="startTime"];
39->2 [style = solid, label="incr"];
30->5 [style = solid, label="startTime"];
30->52 [style = solid, label="startTime"];
39->65 [style = solid, label="incr"];
39->64 [style = solid, label="incr"];
9->115 [style = bold, label=""];
108->74 [style = bold, label=""];
39->59 [style = solid, label="incr"];
117->103 [style = solid, label="incr"];
33->0 [style = bold, label=""];
39->51 [style = solid, label="incr"];
99->80 [style = bold, label=""];
13->85 [style = bold, label=""];
30->8 [style = solid, label="startTime"];
30->58 [style = solid, label="startTime"];
48->88 [style = solid, label="startTime"];
30->27 [style = solid, label="startTime"];
30->59 [style = solid, label="startTime"];
36->24 [style = bold, label=""];
10->12 [style = bold, label=""];
117->120 [style = solid, label="incr"];
46->21 [style = solid, label="baseDir2"];
117->121 [style = solid, label="incr"];
39->12 [style = solid, label="incr"];
14->46 [style = bold, label=""];
39->66 [style = solid, label="incr"];
74->97 [style = solid, label="baseDir"];
9->5 [style = bold, label=""];
117->16 [style = solid, label="incr"];
29->44 [style = bold, label=""];
30->66 [style = solid, label="startTime"];
117->118 [style = solid, label="incr"];
117->112 [style = solid, label="incr"];
28->63 [style = dashed, label="0"];
18->66 [style = dashed, label="0"];
40->11 [style = solid, label="baseDir"];
39->67 [style = solid, label="incr"];
17->27 [style = bold, label=""];
53->60 [style = bold, label=""];
87->104 [style = bold, label=""];
30->23 [style = solid, label="startTime"];
117->5 [style = solid, label="incr"];
119->40 [style = bold, label=""];
45->35 [style = bold, label=""];
56->53 [style = bold, label=""];
117->92 [style = solid, label="incr"];
67->52 [style = bold, label=""];
48->16 [style = solid, label="startTime"];
48->118 [style = solid, label="startTime"];
5->29 [style = bold, label=""];
40->32 [style = solid, label="baseDir"];
19->34 [style = bold, label=""];
30->63 [style = solid, label="startTime"];
98->110 [style = bold, label=""];
48->91 [style = solid, label="startTime"];
39->62 [style = solid, label="incr"];
91->23 [style = bold, label=""];
39->27 [style = solid, label="incr"];
42->38 [style = solid, label="changeLog"];
30->18 [style = solid, label="startTime"];
48->103 [style = solid, label="startTime"];
117->23 [style = solid, label="incr"];
41->4 [style = bold, label=""];
30->3 [style = solid, label="startTime"];
40->14 [style = solid, label="baseDir"];
74->6 [style = solid, label="baseDir"];
65->66 [style = bold, label=""];
29->73 [style = bold, label=""];
48->35 [style = solid, label="startTime"];
86->84 [style = solid, label="context"];
48->121 [style = solid, label="startTime"];
117->12 [style = solid, label="incr"];
48->3 [style = solid, label="startTime"];
97->8 [style = bold, label=""];
117->75 [style = solid, label="incr"];
101->16 [style = bold, label=""];
46->41 [style = bold, label=""];
72->50 [style = bold, label=""];
116->87 [style = bold, label=""];
30->2 [style = solid, label="startTime"];
117->85 [style = solid, label="incr"];
39->44 [style = solid, label="incr"];
74->115 [style = solid, label="baseDir"];
96->25 [style = bold, label=""];
39->63 [style = solid, label="incr"];
117->95 [style = solid, label="incr"];
39->23 [style = solid, label="incr"];
30->12 [style = solid, label="startTime"];
22->20 [style = bold, label=""];
58->51 [style = bold, label=""];
28->69 [style = bold, label=""];
115->5 [style = bold, label=""];
110->109 [style = bold, label=""];
48->83 [style = solid, label="startTime"];
33->100 [style = bold, label=""];
48->16 [style = bold, label=""];
47->2 [style = bold, label=""];
59->63 [style = bold, label=""];
48->81 [style = solid, label="startTime"];
27->65 [style = dashed, label="0"];
23->10 [style = bold, label=""];
15->97 [style = bold, label=""];
30->34 [style = solid, label="startTime"];
36->24 [style = solid, label="producer"];
74->89 [style = solid, label="baseDir"];
40->90 [style = solid, label="producer"];
48->92 [style = solid, label="startTime"];
117->33 [style = solid, label="incr"];
74->101 [style = solid, label="baseDir"];
117->78 [style = solid, label="incr"];
40->7 [style = solid, label="baseDir"];
30->17 [style = solid, label="startTime"];
24->7 [style = bold, label=""];
38->17 [style = bold, label=""];
54->70 [style = bold, label=""];
48->5 [style = solid, label="startTime"];
11->26 [style = bold, label=""];
82->89 [style = bold, label=""];
39->5 [style = solid, label="incr"];
30->28 [style = solid, label="startTime"];
88->113 [style = bold, label=""];
27->18 [style = bold, label=""];
117->88 [style = bold, label=""];
80->81 [style = bold, label=""];
48->45 [style = solid, label="startTime"];
31->25 [style = bold, label=""];
18->47 [style = bold, label=""];
50->58 [style = bold, label=""];
39->18 [style = solid, label="incr"];
6->23 [style = bold, label=""];
111->82 [style = bold, label=""];
104->75 [style = bold, label=""];
3->45 [style = bold, label=""];
48->95 [style = solid, label="startTime"];
48->100 [style = solid, label="startTime"];
117->104 [style = solid, label="incr"];
30->67 [style = solid, label="startTime"];
39->72 [style = solid, label="incr"];
84->7 [style = bold, label=""];
48->33 [style = solid, label="startTime"];
4->32 [style = solid, label="recordCollector"];
100->103 [style = bold, label=""];
83->106 [style = bold, label=""];
11->98 [style = dashed, label="0"];
22->64 [style = dashed, label="0"];
49->61 [style = bold, label=""];
85->92 [style = bold, label=""];
30->50 [style = solid, label="startTime"];
30->65 [style = solid, label="startTime"];
48->96 [style = solid, label="startTime"];
48->116 [style = solid, label="startTime"];
26->21 [style = bold, label=""];
48->117 [style = bold, label=""];
117->8 [style = solid, label="incr"];
112->77 [style = bold, label=""];
34->28 [style = bold, label=""];
12->13 [style = bold, label=""];
86->84 [style = bold, label=""];
74->73 [style = solid, label="baseDir"];
48->75 [style = solid, label="startTime"];
30->64 [style = solid, label="startTime"];
43->38 [style = bold, label=""];
55->30 [style = bold, label=""];
117->87 [style = solid, label="incr"];
117->83 [style = solid, label="incr"];
40->36 [style = bold, label=""];
74->79 [style = solid, label="baseDir"];
117->13 [style = solid, label="incr"];
39->40 [style = bold, label=""];
0->1 [style = bold, label=""];
93->111 [style = bold, label=""];
39->57 [style = solid, label="incr"];
90->86 [style = solid, label="recordCollector"];
1->54 [style = bold, label=""];
48->104 [style = solid, label="startTime"];
30->19 [style = solid, label="startTime"];
48->111 [style = solid, label="startTime"];
117->45 [style = solid, label="incr"];
30->69 [style = solid, label="startTime"];
47->62 [style = dashed, label="0"];
39->3 [style = solid, label="incr"];
48->13 [style = solid, label="startTime"];
117->3 [style = solid, label="incr"];
30->35 [style = solid, label="startTime"];
24->90 [style = dashed, label="0"];
39->28 [style = solid, label="incr"];
48->120 [style = solid, label="startTime"];
68->28 [style = bold, label=""];
117->111 [style = solid, label="incr"];
15->8 [style = bold, label=""];
44->31 [style = bold, label=""];
28->22 [style = bold, label=""];
37->42 [style = bold, label=""];
40->90 [style = bold, label=""];
61->67 [style = bold, label=""];
70->49 [style = bold, label=""];
20->11 [style = bold, label=""];
73->96 [style = bold, label=""];
89->105 [style = bold, label=""];
30->22 [style = solid, label="startTime"];
69->65 [style = bold, label=""];
39->22 [style = solid, label="incr"];
16->15 [style = bold, label=""];
78->121 [style = bold, label=""];
39->48 [style = bold, label=""];
2->19 [style = bold, label=""];
30->62 [style = solid, label="startTime"];
39->35 [style = solid, label="incr"];
39->50 [style = solid, label="incr"];
120->93 [style = bold, label=""];
39->58 [style = solid, label="incr"];
39->71 [style = solid, label="incr"];
48->10 [style = solid, label="startTime"];
39->34 [style = solid, label="incr"];
63->64 [style = bold, label=""];
103->94 [style = bold, label=""];
10->116 [style = bold, label=""];
19->57 [style = dashed, label="0"];
17->69 [style = dashed, label="0"];
48->93 [style = solid, label="startTime"];
35->33 [style = bold, label=""];
51->68 [style = bold, label=""];
74->119 [style = bold, label=""];
74->98 [style = solid, label="baseDir"];
30->16 [style = solid, label="startTime"];
52->72 [style = bold, label=""];
48->105 [style = solid, label="startTime"];
117->116 [style = solid, label="incr"];
117->35 [style = solid, label="incr"];
48->94 [style = solid, label="startTime"];
117->102 [style = solid, label="incr"];
2->71 [style = dashed, label="0"];
94->83 [style = bold, label=""];
32->43 [style = bold, label=""];
106->95 [style = bold, label=""];
48->87 [style = solid, label="startTime"];
107->98 [style = bold, label=""];
7->48 [style = solid, label="context"];
45->102 [style = bold, label=""];
121->112 [style = bold, label=""];
74->80 [style = solid, label="baseDir"];
48->78 [style = solid, label="startTime"];
117->94 [style = solid, label="incr"];
118->78 [style = bold, label=""];
117->106 [style = solid, label="incr"];
71->57 [style = bold, label=""];
64->56 [style = bold, label=""];
62->71 [style = bold, label=""];
77->76 [style = bold, label=""];
24->7 [style = solid, label="recordCollector"];
41->4 [style = solid, label="producer"];
13->3 [style = bold, label=""];
48->23 [style = solid, label="startTime"];
117->93 [style = solid, label="incr"];
42->30 [style = bold, label=""];
117->77 [style = solid, label="incr"];
102->118 [style = bold, label=""];
113->101 [style = bold, label=""];
30->61 [style = solid, label="startTime"];
74->86 [style = solid, label="baseDir"];
8->9 [style = bold, label=""];
74->109 [style = solid, label="baseDir"];
75->99 [style = bold, label=""];
30->39 [style = bold, label=""];
39->68 [style = solid, label="incr"];
1->14 [style = bold, label=""];
76->79 [style = bold, label=""];
48->77 [style = solid, label="startTime"];
39->52 [style = solid, label="incr"];
48->112 [style = solid, label="startTime"];
30->44 [style = solid, label="startTime"];
105->3 [style = bold, label=""];
81->12 [style = bold, label=""];
117->10 [style = solid, label="incr"];
95->107 [style = bold, label=""];
48->85 [style = solid, label="startTime"];
4->32 [style = bold, label=""];
30->47 [style = solid, label="startTime"];
30->68 [style = solid, label="startTime"];
48->8 [style = solid, label="startTime"];
}
