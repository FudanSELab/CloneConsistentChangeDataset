digraph {
25 [style = filled, label = "getSlices['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String collectionName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return entry.getValue().getActiveSlicesArr()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "ClusterState clusterState = zkStateReader.getClusterState()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<String> allCollections = new ArrayList<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "!slices.isEmpty()@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "entry.getKey().equalsIgnoreCase(collectionName)@@@16@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return slices.toArray(new Slice(((()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "throw new IOException(\"Slices not found for \" + collectionName)@@@20@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "boolean checkAlias@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "getSlices['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ZkStateReader zkStateReader@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "List<Slice> slices = allCollections.stream().map(null).filter(null).flatMap(null).collect(Collectors.toList())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "allCollections.addAll(collections)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<Slice> slices = allCollections.stream().map(null).filter(null).flatMap(null).collect(Collectors.toList())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Aliases aliases = checkAlias? zkStateReader.getAliases(): null@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Map<String,DocCollection> collectionsMap = clusterState.getCollectionsMap()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String collectionName@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "getSlices['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "String(( collectionNames = collectionName.split(\",\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean checkAlias@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "List<String> collections = (aliases != null)? aliases.resolveAliases(col): Collections.singletonList(collectionName)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "List<String> collections = checkAlias? zkStateReader.getAliases().resolveAliases(col): Collections.singletonList(collectionName)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ZkStateReader zkStateReader@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return slices.toArray(new Slice(((()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "ZkStateReader zkStateReader@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14->11 [style = solid, label="collectionName"];
9->18 [style = dashed, label="0"];
8->3 [style = solid, label="collectionName"];
14->3 [style = solid, label="collectionName"];
22->19 [style = dotted, label="true"];
1->9 [style = bold, label=""];
2->4 [style = bold, label=""];
6->4 [style = bold, label=""];
12->17 [style = dashed, label="0"];
7->10 [style = bold, label=""];
25->10 [style = bold, label=""];
7->8 [style = dotted, label="true"];
1->21 [style = bold, label=""];
12->4 [style = bold, label=""];
22->20 [style = dotted, label="true"];
16->21 [style = solid, label="aliases"];
7->13 [style = dotted, label="true"];
8->4 [style = solid, label="collectionName"];
11->1 [style = bold, label=""];
21->1 [style = solid, label="collections"];
24->11 [style = solid, label="checkAlias"];
1->18 [style = bold, label=""];
6->17 [style = bold, label=""];
17->3 [style = bold, label=""];
11->21 [style = dashed, label="0"];
14->11 [style = solid, label="checkAlias"];
6->17 [style = dotted, label="true"];
4->2 [style = bold, label=""];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
11->1 [style = solid, label="collections"];
2->3 [style = bold, label=""];
15->0 [style = bold, label=""];
16->21 [style = bold, label=""];
25->14 [style = dotted, label="true"];
5->11 [style = bold, label=""];
18->6 [style = bold, label=""];
19->16 [style = solid, label="checkAlias"];
7->14 [style = dotted, label="true"];
22->14 [style = dotted, label="true"];
25->24 [style = dotted, label="true"];
6->3 [style = bold, label=""];
14->21 [style = solid, label="collectionName"];
6->12 [style = bold, label=""];
14->4 [style = solid, label="collectionName"];
10->15 [style = bold, label=""];
21->1 [style = bold, label=""];
6->12 [style = dotted, label="true"];
0->5 [style = bold, label=""];
8->11 [style = solid, label="collectionName"];
22->10 [style = bold, label=""];
4->3 [style = bold, label=""];
25->23 [style = dotted, label="true"];
5->16 [style = bold, label=""];
10->0 [style = bold, label=""];
4->2 [style = dotted, label="true"];
}
