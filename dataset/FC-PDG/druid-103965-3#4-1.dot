digraph {
17 [style = filled, label = "RowBucketIterable rbi = new RowBucketIterable(seq,intervals,ONE_DAY)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(expectedDay2,actual.getRows())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "List<Row> expectedDay2 = Collections.singletonList(JAN_2_M_10)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rows.add(JAN_3_F_20)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(expectedDay2,actual.getRows())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "actual = iter.next()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "actual = iter.next()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testApplyLastDaySingleRow['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "Assert.assertEquals(expectedDay4,actual.getRows())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "rows.add(JAN_1_F_20)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(expectedDay4,actual.getRows())@@@27@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "rows.add(JAN_4_U_30)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Row> expectedDay3 = Collections.singletonList(JAN_3_F_20)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(expectedDay1,actual.getRows())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testApplyLastDaySingleRow['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Sequence<Row> seq = Sequences.simple(rows)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertEquals(expectedDay3,actual.getRows())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertEquals(expectedDay3,actual.getRows())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "intervals.add(INTERVAL_JAN_1_4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Assert.assertEquals(expectedDay1,actual.getRows())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Iterator<RowBucket> iter = rbi.iterator()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Row> expectedDay1 = Arrays.asList(JAN_1_M_10,JAN_1_F_20)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rows.add(JAN_4_M_10)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<Row> expectedDay4 = Collections.singletonList(JAN_4_M_10)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "intervals = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<Row> expectedDay4 = Arrays.asList(JAN_4_M_10,JAN_4_F_20,JAN_4_U_30)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "rows = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testApplyLastDayMultipleRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "actual = iter.next()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "rows.add(JAN_1_M_10)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rows.add(JAN_2_M_10)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "rows.add(JAN_4_F_20)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RowBucket actual = iter.next()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->30 [style = bold, label=""];
16->11 [style = solid, label="expectedDay2"];
27->1 [style = bold, label=""];
20->26 [style = solid, label="expectedDay3"];
21->28 [style = solid, label="expectedDay4"];
20->29 [style = bold, label=""];
9->2 [style = bold, label=""];
11->1 [style = bold, label=""];
3->25 [style = bold, label=""];
14->17 [style = solid, label="intervals"];
12->17 [style = bold, label=""];
23->28 [style = dashed, label="0"];
32->14 [style = bold, label=""];
13->12 [style = solid, label="rows"];
29->23 [style = solid, label="expectedDay4"];
25->6 [style = bold, label=""];
15->3 [style = bold, label=""];
1->26 [style = bold, label=""];
26->19 [style = bold, label=""];
1->7 [style = bold, label=""];
2->18 [style = solid, label="expectedDay1"];
31->12 [style = bold, label=""];
29->13 [style = bold, label=""];
24->14 [style = bold, label=""];
3->18 [style = bold, label=""];
20->21 [style = bold, label=""];
6->27 [style = bold, label=""];
0->14 [style = bold, label=""];
10->5 [style = bold, label=""];
18->6 [style = bold, label=""];
12->17 [style = solid, label="seq"];
30->31 [style = bold, label=""];
19->23 [style = bold, label=""];
6->11 [style = bold, label=""];
5->4 [style = bold, label=""];
21->23 [style = solid, label="expectedDay4"];
17->15 [style = bold, label=""];
22->10 [style = bold, label=""];
4->8 [style = bold, label=""];
14->9 [style = bold, label=""];
13->22 [style = bold, label=""];
19->28 [style = bold, label=""];
11->27 [style = dashed, label="0"];
7->26 [style = dashed, label="0"];
16->20 [style = bold, label=""];
21->29 [style = dashed, label="0"];
7->19 [style = bold, label=""];
2->25 [style = solid, label="expectedDay1"];
20->7 [style = solid, label="expectedDay3"];
8->12 [style = bold, label=""];
16->27 [style = solid, label="expectedDay2"];
18->25 [style = dashed, label="0"];
21->13 [style = bold, label=""];
2->16 [style = bold, label=""];
}
