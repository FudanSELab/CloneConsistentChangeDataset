digraph {
8 [style = filled, label = "Set set = new LinkedHashSet()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Set set = new HashSet()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "testTenElementsLinkedHashSetLiteral['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testTenElementsSetLiteral['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "i < 10@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "set.add(i)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testTenElementsSetLiteral['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Set set = new LinkedHashSet()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"com.google.common.collect.ImmutableSet.builder().add(0)\" + \".add(1)\" + \".add(2)\" + \".add(3)\" + \".add(4)\" + \".add(5)\" + \".add(6)\" + \".add(7)\" + \".add(8)\" + \".add(9).build()\",Expressions.toString(Expressions.constant(set)))@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Integer i = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
3->2 [style = solid, label="i"];
3->5 [style = solid, label="i"];
0->1 [style = solid, label="set"];
5->2 [style = solid, label="i"];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
3->6 [style = bold, label=""];
9->10 [style = bold, label=""];
7->8 [style = bold, label=""];
11->5 [style = solid, label="i"];
0->10 [style = dashed, label="0"];
4->0 [style = bold, label=""];
6->2 [style = bold, label=""];
3->6 [style = solid, label="i"];
6->1 [style = bold, label=""];
11->6 [style = solid, label="i"];
10->1 [style = solid, label="set"];
6->2 [style = dotted, label="true"];
5->6 [style = bold, label=""];
8->1 [style = solid, label="set"];
11->2 [style = solid, label="i"];
0->8 [style = dashed, label="0"];
5->6 [style = solid, label="i"];
3->11 [style = dashed, label="0"];
6->5 [style = dotted, label="true"];
2->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
