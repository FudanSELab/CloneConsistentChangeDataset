digraph {
10 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getPzxid())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testChild['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "zk.getData(childname,false,stat)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "List<String> s = zk.getChildren(name,false,stat)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "zk.create(name,name.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "s = zk.getChildren(childname,false,stat)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(name.length(),stat.getDataLength())@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(name.length(),stat.getDataLength())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String childname = name + \"/bar\"@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(0,stat.getVersion())@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(1,stat.getCversion())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Stat stat@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(0,stat.getVersion())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(1,stat.getNumChildren())@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "stat = newStat()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "stat = newStat()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(0,stat.getNumChildren())@@@29@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(stat.getCtime(),stat.getMtime())@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,stat.getEphemeralOwner())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testChild['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(childname.length(),stat.getDataLength())@@@28@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(s.size(),stat.getNumChildren())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "zk.getData(name,false,stat)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertEquals(1,stat.getCversion())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "assertEquals(stat.getCzxid() + 1,stat.getPzxid())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(childname.length(),stat.getDataLength())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "assertEquals(0,stat.getAversion())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(stat.getCzxid(),stat.getMzxid())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testChild['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(stat.getCtime(),stat.getMtime())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getMzxid())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "assertEquals(0,stat.getVersion())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "Assert.assertEquals(0,stat.getEphemeralOwner())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(s.size(),stat.getNumChildren())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertEquals(1,stat.getNumChildren())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(0,stat.getAversion())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(0,stat.getAversion())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,stat.getNumChildren())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(zk.getSessionId(),stat.getEphemeralOwner())@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(0,stat.getCversion())@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Stat stat = new Stat()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(0,stat.getCversion())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "zk.create(childname,childname.getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(stat.getCzxid(),stat.getPzxid())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "String name = \"/foo\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->50 [style = bold, label=""];
22->36 [style = dashed, label="0"];
52->27 [style = bold, label=""];
20->40 [style = dashed, label="0"];
0->44 [style = dashed, label="0"];
10->38 [style = dashed, label="0"];
1->27 [style = bold, label=""];
32->34 [style = bold, label=""];
13->41 [style = dashed, label="0"];
0->15 [style = bold, label=""];
48->39 [style = bold, label=""];
19->24 [style = bold, label=""];
9->26 [style = bold, label=""];
21->26 [style = solid, label="childname"];
5->35 [style = dashed, label="0"];
2->52 [style = solid, label="name"];
43->35 [style = bold, label=""];
24->17 [style = bold, label=""];
15->33 [style = dashed, label="0"];
35->38 [style = bold, label=""];
40->31 [style = bold, label=""];
2->18 [style = solid, label="name"];
13->14 [style = bold, label=""];
12->22 [style = bold, label=""];
16->39 [style = dashed, label="0"];
39->29 [style = bold, label=""];
5->10 [style = bold, label=""];
21->53 [style = solid, label="childname"];
28->36 [style = bold, label=""];
54->49 [style = bold, label=""];
21->19 [style = bold, label=""];
50->53 [style = solid, label="stat"];
33->28 [style = bold, label=""];
2->18 [style = bold, label=""];
26->43 [style = bold, label=""];
26->4 [style = bold, label=""];
22->23 [style = bold, label=""];
3->0 [style = bold, label=""];
20->8 [style = bold, label=""];
24->26 [style = solid, label="stat"];
27->11 [style = bold, label=""];
7->2 [style = bold, label=""];
31->41 [style = bold, label=""];
29->40 [style = bold, label=""];
41->46 [style = bold, label=""];
15->12 [style = bold, label=""];
17->1 [style = bold, label=""];
47->42 [style = bold, label=""];
9->42 [style = dashed, label="0"];
1->30 [style = dashed, label="0"];
11->34 [style = dashed, label="0"];
3->37 [style = dashed, label="0"];
44->33 [style = bold, label=""];
6->48 [style = dashed, label="0"];
30->32 [style = bold, label=""];
38->48 [style = bold, label=""];
21->19 [style = solid, label="childname"];
45->2 [style = bold, label=""];
2->21 [style = solid, label="name"];
14->46 [style = dashed, label="0"];
10->6 [style = bold, label=""];
26->53 [style = dashed, label="0"];
19->54 [style = bold, label=""];
25->20 [style = bold, label=""];
4->43 [style = dashed, label="0"];
11->3 [style = bold, label=""];
51->2 [style = bold, label=""];
27->32 [style = dashed, label="0"];
37->44 [style = bold, label=""];
18->21 [style = bold, label=""];
4->5 [style = bold, label=""];
8->13 [style = bold, label=""];
2->17 [style = solid, label="name"];
42->26 [style = bold, label=""];
36->47 [style = bold, label=""];
53->5 [style = bold, label=""];
16->25 [style = bold, label=""];
17->30 [style = bold, label=""];
24->17 [style = solid, label="stat"];
23->47 [style = dashed, label="0"];
49->52 [style = solid, label="stat"];
24->54 [style = dashed, label="0"];
49->52 [style = bold, label=""];
34->37 [style = bold, label=""];
6->16 [style = bold, label=""];
12->28 [style = dashed, label="0"];
25->29 [style = dashed, label="0"];
8->31 [style = dashed, label="0"];
23->9 [style = bold, label=""];
50->53 [style = bold, label=""];
}
