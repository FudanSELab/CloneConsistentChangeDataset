digraph {
13 [style = filled, label = "testForwardCompatForSolrDocumentWithChildDocs['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Object data = generateAllDataTypes()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testForwardCompatForSolrDocumentWithChildDocs['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i < currentFormatBytes.length@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "javabin.marshal(data,os)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "byte(( newFormatBytes = os.toByteArray()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(newFormatBytes(i(,currentFormatBytes(i()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "InputStream is = getClass().getResourceAsStream(SOLRJ_JAVABIN_BACKCOMPAT_BIN)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "byte(( currentFormatBytes = IOUtils.toByteArray(is)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int i = 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "byte(( newFormatBytes = os.toByteArray()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "javabin.marshal(sdoc,os)@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SolrDocument sdoc = generateSolrDocumentWithChildDocs()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(newFormatBytes(i(,currentFormatBytes(i()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "testForwardCompat['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "i++@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JavaBinCodec javabin = new JavaBinCodec()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ByteArrayOutputStream os = new ByteArrayOutputStream()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->4 [style = solid, label="sdoc"];
11->4 [style = bold, label=""];
7->6 [style = solid, label="i"];
2->3 [style = dotted, label="true"];
8->9 [style = bold, label=""];
4->14 [style = dashed, label="0"];
17->1 [style = solid, label="is"];
10->17 [style = bold, label=""];
1->7 [style = solid, label="is"];
7->2 [style = solid, label="i"];
6->2 [style = solid, label="i"];
0->1 [style = solid, label="is"];
10->3 [style = solid, label="newFormatBytes"];
3->12 [style = solid, label="i"];
2->6 [style = dotted, label="true"];
15->14 [style = solid, label="data"];
7->3 [style = solid, label="i"];
0->1 [style = bold, label=""];
2->12 [style = solid, label="i"];
6->2 [style = bold, label=""];
3->6 [style = bold, label=""];
2->3 [style = bold, label=""];
6->3 [style = solid, label="i"];
5->14 [style = solid, label="os"];
13->11 [style = bold, label=""];
7->12 [style = solid, label="currentFormatBytes"];
11->10 [style = bold, label=""];
2->6 [style = solid, label="i"];
5->11 [style = bold, label=""];
15->14 [style = bold, label=""];
12->3 [style = bold, label=""];
2->3 [style = solid, label="i"];
0->17 [style = dashed, label="0"];
6->12 [style = bold, label=""];
6->3 [style = dotted, label="true"];
5->4 [style = solid, label="os"];
4->10 [style = bold, label=""];
2->6 [style = bold, label=""];
11->10 [style = solid, label="sdoc"];
1->3 [style = solid, label="currentFormatBytes"];
6->12 [style = dotted, label="true"];
1->7 [style = bold, label=""];
14->10 [style = bold, label=""];
3->6 [style = solid, label="i"];
9->5 [style = bold, label=""];
10->0 [style = bold, label=""];
0->12 [style = solid, label="newFormatBytes"];
5->15 [style = bold, label=""];
17->1 [style = bold, label=""];
16->9 [style = bold, label=""];
7->2 [style = bold, label=""];
}
