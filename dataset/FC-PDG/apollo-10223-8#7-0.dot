digraph {
16 [style = filled, label = "PropertiesFactory propertiesFactory = mock()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "someBaseDir.mkdir()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i < 10@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "when(configRepository.getConfig()).thenReturn(someProperties)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testGetPropertyNames['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "when(upstreamRepo.getSourceType()).thenReturn(someSourceType)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "someBaseDir = new File(\"src/test/resources/config-cache\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "String someValuePrefix = \"someValue\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "defaultKey = \"defaultKey\"@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "someSourceType = ConfigSourceType.REMOTE@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "someNamespace = \"someName\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "configUtil = new MockConfigUtil()@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "String someKeyPrefix = \"someKey\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Set<String> propertyNames = defaultConfig.getPropertyNames()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "MockInjector.setInstance(,new MockConfigUtil())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "setUp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(propertiesFactory.getPropertiesInstance()).thenAnswer(new Answer<Properties>(){@Override public Properties answer(InvocationOnMock invocation){return new Properties()}})@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "someProperties = new Properties()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "DefaultConfig defaultConfig = new DefaultConfig(someNamespace,configRepository)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "someProperties.setProperty(someKeyPrefix + i,someValuePrefix + i)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(upstreamRepo.getConfig()).thenReturn(someProperties)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "someProperties.setProperty(defaultKey,defaultValue)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "MockInjector.setInstance(,new DefaultPropertiesFactory())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "MockInjector.setInstance(,propertiesFactory)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "setUp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "assertEquals(10,propertyNames.size())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(someProperties.stringPropertyNames(),propertyNames)@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "MockInjector.reset()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "MockInjector.setInstance(,configUtil)@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "upstreamRepo = mock()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "defaultValue = \"defaultValue\"@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29->26 [style = solid, label="someKeyPrefix"];
15->2 [style = bold, label=""];
16->18 [style = bold, label=""];
14->2 [style = solid, label="defaultKey"];
10->6 [style = solid, label="configUtil"];
31->22 [style = bold, label=""];
0->13 [style = bold, label=""];
5->9 [style = bold, label=""];
13->26 [style = solid, label="i"];
25->13 [style = bold, label=""];
10->19 [style = dashed, label="0"];
27->26 [style = dotted, label="true"];
30->27 [style = bold, label=""];
30->26 [style = solid, label="i"];
18->17 [style = bold, label=""];
16->17 [style = solid, label="propertiesFactory"];
30->27 [style = solid, label="i"];
13->30 [style = solid, label="i"];
10->6 [style = bold, label=""];
8->7 [style = bold, label=""];
4->0 [style = bold, label=""];
19->16 [style = bold, label=""];
26->30 [style = bold, label=""];
21->28 [style = bold, label=""];
15->2 [style = solid, label="defaultValue"];
23->29 [style = bold, label=""];
4->32 [style = dashed, label="0"];
3->10 [style = bold, label=""];
24->22 [style = solid, label="propertyNames"];
27->30 [style = dotted, label="true"];
7->5 [style = bold, label=""];
13->27 [style = bold, label=""];
12->4 [style = bold, label=""];
3->19 [style = bold, label=""];
24->31 [style = bold, label=""];
13->5 [style = solid, label="someProperties"];
13->27 [style = solid, label="i"];
11->18 [style = dashed, label="0"];
29->32 [style = bold, label=""];
6->11 [style = bold, label=""];
8->9 [style = solid, label="someSourceType"];
20->12 [style = bold, label=""];
32->25 [style = bold, label=""];
1->12 [style = bold, label=""];
28->24 [style = bold, label=""];
9->3 [style = bold, label=""];
25->21 [style = solid, label="someProperties"];
14->15 [style = bold, label=""];
27->21 [style = bold, label=""];
13->14 [style = bold, label=""];
2->8 [style = bold, label=""];
27->26 [style = bold, label=""];
32->26 [style = solid, label="someValuePrefix"];
}
