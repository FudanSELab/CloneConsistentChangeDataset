digraph {
17 [style = filled, label = "final String path@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "errorCallback = new OperationAndData.ErrorCallback<String>(){@Override public void retriesExhausted(OperationAndData<String> operationAndData){client.getFailedRemoveWatcherManager().addFailedOperation(new FailedRemoveWatchManager.FailedRemoveWatchDetails(path,watcher))}}@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "guaranteed@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "forPath['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "pathInForeground(path,unfixedPath)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return null@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "guaranteed@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String path@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "forPath['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "backgrounding.inBackground()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "OperationAndData.ErrorCallback<String> errorCallback = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),null),null)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "path = client.fixForNamespace(path)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "client.processBackgroundOperation(new OperationAndData<String>(this,path,backgrounding.getCallback(),errorCallback,backgrounding.getContext(),!local,null),null)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "errorCallback = new OperationAndData.ErrorCallback<String>(){@Override public void retriesExhausted(OperationAndData<String> operationAndData){client.getFailedDeleteManager().addFailedOperation(unfixedPath)}}@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "pathInBackground['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.getSchemaSet().getSchema(path).validateDelete()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "final String unfixedPath = path@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "OperationAndData.ErrorCallback<String> errorCallback = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->9 [style = dotted, label="true"];
5->16 [style = dashed, label="0"];
13->15 [style = bold, label=""];
2->1 [style = dotted, label="false"];
5->8 [style = bold, label=""];
2->4 [style = bold, label=""];
11->12 [style = bold, label=""];
2->4 [style = dotted, label="true"];
14->16 [style = bold, label=""];
14->15 [style = solid, label="errorCallback"];
7->10 [style = bold, label=""];
2->8 [style = dotted, label="true"];
9->10 [style = solid, label="path"];
4->5 [style = bold, label=""];
2->5 [style = dotted, label="true"];
16->15 [style = bold, label=""];
17->13 [style = solid, label="path"];
9->17 [style = dashed, label="0"];
16->13 [style = dotted, label="true"];
16->13 [style = bold, label=""];
4->8 [style = solid, label="errorCallback"];
6->8 [style = bold, label=""];
7->9 [style = dotted, label="true"];
8->3 [style = bold, label=""];
6->8 [style = solid, label="errorCallback"];
0->8 [style = solid, label="path"];
5->6 [style = dotted, label="true"];
17->15 [style = solid, label="path"];
12->10 [style = bold, label=""];
18->17 [style = dotted, label="true"];
1->3 [style = bold, label=""];
9->0 [style = solid, label="path"];
8->15 [style = dashed, label="0"];
2->1 [style = bold, label=""];
10->1 [style = solid, label="unfixedPath"];
13->15 [style = solid, label="errorCallback"];
0->1 [style = solid, label="path"];
0->2 [style = bold, label=""];
18->14 [style = bold, label=""];
10->0 [style = bold, label=""];
5->6 [style = bold, label=""];
10->6 [style = solid, label="unfixedPath"];
}
