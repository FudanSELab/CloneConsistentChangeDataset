digraph {
36 [style = filled, label = "testCleanupIrrelevantContexts['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "final ShardSearchContextId ctx2 = new ShardSearchContextId(UUIDs.base64UUID(),321)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "final ShardSearchContextId ctx1 = new ShardSearchContextId(UUIDs.base64UUID(),123)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "final SearchContextId ctx1 = new SearchContextId(UUIDs.randomBase64UUID(),123)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(0,searchResponse.getFailedShards())@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "queryResult.size(resultSetSize)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1329f04),2.0F),new DocValueFormat(((()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mockSearchPhaseContext.searchTransport = new SearchTransportService(null,null){@Override public void sendExecuteFetch(Transport.Connection connection,ShardFetchSearchRequest request,SearchTask task,SearchActionListener<FetchSearchResult> listener){FetchSearchResult fetchResult = new FetchSearchResult()if (request.contextId().equals(ctx2)) {fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1329f8e,new TotalHits(1,TotalHits.Relation.EQUAL_TO),2.0F))}{assertEquals(ctx1,request.contextId())fetchResult.hits(new SearchHits(new SearchHit((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1329fab,new TotalHits(1,TotalHits.Relation.EQUAL_TO),1.0F))}listener.onResponse(fetchResult)}}@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final SearchContextId ctx2 = new SearchContextId(UUIDs.randomBase64UUID(),312)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "MockSearchPhaseContext mockSearchPhaseContext = new MockSearchPhaseContext(2)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ArraySearchPhaseResults<SearchPhaseResult> results = controller.newSearchPhaseResults(EsExecutors.newDirectExecutorService(),NOOP,mockSearchPhaseContext.getRequest(),2,null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testCleanupIrrelevantContexts['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "queryResult.topDocs(new TopDocsAndMaxScore(new TopDocs(new TotalHits(1,TotalHits.Relation.EQUAL_TO),new ScoreDoc((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1329f4b),2.0F),new DocValueFormat(((()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "queryResult = new QuerySearchResult(ctx2,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE))@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int resultSetSize = 1@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(84,searchResponse.getHits().getAt(0).docId())@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "queryResult.size(resultSetSize)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "results.consumeResult(queryResult,null)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(ctx1,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "QuerySearchResult queryResult = new QuerySearchResult(ctx1,new SearchShardTarget(\"node1\",new ShardId(\"test\",\"na\",0),null,OriginalIndices.NONE),null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(2,searchResponse.getHits().getTotalHits().value)@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testFetchTwoDocument['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "phase.run()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "results.consumeResult(queryResult,null)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "queryResult.setShardIndex(0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertNotNull(searchResponse)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(mockSearchPhaseContext.releasedSearchContexts.isEmpty())@@@63@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(42,searchResponse.getHits().getAt(1).docId())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "queryResult.setShardIndex(1)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int resultSetSize = randomIntBetween(2,10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,null,mockSearchPhaseContext,null)@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "SearchContextId ctx1 = new SearchContextId(UUIDs.randomBase64UUID(),123)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,ClusterState.EMPTY_STATE,null)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "SearchResponse searchResponse = mockSearchPhaseContext.searchResponse.get()@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "phase.run()@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"fetch\",phase.getName())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "FetchSearchPhase phase = new FetchSearchPhase(results,controller,mockSearchPhaseContext,ClusterState.EMPTY_STATE,null)@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "SearchPhaseController controller = new SearchPhaseController(writableRegistry(),null)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "SearchContextId ctx2 = new SearchContextId(UUIDs.randomBase64UUID(),321)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "queryResult = new QuerySearchResult(ctx2,new SearchShardTarget(\"node2\",new ShardId(\"test\",\"na\",1),null,OriginalIndices.NONE),null)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "mockSearchPhaseContext.assertNoFailure()@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(\"fetch\",phase.getName())@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(2,searchResponse.getSuccessfulShards())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->32 [style = solid, label="results"];
28->6 [style = bold, label=""];
22->15 [style = bold, label=""];
32->23 [style = bold, label=""];
7->30 [style = bold, label=""];
30->20 [style = bold, label=""];
24->25 [style = solid, label="controller"];
24->32 [style = solid, label="controller"];
43->26 [style = bold, label=""];
17->29 [style = solid, label="searchResponse"];
29->18 [style = bold, label=""];
40->5 [style = solid, label="ctx1"];
8->15 [style = solid, label="resultSetSize"];
19->9 [style = bold, label=""];
10->12 [style = bold, label=""];
20->37 [style = bold, label=""];
9->13 [style = bold, label=""];
4->8 [style = bold, label=""];
14->0 [style = solid, label="ctx1"];
9->38 [style = bold, label=""];
2->16 [style = bold, label=""];
8->34 [style = bold, label=""];
9->33 [style = bold, label=""];
38->28 [style = bold, label=""];
26->44 [style = solid, label="mockSearchPhaseContext"];
30->42 [style = bold, label=""];
40->0 [style = bold, label=""];
34->31 [style = bold, label=""];
34->31 [style = solid, label="ctx1"];
26->24 [style = bold, label=""];
0->9 [style = solid, label="queryResult"];
44->17 [style = bold, label=""];
5->25 [style = bold, label=""];
13->28 [style = solid, label="ctx2"];
6->2 [style = bold, label=""];
38->28 [style = solid, label="ctx2"];
27->11 [style = bold, label=""];
41->2 [style = solid, label="resultSetSize"];
23->10 [style = bold, label=""];
13->33 [style = dashed, label="0"];
41->15 [style = solid, label="resultSetSize"];
11->30 [style = bold, label=""];
14->40 [style = dashed, label="0"];
21->27 [style = bold, label=""];
12->17 [style = bold, label=""];
3->26 [style = bold, label=""];
8->14 [style = bold, label=""];
13->38 [style = dashed, label="0"];
21->27 [style = solid, label="searchResponse"];
15->19 [style = bold, label=""];
8->41 [style = dashed, label="0"];
4->41 [style = bold, label=""];
5->32 [style = bold, label=""];
31->9 [style = solid, label="queryResult"];
16->1 [style = bold, label=""];
41->40 [style = bold, label=""];
5->44 [style = bold, label=""];
4->25 [style = solid, label="results"];
18->21 [style = bold, label=""];
33->35 [style = solid, label="ctx2"];
37->39 [style = bold, label=""];
33->35 [style = bold, label=""];
25->32 [style = dashed, label="0"];
30->39 [style = dashed, label="0"];
31->22 [style = bold, label=""];
14->34 [style = dashed, label="0"];
35->6 [style = bold, label=""];
25->23 [style = bold, label=""];
28->1 [style = solid, label="queryResult"];
42->20 [style = bold, label=""];
4->44 [style = solid, label="results"];
36->26 [style = bold, label=""];
40->0 [style = solid, label="ctx1"];
26->25 [style = solid, label="mockSearchPhaseContext"];
34->20 [style = solid, label="ctx1"];
28->35 [style = dashed, label="0"];
35->1 [style = solid, label="queryResult"];
24->44 [style = solid, label="controller"];
24->4 [style = bold, label=""];
14->0 [style = bold, label=""];
0->22 [style = bold, label=""];
13->5 [style = solid, label="ctx2"];
0->31 [style = dashed, label="0"];
8->2 [style = solid, label="resultSetSize"];
38->5 [style = solid, label="ctx2"];
17->29 [style = bold, label=""];
11->7 [style = bold, label=""];
13->28 [style = bold, label=""];
26->32 [style = solid, label="mockSearchPhaseContext"];
14->20 [style = solid, label="ctx1"];
}
