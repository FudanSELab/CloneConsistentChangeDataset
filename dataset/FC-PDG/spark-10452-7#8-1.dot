digraph {
1 [style = filled, label = "assertEquals(1,model.clusterCenters().length)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "model = KMeans.train(data.rdd(),1,1,1,KMeans.RANDOM())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Vector expectedCenter = Vectors.dense(1.0,3.0,4.0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "runKMeansUsingStaticMethods['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertEquals(expectedCenter,model.clusterCenters()(0()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "runKMeansUsingStaticMethods['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "KMeansModel model = KMeans.train(data.rdd(),1,1,1,KMeans.K_MEANS_PARALLEL())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "JavaRDD<Vector> data = sc.parallelize(points,2)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(expectedCenter,model.clusterCenters()(0()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "List<Vector> points = Arrays.asList(Vectors.dense(1.0,2.0,6.0),Vectors.dense(1.0,3.0,0.0),Vectors.dense(1.0,4.0,6.0))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "runKMeansUsingConstructor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<Vector> points = Lists.newArrayList(Vectors.dense(1.0,2.0,6.0),Vectors.dense(1.0,3.0,0.0),Vectors.dense(1.0,4.0,6.0))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "KMeansModel model = new KMeans().setK(1).setMaxIterations(5).run(data.rdd())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "model = new KMeans().setK(1).setMaxIterations(1).setInitializationMode(KMeans.RANDOM()).run(data.rdd())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->8 [style = bold, label=""];
2->5 [style = bold, label=""];
6->0 [style = bold, label=""];
9->10 [style = bold, label=""];
3->12 [style = bold, label=""];
12->1 [style = bold, label=""];
3->4 [style = bold, label=""];
10->7 [style = bold, label=""];
0->10 [style = dashed, label="0"];
7->3 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->7 [style = bold, label=""];
5->11 [style = dashed, label="0"];
10->3 [style = solid, label="points"];
0->3 [style = solid, label="points"];
11->8 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
2->11 [style = bold, label=""];
7->8 [style = solid, label="expectedCenter"];
13->0 [style = bold, label=""];
7->2 [style = solid, label="expectedCenter"];
}
