digraph {
18 [style = filled, label = "h.getCore().setLatestSchema(newSchema)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAddFieldPersistence['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(managedSchemaContents.contains(\"\"new_field\"\"))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "IndexSchema oldSchema = h.getCore().getLatestSchema()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(\"str\",newSchema.getUniqueKeyField().getName())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "initCore()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "SchemaField newField = oldSchema.newField(fieldName,fieldType,options)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "deleteCore()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Files.delete(managedSchemaFile.toPath())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertEquals(\"str\",newNewSchema.getUniqueKeyField().getName())@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "IndexSchema newSchema = oldSchema.addField(newField)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testAddFieldPersistence['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "assertEquals(\"str\",oldSchema.getUniqueKeyField().getName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "IndexSchema newNewSchema = h.getCore().getLatestSchema()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Map<String,Object> options = new HashMap<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(managedSchemaFile.exists())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String fieldName = \"new_field\"@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "FileInputStream stream = new FileInputStream(managedSchemaFile)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "h.close()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String fieldType = \"string\"@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "initCore(\"solrconfig-managed-schema.xml\",\"schema-one-field-no-dynamic-field.xml\",tmpSolrHome.getPath())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "initCore(\"solrconfig-managed-schema.xml\",\"schema-one-field-no-dynamic-field-unique-key.xml\",tmpSolrHome.getPath())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "stream.close()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "System.setProperty(\"managed.schema.mutable\",\"true\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "File managedSchemaFile = new File(tmpConfDir,\"managed-schema\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "managedSchemaContents = IOUtils.toString(stream,\"UTF-8\")@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(managedSchemaContents.contains(\"<field name=\"new_field\" type=\"string\" stored=\"false\"/>\"))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "log.info(\"####close harness\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertTrue(managedSchemaFile.exists())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertSchemaResource(collection,\"managed-schema\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testPersistUniqueKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "options.put(\"stored\",\"false\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNotNull(newNewSchema.getUniqueKeyField())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "log.info(\"####close harness end\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(managedSchemaFile.delete())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String managedSchemaContents = FileUtils.readFileToString(managedSchemaFile,\"UTF-8\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->11 [style = solid, label="stream"];
8->10 [style = bold, label=""];
15->23 [style = bold, label=""];
4->17 [style = bold, label=""];
12->7 [style = solid, label="newField"];
28->30 [style = bold, label=""];
7->18 [style = solid, label="newSchema"];
20->9 [style = bold, label=""];
22->16 [style = bold, label=""];
2->1 [style = bold, label=""];
0->23 [style = dashed, label="0"];
1->34 [style = dashed, label="0"];
0->2 [style = bold, label=""];
2->34 [style = bold, label=""];
30->25 [style = bold, label=""];
31->18 [style = bold, label=""];
7->31 [style = bold, label=""];
19->6 [style = bold, label=""];
12->7 [style = bold, label=""];
33->26 [style = bold, label=""];
24->20 [style = bold, label=""];
29->28 [style = bold, label=""];
5->21 [style = bold, label=""];
6->4 [style = bold, label=""];
6->27 [style = bold, label=""];
27->4 [style = bold, label=""];
18->29 [style = bold, label=""];
17->12 [style = bold, label=""];
15->5 [style = solid, label="managedSchemaFile"];
3->12 [style = solid, label="options"];
3->19 [style = bold, label=""];
16->33 [style = bold, label=""];
9->15 [style = bold, label=""];
15->0 [style = bold, label=""];
4->12 [style = solid, label="fieldName"];
26->35 [style = bold, label=""];
15->10 [style = solid, label="managedSchemaFile"];
11->22 [style = bold, label=""];
7->18 [style = bold, label=""];
1->14 [style = bold, label=""];
13->20 [style = bold, label=""];
18->8 [style = bold, label=""];
23->2 [style = bold, label=""];
34->14 [style = bold, label=""];
25->8 [style = bold, label=""];
17->12 [style = solid, label="fieldType"];
32->20 [style = bold, label=""];
21->3 [style = bold, label=""];
14->5 [style = bold, label=""];
10->11 [style = bold, label=""];
}
