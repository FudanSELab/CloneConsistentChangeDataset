digraph {
16 [style = filled, label = "props.put(\"consumer.auto.offset.reset\",\"latest\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expectedConfigs.put(\"auto.offset.reset\",\"latest\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "PowerMock.replayAll()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<String,Object> connConfig = new HashMap<String,Object>()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "connConfig.put(\"max.poll.interval.ms\",\"1000\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "WorkerConfig configWithOverrides = new StandaloneConfig(props)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "props.put(\"consumer.max.poll.records\",\"5000\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "connConfig.put(\"max.poll.records\",\"5000\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testConsumerConfigsWithClientOverrides['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedConfigs.put(\"max.poll.interval.ms\",\"1000\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,String> props = new HashMap<>(workerProps)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expectedConfigs.put(\"client.id\",\"connector-consumer-test-1\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testConsumerConfigsClientOverridesWithNonePolicy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expectedConfigs.put(\"max.poll.records\",\"5000\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(connectorConfig.originalsWithPrefix(ConnectorConfig.CONNECTOR_CLIENT_CONSUMER_OVERRIDES_PREFIX)).andReturn(connConfig)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "expectedConfigs.put(\"group.id\",\"connect-test\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,noneConnectorClientConfigOverridePolicy)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testConsumerConfigsWithClientOverrides['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(expectedConfigs,Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "expectedConfigs.put(\"metrics.context.connect.kafka.cluster.id\",CLUSTER_ID)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(expectedConfigs,Worker.consumerConfigs(new ConnectorTaskId(\"test\",1),configWithOverrides,connectorConfig,null,allConnectorClientConfigOverridePolicy,CLUSTER_ID))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Map<String,String> expectedConfigs = new HashMap<>(defaultConsumerConfigs)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
12->18 [style = solid, label="expectedConfigs"];
0->6 [style = bold, label=""];
4->1 [style = solid, label="connConfig"];
10->20 [style = solid, label="configWithOverrides"];
1->3 [style = bold, label=""];
14->10 [style = bold, label=""];
2->9 [style = bold, label=""];
5->18 [style = dashed, label="0"];
12->0 [style = bold, label=""];
10->18 [style = solid, label="configWithOverrides"];
9->16 [style = bold, label=""];
4->7 [style = bold, label=""];
11->15 [style = bold, label=""];
13->1 [style = bold, label=""];
5->20 [style = dashed, label="0"];
3->18 [style = bold, label=""];
8->17 [style = bold, label=""];
3->5 [style = bold, label=""];
3->20 [style = bold, label=""];
21->9 [style = bold, label=""];
19->9 [style = bold, label=""];
10->12 [style = bold, label=""];
6->11 [style = bold, label=""];
10->4 [style = bold, label=""];
12->5 [style = solid, label="expectedConfigs"];
16->14 [style = bold, label=""];
8->4 [style = bold, label=""];
10->5 [style = solid, label="configWithOverrides"];
15->8 [style = bold, label=""];
17->4 [style = bold, label=""];
9->10 [style = solid, label="props"];
}
