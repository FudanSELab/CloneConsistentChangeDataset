digraph {
7 [style = filled, label = "testCoalesceColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testNullParameter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, dim1), COUNT(*) FROM druid.foo GROUP BY COALESCE(dim2, dim1)\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",\"dim1\")\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074bc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074c1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074c6,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074cb): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074d3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074d8,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074dd,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a074e2))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testNullParameter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, ?, ?), COUNT(*) FROM druid.foo GROUP BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",'parameter')\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a0743e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07443,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07448): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07450,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07455,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a0745a,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a0745f),ImmutableList.of(new SqlParameter(SqlType.VARCHAR,null),new SqlParameter(SqlType.VARCHAR,\"parameter\")))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "cannotVectorize()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, ?, ?), COUNT(*) FROM druid.foo GROUP BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",'parameter')\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"d0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073c7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073cc,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073d1): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073d9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073de,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073e3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a073e8),ImmutableList.of(new SqlParameter(SqlType.VARCHAR,\"parameter\"),new SqlParameter(SqlType.VARCHAR,null)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testQuery(\"SELECT COALESCE(dim2, ?, ?), COUNT(*) FROM druid.foo GROUP BY 1\",ImmutableList.of(GroupByQuery.builder().setDataSource(CalciteTests.DATASOURCE1).setInterval(querySegmentSpec(Filtration.eternity())).setGranularity(Granularities.ALL).setVirtualColumns(expressionVirtualColumn(\"v0\",\"case_searched(notnull(\"dim2\"),\"dim2\",'parameter')\",ValueType.STRING)).setDimensions(dimensions(new DefaultDimensionSpec(\"v0\",\"v0\",ValueType.STRING))).setAggregatorSpecs(aggregators(new CountAggregatorFactory(\"a0\"))).setContext(QUERY_CONTEXT_DEFAULT).build()),NullHandling.replaceWithDefault()? ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07349,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a0734e,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07353): ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a0735b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07360,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a07365,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@a0736a),ImmutableList.of(new SqlParameter(SqlType.VARCHAR,null),new SqlParameter(SqlType.VARCHAR,\"parameter\")))@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0->3 [style = bold, label=""];
7->0 [style = bold, label=""];
3->6 [style = dashed, label="0"];
1->0 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
0->6 [style = bold, label=""];
3->4 [style = bold, label=""];
2->4 [style = dashed, label="0"];
}
