digraph {
5 [style = filled, label = "Collection<String> resources = new LinkedHashSet<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Collection<String> notExistResources = resource.getNotExistedResources(resources)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String schemaName@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "checkToBeCreatedResources['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "checkToBeCreatedResources['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final CreateDatabaseDiscoveryRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "Collection<String> result = new LinkedHashSet<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final ShardingSphereResource resource@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!notExistResources.isEmpty()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getToBeCreatedResources['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return result@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final ShardingSphereResource resource@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "final String schemaName@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final CreateReadwriteSplittingRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "sqlStatement.getRules().stream().filter(null).forEach(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "throw new ResourceNotExistedException(schemaName,notExistResources)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "throw new RequiredResourceMissedException(schemaName,notExistResources)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "sqlStatement.getRules().forEach(null)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->10 [style = solid, label="schemaName"];
9->12 [style = dotted, label="true"];
7->1 [style = bold, label=""];
1->10 [style = dotted, label="true"];
8->2 [style = solid, label="schemaName"];
9->11 [style = dotted, label="true"];
15->18 [style = dotted, label="true"];
3->4 [style = dotted, label="true"];
7->10 [style = solid, label="notExistResources"];
7->2 [style = solid, label="notExistResources"];
2->10 [style = dashed, label="0"];
8->13 [style = dashed, label="0"];
5->7 [style = solid, label="resources"];
15->17 [style = bold, label=""];
3->5 [style = bold, label=""];
17->14 [style = solid, label="result"];
6->16 [style = dashed, label="0"];
5->17 [style = dashed, label="0"];
5->6 [style = bold, label=""];
9->13 [style = dotted, label="true"];
3->0 [style = dotted, label="true"];
9->5 [style = bold, label=""];
16->14 [style = bold, label=""];
1->2 [style = bold, label=""];
6->7 [style = bold, label=""];
1->2 [style = dotted, label="true"];
3->8 [style = dotted, label="true"];
1->10 [style = bold, label=""];
17->16 [style = bold, label=""];
}
