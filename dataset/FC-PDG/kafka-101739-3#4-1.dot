digraph {
11 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",5L))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Properties config = Utils.mkProperties(Utils.mkMap(Utils.mkEntry(StreamsConfig.APPLICATION_ID_CONFIG,getClass().getSimpleName().toLowerCase(Locale.getDefault())),Utils.mkEntry(StreamsConfig.BOOTSTRAP_SERVERS_CONFIG,\"bogus\")))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",2L))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Grouped.with(STRING_SERDE,STRING_SERDE)).windowedBy(TimeWindows.of(2L).grace(1L)).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "shouldSupportFinalResultsForSessionWindows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Serialized.with(STRING_SERDE,STRING_SERDE)).windowedBy(TimeWindows.of(2L).grace(1L)).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "valueCounts.toStream().map(null).to(\"output-raw\",Produced.with(STRING_SERDE,Serdes.Long()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "System.out.println(topology.describe())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "valueCounts.suppress(untilWindowCloses(unbounded())).toStream().map(null).to(\"output-suppressed\",Produced.with(STRING_SERDE,Serdes.Long()))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final ConsumerRecordFactory<String,String> recordFactory = new ConsumerRecordFactory<>(STRING_SERIALIZER,STRING_SERIALIZER)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Topology topology = builder.build()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "shouldSupportFinalResultsForTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",0L))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",30L))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",1L))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/0(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/0(\",null,1L),new KeyValueTimestamp<>(\"(k1@0/1(\",2L,1L),new KeyValueTimestamp<>(\"(k1@7/7(\",1L,7L),new KeyValueTimestamp<>(\"(k1@30/30(\",1L,30L)))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "shouldSupportFinalResultsForTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "verify(drainProducerRecords(driver,\"output-raw\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",1L,0L),new KeyValueTimestamp<>(\"(k1@0/2(\",2L,1L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L),new KeyValueTimestamp<>(\"(k1@0/2(\",3L,1L),new KeyValueTimestamp<>(\"(k1@0/2(\",4L,0L),new KeyValueTimestamp<>(\"(k1@4/6(\",1L,5L)))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",7L))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "driver.pipeInput(recordFactory.create(\"input\",\"k1\",\"v1\",1L))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/2(\",4L,0L),new KeyValueTimestamp<>(\"(k1@2/4(\",1L,2L)))@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "verify(drainProducerRecords(driver,\"output-suppressed\",STRING_DESERIALIZER,LONG_DESERIALIZER),asList(new KeyValueTimestamp<>(\"(k1@0/1(\",2L,1L),new KeyValueTimestamp<>(\"(k1@7/7(\",1L,7L)))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final KTable<Windowed<String>,Long> valueCounts = builder.stream(\"input\",Consumed.with(STRING_SERDE,STRING_SERDE)).groupBy(null,Serialized.with(STRING_SERDE,STRING_SERDE)).windowedBy(SessionWindows.with(5L).grace(5L)).count(Materialized.as(\"counts\").withCachingDisabled())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
15->10 [style = bold, label=""];
25->23 [style = bold, label=""];
18->17 [style = bold, label=""];
7->20 [style = dashed, label="0"];
5->15 [style = bold, label=""];
9->17 [style = bold, label=""];
4->22 [style = dashed, label="0"];
17->22 [style = bold, label=""];
10->6 [style = bold, label=""];
17->19 [style = bold, label=""];
3->0 [style = bold, label=""];
20->2 [style = bold, label=""];
12->13 [style = bold, label=""];
19->1 [style = bold, label=""];
0->14 [style = bold, label=""];
23->24 [style = bold, label=""];
11->3 [style = bold, label=""];
6->16 [style = bold, label=""];
13->7 [style = bold, label=""];
7->2 [style = bold, label=""];
4->19 [style = dashed, label="0"];
8->25 [style = dashed, label="0"];
4->1 [style = bold, label=""];
22->1 [style = bold, label=""];
2->25 [style = bold, label=""];
8->11 [style = bold, label=""];
16->12 [style = bold, label=""];
21->17 [style = bold, label=""];
17->4 [style = bold, label=""];
2->8 [style = bold, label=""];
13->20 [style = bold, label=""];
}
