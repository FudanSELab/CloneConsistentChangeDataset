digraph {
16 [style = filled, label = "ExecutionConfig config = Mockito.mock()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "check(Arrays.stream(TEST_DATA).map(null).toArray(null))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i++@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "i++@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testJdbcOutputFormat['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "jdbcOutputFormat.setRuntimeContext(context)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testEnrichedClassCastException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "jdbcOutputFormat.close()@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "format.flush()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "doReturn(config).when(context).getExecutionConfig()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "JdbcConnectorOptions options = JdbcConnectorOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "String expectedMsg = \"field index: 3, field value: 11.11.\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Row(( expected = new Row((((@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "RuntimeContext context = Mockito.mock()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "doReturn(true).when(config).isObjectReuseEnabled()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JdbcDmlOptions dmlOptions = JdbcDmlOptions.builder().withTableName(options.getTableName()).withDialect(options.getDialect()).withFieldNames(fieldNames).withKeyFields(keyFields).build()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < TEST_DATA.length@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "jdbcOutputFormat.open(1,1)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ExecutionConfig config = Mockito.mock()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "expected(i - TEST_DATA.length / 2( = toRow(TEST_DATA(i()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "format.flush()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testJdbcOutputFormat['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "Row inputRow = Row.of(1001,\"Java public for dummies\",\"Tan Ah Teck\",\"11.11\",11)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "format.writeRecord(Tuple2.of(true,toRow(entry)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "int i = TEST_DATA.length / 2@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i < TEST_DATA.length / 2@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "doReturn(config).when(context).getExecutionConfig()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "JdbcOptions options = JdbcOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "check(expected)@@@34@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "check(Arrays.stream(TEST_DATA).map(null).toArray(null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "format.writeRecord(Tuple2.of(false,toRow(TEST_DATA(i()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "format = new TableJdbcUpsertOutputFormat(new SimpleJdbcConnectionProvider(options),dmlOptions,JdbcExecutionOptions.defaults())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "RuntimeContext context = Mockito.mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "format.flush()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "JdbcBatchingOutputFormat jdbcOutputFormat = JdbcBatchingOutputFormat.builder().setOptions(JdbcOptions.builder().setDBUrl(getDbMetadata().getUrl()).setTableName(OUTPUT_TABLE).build()).setFieldNames(new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c319e0).setFieldTypes(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1c319e9).setKeyFields(null).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "jdbcOutputFormat.writeRecord(Tuple2.of(true,inputRow))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int i = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "doReturn(true).when(config).isObjectReuseEnabled()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->36 [style = dashed, label="0"];
32->35 [style = bold, label=""];
10->18 [style = bold, label=""];
22->25 [style = bold, label=""];
5->10 [style = bold, label=""];
31->37 [style = bold, label=""];
10->8 [style = dotted, label="true"];
15->34 [style = dashed, label="0"];
37->36 [style = bold, label=""];
16->31 [style = dashed, label="0"];
7->12 [style = bold, label=""];
36->29 [style = bold, label=""];
27->28 [style = bold, label=""];
18->11 [style = bold, label=""];
12->17 [style = bold, label=""];
1->5 [style = solid, label="i"];
6->26 [style = solid, label="length"];
28->7 [style = bold, label=""];
23->28 [style = dashed, label="0"];
11->26 [style = solid, label="i"];
25->4 [style = bold, label=""];
17->15 [style = solid, label="context"];
34->31 [style = bold, label=""];
6->2 [style = solid, label="expected"];
1->8 [style = solid, label="i"];
21->24 [style = bold, label=""];
7->12 [style = solid, label="dmlOptions"];
28->12 [style = solid, label="options"];
6->14 [style = solid, label="i"];
26->6 [style = bold, label=""];
15->16 [style = bold, label=""];
24->22 [style = bold, label=""];
33->9 [style = bold, label=""];
5->8 [style = solid, label="i"];
10->5 [style = dotted, label="true"];
0->15 [style = bold, label=""];
3->0 [style = bold, label=""];
20->2 [style = bold, label=""];
6->14 [style = bold, label=""];
14->26 [style = bold, label=""];
14->6 [style = solid, label="i"];
11->6 [style = solid, label="i"];
18->2 [style = solid, label="expected"];
13->3 [style = bold, label=""];
10->8 [style = bold, label=""];
8->5 [style = bold, label=""];
15->34 [style = solid, label="context"];
16->33 [style = bold, label=""];
19->23 [style = bold, label=""];
26->14 [style = dotted, label="true"];
1->10 [style = solid, label="i"];
9->21 [style = bold, label=""];
26->6 [style = dotted, label="true"];
17->13 [style = bold, label=""];
23->7 [style = bold, label=""];
4->1 [style = bold, label=""];
37->36 [style = solid, label="inputRow"];
1->10 [style = bold, label=""];
35->30 [style = bold, label=""];
5->10 [style = solid, label="i"];
16->9 [style = bold, label=""];
26->20 [style = bold, label=""];
23->12 [style = solid, label="options"];
30->15 [style = bold, label=""];
11->26 [style = bold, label=""];
14->26 [style = solid, label="i"];
9->34 [style = bold, label=""];
}
