digraph {
2 [style = filled, label = "assertTrue(\"Did not create \" + f.getAbsolutePath(),f.exists())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "long overwrittenLastModified = f.lastModified()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertContains(\"Processing File\",buildRule.getLog())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testSimpleScale['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "buildRule.executeTarget(\"testOverwriteTrue\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertTrue(\"File was not overwritten.\",lastModified < overwrittenLastModified)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testOverwriteTrue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSimpleScale['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertContains(\"Processing File\",buildRule.getLog())@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(buildRule.getLog(),containsString(\"Processing File\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "f = new File(buildRule.getOutputDir(),LARGEIMAGE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "long lastModified = f.lastModified()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "buildRule.executeTarget(\"testSimpleScale\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "File f = new File(buildRule.getOutputDir(),LARGEIMAGE)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assumeTrue(\"Could not change file modification date\",f.setLastModified(f.lastModified() - FILE_UTILS.getFileTimestampGranularity() * 2))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->1 [style = bold, label=""];
6->4 [style = bold, label=""];
1->2 [style = bold, label=""];
11->12 [style = bold, label=""];
7->11 [style = bold, label=""];
12->10 [style = bold, label=""];
11->14 [style = solid, label="lastModified"];
13->14 [style = solid, label="overwrittenLastModified"];
10->8 [style = bold, label=""];
9->4 [style = bold, label=""];
11->13 [style = solid, label="lastModified"];
0->5 [style = dashed, label="0"];
4->5 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
1->7 [style = bold, label=""];
13->14 [style = bold, label=""];
8->13 [style = bold, label=""];
4->0 [style = bold, label=""];
}
