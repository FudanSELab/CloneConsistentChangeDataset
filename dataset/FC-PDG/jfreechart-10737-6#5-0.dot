digraph {
7 [style = filled, label = "s1.add(new Task(\"Task 2\",new Date(10L),new Date(11L)))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "s1.add(new Task(\"Task 1\",new Date(0L),new Date(1L)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TaskSeriesCollection u2 = (TaskSeriesCollection)d2.getUnderlyingDataset()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TaskSeriesCollection u1 = new TaskSeriesCollection()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SlidingGanttCategoryDataset d2 = (SlidingGanttCategoryDataset)TestUtils.serialised(d1)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(d1,d2)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TaskSeries<String> s1 = new TaskSeries<>(\"Series\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertFalse(d1.equals(d2))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TaskSeries s1 = new TaskSeries(\"Series\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertFalse(d1.equals(d2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "TaskSeries<String> s2 = u2.getSeries(\"Series\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "SlidingGanttCategoryDataset d2 = (SlidingGanttCategoryDataset)d1.clone()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "s1.add(new Task(\"Task 2\",new Date(10L),new Date(11L)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SlidingGanttCategoryDataset d1 = new SlidingGanttCategoryDataset(u1,0,5)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "SlidingGanttCategoryDataset d2 = TestUtils.serialised(d1)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "s2.add(new Task(\"Task 2\",new Date(10L),new Date(11L)))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(d1 != d2)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertTrue(d1.equals(d2))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "u1.add(s1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(d1.equals(d2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TaskSeries s2 = u2.getSeries(\"Series\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->10 [style = bold, label=""];
16->1 [style = solid, label="d2"];
15->10 [style = bold, label=""];
16->0 [style = bold, label=""];
23->20 [style = bold, label=""];
7->17 [style = bold, label=""];
18->23 [style = bold, label=""];
6->18 [style = bold, label=""];
0->23 [style = dashed, label="0"];
17->9 [style = bold, label=""];
8->6 [style = solid, label="u1"];
13->17 [style = dashed, label="0"];
0->11 [style = bold, label=""];
6->16 [style = solid, label="d1"];
16->0 [style = solid, label="d2"];
12->6 [style = bold, label=""];
22->5 [style = bold, label=""];
18->13 [style = solid, label="d2"];
6->2 [style = bold, label=""];
6->0 [style = solid, label="d1"];
6->23 [style = solid, label="d1"];
2->0 [style = bold, label=""];
2->3 [style = solid, label="d2"];
10->8 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
6->16 [style = bold, label=""];
6->2 [style = solid, label="d1"];
18->21 [style = solid, label="d2"];
2->16 [style = dashed, label="0"];
16->3 [style = solid, label="d2"];
18->24 [style = solid, label="d2"];
2->18 [style = dashed, label="0"];
2->0 [style = solid, label="d2"];
18->23 [style = solid, label="d2"];
14->15 [style = bold, label=""];
13->9 [style = bold, label=""];
9->1 [style = bold, label=""];
20->24 [style = bold, label=""];
24->7 [style = bold, label=""];
1->19 [style = bold, label=""];
2->1 [style = solid, label="d2"];
5->15 [style = dashed, label="0"];
4->5 [style = bold, label=""];
15->12 [style = solid, label="s1"];
8->12 [style = bold, label=""];
5->12 [style = solid, label="s1"];
19->21 [style = bold, label=""];
}
