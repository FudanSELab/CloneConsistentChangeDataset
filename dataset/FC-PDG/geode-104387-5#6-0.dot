digraph {
709 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@427@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
103 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@332@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@1249@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
249 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1438@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
357 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@856@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "this.txMgr.commit()@@@714@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
685 [style = filled, label = "reg1.invalidate(\"key1\")@@@809@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
282 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@556@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
738 [style = filled, label = "this.txMgr.begin()@@@1423@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
197 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@593@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "EntryExistsException ok@@@121@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
845 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@310@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
454 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@888@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
369 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertNull(ev.getNewValue())assertNull(ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1362@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
609 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@200@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
289 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@751@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
381 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertNull(ev.getNewValue())assertNull(ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@1402@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
418 [style = filled, label = "callbackVal.reAssert()@@@821@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
785 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1037@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
651 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1305@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
620 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1041@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
484 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@351@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1024@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
611 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@341@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
775 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@469@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
754 [style = filled, label = "this.txMgr.begin()@@@353@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "callbackVal.assertUpdateWriterCnt(2)@@@471@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
238 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@520@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
402 [style = filled, label = "reg1.localDestroy(\"key1\")@@@193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
587 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@759@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
504 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1386@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
660 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@623@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
155 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@276@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
686 [style = filled, label = "callbackVal.reAssert()@@@903@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
524 [style = filled, label = "reg1.create(\"key1\",\"ex\")@@@625@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
764 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@639@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
261 [style = filled, label = "CountingCallBackValidator callbackVal = new CountingCallBackValidator(cntListener,cntWriter)@@@111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
192 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1507@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
893 [style = filled, label = "{}@@@798@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
512 [style = filled, label = "callbackVal.reset()@@@112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
478 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@865@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
448 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@173@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
661 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@584@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
833 [style = filled, label = "callbackVal.reAssert()@@@223@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
737 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@460@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
305 [style = filled, label = "reg1.destroy(\"key1\")@@@934@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
810 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@664@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
252 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@685@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
278 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@170@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
602 [style = filled, label = "this.txMgr.commit()@@@129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@1264@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
334 [style = filled, label = "this.txMgr.commit()@@@1164@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
362 [style = filled, label = "this.txMgr.commit()@@@1506@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
352 [style = filled, label = "reg1.invalidate(\"key1\")@@@967@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
570 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@505@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
229 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@346@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
750 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@217@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
838 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1049@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
867 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@163@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
839 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1470@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
207 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1421@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
431 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@354@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
490 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@1242@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@1426@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
508 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1172@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
217 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@1126@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
736 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@1464@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
434 [style = filled, label = "callbackVal.reset()@@@1498@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
526 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@677@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
643 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@396@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
199 [style = filled, label = "{}@@@1026@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
897 [style = filled, label = "{}@@@628@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
610 [style = filled, label = "this.txMgr.begin()@@@336@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@425@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
752 [style = filled, label = "EntryExistsException ok@@@260@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
438 [style = filled, label = "callbackVal.reAssert()@@@1203@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
618 [style = filled, label = "reg1.destroy(\"key1\")@@@368@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
241 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@519@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
359 [style = filled, label = "{}@@@378@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@781@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
865 [style = filled, label = "this.txMgr.commit()@@@166@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1276@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
331 [style = filled, label = "callbackVal.reAssert()@@@860@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "EntryNotFoundException ok@@@1019@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
604 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1088@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
684 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@643@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
776 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@802@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
405 [style = filled, label = "callbackVal.reset()@@@541@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
855 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@340@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "this.txMgr.commit()@@@342@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
844 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1160@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@267@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
375 [style = filled, label = "{}@@@1012@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
358 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1079@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
813 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@941@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
130 [style = filled, label = "this.txMgr.begin()@@@1112@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
183 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@206@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "callbackVal.reset()@@@1228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
267 [style = filled, label = "reg1.create(\"key1\",\"value2\")@@@463@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
687 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@703@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
266 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@320@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
191 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@472@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
694 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1435@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
733 [style = filled, label = "reg1.localDestroy(\"key1\")@@@455@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
477 [style = filled, label = "this.txMgr.begin()@@@213@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
262 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@752@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
543 [style = filled, label = "{}@@@1261@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
396 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@255@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
435 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1458@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
677 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1082@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
139 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@746@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
491 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@301@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@713@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
717 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@544@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
223 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@557@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
778 [style = filled, label = "callbackVal.assertCreateListenerCnt(0,false)@@@165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
868 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@904@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
906 [style = filled, label = "assertEquals(0,this.listenerClose)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
397 [style = filled, label = "{}@@@1247@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
553 [style = filled, label = "EntryNotFoundException ok@@@798@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
321 [style = filled, label = "callbackVal.reset()@@@156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
811 [style = filled, label = "EntryExistsException ok@@@260@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
934 [style = filled, label = "this.txMgr.begin()@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
436 [style = filled, label = "this.txMgr.commit()@@@1430@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
231 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1383@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@555@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
233 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1534@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
629 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1297@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
637 [style = filled, label = "reg1.destroy(\"key1\")@@@198@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
320 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@421@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
279 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@172@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
310 [style = filled, label = "callbackVal.reset()@@@1341@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
601 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1429@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
264 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@586@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@262@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
917 [style = filled, label = "testListener['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
656 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@201@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
896 [style = filled, label = "EntryNotFoundException ok@@@812@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
200 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@265@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
843 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@333@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
293 [style = filled, label = "callbackVal.reset()@@@929@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
496 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@394@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
683 [style = filled, label = "fail(\"expected EntryExistsException\")@@@464@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
883 [style = filled, label = "{}@@@260@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
308 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1431@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
441 [style = filled, label = "{}@@@1019@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
590 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@456@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
118 [style = filled, label = "{}@@@364@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
184 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1080@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
825 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1278@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
250 [style = filled, label = "this.txMgr.begin()@@@666@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
464 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@225@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
569 [style = filled, label = "this.txMgr.commit()@@@269@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
691 [style = filled, label = "fail(\"expected EntryExistsException\")@@@258@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
248 [style = filled, label = "callbackVal.reset()@@@457@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
260 [style = filled, label = "this.txMgr.begin()@@@1381@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@854@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
341 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@344@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
179 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@722@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
447 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@424@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
916 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1535@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
479 [style = filled, label = "callbackVal.reset()@@@1071@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
923 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
806 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@720@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "reg1.localDestroy(\"key1\")@@@155@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1075@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
642 [style = filled, label = "callbackVal.assertCreateListenerCnt(0,false)@@@127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@272@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
446 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@1345@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
681 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@1123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
932 [style = filled, label = "assertEquals(1,this.listenerAfterCommit)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
196 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@380@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
517 [style = filled, label = "reg1.localDestroy(\"key1\")@@@303@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
615 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@204@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
680 [style = filled, label = "{}@@@121@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
563 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@748@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
152 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@676@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
788 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@683@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "this.txMgr.commit()@@@675@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
613 [style = filled, label = "reg1.localDestroy(\"key1\")@@@672@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
879 [style = filled, label = "testTxAlgebra['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
726 [style = filled, label = "this.txMgr.begin()@@@1300@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
734 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1252@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
567 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@388@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
869 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@209@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
156 [style = filled, label = "callbackVal.reAssert()@@@1086@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
287 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1279@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
793 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@422@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
704 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@1306@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
534 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1317@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
151 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1514@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
189 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1256@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
586 [style = filled, label = "callbackVal.reset()@@@212@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
915 [style = filled, label = "this.txMgr.setListener(oldListener)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
669 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@362@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
766 [style = filled, label = "this.txMgr.commit()@@@221@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
909 [style = filled, label = "this.txMgr.rollback()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
407 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
556 [style = filled, label = "CountingCacheWriter cntWriter = new CountingCacheWriter(){@Override public void close(){}@Override public void reset(){this.bCreateCalls = this.bUpdateCalls = this.bDestroyCalls = this.bLocalDestroyCalls = 0}@Override public void beforeCreate(EntryEvent e){++this.bCreateCalls}@Override public void beforeUpdate(EntryEvent e){++this.bUpdateCalls}@Override public void beforeDestroy(EntryEvent e){++this.bDestroyCalls}@Override public void beforeRegionDestroy(RegionEvent e){fail(\"Unexpected beforeRegionDestroy in testTxAlgebra\")}@Override public void beforeRegionClear(RegionEvent e){fail(\"Unexpected beforeRegionClear in testTxAlgebra\")}@Override public int getBeforeCreateCalls(){return this.bCreateCalls}@Override public int getBeforeUpdateCalls(){return this.bUpdateCalls}@Override public int getBeforeDestroyCalls(boolean fetchLocal){return fetchLocal? this.bLocalDestroyCalls: this.bDestroyCalls}}@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
645 [style = filled, label = "this.txMgr.commit()@@@1039@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
835 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1391@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1512@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1133@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
725 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1159@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
792 [style = filled, label = "this.txMgr.begin()@@@743@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
377 [style = filled, label = "callbackVal.reAssert()@@@1045@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
165 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@331@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1268@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
606 [style = filled, label = "CountingCacheListener cntListener = new CountingCacheListener(){@Override public void close(){}@Override public void reset(){this.aCreateCalls = this.aUpdateCalls = this.aInvalidateCalls = this.aDestroyCalls = this.aLocalDestroyCalls = 0}@Override public void afterCreate(EntryEvent e){++this.aCreateCalls}@Override public void afterUpdate(EntryEvent e){++this.aUpdateCalls}@Override public void afterInvalidate(EntryEvent e){++this.aInvalidateCalls}@Override public void afterDestroy(EntryEvent e){if (e.getOperation().isDistributed()) {++this.aDestroyCalls}{++this.aLocalDestroyCalls}}@Override public void afterRegionInvalidate(RegionEvent e){fail(\"Unexpected afterRegionInvalidate in testTxAlgebra\")}@Override public void afterRegionDestroy(RegionEvent e){if (!e.getOperation().isClose()) {fail(\"Unexpected afterRegionDestroy in testTxAlgebra\")}}@Override public void afterRegionClear(RegionEvent event){}@Override public void afterRegionCreate(RegionEvent event){}@Override public void afterRegionLive(RegionEvent event){}@Override public int getAfterCreateCalls(){return this.aCreateCalls}@Override public int getAfterUpdateCalls(){return this.aUpdateCalls}@Override public int getAfterInvalidateCalls(){return this.aInvalidateCalls}@Override public int getAfterDestroyCalls(boolean fetchLocal){return fetchLocal? this.aLocalDestroyCalls: this.aDestroyCalls}}@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1233@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
784 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1424@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
423 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1046@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
242 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1002@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
922 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
744 [style = filled, label = "callbackVal.reset()@@@1113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
761 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@159@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
902 [style = filled, label = "assertEquals(2,this.listenerAfterRollback)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
876 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1478@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
226 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@978@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
641 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@850@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "this.txMgr.begin()@@@503@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
422 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@980@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
571 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@334@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
823 [style = filled, label = "callbackVal.reset()@@@578@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "EntryExistsException ok@@@466@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
723 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1171@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
861 [style = filled, label = "this.txMgr.commit()@@@587@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
711 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@318@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
356 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@208@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
265 [style = filled, label = "callbackVal.reAssert()@@@309@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
575 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1301@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
286 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1091@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1197@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
559 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@707@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
218 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@786@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
465 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@509@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
158 [style = filled, label = "{}@@@371@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1436@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1509@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
350 [style = filled, label = "mutator.addCacheListener(cntListener)@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@898@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
751 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@326@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
667 [style = filled, label = "reg1.invalidate(\"key1\")@@@507@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
791 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@171@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
163 [style = filled, label = "reg1.invalidate(\"key1\")@@@1003@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
693 [style = filled, label = "callbackVal.reset()@@@964@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
115 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1398@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
548 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1319@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
301 [style = filled, label = "this.txMgr.commit()@@@972@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
639 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@305@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
857 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1474@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
462 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@1125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
413 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
564 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@264@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
846 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@783@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
580 [style = filled, label = "EntryNotFoundException ok@@@1033@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
355 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@207@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
541 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@278@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
168 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@461@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@366@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
480 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@817@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
311 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@1124@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
109 [style = filled, label = "EntryExistsException ok@@@1121@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
315 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@304@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
772 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1232@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1251@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
339 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@851@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
573 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@550@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
367 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@619@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
842 [style = filled, label = "{}@@@805@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
627 [style = filled, label = "reg1.localDestroy(\"key1\")@@@747@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@348@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
502 [style = filled, label = "this.txMgr.commit()@@@636@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
664 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@908@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
773 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1508@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
280 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1467@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1385@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
830 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@554@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
925 [style = filled, label = "this.txMgr.begin()@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
222 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@824@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
769 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@323@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "reg1.localDestroy(\"key1\")@@@615@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
368 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@169@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
360 [style = filled, label = "this.txMgr.commit()@@@1388@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
829 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1541@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
469 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@859@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
138 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@708@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
257 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@1078@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
395 [style = filled, label = "{}@@@1261@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
742 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@789@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
392 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@796@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
753 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@359@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
232 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1547@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
808 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1462@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
576 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@622@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
133 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1538@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
307 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@853@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
880 [style = filled, label = "EntryNotFoundException ok@@@1019@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
547 [style = filled, label = "reg1.localDestroy(\"key1\")@@@784@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@900@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@481@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
758 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@745@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
445 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@350@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
487 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@398@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@521@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
756 [style = filled, label = "EntryNotFoundException ok@@@805@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
765 [style = filled, label = "this.txMgr.commit()@@@857@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
417 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@885@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
145 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@375@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
542 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@966@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
650 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1201@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
701 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1511@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
474 [style = filled, label = "this.txMgr.commit()@@@1544@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "callbackVal.reset()@@@1192@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
853 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@928@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "reg1.localDestroy(\"key1\")@@@927@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
306 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@540@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
818 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@229@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
390 [style = filled, label = "this.txMgr.commit()@@@549@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
841 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@866@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@273@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
824 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1076@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
335 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@274@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
221 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1111@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
506 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1038@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
929 [style = filled, label = "assertEquals(0,this.listenerAfterRollback)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
895 [style = filled, label = "EntryNotFoundException ok@@@385@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
110 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@216@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
383 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@674@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
463 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@215@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "this.txMgr.commit()@@@1081@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
203 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1271@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
298 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@645@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
605 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1554@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
630 [style = filled, label = "callbackVal.reAssert()@@@754@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
850 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@976@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
456 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@312@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
538 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@376@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
936 [style = filled, label = "CommitConflictException unexpected@@@40@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
323 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@855@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
732 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@753@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
275 [style = filled, label = "callbackVal.reAssert()@@@1510@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
911 [style = filled, label = "assertEquals(2,this.listenerClose)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
228 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1343@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
337 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@480@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1420@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
941 [style = filled, label = "assertEquals(myTxId,this.te.getTransactionId())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
619 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@585@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
485 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1387@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
141 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@684@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
700 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1344@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
729 [style = filled, label = "reg1.localDestroy(\"key1\")@@@663@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
304 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1035@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
714 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1505@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
871 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@330@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
767 [style = filled, label = "this.txMgr.commit()@@@1267@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
167 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1340@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
476 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@175@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
648 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@429@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
800 [style = filled, label = "callbackVal.reset()@@@665@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
894 [style = filled, label = "EntryNotFoundException ok@@@1261@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
939 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
317 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@160@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
904 [style = filled, label = "assertEquals(1,this.listenerAfterRollback)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
614 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@347@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
290 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@823@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
870 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@203@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
930 [style = filled, label = "oldListener = this.txMgr.setListener(new TransactionListener(){@Override public void afterCommit(TransactionEvent event){listenerAfterCommit = 2te = event}@Override public void afterFailedCommit(TransactionEvent event){listenerAfterFailedCommit = 2}@Override public void afterRollback(TransactionEvent event){listenerAfterRollback = 2te = event}@Override public void close(){listenerClose = 2}})@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
840 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@588@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@482@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
409 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1389@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
802 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@943@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
299 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1114@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
382 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1346@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
912 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
406 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
161 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@517@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
592 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1477@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
882 [style = filled, label = "EntryExistsException ok@@@466@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
634 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@634@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
537 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@682@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
755 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1361@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1208@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
313 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1265@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
177 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1235@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
928 [style = filled, label = "assertEquals(1,this.listenerAfterRollback)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
230 [style = filled, label = "reg1.localDestroy(\"key1\")@@@788@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
224 [style = filled, label = "this.txMgr.begin()@@@1342@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
370 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1089@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
562 [style = filled, label = "reg1.destroy(\"key1\")@@@322@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
804 [style = filled, label = "EntryNotFoundException ok@@@1240@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
347 [style = filled, label = "fail(\"expected EntryExistsException\")@@@1119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
644 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@338@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
294 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@515@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
379 [style = filled, label = "reg1.localDestroy(\"key1\")@@@296@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
560 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@999@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
387 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@477@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
831 [style = filled, label = "callbackVal.reAssert()@@@1273@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
670 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1549@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
847 [style = filled, label = "EntryExistsException ok@@@1121@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
905 [style = filled, label = "TransactionId myTxId = this.txMgr.getTransactionId()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
550 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@592@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
584 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@174@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
544 [style = filled, label = "callbackVal.reAssert()@@@205@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
193 [style = filled, label = "assertNull(reg1.getEntry(\"key1\").getValue())@@@1353@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
708 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@905@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
658 [style = filled, label = "reg1.localDestroy(\"key1\")@@@852@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
770 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1245@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "reg1.localDestroy(\"key1\")@@@969@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
822 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1023@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
489 [style = filled, label = "TransactionId myTxId@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
572 [style = filled, label = "callbackVal.reAssert()@@@431@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
632 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@358@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
809 [style = filled, label = "EntryNotFoundException ok@@@378@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
799 [style = filled, label = "this.txMgr.begin()@@@419@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
132 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@468@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
316 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1304@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
424 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@644@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
774 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1051@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
205 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@501@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
237 [style = filled, label = "callbackVal.reset()@@@617@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
881 [style = filled, label = "{}@@@1033@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
585 [style = filled, label = "callbackVal.assertInvalidateCnt(1)@@@1351@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
523 [style = filled, label = "reg1.destroy(\"key1\")@@@711@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
428 [style = filled, label = "EntryExistsException ok@@@895@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
801 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@862@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
144 [style = filled, label = "reg1.localDestroy(\"key1\")@@@884@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "{}@@@628@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "reg1.localInvalidate(\"key1\",\"value1\")@@@1302@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
291 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1234@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1553@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
247 [style = filled, label = "callbackVal.assertUpdateWriterCnt(2)@@@633@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
153 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@718@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
244 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1513@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
459 [style = filled, label = "callbackVal.reset()@@@352@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
472 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@637@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
170 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@723@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
516 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1360@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
603 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1316@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
419 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@307@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
668 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@846@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
712 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@558@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
730 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@782@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
763 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@552@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
797 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1307@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1196@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
281 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@545@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
624 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@397@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
388 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "callbackVal.reAssert()@@@1314@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
114 [style = filled, label = "callbackVal.reAssert()@@@939@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
449 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@616@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
371 [style = filled, label = "callbackVal.reAssert()@@@1352@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
710 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@343@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
458 [style = filled, label = "reg1.invalidate(\"key1\")@@@932@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
919 [style = filled, label = "assertEquals(myTxId,this.te.getTransactionId())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
617 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@302@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
466 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@135@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
253 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@631@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
498 [style = filled, label = "callbackVal.reAssert()@@@1434@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
546 [style = filled, label = "callbackVal.assertCreateWriterCnt(2)@@@389@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
748 [style = filled, label = "callbackVal.reset()@@@297@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
703 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@668@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
378 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1320@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
577 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@510@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
678 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@254@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
697 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@548@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
628 [style = filled, label = "this.txMgr.commit()@@@818@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
852 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@899@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
503 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@300@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
528 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1069@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
494 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@641@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@313@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
210 [style = filled, label = "this.txMgr.begin()@@@1157@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
532 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@164@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
828 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@935@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
473 [style = filled, label = "{}@@@1026@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
716 [style = filled, label = "this.txMgr.begin()@@@848@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
786 [style = filled, label = "this.txMgr.begin()@@@1499@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
450 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@815@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
216 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@716@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
312 [style = filled, label = "assertEquals(null,reg1.getEntry(\"key1\").getValue())@@@591@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
351 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@506@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
202 [style = filled, label = "this.txMgr.commit()@@@1309@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
488 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1092@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
302 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@744@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1266@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
518 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1496@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
256 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@319@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
821 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1077@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
864 [style = filled, label = "callbackVal.reset()@@@1460@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@1465@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
143 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@252@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
875 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getInvalidateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@597@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
211 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@749@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
780 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@547@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
595 [style = filled, label = "callbackVal.reAssert()@@@131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
288 [style = filled, label = "callbackVal.reset()@@@418@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
551 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1259@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1432@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
625 [style = filled, label = "reg1.invalidate(\"key1\")@@@1030@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
789 [style = filled, label = "{}@@@371@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
589 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@314@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
631 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@349@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
374 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@1166@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
137 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@395@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
147 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@864@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
276 [style = filled, label = "this.txMgr.commit()@@@306@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
910 [style = filled, label = "this.txMgr.rollback()@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
129 [style = filled, label = "EntryNotFoundException ok@@@798@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
612 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@214@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
364 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@757@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "callbackVal.reset()@@@779@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
495 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@196@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
416 [style = filled, label = "callbackVal.reset()@@@1422@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
146 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1312@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
662 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1163@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
297 [style = filled, label = "{}@@@895@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
899 [style = filled, label = "{}@@@1121@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
816 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@1350@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
220 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1205@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
579 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@369@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
398 [style = filled, label = "this.txMgr.commit()@@@750@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
400 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1515@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
554 [style = filled, label = "reg1.destroy(\"key1\")@@@1425@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
121 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1191@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
429 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1135@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
162 [style = filled, label = "callbackVal.reset()@@@335@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@308@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@355@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
376 [style = filled, label = "callbackVal.reset()@@@704@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
819 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@437@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNull(reg1.getEntry(\"key1\").getValue())@@@1393@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
102 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1173@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
164 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1439@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
673 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@968@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1540@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
227 [style = filled, label = "callbackVal.reAssert()@@@1130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
740 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@816@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1382@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
204 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@392@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
607 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@810@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
391 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1440@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
452 [style = filled, label = "AttributesMutator<String,String> mutator = this.region.getAttributesMutator()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
568 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@970@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
181 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1274@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1206@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
505 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@758@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "callbackVal.reAssert()@@@514@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
365 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@219@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
689 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@594@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
412 [style = filled, label = "this.txMgr.commit()@@@1349@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
702 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@827@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
834 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@433@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
695 [style = filled, label = "reg1.localDestroy(\"key1\")@@@357@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
860 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@224@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
296 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1134@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
862 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@630@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
921 [style = filled, label = "assertTrue(this.txMgr.getListener() == null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
393 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@158@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
510 [style = filled, label = "reg1.put(\"key1\",\"value3\")@@@470@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
827 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@595@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
598 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value3\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@399@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
271 [style = filled, label = "this.txMgr.begin()@@@887@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
597 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@329@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
272 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1310@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
234 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@504@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
540 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@1131@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
373 [style = filled, label = "{}@@@1012@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
623 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@227@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
888 [style = filled, label = "{}@@@364@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
87 [style = filled, label = "callbackVal.reAssert()@@@638@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
451 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1545@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
292 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@907@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
807 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@596@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
154 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1551@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
655 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@892@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
633 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@478@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1546@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
851 [style = filled, label = "{LocalRegion.NonTXEntry nonTXe = (LocalRegion.NonTXEntry)reg1.getEntry(\"key1\")assertTrue(nonTXe.getRegionEntry().isInvalid())}@@@1394@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
186 [style = filled, label = "mutator.setCacheWriter(cntWriter)@@@110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
180 [style = filled, label = "callbackVal.reAssert()@@@328@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@760@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "reg1.invalidate(\"key1\")@@@1258@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
195 [style = filled, label = "callbackVal.reset()@@@1299@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
314 [style = filled, label = "reg1.localDestroy(\"key1\")@@@248@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
499 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1400@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@671@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@785@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
803 [style = filled, label = "reg1.localDestroy(\"key1\")@@@423@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
201 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@977@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "callbackVal.reset()@@@1000@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
471 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@667@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.txMgr.begin()@@@705@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
457 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@266@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
608 [style = filled, label = "this.txMgr.begin()@@@250@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "this.txMgr.begin()@@@113@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
588 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1277@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
908 [style = filled, label = "TransactionListener oldListener = this.txMgr.setListener(new TransactionListener(){@Override public void afterCommit(TransactionEvent event){listenerAfterCommit = 1te = event}@Override public void afterFailedCommit(TransactionEvent event){listenerAfterFailedCommit = 1te = event}@Override public void afterRollback(TransactionEvent event){listenerAfterRollback = 1te = event}@Override public void close(){listenerClose = 1}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
520 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1318@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
682 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@251@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
194 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@673@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
123 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@974@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
389 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1170@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
638 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1339@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
235 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@1384@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
891 [style = filled, label = "EntryNotFoundException ok@@@805@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
676 [style = filled, label = "EntryNotFoundException ok@@@791@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
327 [style = filled, label = "this.txMgr.commit()@@@1468@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
779 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1047@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
215 [style = filled, label = "callbackVal.reAssert()@@@1548@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
574 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@793@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
715 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1550@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
338 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1471@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
426 [style = filled, label = "assertTrue(reg1.containsKey(\"key1\"))@@@590@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
148 [style = filled, label = "callbackVal.reset()@@@249@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
849 [style = filled, label = "callbackVal.reAssert()@@@717@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
777 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1005@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
884 [style = filled, label = "{}@@@895@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
938 [style = filled, label = "closeCache()@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
933 [style = filled, label = "assertEquals(1,this.listenerClose)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
859 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1501@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
111 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1006@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
599 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1469@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
128 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@1118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
812 [style = filled, label = "{}@@@791@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
525 [style = filled, label = "this.txMgr.commit()@@@473@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
527 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
318 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@356@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
343 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1227@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
665 [style = filled, label = "reg1.localDestroy(\"key1\")@@@500@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
854 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1050@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
900 [style = filled, label = "this.txMgr.begin()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
858 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1475@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
455 [style = filled, label = "this.txMgr.begin()@@@1001@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
918 [style = filled, label = "this.txMgr.rollback()@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
796 [style = filled, label = "this.txMgr.begin()@@@298@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
728 [style = filled, label = "callbackVal.assertCreateWriterCnt(0)@@@897@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
626 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1084@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
935 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
243 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@755@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
176 [style = filled, label = "this.txMgr.commit()@@@1200@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
212 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@800@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
172 [style = filled, label = "callbackVal.reAssert()@@@1167@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
96 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@1427@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
309 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@863@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
468 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@715@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "this.txMgr.begin()@@@1193@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
566 [style = filled, label = "callbackVal.reset()@@@847@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
332 [style = filled, label = "reg1.invalidate(\"key1\",\"value1\")@@@1074@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
439 [style = filled, label = "callbackVal.reAssert()@@@476@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
885 [style = filled, label = "EntryExistsException ok@@@121@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
134 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@942@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
239 [style = filled, label = "callbackVal.reset()@@@1536@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
815 [style = filled, label = "callbackVal.reAssert()@@@1472@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
787 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@706@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
258 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1004@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@115@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
781 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@136@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
443 [style = filled, label = "this.txMgr.begin()@@@965@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
150 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1476@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
762 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@373@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
790 [style = filled, label = "callbackVal.reAssert()@@@975@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
182 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@582@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@211@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
322 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@861@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
140 [style = filled, label = "reg1.localDestroy(\"key1\")@@@539@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
427 [style = filled, label = "callbackVal.reset()@@@1156@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "this.txMgr.commit()@@@1127@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
593 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@337@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
263 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@474@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
636 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@940@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
345 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value1\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@1516@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
706 [style = filled, label = "reg1.destroy(\"key1\")@@@1161@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
142 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
688 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@199@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
890 [style = filled, label = "{}@@@1254@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
600 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1348@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
251 [style = filled, label = "reg1.invalidate(\"key1\")@@@382@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
657 [style = filled, label = "callbackVal.assertCreateListenerCnt(0,false)@@@268@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
591 [style = filled, label = "callbackVal.reAssert()@@@168@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
817 [style = filled, label = "this.txMgr.begin()@@@579@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
507 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@420@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
340 [style = filled, label = "callbackVal.assertCreateWriterCnt(1,false)@@@123@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@712@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
718 [style = filled, label = "EntryNotFoundException ok@@@1254@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
283 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1110@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
208 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@275@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
666 [style = filled, label = "reg1.invalidate(\"key1\")@@@1347@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
333 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@890@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
273 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@721@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
174 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1298@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
342 [style = filled, label = "reg1.invalidate(\"key1\")@@@889@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
705 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1009@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
500 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@383@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
837 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1437@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
329 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@580@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
549 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@125@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
415 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1042@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
467 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1272@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
555 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@971@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "EntryNotFoundException ok@@@1254@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
366 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@263@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
690 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1044@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
175 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@635@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
529 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@516@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
104 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1048@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
173 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@321@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
493 [style = filled, label = "reg1.destroy(\"key1\")@@@795@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
783 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@327@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
795 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1542@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1543@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
707 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@508@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
545 [style = filled, label = "reg1.localDestroy(\"key1\")@@@361@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
727 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@435@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
901 [style = filled, label = "assertTrue(oldListener == null)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
324 [style = filled, label = "{}@@@812@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
878 [style = filled, label = "{}@@@1240@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1017@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
169 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1,false)@@@1014@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
913 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
747 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@430@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
284 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@197@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
898 [style = filled, label = "EntryNotFoundException ok@@@1247@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
820 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@820@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
698 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@906@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
692 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@979@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
873 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@678@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
361 [style = filled, label = "{}@@@385@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@756@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
616 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@681@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
157 [style = filled, label = "reg1.create(\"key1\",\"value2\")@@@118@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
557 [style = filled, label = "reg1.localDestroy(\"key1\")@@@417@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
346 [style = filled, label = "{LocalRegion.NonTXEntry nonTXe = (LocalRegion.NonTXEntry)reg1.getEntry(\"key1\")assertTrue(nonTXe.getRegionEntry().isInvalid())}@@@1354@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
509 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1572@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
749 [style = filled, label = "{}@@@1247@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
724 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@931@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
743 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@640@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
696 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1238@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
425 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@822@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
889 [style = filled, label = "{}@@@378@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
513 [style = filled, label = "callbackVal.reAssert()@@@393@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
325 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1311@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
745 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@1269@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
671 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1087@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
420 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1028@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
866 [style = filled, label = "{}@@@466@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
178 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@807@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
408 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@945@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
135 [style = filled, label = "EntryNotFoundException ok@@@1240@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
460 [style = filled, label = "reg1.destroy(\"key1\")@@@1016@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
514 [style = filled, label = "callbackVal.reAssert()@@@553@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
536 [style = filled, label = "assertEquals(\"value1\",reg1.getEntry(\"key1\").getValue())@@@1473@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
561 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1195@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@475@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
635 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(1)@@@1202@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
219 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@981@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
188 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1204@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
515 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@620@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
328 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@814@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
430 [style = filled, label = "this.txMgr.begin()@@@195@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
583 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@944@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
719 [style = filled, label = "reg1.put(\"key1\",\"value2\")@@@632@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
594 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1129@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
444 [style = filled, label = "callbackVal.reAssert()@@@1392@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
920 [style = filled, label = "this.txMgr.begin()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
399 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@130@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
924 [style = filled, label = "fail(\"did not expect \" + unexpected)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
759 [style = filled, label = "callbackVal.assertDestroyWriterCnt(1)@@@1162@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
652 [style = filled, label = "reg1.put(\"key1\",\"value1\")@@@581@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "callbackVal.reset()@@@886@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
149 [style = filled, label = "this.txMgr.commit()@@@325@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
171 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1194@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
414 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1007@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
565 [style = filled, label = "this.txMgr.begin()@@@458@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
108 [style = filled, label = "this.txMgr.begin()@@@317@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
596 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@577@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
720 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@137@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
805 [style = filled, label = "this.txMgr.begin()@@@1537@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
863 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@559@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
384 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@277@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
760 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@741@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
931 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
552 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1390@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "this.txMgr.begin()@@@1461@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
236 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@479@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
330 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@849@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
581 [style = filled, label = "reg1.localDestroy(\"key1\")@@@339@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
721 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@778@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
470 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@680@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
442 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1155@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
380 [style = filled, label = "fail(\"expected EntryExistsException\")@@@626@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
768 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1466@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
892 [style = filled, label = "EntryNotFoundException ok@@@371@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
255 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1263@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
187 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getCreateEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(null,ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@230@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
492 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@222@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "this.txMgr.begin()@@@618@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
511 [style = filled, label = "callbackVal.reset()@@@502@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
757 [style = filled, label = "this.txMgr.commit()@@@428@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
372 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getPutEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(\"value2\",ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(ev.getOperation().isDistributed())}}@@@909@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
649 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1085@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
277 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1128@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
722 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1)@@@669@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
433 [style = filled, label = "callbackVal.reset()@@@742@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
300 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@315@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
848 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@299@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
483 [style = filled, label = "callbackVal.assertUpdateWriterCnt(1,false)@@@621@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
522 [style = filled, label = "reg1.invalidate(\"key1\")@@@161@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
326 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1399@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
654 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1070@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
782 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1428@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@670@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
421 [style = filled, label = "callbackVal.assertInvalidateCnt(1)@@@512@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
653 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@819@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "callbackVal.reAssert()@@@271@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
663 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@1199@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
927 [style = filled, label = "assertEquals(1,this.listenerAfterRollback)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
907 [style = filled, label = "assertEquals(1,this.listenerClose)@@@79@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
640 [style = filled, label = "{}@@@812@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "this.txMgr.commit()@@@202@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1010@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
386 [style = filled, label = "this.txMgr.begin()@@@157@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "reg1.create(\"key1\",\"value3\")@@@1036@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
285 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1090@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
453 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@543@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
497 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1539@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
519 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1083@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
185 [style = filled, label = "this.txMgr.commit()@@@937@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
533 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@270@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
877 [style = filled, label = "EntryNotFoundException ok@@@1012@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
539 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1502@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
166 [style = filled, label = "assertEquals(\"value2\",reg1.getEntry(\"key1\").getValue())@@@132@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
914 [style = filled, label = "assertEquals(0,this.listenerAfterCommit)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
475 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1358@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
578 [style = filled, label = "callbackVal.assertDestroyListenerCnt(0)@@@973@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "this.txMgr.setListener(new TransactionListener(){@Override public void afterCommit(TransactionEvent event){listenerAfterCommit = 1te = event}@Override public void afterFailedCommit(TransactionEvent event){listenerAfterFailedCommit = 1te = event}@Override public void afterRollback(TransactionEvent event){listenerAfterRollback = 1te = event}@Override public void close(){listenerClose = 1}})@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@387@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
699 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1308@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
245 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@583@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
213 [style = filled, label = "reg1.localDestroy(\"key1\")@@@845@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
268 [style = filled, label = "callbackVal.reAssert()@@@589@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
411 [style = filled, label = "this.txMgr.commit()@@@901@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
856 [style = filled, label = "reg1.destroy(\"key1\")@@@1244@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
95 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@228@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
622 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@432@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
582 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@719@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
246 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1073@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1338@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "callbackVal.assertUpdateListenerCnt(0)@@@513@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
482 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1040@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
794 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@963@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
198 [style = filled, label = "callbackVal.assertInvalidateCnt(0,false)@@@1303@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
621 [style = filled, label = "{}@@@385@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
535 [style = filled, label = "reg1.destroy(\"key1\")@@@1463@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
814 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@551@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
558 [style = filled, label = "this.txMgr.begin()@@@1229@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
530 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1433@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
937 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
159 [style = filled, label = "this.txMgr.begin()@@@542@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
675 [style = filled, label = "callbackVal.reset()@@@1380@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
319 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@311@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
739 [style = filled, label = "fail(\"expected EntryExistsException\")@@@893@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
874 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@1231@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
240 [style = filled, label = "callbackVal.assertCreateListenerCnt(1)@@@167@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1237@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
410 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@1165@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
735 [style = filled, label = "callbackVal.reset()@@@194@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
887 [style = filled, label = "EntryNotFoundException ok@@@1026@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "this.txMgr.commit()@@@391@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
481 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@710@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
214 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@210@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "reg1.localInvalidate(\"key1\")@@@709@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
344 [style = filled, label = "callbackVal.assertCreateWriterCnt(2)@@@426@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
647 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1500@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
295 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@1315@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
440 [style = filled, label = "EntryExistsException ok@@@628@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "callbackVal.assertDestroyWriterCnt(0)@@@1021@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
336 [style = filled, label = "reg1.destroy(\"key1\")@@@546@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@218@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
679 [style = filled, label = "callbackVal.assertLocalDestroyWriterCnt(1)@@@1198@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
461 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@1031@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
926 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
303 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@902@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
259 [style = filled, label = "this.txMgr.begin()@@@1072@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
394 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@826@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
731 [style = filled, label = "callbackVal.reset()@@@316@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
432 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1552@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
674 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@1275@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
798 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1158@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
353 [style = filled, label = "callbackVal.assertCreateListenerCnt(0)@@@1043@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
209 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@226@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
270 [style = filled, label = "reg1.localDestroy(\"key1\")@@@1154@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
385 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@1401@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
269 [style = filled, label = "assertTrue(!reg1.containsValueForKey(\"key1\"))@@@220@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
713 [style = filled, label = "EntryNotFoundException ok@@@364@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
903 [style = filled, label = "assertEquals(0,this.te.getEvents().size())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@825@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
160 [style = filled, label = "assertEquals(0,TxEventTestUtil.getCreateEvents(this.te.getEvents()).size())@@@1169@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
437 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1459@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
354 [style = filled, label = "this.txMgr.commit()@@@511@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
832 [style = filled, label = "callbackVal.assertDestroyListenerCnt(1)@@@938@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
872 [style = filled, label = "assertEquals(\"value3\",reg1.getEntry(\"key1\").getValue())@@@390@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
659 [style = filled, label = "callbackVal.assertUpdateListenerCnt(1)@@@1313@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
131 [style = filled, label = "EntryNotFoundException ok@@@1033@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
348 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@459@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
190 [style = filled, label = "reg1.create(\"key1\",\"value1\")@@@1503@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
274 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@1270@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
136 [style = filled, label = "testTxAlgebra['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0,TxEventTestUtil.getPutEvents(this.te.getEvents()).size())@@@518@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "Region<String,String> reg1 = this.region@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
404 [style = filled, label = "callbackVal.assertLocalDestroyListenerCnt(0)@@@858@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
225 [style = filled, label = "callbackVal.assertInvalidateCnt(0)@@@933@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
486 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@1504@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
206 [style = filled, label = "reg1.create(\"key1\",\"value0\")@@@1497@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
741 [style = filled, label = "assertEquals(0,TxEventTestUtil.getDestroyEvents(this.te.getEvents()).size())@@@1359@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
401 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@1207@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
646 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@324@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
501 [style = filled, label = "myTxId = this.txMgr.getTransactionId()@@@1230@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,this.te.getEvents().size())@@@436@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
521 [style = filled, label = "assertTrue(!reg1.containsKey(\"key1\"))@@@936@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
746 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@253@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
349 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@642@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
531 [style = filled, label = "fail(\"expected EntryNotFoundException\")@@@803@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
886 [style = filled, label = "EntryNotFoundException ok@@@791@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "reg1.create(\"key1\",\"ex\")@@@257@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
771 [style = filled, label = "callbackVal.assertCreateWriterCnt(1)@@@116@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
672 [style = filled, label = "this.txMgr.begin()@@@930@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
940 [style = filled, label = "this.txMgr.commit()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
826 [style = filled, label = "callbackVal.reAssert()@@@345@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
126 [style = filled, label = "assertEquals(0,TxEventTestUtil.getInvalidateEvents(this.te.getEvents()).size())@@@434@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
403 [style = filled, label = "callbackVal.reAssert()@@@679@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
363 [style = filled, label = "{List<EntryEvent<?,?>> events = TxEventTestUtil.getDestroyEvents(this.te.getEvents())assertEquals(myTxId,this.te.getTransactionId())assertEquals(1,events.size())for (EntryEvent ev : events){assertEquals(myTxId,ev.getTransactionId())assertTrue(ev.getRegion() == reg1)assertEquals(\"key1\",ev.getKey())assertEquals(null,ev.getNewValue())assertEquals(\"value0\",ev.getOldValue())verifyEventProps(ev)assertEquals(null,ev.getCallbackArgument())assertEquals(true,ev.isCallbackArgumentAvailable())assertTrue(!ev.isOriginRemote())assertTrue(!ev.getOperation().isExpiration())assertTrue(!ev.getOperation().isDistributed())}}@@@1209@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
836 [style = filled, label = "fail(\"expected EntryExistsException\")@@@119@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
254 [style = filled, label = "this.txMgr.begin()@@@780@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38->160 [style = bold, label=""];
395->255 [style = bold, label=""];
32->277 [style = bold, label=""];
192->773 [style = bold, label=""];
11->239 [style = bold, label=""];
467->831 [style = bold, label=""];
929->909 [style = bold, label=""];
252->170 [style = solid, label="events"];
691->23 [style = bold, label=""];
617->517 [style = bold, label=""];
573->814 [style = bold, label=""];
277->594 [style = bold, label=""];
309->147 [style = bold, label=""];
651->704 [style = bold, label=""];
101->4 [style = bold, label=""];
433->792 [style = bold, label=""];
189->88 [style = bold, label=""];
262->732 [style = bold, label=""];
247->634 [style = bold, label=""];
590->248 [style = bold, label=""];
228->369 [style = solid, label="myTxId"];
353->690 [style = bold, label=""];
397->63 [style = bold, label=""];
553->893 [style = bold, label=""];
507->819 [style = solid, label="myTxId"];
854->774 [style = bold, label=""];
543->395 [style = bold, label=""];
728->62 [style = bold, label=""];
31->124 [style = bold, label=""];
171->363 [style = solid, label="myTxId"];
176->650 [style = bold, label=""];
381->391 [style = solid, label="events"];
732->630 [style = bold, label=""];
745->274 [style = bold, label=""];
26->588 [style = bold, label=""];
369->675 [style = bold, label=""];
495->284 [style = bold, label=""];
776->531 [style = bold, label=""];
634->175 [style = bold, label=""];
129->553 [style = bold, label=""];
800->250 [style = bold, label=""];
54->291 [style = bold, label=""];
587->106 [style = bold, label=""];
116->481 [style = bold, label=""];
698->292 [style = bold, label=""];
325->146 [style = bold, label=""];
902->934 [style = bold, label=""];
71->106 [style = solid, label="reg1"];
561->9 [style = bold, label=""];
794->693 [style = bold, label=""];
468->216 [style = bold, label=""];
930->907 [style = solid, label="listenerClose"];
548->378 [style = bold, label=""];
714->362 [style = bold, label=""];
804->878 [style = bold, label=""];
279->448 [style = bold, label=""];
568->555 [style = bold, label=""];
682->541 [style = solid, label="myTxId"];
403->470 [style = bold, label=""];
933->920 [style = bold, label=""];
368->278 [style = bold, label=""];
842->178 [style = bold, label=""];
759->662 [style = bold, label=""];
890->189 [style = bold, label=""];
408->794 [style = bold, label=""];
65->271 [style = bold, label=""];
457->125 [style = bold, label=""];
496->137 [style = bold, label=""];
71->287 [style = solid, label="reg1"];
213->668 [style = bold, label=""];
130->744 [style = bold, label=""];
515->483 [style = bold, label=""];
551->255 [style = bold, label=""];
927->939 [style = bold, label=""];
84->0 [style = solid, label="events"];
212->776 [style = bold, label=""];
724->458 [style = bold, label=""];
71->378 [style = solid, label="reg1"];
673->80 [style = bold, label=""];
382->666 [style = bold, label=""];
885->680 [style = bold, label=""];
841->372 [style = solid, label="events"];
104->838 [style = bold, label=""];
71->774 [style = solid, label="reg1"];
240->591 [style = bold, label=""];
610->593 [style = bold, label=""];
935->926 [style = bold, label=""];
333->655 [style = bold, label=""];
809->359 [style = bold, label=""];
413->905 [style = dashed, label="0"];
13->420 [style = bold, label=""];
144->417 [style = bold, label=""];
669->77 [style = bold, label=""];
844->706 [style = bold, label=""];
56->829 [style = bold, label=""];
835->444 [style = bold, label=""];
102->121 [style = bold, label=""];
653->820 [style = bold, label=""];
847->899 [style = bold, label=""];
799->507 [style = bold, label=""];
350->556 [style = bold, label=""];
47->204 [style = bold, label=""];
501->874 [style = bold, label=""];
720->476 [style = solid, label="events"];
298->729 [style = bold, label=""];
721->68 [style = bold, label=""];
574->493 [style = bold, label=""];
36->504 [style = bold, label=""];
757->648 [style = bold, label=""];
332->20 [style = bold, label=""];
125->657 [style = bold, label=""];
557->288 [style = bold, label=""];
204->513 [style = bold, label=""];
288->799 [style = bold, label=""];
762->21 [style = bold, label=""];
379->748 [style = bold, label=""];
936->924 [style = dotted, label="true"];
102->363 [style = solid, label="events"];
819->84 [style = solid, label="events"];
151->400 [style = bold, label=""];
809->889 [style = bold, label=""];
863->875 [style = solid, label="events"];
469->331 [style = bold, label=""];
654->479 [style = bold, label=""];
158->762 [style = bold, label=""];
875->15 [style = bold, label=""];
863->596 [style = bold, label=""];
513->496 [style = bold, label=""];
569->533 [style = bold, label=""];
710->341 [style = bold, label=""];
454->372 [style = solid, label="myTxId"];
443->542 [style = bold, label=""];
711->256 [style = bold, label=""];
132->775 [style = bold, label=""];
606->350 [style = bold, label=""];
905->929 [style = bold, label=""];
477->612 [style = bold, label=""];
900->905 [style = bold, label=""];
767->25 [style = bold, label=""];
908->901 [style = solid, label="oldListener"];
674->26 [style = bold, label=""];
384->541 [style = bold, label=""];
912->916 [style = bold, label=""];
756->842 [style = bold, label=""];
556->261 [style = solid, label="cntWriter"];
476->187 [style = solid, label="events"];
22->702 [style = solid, label="myTxId"];
602->399 [style = bold, label=""];
866->132 [style = bold, label=""];
807->875 [style = bold, label=""];
250->471 [style = bold, label=""];
110->750 [style = bold, label=""];
170->106 [style = solid, label="events"];
404->469 [style = bold, label=""];
107->234 [style = bold, label=""];
2->294 [style = bold, label=""];
98->441 [style = bold, label=""];
231->235 [style = bold, label=""];
49->244 [style = bold, label=""];
928->910 [style = bold, label=""];
895->621 [style = bold, label=""];
402->735 [style = bold, label=""];
112->527 [style = bold, label=""];
157->836 [style = bold, label=""];
630->243 [style = bold, label=""];
429->145 [style = bold, label=""];
588->825 [style = bold, label=""];
715->154 [style = bold, label=""];
297->728 [style = bold, label=""];
217->32 [style = bold, label=""];
348->84 [style = solid, label="myTxId"];
53->407 [style = bold, label=""];
93->335 [style = bold, label=""];
39->265 [style = bold, label=""];
71->102 [style = solid, label="reg1"];
173->562 [style = bold, label=""];
62->852 [style = bold, label=""];
361->120 [style = bold, label=""];
330->841 [style = solid, label="myTxId"];
836->340 [style = bold, label=""];
208->155 [style = bold, label=""];
930->911 [style = solid, label="listenerClose"];
153->582 [style = bold, label=""];
647->345 [style = solid, label="myTxId"];
273->179 [style = bold, label=""];
105->710 [style = bold, label=""];
703->722 [style = bold, label=""];
738->784 [style = bold, label=""];
168->267 [style = bold, label=""];
159->453 [style = bold, label=""];
538->196 [style = bold, label=""];
834->126 [style = bold, label=""];
268->426 [style = bold, label=""];
596->823 [style = bold, label=""];
58->862 [style = bold, label=""];
932->913 [style = bold, label=""];
71->819 [style = solid, label="reg1"];
553->212 [style = bold, label=""];
775->510 [style = bold, label=""];
414->705 [style = bold, label=""];
386->393 [style = bold, label=""];
448->584 [style = bold, label=""];
174->195 [style = bold, label=""];
45->323 [style = bold, label=""];
666->600 [style = bold, label=""];
179->170 [style = bold, label=""];
89->638 [style = bold, label=""];
411->303 [style = bold, label=""];
670->715 [style = bold, label=""];
46->275 [style = bold, label=""];
183->355 [style = bold, label=""];
479->259 [style = bold, label=""];
461->304 [style = bold, label=""];
164->391 [style = bold, label=""];
811->883 [style = bold, label=""];
685->607 [style = bold, label=""];
292->664 [style = bold, label=""];
662->334 [style = bold, label=""];
343->70 [style = bold, label=""];
199->420 [style = bold, label=""];
545->669 [style = bold, label=""];
163->258 [style = bold, label=""];
589->300 [style = bold, label=""];
71->363 [style = solid, label="reg1"];
95->818 [style = bold, label=""];
584->476 [style = bold, label=""];
24->734 [style = bold, label=""];
8->198 [style = bold, label=""];
924->932 [style = bold, label=""];
307->45 [style = bold, label=""];
66->532 [style = bold, label=""];
562->769 [style = bold, label=""];
91->394 [style = bold, label=""];
566->716 [style = bold, label=""];
363->287 [style = solid, label="events"];
453->915 [style = dashed, label="0"];
378->369 [style = solid, label="events"];
583->408 [style = bold, label=""];
783->180 [style = bold, label=""];
873->403 [style = bold, label=""];
556->186 [style = solid, label="cntWriter"];
252->687 [style = bold, label=""];
850->201 [style = bold, label=""];
181->674 [style = bold, label=""];
241->238 [style = bold, label=""];
930->904 [style = solid, label="listenerAfterRollback"];
542->352 [style = bold, label=""];
272->325 [style = bold, label=""];
440->897 [style = bold, label=""];
868->708 [style = bold, label=""];
299->112 [style = bold, label=""];
488->145 [style = solid, label="events"];
61->628 [style = bold, label=""];
341->826 [style = bold, label=""];
257->358 [style = bold, label=""];
558->501 [style = bold, label=""];
860->464 [style = bold, label=""];
718->890 [style = bold, label=""];
355->356 [style = bold, label=""];
351->667 [style = bold, label=""];
845->319 [style = bold, label=""];
507->320 [style = bold, label=""];
862->253 [style = bold, label=""];
90->41 [style = bold, label=""];
287->629 [style = bold, label=""];
407->466 [style = bold, label=""];
210->798 [style = bold, label=""];
29->605 [style = bold, label=""];
785->506 [style = bold, label=""];
196->251 [style = bold, label=""];
245->661 [style = bold, label=""];
519->626 [style = bold, label=""];
923->914 [style = bold, label=""];
592->876 [style = bold, label=""];
145->102 [style = solid, label="events"];
380->862 [style = bold, label=""];
768->280 [style = bold, label=""];
209->623 [style = bold, label=""];
446->382 [style = bold, label=""];
552->835 [style = bold, label=""];
40->530 [style = bold, label=""];
554->73 [style = bold, label=""];
291->177 [style = bold, label=""];
466->781 [style = bold, label=""];
758->139 [style = bold, label=""];
121->97 [style = bold, label=""];
603->534 [style = bold, label=""];
921->908 [style = bold, label=""];
108->711 [style = bold, label=""];
214->94 [style = bold, label=""];
408->219 [style = solid, label="events"];
235->36 [style = bold, label=""];
837->249 [style = bold, label=""];
203->467 [style = bold, label=""];
412->816 [style = bold, label=""];
916->903 [style = bold, label=""];
751->783 [style = bold, label=""];
271->454 [style = bold, label=""];
312->550 [style = bold, label=""];
51->589 [style = bold, label=""];
832->114 [style = bold, label=""];
71->84 [style = solid, label="reg1"];
707->465 [style = bold, label=""];
50->321 [style = bold, label=""];
606->261 [style = solid, label="cntListener"];
655->739 [style = bold, label=""];
720->50 [style = bold, label=""];
187->314 [style = bold, label=""];
639->276 [style = bold, label=""];
72->767 [style = bold, label=""];
299->145 [style = solid, label="myTxId"];
909->927 [style = bold, label=""];
418->425 [style = bold, label=""];
12->367 [style = bold, label=""];
679->663 [style = bold, label=""];
126->727 [style = bold, label=""];
539->190 [style = bold, label=""];
335->208 [style = bold, label=""];
486->714 [style = bold, label=""];
261->512 [style = bold, label=""];
887->473 [style = bold, label=""];
930->902 [style = solid, label="listenerAfterRollback"];
660->524 [style = bold, label=""];
329->652 [style = bold, label=""];
919->925 [style = bold, label=""];
413->81 [style = bold, label=""];
938->907 [style = bold, label=""];
869->214 [style = bold, label=""];
311->462 [style = bold, label=""];
264->861 [style = bold, label=""];
236->337 [style = bold, label=""];
369->381 [style = solid, label="events"];
84->665 [style = bold, label=""];
567->546 [style = bold, label=""];
152->526 [style = bold, label=""];
647->859 [style = bold, label=""];
541->598 [style = solid, label="events"];
876->345 [style = solid, label="events"];
855->611 [style = bold, label=""];
357->765 [style = bold, label=""];
339->658 [style = bold, label=""];
853->293 [style = bold, label=""];
140->306 [style = bold, label=""];
187->541 [style = solid, label="events"];
642->406 [style = bold, label=""];
161->14 [style = bold, label=""];
604->370 [style = bold, label=""];
472->87 [style = bold, label=""];
57->866 [style = bold, label=""];
87->764 [style = bold, label=""];
298->252 [style = solid, label="events"];
255->42 [style = bold, label=""];
400->345 [style = bold, label=""];
481->523 [style = bold, label=""];
60->282 [style = bold, label=""];
364->505 [style = bold, label=""];
156->671 [style = bold, label=""];
533->101 [style = bold, label=""];
138->116 [style = bold, label=""];
871->165 [style = bold, label=""];
75->191 [style = bold, label=""];
838->854 [style = bold, label=""];
227->540 [style = bold, label=""];
897->862 [style = bold, label=""];
71->145 [style = solid, label="reg1"];
295->603 [style = bold, label=""];
232->215 [style = bold, label=""];
508->102 [style = bold, label=""];
228->700 [style = bold, label=""];
194->383 [style = bold, label=""];
230->742 [style = bold, label=""];
64->696 [style = bold, label=""];
270->442 [style = bold, label=""];
497->56 [style = bold, label=""];
451->55 [style = bold, label=""];
103->843 [style = bold, label=""];
462->217 [style = bold, label=""];
381->92 [style = bold, label=""];
788->141 [style = bold, label=""];
911->918 [style = bold, label=""];
806->273 [style = bold, label=""];
787->559 [style = bold, label=""];
879->489 [style = bold, label=""];
165->103 [style = bold, label=""];
926->922 [style = bold, label=""];
133->605 [style = solid, label="myTxId"];
282->223 [style = bold, label=""];
910->902 [style = bold, label=""];
259->246 [style = bold, label=""];
436->308 [style = bold, label=""];
86->870 [style = bold, label=""];
16->2 [style = bold, label=""];
523->127 [style = bold, label=""];
733->590 [style = bold, label=""];
633->236 [style = bold, label=""];
804->490 [style = bold, label=""];
71->170 [style = solid, label="reg1"];
267->683 [style = bold, label=""];
289->262 [style = bold, label=""];
577->354 [style = bold, label=""];
399->595 [style = bold, label=""];
621->361 [style = bold, label=""];
114->636 [style = bold, label=""];
201->226 [style = bold, label=""];
798->725 [style = bold, label=""];
248->565 [style = bold, label=""];
254->22 [style = bold, label=""];
614->44 [style = bold, label=""];
320->793 [style = bold, label=""];
246->332 [style = bold, label=""];
260->1 [style = bold, label=""];
150->592 [style = bold, label=""];
591->368 [style = bold, label=""];
34->35 [style = bold, label=""];
367->298 [style = solid, label="myTxId"];
581->855 [style = bold, label=""];
510->75 [style = bold, label=""];
483->576 [style = bold, label=""];
702->841 [style = solid, label="events"];
409->552 [style = bold, label=""];
197->689 [style = bold, label=""];
372->48 [style = bold, label=""];
316->651 [style = bold, label=""];
438->188 [style = bold, label=""];
405->159 [style = bold, label=""];
375->373 [style = bold, label=""];
81->771 [style = bold, label=""];
578->123 [style = bold, label=""];
547->19 [style = bold, label=""];
124->822 [style = bold, label=""];
534->520 [style = bold, label=""];
71->876 [style = solid, label="reg1"];
147->478 [style = bold, label=""];
821->257 [style = bold, label=""];
719->247 [style = bold, label=""];
471->252 [style = solid, label="myTxId"];
827->807 [style = bold, label=""];
627->563 [style = bold, label=""];
593->644 [style = bold, label=""];
683->132 [style = bold, label=""];
575->378 [style = solid, label="myTxId"];
310->224 [style = bold, label=""];
812->574 [style = bold, label=""];
303->686 [style = bold, label=""];
586->477 [style = bold, label=""];
162->610 [style = bold, label=""];
743->494 [style = bold, label=""];
42->313 [style = bold, label=""];
426->312 [style = bold, label=""];
0->863 [style = solid, label="events"];
118->77 [style = bold, label=""];
699->202 [style = bold, label=""];
19->218 [style = bold, label=""];
908->901 [style = bold, label=""];
628->653 [style = bold, label=""];
870->615 [style = bold, label=""];
71->863 [style = solid, label="reg1"];
766->492 [style = bold, label=""];
59->474 [style = bold, label=""];
287->378 [style = solid, label="events"];
149->751 [style = bold, label=""];
15->449 [style = bold, label=""];
582->806 [style = bold, label=""];
672->724 [style = bold, label=""];
506->645 [style = bold, label=""];
169->460 [style = bold, label=""];
442->427 [style = bold, label=""];
882->866 [style = bold, label=""];
345->605 [style = solid, label="events"];
599->839 [style = bold, label=""];
801->309 [style = bold, label=""];
696->490 [style = bold, label=""];
182->245 [style = bold, label=""];
918->904 [style = bold, label=""];
456->51 [style = bold, label=""];
71->79 [style = bold, label=""];
559->138 [style = bold, label=""];
706->759 [style = bold, label=""];
416->738 [style = bold, label=""];
833->860 [style = bold, label=""];
244->151 [style = bold, label=""];
450->740 [style = bold, label=""];
658->307 [style = bold, label=""];
344->709 [style = bold, label=""];
731->108 [style = bold, label=""];
565->348 [style = bold, label=""];
856->770 [style = bold, label=""];
526->873 [style = bold, label=""];
734->189 [style = bold, label=""];
906->930 [style = bold, label=""];
913->937 [style = bold, label=""];
608->682 [style = bold, label=""];
478->841 [style = bold, label=""];
744->299 [style = bold, label=""];
242->163 [style = bold, label=""];
556->186 [style = bold, label=""];
167->310 [style = bold, label=""];
21->538 [style = bold, label=""];
528->654 [style = bold, label=""];
550->197 [style = bold, label=""];
690->377 [style = bold, label=""];
71->219 [style = solid, label="reg1"];
215->670 [style = bold, label=""];
35->468 [style = bold, label=""];
861->840 [style = bold, label=""];
904->938 [style = bold, label=""];
396->100 [style = bold, label=""];
374->172 [style = bold, label=""];
269->766 [style = bold, label=""];
729->810 [style = bold, label=""];
22->730 [style = bold, label=""];
665->205 [style = bold, label=""];
266->173 [style = bold, label=""];
301->578 [style = bold, label=""];
686->868 [style = bold, label=""];
413->720 [style = solid, label="myTxId"];
359->196 [style = bold, label=""];
901->900 [style = bold, label=""];
621->120 [style = bold, label=""];
937->912 [style = bold, label=""];
829->795 [style = bold, label=""];
383->52 [style = bold, label=""];
635->438 [style = bold, label=""];
372->408 [style = solid, label="events"];
781->720 [style = bold, label=""];
256->266 [style = bold, label=""];
437->864 [style = bold, label=""];
71->841 [style = solid, label="reg1"];
830->60 [style = bold, label=""];
225->305 [style = bold, label=""];
41->613 [style = bold, label=""];
71->605 [style = solid, label="reg1"];
263->113 [style = bold, label=""];
44->631 [style = bold, label=""];
329->875 [style = solid, label="myTxId"];
682->143 [style = bold, label=""];
276->419 [style = bold, label=""];
109->847 [style = bold, label=""];
239->805 [style = bold, label=""];
772->54 [style = bold, label=""];
737->168 [style = bold, label=""];
211->398 [style = bold, label=""];
30->718 [style = bold, label=""];
930->933 [style = solid, label="listenerClose"];
406->602 [style = bold, label=""];
440->58 [style = bold, label=""];
859->539 [style = bold, label=""];
580->881 [style = bold, label=""];
818->187 [style = bold, label=""];
500->120 [style = bold, label=""];
290->222 [style = bold, label=""];
115->326 [style = bold, label=""];
134->802 [style = bold, label=""];
398->289 [style = bold, label=""];
922->931 [style = bold, label=""];
77->618 [style = bold, label=""];
668->566 [style = bold, label=""];
1->381 [style = solid, label="myTxId"];
23->366 [style = bold, label=""];
458->225 [style = bold, label=""];
180->597 [style = bold, label=""];
874->772 [style = bold, label=""];
492->833 [style = bold, label=""];
886->812 [style = bold, label=""];
594->227 [style = bold, label=""];
618->579 [style = bold, label=""];
512->78 [style = bold, label=""];
193->346 [style = bold, label=""];
606->350 [style = solid, label="cntListener"];
242->774 [style = solid, label="myTxId"];
726->575 [style = bold, label=""];
638->167 [style = bold, label=""];
511->107 [style = bold, label=""];
388->66 [style = bold, label=""];
71->345 [style = solid, label="reg1"];
428->884 [style = bold, label=""];
828->521 [style = bold, label=""];
848->503 [style = bold, label=""];
702->213 [style = bold, label=""];
893->212 [style = bold, label=""];
226->692 [style = bold, label=""];
650->635 [style = bold, label=""];
849->153 [style = bold, label=""];
221->130 [style = bold, label=""];
420->625 [style = bold, label=""];
493->392 [style = bold, label=""];
281->336 [style = bold, label=""];
445->484 [style = bold, label=""];
423->779 [style = bold, label=""];
188->220 [style = bold, label=""];
536->857 [style = bold, label=""];
616->537 [style = bold, label=""];
328->450 [style = bold, label=""];
718->189 [style = bold, label=""];
385->381 [style = bold, label=""];
661->619 [style = bold, label=""];
352->673 [style = bold, label=""];
774->488 [style = solid, label="events"];
624->487 [style = bold, label=""];
748->796 [style = bold, label=""];
360->409 [style = bold, label=""];
713->888 [style = bold, label=""];
499->385 [style = bold, label=""];
771->157 [style = bold, label=""];
137->643 [style = bold, label=""];
831->181 [style = bold, label=""];
739->728 [style = bold, label=""];
520->548 [style = bold, label=""];
308->40 [style = bold, label=""];
338->815 [style = bold, label=""];
170->760 [style = bold, label=""];
71->476 [style = solid, label="reg1"];
810->800 [style = bold, label=""];
354->421 [style = bold, label=""];
823->817 [style = bold, label=""];
774->528 [style = bold, label=""];
83->84 [style = bold, label=""];
319->456 [style = bold, label=""];
645->482 [style = bold, label=""];
708->698 [style = bold, label=""];
434->786 [style = bold, label=""];
803->447 [style = bold, label=""];
858->150 [style = bold, label=""];
71->408 [style = solid, label="reg1"];
285->286 [style = bold, label=""];
875->298 [style = solid, label="events"];
540->142 [style = bold, label=""];
488->283 [style = bold, label=""];
697->390 [style = bold, label=""];
560->28 [style = bold, label=""];
598->557 [style = bold, label=""];
186->261 [style = bold, label=""];
421->16 [style = bold, label=""];
494->349 [style = bold, label=""];
78->413 [style = bold, label=""];
597->871 [style = bold, label=""];
778->865 [style = bold, label=""];
754->431 [style = bold, label=""];
393->761 [style = bold, label=""];
410->374 [style = bold, label=""];
302->106 [style = solid, label="myTxId"];
678->396 [style = bold, label=""];
175->502 [style = bold, label=""];
455->242 [style = bold, label=""];
530->498 [style = bold, label=""];
296->429 [style = bold, label=""];
940->932 [style = bold, label=""];
815->536 [style = bold, label=""];
278->791 [style = bold, label=""];
625->461 [style = bold, label=""];
840->268 [style = bold, label=""];
692->422 [style = bold, label=""];
393->476 [style = solid, label="myTxId"];
362->192 [style = bold, label=""];
349->684 [style = bold, label=""];
898->749 [style = bold, label=""];
780->697 [style = bold, label=""];
826->229 [style = bold, label=""];
750->74 [style = bold, label=""];
797->699 [style = bold, label=""];
428->297 [style = bold, label=""];
425->290 [style = bold, label=""];
305->828 [style = bold, label=""];
82->785 [style = bold, label=""];
482->620 [style = bold, label=""];
205->511 [style = bold, label=""];
489->71 [style = bold, label=""];
798->102 [style = solid, label="myTxId"];
417->65 [style = bold, label=""];
894->543 [style = bold, label=""];
649->156 [style = bold, label=""];
427->210 [style = bold, label=""];
143->746 [style = bold, label=""];
471->703 [style = bold, label=""];
63->24 [style = bold, label=""];
760->433 [style = bold, label=""];
139->627 [style = bold, label=""];
237->12 [style = bold, label=""];
294->529 [style = bold, label=""];
145->270 [style = bold, label=""];
763->514 [style = bold, label=""];
370->285 [style = bold, label=""];
795->59 [style = bold, label=""];
881->304 [style = bold, label=""];
453->863 [style = solid, label="myTxId"];
71->875 [style = solid, label="reg1"];
274->203 [style = bold, label=""];
765->404 [style = bold, label=""];
546->872 [style = bold, label=""];
14->241 [style = bold, label=""];
498->694 [style = bold, label=""];
391->876 [style = solid, label="events"];
843->571 [style = bold, label=""];
148->608 [style = bold, label=""];
363->343 [style = bold, label=""];
71->0 [style = solid, label="reg1"];
387->633 [style = bold, label=""];
302->758 [style = bold, label=""];
345->233 [style = bold, label=""];
609->656 [style = bold, label=""];
459->754 [style = bold, label=""];
365->269 [style = bold, label=""];
491->617 [style = bold, label=""];
722->90 [style = bold, label=""];
286->488 [style = bold, label=""];
378->89 [style = bold, label=""];
713->118 [style = bold, label=""];
336->780 [style = bold, label=""];
640->324 [style = bold, label=""];
111->414 [style = bold, label=""];
825->287 [style = bold, label=""];
253->719 [style = bold, label=""];
773->46 [style = bold, label=""];
883->23 [style = bold, label=""];
930->933 [style = bold, label=""];
71->702 [style = solid, label="reg1"];
501->287 [style = solid, label="myTxId"];
20->824 [style = bold, label=""];
930->928 [style = solid, label="listenerAfterRollback"];
191->525 [style = bold, label=""];
326->499 [style = bold, label=""];
99->768 [style = bold, label=""];
200->457 [style = bold, label=""];
94->586 [style = bold, label=""];
575->8 [style = bold, label=""];
219->774 [style = solid, label="events"];
622->834 [style = bold, label=""];
725->844 [style = bold, label=""];
717->281 [style = bold, label=""];
52->152 [style = bold, label=""];
769->646 [style = bold, label=""];
742->574 [style = bold, label=""];
549->867 [style = bold, label=""];
216->849 [style = bold, label=""];
222->91 [style = bold, label=""];
664->372 [style = bold, label=""];
131->580 [style = bold, label=""];
358->184 [style = bold, label=""];
371->193 [style = bold, label=""];
920->928 [style = bold, label=""];
626->649 [style = bold, label=""];
415->353 [style = bold, label=""];
431->598 [style = solid, label="myTxId"];
782->601 [style = bold, label=""];
632->753 [style = bold, label=""];
470->616 [style = bold, label=""];
234->570 [style = bold, label=""];
579->762 [style = bold, label=""];
28->455 [style = bold, label=""];
657->569 [style = bold, label=""];
439->387 [style = bold, label=""];
535->736 [style = bold, label=""];
931->919 [style = bold, label=""];
555->301 [style = bold, label=""];
817->329 [style = bold, label=""];
198->316 [style = bold, label=""];
753->545 [style = bold, label=""];
6->364 [style = bold, label=""];
207->416 [style = bold, label=""];
516->755 [style = bold, label=""];
280->327 [style = bold, label=""];
819->733 [style = bold, label=""];
346->475 [style = bold, label=""];
529->161 [style = bold, label=""];
777->111 [style = bold, label=""];
571->162 [style = bold, label=""];
9->33 [style = bold, label=""];
366->564 [style = bold, label=""];
314->148 [style = bold, label=""];
925->923 [style = bold, label=""];
934->915 [style = bold, label=""];
543->255 [style = bold, label=""];
694->43 [style = bold, label=""];
347->681 [style = bold, label=""];
808->876 [style = solid, label="myTxId"];
71->252 [style = solid, label="reg1"];
154->432 [style = bold, label=""];
133->497 [style = bold, label=""];
43->837 [style = bold, label=""];
676->812 [style = bold, label=""];
576->660 [style = bold, label=""];
752->811 [style = bold, label=""];
701->49 [style = bold, label=""];
356->869 [style = bold, label=""];
463->110 [style = bold, label=""];
155->384 [style = bold, label=""];
184->117 [style = bold, label=""];
791->279 [style = bold, label=""];
789->762 [style = bold, label=""];
605->509 [style = bold, label=""];
612->463 [style = bold, label=""];
644->581 [style = bold, label=""];
518->206 [style = bold, label=""];
190->486 [style = bold, label=""];
202->272 [style = bold, label=""];
786->647 [style = bold, label=""];
223->712 [style = bold, label=""];
122->296 [style = bold, label=""];
73->96 [style = bold, label=""];
746->678 [style = bold, label=""];
342->333 [style = bold, label=""];
171->561 [style = bold, label=""];
640->328 [style = bold, label=""];
802->583 [style = bold, label=""];
542->219 [style = solid, label="myTxId"];
419->39 [style = bold, label=""];
33->679 [style = bold, label=""];
70->558 [style = bold, label=""];
233->11 [style = bold, label=""];
331->322 [style = bold, label=""];
930->915 [style = solid, label="oldListener"];
71->372 [style = solid, label="reg1"];
514->830 [style = bold, label=""];
375->169 [style = bold, label=""];
337->83 [style = bold, label=""];
1->231 [style = bold, label=""];
454->342 [style = bold, label=""];
790->850 [style = bold, label=""];
480->549 [style = bold, label=""];
160->389 [style = bold, label=""];
473->199 [style = bold, label=""];
915->911 [style = bold, label=""];
318->695 [style = bold, label=""];
704->797 [style = bold, label=""];
444->5 [style = bold, label=""];
905->919 [style = solid, label="myTxId"];
903->941 [style = bold, label=""];
623->95 [style = bold, label=""];
0->140 [style = bold, label=""];
460->31 [style = bold, label=""];
876->518 [style = bold, label=""];
3->411 [style = bold, label=""];
730->846 [style = bold, label=""];
166->53 [style = bold, label=""];
537->788 [style = bold, label=""];
465->577 [style = bold, label=""];
394->702 [style = bold, label=""];
172->38 [style = bold, label=""];
71->381 [style = solid, label="reg1"];
283->221 [style = bold, label=""];
648->747 [style = bold, label=""];
705->85 [style = bold, label=""];
128->347 [style = bold, label=""];
684->424 [style = bold, label=""];
811->23 [style = bold, label=""];
251->500 [style = bold, label=""];
636->813 [style = bold, label=""];
76->808 [style = bold, label=""];
447->67 [style = bold, label=""];
334->410 [style = bold, label=""];
688->609 [style = bold, label=""];
127->34 [style = bold, label=""];
681->311 [style = bold, label=""];
177->64 [style = bold, label=""];
570->351 [style = bold, label=""];
889->196 [style = bold, label=""];
323->357 [style = bold, label=""];
71->187 [style = solid, label="reg1"];
430->495 [style = bold, label=""];
97->119 [style = bold, label=""];
872->47 [style = bold, label=""];
453->717 [style = bold, label=""];
689->827 [style = bold, label=""];
330->641 [style = bold, label=""];
841->144 [style = bold, label=""];
389->723 [style = bold, label=""];
224->228 [style = bold, label=""];
7->295 [style = bold, label=""];
888->77 [style = bold, label=""];
784->391 [style = solid, label="myTxId"];
485->360 [style = bold, label=""];
598->819 [style = solid, label="events"];
663->176 [style = bold, label=""];
779->104 [style = bold, label=""];
736->99 [style = bold, label=""];
864->76 [style = bold, label=""];
141->252 [style = bold, label=""];
484->459 [style = bold, label=""];
884->728 [style = bold, label=""];
17->318 [style = bold, label=""];
822->13 [style = bold, label=""];
600->412 [style = bold, label=""];
615->544 [style = bold, label=""];
914->940 [style = bold, label=""];
695->632 [style = bold, label=""];
373->169 [style = bold, label=""];
787->170 [style = solid, label="myTxId"];
820->418 [style = bold, label=""];
792->302 [style = bold, label=""];
435->437 [style = bold, label=""];
185->832 [style = bold, label=""];
531->178 [style = bold, label=""];
315->639 [style = bold, label=""];
275->701 [style = bold, label=""];
206->434 [style = bold, label=""];
74->365 [style = bold, label=""];
740->61 [style = bold, label=""];
474->451 [style = bold, label=""];
814->763 [style = bold, label=""];
601->436 [style = bold, label=""];
376->18 [style = bold, label=""];
784->554 [style = bold, label=""];
449->237 [style = bold, label=""];
123->790 [style = bold, label=""];
25->745 [style = bold, label=""];
431->17 [style = bold, label=""];
793->803 [style = bold, label=""];
716->330 [style = bold, label=""];
503->491 [style = bold, label=""];
656->86 [style = bold, label=""];
10->401 [style = bold, label=""];
391->435 [style = bold, label=""];
219->560 [style = bold, label=""];
891->842 [style = bold, label=""];
527->128 [style = bold, label=""];
563->211 [style = bold, label=""];
521->185 [style = bold, label=""];
693->443 [style = bold, label=""];
432->29 [style = bold, label=""];
18->787 [style = bold, label=""];
71->369 [style = solid, label="reg1"];
524->380 [style = bold, label=""];
687->376 [style = bold, label=""];
293->672 [style = bold, label=""];
92->207 [style = bold, label=""];
941->906 [style = bold, label=""];
68->254 [style = bold, label=""];
304->82 [style = bold, label=""];
813->134 [style = bold, label=""];
646->149 [style = bold, label=""];
522->388 [style = bold, label=""];
867->642 [style = bold, label=""];
135->804 [style = bold, label=""];
313->72 [style = bold, label=""];
85->169 [style = bold, label=""];
896->640 [style = bold, label=""];
505->587 [style = bold, label=""];
613->194 [style = bold, label=""];
401->69 [style = bold, label=""];
69->363 [style = bold, label=""];
265->845 [style = bold, label=""];
564->200 [style = bold, label=""];
377->423 [style = bold, label=""];
892->789 [style = bold, label=""];
878->490 [style = bold, label=""];
5->851 [style = bold, label=""];
619->264 [style = bold, label=""];
392->212 [style = bold, label=""];
100->691 [style = bold, label=""];
146->659 [style = bold, label=""];
936->924 [style = bold, label=""];
712->863 [style = bold, label=""];
390->573 [style = bold, label=""];
727->27 [style = bold, label=""];
631->445 [style = bold, label=""];
80->568 [style = bold, label=""];
611->105 [style = bold, label=""];
238->0 [style = bold, label=""];
675->260 [style = bold, label=""];
532->778 [style = bold, label=""];
306->405 [style = bold, label=""];
680->340 [style = bold, label=""];
71->720 [style = solid, label="reg1"];
96->782 [style = bold, label=""];
652->182 [style = bold, label=""];
136->489 [style = bold, label=""];
865->240 [style = bold, label=""];
321->386 [style = bold, label=""];
755->369 [style = bold, label=""];
348->737 [style = bold, label=""];
502->472 [style = bold, label=""];
741->516 [style = bold, label=""];
195->726 [style = bold, label=""];
659->7 [style = bold, label=""];
749->63 [style = bold, label=""];
243->6 [style = bold, label=""];
106->702 [style = solid, label="events"];
607->328 [style = bold, label=""];
476->402 [style = bold, label=""];
667->707 [style = bold, label=""];
764->743 [style = bold, label=""];
544->183 [style = bold, label=""];
847->681 [style = bold, label=""];
724->408 [style = solid, label="myTxId"];
671->604 [style = bold, label=""];
340->480 [style = bold, label=""];
899->681 [style = bold, label=""];
322->801 [style = bold, label=""];
106->721 [style = bold, label=""];
852->3 [style = bold, label=""];
595->166 [style = bold, label=""];
939->935 [style = bold, label=""];
572->622 [style = bold, label=""];
475->741 [style = bold, label=""];
234->0 [style = solid, label="myTxId"];
424->298 [style = bold, label=""];
317->522 [style = bold, label=""];
525->263 [style = bold, label=""];
490->856 [style = bold, label=""];
677->519 [style = bold, label=""];
839->338 [style = bold, label=""];
761->317 [style = bold, label=""];
367->515 [style = bold, label=""];
27->819 [style = bold, label=""];
487->598 [style = bold, label=""];
541->379 [style = bold, label=""];
517->315 [style = bold, label=""];
473->420 [style = bold, label=""];
71->541 [style = solid, label="reg1"];
789->158 [style = bold, label=""];
580->304 [style = bold, label=""];
113->439 [style = bold, label=""];
824->821 [style = bold, label=""];
808->535 [style = bold, label=""];
246->488 [style = solid, label="myTxId"];
55->232 [style = bold, label=""];
723->508 [style = bold, label=""];
119->171 [style = bold, label=""];
749->397 [style = bold, label=""];
142->122 [style = bold, label=""];
48->853 [style = bold, label=""];
249->164 [style = bold, label=""];
120->567 [style = bold, label=""];
71->298 [style = solid, label="reg1"];
877->375 [style = bold, label=""];
71->488 [style = solid, label="reg1"];
637->688 [style = bold, label=""];
258->777 [style = bold, label=""];
735->430 [style = bold, label=""];
422->219 [style = bold, label=""];
117->677 [style = bold, label=""];
229->614 [style = bold, label=""];
923->941 [style = solid, label="myTxId"];
857->858 [style = bold, label=""];
612->187 [style = solid, label="myTxId"];
770->63 [style = bold, label=""];
880->441 [style = bold, label=""];
796->848 [style = bold, label=""];
300->731 [style = bold, label=""];
37->680 [style = bold, label=""];
629->174 [style = bold, label=""];
747->572 [style = bold, label=""];
643->624 [style = bold, label=""];
641->339 [style = bold, label=""];
620->415 [style = bold, label=""];
220->10 [style = bold, label=""];
4->93 [style = bold, label=""];
917->921 [style = bold, label=""];
324->328 [style = bold, label=""];
452->606 [style = bold, label=""];
464->209 [style = bold, label=""];
178->685 [style = bold, label=""];
71->598 [style = solid, label="reg1"];
816->585 [style = bold, label=""];
851->115 [style = bold, label=""];
67->344 [style = bold, label=""];
805->133 [style = bold, label=""];
79->452 [style = bold, label=""];
709->757 [style = bold, label=""];
700->446 [style = bold, label=""];
441->124 [style = bold, label=""];
504->485 [style = bold, label=""];
218->230 [style = bold, label=""];
88->551 [style = bold, label=""];
284->637 [style = bold, label=""];
585->371 [style = bold, label=""];
846->547 [style = bold, label=""];
327->599 [style = bold, label=""];
71->391 [style = solid, label="reg1"];
}
