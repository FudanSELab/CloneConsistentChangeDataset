digraph {
17 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(BAR_1,15513L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(FOO_1,18213L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertCommittedOffset(FOO_0,15213L,metricListener)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(1L,metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_SUCCEEDED_METRIC_COUNTER).getCount())@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(0L,commitsSucceededCounter.get().getCount())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertEquals(1L,commitsSucceededCounter.get().getCount())@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(BAR_0,18613L)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(BAR_1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(BAR_0)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MetricListener metricListener = new MetricListener()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertCommittedOffset(BAR_1,15513L,metricListener)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testCommitOffsetTracking['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(FOO_1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "kafkaSourceReaderMetrics.recordSucceededCommit()@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final KafkaSourceReaderMetrics kafkaSourceReaderMetrics = new KafkaSourceReaderMetrics(metricListener.getMetricGroup())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(commitsSucceededCounter.isPresent())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(1L,metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_FAILED_METRIC_COUNTER).getCount())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "kafkaSourceReaderMetrics.recordCommittedOffset(FOO_0,15213L)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertCommittedOffset(FOO_1,18213L,metricListener)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "kafkaSourceReaderMetrics.registerTopicPartition(FOO_0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testCommitOffsetTracking['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertCommittedOffset(BAR_0,18613L,metricListener)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testFailedCommit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(0L,metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_SUCCEEDED_METRIC_COUNTER).getCount())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "final Optional<Counter> commitsSucceededCounter = metricListener.getCounter(KafkaSourceReaderMetrics.KAFKA_SOURCE_READER_METRIC_GROUP,KafkaSourceReaderMetrics.COMMITS_SUCCEEDED_METRIC_COUNTER)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "kafkaSourceReaderMetrics.recordFailedCommit()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "kafkaSourceReaderMetrics.recordSucceededCommit()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2->17 [style = bold, label=""];
14->16 [style = bold, label=""];
16->3 [style = bold, label=""];
7->1 [style = bold, label=""];
26->7 [style = bold, label=""];
0->13 [style = bold, label=""];
18->23 [style = bold, label=""];
1->15 [style = bold, label=""];
11->4 [style = bold, label=""];
15->24 [style = dashed, label="0"];
7->12 [style = solid, label="metricListener"];
8->14 [style = bold, label=""];
7->14 [style = solid, label="metricListener"];
9->10 [style = bold, label=""];
22->7 [style = bold, label=""];
21->18 [style = bold, label=""];
4->0 [style = bold, label=""];
3->9 [style = bold, label=""];
5->2 [style = bold, label=""];
17->12 [style = bold, label=""];
15->11 [style = bold, label=""];
7->16 [style = solid, label="metricListener"];
12->8 [style = bold, label=""];
1->24 [style = bold, label=""];
24->25 [style = bold, label=""];
7->8 [style = solid, label="metricListener"];
3->20 [style = dashed, label="0"];
11->25 [style = dashed, label="0"];
13->5 [style = bold, label=""];
6->7 [style = bold, label=""];
20->19 [style = bold, label=""];
16->20 [style = bold, label=""];
19->21 [style = bold, label=""];
}
