digraph {
6 [style = filled, label = "ColumnAnalysis that = (ColumnAnalysis)o@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "equals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Object o@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "this == o@@@3@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "return false@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "o == null || getClass() != o.getClass()@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return hasMultipleValues == that.hasMultipleValues && size == that.size && Objects.equals(type,that.type) && Objects.equals(cardinality,that.cardinality) && Objects.equals(minValue,that.minValue) && Objects.equals(maxValue,that.maxValue) && Objects.equals(errorMessage,that.errorMessage)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "equals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return true@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "equals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "return hasMultipleValues == that.hasMultipleValues && hasNulls == that.hasNulls && size == that.size && Objects.equals(type,that.type) && Objects.equals(cardinality,that.cardinality) && Objects.equals(minValue,that.minValue) && Objects.equals(maxValue,that.maxValue) && Objects.equals(errorMessage,that.errorMessage)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "JoinFilterColumnCorrelationAnalysis that = (JoinFilterColumnCorrelationAnalysis)o@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return Objects.equals(joinColumn,that.joinColumn) && baseColumns.equals(that.baseColumns) && baseExpressions.equals(that.baseExpressions) && Objects.equals(correlatedValuesMap,that.correlatedValuesMap)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
12->3 [style = dotted, label="true"];
1->4 [style = bold, label=""];
3->11 [style = solid, label="o"];
2->6 [style = bold, label=""];
6->11 [style = dashed, label="0"];
1->4 [style = dotted, label="true"];
3->6 [style = solid, label="o"];
12->1 [style = bold, label=""];
8->3 [style = dotted, label="true"];
3->1 [style = solid, label="o"];
8->1 [style = bold, label=""];
5->2 [style = bold, label=""];
5->6 [style = bold, label=""];
11->10 [style = bold, label=""];
7->9 [style = dashed, label="0"];
0->1 [style = bold, label=""];
5->11 [style = bold, label=""];
0->3 [style = dotted, label="true"];
6->9 [style = bold, label=""];
6->7 [style = bold, label=""];
3->5 [style = solid, label="o"];
4->5 [style = bold, label=""];
2->11 [style = bold, label=""];
5->2 [style = dotted, label="true"];
}
