digraph {
8 [style = filled, label = "IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),Collections.emptyMap())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Exception exception = expectThrows(,null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNullWithoutIgnoreMissing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "IngestDocument ingestDocument = new IngestDocument(originalIngestDocument)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "UserAgentProcessor processor = new UserAgentProcessor(randomAlphaOfLength(10),null,\"source_field\",\"target_field\",null,EnumSet.allOf(),false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "GeoIpProcessor processor = new GeoIpProcessor(randomAlphaOfLength(10),null,\"source_field\",loader(\"/GeoLite2-City.mmdb\"),\"target_field\",EnumSet.allOf(),false,false)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testNonExistentWithoutIgnoreMissing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "GeoIpProcessor processor = new GeoIpProcessor(randomAlphaOfLength(10),null,\"source_field\",loader(\"/GeoLite2-City.mmdb\"),\"target_field\",EnumSet.allOf(),false,new GeoIpCache(1000),false)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"field (source_field( is null, cannot extract geoip information.\"))@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "IngestDocument originalIngestDocument = RandomDocumentPicks.randomIngestDocument(random(),Collections.singletonMap(\"source_field\",null))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(exception.getMessage(),equalTo(\"field (source_field( not present as part of path (source_field(\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testNullWithoutIgnoreMissing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
2->11 [style = dashed, label="0"];
4->9 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
4->1 [style = bold, label=""];
5->11 [style = bold, label=""];
7->1 [style = bold, label=""];
10->9 [style = bold, label=""];
6->7 [style = bold, label=""];
8->3 [style = solid, label="originalIngestDocument"];
9->8 [style = bold, label=""];
0->4 [style = bold, label=""];
4->7 [style = dashed, label="0"];
1->3 [style = solid, label="originalIngestDocument"];
8->3 [style = bold, label=""];
}
