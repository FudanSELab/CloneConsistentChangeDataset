digraph {
5 [style = filled, label = "ImmutableWorkerInfo worker = strategy.findWorkerForTask(new RemoteTaskRunnerConfig(),ImmutableMap.of(\"localhost\",new ImmutableWorkerInfo(new Worker(\"http\",\"localhost\",\"localhost\",1,\"v1\",WorkerConfig.DEFAULT_CATEGORY),0,new HashSet<>(),new HashSet<>(),DateTimes.nowUtc())),new NoopTask(null,null,null,1,0,null,null,null))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "ImmutableWorkerInfo worker = strategy.findWorkerForTask(new RemoteTaskRunnerConfig(),ImmutableMap.of(\"lhost\",new ImmutableWorkerInfo(new Worker(\"http\",\"disableHost\",\"disableHost\",10,disabledVersion),2,new HashSet<>(),new HashSet<>(),DateTimes.nowUtc()),\"localhost\",new ImmutableWorkerInfo(new Worker(\"http\",\"enableHost\",\"enableHost\",10,\"v1\"),5,new HashSet<>(),new HashSet<>(),DateTimes.nowUtc())),new NoopTask(null,null,null,1,0,null,null,null){@Override public String getDataSource(){return \"foo\"}})@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ImmutableWorkerInfo worker = strategy.findWorkerForTask(new RemoteTaskRunnerConfig(),ImmutableMap.of(\"localhost\",new ImmutableWorkerInfo(new Worker(\"http\",\"localhost\",\"localhost\",1,\"v1\"),0,new HashSet<>(),new HashSet<>(),DateTimes.nowUtc())),new NoopTask(null,null,null,1,0,null,null,null))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testIsolation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "testOneDisableWorkerDifferentUsedCapacity['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final EqualDistributionWorkerSelectStrategy strategy = new EqualDistributionWorkerSelectStrategy(null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String disabledVersion = \"\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertNull(worker)@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"enableHost\",worker.getWorker().getHost())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testIsolation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FillCapacityWorkerSelectStrategy strategy = new FillCapacityWithAffinityWorkerSelectStrategy(new AffinityConfig(ImmutableMap.of(\"foo\",ImmutableSet.of(\"localhost\")),false))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
1->5 [style = bold, label=""];
3->5 [style = dashed, label="0"];
4->1 [style = bold, label=""];
5->0 [style = bold, label=""];
9->7 [style = bold, label=""];
5->0 [style = solid, label="worker"];
0->7 [style = dashed, label="0"];
7->10 [style = bold, label=""];
3->0 [style = solid, label="worker"];
2->1 [style = bold, label=""];
3->0 [style = bold, label=""];
6->8 [style = bold, label=""];
8->7 [style = solid, label="disabledVersion"];
8->9 [style = bold, label=""];
}
