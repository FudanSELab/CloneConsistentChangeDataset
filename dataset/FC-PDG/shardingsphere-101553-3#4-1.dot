digraph {
12 [style = filled, label = "return result@@@17@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "return new InExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),left,right,not)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "null != ctx.subquery()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "createInSegment['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "ExprContext each@@@10@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "right = new SubqueryExpressionSegment(new SubquerySegment(ctx.subquery().start.getStartIndex(),ctx.subquery().stop.getStopIndex(),(SQL92SelectStatement)visit(ctx.subquery())))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final PredicateContext ctx@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolean not = null != ctx.NOT()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "ctx.expr()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ctx.expr()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "ExprContext each@@@10@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "createInSegment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ListExpression listExpression = new ListExpression(ctx.LP_().getSymbol().getStartIndex(),ctx.RP_().getSymbol().getStopIndex())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "right = new SubqueryExpressionSegment(new SubquerySegment(ctx.subquery().start.getStartIndex(),ctx.subquery().stop.getStopIndex(),(SQLServerSelectStatement)visit(ctx.subquery())))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createInSegment['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "listExpression.getItems().add((ExpressionSegment)visit(each))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ExpressionSegment right@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "InExpression result = new InExpression(ctx.start.getStartIndex(),ctx.stop.getStopIndex(),left,right,not)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ExpressionSegment left = (ExpressionSegment)visit(ctx.bitExpr(0))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "right = listExpression@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "boolean not = null != ctx.NOT()? true: false@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->20 [style = dotted, label="true"];
11->1 [style = solid, label="not"];
0->16 [style = bold, label=""];
2->20 [style = bold, label=""];
2->0 [style = dotted, label="true"];
2->15 [style = dotted, label="false"];
1->14 [style = dashed, label="0"];
7->10 [style = bold, label=""];
11->1 [style = bold, label=""];
11->16 [style = dashed, label="0"];
0->11 [style = bold, label=""];
10->1 [style = solid, label="right"];
0->1 [style = solid, label="right"];
2->10 [style = dotted, label="false"];
2->18 [style = dotted, label="false"];
0->20 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->14 [style = solid, label="left"];
19->8 [style = dotted, label="true"];
4->7 [style = bold, label=""];
20->1 [style = solid, label="right"];
9->8 [style = dotted, label="true"];
17->8 [style = dotted, label="true"];
4->10 [style = solid, label="listExpression"];
2->0 [style = bold, label=""];
10->14 [style = solid, label="right"];
19->13 [style = bold, label=""];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
10->16 [style = bold, label=""];
2->5 [style = dotted, label="false"];
2->7 [style = dotted, label="true"];
1->12 [style = bold, label=""];
1->12 [style = solid, label="result"];
0->14 [style = solid, label="right"];
9->13 [style = bold, label=""];
2->6 [style = dotted, label="false"];
16->14 [style = bold, label=""];
17->13 [style = bold, label=""];
2->4 [style = dotted, label="false"];
13->1 [style = solid, label="left"];
16->14 [style = solid, label="not"];
20->11 [style = bold, label=""];
10->11 [style = bold, label=""];
}
