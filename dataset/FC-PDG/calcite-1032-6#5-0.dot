digraph {
8 [style = filled, label = "String(( peopleWithoutCharS = {\"Brill\",\"Andrew\",\"Alice\"}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithTwoGT15).singleOrDefault(numberGT15))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String(( people = {\"Brill\",\"Smith\",\"Simpsom\"}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNull(Linq4j.asEnumerable(numbersWithoutGT15).singleOrDefault(numberGT15))@@@28@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).firstOrDefault(startWithS))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Predicate1<Integer> numberGT15 = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Integer(( numbersWithoutGT15 = {5,10,15}@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String(( twoPeopleWithCharS = {\"Brill\",\"Smith\",\"Simpson\"}@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Integer(( numbersWithTwoGT15 = {5,10,15,20,25}@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Predicate1<String> startWithS = null@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testSingleOrDefaultPredicate1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertNull(Linq4j.asEnumerable(twoPeopleWithCharS).singleOrDefault(startWithS))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).firstOrDefault(startWithS))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Integer(( numbers = {5,10,15,20,25}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testFirstOrDefaultPredicate1['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNull(Linq4j.asEnumerable(peopleWithoutCharS).singleOrDefault(startWithS))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testSingleOrDefaultPredicate1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).singleOrDefault(numberGT15))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(numbers(3(,Linq4j.asEnumerable(numbers).firstOrDefault(numberGT15))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(people(1(,Linq4j.asEnumerable(people).singleOrDefault(startWithS))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->18 [style = solid, label="startWithS"];
14->18 [style = solid, label="people"];
0->10 [style = solid, label="startWithS"];
14->2 [style = solid, label="people"];
3->2 [style = bold, label=""];
7->4 [style = solid, label="numberGT15"];
0->7 [style = bold, label=""];
7->13 [style = solid, label="numberGT15"];
1->8 [style = bold, label=""];
9->3 [style = bold, label=""];
11->9 [style = bold, label=""];
11->18 [style = bold, label=""];
19->0 [style = bold, label=""];
11->16 [style = solid, label="numbers"];
12->13 [style = bold, label=""];
7->14 [style = bold, label=""];
6->10 [style = bold, label=""];
14->1 [style = bold, label=""];
8->11 [style = bold, label=""];
5->0 [style = bold, label=""];
15->0 [style = bold, label=""];
7->16 [style = solid, label="numberGT15"];
0->2 [style = solid, label="startWithS"];
10->4 [style = bold, label=""];
0->12 [style = solid, label="startWithS"];
18->16 [style = bold, label=""];
14->8 [style = bold, label=""];
4->12 [style = bold, label=""];
11->6 [style = solid, label="numbers"];
0->17 [style = solid, label="startWithS"];
2->6 [style = bold, label=""];
16->17 [style = bold, label=""];
7->6 [style = solid, label="numberGT15"];
}
