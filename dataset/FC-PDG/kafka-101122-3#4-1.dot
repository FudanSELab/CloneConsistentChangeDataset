digraph {
2 [style = filled, label = "EasyMock.expectLastCall()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "inner.init((ProcessorContext)context,store)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "inner.init(context,store)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expect(context.taskId()).andReturn(taskId)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "init['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "store.init((StateStoreContext)context,store)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "init['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "store.init(context,store)@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "init['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "EasyMock.expect(context.recordCollector()).andReturn(collector)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.replay(inner,context)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->0 [style = bold, label=""];
5->7 [style = bold, label=""];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
10->0 [style = bold, label=""];
1->2 [style = bold, label=""];
4->9 [style = dashed, label="0"];
6->9 [style = bold, label=""];
1->7 [style = dashed, label="0"];
7->2 [style = bold, label=""];
2->6 [style = bold, label=""];
3->0 [style = bold, label=""];
0->5 [style = bold, label=""];
}
