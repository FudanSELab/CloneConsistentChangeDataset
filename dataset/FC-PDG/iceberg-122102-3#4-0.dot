digraph {
14 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@28@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "this.partitionType = EMPTY_STRUCT_TYPE@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "int j = 0@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "this.fromProjectionPos = new int((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "j < allFields.size()@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "j += 1@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "BaseFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "this.partitionData = new PartitionData(partitionType)@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "int i = 0@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<Types.NestedField> allFields = DataFile.getType(partitionType).fields()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "BaseFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "List<Types.NestedField> allFields = Lists.newArrayList()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "j < allFields.size()@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "allFields.add(MetadataColumns.ROW_POSITION)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "List<Types.NestedField> fields = schema.fields()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Schema avroSchema@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.partitionType = partType.asNestedType().asStructType()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < fromProjectionPos.length@@@18@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "fields.get(i).fieldId() == allFields.get(j).fieldId()@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "fromProjectionPos(i( = j@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "!found@@@29@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "this.avroSchema = avroSchema@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!found@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "found = true@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "partType != null@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Schema avroSchema@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "i += 1@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "throw new IllegalArgumentException(\"Cannot find projected field: \" + fields.get(i))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "found = true@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "j += 1@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Types.StructType schema = AvroSchemaUtil.convert(avroSchema).asNestedType().asStructType()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Type partType = schema.fieldType(\"partition\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "boolean found = false@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int j = 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<Types.NestedField> allFields = PartitionFieldSummary.getType().fields()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "allFields.addAll(DataFile.getType(partitionType).fields())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "this.partitionData = new PartitionData(partitionType)@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "List<Types.NestedField> fields = AvroSchemaUtil.convert(avroSchema).asNestedType().asStructType().fields()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "i < fromProjectionPos.length@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fields.get(i).fieldId() == allFields.get(j).fieldId()@@@14@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "GenericPartitionFieldSummary['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "!found@@@27@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "fromProjectionPos(i( = j@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->39 [style = dotted, label="true"];
32->22 [style = bold, label=""];
41->37 [style = solid, label="j"];
5->20 [style = bold, label=""];
4->14 [style = solid, label="i"];
16->25 [style = solid, label="j"];
0->19 [style = dotted, label="true"];
8->25 [style = solid, label="j"];
13->10 [style = dotted, label="true"];
40->37 [style = dotted, label="true"];
22->0 [style = solid, label="i"];
7->9 [style = bold, label=""];
17->36 [style = bold, label=""];
43->40 [style = bold, label=""];
8->2 [style = solid, label="j"];
22->0 [style = bold, label=""];
36->34 [style = solid, label="fields"];
6->10 [style = solid, label="i"];
4->8 [style = bold, label=""];
3->14 [style = solid, label="i"];
19->28 [style = bold, label=""];
10->1 [style = dotted, label="true"];
5->20 [style = solid, label="partType"];
41->10 [style = solid, label="j"];
4->16 [style = bold, label=""];
2->8 [style = dotted, label="true"];
40->41 [style = dotted, label="true"];
24->10 [style = bold, label=""];
10->6 [style = dotted, label="true"];
26->17 [style = bold, label=""];
13->3 [style = dotted, label="true"];
30->27 [style = bold, label=""];
8->4 [style = solid, label="j"];
25->32 [style = solid, label="i"];
41->37 [style = bold, label=""];
0->29 [style = bold, label=""];
12->30 [style = dashed, label="0"];
16->19 [style = bold, label=""];
15->36 [style = dashed, label="0"];
0->8 [style = dotted, label="true"];
20->18 [style = bold, label=""];
40->22 [style = dotted, label="true"];
3->10 [style = solid, label="i"];
3->10 [style = bold, label=""];
22->38 [style = bold, label=""];
19->4 [style = dotted, label="true"];
10->0 [style = bold, label=""];
17->15 [style = bold, label=""];
18->23 [style = solid, label="partitionType"];
18->9 [style = bold, label=""];
11->17 [style = bold, label=""];
39->41 [style = bold, label=""];
10->0 [style = dotted, label="true"];
20->7 [style = bold, label=""];
37->13 [style = bold, label=""];
7->23 [style = solid, label="partitionType"];
14->6 [style = bold, label=""];
2->19 [style = dotted, label="true"];
33->37 [style = solid, label="j"];
31->25 [style = bold, label=""];
22->2 [style = bold, label=""];
38->2 [style = solid, label="i"];
2->1 [style = bold, label=""];
22->32 [style = solid, label="i"];
7->29 [style = solid, label="partitionType"];
10->2 [style = solid, label="i"];
40->38 [style = dotted, label="true"];
22->2 [style = solid, label="j"];
20->7 [style = dotted, label="true"];
21->17 [style = solid, label="avroSchema"];
25->16 [style = bold, label=""];
10->6 [style = bold, label=""];
43->40 [style = solid, label="i"];
19->16 [style = bold, label=""];
28->32 [style = bold, label=""];
12->13 [style = bold, label=""];
4->31 [style = bold, label=""];
37->22 [style = bold, label=""];
1->6 [style = bold, label=""];
28->32 [style = dotted, label="true"];
40->39 [style = bold, label=""];
8->2 [style = bold, label=""];
4->31 [style = dotted, label="true"];
10->2 [style = dotted, label="true"];
10->23 [style = bold, label=""];
6->10 [style = bold, label=""];
16->19 [style = solid, label="j"];
34->44 [style = bold, label=""];
9->27 [style = solid, label="fields"];
18->29 [style = solid, label="partitionType"];
27->24 [style = bold, label=""];
10->33 [style = bold, label=""];
9->12 [style = bold, label=""];
21->35 [style = dashed, label="0"];
6->32 [style = solid, label="i"];
16->4 [style = bold, label=""];
33->37 [style = bold, label=""];
38->40 [style = bold, label=""];
6->14 [style = solid, label="i"];
28->22 [style = bold, label=""];
36->34 [style = bold, label=""];
0->28 [style = dotted, label="true"];
37->33 [style = dotted, label="true"];
2->19 [style = bold, label=""];
8->19 [style = bold, label=""];
42->17 [style = bold, label=""];
0->2 [style = bold, label=""];
8->19 [style = solid, label="j"];
9->30 [style = bold, label=""];
6->0 [style = bold, label=""];
22->4 [style = solid, label="j"];
38->40 [style = solid, label="i"];
1->14 [style = dotted, label="true"];
4->25 [style = dotted, label="true"];
19->8 [style = bold, label=""];
15->5 [style = bold, label=""];
44->43 [style = bold, label=""];
0->22 [style = dotted, label="true"];
6->0 [style = solid, label="i"];
22->2 [style = dotted, label="true"];
9->12 [style = solid, label="fields"];
43->2 [style = solid, label="i"];
2->38 [style = bold, label=""];
13->3 [style = bold, label=""];
26->21 [style = dotted, label="true"];
0->22 [style = bold, label=""];
19->16 [style = dotted, label="true"];
10->22 [style = dotted, label="true"];
42->35 [style = dotted, label="true"];
1->14 [style = bold, label=""];
35->17 [style = solid, label="avroSchema"];
19->4 [style = bold, label=""];
20->18 [style = dotted, label="false"];
11->21 [style = dotted, label="true"];
0->2 [style = dotted, label="true"];
33->10 [style = solid, label="j"];
13->33 [style = bold, label=""];
37->13 [style = dotted, label="true"];
2->8 [style = bold, label=""];
}
