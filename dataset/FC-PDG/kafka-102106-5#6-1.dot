digraph {
11 [style = filled, label = "shouldConvertValuesIfInnerStoreImplementsTimestampedBytesStore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final KeyValue<byte((,byte((> restoredRecord = stateRestoreCallback.restored.get(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stateManager.initialize()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stateManager.register(new WrappedStateStore<NoOpReadOnlyStore<Object,Object>>(store2){},stateRestoreCallback)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "initializeConsumer(1,0,t1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(3,restoredRecord.key.length)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldNotConvertValuesIfInnerStoreDoesNotImplementTimestampedBytesStore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "shouldNotConvertValuesIfInnerStoreDoesNotImplementTimestampedBytesStore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "stateManager.register(new WrappedStateStore<NoOpReadOnlyStore<Object,Object>>(store1){},stateRestoreCallback)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "assertEquals(5,restoredRecord.value.length)@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(13,restoredRecord.value.length)@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "stateManager.register(new WrappedStateStore<NoOpReadOnlyStore<Object,Object>,Object,Object>(store1){},stateRestoreCallback)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "initializeConsumer(1,0,t2)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
1->9 [style = dashed, label="0"];
7->1 [style = bold, label=""];
1->0 [style = bold, label=""];
4->2 [style = bold, label=""];
9->0 [style = bold, label=""];
4->8 [style = dashed, label="0"];
3->1 [style = bold, label=""];
8->2 [style = bold, label=""];
11->9 [style = bold, label=""];
0->4 [style = bold, label=""];
5->10 [style = dashed, label="0"];
2->6 [style = bold, label=""];
6->10 [style = bold, label=""];
0->12 [style = bold, label=""];
4->12 [style = dashed, label="0"];
0->8 [style = bold, label=""];
}
