digraph {
8 [style = filled, label = "Workflow.Builder workflowBuilder = new Workflow.Builder(WORKFLOW).addJob(JOB,jobBuilder)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(checkTasksOnDifferentInstances())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "WORKFLOW = TestHelper.getTestMethodName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "startParticipant(_initialNumNodes)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testFixedTargetTaskAndDisabledRebalanceAndNodeDown['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JobConfig.Builder jobBuilder = new JobConfig.Builder().setWorkflow(WORKFLOW).setNumberOfTasks(10).setNumConcurrentTasksPerInstance(100).setCommand(MockTask.TASK_COMMAND).setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"99999999\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "JobConfig.Builder jobBuilder = new JobConfig.Builder().setWorkflow(WORKFLOW).setTargetResource(DATABASE).setNumConcurrentTasksPerInstance(100).setCommand(MockTask.TASK_COMMAND).setJobCommandConfigMap(ImmutableMap.of(MockTask.TIMEOUT_CONFIG,\"99999999\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "JobConfig.Builder jobBuilder = new JobConfig.Builder().setWorkflow(WORKFLOW).setNumberOfTasks(10).setNumConcurrentTasksPerInstance(100).setCommand(MockTask.TASK_COMMAND).setJobCommandConfigMap(ImmutableMap.of(MockTask.TIMEOUT_CONFIG,\"99999999\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "stopParticipant(_initialNumNodes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_driver.start(workflowBuilder.build())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testGenericTaskAndDisabledRebalanceAndNodeDown['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testGenericTaskAndDisabledRebalanceAndNodeDown['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertTrue(checkTasksOnSameInstances())@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->1 [style = bold, label=""];
4->8 [style = bold, label=""];
0->10 [style = bold, label=""];
7->0 [style = bold, label=""];
12->8 [style = solid, label="jobBuilder"];
5->6 [style = bold, label=""];
10->8 [style = bold, label=""];
4->10 [style = dashed, label="0"];
3->7 [style = bold, label=""];
9->7 [style = bold, label=""];
0->4 [style = bold, label=""];
4->8 [style = solid, label="jobBuilder"];
12->8 [style = bold, label=""];
11->7 [style = bold, label=""];
10->8 [style = solid, label="jobBuilder"];
0->12 [style = bold, label=""];
4->12 [style = dashed, label="0"];
6->2 [style = bold, label=""];
}
