digraph {
1 [style = filled, label = "AbstractProject newProject = Jenkins.getInstance().copy((AbstractProject)project,newProjectName)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertEquals(newProjectName,newProject.getDisplayName())@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "AbstractProject newProject = Jenkins.get().copy((AbstractProject)project,newProjectName)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testCopyJobWithNoDisplayName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testCopyJobWithNoDisplayName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(displayName,project.getDisplayName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final String projectName = \"projectName\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "project.renameTo(newProjectName)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(displayName,project.getDisplayName())@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(projectName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "project.setDisplayName(displayName)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testRenameJobWithDisplayName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(newProjectName,newProject.getName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String newProjectName = \"newProjectName\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(projectName,project.getDisplayName())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String displayName = \"displayName\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15->14 [style = solid, label="displayName"];
5->8 [style = bold, label=""];
9->0 [style = bold, label=""];
0->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
15->11 [style = solid, label="displayName"];
12->0 [style = bold, label=""];
6->15 [style = bold, label=""];
3->0 [style = bold, label=""];
15->10 [style = solid, label="displayName"];
4->8 [style = solid, label="project"];
4->1 [style = solid, label="project"];
6->4 [style = bold, label=""];
5->1 [style = bold, label=""];
8->2 [style = bold, label=""];
10->13 [style = bold, label=""];
6->7 [style = solid, label="newProjectName"];
6->13 [style = solid, label="newProjectName"];
11->10 [style = bold, label=""];
6->8 [style = solid, label="newProjectName"];
5->11 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
15->4 [style = bold, label=""];
6->1 [style = solid, label="newProjectName"];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
6->2 [style = solid, label="newProjectName"];
2->7 [style = bold, label=""];
4->11 [style = bold, label=""];
0->4 [style = solid, label="projectName"];
0->5 [style = solid, label="projectName"];
4->5 [style = bold, label=""];
13->14 [style = bold, label=""];
}
