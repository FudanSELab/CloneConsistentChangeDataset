digraph {
32 [style = filled, label = "List<Row> expected = new ArrayList<Row>(2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "person1.setAge(29)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StructType schema = DataTypes.createStructType(fields)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "fields.add(DataTypes.createStructField(\"name\",DataTypes.StringType,false))@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "personList.add(person1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertEquals(expected,actual)@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Row(( actual = sqlContext.sql(\"SELECT * FROM people\").collect()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "fields.add(DataTypes.createStructField(\"age\",DataTypes.IntegerType,false))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<String> expected = new ArrayList<>(2)@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.assertEquals(expected,Arrays.asList(actual))@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "personList.add(person2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Person person1 = new Person()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<StructField> fields = new ArrayList<>(2)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "List<String> expected = new ArrayList<String>(2)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "DataFrame df = sqlContext.applySchema(rowRDD,schema)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<Person> personList = new ArrayList<>(2)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "expected.add(RowFactory.create(\"Yin\",28))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "dataFrameRDDOperations['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "expected.add(RowFactory.create(\"Michael\",29))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<Person> personList = new ArrayList<Person>(2)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "person2.setAge(28)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<StructField> fields = new ArrayList<StructField>(2)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "df.registerTempTable(\"people\")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "JavaRDD<Row> rowRDD = javaCtx.parallelize(personList).map(new Function<Person,Row>(){public Row call(Person person){return RowFactory.create(person.getName(),person.getAge())}})@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expected.add(\"Michael_29\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "fields.add(DataTypes.createStructField(\"\",DataTypes.StringType,false))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "person2.setName(\"Yin\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "expected.add(\"Yin_28\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "applySchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Person person2 = new Person()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "person1.setName(\"Michael\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<String> actual = sqlContext.sql(\"SELECT * FROM people\").toJavaRDD().map(new Function<Row,String>(){@Override public String call(Row row){return row.getString(0) + \"_\" + row.get(1)}}).collect()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "dataFrameRDDOperations['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8->16 [style = bold, label=""];
7->16 [style = solid, label="actual"];
7->31 [style = dashed, label="0"];
12->5 [style = bold, label=""];
19->12 [style = bold, label=""];
13->19 [style = solid, label="person2"];
4->6 [style = bold, label=""];
25->23 [style = bold, label=""];
31->32 [style = bold, label=""];
17->31 [style = bold, label=""];
27->28 [style = bold, label=""];
0->2 [style = bold, label=""];
15->24 [style = dashed, label="0"];
18->19 [style = bold, label=""];
26->14 [style = bold, label=""];
5->15 [style = bold, label=""];
20->14 [style = bold, label=""];
7->20 [style = bold, label=""];
0->6 [style = solid, label="person1"];
32->28 [style = solid, label="expected"];
11->9 [style = bold, label=""];
2->4 [style = bold, label=""];
23->0 [style = bold, label=""];
5->9 [style = solid, label="fields"];
9->21 [style = solid, label="schema"];
3->18 [style = bold, label=""];
7->26 [style = bold, label=""];
17->7 [style = bold, label=""];
32->29 [style = bold, label=""];
29->27 [style = bold, label=""];
15->11 [style = bold, label=""];
13->3 [style = bold, label=""];
26->16 [style = solid, label="expected"];
24->11 [style = bold, label=""];
6->13 [style = bold, label=""];
12->21 [style = solid, label="rowRDD"];
10->0 [style = bold, label=""];
20->16 [style = solid, label="expected"];
9->21 [style = bold, label=""];
30->10 [style = bold, label=""];
31->28 [style = solid, label="actual"];
22->9 [style = solid, label="fields"];
14->8 [style = bold, label=""];
22->24 [style = bold, label=""];
10->23 [style = dashed, label="0"];
1->10 [style = bold, label=""];
21->17 [style = bold, label=""];
12->22 [style = bold, label=""];
20->26 [style = dashed, label="0"];
5->22 [style = dashed, label="0"];
}
