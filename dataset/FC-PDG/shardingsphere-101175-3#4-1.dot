digraph {
12 [style = filled, label = "assertExecuteBatchForMultiplePreparedStatementsFailure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "SQLException exp = new SQLException(\"\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "verify(preparedStatement1).executeBatch()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "verify(preparedStatement).executeBatch()@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "PreparedStatement preparedStatement = getPreparedStatement()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PreparedStatement preparedStatement2 = getPreparedStatement()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "when(preparedStatement2.executeBatch()).thenThrow(exp)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "verify(preparedStatement2).executeBatch()@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(preparedStatement1.executeBatch()).thenThrow(exp)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "PreparedStatement preparedStatement1 = getPreparedStatement()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16b8c4d))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertExecuteBatchForSinglePreparedStatementFailure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "SQLException exp = new SQLException()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(actual.executeBatch(sqlStatementContext),is(new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@16b8c09))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertExecuteBatchForSinglePreparedStatementFailure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "setExecuteGroups(Collections.singletonList(preparedStatement))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "setExecuteGroups(Arrays.asList(preparedStatement1,preparedStatement2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SQLException exp = new SQLException()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->13 [style = dashed, label="0"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
7->1 [style = bold, label=""];
10->17 [style = bold, label=""];
1->0 [style = bold, label=""];
0->10 [style = dashed, label="0"];
1->11 [style = bold, label=""];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
4->1 [style = solid, label="exp"];
5->0 [style = solid, label="preparedStatement"];
3->2 [style = bold, label=""];
8->5 [style = bold, label=""];
17->14 [style = bold, label=""];
11->10 [style = bold, label=""];
1->10 [style = solid, label="exp"];
4->7 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
2->16 [style = dashed, label="0"];
5->4 [style = bold, label=""];
5->7 [style = bold, label=""];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
1->11 [style = solid, label="exp"];
7->1 [style = solid, label="exp"];
15->17 [style = solid, label="preparedStatement2"];
16->9 [style = bold, label=""];
13->17 [style = solid, label="preparedStatement1"];
15->1 [style = bold, label=""];
}
