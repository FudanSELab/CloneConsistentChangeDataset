digraph {
28 [style = filled, label = "StreamFactory factory@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "null == collectionName@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamFactory factory@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<StreamExpression> streamExpressions = factory.getExpressionOperandsRepresentingTypes(expression,,)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "zkHost = factory.getCollectionZkHost(collectionName)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "workersInt = Integer.parseInt(workersStr)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String collectionName = factory.getValueOperand(expression,0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "NumberFormatException e@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "NumberFormatException e@@@25@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "null == sortExpression || !(sortExpression.getParameter() instanceof StreamExpressionValue)@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - collectionName expected as first operand\",expression))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "expression.getParameters().size() != streamExpressions.size() + 3 + (null != zkHostExpression? 1: 0)@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "nInt <= 0@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "null == zkHost@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "zkHost = ((StreamExpressionValue)zkHostExpression.getParameter()).getValue()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single 'workersParam' parameter of type positive integer but didn't find one\",expression))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "StreamFactory factory@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String nStr = ((StreamExpressionValue)nParam.getParameter()).getValue()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "init(streamComparator,nInt)@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "StreamExpressionNamedParameter sortExpression = factory.getNamedOperand(expression,\"sort\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' must be greater than 0.\",expression,workersStr))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - zkHost not found for collection '%s'\",expression,collectionName))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "streamFactory = factory@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "workersInt <= 0@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "StreamExpressionNamedParameter zkHostExpression = factory.getNamedOperand(expression,\"zkHost\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "null == workersParam || null == workersParam.getParameter() || !(workersParam.getParameter() instanceof StreamExpressionValue)@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ParallelStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "StreamComparator comp = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "null == zkHostExpression@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' must be greater than 0.\",expression,nStr))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - topN '%s' is not a valid integer.\",expression,nStr))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "StreamComparator streamComparator = factory.constructComparator(((StreamExpressionValue)sortExpression.getParameter()).getValue(),)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - unknown operands found\",expression))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "TupleStream stream = factory.constructStream(streamExpressions.get(0))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "StreamExpressionNamedParameter nParam = factory.getNamedOperand(expression,\"n\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "GroupOperation['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "nInt = Integer.parseInt(nStr)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "zkHostExpression.getParameter() instanceof StreamExpressionValue@@@41@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "zkHost == null@@@37@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "int nInt = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String workersStr = ((StreamExpressionValue)workersParam.getParameter()).getValue()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "1 != streamExpressions.size()@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "StreamExpressionNamedParameter workersParam = factory.getNamedOperand(expression,\"workers\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String zkHost = null@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"invalid expression %s - workers '%s' is not a valid integer.\",expression,workersStr))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting a single stream but found %d\",expression,streamExpressions.size()))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - expecting single 'sort' parameter telling us how to join the parallel streams but didn't find one\",expression))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "zkHost = factory.getDefaultZkHost()@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "int workersInt = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "ParallelStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "StreamExpression expression@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "init(zkHost,collectionName,stream,workersInt,comp)@@@50@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12->44 [style = solid, label="nStr"];
12->16 [style = solid, label="sortExpression"];
29->19 [style = bold, label=""];
27->42 [style = dashed, label="0"];
4->26 [style = bold, label=""];
21->32 [style = bold, label=""];
8->39 [style = bold, label=""];
45->41 [style = bold, label=""];
15->22 [style = bold, label=""];
28->31 [style = solid, label="expression"];
39->18 [style = bold, label=""];
36->18 [style = bold, label=""];
12->10 [style = bold, label=""];
16->1 [style = bold, label=""];
19->35 [style = dotted, label="true"];
39->36 [style = dotted, label="true"];
9->17 [style = bold, label=""];
25->0 [style = dotted, label="true"];
38->30 [style = solid, label="expression"];
38->31 [style = solid, label="expression"];
22->6 [style = dotted, label="true"];
17->23 [style = bold, label=""];
38->2 [style = solid, label="expression"];
5->12 [style = bold, label=""];
51->49 [style = bold, label=""];
45->47 [style = dotted, label="true"];
20->49 [style = dashed, label="0"];
8->18 [style = solid, label="zkHost"];
9->23 [style = solid, label="comp"];
36->18 [style = solid, label="zkHost"];
40->51 [style = bold, label=""];
27->29 [style = dotted, label="true"];
28->21 [style = solid, label="expression"];
10->33 [style = solid, label="zkHostExpression"];
34->39 [style = dotted, label="true"];
0->17 [style = solid, label="factory"];
28->10 [style = solid, label="expression"];
25->28 [style = dotted, label="true"];
7->14 [style = bold, label=""];
34->7 [style = dotted, label="false"];
8->18 [style = bold, label=""];
26->20 [style = solid, label="workersInt"];
11->23 [style = solid, label="stream"];
25->21 [style = bold, label=""];
39->36 [style = bold, label=""];
37->21 [style = bold, label=""];
33->30 [style = dotted, label="true"];
42->52 [style = bold, label=""];
28->47 [style = dashed, label="0"];
7->14 [style = dotted, label="true"];
44->50 [style = bold, label=""];
45->43 [style = dotted, label="true"];
49->44 [style = bold, label=""];
12->51 [style = solid, label="nStr"];
21->15 [style = solid, label="collectionName"];
26->51 [style = dashed, label="0"];
1->34 [style = bold, label=""];
19->35 [style = bold, label=""];
28->12 [style = solid, label="expression"];
14->18 [style = solid, label="zkHost"];
32->22 [style = solid, label="workersParam"];
46->50 [style = solid, label="streamComparator"];
8->23 [style = solid, label="zkHost"];
3->13 [style = solid, label="workersStr"];
38->35 [style = solid, label="expression"];
13->19 [style = bold, label=""];
22->6 [style = bold, label=""];
42->52 [style = dotted, label="true"];
34->7 [style = bold, label=""];
7->18 [style = bold, label=""];
1->18 [style = solid, label="zkHost"];
26->20 [style = bold, label=""];
28->24 [style = solid, label="expression"];
21->2 [style = solid, label="collectionName"];
38->24 [style = solid, label="expression"];
38->5 [style = solid, label="expression"];
15->24 [style = bold, label=""];
28->2 [style = solid, label="expression"];
38->32 [style = solid, label="expression"];
28->35 [style = solid, label="expression"];
20->19 [style = bold, label=""];
19->16 [style = bold, label=""];
38->13 [style = solid, label="expression"];
37->38 [style = dotted, label="true"];
20->13 [style = bold, label=""];
28->30 [style = solid, label="expression"];
33->15 [style = bold, label=""];
28->32 [style = solid, label="expression"];
6->3 [style = bold, label=""];
13->44 [style = dashed, label="0"];
28->13 [style = solid, label="expression"];
20->13 [style = dotted, label="true"];
18->2 [style = dotted, label="true"];
36->23 [style = solid, label="zkHost"];
21->23 [style = solid, label="collectionName"];
46->12 [style = bold, label=""];
3->4 [style = bold, label=""];
18->11 [style = bold, label=""];
15->24 [style = dotted, label="true"];
51->50 [style = solid, label="nInt"];
3->26 [style = solid, label="workersStr"];
38->21 [style = solid, label="expression"];
31->1 [style = bold, label=""];
38->12 [style = solid, label="expression"];
14->18 [style = bold, label=""];
18->2 [style = bold, label=""];
21->8 [style = solid, label="collectionName"];
28->17 [style = solid, label="factory"];
32->5 [style = bold, label=""];
30->15 [style = bold, label=""];
2->11 [style = bold, label=""];
49->44 [style = dotted, label="true"];
22->3 [style = bold, label=""];
37->28 [style = dotted, label="true"];
28->5 [style = solid, label="expression"];
34->8 [style = dotted, label="true"];
43->41 [style = solid, label="expression"];
38->6 [style = solid, label="expression"];
11->9 [style = bold, label=""];
52->50 [style = bold, label=""];
41->48 [style = bold, label=""];
10->34 [style = solid, label="zkHostExpression"];
35->16 [style = bold, label=""];
21->41 [style = dashed, label="0"];
24->22 [style = bold, label=""];
27->29 [style = bold, label=""];
33->30 [style = bold, label=""];
1->23 [style = solid, label="zkHost"];
38->10 [style = solid, label="expression"];
43->48 [style = solid, label="expression"];
51->49 [style = solid, label="nInt"];
14->23 [style = solid, label="zkHost"];
48->46 [style = bold, label=""];
16->31 [style = bold, label=""];
34->8 [style = bold, label=""];
16->31 [style = dotted, label="true"];
43->44 [style = solid, label="expression"];
29->52 [style = dashed, label="0"];
10->33 [style = bold, label=""];
49->50 [style = bold, label=""];
26->23 [style = solid, label="workersInt"];
28->6 [style = solid, label="expression"];
12->40 [style = bold, label=""];
8->39 [style = solid, label="zkHost"];
}
