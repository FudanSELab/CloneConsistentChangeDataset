digraph {
38 [style = filled, label = "!(first instanceof IntegerDistribution)@@@15@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "Object first = null@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "!(first instanceof IntegerDistribution)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
56 [style = filled, label = "return id.cumulativeProbability(predictOver.intValue())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Number predictOver = (Number)second@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "!(third instanceof Number)@@@35@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "!(second instanceof Number)@@@32@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a IntegerDistribution\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a Number\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "return realDistribution.probability(start.doubleValue(),end.doubleValue())@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a real or integer Distribution\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Number predictOver = (Number)second@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "null == second@@@12@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Object first@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Object second@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "third = values(2(@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "IntegerDistribution d = (IntegerDistribution)first@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "doWork['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
53 [style = filled, label = "first instanceof RealDistribution@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Number predictOver = (Number)second@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a IntegerDistributionm for probability at a specific value.\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
42 [style = filled, label = "IntegerDistribution d = (IntegerDistribution)first@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a Number\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the second value\",toExpression(constructingFactory)))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Number predictOver = (Number)second@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "return rd.cumulativeProbability(predictOver.doubleValue())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "doWork['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the first value, expecting a RealDistribution for probability ranges\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "!(second instanceof Number)@@@18@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "!(first instanceof AbstractRealDistribution)@@@29@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "first = values(0(@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Object second@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "second = values(1(@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Number start = (Number)second@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "values.length == 2@@@6@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "null == first@@@9@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "!(second instanceof Number)@@@12@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "values.length == 3@@@25@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "second = values(1(@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a Number\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "null == first@@@3@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "AbstractRealDistribution realDistribution = (AbstractRealDistribution)first@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "null == second@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "first = values(0(@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "!(first instanceof RealDistribution) && !(first instanceof IntegerDistribution)@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "IntegerDistribution id = (IntegerDistribution)first@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "Object values@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "doWork['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return d.probability(predictOver.intValue())@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - null found for the first value\",toExpression(constructingFactory)))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid expression %s - found type %s for the second value, expecting a Number\",toExpression(constructingFactory),first.getClass().getSimpleName()))@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "Number end = (Number)third@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "throw new IOException(\"The probability function expects 2 or 3 parameters\")@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "RealDistribution rd = (RealDistribution)first@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Object second = null@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "Object third = null@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->25 [style = solid, label="first"];
54->56 [style = bold, label=""];
53->54 [style = dotted, label="false"];
9->11 [style = bold, label=""];
4->53 [style = bold, label=""];
2->51 [style = bold, label=""];
11->33 [style = dashed, label="0"];
1->15 [style = dashed, label="0"];
50->55 [style = solid, label="first"];
24->41 [style = solid, label="second"];
17->35 [style = dotted, label="true"];
5->13 [style = solid, label="first"];
31->46 [style = solid, label="values"];
17->14 [style = dotted, label="true"];
10->3 [style = dotted, label="true"];
40->31 [style = dotted, label="true"];
53->52 [style = dotted, label="true"];
39->24 [style = bold, label=""];
40->15 [style = bold, label=""];
57->1 [style = bold, label=""];
7->48 [style = bold, label=""];
25->35 [style = bold, label=""];
23->46 [style = dotted, label="true"];
9->6 [style = bold, label=""];
5->1 [style = solid, label="first"];
19->44 [style = bold, label=""];
7->9 [style = bold, label=""];
12->2 [style = bold, label=""];
23->44 [style = dotted, label="true"];
20->16 [style = bold, label=""];
17->14 [style = bold, label=""];
33->42 [style = bold, label=""];
6->11 [style = bold, label=""];
7->35 [style = dashed, label="0"];
11->13 [style = bold, label=""];
29->43 [style = bold, label=""];
23->36 [style = bold, label=""];
35->38 [style = bold, label=""];
26->28 [style = bold, label=""];
27->33 [style = bold, label=""];
23->29 [style = dotted, label="true"];
21->35 [style = bold, label=""];
24->46 [style = bold, label=""];
39->44 [style = solid, label="first"];
25->21 [style = bold, label=""];
23->36 [style = dotted, label="false"];
25->21 [style = dotted, label="true"];
29->47 [style = bold, label=""];
17->20 [style = dotted, label="true"];
17->38 [style = dotted, label="true"];
48->49 [style = bold, label=""];
53->51 [style = dotted, label="true"];
53->52 [style = bold, label=""];
31->39 [style = solid, label="values"];
53->55 [style = dotted, label="false"];
23->41 [style = dotted, label="true"];
37->19 [style = dotted, label="true"];
23->43 [style = dotted, label="true"];
7->0 [style = bold, label=""];
47->43 [style = bold, label=""];
4->22 [style = dashed, label="0"];
17->16 [style = dotted, label="true"];
50->53 [style = solid, label="first"];
6->49 [style = dashed, label="0"];
41->30 [style = bold, label=""];
13->12 [style = bold, label=""];
9->48 [style = dashed, label="0"];
57->50 [style = dotted, label="true"];
6->27 [style = dashed, label="0"];
46->30 [style = solid, label="third"];
44->41 [style = bold, label=""];
1->8 [style = dotted, label="true"];
18->25 [style = bold, label=""];
0->48 [style = bold, label=""];
14->18 [style = bold, label=""];
17->23 [style = dotted, label="false"];
38->33 [style = bold, label=""];
10->1 [style = bold, label=""];
43->34 [style = bold, label=""];
17->33 [style = dotted, label="true"];
2->51 [style = dashed, label="0"];
23->24 [style = dotted, label="true"];
22->42 [style = bold, label=""];
1->8 [style = bold, label=""];
17->18 [style = dotted, label="true"];
5->54 [style = solid, label="second"];
38->27 [style = dotted, label="true"];
11->4 [style = bold, label=""];
4->13 [style = bold, label=""];
14->42 [style = solid, label="first"];
5->2 [style = solid, label="second"];
35->32 [style = bold, label=""];
38->27 [style = bold, label=""];
50->52 [style = solid, label="first"];
11->4 [style = dotted, label="true"];
7->0 [style = dotted, label="true"];
1->7 [style = bold, label=""];
5->7 [style = solid, label="second"];
17->23 [style = bold, label=""];
3->12 [style = solid, label="second"];
46->29 [style = bold, label=""];
23->39 [style = dotted, label="true"];
17->25 [style = dotted, label="true"];
17->42 [style = dotted, label="true"];
48->11 [style = bold, label=""];
13->53 [style = dashed, label="0"];
31->18 [style = solid, label="values"];
37->44 [style = bold, label=""];
23->45 [style = dotted, label="true"];
23->39 [style = bold, label=""];
28->17 [style = bold, label=""];
5->31 [style = dashed, label="0"];
31->14 [style = solid, label="values"];
53->2 [style = dotted, label="true"];
49->11 [style = bold, label=""];
18->35 [style = solid, label="second"];
33->22 [style = bold, label=""];
9->38 [style = dashed, label="0"];
53->55 [style = bold, label=""];
53->56 [style = dotted, label="false"];
0->9 [style = bold, label=""];
0->32 [style = dashed, label="0"];
42->20 [style = bold, label=""];
23->30 [style = dotted, label="true"];
52->2 [style = bold, label=""];
43->37 [style = bold, label=""];
9->6 [style = dotted, label="true"];
10->5 [style = dotted, label="true"];
43->34 [style = dotted, label="true"];
48->49 [style = dotted, label="true"];
31->24 [style = solid, label="values"];
8->7 [style = bold, label=""];
15->26 [style = bold, label=""];
11->53 [style = bold, label=""];
3->7 [style = solid, label="second"];
23->37 [style = dotted, label="true"];
32->38 [style = bold, label=""];
29->47 [style = dotted, label="true"];
34->37 [style = bold, label=""];
50->1 [style = solid, label="first"];
57->5 [style = dotted, label="true"];
37->19 [style = bold, label=""];
55->54 [style = bold, label=""];
33->22 [style = dotted, label="true"];
18->20 [style = solid, label="second"];
30->45 [style = bold, label=""];
35->32 [style = dotted, label="true"];
}
