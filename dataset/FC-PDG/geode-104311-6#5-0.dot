digraph {
21 [style = filled, label = "assertThat(serverState.getClasspath()).isEqualTo(getClassPath())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertThat(serverState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(locatorState.getJvmArguments()).isEqualTo(getJvmArguments())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(serverState.getUptime()).isGreaterThan(0)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(serverState.getStatus()).isEqualTo(ONLINE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(serverState.getMemberName()).isEqualTo(getUniqueName())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "statusWithPidReturnsOnlineWithDetails['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(serverState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(locatorState.getLogFile()).isEqualTo(getLogFile().getCanonicalPath())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(locatorState.getPid().intValue()).isEqualTo(readPidFile())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LocatorState locatorState = new Builder().setWorkingDirectory(getWorkingDirectoryPath()).build().status()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "statusWithWorkingDirectoryReturnsOnlineWithDetails['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(locatorState.getMemberName()).isEqualTo(getUniqueName())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(locatorState.getStatus()).isEqualTo(ONLINE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(serverState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(locatorState.getWorkingDirectory()).isEqualToIgnoringCase(getWorkingDirectoryPath())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "assertThat(serverState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(locatorState.getWorkingDirectory()).isEqualTo(getWorkingDirectoryPath())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "assertThat(locatorState.getHost()).isEqualTo(InetAddress.getLocalHost().getCanonicalHostName())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertThat(serverState.getLogFile()).isEqualTo(getLogFilePath())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "givenRunningLocator()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(locatorState.getJavaVersion()).isEqualTo(System.getProperty(\"java.version\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(serverState.getJvmArguments()).isEqualTo(getJvmArguments())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ServerState serverState = new Builder().setPid(localPid).build().status()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(locatorState.getUptime()).isGreaterThan(0)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(locatorState.getGemFireVersion()).isEqualTo(GemFireVersion.getGemFireVersion())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(serverState.getPid().intValue()).isEqualTo(localPid)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "statusWithWorkingDirectoryReturnsOnlineWithDetails['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertThat(locatorState.getClasspath()).isEqualTo(getClassPath())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "givenRunningServer()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
20->17 [style = bold, label=""];
4->16 [style = dashed, label="0"];
22->19 [style = bold, label=""];
28->20 [style = bold, label=""];
7->10 [style = bold, label=""];
3->27 [style = dashed, label="0"];
26->25 [style = bold, label=""];
8->6 [style = bold, label=""];
5->25 [style = dashed, label="0"];
2->9 [style = bold, label=""];
16->22 [style = bold, label=""];
0->20 [style = dashed, label="0"];
1->7 [style = bold, label=""];
9->23 [style = dashed, label="0"];
1->22 [style = dashed, label="0"];
6->18 [style = dashed, label="0"];
25->27 [style = bold, label=""];
11->0 [style = bold, label=""];
10->26 [style = dashed, label="0"];
13->12 [style = bold, label=""];
21->29 [style = bold, label=""];
10->5 [style = bold, label=""];
9->14 [style = dashed, label="0"];
3->2 [style = bold, label=""];
12->4 [style = bold, label=""];
13->21 [style = dashed, label="0"];
7->19 [style = dashed, label="0"];
19->26 [style = bold, label=""];
15->0 [style = bold, label=""];
6->13 [style = bold, label=""];
2->14 [style = bold, label=""];
0->8 [style = bold, label=""];
12->29 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
27->24 [style = bold, label=""];
4->1 [style = bold, label=""];
18->21 [style = bold, label=""];
2->24 [style = dashed, label="0"];
29->16 [style = bold, label=""];
17->18 [style = bold, label=""];
24->23 [style = bold, label=""];
}
