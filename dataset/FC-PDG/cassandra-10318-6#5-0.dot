digraph {
9 [style = filled, label = "return MockMessagingService.when(all(verb(Verb.REPAIR_REQ),payload(null))).respond(null)@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Function<PrepareConsistentRequest,UUID> sessionIdFunc@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "createPrepareSpy['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Collection<InetAddressAndPort> timeout@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return MockMessagingService.when(verb(Verb.FINALIZE_PROPOSE_MSG)).respond(null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "Collection<InetAddressAndPort> failed@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Collection<InetAddressAndPort> timeout@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Collection<InetAddressAndPort> failed@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return MockMessagingService.when(all(verb(Verb.REPAIR_REQ),payload(null))).respond(null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "createFinalizeSpy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Collection<InetAddressAndPort> failed@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "createFinalizeSpy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->3 [style = bold, label=""];
7->9 [style = bold, label=""];
4->5 [style = dotted, label="true"];
2->11 [style = dashed, label="0"];
3->6 [style = dashed, label="0"];
1->0 [style = dotted, label="true"];
7->10 [style = dotted, label="true"];
7->11 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
7->8 [style = dotted, label="true"];
3->9 [style = dashed, label="0"];
4->6 [style = bold, label=""];
4->2 [style = dotted, label="true"];
}
