digraph {
6 [style = filled, label = "LongPair position = new LongPair(0,99)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "set.remove(Range.open(new LongPair(0,99),new LongPair(0,105)))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),null)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "position = new LongPair(3,13)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(2,27),new LongPair(2,28))))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "set.add(Range.closed(new LongPair(0,98),new LongPair(0,99)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "gSet.add(Range.closed(new LongPair(4,12),new LongPair(4,20)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ConcurrentOpenLongPairRangeSet<LongPair> set = new ConcurrentOpenLongPairRangeSet<>(consumer)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),Range.closed(new LongPair(0,98),new LongPair(0,100)))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "set.add(Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "gSet.add(Range.closed(new LongPair(1,20),new LongPair(2,10)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "gSet.add(Range.closed(new LongPair(0,98),new LongPair(0,100)))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int count = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(3,11),new LongPair(3,20))))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "set.add(Range.closed(new LongPair(4,12),new LongPair(4,20)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),null)@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "gSet.add(Range.closed(new LongPair(0,101),new LongPair(1,5)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testRangeContaining['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "List<Range<LongPair>> ranges = set.asRanges()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "position = new LongPair(2,30)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertNull(set.rangeContaining(position.getKey(),position.getValue()))@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "set.add(Range.closed(new LongPair(1,10),new LongPair(1,15)))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertNull(set.rangeContaining(position.getKey(),position.getValue()))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "gSet.add(Range.closed(new LongPair(1,10),new LongPair(1,15)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "position = new LongPair(3,22)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testRangeContaining['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testDeleteWithAtMost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(set.rangeContaining(position.getKey(),position.getValue()),gSet.rangeContaining(position))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "set.add(Range.closed(new LongPair(1,20),new LongPair(2,10)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "set.remove(Range.atMost(new LongPair(2,27)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "com.google.common.collect.RangeSet<LongPair> gSet = TreeRangeSet.create()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "gSet.add(Range.closed(new LongPair(2,25),new LongPair(2,28)))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "set.add(Range.closed(new LongPair(0,100),new LongPair(1,5)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(ranges.get(count++),(Range.openClosed(new LongPair(4,11),new LongPair(4,20))))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "gSet.add(Range.closed(new LongPair(3,12),new LongPair(3,20)))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "set.add(Range.closed(new LongPair(2,25),new LongPair(2,28)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->22 [style = bold, label=""];
5->3 [style = bold, label=""];
22->26 [style = bold, label=""];
27->18 [style = bold, label=""];
33->35 [style = bold, label=""];
29->5 [style = bold, label=""];
35->39 [style = solid, label="count"];
13->24 [style = bold, label=""];
26->7 [style = bold, label=""];
28->10 [style = bold, label=""];
23->34 [style = dashed, label="0"];
7->12 [style = bold, label=""];
11->1 [style = bold, label=""];
27->19 [style = solid, label="position"];
33->35 [style = solid, label="count"];
8->33 [style = dashed, label="0"];
19->20 [style = bold, label=""];
20->28 [style = bold, label=""];
12->15 [style = bold, label=""];
35->39 [style = bold, label=""];
18->19 [style = bold, label=""];
31->2 [style = bold, label=""];
8->6 [style = bold, label=""];
1->0 [style = bold, label=""];
25->16 [style = bold, label=""];
17->23 [style = bold, label=""];
32->33 [style = bold, label=""];
6->35 [style = dashed, label="0"];
38->32 [style = bold, label=""];
20->10 [style = solid, label="position"];
3->9 [style = bold, label=""];
15->17 [style = bold, label=""];
0->14 [style = bold, label=""];
21->22 [style = bold, label=""];
23->13 [style = bold, label=""];
16->21 [style = bold, label=""];
37->34 [style = bold, label=""];
9->25 [style = bold, label=""];
6->11 [style = bold, label=""];
30->10 [style = bold, label=""];
2->27 [style = bold, label=""];
36->5 [style = bold, label=""];
14->2 [style = bold, label=""];
28->30 [style = dashed, label="0"];
17->37 [style = dashed, label="0"];
34->38 [style = bold, label=""];
24->8 [style = bold, label=""];
20->30 [style = bold, label=""];
15->37 [style = bold, label=""];
0->2 [style = solid, label="position"];
4->5 [style = bold, label=""];
32->33 [style = solid, label="count"];
6->1 [style = solid, label="position"];
0->31 [style = bold, label=""];
14->31 [style = dashed, label="0"];
}
