digraph {
19 [style = filled, label = "boolean testPagingState@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c1\",\"c2\",\"c3\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "ProtocolVersion protocolVersion@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "QueryPager pager = command.getPager(null,protocolVersion)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c6\",\"c7\",\"c8\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "ProtocolVersion protocolVersion@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c3\",\"c4\",\"c5\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertFalse(pager.isExhausted())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<FilteredPartition> partition = query(pager,3)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "partition = query(pager,3)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertFalse(pager.isExhausted())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ReadCommand command = sliceQuery(\"k0\",\"c1\",\"c8\",10)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c7\",\"c8\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "reversedSliceQueryTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "ReadCommand command = sliceQuery(\"k0\",\"c1\",\"c8\",true,10)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c4\",\"c5\",\"c6\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertRow(partition.get(0),\"k0\",\"c1\",\"c2\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "partition = query(pager,3,2)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "boolean testPagingState@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boolean testPagingState@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(pager.isExhausted())@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "pager = maybeRecreate(pager,command,testPagingState,protocolVersion)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "pager = maybeRecreate(pager,command,testPagingState,protocolVersion)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sliceQueryTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ProtocolVersion protocolVersion@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertFalse(pager.isExhausted())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertFalse(pager.isExhausted())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertFalse(pager.isExhausted())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "sliceQueryTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2->23 [style = dashed, label="0"];
18->7 [style = solid, label="pager"];
19->10 [style = solid, label="testPagingState"];
6->10 [style = solid, label="command"];
13->10 [style = bold, label=""];
3->25 [style = dashed, label="0"];
5->9 [style = bold, label=""];
9->24 [style = dashed, label="0"];
28->18 [style = solid, label="command"];
16->18 [style = solid, label="testPagingState"];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
10->1 [style = solid, label="pager"];
28->10 [style = solid, label="command"];
22->28 [style = bold, label=""];
6->18 [style = solid, label="command"];
27->18 [style = solid, label="protocolVersion"];
20->6 [style = bold, label=""];
28->12 [style = bold, label=""];
20->21 [style = dotted, label="true"];
17->10 [style = solid, label="protocolVersion"];
17->27 [style = dashed, label="0"];
17->21 [style = dashed, label="0"];
15->18 [style = bold, label=""];
12->5 [style = solid, label="pager"];
8->7 [style = bold, label=""];
2->13 [style = bold, label=""];
21->18 [style = solid, label="protocolVersion"];
26->10 [style = solid, label="testPagingState"];
14->16 [style = dotted, label="true"];
14->17 [style = dotted, label="true"];
6->28 [style = dashed, label="0"];
17->12 [style = solid, label="protocolVersion"];
12->4 [style = bold, label=""];
22->26 [style = dotted, label="true"];
23->13 [style = bold, label=""];
25->11 [style = bold, label=""];
9->15 [style = bold, label=""];
7->2 [style = bold, label=""];
0->1 [style = bold, label=""];
17->18 [style = solid, label="protocolVersion"];
5->24 [style = bold, label=""];
10->0 [style = bold, label=""];
26->18 [style = solid, label="testPagingState"];
7->23 [style = bold, label=""];
22->27 [style = dotted, label="true"];
12->18 [style = solid, label="pager"];
27->10 [style = solid, label="protocolVersion"];
21->10 [style = solid, label="protocolVersion"];
19->18 [style = solid, label="testPagingState"];
20->19 [style = dotted, label="true"];
18->8 [style = bold, label=""];
18->10 [style = solid, label="pager"];
16->10 [style = solid, label="testPagingState"];
4->5 [style = bold, label=""];
1->25 [style = bold, label=""];
14->6 [style = bold, label=""];
27->12 [style = solid, label="protocolVersion"];
21->12 [style = solid, label="protocolVersion"];
24->15 [style = bold, label=""];
6->12 [style = bold, label=""];
}
