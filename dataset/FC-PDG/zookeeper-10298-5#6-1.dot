digraph {
4 [style = filled, label = "main.start()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "testMetricsProviderConfiguration['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(\"Failed to establish zkclient connection!\",clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "main.join()@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertTrue(\"waiting for server down\",ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "final String configs = \"metricsProvider.className=\" + .getName() + \"\" + \"metricsProvider.httpPort=1234\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(clientConnected.await(CONNECTION_TIMEOUT,TimeUnit.MILLISECONDS),\"Failed to establish zkclient connection!\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "MetricsProviderWithConfiguration.httpPort.set(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "zk.close()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT),\"waiting for server being up\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "MainThread main = new MainThread(CLIENT_PORT,true,configs)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "clientConnected = new CountDownLatch(1)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "main.start()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(\"waiting for server being up\",ClientBase.waitForServerUp(\"127.0.0.1:\" + CLIENT_PORT,CONNECTION_TIMEOUT))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertTrue(ClientBase.waitForServerDown(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT),\"waiting for server down\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ClientBase.setupTestEnv()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ZooKeeper zk = new ZooKeeper(\"127.0.0.1:\" + CLIENT_PORT,ClientBase.CONNECTION_TIMEOUT,this)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "main.deleteDirs()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final int CLIENT_PORT = PortAssignment.unique()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "main.shutdown()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testStandalone['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "zk.create(\"/foo\",\"foobar\".getBytes(),Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1234,MetricsProviderWithConfiguration.httpPort.get())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testStandalone['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(new String(zk.getData(\"/foo\",null,null)),\"foobar\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
22->26 [style = bold, label=""];
1->4 [style = bold, label=""];
3->8 [style = solid, label="CLIENT_PORT"];
15->7 [style = bold, label=""];
5->20 [style = bold, label=""];
9->2 [style = bold, label=""];
25->13 [style = bold, label=""];
3->12 [style = solid, label="CLIENT_PORT"];
3->24 [style = solid, label="CLIENT_PORT"];
10->19 [style = bold, label=""];
12->17 [style = bold, label=""];
3->0 [style = solid, label="CLIENT_PORT"];
1->19 [style = dashed, label="0"];
22->26 [style = solid, label="configs"];
11->9 [style = bold, label=""];
26->4 [style = bold, label=""];
3->26 [style = solid, label="CLIENT_PORT"];
3->0 [style = bold, label=""];
3->5 [style = solid, label="CLIENT_PORT"];
5->16 [style = dashed, label="0"];
3->23 [style = bold, label=""];
0->10 [style = bold, label=""];
7->5 [style = bold, label=""];
3->1 [style = solid, label="CLIENT_PORT"];
23->22 [style = bold, label=""];
3->16 [style = solid, label="CLIENT_PORT"];
13->3 [style = bold, label=""];
24->21 [style = bold, label=""];
6->13 [style = bold, label=""];
3->19 [style = solid, label="CLIENT_PORT"];
7->16 [style = bold, label=""];
2->15 [style = bold, label=""];
12->14 [style = bold, label=""];
18->13 [style = bold, label=""];
4->12 [style = bold, label=""];
14->17 [style = dashed, label="0"];
14->8 [style = bold, label=""];
19->4 [style = bold, label=""];
20->24 [style = bold, label=""];
10->1 [style = bold, label=""];
8->11 [style = bold, label=""];
}
