digraph {
2 [style = filled, label = "JsonObject schema = getSchemaData(testName).getAsJsonObject()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "String testName = \"schemaWithUnion\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "schemaWithArrayIsNullable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String testName = \"schemaWithArrayIsNullable\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(avroSchemaToJsonElement(converter),expected)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "schemaWithUnion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "UnionConverter converter = new UnionConverter(new JsonSchema(schema),state)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "schemaWithArrayIsNullable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "JsonArray expected = getExpectedSchema(testName).getAsJsonArray()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ArrayConverter converter = new ArrayConverter(new JsonSchema(schema),state,null)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "ArrayConverter converter = new ArrayConverter(new JsonSchema(schema),state)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->10 [style = bold, label=""];
2->10 [style = solid, label="schema"];
0->6 [style = dashed, label="0"];
6->1 [style = solid, label="converter"];
4->2 [style = bold, label=""];
7->4 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
2->6 [style = solid, label="schema"];
0->10 [style = dashed, label="0"];
5->1 [style = solid, label="expected"];
6->1 [style = bold, label=""];
0->1 [style = solid, label="converter"];
10->1 [style = solid, label="converter"];
5->6 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
0->1 [style = bold, label=""];
4->8 [style = dashed, label="0"];
2->0 [style = solid, label="schema"];
10->1 [style = bold, label=""];
2->5 [style = bold, label=""];
}
