digraph {
17 [style = filled, label = "checkJoinNWay['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "int i = 0@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SqlNode parse = planner.parse(buf.toString())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "buf.append(i == 1? \"where\": \"and\").append(\" d\").append(i).append(\".\"deptno\" = d\").append(i - 1).append(\".\"deptno\"\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(toString(transform),containsString(\"EnumerableJoin(condition=(=($0, $5)(, joinType=(inner()\"))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "buf.append(i == 0? \"from \": \", \").append(\"\"depts\" as d\").append(i)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String expected@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkHeuristic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "buf.append(\"select *\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "RelNode convert = planner.rel(validate).rel@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "i < n@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(toString(transform),containsString(expected))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final StringBuilder buf = new StringBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RelNode convert = planner.convert(validate)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "RelNode transform = planner.transform(0,traitSet,convert)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SqlNode validate = planner.validate(parse)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,0))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "i < n@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String sql@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "i++@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "RelNode convert = planner.convert(validate)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "SqlNode parse = planner.parse(sql)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "checkHeuristic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "int i = 1@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String expected@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Planner planner = getPlanner(null,Programs.heuristicJoinOrder(Programs.RULE_SET,false,6))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "RelTraitSet traitSet = planner.getEmptyTraitSet().replace(EnumerableConvention.INSTANCE)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->7 [style = solid, label="transform"];
0->7 [style = solid, label="expected"];
10->8 [style = dotted, label="true"];
1->4 [style = bold, label=""];
10->12 [style = dotted, label="true"];
13->28 [style = dotted, label="true"];
20->26 [style = solid, label="traitSet"];
23->30 [style = bold, label=""];
3->1 [style = bold, label=""];
7->18 [style = dashed, label="0"];
2->3 [style = solid, label="validate"];
9->2 [style = bold, label=""];
11->1 [style = bold, label=""];
25->13 [style = bold, label=""];
20->26 [style = bold, label=""];
8->7 [style = solid, label="expected"];
21->15 [style = bold, label=""];
2->3 [style = bold, label=""];
31->24 [style = bold, label=""];
13->25 [style = dotted, label="true"];
22->31 [style = bold, label=""];
3->4 [style = solid, label="convert"];
12->9 [style = solid, label="sql"];
15->30 [style = bold, label=""];
5->0 [style = dotted, label="true"];
23->30 [style = solid, label="i"];
16->22 [style = bold, label=""];
30->21 [style = dotted, label="true"];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
4->7 [style = bold, label=""];
24->20 [style = bold, label=""];
2->11 [style = solid, label="validate"];
30->19 [style = bold, label=""];
19->25 [style = solid, label="i"];
27->13 [style = solid, label="n"];
30->21 [style = bold, label=""];
19->13 [style = solid, label="i"];
23->15 [style = solid, label="i"];
5->6 [style = bold, label=""];
11->4 [style = solid, label="convert"];
14->23 [style = bold, label=""];
19->13 [style = bold, label=""];
27->30 [style = solid, label="n"];
22->31 [style = solid, label="parse"];
24->26 [style = solid, label="convert"];
26->18 [style = solid, label="transform"];
29->14 [style = bold, label=""];
15->30 [style = solid, label="i"];
23->21 [style = solid, label="i"];
8->9 [style = solid, label="sql"];
28->25 [style = bold, label=""];
8->27 [style = dashed, label="0"];
1->4 [style = solid, label="traitSet"];
6->9 [style = bold, label=""];
5->8 [style = dotted, label="true"];
31->24 [style = solid, label="validate"];
17->29 [style = bold, label=""];
30->15 [style = dotted, label="true"];
9->2 [style = solid, label="parse"];
2->11 [style = bold, label=""];
17->27 [style = dotted, label="true"];
3->11 [style = dashed, label="0"];
13->28 [style = bold, label=""];
26->18 [style = bold, label=""];
25->13 [style = solid, label="i"];
15->21 [style = solid, label="i"];
}
