digraph {
30 [style = filled, label = "createRecord['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "mandatory.fromString(\"alpn\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Name label = Name.fromString(\"test.com.\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "HTTPSRecord record = new HTTPSRecord(label,DClass.IN,300,svcPriority,svcDomain,params)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(\"h1,h2\",record.getSvcParamValue(HTTPSRecord.ALPN).toString())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "createRecordDuplicateParam['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "alpn.fromString(\"h1,h2\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(svcPriority,record.getSvcPriority())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(\"h1,h2\",record.getSvcParamValue(HTTPSRecord.ALPN).toString())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "HTTPSRecord.ParameterIpv4Hint ipv4 = new HTTPSRecord.ParameterIpv4Hint()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertNull(record.getSvcParamValue(1234))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(svcDomain,record.getTargetName())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "List<HTTPSRecord.ParameterBase> params = Arrays.asList(mandatory,ipv4,alpn)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(Type.HTTPS,record.getType())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThrows(,null)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Options.unset(\"BINDTTL\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SVCBRecord.ParameterIpv4Hint ipv4 = new SVCBRecord.ParameterIpv4Hint()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Options.unset(\"noPrintIN\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "HTTPSRecord.ParameterAlpn alpn = new HTTPSRecord.ParameterAlpn()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Name svcDomain = Name.fromString(\"svc.test.com.\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createRecordDuplicateParam['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<SVCBRecord.ParameterBase> params = Arrays.asList(alpn,ipv4,alpn)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "alpn.fromString(\"h1,h2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(Arrays.asList(HTTPSRecord.MANDATORY,HTTPSRecord.ALPN,HTTPSRecord.IPV4HINT).toString(),record.getSvcParamKeys().toString())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "HTTPSRecord.ParameterMandatory mandatory = new HTTPSRecord.ParameterMandatory()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int svcPriority = 5@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SVCBRecord.ParameterAlpn alpn = new SVCBRecord.ParameterAlpn()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ipv4.fromString(\"1.2.3.4,5.6.7.8\")@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(\"alpn\",record.getSvcParamValue(HTTPSRecord.MANDATORY).toString())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(\"test.com.300INHTTPS5 svc.test.com. mandatory=alpn alpn=h1,h2 ipv4hint=1.2.3.4,5.6.7.8\",record.toString())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(label,record.getName())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25->23 [style = bold, label=""];
22->29 [style = bold, label=""];
0->19 [style = dashed, label="0"];
4->6 [style = bold, label=""];
5->19 [style = bold, label=""];
29->27 [style = bold, label=""];
0->4 [style = bold, label=""];
16->22 [style = solid, label="ipv4"];
28->12 [style = bold, label=""];
24->18 [style = bold, label=""];
19->28 [style = bold, label=""];
5->29 [style = solid, label="svcDomain"];
2->11 [style = bold, label=""];
2->5 [style = bold, label=""];
11->29 [style = solid, label="svcPriority"];
9->2 [style = bold, label=""];
30->2 [style = bold, label=""];
12->22 [style = solid, label="alpn"];
17->14 [style = bold, label=""];
7->22 [style = bold, label=""];
0->8 [style = solid, label="alpn"];
26->25 [style = bold, label=""];
27->24 [style = bold, label=""];
23->13 [style = bold, label=""];
5->0 [style = bold, label=""];
6->8 [style = solid, label="ipv4"];
19->22 [style = solid, label="mandatory"];
2->29 [style = solid, label="label"];
5->21 [style = solid, label="svcDomain"];
21->26 [style = bold, label=""];
12->3 [style = bold, label=""];
6->3 [style = bold, label=""];
6->16 [style = dashed, label="0"];
3->8 [style = bold, label=""];
22->29 [style = solid, label="params"];
18->21 [style = bold, label=""];
20->17 [style = bold, label=""];
8->7 [style = bold, label=""];
16->7 [style = bold, label=""];
3->16 [style = bold, label=""];
2->24 [style = solid, label="label"];
13->20 [style = bold, label=""];
14->15 [style = bold, label=""];
11->18 [style = solid, label="svcPriority"];
1->2 [style = bold, label=""];
8->10 [style = bold, label=""];
7->10 [style = dashed, label="0"];
11->5 [style = bold, label=""];
8->22 [style = dashed, label="0"];
}
