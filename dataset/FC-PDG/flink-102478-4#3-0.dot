digraph {
17 [style = filled, label = "runnable.run()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "MockEnvironment mockEnvironment = MockEnvironment.builder().build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "CheckpointFailureReason originalReason = CheckpointFailureReason.CHECKPOINT_DECLINED_INPUT_END_OF_STREAM@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "OperatorSnapshotFutures operatorSnapshotResult = new OperatorSnapshotFutures(DoneFuture.of(SnapshotResult.empty()),rawKeyedStateHandleFuture,DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "subtaskCheckpointCoordinator.notifyCheckpointAborted(checkpointId,operatorChain,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testNotifyCheckpointAbortedDuringAsyncPhase['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testNotifyCheckpointAbortedDuringAsyncPhase['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(0,subtaskCheckpointCoordinator.getAsyncCheckpointRunnableSize())@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final TestEnvironment environment = new TestEnvironment()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "long checkpointId = 42L@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Map<OperatorID,OperatorSnapshotFutures> snapshotsInProgress = new HashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final BlockingRunnableFuture rawKeyedStateHandleFuture = new BlockingRunnableFuture()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testDeclineAsyncCheckpoint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "subtaskCheckpointCoordinator.checkpointState(new CheckpointMetaData(checkpointId,System.currentTimeMillis()),CheckpointOptions.forCheckpointWithDefaultLocation(),new CheckpointMetricsBuilder(),operatorChain,null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SubtaskCheckpointCoordinatorImpl subtaskCheckpointCoordinator = (SubtaskCheckpointCoordinatorImpl)new MockSubtaskCheckpointCoordinatorBuilder().setEnvironment(mockEnvironment).setExecutor(Executors.newSingleThreadExecutor()).setUnalignedCheckpointEnabled(true).build()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(1,subtaskCheckpointCoordinator.getAsyncCheckpointRunnableSize())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final AsyncCheckpointRunnable runnable = createAsyncRunnable(snapshotsInProgress,environment,true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(rawKeyedStateHandleFuture.isCancelled())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertFalse(rawKeyedStateHandleFuture.isCancelled())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "rawKeyedStateHandleFuture.awaitRun()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "subtaskCheckpointCoordinator.getChannelStateWriter().start(checkpointId,CheckpointOptions.forCheckpointWithDefaultLocation())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "snapshotsInProgress.put(new OperatorID(),new OperatorSnapshotFutures(DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),DoneFuture.of(SnapshotResult.empty()),ExceptionallyDoneFuture.of(new CheckpointException(originalReason)),DoneFuture.of(SnapshotResult.empty())))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final OperatorChain<String,AbstractStreamOperator<String>> operatorChain = operatorChain(new CheckpointOperator(operatorSnapshotResult))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertSame(environment.getCause().getCheckpointFailureReason(),originalReason)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22->23 [style = solid, label="environment"];
12->5 [style = bold, label=""];
9->11 [style = bold, label=""];
0->12 [style = bold, label=""];
8->3 [style = bold, label=""];
21->20 [style = solid, label="originalReason"];
14->10 [style = bold, label=""];
5->14 [style = bold, label=""];
16->19 [style = bold, label=""];
7->8 [style = bold, label=""];
16->23 [style = solid, label="snapshotsInProgress"];
2->4 [style = bold, label=""];
22->23 [style = bold, label=""];
10->6 [style = bold, label=""];
3->2 [style = bold, label=""];
10->6 [style = solid, label="operatorSnapshotResult"];
13->7 [style = bold, label=""];
6->2 [style = solid, label="operatorChain"];
11->13 [style = bold, label=""];
12->14 [style = bold, label=""];
9->11 [style = solid, label="checkpointId"];
9->13 [style = solid, label="checkpointId"];
21->16 [style = bold, label=""];
23->17 [style = bold, label=""];
9->2 [style = solid, label="checkpointId"];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
18->21 [style = bold, label=""];
6->9 [style = bold, label=""];
19->22 [style = bold, label=""];
14->10 [style = solid, label="rawKeyedStateHandleFuture"];
6->13 [style = solid, label="operatorChain"];
17->20 [style = bold, label=""];
21->19 [style = solid, label="originalReason"];
}
