digraph {
16 [style = filled, label = "visitTableConstraintDef['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "result.setConstraintName((ConstraintSegment)visit(ctx.constraintClause().constraintName()))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "visitTableConstraint['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexName()))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "null != ctx.indexName()@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "return result@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return result@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "result.setReferencedTable((SimpleTableSegment)visit(ctx.tableConstraintOption().tableName()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "result.getPrimaryKeyColumns().addAll(((CollectionValue<ColumnSegment>)visit(ctx.tableConstraintOption().columnNames(0))).getValue())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "result.getIndexColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "null != ctx.checkConstraint()@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final TableConstraintDefContext ctx@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "visitTableConstraintDef['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "result.getIndexColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "null != ctx.constraintClause() && null != ctx.constraintClause().constraintName()@@@4@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "null != ctx.tableConstraintOption().primaryKey()@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "null != ctx.tableConstraintOption().FOREIGN()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexNameAndType().indexName()))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "result.getPrimaryKeyColumns().addAll(getKeyColumnsFromKeyListWithExpression(ctx.keyListWithExpression()))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "null != ctx.KEY() && null != ctx.PRIMARY()@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return result@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return result@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "result.setIndexName((IndexSegment)visit(ctx.indexNameAndType().indexName()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "null != ctx.indexNameAndType()@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return result@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final TableConstraintContext ctx@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "null != ctx.UNIQUE()@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "return result@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "result.setReferencedTable((SimpleTableSegment)visit(ctx.referenceDefinition()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "null != ctx.indexNameAndType()@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConstraintDefinitionSegment result = new ConstraintDefinitionSegment(ctx.getStart().getStartIndex(),ctx.getStop().getStopIndex())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "null != ctx.FOREIGN()@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0->2 [style = dotted, label="true"];
18->3 [style = bold, label=""];
11->25 [style = bold, label=""];
11->22 [style = bold, label=""];
13->21 [style = dotted, label="true"];
31->11 [style = bold, label=""];
11->20 [style = bold, label=""];
15->9 [style = bold, label=""];
6->4 [style = bold, label=""];
8->19 [style = bold, label=""];
19->5 [style = bold, label=""];
20->25 [style = dashed, label="0"];
15->18 [style = bold, label=""];
22->24 [style = bold, label=""];
13->0 [style = bold, label=""];
24->20 [style = bold, label=""];
11->30 [style = solid, label="result"];
5->1 [style = bold, label=""];
25->26 [style = bold, label=""];
28->26 [style = bold, label=""];
11->1 [style = solid, label="result"];
7->6 [style = bold, label=""];
19->15 [style = bold, label=""];
19->5 [style = dotted, label="true"];
23->11 [style = bold, label=""];
5->27 [style = dashed, label="0"];
22->20 [style = bold, label=""];
26->27 [style = bold, label=""];
3->13 [style = bold, label=""];
10->3 [style = bold, label=""];
2->17 [style = bold, label=""];
20->19 [style = bold, label=""];
11->4 [style = solid, label="result"];
15->4 [style = dotted, label="true"];
7->6 [style = dotted, label="true"];
25->28 [style = dotted, label="true"];
16->12 [style = dotted, label="true"];
25->28 [style = bold, label=""];
19->26 [style = dashed, label="0"];
22->24 [style = dotted, label="true"];
23->12 [style = dotted, label="true"];
7->4 [style = bold, label=""];
11->17 [style = solid, label="result"];
12->29 [style = dashed, label="0"];
18->10 [style = bold, label=""];
27->30 [style = bold, label=""];
14->8 [style = bold, label=""];
1->15 [style = bold, label=""];
0->17 [style = bold, label=""];
19->1 [style = dotted, label="true"];
31->29 [style = dotted, label="true"];
18->10 [style = dotted, label="true"];
14->28 [style = dashed, label="0"];
11->8 [style = solid, label="result"];
15->9 [style = dotted, label="true"];
15->7 [style = dotted, label="true"];
0->2 [style = bold, label=""];
20->8 [style = dotted, label="true"];
26->27 [style = dotted, label="true"];
21->0 [style = bold, label=""];
20->14 [style = bold, label=""];
26->30 [style = bold, label=""];
16->11 [style = bold, label=""];
11->10 [style = solid, label="result"];
4->18 [style = bold, label=""];
20->14 [style = dotted, label="true"];
13->21 [style = bold, label=""];
9->7 [style = bold, label=""];
}
