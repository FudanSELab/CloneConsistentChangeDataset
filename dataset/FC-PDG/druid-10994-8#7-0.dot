digraph {
35 [style = filled, label = "Map<String,Object> lookupMap = new HashMap<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "LookupReferencesManager lookupReferencesManager = new LookupReferencesManager(new LookupConfig(temporaryFolder.newFolder().getAbsolutePath()),mapper,druidLeaderClient,config)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertFalse(lookupReferencesManager.mainThread.isAlive())@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.destroy()).andReturn(true).once()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "LookupExtractorFactory lookupExtractorFactory = EasyMock.createMock()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "EasyMock.expect(druidLeaderClient.go(request)).andReturn(responseHolder)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(lookupExtractorFactory.start()).andReturn(true).once()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Thread.sleep(100)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "EasyMock.replay(lookupExtractorFactory)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRealModeWithMainThread['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "!Optional.of(testContainer).equals(lookupReferencesManager.get(\"test\"))@@@23@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Request request = new Request(HttpMethod.GET,new URL(\"http://localhost:1234/xx\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(ImmutableSet.of(\"test\",\"testMockForRealModeWithMainThread\"),lookupReferencesManager.getAllLookupNames())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testRealModeWithMainThread['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "Assert.assertEquals(Optional.empty(),lookupReferencesManager.get(\"test\"))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "StringFullResponseHolder responseHolder = new StringFullResponseHolder(HttpResponseStatus.OK,newEmptyResponse(),StandardCharsets.UTF_8).addChunk(strResult)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "lookupReferencesManager.get(\"test\").isPresent()@@@28@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "lookupMap.put(\"testMockForGetNotThere\",container)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "lookupMap.put(\"testMockForRealModeWithMainThread\",container)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertTrue(lookupReferencesManager.mainThread.isAlive())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Thread.sleep(100)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"test\"))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertNull(lookupReferencesManager.get(\"notThere\"))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "LookupExtractorFactoryContainer testContainer = new LookupExtractorFactoryContainer(\"0\",lookupExtractorFactory)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(config.getLookupTier()).andReturn(LOOKUP_TIER).anyTimes()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!testContainer.equals(lookupReferencesManager.get(\"test\"))@@@23@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "lookupReferencesManager.start()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String strResult = mapper.writeValueAsString(lookupMap)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "lookupReferencesManager.stop()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "lookupReferencesManager.add(\"test\",testContainer)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.replay(druidLeaderClient)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expect(druidLeaderClient.makeRequest(HttpMethod.GET,\"/druid/coordinator/v1/lookups/config/lookupTier?detailed=true\")).andReturn(request)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "lookupReferencesManager.remove(\"test\")@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "EasyMock.replay(config)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testGetNotThere['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "lookupReferencesManager.get(\"test\") != null@@@27@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
33->16 [style = bold, label=""];
16->18 [style = bold, label=""];
36->4 [style = solid, label="strResult"];
8->15 [style = bold, label=""];
17->19 [style = solid, label="request"];
29->30 [style = bold, label=""];
21->27 [style = bold, label=""];
26->10 [style = bold, label=""];
24->33 [style = dashed, label="0"];
35->9 [style = bold, label=""];
6->23 [style = bold, label=""];
26->29 [style = bold, label=""];
14->16 [style = solid, label="lookupExtractorFactory"];
32->2 [style = dotted, label="true"];
25->3 [style = bold, label=""];
14->23 [style = solid, label="lookupExtractorFactory"];
9->36 [style = bold, label=""];
0->15 [style = dashed, label="0"];
21->2 [style = dotted, label="true"];
5->9 [style = dashed, label="0"];
10->26 [style = bold, label=""];
10->29 [style = dashed, label="0"];
5->17 [style = bold, label=""];
22->13 [style = solid, label="responseHolder"];
32->2 [style = bold, label=""];
29->26 [style = dotted, label="true"];
14->1 [style = bold, label=""];
21->32 [style = dashed, label="0"];
21->2 [style = bold, label=""];
29->26 [style = bold, label=""];
3->9 [style = bold, label=""];
4->22 [style = solid, label="responseHolder"];
24->16 [style = bold, label=""];
20->4 [style = solid, label="request"];
30->11 [style = bold, label=""];
0->14 [style = bold, label=""];
23->24 [style = bold, label=""];
1->6 [style = bold, label=""];
23->33 [style = bold, label=""];
2->21 [style = bold, label=""];
15->0 [style = bold, label=""];
27->10 [style = bold, label=""];
11->7 [style = bold, label=""];
9->17 [style = solid, label="lookupMap"];
20->12 [style = bold, label=""];
35->36 [style = solid, label="lookupMap"];
18->32 [style = bold, label=""];
17->22 [style = solid, label="strResult"];
9->5 [style = bold, label=""];
10->26 [style = dotted, label="true"];
19->4 [style = bold, label=""];
2->32 [style = bold, label=""];
18->21 [style = bold, label=""];
28->27 [style = bold, label=""];
13->8 [style = bold, label=""];
12->19 [style = bold, label=""];
27->29 [style = bold, label=""];
31->3 [style = bold, label=""];
36->17 [style = bold, label=""];
34->35 [style = bold, label=""];
32->28 [style = bold, label=""];
16->18 [style = solid, label="testContainer"];
4->22 [style = bold, label=""];
22->13 [style = bold, label=""];
17->20 [style = bold, label=""];
10->11 [style = bold, label=""];
}
