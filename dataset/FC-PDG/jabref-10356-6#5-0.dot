digraph {
3 [style = filled, label = "simulateUpdateOnNoLongerExistingEntry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "BibEntry bibEntryOfClientB = clientContextB.getDatabase().getEntries().get(0)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "clientContextA.getDatabase().insertEntry(bibEntry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(clientContextB.getDatabase().getEntries().isEmpty())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(bibEntryOfClientB,eventListenerB.getSharedEntryNotPresentEvent().getBibEntry())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "BibEntry bibEntry = getBibEntryExample(1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "BibEntry bibEntryOfClientA = getBibEntryExample(1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(clientContextA.getDatabase().getEntries(),clientContextB.getDatabase().getEntries())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "bibEntryOfClientB.setField(StandardField.YEAR,\"2009\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "clientContextB.getDBMSSynchronizer().pullChanges()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertNotNull(eventListenerB.getSharedEntriesNotPresentEvent())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertFalse(clientContextB.getDatabase().getEntries().isEmpty())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "clientContextA.getDatabase().removeEntry(bibEntryOfClientA)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clientContextA.getDatabase().insertEntry(bibEntryOfClientA)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clientContextB.getDBMSSynchronizer().pullChanges()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "clientContextA.getDatabase().removeEntry(bibEntry)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(clientContextA.getDatabase().getEntries().isEmpty())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertNull(eventListenerB.getSharedEntriesNotPresentEvent())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertNotNull(eventListenerB.getSharedEntryNotPresentEvent())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertNull(eventListenerB.getSharedEntryNotPresentEvent())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(clientContextA.getDatabase().getEntries().isEmpty())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "simulateEntryDelitionAndManualPull['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertFalse(clientContextB.getDatabase().getEntries().isEmpty())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "simulateUpdateOnNoLongerExistingEntry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(bibEntryOfClientB,eventListenerB.getSharedEntriesNotPresentEvent().getBibEntries())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9->20 [style = dashed, label="0"];
7->23 [style = dashed, label="0"];
18->23 [style = bold, label=""];
22->19 [style = bold, label=""];
17->6 [style = bold, label=""];
7->10 [style = bold, label=""];
19->20 [style = bold, label=""];
8->15 [style = dashed, label="0"];
0->2 [style = bold, label=""];
4->15 [style = bold, label=""];
9->11 [style = solid, label="bibEntryOfClientB"];
3->6 [style = bold, label=""];
0->21 [style = bold, label=""];
1->0 [style = bold, label=""];
4->22 [style = dashed, label="0"];
18->23 [style = solid, label="bibEntry"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
24->18 [style = bold, label=""];
13->16 [style = bold, label=""];
6->18 [style = dashed, label="0"];
6->7 [style = solid, label="bibEntryOfClientA"];
5->16 [style = dashed, label="0"];
2->21 [style = dashed, label="0"];
21->22 [style = bold, label=""];
10->12 [style = bold, label=""];
15->9 [style = bold, label=""];
11->14 [style = dashed, label="0"];
8->9 [style = bold, label=""];
13->5 [style = bold, label=""];
6->2 [style = solid, label="bibEntryOfClientA"];
23->10 [style = bold, label=""];
9->14 [style = solid, label="bibEntryOfClientB"];
4->8 [style = bold, label=""];
16->14 [style = bold, label=""];
5->11 [style = bold, label=""];
6->7 [style = bold, label=""];
18->21 [style = solid, label="bibEntry"];
9->13 [style = bold, label=""];
}
