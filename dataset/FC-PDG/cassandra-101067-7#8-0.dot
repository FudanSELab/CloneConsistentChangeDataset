digraph {
10 [style = filled, label = "buildTree['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "buildTree['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.finish()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final long maxToken@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "final long minToken@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final SortedMap<Long,KeyOffsets> toks = new TreeMap<Long,KeyOffsets>(){}@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-get-test\",\"tt\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "TokenTreeBuilder builder@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "return new TokenTree(new MappedBuffer(reader))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "generateTree['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final RandomAccessReader reader = RandomAccessReader.open(treeFile)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "builder.finish()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "builder.write(writer)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "writer.sync()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final TokenTreeBuilder builder = isStatic? new StaticTokenTreeBuilder(new FakeCombinedTerm(toks)): new DynamicTokenTreeBuilder(toks)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "writer.sync()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final File treeFile = File.createTempFile(\"token-tree-\",\"db\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "treeFile.deleteOnExit()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "treeFile.deleteOnExit()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RandomAccessReader reader = null@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "{FileUtils.closeQuietly(reader)}@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "builder.write(writer)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "reader = RandomAccessReader.open(treeFile)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "boolean isStatic@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8->6 [style = solid, label="treeFile"];
24->12 [style = dotted, label="true"];
22->19 [style = bold, label=""];
18->11 [style = bold, label=""];
25->18 [style = bold, label=""];
25->15 [style = solid, label="treeFile"];
21->25 [style = bold, label=""];
10->9 [style = dotted, label="true"];
6->7 [style = solid, label="reader"];
24->14 [style = bold, label=""];
3->23 [style = dashed, label="0"];
8->1 [style = bold, label=""];
15->17 [style = bold, label=""];
14->13 [style = solid, label="toks"];
24->23 [style = dotted, label="true"];
5->6 [style = bold, label=""];
3->9 [style = dashed, label="0"];
0->4 [style = bold, label=""];
15->17 [style = solid, label="reader"];
24->20 [style = dotted, label="true"];
20->13 [style = solid, label="isStatic"];
6->19 [style = dashed, label="0"];
11->22 [style = bold, label=""];
10->4 [style = bold, label=""];
4->8 [style = bold, label=""];
8->25 [style = dashed, label="0"];
1->2 [style = bold, label=""];
0->3 [style = dotted, label="true"];
15->16 [style = solid, label="reader"];
14->13 [style = bold, label=""];
19->15 [style = bold, label=""];
6->7 [style = bold, label=""];
13->21 [style = bold, label=""];
17->16 [style = bold, label=""];
2->5 [style = bold, label=""];
}
