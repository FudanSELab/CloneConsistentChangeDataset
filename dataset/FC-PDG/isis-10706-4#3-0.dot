digraph {
7 [style = filled, label = "assertThat(title,is(\"Failed Title\"))@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<TitleComponent> components = Lists.transform(evaluators,TitleComponent.FROM_EVALUATORS)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "context.checking(new Expectations(){})@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final DomainObjectWithProblemInItsAnnotatedTitleMethod screwedPojo = new DomainObjectWithProblemInItsAnnotatedTitleMethod()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "titleThrowsException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final NormalDomainObject normalPojo = new NormalDomainObject()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(title,is(\"Normal Domain Object\"))@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final List<Method> methods = MethodFinderUtils.findMethodsWithAnnotation(,MethodScope.OBJECT,)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "titleThrowsException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final Sequence sequence = context.sequence(\"in-title-element-order\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final String title = facet.title(mockObjectAdapter,null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final String title = facet.title(mockObjectAdapter,null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TitleFacetViaTitleAnnotation facet = new TitleFacetViaTitleAnnotation(components,mockFacetHolder,mockAdapterManager)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final List<TitleComponent> components = Lists.transform(methods,TitleComponent.FROM_METHOD)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<Annotations.Evaluator<Title>> evaluators = Annotations.getEvaluators(,)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "final List<Method> methods = Arrays.asList(.getMethod(\"titleElement1\"),.getMethod(\"titleElement2\"),.getMethod(\"titleElement3\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "context.checking(new Expectations(){})@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testTitle['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
16->15 [style = bold, label=""];
8->10 [style = bold, label=""];
1->4 [style = bold, label=""];
6->8 [style = dashed, label="0"];
6->1 [style = solid, label="methods"];
5->7 [style = solid, label="title"];
4->17 [style = bold, label=""];
11->1 [style = bold, label=""];
0->2 [style = bold, label=""];
6->11 [style = dashed, label="0"];
3->6 [style = bold, label=""];
1->10 [style = dashed, label="0"];
9->8 [style = bold, label=""];
13->11 [style = bold, label=""];
1->4 [style = solid, label="components"];
11->1 [style = solid, label="methods"];
4->0 [style = bold, label=""];
6->1 [style = bold, label=""];
15->12 [style = solid, label="title"];
17->14 [style = bold, label=""];
10->4 [style = bold, label=""];
7->12 [style = dashed, label="0"];
5->7 [style = bold, label=""];
15->12 [style = bold, label=""];
8->10 [style = solid, label="evaluators"];
2->5 [style = bold, label=""];
10->4 [style = solid, label="components"];
}
