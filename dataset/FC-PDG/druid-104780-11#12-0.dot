digraph {
7 [style = filled, label = "TaskStatus taskStatus = TaskStatus.fromCode(getId(),state)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "throw new ISE(\"forceGuaranteedRollup is set but partitionsSpec (%s( is not a single_dim or hash partition spec.\",ingestionSchema.getTuningConfig().getPartitionsSpec())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "state.isSuccess()@@@47@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "TaskStatus taskStatus@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "state = runNextPhase(indexingRunner)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "runHashPartitionMultiPhaseParallel['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final ParallelIndexTaskRunner<SinglePhaseSubTask,PushedSegmentsReport> runner = createRunner(toolbox,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "state = runNextPhase(mergeRunner)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final ParallelIndexTaskRunner<PartialGenericSegmentMergeTask,PushedSegmentsReport> mergeRunner = createRunner(toolbox,null)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "intervalToNumShards = determineNumShardsFromCardinalityReport(cardinalityRunner.getReports().values(),effectiveMaxRowsPerSegment)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "waitForSegmentAvailability(runner.getReports())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TaskToolbox toolbox@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "return taskStatus@@@13@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "state.isSuccess()@@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "waitForSegmentAvailability(mergeRunner.getReports())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "LOG.warn(msg)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "state.isFailure()@@@39@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "intervalToNumShards = CollectionUtils.mapValues(mergeCardinalityReports(cardinalityRunner.getReports().values()),null)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "TaskToolbox toolbox@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "ParallelIndexIngestionSpec ingestionSchemaToUse = ingestionSchema@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int effectiveMaxRowsPerSegment = partitionsSpec.getMaxRowsPerSegment() == null? PartitionsSpec.DEFAULT_MAX_ROWS_PER_SEGMENT: partitionsSpec.getMaxRowsPerSegment()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ParallelIndexTaskRunner<PartialHashSegmentGenerateTask,GeneratedPartitionsReport<GenericPartitionStat>> indexingRunner = createRunner(toolbox,null)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "LOG.info(\"effective maxRowsPerSegment is: \" + effectiveMaxRowsPerSegment)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "cardinalityRunner.getReports().isEmpty()@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final boolean needsInputSampling = partitionsSpec.getNumShards() == null || ingestionSchemaToUse.getDataSchema().getGranularitySpec().inputIntervals().isEmpty()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "return TaskStatus.success(getId(),msg)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "ParallelIndexTaskRunner<PartialDimensionCardinalityTask,DimensionCardinalityReport> cardinalityRunner = createRunner(toolbox,null)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "taskStatus = TaskStatus.failure(getId(),errorMessage)@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "runSinglePhaseParallel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Preconditions.checkState(state.isFailure(),\"Unrecognized state after task is complete(%s(\",state)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "needsInputSampling@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "Map<Pair<Interval,Integer>,List<GenericPartitionLocation>> partitionToLocations = groupGenericPartitionLocationsPerPartition(indexingRunner.getReports())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "taskStatus = TaskStatus.success(getId())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "partitionsSpec.getNumShards() == null@@@23@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "intervalToNumShards = null@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "return TaskStatus.failure(getId())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "return taskStatus@@@55@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HashedPartitionsSpec partitionsSpec = (HashedPartitionsSpec)ingestionSchema.getTuningConfig().getPartitionsSpec()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final TaskState state = runNextPhase(runner)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final ParallelIndexIngestionSpec segmentCreateIngestionSpec = ingestionSchemaToUse@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "return TaskStatus.failure(getId())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "TaskStatus taskStatus = TaskStatus.fromCode(getId(),state)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "final List<PartialGenericSegmentMergeIOConfig> ioConfigs = createGenericMergeIOConfigs(ingestionSchema.getTuningConfig().getTotalNumMergeTasks(),partitionToLocations)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "state.isFailure()@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "TaskState state@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "runSinglePhaseParallel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "state = runNextPhase(cardinalityRunner)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "publishSegments(toolbox,mergeRunner.getReports())@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!(ingestionSchema.getTuningConfig().getPartitionsSpec() instanceof HashedPartitionsSpec)@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final String errorMessage = StringUtils.format(TASK_PHASE_FAILURE_MSG,runner.getName())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "awaitSegmentAvailabilityTimeoutMillis > 0@@@49@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "LOG.info(\"Needs to determine intervals or numShards, beginning %s phase.\",PartialDimensionCardinalityTask.TYPE)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "String msg = \"No valid rows for hash partitioning.\" + \" All rows may have invalid timestamps or have been filtered out.\"@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "ingestionSchemaToUse = rewriteIngestionSpecWithIntervalsIfMissing(ingestionSchemaToUse,intervalToNumShards.keySet())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "final ParallelIndexIngestionSpec segmentMergeIngestionSpec = ingestionSchemaToUse@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return taskStatus@@@19@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "publishSegments(toolbox,runner.getReports())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final Map<Interval,Integer> intervalToNumShards@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "toolbox.getTaskReportFileWriter().write(getId(),getTaskCompletionReports(taskStatus,segmentAvailabilityConfirmationCompleted))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3->10 [style = bold, label=""];
38->56 [style = bold, label=""];
24->32 [style = bold, label=""];
54->21 [style = bold, label=""];
27->52 [style = solid, label="toolbox"];
48->23 [style = dotted, label="true"];
32->58 [style = solid, label="ingestionSchemaToUse"];
9->5 [style = dotted, label="true"];
27->33 [style = solid, label="toolbox"];
27->50 [style = solid, label="toolbox"];
12->11 [style = solid, label="taskStatus"];
36->50 [style = bold, label=""];
56->42 [style = bold, label=""];
21->43 [style = dotted, label="true"];
8->4 [style = solid, label="runner"];
35->58 [style = solid, label="ingestionSchemaToUse"];
20->46 [style = bold, label=""];
21->43 [style = bold, label=""];
55->29 [style = bold, label=""];
56->42 [style = dotted, label="true"];
36->47 [style = bold, label=""];
1->16 [style = dotted, label="false"];
6->12 [style = bold, label=""];
23->38 [style = bold, label=""];
1->14 [style = dotted, label="false"];
17->8 [style = bold, label=""];
53->60 [style = bold, label=""];
49->33 [style = bold, label=""];
31->44 [style = dotted, label="true"];
48->31 [style = dotted, label="true"];
46->48 [style = solid, label="needsInputSampling"];
23->56 [style = bold, label=""];
35->22 [style = bold, label=""];
47->45 [style = bold, label=""];
1->2 [style = bold, label=""];
35->32 [style = solid, label="ingestionSchemaToUse"];
16->13 [style = solid, label="taskStatus"];
56->57 [style = dotted, label="true"];
4->15 [style = solid, label="state"];
31->44 [style = bold, label=""];
12->13 [style = solid, label="taskStatus"];
55->29 [style = dotted, label="true"];
34->28 [style = bold, label=""];
0->29 [style = dashed, label="0"];
42->57 [style = solid, label="msg"];
7->10 [style = solid, label="taskStatus"];
0->7 [style = bold, label=""];
56->31 [style = bold, label=""];
22->41 [style = bold, label=""];
7->3 [style = solid, label="taskStatus"];
5->2 [style = solid, label="toolbox"];
44->60 [style = solid, label="effectiveMaxRowsPerSegment"];
51->23 [style = bold, label=""];
52->25 [style = bold, label=""];
4->7 [style = solid, label="state"];
50->55 [style = bold, label=""];
4->1 [style = bold, label=""];
6->0 [style = dotted, label="true"];
30->57 [style = bold, label=""];
22->41 [style = dotted, label="true"];
0->12 [style = bold, label=""];
16->11 [style = solid, label="taskStatus"];
40->61 [style = bold, label=""];
11->13 [style = bold, label=""];
59->51 [style = solid, label="cardinalityRunner"];
1->15 [style = bold, label=""];
48->59 [style = dotted, label="true"];
1->2 [style = dotted, label="true"];
36->55 [style = dotted, label="true"];
35->49 [style = solid, label="ingestionSchemaToUse"];
42->30 [style = solid, label="msg"];
17->5 [style = dotted, label="true"];
5->8 [style = solid, label="toolbox"];
22->19 [style = bold, label=""];
21->40 [style = bold, label=""];
14->16 [style = bold, label=""];
59->51 [style = bold, label=""];
25->36 [style = bold, label=""];
46->48 [style = bold, label=""];
52->25 [style = solid, label="mergeRunner"];
6->0 [style = bold, label=""];
44->53 [style = solid, label="effectiveMaxRowsPerSegment"];
7->3 [style = bold, label=""];
60->32 [style = bold, label=""];
29->47 [style = bold, label=""];
48->37 [style = bold, label=""];
15->14 [style = bold, label=""];
31->60 [style = dotted, label="true"];
43->40 [style = bold, label=""];
1->12 [style = dotted, label="true"];
31->24 [style = dotted, label="false"];
2->6 [style = bold, label=""];
44->53 [style = bold, label=""];
18->1 [style = bold, label=""];
48->56 [style = dotted, label="true"];
23->38 [style = dotted, label="true"];
1->7 [style = bold, label=""];
55->47 [style = bold, label=""];
16->11 [style = bold, label=""];
26->49 [style = bold, label=""];
40->61 [style = solid, label="partitionToLocations"];
4->18 [style = bold, label=""];
48->26 [style = dotted, label="false"];
61->58 [style = bold, label=""];
48->37 [style = dotted, label="true"];
47->45 [style = solid, label="taskStatus"];
1->15 [style = dotted, label="false"];
33->54 [style = bold, label=""];
28->35 [style = bold, label=""];
8->4 [style = bold, label=""];
48->51 [style = dotted, label="true"];
19->20 [style = bold, label=""];
32->49 [style = solid, label="ingestionSchemaToUse"];
57->31 [style = bold, label=""];
2->50 [style = dashed, label="0"];
5->27 [style = dashed, label="0"];
41->19 [style = bold, label=""];
1->6 [style = dotted, label="true"];
34->27 [style = dotted, label="true"];
58->52 [style = bold, label=""];
48->26 [style = bold, label=""];
27->59 [style = solid, label="toolbox"];
32->49 [style = bold, label=""];
48->32 [style = dotted, label="true"];
56->30 [style = dotted, label="true"];
25->47 [style = solid, label="state"];
12->11 [style = bold, label=""];
31->24 [style = bold, label=""];
9->8 [style = bold, label=""];
6->7 [style = bold, label=""];
37->59 [style = bold, label=""];
31->53 [style = dotted, label="true"];
45->39 [style = bold, label=""];
33->54 [style = solid, label="indexingRunner"];
36->50 [style = dotted, label="true"];
47->39 [style = solid, label="taskStatus"];
42->30 [style = bold, label=""];
14->16 [style = solid, label="errorMessage"];
}
