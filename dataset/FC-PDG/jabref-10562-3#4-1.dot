digraph {
4 [style = filled, label = "Path fileAfter = defaultFileFolder.resolve(\"test.pdf\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(new LinkedFile(\"\",\"Misc/1989/test.pdf\",\"\"))),entry.getField(StandardField.FILE))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(Files.exists(fileAfter))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertFalse(Files.exists(fileBefore))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(filePreferences.getFileDirPattern()).thenReturn(\"\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "when(filePreferences.getFileDirPattern()).thenReturn(\"(entrytype(/(year(/(auth(\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "movesFileWithSubdirectoryPattern['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Path fileAfter = defaultFileFolder.resolve(\"Misc\").resolve(\"1989\").resolve(\"test.pdf\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(filePreferences.getFileDirectoryPattern()).thenReturn(\"\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "cleanup.cleanup(entry)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "doesNotMoveFileWithEmptyFileDirPattern['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "doesNotMoveFileWithEmptyFileDirPattern['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(new LinkedFile(\"\",\"test.pdf\",\"\"))),entry.getField(StandardField.FILE))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
8->7 [style = bold, label=""];
6->4 [style = bold, label=""];
3->6 [style = bold, label=""];
2->12 [style = dashed, label="0"];
10->9 [style = bold, label=""];
11->12 [style = bold, label=""];
11->5 [style = solid, label="fileAfter"];
4->2 [style = bold, label=""];
4->5 [style = solid, label="fileAfter"];
4->11 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
12->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
2->1 [style = bold, label=""];
6->11 [style = bold, label=""];
7->6 [style = bold, label=""];
9->6 [style = bold, label=""];
}
