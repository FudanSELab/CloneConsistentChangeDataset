digraph {
15 [style = filled, label = "String dateString = \"2010-01-15T00:00:00.000Z\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SolrInputDocument d = processAdd(\"US-Pacific-parse-date-no-run-processor\",doc(f(\"id\",\"288\"),f(\"not_in_schema\",dateString)))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String dateStringUTC = \"2010-08-09T07:00:00.000Z\"@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "IndexSchema schema = h.getCore().getLatestSchema()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNull(schema.getFieldOrNull(\"not_in_schema\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNotNull(d)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testParseUSPacificDate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String frenchDateString = \"le vendredi 15 janvier 2010\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "SolrInputDocument d = processAdd(\"parse-french-date-UTC-defaultTimeZone-no-run-processor\",doc(f(\"id\",\"88\"),f(\"not_in_schema\",frenchDateString)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "DateTime dateTime = dateTimeFormatter.parseDateTime(dateString)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(d.getFieldValue(\"not_in_schema\") instanceof Date)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(d)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(dateTime.getMillis(),((Date)d.getFieldValue(\"not_in_schema\")).getTime())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testParseFrenchDate['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String dateString = \"8/9/2010\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DateTimeFormatter dateTimeFormatter = ISODateTimeFormat.dateTime()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(Instant.parse(\"2010-08-09T07:00:00.000Z\"),((Date)d.getFieldValue(\"not_in_schema\")).toInstant())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testParseUSPacificDate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->4 [style = bold, label=""];
5->12 [style = dashed, label="0"];
3->1 [style = bold, label=""];
2->1 [style = bold, label=""];
2->3 [style = bold, label=""];
5->9 [style = dashed, label="0"];
6->0 [style = bold, label=""];
16->17 [style = bold, label=""];
5->14 [style = bold, label=""];
15->16 [style = bold, label=""];
1->4 [style = solid, label="d"];
15->17 [style = solid, label="dateString"];
4->7 [style = bold, label=""];
11->15 [style = bold, label=""];
7->9 [style = bold, label=""];
7->5 [style = bold, label=""];
2->1 [style = solid, label="dateString"];
8->2 [style = bold, label=""];
3->5 [style = solid, label="dateStringUTC"];
13->5 [style = solid, label="d"];
11->13 [style = solid, label="frenchDateString"];
14->12 [style = bold, label=""];
10->0 [style = bold, label=""];
0->8 [style = bold, label=""];
13->5 [style = bold, label=""];
3->15 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
17->13 [style = bold, label=""];
8->11 [style = bold, label=""];
18->0 [style = bold, label=""];
}
