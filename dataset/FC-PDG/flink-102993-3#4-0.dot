digraph {
14 [style = filled, label = "DataStream<String> src = env.addSource(new NoOpSourceFunction()).name(\"source\").uid(\"source\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.createLocalEnvironment()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "env.setParallelism(4)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "src = env.addSource(new NoOpSourceFunction()).map(new NoOpMapFunction()).name(\"source\").uid(\"source\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(ids.contains(vertex.getID()))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DataStream<String> src = env.addSource(new NoOpSourceFunction())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "src.map(new NoOpMapFunction()).addSink(new NoOpSinkFunction()).name(\"sink0\").uid(\"sink0\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "env.disableOperatorChaining()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "src.map(new NoOpMapFunction()).keyBy(new NoOpKeySelector()).reduce(new NoOpReduceFunction()).addSink(new NoOpSinkFunction()).name(\"sink0\").uid(\"sink0\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "src.map(new NoOpMapFunction()).addSink(new NoOpSinkFunction())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "env.disableOperatorChaining()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "src.map(new NoOpMapFunction()).keyBy(new NoOpKeySelector()).reduce(new NoOpReduceFunction()).addSink(new NoOpSinkFunction()).name(\"sink1\").uid(\"sink1\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "testManualHashAssignment['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JobGraph jobGraph = env.getStreamGraph().getJobGraph()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Set<JobVertexID> ids = new HashSet<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "src.map(new NoOpMapFunction()).addSink(new NoOpSinkFunction())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "env.setParallelism(4)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "JobGraph newJobGraph = env.getStreamGraph().getJobGraph()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "src.map(new NoOpMapFunction()).addSink(new DiscardingSink<>())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "testNodeHashIdenticalNodes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testNodeHashIdenticalNodes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "src.map(new NoOpMapFunction()).addSink(new DiscardingSink<>())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "env = StreamExecutionEnvironment.createLocalEnvironment()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "src.map(new NoOpMapFunction()).addSink(new NoOpSinkFunction()).name(\"sink1\").uid(\"sink1\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertTrue(vertexIds.add(vertex.getID()))@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertNotEquals(jobGraph.getJobID(),newJobGraph.getJobID())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(ids.add(vertex.getID()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Set<JobVertexID> vertexIds = new HashSet<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "vertex.getName().endsWith(\"source\") || vertex.getName().endsWith(\"sink0\") || vertex.getName().endsWith(\"sink1\")@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->3 [style = bold, label=""];
0->9 [style = bold, label=""];
1->8 [style = bold, label=""];
18->23 [style = bold, label=""];
21->19 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->1 [style = bold, label=""];
17->9 [style = bold, label=""];
9->4 [style = bold, label=""];
12->11 [style = bold, label=""];
16->26 [style = bold, label=""];
8->12 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
11->9 [style = bold, label=""];
28->16 [style = bold, label=""];
0->17 [style = dashed, label="0"];
22->5 [style = bold, label=""];
19->24 [style = bold, label=""];
6->2 [style = bold, label=""];
16->26 [style = dotted, label="true"];
8->0 [style = bold, label=""];
20->18 [style = bold, label=""];
4->25 [style = dashed, label="0"];
26->16 [style = bold, label=""];
7->5 [style = bold, label=""];
10->5 [style = bold, label=""];
5->6 [style = bold, label=""];
23->21 [style = bold, label=""];
15->20 [style = bold, label=""];
9->25 [style = bold, label=""];
2->14 [style = bold, label=""];
27->17 [style = bold, label=""];
1->12 [style = bold, label=""];
25->15 [style = bold, label=""];
3->15 [style = dashed, label="0"];
8->27 [style = dashed, label="0"];
14->27 [style = bold, label=""];
13->28 [style = bold, label=""];
24->13 [style = bold, label=""];
}
