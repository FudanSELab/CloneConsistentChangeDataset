digraph {
11 [style = filled, label = "assertTrue(\"No Artifacts\",map.size() > 0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Artifact a = (Artifact)map.get(\"maven-test:t10-a\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "File pom0Basedir = pom0.getParentFile()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNull(\"dependencyManagement has overwritten the scope of the currently building child project\",project1.getArtifact().getScope())@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir().getCanonicalFile())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "File localRepo = getLocalRepositoryPath()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(\"Incorrect scope for \" + a.getDependencyConflictId(),a.getScope().equals(\"test\"))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "MavenProject project1 = getProjectWithDependencies(pom1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testDependencyManagementDoesNotOverrideScopeOfCurrentArtifact['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testDependencyManagementDoesNotOverrideScopeOfCurrentArtifact['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "testDependencyManagementOverridesTransitiveDependencyVersion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "Map map = project1.getArtifactMap()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(pom0Basedir,project1.getParent().getBasedir())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertNotNull(\"No artifacts\",map)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Artifact c = (Artifact)map.get(\"maven-test:t10-c\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "File pom1 = new File(pom0Basedir,\"p1/pom.xml\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File pom0 = new File(localRepo,\"p0/pom.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Artifact b = (Artifact)map.get(\"maven-test:t10-b\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(\"Set size should be 3, is \" + map.size(),map.size() == 3)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "MavenProject project0 = getProjectWithDependencies(pom0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(\"Incorrect scope for \" + b.getDependencyConflictId(),b.getScope().equals(\"runtime\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertNotNull(b)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "System.out.println(\"Project \" + project1.getId() + \" \" + project1)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(\"Incorrect scope for \" + c.getDependencyConflictId(),c.getScope().equals(\"runtime\"))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNotNull(c)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertNotNull(a)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "System.out.println(a.getScope())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20->12 [style = solid, label="c"];
7->1 [style = solid, label="pom0Basedir"];
6->0 [style = solid, label="localRepo"];
25->13 [style = bold, label=""];
12->21 [style = bold, label=""];
2->1 [style = bold, label=""];
19->20 [style = bold, label=""];
1->3 [style = bold, label=""];
24->17 [style = solid, label="map"];
10->3 [style = bold, label=""];
6->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
7->4 [style = bold, label=""];
7->10 [style = solid, label="pom0Basedir"];
16->19 [style = bold, label=""];
2->23 [style = solid, label="project1"];
2->10 [style = bold, label=""];
20->25 [style = bold, label=""];
11->18 [style = bold, label=""];
7->4 [style = solid, label="pom0Basedir"];
1->23 [style = bold, label=""];
9->6 [style = bold, label=""];
0->7 [style = bold, label=""];
16->25 [style = solid, label="a"];
14->26 [style = bold, label=""];
23->24 [style = bold, label=""];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
8->2 [style = bold, label=""];
19->13 [style = solid, label="b"];
24->17 [style = bold, label=""];
26->15 [style = bold, label=""];
0->8 [style = solid, label="pom0"];
4->2 [style = solid, label="pom1"];
4->8 [style = bold, label=""];
22->6 [style = bold, label=""];
21->14 [style = bold, label=""];
17->11 [style = bold, label=""];
18->16 [style = bold, label=""];
}
