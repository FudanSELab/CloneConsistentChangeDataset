digraph {
7 [style = filled, label = "testJsonSchema['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "client.closeQuietly()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "debug@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "OMap m = client.get(\"\").run().getBody().as()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "ObjectMap m = client.get(\"\").run().getBody().as()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "debug@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "System.err.println(s)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "System.err.println(m)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(s,s.startsWith(\"Example of a router resource page\"))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String s = x2.getObjectMap(\"info\").getString(\"description\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(\"helloWorld\",x(0(.getName())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ObjectMap x2 = jsonClient.options(\"\").run().getBody().as()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testJsonSchema['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "debug@@@5@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"Hello World\",x(0(.getDescription())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testHtmlStripped['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "ResourceDescription(( x = client.get(\"\").run().getBody().as()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = solid, label="s"];
8->10 [style = bold, label=""];
16->11 [style = bold, label=""];
3->1 [style = bold, label=""];
11->14 [style = bold, label=""];
1->2 [style = solid, label="m"];
1->15 [style = dashed, label="0"];
0->2 [style = bold, label=""];
1->0 [style = bold, label=""];
15->16 [style = bold, label=""];
2->4 [style = bold, label=""];
6->2 [style = solid, label="m"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
12->10 [style = bold, label=""];
8->12 [style = dotted, label="true"];
0->4 [style = bold, label=""];
9->15 [style = bold, label=""];
1->6 [style = dashed, label="0"];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
13->12 [style = solid, label="s"];
14->13 [style = bold, label=""];
0->2 [style = dotted, label="true"];
13->8 [style = bold, label=""];
8->12 [style = bold, label=""];
5->2 [style = dotted, label="true"];
}
