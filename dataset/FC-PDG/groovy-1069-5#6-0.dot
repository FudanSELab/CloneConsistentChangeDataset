digraph {
15 [style = filled, label = "HeadlessTestSupport.isHeadless()@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String base = \"org/codehaus/groovy/tools/groovydoc/testfiles/Builder\"@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "List<String> srcList = new ArrayList<String>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "MockOutputTool output = new MockOutputTool()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertNotNull(\"No GroovyDoc found for \" + base,abstractButtonPropertiesDoc)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "return@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "String base = \"groovy/xml/DOMBuilder\"@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "testPackageName['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(\"createBinding found in: \"\" + abstractButtonPropertiesDoc + \"\"\",!abstractButtonPropertiesDoc.contains(\"createBinding\"))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "srcList.add(base + \".java\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testPackageName['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "String base = \"groovy/swing/binding/AbstractButtonProperties\"@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "srcList.add(base + \".java\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<String> srcList = new ArrayList<String>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testAnonymousInnerClassMethodsNotIncluded['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "xmlTool.renderToOutput(output,MOCK_DIR)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String builderDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\")@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "MockOutputTool output = new MockOutputTool()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "String abstractButtonPropertiesDoc = output.getText(MOCK_DIR + \"/\" + base + \".html\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "xmlTool.add(srcList)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNotNull(\"No GroovyDoc found for \" + base,builderDoc)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(builderDoc.contains(\"<containingPackage name=\"org/codehaus/groovy/tools/groovydoc/testfiles\">org.codehaus.groovy.tools.groovydoc.testfiles</containingPackage>\"))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18->16 [style = solid, label="abstractButtonPropertiesDoc"];
1->0 [style = solid, label="domBuilderDoc"];
5->13 [style = dashed, label="0"];
2->19 [style = dashed, label="0"];
9->11 [style = bold, label=""];
1->14 [style = dashed, label="0"];
9->2 [style = bold, label=""];
15->21 [style = bold, label=""];
18->17 [style = solid, label="abstractButtonPropertiesDoc"];
2->0 [style = solid, label="base"];
2->3 [style = bold, label=""];
14->12 [style = solid, label="builderDoc"];
4->19 [style = bold, label=""];
0->16 [style = dashed, label="0"];
8->14 [style = bold, label=""];
11->12 [style = solid, label="base"];
1->18 [style = dashed, label="0"];
5->18 [style = bold, label=""];
1->0 [style = bold, label=""];
16->17 [style = bold, label=""];
0->12 [style = dashed, label="0"];
15->21 [style = dotted, label="true"];
4->1 [style = solid, label="srcList"];
0->5 [style = solid, label="output"];
7->8 [style = bold, label=""];
3->4 [style = bold, label=""];
19->8 [style = bold, label=""];
4->7 [style = bold, label=""];
2->3 [style = solid, label="base"];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
19->8 [style = solid, label="base"];
11->3 [style = bold, label=""];
11->3 [style = solid, label="base"];
14->12 [style = bold, label=""];
15->4 [style = bold, label=""];
9->4 [style = solid, label="srcList"];
2->11 [style = dashed, label="0"];
19->18 [style = solid, label="base"];
10->9 [style = bold, label=""];
19->16 [style = solid, label="base"];
2->1 [style = solid, label="base"];
6->9 [style = bold, label=""];
11->14 [style = solid, label="base"];
7->8 [style = solid, label="output"];
20->15 [style = bold, label=""];
0->5 [style = bold, label=""];
21->4 [style = bold, label=""];
18->16 [style = bold, label=""];
}
