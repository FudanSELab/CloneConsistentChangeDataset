digraph {
12 [style = filled, label = "assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromFilename(\"mykey.p12\"))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testFromPropertyValueOrFileName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.pem\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.p12\"))@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromPropertyValueOrFileName(\"PKCS12\",\"prod.key\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromPropertyValueOrFileName(\"\",\"prod.jks\"))@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromFilename(\"mykey.jks\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.p12\"))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.jks\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromFilename(\"mykey.pem\"))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testFromFilename['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromFilename(\"mykey.pem\"))@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.pem\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.PKCS12,KeyStoreFileType.fromFilename(\"mykey.p12\"))@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromFilename(\"/path/to/key/dir/mykey.jks\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testFromFilename['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.PEM,KeyStoreFileType.fromPropertyValueOrFileName(\"PEM\",\"prod.key\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromPropertyValueOrFileName(\"JKS\",\"prod.key\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(KeyStoreFileType.JKS,KeyStoreFileType.fromFilename(\"mykey.jks\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1->5 [style = bold, label=""];
14->16 [style = bold, label=""];
5->13 [style = dashed, label="0"];
16->15 [style = bold, label=""];
4->3 [style = bold, label=""];
6->8 [style = dashed, label="0"];
3->1 [style = bold, label=""];
3->7 [style = dashed, label="0"];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
1->9 [style = dashed, label="0"];
6->17 [style = dashed, label="0"];
6->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
10->7 [style = bold, label=""];
7->9 [style = bold, label=""];
15->17 [style = bold, label=""];
5->6 [style = bold, label=""];
1->16 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
13->8 [style = bold, label=""];
3->14 [style = dashed, label="0"];
5->15 [style = dashed, label="0"];
18->14 [style = bold, label=""];
8->12 [style = bold, label=""];
9->13 [style = bold, label=""];
}
