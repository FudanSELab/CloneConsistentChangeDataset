digraph {
0 [style = filled, label = "runJoinTopology(builder,expectedResults,false,rightTopic)@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldIncludeKeyInStreamOuterJoinResults['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "leftStream.outerJoin(rightStream,valueJoinerWithKey,joinWindows,streamJoined).to(outputTopic,Produced.with(Serdes.String(),Serdes.String()))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final List<KeyValue<String,String>> expectedResults = Collections.singletonList(KeyValue.pair(\"A\",\"A:5\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "shouldIncludeKeyInStreamLeftJoinResults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "runJoinTopology(builder,expectedResults,false,rightTopic)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "shouldIncludeKeyInStreamLeftJoinResults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "leftStream.leftJoin(rightStream,valueJoinerWithKey,joinWindows,streamJoined).to(outputTopic,Produced.with(Serdes.String(),Serdes.String()))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final List<KeyValue<String,String>> expectedResults = Arrays.asList(KeyValue.pair(\"A\",\"A:5\"))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
6->3 [style = bold, label=""];
2->0 [style = solid, label="expectedResults"];
2->0 [style = bold, label=""];
3->2 [style = bold, label=""];
0->5 [style = dashed, label="0"];
3->7 [style = dashed, label="0"];
4->5 [style = bold, label=""];
3->4 [style = bold, label=""];
7->2 [style = bold, label=""];
4->5 [style = solid, label="expectedResults"];
8->7 [style = bold, label=""];
2->4 [style = dashed, label="0"];
}
