digraph {
2 [style = filled, label = "zk.multi(Arrays.asList(createContainer,createChild,deleteChild))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ContainerManager containerManager = new ContainerManager(serverFactory.getZooKeeperServer().getZKDatabase(),serverFactory.getZooKeeperServer().firstProcessor,1,100)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "DataTree dataTree = serverFactory.getZooKeeperServer().getZKDatabase().getDataTree()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "zk.delete(\"/foo/bar\",-1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(dataTree.getContainers().size(),1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(completedContainerDeletions.tryAcquire(1,TimeUnit.SECONDS))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "assertTrue(completedContainerDeletions.tryAcquire(1,TimeUnit.SECONDS))@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "containerManager.checkContainers()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(dataTree.getContainers().size(),1)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "containerManager.checkContainers()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Thread.sleep(1000)@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(\"Container should have been deleted\",zk.exists(\"/foo\",false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Op deleteChild = Op.delete(\"/foo/bar\",-1)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "zk.multi(Collections.singletonList(createContainer))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testMultiWithContainer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testMultiWithContainer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Op createContainer = Op.create(\"/foo\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.CONTAINER)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createContainer = Op.create(\"/foo\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.CONTAINER)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testMultiWithContainerSimple['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Op createChild = Op.create(\"/foo/bar\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "createChild = Op.create(\"/foo/bar\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.PERSISTENT)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Thread.sleep(1000)@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNull(\"Container should have been deleted\",zk.exists(\"/foo\",false))@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "zk.multi(Arrays.asList(createContainer,createChild))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23->22 [style = bold, label=""];
7->8 [style = bold, label=""];
0->4 [style = bold, label=""];
2->7 [style = bold, label=""];
7->18 [style = bold, label=""];
17->19 [style = bold, label=""];
9->16 [style = bold, label=""];
18->13 [style = bold, label=""];
0->23 [style = solid, label="createContainer"];
11->9 [style = bold, label=""];
6->17 [style = bold, label=""];
10->11 [style = bold, label=""];
22->15 [style = bold, label=""];
4->1 [style = bold, label=""];
0->23 [style = bold, label=""];
14->2 [style = solid, label="deleteChild"];
9->2 [style = solid, label="createContainer"];
19->11 [style = bold, label=""];
3->0 [style = bold, label=""];
16->14 [style = bold, label=""];
8->13 [style = bold, label=""];
15->5 [style = bold, label=""];
1->15 [style = bold, label=""];
14->2 [style = bold, label=""];
5->12 [style = bold, label=""];
20->0 [style = bold, label=""];
21->0 [style = bold, label=""];
16->2 [style = solid, label="createChild"];
17->10 [style = bold, label=""];
12->6 [style = bold, label=""];
4->1 [style = solid, label="createChild"];
0->1 [style = solid, label="createContainer"];
}
