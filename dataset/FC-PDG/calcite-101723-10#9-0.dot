digraph {
2 [style = filled, label = "RexNode t = terms.get(i)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "simplifyOrTerms['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "allowedAsPredicateDuringOrSimplification(t)@@@21@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "RexNode t = terms.get(i)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Predicate.of(t) == null@@@8@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "RexSimplify simplify = this@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "terms.set(i,t2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "List<RexNode> terms@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final RexNode t2 = simplify.simplify(t,unknownAs)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "!allowedAsPredicateDuringOrSimplification(t)@@@8@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,terms.subList(i,i + 1)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "i < terms.size()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final RexNode inverse = simplify.simplify(rexBuilder.makeCall(SqlStdOperatorTable.IS_NOT_TRUE,t2),RexUnknownAs.UNKNOWN)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "simplify = simplify.withPredicates(newPredicates)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "List<RexNode> terms@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "RexUnknownAs unknownAs@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "i < terms.size()@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Predicate.of(t) != null@@@21@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final RexNode t = terms.get(i)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final RelOptPredicateList newPredicates = simplify.predicates.union(rexBuilder,RelOptPredicateList.of(rexBuilder,ImmutableList.of(inverse)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "simplifyAndTerms['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "terms.set(i,simplify.simplify(t,unknownAs))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "simplifyOrTerms['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Predicate.of(t) != null@@@19@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexNode t = terms.get(i)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "i++@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
32->24 [style = solid, label="unknownAs"];
16->31 [style = dashed, label="0"];
32->27 [style = solid, label="unknownAs"];
29->24 [style = solid, label="simplify"];
5->1 [style = dotted, label="true"];
1->5 [style = solid, label="i"];
2->15 [style = dotted, label="true"];
2->23 [style = dotted, label="true"];
26->19 [style = dotted, label="true"];
8->2 [style = dashed, label="0"];
9->10 [style = bold, label=""];
5->28 [style = bold, label=""];
31->29 [style = solid, label="newPredicates"];
3->27 [style = bold, label=""];
4->2 [style = solid, label="i"];
6->11 [style = solid, label="simplify"];
12->2 [style = bold, label=""];
19->24 [style = solid, label="i"];
3->5 [style = bold, label=""];
5->11 [style = dotted, label="true"];
5->0 [style = bold, label=""];
5->22 [style = dotted, label="true"];
4->15 [style = solid, label="i"];
26->24 [style = dotted, label="true"];
19->8 [style = solid, label="i"];
20->15 [style = solid, label="unknownAs"];
28->3 [style = bold, label=""];
5->29 [style = dotted, label="true"];
29->1 [style = bold, label=""];
26->4 [style = dotted, label="true"];
19->15 [style = solid, label="i"];
2->8 [style = dotted, label="true"];
18->13 [style = dotted, label="true"];
2->24 [style = solid, label="t"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
24->19 [style = bold, label=""];
21->20 [style = dotted, label="true"];
6->26 [style = solid, label="i"];
8->23 [style = bold, label=""];
17->6 [style = solid, label="newPredicates"];
6->19 [style = solid, label="i"];
26->2 [style = dotted, label="true"];
5->6 [style = dotted, label="true"];
27->31 [style = bold, label=""];
31->29 [style = bold, label=""];
3->22 [style = dashed, label="0"];
19->2 [style = bold, label=""];
4->2 [style = bold, label=""];
5->3 [style = dotted, label="true"];
0->28 [style = dashed, label="0"];
2->4 [style = bold, label=""];
22->5 [style = bold, label=""];
4->8 [style = solid, label="i"];
13->32 [style = dashed, label="0"];
21->9 [style = bold, label=""];
6->2 [style = solid, label="i"];
10->16 [style = solid, label="i"];
5->6 [style = bold, label=""];
19->26 [style = bold, label=""];
19->4 [style = solid, label="i"];
18->9 [style = bold, label=""];
30->32 [style = dotted, label="true"];
2->12 [style = dotted, label="true"];
11->17 [style = bold, label=""];
21->13 [style = dotted, label="true"];
28->27 [style = solid, label="t"];
22->14 [style = bold, label=""];
8->15 [style = solid, label="t"];
6->26 [style = bold, label=""];
4->24 [style = bold, label=""];
10->5 [style = solid, label="i"];
18->7 [style = dotted, label="true"];
20->14 [style = solid, label="unknownAs"];
12->23 [style = dashed, label="0"];
17->6 [style = bold, label=""];
5->31 [style = dotted, label="true"];
23->15 [style = bold, label=""];
10->0 [style = solid, label="i"];
9->15 [style = solid, label="simplify"];
10->1 [style = solid, label="i"];
30->9 [style = bold, label=""];
5->0 [style = dotted, label="true"];
28->3 [style = solid, label="t"];
13->14 [style = solid, label="unknownAs"];
5->19 [style = bold, label=""];
6->1 [style = bold, label=""];
10->5 [style = bold, label=""];
6->15 [style = solid, label="simplify"];
8->23 [style = solid, label="t"];
30->25 [style = dotted, label="true"];
2->4 [style = dotted, label="true"];
5->16 [style = dotted, label="true"];
5->27 [style = dotted, label="true"];
0->3 [style = solid, label="t"];
10->27 [style = solid, label="i"];
23->2 [style = bold, label=""];
5->28 [style = dotted, label="true"];
8->12 [style = bold, label=""];
1->28 [style = solid, label="i"];
5->17 [style = dotted, label="true"];
5->14 [style = dotted, label="true"];
10->28 [style = solid, label="i"];
1->27 [style = solid, label="i"];
16->11 [style = bold, label=""];
6->14 [style = solid, label="simplify"];
29->27 [style = solid, label="simplify"];
8->12 [style = solid, label="t"];
3->14 [style = bold, label=""];
12->15 [style = bold, label=""];
4->26 [style = bold, label=""];
11->17 [style = solid, label="inverse"];
1->31 [style = solid, label="i"];
6->24 [style = solid, label="i"];
19->26 [style = solid, label="i"];
14->27 [style = dashed, label="0"];
19->2 [style = solid, label="i"];
14->16 [style = solid, label="t2"];
1->16 [style = solid, label="i"];
9->24 [style = solid, label="simplify"];
1->0 [style = solid, label="i"];
10->31 [style = solid, label="i"];
26->2 [style = bold, label=""];
9->11 [style = solid, label="simplify"];
2->4 [style = solid, label="t"];
0->22 [style = bold, label=""];
15->4 [style = bold, label=""];
9->27 [style = solid, label="simplify"];
14->11 [style = solid, label="t2"];
0->14 [style = solid, label="t"];
2->8 [style = bold, label=""];
13->15 [style = solid, label="unknownAs"];
9->14 [style = solid, label="simplify"];
}
