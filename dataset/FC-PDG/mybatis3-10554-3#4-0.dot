digraph {
19 [style = filled, label = "user = iterator.next()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(iterator.hasNext())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Assertions.assertFalse(cursor.isOpen())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertEquals(2,cursor.getCurrentIndex())@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertNull(user)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertTrue(cursor.isConsumed())@@@22@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertFalse(cursor.isConsumed())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertNull(user)@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(\"Kate\",user.getName())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assertions.assertNull(user)@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "Assertions.assertNull(user)@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "Iterator<User> iterator = cursor.iterator()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(1,cursor.getCurrentIndex())@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "shouldRowBoundsCountNullItem['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertTrue(iterator.hasNext())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "shouldNullItemNotStopIteration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertTrue(iterator.hasNext())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "Assertions.assertEquals(2,cursor.getCurrentIndex())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "Assertions.assertFalse(iterator.hasNext())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(-1,cursor.getCurrentIndex())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertEquals(3,cursor.getCurrentIndex())@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "User user@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "shouldNullItemNotStopIteration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(cursor.isOpen())@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(iterator.hasNext())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assertions.assertTrue(cursor.isOpen())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(-1,cursor.getCurrentIndex())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "Cursor<User> cursor = mapper.getNullUsers(new RowBounds(1,2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Assertions.assertNull(user)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "user = iterator.next()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "user = iterator.next()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assertions.assertTrue(cursor.isConsumed())@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "Assertions.assertEquals(-1,cursor.getCurrentIndex())@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertFalse(iterator.hasNext())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,cursor.getCurrentIndex())@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertFalse(cursor.isOpen())@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(cursor.isOpen())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assertions.assertFalse(cursor.isOpen())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assertions.assertEquals(\"Kate\",user.getName())@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assertions.assertEquals(3,cursor.getCurrentIndex())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "Assertions.assertFalse(cursor.isConsumed())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "Assertions.assertTrue(iterator.hasNext())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "Assertions.assertEquals(1,cursor.getCurrentIndex())@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "user = iterator.next()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assertions.assertEquals(-1,cursor.getCurrentIndex())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertTrue(iterator.hasNext())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "Assertions.assertEquals(0,cursor.getCurrentIndex())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "assertNull(user)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "Cursor<User> cursor = mapper.getNullUsers(new RowBounds())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32->35 [style = bold, label=""];
27->38 [style = dashed, label="0"];
3->40 [style = dashed, label="0"];
20->52 [style = dashed, label="0"];
9->11 [style = bold, label=""];
29->30 [style = bold, label=""];
14->17 [style = bold, label=""];
3->16 [style = bold, label=""];
25->6 [style = bold, label=""];
1->44 [style = dashed, label="0"];
26->22 [style = bold, label=""];
22->4 [style = bold, label=""];
41->48 [style = bold, label=""];
21->26 [style = bold, label=""];
10->8 [style = bold, label=""];
1->21 [style = bold, label=""];
51->39 [style = bold, label=""];
2->13 [style = solid, label="user"];
18->32 [style = bold, label=""];
11->43 [style = dashed, label="0"];
44->47 [style = bold, label=""];
5->36 [style = bold, label=""];
13->14 [style = bold, label=""];
5->23 [style = solid, label="user"];
23->25 [style = bold, label=""];
17->5 [style = bold, label=""];
28->33 [style = dashed, label="0"];
48->49 [style = bold, label=""];
15->34 [style = dashed, label="0"];
36->41 [style = bold, label=""];
5->23 [style = bold, label=""];
35->44 [style = bold, label=""];
34->19 [style = bold, label=""];
46->24 [style = bold, label=""];
18->12 [style = bold, label=""];
12->1 [style = bold, label=""];
25->41 [style = dashed, label="0"];
24->20 [style = bold, label=""];
20->18 [style = bold, label=""];
29->27 [style = bold, label=""];
7->24 [style = bold, label=""];
52->18 [style = bold, label=""];
53->24 [style = bold, label=""];
16->45 [style = dashed, label="0"];
0->35 [style = dashed, label="0"];
19->38 [style = bold, label=""];
14->6 [style = bold, label=""];
29->10 [style = solid, label="user"];
17->39 [style = dashed, label="0"];
8->15 [style = bold, label=""];
47->42 [style = bold, label=""];
39->5 [style = bold, label=""];
12->32 [style = dashed, label="0"];
33->4 [style = bold, label=""];
29->30 [style = solid, label="user"];
6->48 [style = dashed, label="0"];
22->28 [style = bold, label=""];
4->29 [style = bold, label=""];
2->37 [style = solid, label="user"];
15->19 [style = bold, label=""];
45->2 [style = bold, label=""];
31->34 [style = bold, label=""];
10->30 [style = dashed, label="0"];
21->47 [style = dashed, label="0"];
30->31 [style = bold, label=""];
0->1 [style = bold, label=""];
29->10 [style = bold, label=""];
50->33 [style = bold, label=""];
38->40 [style = bold, label=""];
13->37 [style = dashed, label="0"];
42->50 [style = bold, label=""];
37->51 [style = bold, label=""];
27->3 [style = bold, label=""];
14->51 [style = dashed, label="0"];
9->49 [style = dashed, label="0"];
16->2 [style = bold, label=""];
12->0 [style = bold, label=""];
49->43 [style = bold, label=""];
22->50 [style = dashed, label="0"];
2->13 [style = bold, label=""];
23->36 [style = dashed, label="0"];
19->27 [style = bold, label=""];
24->52 [style = bold, label=""];
40->45 [style = bold, label=""];
26->42 [style = dashed, label="0"];
8->31 [style = dashed, label="0"];
6->9 [style = bold, label=""];
2->37 [style = bold, label=""];
5->36 [style = solid, label="user"];
28->4 [style = bold, label=""];
}
