digraph {
42 [style = filled, label = "final long expected@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "deadline.hasTimeLeft() && !success@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "executeValueQuery['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "final long expected = numElements * (numElements + 1L) / 2L@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "expected == value.f1@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "key++@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Deadline deadline = Deadline.now().plus(TEST_TIMEOUT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "Thread.sleep(RETRY_TIMEOUT)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CompletableFuture<ReducingState<Tuple2<Integer,Long>>> future = getKvState(deadline,client,jobId,\"jungle\",key,BasicTypeInfo.INT_TYPE_INFO,reducingState,false,executor)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testReducingState['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "success = true@@@33@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final JobGraph jobGraph = autoCancellableJob.getJobGraph()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertTrue(\"Did not succeed query\",success)@@@38@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertEquals(\"Key mismatch\",key,value.f0.intValue())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "final String queryableStateName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "success = true@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean success = false@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Thread.sleep(RETRY_TIMEOUT)@@@36@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "env.setParallelism(maxParallelism)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "boolean success = false@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "CompletableFuture<ValueState<Tuple2<Integer,Long>>> future = getKvState(deadline,client,jobId,queryableStateName,key,BasicTypeInfo.INT_TYPE_INFO,stateDescriptor,false,executor)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "env.setRestartStrategy(RestartStrategies.fixedDelayRestart(Integer.MAX_VALUE,1000L))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Thread.sleep(RETRY_TIMEOUT)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "clusterClient.setDetached(true)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "key++@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int key = 0@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "deadline.hasTimeLeft() && !success@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Tuple2<Integer,Long> value = future.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS).get()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DataStream<Tuple2<Integer,Long>> source = env.addSource(new TestAscendingValueSource(numElements))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "env.setStateBackend(stateBackend)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected == value.f1@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final Deadline deadline@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Tuple2<Integer,Long> value = future.get(deadline.timeLeft().toMillis(),TimeUnit.MILLISECONDS).value()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "int key = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "success = true@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final long numElements = 1024L@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(\"Key mismatch\",key,value.f0.intValue())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "clusterClient.submitJob(jobGraph,.getClassLoader())@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "key < maxParallelism@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "source.keyBy(new KeySelector<Tuple2<Integer,Long>,Integer>(){@Override public Integer getKey(Tuple2<Integer,Long> value){return value.f0}}).asQueryableState(\"jungle\",reducingState)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testReducingState['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "final JobID jobId = autoCancellableJob.getJobId()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final QueryableStateClient client@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "ClientUtils.submitJob(clusterClient,jobGraph)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "key < maxParallelism@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ReducingStateDescriptor<Tuple2<Integer,Long>> reducingState = new ReducingStateDescriptor<>(\"any\",new SumReduce(),source.getType())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertTrue(\"Did not succeed query\",success)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "final JobID jobId@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final ValueStateDescriptor<Tuple2<Integer,Long>> stateDescriptor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(\"Did not succeed query\",success)@@@39@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50->32 [style = bold, label=""];
0->1 [style = solid, label="reducingState"];
28->6 [style = bold, label=""];
33->50 [style = solid, label="key"];
18->30 [style = dashed, label="0"];
4->19 [style = solid, label="key"];
23->31 [style = solid, label="success"];
2->23 [style = dotted, label="true"];
47->37 [style = bold, label=""];
11->9 [style = bold, label=""];
41->38 [style = dotted, label="true"];
8->19 [style = solid, label="key"];
8->4 [style = dotted, label="true"];
21->2 [style = bold, label=""];
41->36 [style = dotted, label="true"];
2->23 [style = bold, label=""];
45->40 [style = dotted, label="true"];
19->16 [style = solid, label="key"];
30->28 [style = bold, label=""];
20->16 [style = bold, label=""];
37->50 [style = dotted, label="true"];
0->25 [style = bold, label=""];
1->21 [style = bold, label=""];
44->45 [style = solid, label="key"];
28->2 [style = solid, label="expected"];
26->15 [style = bold, label=""];
6->19 [style = solid, label="key"];
33->45 [style = bold, label=""];
39->46 [style = solid, label="jobId"];
8->20 [style = dotted, label="true"];
41->42 [style = dotted, label="true"];
8->4 [style = bold, label=""];
19->8 [style = solid, label="key"];
0->25 [style = solid, label="reducingState"];
14->11 [style = bold, label=""];
4->2 [style = solid, label="key"];
12->22 [style = bold, label=""];
8->31 [style = dotted, label="true"];
40->37 [style = bold, label=""];
48->46 [style = solid, label="client"];
44->46 [style = solid, label="key"];
38->46 [style = solid, label="deadline"];
11->16 [style = solid, label="deadline"];
19->20 [style = bold, label=""];
32->49 [style = bold, label=""];
9->28 [style = solid, label="numElements"];
34->33 [style = bold, label=""];
4->19 [style = bold, label=""];
23->10 [style = dotted, label="false"];
11->1 [style = solid, label="deadline"];
20->31 [style = bold, label=""];
37->46 [style = dotted, label="true"];
2->27 [style = dotted, label="false"];
41->48 [style = dotted, label="true"];
37->46 [style = bold, label=""];
5->6 [style = bold, label=""];
16->1 [style = dotted, label="true"];
3->7 [style = bold, label=""];
19->4 [style = dotted, label="true"];
1->46 [style = dashed, label="0"];
32->47 [style = dotted, label="true"];
25->26 [style = bold, label=""];
23->10 [style = bold, label=""];
2->27 [style = bold, label=""];
16->21 [style = dotted, label="true"];
19->21 [style = solid, label="key"];
44->45 [style = bold, label=""];
27->20 [style = bold, label=""];
23->24 [style = dotted, label="true"];
29->11 [style = bold, label=""];
8->19 [style = dotted, label="true"];
24->13 [style = solid, label="success"];
46->43 [style = bold, label=""];
16->13 [style = bold, label=""];
23->20 [style = bold, label=""];
49->37 [style = bold, label=""];
15->5 [style = solid, label="jobGraph"];
7->17 [style = bold, label=""];
15->30 [style = solid, label="jobGraph"];
41->35 [style = dotted, label="true"];
45->34 [style = dotted, label="true"];
47->34 [style = solid, label="success"];
44->33 [style = solid, label="key"];
40->34 [style = solid, label="success"];
4->1 [style = solid, label="key"];
35->46 [style = solid, label="queryableStateName"];
6->16 [style = solid, label="key"];
37->43 [style = dotted, label="true"];
17->0 [style = bold, label=""];
20->1 [style = dotted, label="true"];
10->16 [style = bold, label=""];
6->23 [style = solid, label="expected"];
16->1 [style = bold, label=""];
37->32 [style = dotted, label="true"];
33->45 [style = solid, label="key"];
9->17 [style = solid, label="numElements"];
4->20 [style = bold, label=""];
33->46 [style = solid, label="key"];
20->13 [style = solid, label="success"];
9->12 [style = bold, label=""];
31->19 [style = bold, label=""];
45->40 [style = bold, label=""];
9->6 [style = solid, label="numElements"];
21->43 [style = dashed, label="0"];
43->50 [style = bold, label=""];
16->2 [style = dotted, label="true"];
8->19 [style = bold, label=""];
19->20 [style = dotted, label="true"];
36->46 [style = solid, label="stateDescriptor"];
45->37 [style = dotted, label="true"];
19->13 [style = dotted, label="true"];
15->30 [style = bold, label=""];
20->21 [style = dotted, label="true"];
32->49 [style = dotted, label="false"];
45->33 [style = dotted, label="true"];
41->39 [style = dotted, label="true"];
15->18 [style = bold, label=""];
16->23 [style = dotted, label="true"];
4->31 [style = solid, label="success"];
19->8 [style = bold, label=""];
8->4 [style = solid, label="key"];
22->3 [style = bold, label=""];
24->16 [style = bold, label=""];
8->1 [style = solid, label="key"];
6->21 [style = solid, label="key"];
23->24 [style = bold, label=""];
32->47 [style = bold, label=""];
6->8 [style = solid, label="key"];
18->5 [style = bold, label=""];
37->34 [style = bold, label=""];
6->8 [style = bold, label=""];
19->16 [style = dotted, label="true"];
20->2 [style = dotted, label="true"];
8->2 [style = solid, label="key"];
26->1 [style = solid, label="jobId"];
41->44 [style = bold, label=""];
26->16 [style = solid, label="jobId"];
44->50 [style = solid, label="key"];
13->4 [style = bold, label=""];
42->32 [style = solid, label="expected"];
20->16 [style = dotted, label="true"];
0->16 [style = solid, label="reducingState"];
}
