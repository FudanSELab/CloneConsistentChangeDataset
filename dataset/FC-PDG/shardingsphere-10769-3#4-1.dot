digraph {
3 [style = filled, label = "!duplicateBindingTables.isEmpty()@@@5@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "!duplicateBindingTables.isEmpty()@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "throw new DuplicateBindingTablesException(duplicateBindingTables)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final AlterShardingBindingTableRulesStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "checkToBeAlteredDuplicateBindingTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collection<String> toBeCreatedBindingTables = new HashSet<>()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(null).collect(Collectors.toSet())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "checkToBeAlteredDuplicateBindingTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final CreateShardingBindingTableRulesStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "checkToBeCreatedDuplicateBindingTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "duplicateBindingTables.addAll(getCurrentBindingTables(currentRuleConfig).stream().filter(null).collect(Collectors.toSet()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Collection<String> duplicateBindingTables = sqlStatement.getBindingTables().stream().filter(null).collect(Collectors.toSet())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Collection<String> toBeAlteredBindingTables = new HashSet<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final AlterShardingBindingTableRulesStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
5->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
3->1 [style = bold, label=""];
11->12 [style = bold, label=""];
2->7 [style = dashed, label="0"];
1->13 [style = bold, label=""];
14->10 [style = dotted, label="true"];
5->1 [style = solid, label="duplicateBindingTables"];
2->10 [style = dashed, label="0"];
1->13 [style = dotted, label="true"];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
0->4 [style = bold, label=""];
12->8 [style = bold, label=""];
6->7 [style = dotted, label="true"];
14->9 [style = dotted, label="true"];
0->2 [style = dotted, label="true"];
4->11 [style = dashed, label="0"];
12->13 [style = solid, label="duplicateBindingTables"];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
3->1 [style = dotted, label="true"];
}
