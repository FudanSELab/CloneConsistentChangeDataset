digraph {
29 [style = filled, label = "assertThat(metrics.get(MetricNames.PENDING_RECORDS),isGauge(equalTo(pendingRecords)))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int parallelism@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<OperatorMetricGroup> groups = reporter.findOperatorMetricGroups(\"MetricTestingSource\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(metrics.get(MetricNames.WATERMARK_LAG),nullValue())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "long processedRecordsPerSubtask@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(metrics.get(MetricNames.CURRENT_EMIT_EVENT_TIME_LAG),isGauge(isCloseTo(EVENTTIME_LAG,EVENTTIME_EPSILON)))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(watermarkLag,isCloseTo(WATERMARK_LAG,WATERMARK_EPSILON))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "long pendingRecords = numTotalPerSubtask - processedRecordsPerSubtask@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "long numTotalPerSubtask@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(group.getIOMetricGroup().getNumBytesInCounter(),isCounter(equalTo(processedRecordsPerSubtask * MockRecordEmitter.RECORD_SIZE_IN_BYTES)))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "group.getIOMetricGroup().getNumRecordsOutCounter().getCount() == 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertThat(group.getIOMetricGroup().getNumRecordsOutCounter(),isCounter(equalTo(processedRecordsPerSubtask)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "boolean hasTimestamps@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertSourceMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "assertSinkMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(metrics.get(MetricNames.PENDING_BYTES),isGauge(equalTo(pendingRecords * MockRecordEmitter.RECORD_SIZE_IN_BYTES)))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "boolean hasTimestamps@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int numSplits@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(group.getIOMetricGroup().getNumBytesOutCounter(),isCounter(equalTo(processedRecordsPerSubtask * MetricWriter.RECORD_SIZE_IN_BYTES)))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(metrics.get(MetricNames.WATERMARK_LAG),isGauge(isCloseTo(EVENTTIME_LAG,EVENTTIME_EPSILON)))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "long processedRecordsPerSubtask@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertSourceMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(metrics.get(MetricNames.SOURCE_IDLE_TIME),isGauge(equalTo(0L)))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "long processedRecordsPerSubtask@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "hasTimestamps@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertThat(metrics.get(MetricNames.CURRENT_EMIT_EVENT_TIME_LAG),isGauge(equalTo(InternalSourceReaderMetricGroup.UNDEFINED)))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "int parallelism@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(group.getIOMetricGroup().getNumRecordsInCounter(),isCounter(equalTo(processedRecordsPerSubtask)))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(subtaskWithMetrics,equalTo(numSplits))@@@32@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "int subtaskWithMetrics = 0@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(groups,hasSize(parallelism))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "int numSplits@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(metrics.get(MetricNames.NUM_RECORDS_IN_ERRORS),isCounter(equalTo(processedRecordsPerSubtask / 2)))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "List<OperatorMetricGroup> groups = reporter.findOperatorMetricGroups(\"MetricTestSink\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(metrics.get(MetricNames.NUM_RECORDS_OUT_ERRORS),isCounter(equalTo((processedRecordsPerSubtask + 1) / 2)))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Map<String,Metric> metrics = reporter.getMetricsByGroup(group)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int numSplits@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "assertThat(metrics.get(MetricNames.CURRENT_EMIT_EVENT_TIME_LAG),nullValue())@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "InMemoryReporter reporter@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "assertThat(metrics.get(MetricNames.CURRENT_SEND_TIME),isGauge(equalTo((processedRecordsPerSubtask - 1) * MetricWriter.BASE_SEND_TIME)))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "subtaskWithMetrics++@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(metrics.get(MetricNames.CURRENT_EMIT_EVENT_TIME_LAG),nullValue())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertThat(metrics.get(MetricNames.WATERMARK_LAG),nullValue())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "long numTotalPerSubtask@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertThat(metrics.get(MetricNames.CURRENT_EMIT_EVENT_TIME_LAG),isGauge(equalTo(InternalSourceReaderMetricGroup.UNDEFINED)))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertThat(subtaskWithMetrics,equalTo(numSplits))@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "group.getIOMetricGroup().getNumRecordsInCounter().getCount() == 0@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int parallelism@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Long watermarkLag = ((Gauge<Long>)metrics.get(MetricNames.WATERMARK_LAG)).getValue() - ((Gauge<Long>)metrics.get(MetricNames.CURRENT_EMIT_EVENT_TIME_LAG)).getValue()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43->42 [style = solid, label="processedRecordsPerSubtask"];
4->18 [style = dotted, label="true"];
42->41 [style = bold, label=""];
14->19 [style = dotted, label="true"];
9->29 [style = solid, label="pendingRecords"];
37->27 [style = bold, label=""];
14->0 [style = dotted, label="true"];
10->34 [style = dashed, label="0"];
38->45 [style = solid, label="numSplits"];
21->27 [style = dotted, label="true"];
14->17 [style = bold, label=""];
25->48 [style = bold, label=""];
5->28 [style = bold, label=""];
27->15 [style = bold, label=""];
7->42 [style = dashed, label="0"];
21->2 [style = bold, label=""];
22->18 [style = solid, label="watermarkLag"];
47->46 [style = dotted, label="true"];
21->23 [style = dotted, label="true"];
43->2 [style = solid, label="processedRecordsPerSubtask"];
21->48 [style = dashed, label="0"];
41->45 [style = bold, label=""];
21->37 [style = dotted, label="true"];
36->7 [style = solid, label="processedRecordsPerSubtask"];
4->10 [style = dotted, label="false"];
9->29 [style = bold, label=""];
20->15 [style = bold, label=""];
27->25 [style = bold, label=""];
25->21 [style = bold, label=""];
30->33 [style = dotted, label="true"];
14->12 [style = dotted, label="true"];
8->9 [style = solid, label="numTotalPerSubtask"];
0->11 [style = solid, label="parallelism"];
40->45 [style = solid, label="subtaskWithMetrics"];
24->40 [style = solid, label="subtaskWithMetrics"];
30->19 [style = dotted, label="true"];
19->4 [style = solid, label="hasTimestamps"];
43->41 [style = solid, label="processedRecordsPerSubtask"];
5->39 [style = dashed, label="0"];
24->45 [style = solid, label="subtaskWithMetrics"];
20->25 [style = bold, label=""];
47->43 [style = dotted, label="true"];
21->37 [style = bold, label=""];
22->18 [style = bold, label=""];
28->2 [style = dashed, label="0"];
12->5 [style = solid, label="processedRecordsPerSubtask"];
4->22 [style = dotted, label="true"];
19->46 [style = dashed, label="0"];
43->39 [style = solid, label="processedRecordsPerSubtask"];
18->9 [style = bold, label=""];
30->32 [style = dotted, label="true"];
47->44 [style = bold, label=""];
14->1 [style = dotted, label="true"];
47->38 [style = dotted, label="true"];
16->20 [style = bold, label=""];
29->16 [style = bold, label=""];
4->26 [style = dotted, label="true"];
21->23 [style = bold, label=""];
4->10 [style = bold, label=""];
30->17 [style = bold, label=""];
13->4 [style = solid, label="hasTimestamps"];
26->3 [style = bold, label=""];
24->2 [style = solid, label="subtaskWithMetrics"];
7->4 [style = bold, label=""];
11->24 [style = bold, label=""];
10->6 [style = bold, label=""];
30->36 [style = dotted, label="true"];
23->37 [style = dashed, label="0"];
12->9 [style = solid, label="processedRecordsPerSubtask"];
4->3 [style = dotted, label="true"];
40->39 [style = bold, label=""];
24->25 [style = bold, label=""];
39->2 [style = bold, label=""];
14->8 [style = dotted, label="true"];
12->7 [style = solid, label="processedRecordsPerSubtask"];
32->11 [style = solid, label="parallelism"];
4->34 [style = dotted, label="false"];
24->15 [style = solid, label="subtaskWithMetrics"];
35->9 [style = solid, label="numTotalPerSubtask"];
46->11 [style = solid, label="parallelism"];
4->34 [style = bold, label=""];
30->31 [style = dotted, label="true"];
36->5 [style = solid, label="processedRecordsPerSubtask"];
2->5 [style = bold, label=""];
36->28 [style = solid, label="processedRecordsPerSubtask"];
12->28 [style = solid, label="processedRecordsPerSubtask"];
2->15 [style = solid, label="subtaskWithMetrics"];
23->27 [style = bold, label=""];
17->11 [style = solid, label="groups"];
1->15 [style = solid, label="numSplits"];
28->7 [style = bold, label=""];
4->26 [style = bold, label=""];
44->11 [style = solid, label="groups"];
3->22 [style = bold, label=""];
4->6 [style = dotted, label="false"];
48->40 [style = bold, label=""];
14->13 [style = dotted, label="true"];
17->44 [style = dashed, label="0"];
48->45 [style = bold, label=""];
30->35 [style = dotted, label="true"];
31->15 [style = solid, label="numSplits"];
36->9 [style = solid, label="processedRecordsPerSubtask"];
34->6 [style = bold, label=""];
48->25 [style = bold, label=""];
44->11 [style = bold, label=""];
41->25 [style = bold, label=""];
6->9 [style = bold, label=""];
2->42 [style = bold, label=""];
9->16 [style = solid, label="pendingRecords"];
17->11 [style = bold, label=""];
}
