digraph {
10 [style = filled, label = "@Mocked MarkedCountDownLatch countDownLatch@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "DdlException e@@@48@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "deleteHandler.process(deleteStmt)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "DeleteJob job@@@52@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "QueryStateException e@@@57@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Assert.fail()@@@59@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Set<Replica> finishedReplica = Sets.newHashSet()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testCommitFail['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "jobs@@@52@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "QueryStateException e@@@57@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "deleteStmt.analyze(analyzer)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "finishedReplica.add(new Replica(REPLICA_ID_2,BACKEND_ID_2,0,Replica.ReplicaState.NORMAL))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "finishedReplica.add(new Replica(REPLICA_ID_3,BACKEND_ID_3,0,Replica.ReplicaState.NORMAL))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TabletDeleteInfo tabletDeleteInfo = new TabletDeleteInfo(TABLET_ID)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.fail()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Map<Long,DeleteJob> idToDeleteJob = Deencapsulation.getField(deleteHandler,\"idToDeleteJob\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "new Expectations(globalTransactionMgr){}@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "@Mocked MarkedCountDownLatch countDownLatch@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "{}@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DeleteStmt deleteStmt = new DeleteStmt(new TableName(\"test_db\",\"test_tbl\"),new PartitionNames(false,Lists.newArrayList(\"test_tbl\")),binaryPredicate)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "{}@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertEquals(1,jobs.size())@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "QueryStateException e@@@37@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "new Expectations(){}@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testNormal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "Assert.assertEquals(job.getState(),DeleteState.FINISHED)@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "UserException e@@@31@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "throw e@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testCommitFail['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "finishedReplica.add(new Replica(REPLICA_ID_1,BACKEND_ID_1,0,Replica.ReplicaState.NORMAL))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(job.getState(),DeleteState.FINISHED)@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "new MockUp<DeleteJob>(){@Mock public Collection<TabletDeleteInfo> getTabletDeleteInfo(){return Lists.newArrayList(tabletDeleteInfo)}}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Collection<DeleteJob> jobs = idToDeleteJob.values()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "tabletDeleteInfo.getFinishedReplicas().addAll(finishedReplica)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "BinaryPredicate binaryPredicate = new BinaryPredicate(BinaryPredicate.Operator.GT,new SlotRef(null,\"k1\"),new IntLiteral(3))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Map<Long,DeleteJob> idToDeleteJob = Deencapsulation.getField(deleteHandler,\"idToDeleteJob\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->32 [style = dashed, label="0"];
23->3 [style = bold, label=""];
20->34 [style = bold, label=""];
29->19 [style = bold, label=""];
18->22 [style = bold, label=""];
1->15 [style = dotted, label="true"];
30->10 [style = dotted, label="true"];
0->7 [style = bold, label=""];
16->18 [style = bold, label=""];
22->5 [style = solid, label="tabletDeleteInfo"];
25->20 [style = bold, label=""];
33->32 [style = dotted, label="true"];
4->11 [style = bold, label=""];
1->7 [style = dotted, label="true"];
1->25 [style = dotted, label="true"];
11->26 [style = solid, label="finishedReplica"];
24->0 [style = bold, label=""];
11->17 [style = bold, label=""];
1->6 [style = dotted, label="true"];
1->6 [style = bold, label=""];
35->7 [style = bold, label=""];
8->3 [style = bold, label=""];
9->10 [style = dotted, label="true"];
19->21 [style = bold, label=""];
31->35 [style = bold, label=""];
27->24 [style = bold, label=""];
2->19 [style = bold, label=""];
22->26 [style = bold, label=""];
26->5 [style = bold, label=""];
5->23 [style = bold, label=""];
1->13 [style = dotted, label="true"];
23->8 [style = bold, label=""];
3->0 [style = bold, label=""];
1->12 [style = dotted, label="true"];
0->21 [style = bold, label=""];
7->25 [style = bold, label=""];
15->13 [style = bold, label=""];
1->20 [style = dotted, label="true"];
4->0 [style = solid, label="deleteStmt"];
9->14 [style = bold, label=""];
33->14 [style = bold, label=""];
1->28 [style = dotted, label="true"];
1->35 [style = dashed, label="0"];
14->4 [style = bold, label=""];
6->7 [style = bold, label=""];
30->14 [style = bold, label=""];
17->16 [style = bold, label=""];
25->15 [style = bold, label=""];
27->24 [style = dotted, label="true"];
14->4 [style = solid, label="binaryPredicate"];
13->21 [style = bold, label=""];
}
