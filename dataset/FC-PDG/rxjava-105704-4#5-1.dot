digraph {
5 [style = filled, label = "i < observableCount@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "scos@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "maxConcurrent['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<Flowable<String>> os = new ArrayList<>()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "Iterator<String> iter = Flowable.merge(os,maxConcurrent).blockingIterable().iterator()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<SubscriptionCheckObservable> scos = new ArrayList<SubscriptionCheckObservable>()@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "maxConcurrent['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "AtomicInteger subscriptionCount = new AtomicInteger(0)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "SubscriptionCheckObservable sco@@@24@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "SubscriptionCheckObservable sco@@@24@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "assertFalse(sco.failed)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "int maxConcurrent = 2 + (times % 10)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "actual.add(iter.next())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "List<Observable<String>> os = new ArrayList<Observable<String>>()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "List<SubscriptionCheckObservable> scos = new ArrayList<>()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "os.add(Observable.unsafeCreate(sco))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Iterator<String> iter = Observable.merge(os,maxConcurrent).blockingIterable().iterator()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "times++@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "iter.hasNext()@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "maxConcurrent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "int observableCount = 100@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "os.add(Flowable.unsafeCreate(sco))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(5 * observableCount,actual.size())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "int times = 0@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "SubscriptionCheckObservable sco = new SubscriptionCheckObservable(subscriptionCount,maxConcurrent)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "List<String> actual = new ArrayList<String>()@@@19@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SubscriptionCheckObservable sco@@@24@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "times < 100@@@4@@@['1', '1', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "List<Flowable<String>> os = new ArrayList<Flowable<String>>()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "List<String> actual = new ArrayList<>()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "scos.add(sco)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->25 [style = bold, label=""];
2->26 [style = bold, label=""];
1->19 [style = solid, label="observableCount"];
5->18 [style = dotted, label="true"];
25->22 [style = bold, label=""];
4->1 [style = dotted, label="true"];
9->10 [style = bold, label=""];
5->12 [style = dotted, label="true"];
7->4 [style = solid, label="times"];
4->30 [style = dotted, label="true"];
27->7 [style = bold, label=""];
12->18 [style = bold, label=""];
21->25 [style = dashed, label="0"];
30->14 [style = bold, label=""];
5->9 [style = dotted, label="true"];
4->24 [style = dotted, label="true"];
8->4 [style = bold, label=""];
4->17 [style = dotted, label="true"];
13->14 [style = bold, label=""];
17->21 [style = bold, label=""];
15->10 [style = solid, label="i"];
12->9 [style = solid, label="sco"];
4->23 [style = dotted, label="true"];
4->0 [style = dotted, label="true"];
1->0 [style = bold, label=""];
19->6 [style = bold, label=""];
5->17 [style = bold, label=""];
13->26 [style = dashed, label="0"];
18->28 [style = bold, label=""];
4->13 [style = dotted, label="true"];
8->4 [style = solid, label="times"];
22->20 [style = dotted, label="true"];
22->20 [style = bold, label=""];
3->7 [style = bold, label=""];
21->22 [style = bold, label=""];
4->22 [style = dotted, label="true"];
18->9 [style = bold, label=""];
14->15 [style = bold, label=""];
0->12 [style = solid, label="maxConcurrent"];
4->32 [style = dotted, label="true"];
4->2 [style = dotted, label="true"];
12->18 [style = solid, label="sco"];
4->26 [style = dotted, label="true"];
4->5 [style = dotted, label="true"];
10->5 [style = solid, label="i"];
22->19 [style = bold, label=""];
5->10 [style = dotted, label="true"];
1->5 [style = solid, label="observableCount"];
23->15 [style = bold, label=""];
4->11 [style = dotted, label="true"];
7->4 [style = bold, label=""];
4->15 [style = dotted, label="true"];
15->5 [style = solid, label="i"];
5->32 [style = bold, label=""];
4->21 [style = dotted, label="true"];
14->23 [style = dashed, label="0"];
10->5 [style = bold, label=""];
4->31 [style = dotted, label="true"];
2->12 [style = solid, label="subscriptionCount"];
4->1 [style = bold, label=""];
7->0 [style = solid, label="times"];
5->28 [style = dotted, label="true"];
7->8 [style = solid, label="times"];
4->19 [style = dotted, label="true"];
4->6 [style = dotted, label="true"];
32->21 [style = bold, label=""];
28->10 [style = bold, label=""];
0->2 [style = bold, label=""];
9->28 [style = dashed, label="0"];
4->8 [style = dotted, label="true"];
8->0 [style = solid, label="times"];
17->32 [style = dashed, label="0"];
4->25 [style = dotted, label="true"];
4->14 [style = dotted, label="true"];
12->28 [style = solid, label="sco"];
15->5 [style = bold, label=""];
20->22 [style = bold, label=""];
2->13 [style = bold, label=""];
5->12 [style = bold, label=""];
26->23 [style = bold, label=""];
6->8 [style = bold, label=""];
29->7 [style = bold, label=""];
4->16 [style = dotted, label="true"];
2->30 [style = bold, label=""];
13->30 [style = dashed, label="0"];
}
