digraph {
20 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.COMPLETED,changelogReader.changelogMetadata(tp).state())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertEquals(5L,consumer.position(tp))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "EasyMock.expect(stateManager.taskId()).andReturn(taskId).anyTimes()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(11L,(long)changelogReader.changelogMetadata(tp).endOffset())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "consumer.seek(tp,11L)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNull(changelogReader.changelogMetadata(tp).endOffset())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "shouldPollWithRightTimeout['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "changelogReader.restore()@@@38@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_START))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Collections.singleton(tp),consumer.paused())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_BATCH))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "consumer.updateBeginningOffsets(Collections.singletonMap(tp,5L))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "changelogReader.restore()@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Collections.singleton(tp),changelogReader.completedChangelogs())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "changelogReader.restore(Collections.singletonMap(taskId,mock()))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "changelogReader.restore(Collections.singletonMap(taskId,mock()))@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Duration.ZERO,consumer.lastPollTimeout())@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "EasyMock.expect(stateManager.changelogOffsets()).andReturn(singletonMap(tp,5L))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,7L,\"key\".getBytes(),\"value\".getBytes()))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "changelogReader.restore(Collections.singletonMap(taskId,mock()))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertEquals(tp,callback.restoreTopicPartition)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final StoreChangelogReader changelogReader = new StoreChangelogReader(time,config,logContext,adminClient,consumer,callback)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Collections.emptySet(),consumer.paused())@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(Duration.ofMillis(config.getLong(StreamsConfig.POLL_MS_CONFIG)),consumer.lastPollTimeout())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(Collections.emptySet(),changelogReader.completedChangelogs())@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "type == ACTIVE@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "changelogReader.transitToUpdateStandby()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_BATCH))@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedLimitIndex())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "shouldRestoreFromBeginningAndCheckCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertEquals(0,changelogReader.changelogMetadata(tp).bufferedRecords().size())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "shouldRestoreFromBeginningAndCheckCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "EasyMock.expect(storeMetadata.offset()).andReturn(null).andReturn(9L).anyTimes()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "type == STANDBY@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,6L,\"key\".getBytes(),\"value\".getBytes()))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "changelogReader.register(tp,stateManager)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,9L,\"key\".getBytes(),\"value\".getBytes()))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "consumer.addRecord(new ConsumerRecord<>(topicName,0,8L,null,\"value\".getBytes()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "changelogReader.restore()@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(StoreChangelogReader.ChangelogState.RESTORING,changelogReader.changelogMetadata(tp).state())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(3L,changelogReader.changelogMetadata(tp).totalRestored())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final TaskId taskId = new TaskId(0,0)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "EasyMock.replay(stateManager,storeMetadata,store)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertNull(callback.storeNameCalledStates.get(RESTORE_END))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(storeName,callback.storeNameCalledStates.get(RESTORE_END))@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "adminClient.updateEndOffsets(Collections.singletonMap(tp,11L))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "type == ACTIVE@@@43@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(11L,consumer.position(tp))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(0L,changelogReader.changelogMetadata(tp).totalRestored())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
9->53 [style = bold, label=""];
9->11 [style = bold, label=""];
42->9 [style = bold, label=""];
21->8 [style = bold, label=""];
12->15 [style = dotted, label="true"];
28->9 [style = bold, label=""];
37->15 [style = bold, label=""];
31->1 [style = bold, label=""];
29->34 [style = bold, label=""];
27->49 [style = bold, label=""];
9->11 [style = dotted, label="false"];
7->26 [style = bold, label=""];
12->20 [style = dotted, label="true"];
10->39 [style = bold, label=""];
12->18 [style = bold, label=""];
30->14 [style = bold, label=""];
26->28 [style = bold, label=""];
5->30 [style = bold, label=""];
46->50 [style = bold, label=""];
45->35 [style = bold, label=""];
24->27 [style = bold, label=""];
25->21 [style = bold, label=""];
50->45 [style = solid, label="taskId"];
23->44 [style = bold, label=""];
12->3 [style = dotted, label="true"];
9->51 [style = bold, label=""];
40->45 [style = dashed, label="0"];
18->19 [style = bold, label=""];
14->38 [style = bold, label=""];
38->45 [style = bold, label=""];
20->3 [style = bold, label=""];
9->21 [style = dotted, label="true"];
22->23 [style = bold, label=""];
9->8 [style = dotted, label="true"];
43->47 [style = bold, label=""];
19->13 [style = bold, label=""];
12->32 [style = dotted, label="true"];
16->33 [style = bold, label=""];
35->17 [style = bold, label=""];
48->33 [style = bold, label=""];
32->36 [style = bold, label=""];
36->37 [style = bold, label=""];
6->7 [style = bold, label=""];
50->41 [style = bold, label=""];
42->49 [style = dashed, label="0"];
12->37 [style = dotted, label="true"];
47->1 [style = bold, label=""];
2->41 [style = bold, label=""];
40->35 [style = bold, label=""];
0->43 [style = bold, label=""];
50->47 [style = solid, label="taskId"];
52->41 [style = bold, label=""];
12->36 [style = dotted, label="true"];
12->20 [style = bold, label=""];
27->4 [style = dotted, label="true"];
17->12 [style = bold, label=""];
9->51 [style = dotted, label="true"];
11->10 [style = bold, label=""];
16->48 [style = bold, label=""];
41->16 [style = bold, label=""];
44->24 [style = bold, label=""];
38->40 [style = bold, label=""];
49->6 [style = bold, label=""];
33->22 [style = bold, label=""];
12->18 [style = dotted, label="false"];
43->31 [style = bold, label=""];
12->13 [style = dotted, label="false"];
12->19 [style = dotted, label="false"];
31->47 [style = dashed, label="0"];
9->29 [style = dotted, label="true"];
4->42 [style = bold, label=""];
34->10 [style = bold, label=""];
9->53 [style = dotted, label="false"];
9->25 [style = dotted, label="true"];
27->42 [style = bold, label=""];
27->4 [style = bold, label=""];
39->0 [style = bold, label=""];
42->6 [style = bold, label=""];
4->49 [style = bold, label=""];
9->34 [style = dotted, label="true"];
9->25 [style = bold, label=""];
50->49 [style = solid, label="taskId"];
3->32 [style = bold, label=""];
8->29 [style = bold, label=""];
}
