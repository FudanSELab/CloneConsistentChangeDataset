digraph {
4 [style = filled, label = "assertEquals(8,context.getBuffer().position())@@@8@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,results.length)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testThatNonLineTerminatedStringReturnsEmptyResult['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String(( results = decoder.decode(ByteBuffer.wrap(\"a string\".getBytes()),context)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "TextLineDecoder decoder = new TextLineDecoder(LineDelimiter.WINDOWS)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testThatNonLineTerminatedStringReturnsEmptyResult['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertNotNull(results)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testThatNonLineTerminatedStringReturnsEmptyResult['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(8,context.getBuffer().position())@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertNull(results)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "TextLineDecoder decoder = new TextLineDecoder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String results = decoder.decode(ByteBuffer.wrap(\"a string\".getBytes()),context)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Context context = decoder.createDecoderState()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
0->10 [style = solid, label="context"];
6->5 [style = bold, label=""];
10->9 [style = solid, label="results"];
1->2 [style = bold, label=""];
0->10 [style = bold, label=""];
10->9 [style = bold, label=""];
7->5 [style = bold, label=""];
11->12 [style = bold, label=""];
0->3 [style = solid, label="context"];
3->1 [style = solid, label="results"];
3->10 [style = dashed, label="0"];
3->1 [style = bold, label=""];
5->0 [style = bold, label=""];
9->8 [style = bold, label=""];
1->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
5->12 [style = dashed, label="0"];
}
