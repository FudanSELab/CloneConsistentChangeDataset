digraph {
56 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),intSerde,stringSerde,stringSerde)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "StreamsBuilder builder = new StreamsBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "i < 2@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "i++@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Collection<Set<String>> copartitionGroups = KTableKTableJoinTest.getCopartitionedGroups(builder)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "processor.checkAndClearProcessResult()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "testJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "int i = 0@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "i < 2@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "driver.setUp(builder,stateDir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Collection<Set<String>> copartitionGroups = KTableKTableJoinTest.getCopartitionedGroups(builder)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "stream1 = builder.stream(intSerde,stringSerde,topic1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "stream2 = builder.stream(intSerde,stringSerde,topic2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@afe8ef@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Collection<Set<String>> copartitionGroups = StreamsBuilderTest.getCopartitionedGroups(builder)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "joined.process(processor)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "int i = 0@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "i < 2@@@31@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.flushState()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "driver.flushState()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30->44 [style = dotted, label="true"];
57->31 [style = bold, label=""];
37->28 [style = bold, label=""];
32->44 [style = solid, label="i"];
74->27 [style = dotted, label="true"];
22->71 [style = dashed, label="0"];
18->55 [style = bold, label=""];
45->28 [style = solid, label="getter"];
11->30 [style = solid, label="i"];
44->74 [style = bold, label=""];
65->62 [style = bold, label=""];
67->60 [style = bold, label=""];
45->54 [style = solid, label="getter"];
38->41 [style = bold, label=""];
70->75 [style = solid, label="i"];
67->42 [style = solid, label="i"];
27->46 [style = solid, label="i"];
41->38 [style = dotted, label="true"];
68->21 [style = bold, label=""];
14->7 [style = bold, label=""];
49->8 [style = bold, label=""];
9->26 [style = bold, label=""];
75->13 [style = solid, label="i"];
70->68 [style = solid, label="i"];
11->44 [style = solid, label="i"];
71->58 [style = bold, label=""];
45->25 [style = bold, label=""];
3->66 [style = bold, label=""];
67->60 [style = solid, label="i"];
75->68 [style = solid, label="i"];
49->57 [style = solid, label="builder"];
66->20 [style = bold, label=""];
50->33 [style = solid, label="i"];
40->47 [style = bold, label=""];
14->7 [style = dotted, label="true"];
20->37 [style = bold, label=""];
70->68 [style = bold, label=""];
35->45 [style = bold, label=""];
75->68 [style = bold, label=""];
33->14 [style = solid, label="i"];
23->36 [style = bold, label=""];
41->42 [style = dotted, label="true"];
45->47 [style = solid, label="getter"];
62->63 [style = solid, label="stream2"];
21->50 [style = bold, label=""];
27->74 [style = bold, label=""];
52->35 [style = bold, label=""];
70->13 [style = solid, label="i"];
32->30 [style = solid, label="i"];
50->14 [style = solid, label="i"];
68->75 [style = dotted, label="true"];
1->41 [style = bold, label=""];
34->48 [style = bold, label=""];
1->38 [style = solid, label="i"];
8->44 [style = solid, label="expectedKeys"];
30->27 [style = bold, label=""];
53->20 [style = bold, label=""];
44->27 [style = solid, label="i"];
48->57 [style = dashed, label="0"];
45->21 [style = solid, label="getter"];
38->41 [style = solid, label="i"];
61->71 [style = bold, label=""];
8->46 [style = solid, label="expectedKeys"];
49->73 [style = dashed, label="0"];
42->72 [style = bold, label=""];
24->61 [style = dashed, label="0"];
3->53 [style = bold, label=""];
8->61 [style = bold, label=""];
60->42 [style = dotted, label="true"];
13->75 [style = bold, label=""];
5->21 [style = bold, label=""];
7->33 [style = bold, label=""];
44->74 [style = solid, label="i"];
27->46 [style = bold, label=""];
49->52 [style = solid, label="builder"];
33->7 [style = solid, label="i"];
19->13 [style = bold, label=""];
73->25 [style = solid, label="builder"];
60->72 [style = dotted, label="true"];
39->12 [style = bold, label=""];
28->19 [style = bold, label=""];
13->5 [style = bold, label=""];
8->42 [style = solid, label="expectedKeys"];
1->41 [style = solid, label="i"];
38->42 [style = solid, label="i"];
29->40 [style = bold, label=""];
73->43 [style = solid, label="builder"];
59->43 [style = bold, label=""];
11->30 [style = bold, label=""];
42->38 [style = bold, label=""];
30->44 [style = bold, label=""];
55->9 [style = bold, label=""];
2->55 [style = bold, label=""];
34->57 [style = bold, label=""];
8->24 [style = bold, label=""];
51->58 [style = dashed, label="0"];
46->16 [style = bold, label=""];
51->4 [style = bold, label=""];
6->34 [style = bold, label=""];
63->59 [style = bold, label=""];
6->34 [style = solid, label="processor"];
74->46 [style = dotted, label="true"];
1->42 [style = solid, label="i"];
50->14 [style = bold, label=""];
55->39 [style = bold, label=""];
32->30 [style = bold, label=""];
48->31 [style = bold, label=""];
16->54 [style = bold, label=""];
6->65 [style = bold, label=""];
73->8 [style = bold, label=""];
35->25 [style = bold, label=""];
17->43 [style = bold, label=""];
45->3 [style = solid, label="getter"];
27->74 [style = solid, label="i"];
22->51 [style = bold, label=""];
74->46 [style = bold, label=""];
60->18 [style = bold, label=""];
0->49 [style = bold, label=""];
7->13 [style = dashed, label="0"];
14->29 [style = bold, label=""];
32->44 [style = bold, label=""];
45->9 [style = solid, label="getter"];
12->3 [style = bold, label=""];
58->4 [style = bold, label=""];
64->67 [style = bold, label=""];
31->17 [style = bold, label=""];
47->23 [style = bold, label=""];
60->42 [style = bold, label=""];
30->11 [style = dotted, label="true"];
41->18 [style = bold, label=""];
22->51 [style = solid, label="table2"];
49->48 [style = solid, label="builder"];
32->11 [style = solid, label="i"];
8->7 [style = solid, label="expectedKeys"];
36->10 [style = bold, label=""];
44->46 [style = solid, label="i"];
33->14 [style = bold, label=""];
56->49 [style = bold, label=""];
10->15 [style = bold, label=""];
14->33 [style = dotted, label="true"];
4->6 [style = bold, label=""];
19->20 [style = dashed, label="0"];
20->28 [style = bold, label=""];
72->60 [style = solid, label="i"];
25->32 [style = bold, label=""];
62->63 [style = bold, label=""];
74->64 [style = bold, label=""];
39->3 [style = bold, label=""];
67->72 [style = solid, label="i"];
43->52 [style = bold, label=""];
18->2 [style = bold, label=""];
72->60 [style = bold, label=""];
24->22 [style = bold, label=""];
26->39 [style = bold, label=""];
45->15 [style = solid, label="getter"];
28->70 [style = bold, label=""];
8->13 [style = solid, label="expectedKeys"];
46->27 [style = bold, label=""];
44->11 [style = bold, label=""];
69->73 [style = bold, label=""];
68->13 [style = dotted, label="true"];
68->13 [style = bold, label=""];
6->59 [style = solid, label="processor"];
72->42 [style = solid, label="i"];
50->7 [style = solid, label="i"];
41->42 [style = bold, label=""];
54->1 [style = bold, label=""];
}
