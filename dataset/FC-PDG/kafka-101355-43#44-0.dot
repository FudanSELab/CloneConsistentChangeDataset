digraph {
12 [style = filled, label = "windowStore.put(4,\"four\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "assertEquals(Utils.mkList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Utils.mkList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
95 [style = filled, label = "testRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@58@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
102 [style = filled, label = "context.restore(windowName,changeLog)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "windowStore.put(6,\"six\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
77 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
87 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "windowStore.put(2,\"two\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "windowStore = createWindowStore(context,false)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
83 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
99 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
81 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
90 [style = filled, label = "assertEquals(asList(\"one\"),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2)),segmentDirs(baseDir))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "testRolling['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "windowStore.flush()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "windowStore.put(7,\"seven\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
91 [style = filled, label = "windowStore.put(3,\"three\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
61 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
70 [style = filled, label = "assertEquals(asList(\"seven\"),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
112 [style = filled, label = "windowStore = createWindowStore(context,false)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
101 [style = filled, label = "Utils.delete(baseDir)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
88 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
75 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertEquals(Utils.mkList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@35@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "assertEquals(asList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
103 [style = filled, label = "windowStore.flush()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
97 [style = filled, label = "final long startTime = segmentInterval * 2@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "setCurrentTime(startTime + increment * 3)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@40@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@41@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
105 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "testRolling['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "windowStore.close()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
106 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(7,ofEpochMilli(startTime + increment * 7 - windowSize),ofEpochMilli(startTime + increment * 7 + windowSize))))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "windowStore.put(1,\"one\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertEquals(asList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
111 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "setCurrentTime(startTime + increment * 6)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertEquals(asList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@59@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
85 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "windowStore.put(5,\"five\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(2),segments.segmentName(3)),segmentDirs(baseDir))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final long increment = segmentInterval / 2@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "windowStore.put(0,\"zero\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
94 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@55@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4),segments.segmentName(5),segments.segmentName(6)),segmentDirs(baseDir))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
72 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertEquals(Utils.mkList(\"five\"),toList(windowStore.fetch(5,ofEpochMilli(startTime + increment * 5 - windowSize),ofEpochMilli(startTime + increment * 5 + windowSize))))@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "windowStore = createWindowStore(context,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "setCurrentTime(startTime + increment * 2)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "setCurrentTime(startTime + increment * 5)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertEquals(Utils.mkList(\"four\"),toList(windowStore.fetch(4,ofEpochMilli(startTime + increment * 4 - windowSize),ofEpochMilli(startTime + increment * 4 + windowSize))))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(Utils.mkList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
113 [style = filled, label = "setCurrentTime(startTime + increment * 4)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
98 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "setCurrentTime(startTime + increment)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "setCurrentTime(startTime + increment * 7)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@29@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "setCurrentTime(startTime)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
100 [style = filled, label = "windowStore.put(8,\"eight\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertEquals(Utils.mkList(),toList(windowStore.fetch(3,ofEpochMilli(startTime + increment * 3 - windowSize),ofEpochMilli(startTime + increment * 3 + windowSize))))@@@54@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
64 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(1,ofEpochMilli(startTime + increment - windowSize),ofEpochMilli(startTime + increment + windowSize))))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "assertEquals(Utils.mkList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@42@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "setCurrentTime(startTime + increment * 8)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertEquals(asList(\"six\"),toList(windowStore.fetch(6,ofEpochMilli(startTime + increment * 6 - windowSize),ofEpochMilli(startTime + increment * 6 + windowSize))))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
78 [style = filled, label = "assertEquals(asList(\"two\"),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "assertEquals(asList(),toList(windowStore.fetch(2,ofEpochMilli(startTime + increment * 2 - windowSize),ofEpochMilli(startTime + increment * 2 + windowSize))))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
96 [style = filled, label = "assertEquals(Utils.mkSet(segments.segmentName(4L),segments.segmentName(5L),segments.segmentName(6L)),segmentDirs(baseDir))@@@48@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(asList(\"zero\"),toList(windowStore.fetch(0,ofEpochMilli(startTime - windowSize),ofEpochMilli(startTime + windowSize))))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
110 [style = filled, label = "assertEquals(Utils.mkList(\"eight\"),toList(windowStore.fetch(8,ofEpochMilli(startTime + increment * 8 - windowSize),ofEpochMilli(startTime + increment * 8 + windowSize))))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->76 [style = solid, label="increment"];
17->11 [style = solid, label="startTime"];
17->51 [style = solid, label="startTime"];
17->56 [style = solid, label="startTime"];
37->79 [style = bold, label=""];
99->22 [style = bold, label=""];
19->66 [style = solid, label="increment"];
44->99 [style = bold, label=""];
17->70 [style = solid, label="startTime"];
76->60 [style = bold, label=""];
7->90 [style = dashed, label="0"];
17->35 [style = solid, label="startTime"];
3->66 [style = dashed, label="0"];
93->94 [style = bold, label=""];
17->89 [style = solid, label="startTime"];
81->89 [style = bold, label=""];
24->27 [style = bold, label=""];
21->50 [style = bold, label=""];
97->111 [style = solid, label="startTime"];
17->59 [style = solid, label="startTime"];
1->4 [style = bold, label=""];
19->68 [style = solid, label="increment"];
35->20 [style = bold, label=""];
8->69 [style = dashed, label="0"];
101->112 [style = bold, label=""];
17->76 [style = solid, label="startTime"];
17->107 [style = solid, label="increment"];
19->0 [style = solid, label="increment"];
19->15 [style = solid, label="increment"];
45->14 [style = bold, label=""];
7->51 [style = bold, label=""];
19->80 [style = solid, label="increment"];
19->58 [style = solid, label="increment"];
52->76 [style = dashed, label="0"];
77->71 [style = bold, label=""];
19->51 [style = solid, label="increment"];
103->96 [style = bold, label=""];
43->79 [style = dashed, label="0"];
49->54 [style = bold, label=""];
19->21 [style = solid, label="increment"];
17->25 [style = solid, label="startTime"];
39->46 [style = bold, label=""];
85->65 [style = bold, label=""];
17->2 [style = solid, label="startTime"];
70->34 [style = bold, label=""];
23->32 [style = bold, label=""];
73->70 [style = bold, label=""];
19->28 [style = solid, label="increment"];
19->42 [style = solid, label="increment"];
19->41 [style = solid, label="increment"];
95->97 [style = bold, label=""];
19->88 [style = solid, label="increment"];
17->61 [style = solid, label="startTime"];
19->64 [style = solid, label="increment"];
19->10 [style = solid, label="increment"];
97->107 [style = solid, label="startTime"];
97->22 [style = solid, label="startTime"];
41->12 [style = bold, label=""];
5->40 [style = bold, label=""];
97->98 [style = solid, label="startTime"];
75->67 [style = bold, label=""];
80->63 [style = bold, label=""];
48->59 [style = bold, label=""];
17->75 [style = solid, label="startTime"];
19->52 [style = solid, label="increment"];
33->20 [style = bold, label=""];
8->58 [style = bold, label=""];
97->47 [style = solid, label="startTime"];
61->86 [style = bold, label=""];
66->74 [style = bold, label=""];
57->98 [style = dashed, label="0"];
17->49 [style = solid, label="increment"];
6->0 [style = bold, label=""];
89->35 [style = bold, label=""];
97->92 [style = solid, label="startTime"];
110->103 [style = bold, label=""];
17->33 [style = solid, label="increment"];
51->78 [style = dashed, label="0"];
19->36 [style = solid, label="increment"];
19->90 [style = solid, label="increment"];
58->29 [style = bold, label=""];
100->108 [style = bold, label=""];
17->57 [style = solid, label="startTime"];
21->80 [style = dashed, label="0"];
17->36 [style = solid, label="startTime"];
25->8 [style = bold, label=""];
42->5 [style = bold, label=""];
11->109 [style = dashed, label="0"];
9->96 [style = dashed, label="0"];
19->56 [style = solid, label="increment"];
106->111 [style = bold, label=""];
87->68 [style = bold, label=""];
17->74 [style = solid, label="startTime"];
19->57 [style = solid, label="increment"];
19->35 [style = solid, label="increment"];
19->71 [style = solid, label="increment"];
55->13 [style = bold, label=""];
97->109 [style = solid, label="startTime"];
17->79 [style = solid, label="startTime"];
72->82 [style = bold, label=""];
58->72 [style = dashed, label="0"];
17->98 [style = solid, label="increment"];
37->43 [style = bold, label=""];
17->34 [style = solid, label="startTime"];
19->48 [style = solid, label="increment"];
65->87 [style = bold, label=""];
112->105 [style = bold, label=""];
13->36 [style = bold, label=""];
83->85 [style = bold, label=""];
17->50 [style = solid, label="startTime"];
10->11 [style = bold, label=""];
34->111 [style = dashed, label="0"];
97->94 [style = solid, label="startTime"];
109->98 [style = bold, label=""];
17->66 [style = solid, label="startTime"];
17->38 [style = solid, label="startTime"];
17->68 [style = solid, label="startTime"];
17->13 [style = solid, label="startTime"];
42->88 [style = dashed, label="0"];
19->63 [style = solid, label="increment"];
17->2 [style = solid, label="increment"];
92->30 [style = bold, label=""];
9->107 [style = bold, label=""];
17->24 [style = solid, label="increment"];
55->65 [style = dashed, label="0"];
17->57 [style = solid, label="increment"];
17->21 [style = solid, label="startTime"];
97->93 [style = solid, label="startTime"];
59->55 [style = bold, label=""];
113->12 [style = bold, label=""];
68->16 [style = bold, label=""];
17->110 [style = solid, label="increment"];
11->57 [style = bold, label=""];
86->76 [style = bold, label=""];
32->86 [style = dashed, label="0"];
4->23 [style = bold, label=""];
19->89 [style = solid, label="increment"];
62->90 [style = bold, label=""];
97->110 [style = solid, label="startTime"];
30->24 [style = bold, label=""];
97->2 [style = solid, label="startTime"];
17->94 [style = solid, label="increment"];
17->10 [style = solid, label="startTime"];
19->55 [style = solid, label="increment"];
17->111 [style = solid, label="increment"];
19->7 [style = solid, label="increment"];
19->87 [style = solid, label="increment"];
17->62 [style = solid, label="startTime"];
17->6 [style = solid, label="startTime"];
17->41 [style = solid, label="startTime"];
17->78 [style = solid, label="startTime"];
17->28 [style = solid, label="startTime"];
49->91 [style = bold, label=""];
40->89 [style = dashed, label="0"];
97->4 [style = solid, label="startTime"];
53->9 [style = bold, label=""];
47->75 [style = bold, label=""];
44->70 [style = dashed, label="0"];
17->40 [style = solid, label="startTime"];
33->62 [style = bold, label=""];
64->69 [style = bold, label=""];
25->64 [style = dashed, label="0"];
29->3 [style = bold, label=""];
17->69 [style = solid, label="startTime"];
17->18 [style = solid, label="startTime"];
17->86 [style = solid, label="startTime"];
19->60 [style = solid, label="increment"];
17->23 [style = solid, label="startTime"];
4->61 [style = bold, label=""];
34->22 [style = bold, label=""];
17->30 [style = solid, label="startTime"];
17->90 [style = solid, label="startTime"];
17->4 [style = solid, label="increment"];
102->93 [style = bold, label=""];
19->85 [style = solid, label="increment"];
57->73 [style = dashed, label="0"];
13->87 [style = dashed, label="0"];
98->106 [style = bold, label=""];
17->7 [style = solid, label="startTime"];
19->30 [style = bold, label=""];
17->106 [style = solid, label="increment"];
19->65 [style = solid, label="increment"];
97->57 [style = solid, label="startTime"];
17->22 [style = solid, label="increment"];
19->81 [style = solid, label="increment"];
19->5 [style = solid, label="increment"];
15->60 [style = dashed, label="0"];
10->22 [style = dashed, label="0"];
17->5 [style = solid, label="startTime"];
17->60 [style = solid, label="startTime"];
17->48 [style = solid, label="startTime"];
69->72 [style = bold, label=""];
17->77 [style = solid, label="startTime"];
17->113 [style = solid, label="increment"];
17->81 [style = solid, label="startTime"];
19->83 [style = solid, label="increment"];
17->88 [style = solid, label="startTime"];
97->106 [style = solid, label="startTime"];
19->16 [style = solid, label="increment"];
19->2 [style = solid, label="increment"];
17->31 [style = solid, label="increment"];
47->6 [style = bold, label=""];
19->82 [style = solid, label="increment"];
17->85 [style = solid, label="startTime"];
17->71 [style = solid, label="startTime"];
17->63 [style = solid, label="startTime"];
54->41 [style = bold, label=""];
19->70 [style = solid, label="increment"];
17->64 [style = solid, label="startTime"];
17->99 [style = solid, label="increment"];
17->21 [style = solid, label="increment"];
17->3 [style = solid, label="startTime"];
17->50 [style = solid, label="increment"];
17->44 [style = solid, label="startTime"];
22->109 [style = bold, label=""];
97->53 [style = solid, label="startTime"];
2->21 [style = bold, label=""];
5->81 [style = dashed, label="0"];
46->33 [style = bold, label=""];
19->44 [style = solid, label="increment"];
4->100 [style = bold, label=""];
36->16 [style = bold, label=""];
40->35 [style = bold, label=""];
97->99 [style = solid, label="startTime"];
28->31 [style = bold, label=""];
104->101 [style = bold, label=""];
91->113 [style = bold, label=""];
31->38 [style = bold, label=""];
17->83 [style = solid, label="startTime"];
19->86 [style = solid, label="increment"];
19->34 [style = solid, label="increment"];
31->26 [style = bold, label=""];
10->77 [style = dashed, label="0"];
19->38 [style = solid, label="increment"];
16->1 [style = bold, label=""];
17->39 [style = solid, label="increment"];
12->39 [style = bold, label=""];
67->83 [style = bold, label=""];
97->44 [style = solid, label="startTime"];
17->42 [style = solid, label="startTime"];
19->73 [style = solid, label="increment"];
19->32 [style = solid, label="increment"];
6->75 [style = dashed, label="0"];
17->29 [style = solid, label="startTime"];
17->58 [style = solid, label="startTime"];
17->65 [style = solid, label="startTime"];
97->49 [style = solid, label="startTime"];
17->109 [style = solid, label="increment"];
97->9 [style = solid, label="startTime"];
17->19 [style = bold, label=""];
97->31 [style = solid, label="startTime"];
19->50 [style = solid, label="increment"];
26->38 [style = bold, label=""];
59->85 [style = dashed, label="0"];
17->32 [style = solid, label="startTime"];
22->102 [style = dashed, label="0"];
19->69 [style = solid, label="increment"];
57->44 [style = bold, label=""];
19->72 [style = solid, label="increment"];
17->15 [style = solid, label="startTime"];
43->25 [style = bold, label=""];
108->104 [style = bold, label=""];
107->110 [style = bold, label=""];
19->59 [style = solid, label="increment"];
97->105 [style = solid, label="startTime"];
15->10 [style = bold, label=""];
50->63 [style = dashed, label="0"];
32->52 [style = bold, label=""];
22->37 [style = bold, label=""];
52->44 [style = dashed, label="0"];
27->28 [style = bold, label=""];
23->61 [style = dashed, label="0"];
17->87 [style = solid, label="startTime"];
14->17 [style = bold, label=""];
17->47 [style = solid, label="increment"];
19->67 [style = solid, label="increment"];
36->68 [style = dashed, label="0"];
19->40 [style = solid, label="increment"];
38->49 [style = bold, label=""];
33->18 [style = bold, label=""];
19->3 [style = solid, label="increment"];
2->74 [style = dashed, label="0"];
19->77 [style = solid, label="increment"];
19->11 [style = solid, label="increment"];
48->83 [style = dashed, label="0"];
17->82 [style = solid, label="startTime"];
19->8 [style = solid, label="increment"];
24->28 [style = bold, label=""];
97->50 [style = solid, label="startTime"];
44->106 [style = dashed, label="0"];
56->46 [style = bold, label=""];
88->81 [style = bold, label=""];
19->78 [style = solid, label="increment"];
82->66 [style = bold, label=""];
97->24 [style = solid, label="startTime"];
60->77 [style = bold, label=""];
11->71 [style = dashed, label="0"];
3->2 [style = bold, label=""];
19->25 [style = solid, label="increment"];
17->53 [style = solid, label="increment"];
44->34 [style = bold, label=""];
19->74 [style = solid, label="increment"];
0->48 [style = bold, label=""];
51->42 [style = bold, label=""];
63->53 [style = bold, label=""];
18->7 [style = bold, label=""];
47->1 [style = bold, label=""];
52->15 [style = bold, label=""];
90->78 [style = bold, label=""];
17->8 [style = solid, label="startTime"];
78->88 [style = bold, label=""];
19->13 [style = solid, label="increment"];
17->72 [style = solid, label="startTime"];
17->9 [style = solid, label="increment"];
111->102 [style = bold, label=""];
97->17 [style = bold, label=""];
97->33 [style = solid, label="startTime"];
97->21 [style = solid, label="startTime"];
17->16 [style = solid, label="startTime"];
17->44 [style = solid, label="increment"];
17->43 [style = solid, label="startTime"];
71->73 [style = bold, label=""];
0->67 [style = dashed, label="0"];
17->80 [style = solid, label="startTime"];
29->82 [style = dashed, label="0"];
105->57 [style = bold, label=""];
17->55 [style = solid, label="startTime"];
18->62 [style = dashed, label="0"];
17->67 [style = solid, label="startTime"];
19->92 [style = bold, label=""];
84->14 [style = bold, label=""];
74->80 [style = bold, label=""];
94->2 [style = bold, label=""];
20->47 [style = bold, label=""];
19->29 [style = solid, label="increment"];
97->113 [style = solid, label="startTime"];
17->52 [style = solid, label="startTime"];
79->64 [style = bold, label=""];
17->73 [style = solid, label="startTime"];
39->56 [style = bold, label=""];
17->0 [style = solid, label="startTime"];
97->39 [style = solid, label="startTime"];
50->53 [style = bold, label=""];
}
