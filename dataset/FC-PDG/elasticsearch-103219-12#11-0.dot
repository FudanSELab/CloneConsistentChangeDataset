digraph {
4 [style = filled, label = "ParsedDocument doc = documentMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startObject(\"path1\").field(\"field1\",\"value1\").endObject().startObject(\"path2\").field(\"field2\",\"value2\").endObject().endObject()),XContentType.JSON))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testExcludes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "IndexableField sourceField = doc.rootDoc().getField(\"_source\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testExcludes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DocumentMapper documentMapper = createIndex(\"test\").mapperService().parse(\"type\",new CompressedXContent(mapping))@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ParsedDocument doc = documentMapper.parse(source(null))@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"_source\").array(\"excludes\",\"path1*\").endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "assertThat(sourceAsMap.containsKey(\"path1\"),equalTo(false))@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "DocumentMapper documentMapper = createDocumentMapper(topMapping(null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "Map<String,Object> sourceAsMap@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "testIncludes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "DocumentMapper documentMapper = createIndex(\"test\").mapperService().parse(\"type\",new CompressedXContent(mapping))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Map<String,Object> sourceAsMap@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "sourceAsMap = parser.map()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ParsedDocument doc = documentMapper.parse(new SourceToParse(\"test\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startObject(\"path1\").field(\"field1\",\"value1\").endObject().startObject(\"path2\").field(\"field2\",\"value2\").endObject().endObject()),XContentType.JSON))@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertThat(sourceAsMap.containsKey(\"path2\"),equalTo(false))@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "sourceAsMap = parser.map()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(sourceAsMap.containsKey(\"path2\"),equalTo(true))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"_source\").array(\"includes\",new String((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@14831b0).endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(sourceAsMap.containsKey(\"path1\"),equalTo(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->12 [style = bold, label=""];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
18->19 [style = bold, label=""];
0->15 [style = dashed, label="0"];
1->18 [style = bold, label=""];
6->0 [style = bold, label=""];
1->18 [style = dashed, label="0"];
5->14 [style = bold, label=""];
1->7 [style = bold, label=""];
14->7 [style = bold, label=""];
5->1 [style = bold, label=""];
12->10 [style = bold, label=""];
15->8 [style = solid, label="mapping"];
7->19 [style = dashed, label="0"];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
0->13 [style = dashed, label="0"];
17->15 [style = bold, label=""];
9->5 [style = bold, label=""];
16->5 [style = bold, label=""];
13->9 [style = bold, label=""];
0->2 [style = solid, label="mapping"];
8->4 [style = bold, label=""];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
4->16 [style = bold, label=""];
}
