digraph {
0 [style = filled, label = "final String expected = \"SELECT \"product_id\"\" + \"FROM (SELECT \"product_id\", AVG(\"gross_weight\") AS \"AGW\"\" + \"FROM \"foodmart\".\"product\"\" + \"WHERE \"net_weight\" < 100\" + \"GROUP BY \"product_id\"\" + \"HAVING AVG(\"gross_weight\") > 50) AS \"t2\"\" + \"GROUP BY \"product_id\"\" + \"HAVING AVG(\"AGW\") > 60\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String query = \"select *\" + \"from \"sales_fact_1997\" as s\" + \" join \"customer\" as c using (\"customer_id\")\" + \" join \"product\" as p using (\"product_id\")\" + \" join \"product_class\" as pc using (\"product_class_id\")\" + \"where c.\"city\" = 'San Francisco'\" + \"and pc.\"product_department\" = 'Snacks'\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testSimpleJoinUsing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final String expected = \"SELECT\" + \" \"product\".\"product_class_id\",\" + \" \"sales_fact_1997\".\"product_id\",\" + \" \"sales_fact_1997\".\"customer_id\",\" + \" \"sales_fact_1997\".\"time_id\",\" + \" \"sales_fact_1997\".\"promotion_id\",\" + \" \"sales_fact_1997\".\"store_id\",\" + \" \"sales_fact_1997\".\"store_sales\",\" + \" \"sales_fact_1997\".\"store_cost\",\" + \" \"sales_fact_1997\".\"unit_sales\",\" + \" \"customer\".\"account_num\",\" + \" \"customer\".\"lname\",\" + \" \"customer\".\"fname\",\" + \" \"customer\".\"mi\",\" + \" \"customer\".\"address1\",\" + \" \"customer\".\"address2\",\" + \" \"customer\".\"address3\",\" + \" \"customer\".\"address4\",\" + \" \"customer\".\"city\",\" + \" \"customer\".\"state_province\",\" + \" \"customer\".\"postal_code\",\" + \" \"customer\".\"country\",\" + \" \"customer\".\"customer_region_id\",\" + \" \"customer\".\"phone1\",\" + \" \"customer\".\"phone2\",\" + \" \"customer\".\"birthdate\",\" + \" \"customer\".\"marital_status\",\" + \" \"customer\".\"yearly_income\",\" + \" \"customer\".\"gender\",\" + \" \"customer\".\"total_children\",\" + \" \"customer\".\"num_children_at_home\",\" + \" \"customer\".\"education\",\" + \" \"customer\".\"date_accnt_opened\",\" + \" \"customer\".\"member_card\",\" + \" \"customer\".\"occupation\",\" + \" \"customer\".\"houseowner\",\" + \" \"customer\".\"num_cars_owned\",\" + \" \"customer\".\"fullname\",\" + \" \"product\".\"brand_name\",\" + \" \"product\".\"product_name\",\" + \" \"product\".\"SKU\",\" + \" \"product\".\"SRP\",\" + \" \"product\".\"gross_weight\",\" + \" \"product\".\"net_weight\",\" + \" \"product\".\"recyclable_package\",\" + \" \"product\".\"low_fat\",\" + \" \"product\".\"units_per_case\",\" + \" \"product\".\"cases_per_pallet\",\" + \" \"product\".\"shelf_width\",\" + \" \"product\".\"shelf_height\",\" + \" \"product\".\"shelf_depth\",\" + \" \"product_class\".\"product_subcategory\",\" + \" \"product_class\".\"product_category\",\" + \" \"product_class\".\"product_department\",\" + \" \"product_class\".\"product_family\"\" + \"FROM \"foodmart\".\"sales_fact_1997\"\" + \"INNER JOIN \"foodmart\".\"customer\" \" + \"ON \"sales_fact_1997\".\"customer_id\" = \"customer\"\" + \".\"customer_id\"\" + \"INNER JOIN \"foodmart\".\"product\" \" + \"ON \"sales_fact_1997\".\"product_id\" = \"product\".\"product_id\"\" + \"INNER JOIN \"foodmart\".\"product_class\" \" + \"ON \"product\".\"product_class_id\" = \"product_class\"\" + \".\"product_class_id\"\" + \"WHERE \"customer\".\"city\" = 'San Francisco' AND \" + \"\"product_class\".\"product_department\" = 'Snacks'\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "sql(query).ok(expected)@@@5@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHaving4['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String query = \"select \"product_id\"\" + \"from (\" + \" select \"product_id\", avg(\"gross_weight\") as agw\" + \" from \"product\"\" + \" where \"net_weight\" < 100\" + \" group by \"product_id\")\" + \"where agw > 50\" + \"group by \"product_id\"\" + \"having avg(agw) > 60\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHaving4['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
1->2 [style = bold, label=""];
2->0 [style = bold, label=""];
4->2 [style = bold, label=""];
5->6 [style = bold, label=""];
6->7 [style = bold, label=""];
7->3 [style = solid, label="expected"];
0->3 [style = solid, label="expected"];
7->3 [style = bold, label=""];
}
