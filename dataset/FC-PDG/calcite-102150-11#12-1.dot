digraph {
42 [style = filled, label = "BlockBuilder body = new BlockBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final int mod = collations.size() == 1? Modifier.FINAL: 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "selector = Expressions.call(BuiltInMethod.IDENTITY_SELECTOR.method)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "bridgeBody.add(Expressions.return_(null,Expressions.call(Expressions.parameter(,\"this\"),BuiltInMethod.COMPARATOR_COMPARE.method,Expressions.convert_(parameterO0,javaRowClass),Expressions.convert_(parameterO1,javaRowClass))))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final boolean descending = collation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "collations.size() == 1@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "arg0 = Types.castIfNecessary(,arg0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(method.getDeclaringClass(),method.getName(),arg0,arg1))))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "generateCollationKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "generateComparator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return Expressions.new_(,ImmutableList.of(),memberDeclarations)@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "arg1 = Types.castIfNecessary(,arg1)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final Expression selector@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final boolean nullsFirst = fieldCollation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "body.add(Expressions.return_(null,Expressions.constant(0)))@@@23@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "body.add(Expressions.statement(Expressions.assign(parameterC,Expressions.call(,fieldNullable(index)? (nullsFirst != descending? \"compareNullsFirst\": \"compareNullsLast\"): \"compare\",arg0,arg1))))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final List<MemberDeclaration> memberDeclarations = Expressions.list(Expressions.methodDecl(Modifier.PUBLIC,,\"compare\",ImmutableList.of(parameterV0,parameterV1),body.toBlock()))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "body.add(Expressions.ifThen(Expressions.notEqual(parameterC,Expressions.constant(0)),Expressions.return_(null,descending? Expressions.negate(parameterC): parameterC)))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "selector = Expressions.lambda(,fieldReference(parameter,collation.getFieldIndex()),parameter)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final Type javaRowClass = Primitive.box(this.javaRowClass)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@25@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "return Pair.of(selector,Expressions.call(BuiltInMethod.NULLS_COMPARATOR.method,Expressions.constant(collation.nullDirection == RelFieldCollation.NullDirection.FIRST),Expressions.constant(collation.getDirection() == RelFieldCollation.Direction.DESCENDING)))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ParameterExpression parameter = Expressions.parameter(javaRowClass,\"v\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final ParameterExpression parameterO1 = Expressions.parameter(,\"o1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "return Pair.of(selector,Expressions.new_(,ImmutableList.of(),memberDeclarations))@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final int mod = collation.getFieldCollations().size() == 1? Modifier.FINAL: 0@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Primitive.flavor(fieldClass(index))@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Expression arg1 = fieldReference(parameterV1,index)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final ParameterExpression parameterC = Expressions.parameter(,\"c\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "RelCollation collation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "Expression arg0 = fieldReference(parameterV0,index)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "body.add(Expressions.declare(mod,parameterC,null))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "generateCollationKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final Method method = (fieldNullable(index)? (nullsFirst ^ descending? BuiltInMethod.COMPARE_NULLS_FIRST: BuiltInMethod.COMPARE_NULLS_LAST): BuiltInMethod.COMPARE).method@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "arg0 = RexToLixTranslator.convert(arg0,)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "memberDeclarations.add(overridingMethodDecl(BuiltInMethod.COMPARATOR_COMPARE.method,ImmutableList.of(parameterO0,parameterO1),bridgeBody.toBlock()))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final boolean descending = fieldCollation.getDirection() == RelFieldCollation.Direction.DESCENDING@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "RelFieldCollation collation = collations.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<RelFieldCollation> collations@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final int index = fieldCollation.getFieldIndex()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "final ParameterExpression parameterV0 = Expressions.parameter(javaRowClass,\"v0\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final ParameterExpression parameterO0 = Expressions.parameter(,\"o0\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BlockBuilder bridgeBody = new BlockBuilder()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final boolean nullsFirst = collation.nullDirection == RelFieldCollation.NullDirection.FIRST@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "arg1 = RexToLixTranslator.convert(arg1,)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
32 [style = filled, label = "final int index = collation.getFieldIndex()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "EnumerableRules.BRIDGE_METHODS@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final ParameterExpression parameterV1 = Expressions.parameter(javaRowClass,\"v1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->24 [style = solid, label="parameter"];
14->24 [style = bold, label=""];
16->0 [style = bold, label=""];
50->0 [style = solid, label="parameterC"];
12->44 [style = bold, label=""];
41->29 [style = solid, label="parameterV0"];
20->8 [style = solid, label="parameterC"];
32->12 [style = dashed, label="0"];
49->55 [style = dotted, label="true"];
43->39 [style = solid, label="javaRowClass"];
25->35 [style = dotted, label="true"];
53->21 [style = solid, label="parameterO1"];
18->19 [style = solid, label="parameterO1"];
25->29 [style = dotted, label="true"];
25->35 [style = bold, label=""];
45->48 [style = bold, label=""];
28->14 [style = bold, label=""];
25->31 [style = bold, label=""];
32->22 [style = solid, label="index"];
22->8 [style = bold, label=""];
43->41 [style = solid, label="javaRowClass"];
19->5 [style = bold, label=""];
33->11 [style = bold, label=""];
30->28 [style = bold, label=""];
40->16 [style = bold, label=""];
31->8 [style = solid, label="arg0"];
0->25 [style = bold, label=""];
33->2 [style = dotted, label="true"];
14->11 [style = solid, label="parameter"];
3->45 [style = solid, label="arg1"];
49->4 [style = bold, label=""];
46->47 [style = solid, label="mod"];
0->29 [style = solid, label="arg1"];
14->3 [style = solid, label="parameter"];
11->1 [style = solid, label="parameterO0"];
20->15 [style = bold, label=""];
20->45 [style = bold, label=""];
39->50 [style = bold, label=""];
33->11 [style = dotted, label="true"];
27->12 [style = bold, label=""];
26->17 [style = bold, label=""];
49->54 [style = dotted, label="true"];
23->6 [style = solid, label="parameterV1"];
44->3 [style = bold, label=""];
9->32 [style = bold, label=""];
30->27 [style = bold, label=""];
49->53 [style = dotted, label="true"];
22->1 [style = solid, label="method"];
7->48 [style = dashed, label="0"];
31->29 [style = bold, label=""];
41->44 [style = solid, label="parameterV0"];
6->5 [style = solid, label="memberDeclarations"];
24->13 [style = solid, label="selector"];
11->18 [style = bold, label=""];
27->5 [style = solid, label="selector"];
52->54 [style = solid, label="parameterO0"];
10->22 [style = solid, label="descending"];
0->36 [style = solid, label="arg1"];
3->23 [style = bold, label=""];
31->35 [style = dashed, label="0"];
15->9 [style = bold, label=""];
20->16 [style = solid, label="arg0"];
49->21 [style = dotted, label="true"];
36->8 [style = solid, label="arg1"];
33->18 [style = dotted, label="true"];
29->4 [style = solid, label="memberDeclarations"];
12->3 [style = solid, label="index"];
51->42 [style = bold, label=""];
1->19 [style = bold, label=""];
30->28 [style = dotted, label="true"];
39->29 [style = solid, label="parameterV1"];
10->21 [style = solid, label="descending"];
0->31 [style = bold, label=""];
21->4 [style = bold, label=""];
24->13 [style = bold, label=""];
43->54 [style = solid, label="javaRowClass"];
23->20 [style = bold, label=""];
25->31 [style = dotted, label="true"];
2->1 [style = bold, label=""];
0->12 [style = bold, label=""];
16->31 [style = solid, label="arg0"];
29->8 [style = solid, label="arg1"];
29->49 [style = bold, label=""];
32->16 [style = bold, label=""];
33->5 [style = bold, label=""];
14->23 [style = solid, label="parameter"];
3->16 [style = solid, label="parameterV0"];
30->14 [style = dotted, label="true"];
23->20 [style = dotted, label="true"];
49->52 [style = dotted, label="true"];
13->27 [style = bold, label=""];
30->13 [style = dotted, label="true"];
10->40 [style = dashed, label="0"];
6->33 [style = bold, label=""];
12->16 [style = solid, label="index"];
25->36 [style = dotted, label="true"];
23->45 [style = dotted, label="true"];
54->21 [style = bold, label=""];
43->41 [style = bold, label=""];
15->9 [style = solid, label="mod"];
12->3 [style = bold, label=""];
37->34 [style = dotted, label="true"];
50->47 [style = solid, label="parameterC"];
32->16 [style = solid, label="index"];
44->20 [style = solid, label="arg0"];
18->1 [style = solid, label="parameterO1"];
14->18 [style = solid, label="parameter"];
53->55 [style = bold, label=""];
10->22 [style = bold, label=""];
16->35 [style = solid, label="arg0"];
32->0 [style = solid, label="index"];
35->8 [style = solid, label="arg0"];
53->54 [style = solid, label="parameterO1"];
29->36 [style = dashed, label="0"];
14->1 [style = solid, label="parameter"];
42->43 [style = bold, label=""];
52->53 [style = bold, label=""];
30->24 [style = dotted, label="true"];
40->0 [style = solid, label="descending"];
7->10 [style = bold, label=""];
4->6 [style = bold, label=""];
26->34 [style = dotted, label="true"];
50->46 [style = bold, label=""];
47->12 [style = bold, label=""];
37->17 [style = bold, label=""];
50->16 [style = solid, label="parameterC"];
17->30 [style = bold, label=""];
18->2 [style = bold, label=""];
45->16 [style = solid, label="arg1"];
46->47 [style = bold, label=""];
5->4 [style = dashed, label="0"];
48->40 [style = bold, label=""];
20->21 [style = solid, label="parameterC"];
14->20 [style = solid, label="parameter"];
12->44 [style = solid, label="index"];
20->9 [style = solid, label="parameterC"];
51->38 [style = dotted, label="true"];
6->29 [style = dashed, label="0"];
49->52 [style = bold, label=""];
22->19 [style = solid, label="method"];
15->46 [style = dashed, label="0"];
36->7 [style = bold, label=""];
39->3 [style = solid, label="parameterV1"];
12->23 [style = solid, label="index"];
21->32 [style = bold, label=""];
33->1 [style = dotted, label="true"];
8->21 [style = bold, label=""];
29->7 [style = bold, label=""];
33->19 [style = dotted, label="true"];
32->25 [style = solid, label="index"];
23->0 [style = solid, label="parameterV1"];
35->36 [style = bold, label=""];
41->39 [style = bold, label=""];
55->54 [style = bold, label=""];
11->19 [style = solid, label="parameterO0"];
52->21 [style = solid, label="parameterO0"];
40->16 [style = solid, label="descending"];
3->6 [style = solid, label="parameterV0"];
}
