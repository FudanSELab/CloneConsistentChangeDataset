digraph {
20 [style = filled, label = "final RexNode e2 = f.simplify.simplify(e)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Matcher<String> intervalMatcher@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "checkDateRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Fixture f@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "RexNode e@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "e = DateRangeRules.replaceTimeUnits(f.rexBuilder,e,\"UTC\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "RexNode e@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Matcher<String> intervalMatcher@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "checkDateRangeNoSimplify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<Interval> intervals = DruidDateTimeUtils.createInterval(e)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final List<Interval> intervals = DruidDateTimeUtils.createInterval(e,\"UTC\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertThat(intervals.toString(),intervalMatcher)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "intervals == null@@@6@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "RexNode e@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(intervals.toString(),intervalMatcher)@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Fixture f@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(intervals,notNullValue())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "checkDateRangeNoSimplify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "throw new AssertionError(\"null interval\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Fixture f@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "List<Interval> intervals = DruidDateTimeUtils.createInterval(e2,\"UTC\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
17->14 [style = solid, label="intervals"];
2->20 [style = bold, label=""];
20->17 [style = bold, label=""];
2->1 [style = solid, label="e"];
7->17 [style = dashed, label="0"];
2->1 [style = bold, label=""];
18->19 [style = dotted, label="true"];
11->9 [style = dotted, label="true"];
11->5 [style = dotted, label="true"];
5->4 [style = solid, label="intervalMatcher"];
7->4 [style = bold, label=""];
20->17 [style = solid, label="e2"];
1->10 [style = dashed, label="0"];
18->2 [style = bold, label=""];
12->2 [style = solid, label="e"];
2->10 [style = bold, label=""];
15->16 [style = bold, label=""];
1->7 [style = bold, label=""];
10->7 [style = bold, label=""];
11->2 [style = bold, label=""];
6->2 [style = bold, label=""];
3->2 [style = solid, label="e"];
14->15 [style = dotted, label="true"];
18->12 [style = dotted, label="true"];
8->2 [style = solid, label="e"];
2->10 [style = solid, label="e"];
2->20 [style = solid, label="e"];
17->14 [style = bold, label=""];
10->7 [style = solid, label="intervals"];
11->8 [style = dotted, label="true"];
14->15 [style = bold, label=""];
6->0 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
13->16 [style = solid, label="intervalMatcher"];
5->19 [style = dashed, label="0"];
1->7 [style = solid, label="intervals"];
9->4 [style = solid, label="intervalMatcher"];
6->5 [style = dotted, label="true"];
18->13 [style = dotted, label="true"];
}
