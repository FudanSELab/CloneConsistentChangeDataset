digraph {
21 [style = filled, label = "implement['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "EnumerableRel input = (EnumerableRel)ord.e@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Result result = implementor.visitChild(this,ord.i,input,pref)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "unionExp == null@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "unionExp = all? Expressions.call(unionExp,BuiltInMethod.CONCAT.method,childExp): Expressions.call(unionExp,BuiltInMethod.UNION.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "intersectExp = childExp@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Expression unionExp = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return implementor.result(physType,builder.toBlock())@@@19@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Expression intersectExp = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "builder.add(intersectExp)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Prefer pref@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Expression childExp = builder.append(\"child\" + ord.i,result.block)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final BlockBuilder builder = new BlockBuilder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "pref = pref.of(result.format)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "intersectExp == null@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "implement['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "intersectExp = Expressions.call(intersectExp,BuiltInMethod.INTERSECT.method,Expressions.list(childExp).appendIfNotNull(result.physType.comparer()).append(Expressions.constant(all)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final PhysType physType = PhysTypeImpl.of(implementor.getTypeFactory(),getRowType(),pref.prefer(JavaRowFormat.CUSTOM))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "builder.add(unionExp)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "implement['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "builder.add(requireNonNull(unionExp,\"unionExp\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "EnumerableRelImplementor implementor@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "unionExp = childExp@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->12 [style = solid, label="unionExp"];
10->18 [style = bold, label=""];
8->19 [style = dashed, label="0"];
19->18 [style = solid, label="intersectExp"];
18->24 [style = bold, label=""];
7->11 [style = bold, label=""];
8->12 [style = solid, label="unionExp"];
18->24 [style = dotted, label="false"];
1->15 [style = bold, label=""];
10->20 [style = solid, label="childExp"];
0->12 [style = bold, label=""];
11->4 [style = solid, label="result"];
12->15 [style = bold, label=""];
1->13 [style = solid, label="unionExp"];
20->24 [style = solid, label="intersectExp"];
21->17 [style = dotted, label="true"];
3->4 [style = solid, label="physType"];
18->20 [style = dotted, label="true"];
9->8 [style = bold, label=""];
23->11 [style = solid, label="pref"];
15->3 [style = bold, label=""];
1->7 [style = bold, label=""];
1->13 [style = bold, label=""];
1->0 [style = solid, label="unionExp"];
12->7 [style = bold, label=""];
3->4 [style = bold, label=""];
20->18 [style = solid, label="intersectExp"];
8->0 [style = solid, label="unionExp"];
8->7 [style = bold, label=""];
13->15 [style = dashed, label="0"];
1->20 [style = dashed, label="0"];
22->3 [style = bold, label=""];
12->13 [style = bold, label=""];
18->20 [style = bold, label=""];
21->9 [style = bold, label=""];
5->11 [style = solid, label="pref"];
23->22 [style = bold, label=""];
6->2 [style = dotted, label="true"];
24->22 [style = solid, label="intersectExp"];
10->1 [style = solid, label="childExp"];
12->0 [style = solid, label="unionExp"];
13->3 [style = bold, label=""];
20->23 [style = bold, label=""];
10->12 [style = solid, label="childExp"];
19->24 [style = solid, label="intersectExp"];
11->10 [style = bold, label=""];
0->1 [style = bold, label=""];
1->15 [style = solid, label="unionExp"];
12->24 [style = dashed, label="0"];
10->0 [style = bold, label=""];
16->14 [style = dotted, label="true"];
16->5 [style = dotted, label="true"];
20->22 [style = solid, label="intersectExp"];
9->19 [style = bold, label=""];
0->12 [style = dotted, label="false"];
12->13 [style = solid, label="unionExp"];
0->18 [style = dashed, label="0"];
23->7 [style = bold, label=""];
12->15 [style = solid, label="unionExp"];
6->9 [style = bold, label=""];
7->11 [style = solid, label="input"];
24->18 [style = solid, label="intersectExp"];
13->22 [style = dashed, label="0"];
19->7 [style = bold, label=""];
16->9 [style = bold, label=""];
6->5 [style = dotted, label="true"];
0->1 [style = dotted, label="true"];
21->5 [style = dotted, label="true"];
24->23 [style = bold, label=""];
}
