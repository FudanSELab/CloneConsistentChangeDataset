digraph {
31 [style = filled, label = "DialCap c1 = new DialCap()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "c2.setXPosition(TimePeriodAnchor.END)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "DialCap c2 = new DialCap()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int h2 = c2.hashCode()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertTrue(c1.equals(c2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "OHLCSeriesCollection c2 = new OHLCSeriesCollection()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "c1.setXPosition(TimePeriodAnchor.END)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertFalse(c1.equals(c2))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "OHLCSeries<String> s2 = new OHLCSeries<>(\"Series\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "c2.addSeries(new OHLCSeries(\"Empty Series\"))@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "OHLCSeries<String> s1 = new OHLCSeries<>(\"Series\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "c2.addSeries(new OHLCSeries<>(\"Empty Series\"))@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "OHLCSeries s2 = new OHLCSeries(\"Series\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "c1.addSeries(new OHLCSeries<>(\"Empty Series\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(h1,h2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(c1.equals(c2))@@@21@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "c2.addSeries(s2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHashCode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "c1.addSeries(new OHLCSeries(\"Empty Series\"))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "int h1 = c1.hashCode()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "s2.add(new Year(2006),1.0,1.1,1.2,1.3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2->20 [style = bold, label=""];
3->24 [style = bold, label=""];
16->11 [style = solid, label="c2"];
24->0 [style = bold, label=""];
16->9 [style = solid, label="c2"];
6->12 [style = solid, label="s1"];
10->5 [style = solid, label="s2"];
28->25 [style = solid, label="c2"];
29->31 [style = bold, label=""];
14->22 [style = bold, label=""];
23->4 [style = bold, label=""];
16->14 [style = solid, label="c2"];
2->18 [style = bold, label=""];
19->11 [style = bold, label=""];
20->14 [style = bold, label=""];
16->7 [style = solid, label="c2"];
17->19 [style = bold, label=""];
22->7 [style = bold, label=""];
9->6 [style = bold, label=""];
26->30 [style = bold, label=""];
9->23 [style = bold, label=""];
8->1 [style = bold, label=""];
3->10 [style = bold, label=""];
6->4 [style = bold, label=""];
25->27 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
16->2 [style = solid, label="c2"];
1->16 [style = bold, label=""];
13->7 [style = bold, label=""];
24->5 [style = solid, label="s2"];
18->20 [style = dashed, label="0"];
10->0 [style = bold, label=""];
21->1 [style = bold, label=""];
16->17 [style = solid, label="c2"];
26->30 [style = solid, label="h2"];
4->12 [style = bold, label=""];
28->25 [style = bold, label=""];
7->15 [style = bold, label=""];
12->3 [style = bold, label=""];
31->28 [style = bold, label=""];
14->13 [style = bold, label=""];
1->9 [style = solid, label="c1"];
23->12 [style = solid, label="s1"];
27->30 [style = solid, label="h1"];
13->22 [style = dashed, label="0"];
18->14 [style = bold, label=""];
16->3 [style = solid, label="c2"];
16->9 [style = bold, label=""];
6->23 [style = dashed, label="0"];
10->24 [style = dashed, label="0"];
0->5 [style = bold, label=""];
27->26 [style = bold, label=""];
}
