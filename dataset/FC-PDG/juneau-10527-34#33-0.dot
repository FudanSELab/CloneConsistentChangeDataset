digraph {
2 [style = filled, label = "ASortedMap<String,Object> m = ASortedMap.create()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "addBeanTypes = ps.getFirstBoolean(RDF_addBeanTypes,SERIALIZER_addBeanTypes).orElse(false)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "super(ps,consumes)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "trimWhitespace = ps.getBoolean(RDF_trimWhitespace).orElse(false)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "juneauBpNs = ps.get(RDF_juneauBpNs,).orElse(DEFAULT_JUNEAUBP_NS)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "String consumes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "String produces@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "RdfSerializer['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "juneauNs = ps.get(RDF_juneauNs,).orElse(DEFAULT_JUNEAU_NS)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "looseCollections = ps.getBoolean(RDF_looseCollections).orElse(false)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RdfParser['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "k.startsWith(\"jena.\")@@@11@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rdfLanguage = ps.getString(RDF_language,\"RDF/XML-ABBREV\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "autoDetectNamespaces = !ps.getBoolean(RDF_disableAutoDetectNamespaces).orElse(false)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "super(ps,produces,accept)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "addLiteralTypes = ps.getBoolean(RDF_addLiteralTypes).orElse(false)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PropertyStore ps@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PropertyStore ps@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "namespaces = ps.get(RDF_namespaces,).orElse(new Namespace(((()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String accept@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "k.startsWith(\"jena.\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ASortedMap<String,Object> m = ASortedMap.create()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "PropertyStore ps@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "looseCollections = ps.getBoolean(RDF_looseCollections).orElse(false)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "jenaProperties = m.unmodifiable()@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RdfParser['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rdfLanguage = ps.getString(RDF_language).orElse(\"RDF/XML-ABBREV\")@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "addRootProperty = ps.getBoolean(RDF_addRootProperty).orElse(false)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "collectionFormat = ps.get(RDF_collectionFormat,).orElse(RdfCollectionFormat.DEFAULT)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "collectionFormat = ps.get(RDF_collectionFormat,).orElse(RdfCollectionFormat.DEFAULT)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "useXmlNamespaces = !ps.getBoolean(RDF_disableUseXmlNamespaces).orElse(false)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "k.startsWith(\"jena.\")@@@11@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "rdfLanguage = ps.getString(RDF_language,\"RDF/XML-ABBREV\")@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "m.put(k.substring(5),ps.get(\"RdfCommon.\" + k).orElse(null))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27->13 [style = bold, label=""];
17->10 [style = bold, label=""];
13->25 [style = bold, label=""];
5->8 [style = bold, label=""];
1->8 [style = solid, label="ps"];
15->13 [style = bold, label=""];
3->17 [style = dashed, label="0"];
10->28 [style = bold, label=""];
19->26 [style = dotted, label="true"];
16->8 [style = bold, label=""];
29->30 [style = bold, label=""];
25->22 [style = bold, label=""];
19->31 [style = bold, label=""];
6->8 [style = solid, label="consumes"];
19->20 [style = dotted, label="true"];
21->33 [style = bold, label=""];
5->1 [style = dotted, label="true"];
30->23 [style = bold, label=""];
19->18 [style = dotted, label="true"];
5->6 [style = dotted, label="true"];
4->27 [style = dashed, label="0"];
31->29 [style = bold, label=""];
9->17 [style = bold, label=""];
6->8 [style = solid, label="ps"];
32->27 [style = bold, label=""];
21->24 [style = bold, label=""];
12->0 [style = bold, label=""];
11->2 [style = bold, label=""];
2->12 [style = bold, label=""];
8->7 [style = bold, label=""];
20->31 [style = solid, label="ps"];
15->13 [style = dotted, label="true"];
7->9 [style = bold, label=""];
3->10 [style = bold, label=""];
12->13 [style = bold, label=""];
14->8 [style = solid, label="consumes"];
12->13 [style = dotted, label="true"];
13->12 [style = bold, label=""];
33->21 [style = dotted, label="true"];
22->0 [style = bold, label=""];
0->33 [style = bold, label=""];
10->32 [style = dashed, label="0"];
6->26 [style = dashed, label="0"];
33->24 [style = bold, label=""];
15->0 [style = bold, label=""];
16->6 [style = dotted, label="true"];
2->15 [style = bold, label=""];
16->14 [style = dotted, label="true"];
18->31 [style = solid, label="produces"];
10->4 [style = bold, label=""];
23->10 [style = bold, label=""];
9->3 [style = bold, label=""];
7->29 [style = dashed, label="0"];
13->15 [style = bold, label=""];
8->31 [style = dashed, label="0"];
26->31 [style = solid, label="accept"];
33->21 [style = bold, label=""];
4->11 [style = bold, label=""];
4->32 [style = bold, label=""];
28->4 [style = bold, label=""];
13->0 [style = bold, label=""];
}
