digraph {
12 [style = filled, label = "when(builder.tcpKeepAlive(anyBoolean())).thenReturn(builder)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "when(builder.connectionTimeout(any())).thenReturn(builder)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "mockHttpClientBuilder['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "when(builder.credentialsProvider(any())).thenReturn(builder)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "when(builder.overrideConfiguration(any())).thenReturn(builder)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "when(builder.maxConcurrency(anyInt())).thenReturn(builder)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return builder@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(builder.http2Configuration(any())).thenReturn(builder)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "mockKinesisAsyncClientBuilder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "when(builder.writeTimeout(any())).thenReturn(builder)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(builder.httpClient(any())).thenReturn(builder)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "when(builder.readTimeout(any())).thenReturn(builder)@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "mockHttpClientBuilder['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "when(builder.region(any())).thenReturn(builder)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "return builder@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(builder.protocol(any())).thenReturn(builder)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "when(builder.connectionMaxIdleTime(any())).thenReturn(builder)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(builder.useIdleConnectionReaper(anyBoolean())).thenReturn(builder)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "when(builder.connectionAcquisitionTimeout(any())).thenReturn(builder)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "KinesisAsyncClientBuilder builder = mock()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "NettyNioAsyncHttpClient.Builder builder = mock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->3 [style = bold, label=""];
1->3 [style = solid, label="builder"];
1->8 [style = solid, label="builder"];
14->15 [style = solid, label="builder"];
14->18 [style = solid, label="builder"];
1->11 [style = solid, label="builder"];
15->18 [style = bold, label=""];
1->6 [style = solid, label="builder"];
0->7 [style = bold, label=""];
10->9 [style = bold, label=""];
2->5 [style = bold, label=""];
16->19 [style = bold, label=""];
7->6 [style = bold, label=""];
9->2 [style = bold, label=""];
1->14 [style = dashed, label="0"];
1->2 [style = solid, label="builder"];
14->19 [style = solid, label="builder"];
6->8 [style = bold, label=""];
4->1 [style = bold, label=""];
8->19 [style = dashed, label="0"];
14->17 [style = solid, label="builder"];
1->10 [style = solid, label="builder"];
1->5 [style = solid, label="builder"];
1->12 [style = solid, label="builder"];
19->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
18->16 [style = bold, label=""];
13->1 [style = bold, label=""];
1->7 [style = solid, label="builder"];
5->12 [style = bold, label=""];
12->11 [style = bold, label=""];
5->3 [style = bold, label=""];
0->15 [style = dashed, label="0"];
1->9 [style = solid, label="builder"];
14->16 [style = solid, label="builder"];
20->14 [style = bold, label=""];
14->15 [style = bold, label=""];
1->0 [style = solid, label="builder"];
8->10 [style = bold, label=""];
7->18 [style = dashed, label="0"];
1->0 [style = bold, label=""];
}
