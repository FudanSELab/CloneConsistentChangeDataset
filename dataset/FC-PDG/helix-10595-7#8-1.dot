digraph {
29 [style = filled, label = "boolean result = ClusterStateVerifier.verifyByZkCallback(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "System.out.println(\"Expired controller session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 6 + 5*n zk-watchers.\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 (n) participant\")@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@70@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String oldSessionId = participantManagerToExpire.getSessionId()@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "i < n@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "Assert.assertEquals(controllerHandlerNb,9,\"HelixController should have 9 (5+2n) callback handlers for 2 participant, but was \" + controllerHandlerNb + \", \" + printHandlers(controller))@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String instanceName = \"localhost_\" + (12918 + i)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ZkTestHelper.expireSession(participantManagerToExpire.getZkClient())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManagerToExpire.getSessionId())return watchPaths.size() == 1}},500)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "participants(i(.syncStart()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "int i = 0@@@74@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "participants(i(.syncStop()@@@68@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String className = TestHelper.getTestClassName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher. MESSAGESHelixTaskExecutor\")@@@39@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "i++@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@60@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TestHelper.setupCluster(clusterName,ZK_ADDR,12918,\"localhost\",\"TestDB\",1,32,n,2,\"MasterSlave\",true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final MockParticipantManager participantManagerToExpire = participants(1(@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "System.out.println(\"Expiring participant session...\")@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + controller.getSessionId())return watchPaths.size() == (6 + 5 * n)}},500)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){int controllerHandlerNb = controller.getHandlers().size()int particHandlerNb = participantManager.getHandlers().size()if (controllerHandlerNb == 9 && particHandlerNb == 2) return truereturn false}},1000)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String clusterName = className + \"_\" + methodName@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "String methodName = TestHelper.getTestMethodName()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "int controllerHandlerNb = controller.getHandlers().size()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "System.out.println(\"Expried participant session. oldSessionId: \" + oldSessionId + \", newSessionId: \" + newSessionId)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(particHandlerNb,1,\"HelixParticipant should have 1 (msgHelixTaskExecutor) callback handlers\")@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "handlerNb = participantManager.getHandlers().size()@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "System.out.println(\"Expiring controller session...\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "System.out.println(\"END \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@79@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "final int n = 2@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(result)@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "Assert.assertEquals(handlerNb,controllerHandlerNb,\"controller callback handlers should not increase after participant session expiry, but was \" + printHandlers(controller))@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry\")@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "controller.syncStop()@@@64@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 1 zk-watcher after session expiry.\")@@@68@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertTrue(result)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "controller.syncStart()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "Assert.assertEquals(handlerNb,particHandlerNb,\"participant callback handlers should not increase after participant session expiry, but was \" + printHandlers(participantManager))@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "i++@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "result = TestHelper.verify(new TestHelper.Verifier(){@Override public boolean verify(){Map<String,Set<String>> watchers = ZkTestHelper.getListenersBySession(ZK_ADDR)Set<String> watchPaths = watchers.get(\"0x\" + participantManager.getSessionId())return watchPaths.size() == 2}},500)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "i < n@@@75@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "int i = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i++@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(particHandlerNb,2,\"HelixParticipant should have 2 (msg+cur-state) callback handlers, but was \" + particHandlerNb + \", \" + printHandlers(participantManager))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertTrue(result,\"Controller should have 6 + 5*n zk-watchers after session expiry.\")@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String newSessionId = participantManagerToExpire.getSessionId()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 2 zk-watchers after session expiry.\")@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "final MockParticipantManager participantManager = participants(0(@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(result,\"Participant should have 2 zk-watchers.\")@@@39@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "participants(i( = new MockParticipantManager(ZK_ADDR,clusterName,instanceName)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(particHandlerNb,2,\"HelixParticipant should have 2 (msg+cur-state) callback handlers\")@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "String newSessionId = controller.getSessionId()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "System.out.println(\"START \" + clusterName + \" at \" + new Date(System.currentTimeMillis()))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ZkTestHelper.expireSession(controller.getZkClient())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "MockParticipantManager(( participants = new MockParticipantManager((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "i < n@@@66@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int handlerNb = controller.getHandlers().size()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "participants(i(.syncStop()@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "String oldSessionId = controller.getSessionId()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "result = ClusterStateVerifier.verifyByPolling(new ClusterStateVerifier.BestPossAndExtViewZkVerifier(ZK_ADDR,clusterName))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "int particHandlerNb = participantManager.getHandlers().size()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "controller.syncStop()@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "int i = 0@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "testCbHandlerLeakOnParticipantSessionExpiry['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "handlerNb = participantManagerToExpire.getHandlers().size()@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "testCbHandlerLeakOnControllerSessionExpiry['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final ClusterControllerManager controller = new ClusterControllerManager(ZK_ADDR,clusterName,\"controller_0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42->23 [style = bold, label=""];
54->69 [style = solid, label="handlerNb"];
64->21 [style = bold, label=""];
1->55 [style = bold, label=""];
44->2 [style = solid, label="n"];
41->19 [style = bold, label=""];
31->9 [style = bold, label=""];
51->24 [style = bold, label=""];
70->65 [style = bold, label=""];
65->57 [style = bold, label=""];
55->62 [style = bold, label=""];
15->54 [style = dashed, label="0"];
4->15 [style = bold, label=""];
38->39 [style = dotted, label="true"];
21->8 [style = bold, label=""];
18->7 [style = solid, label="result"];
24->4 [style = solid, label="handlerNb"];
22->59 [style = solid, label="handlerNb"];
49->0 [style = bold, label=""];
41->40 [style = solid, label="oldSessionId"];
58->9 [style = bold, label=""];
70->59 [style = solid, label="controllerHandlerNb"];
66->0 [style = bold, label=""];
71->67 [style = bold, label=""];
22->59 [style = bold, label=""];
3->64 [style = dashed, label="0"];
28->43 [style = bold, label=""];
64->56 [style = solid, label="participantManager"];
30->46 [style = solid, label="result"];
30->46 [style = bold, label=""];
45->38 [style = bold, label=""];
2->14 [style = bold, label=""];
44->21 [style = solid, label="n"];
48->10 [style = bold, label=""];
39->38 [style = bold, label=""];
32->28 [style = solid, label="i"];
60->68 [style = bold, label=""];
14->59 [style = solid, label="controller"];
40->31 [style = bold, label=""];
53->60 [style = bold, label=""];
47->0 [style = bold, label=""];
33->44 [style = bold, label=""];
67->62 [style = solid, label="i"];
59->54 [style = bold, label=""];
29->13 [style = solid, label="result"];
35->40 [style = solid, label="newSessionId"];
43->12 [style = dotted, label="true"];
12->28 [style = bold, label=""];
35->68 [style = dashed, label="0"];
26->3 [style = solid, label="participants"];
8->18 [style = bold, label=""];
16->6 [style = bold, label=""];
70->57 [style = solid, label="controllerHandlerNb"];
55->62 [style = solid, label="i"];
7->48 [style = dashed, label="0"];
37->3 [style = solid, label="participants"];
44->62 [style = solid, label="n"];
22->51 [style = solid, label="result"];
64->69 [style = solid, label="participantManager"];
19->60 [style = dashed, label="0"];
6->57 [style = dashed, label="0"];
53->52 [style = solid, label="oldSessionId"];
33->2 [style = solid, label="clusterName"];
44->38 [style = solid, label="n"];
35->40 [style = bold, label=""];
41->53 [style = dashed, label="0"];
43->12 [style = bold, label=""];
58->9 [style = solid, label="result"];
39->17 [style = solid, label="i"];
43->28 [style = dotted, label="true"];
10->6 [style = solid, label="controllerHandlerNb"];
0->20 [style = bold, label=""];
37->45 [style = bold, label=""];
16->50 [style = solid, label="particHandlerNb"];
36->37 [style = bold, label=""];
4->59 [style = dashed, label="0"];
63->53 [style = bold, label=""];
18->7 [style = bold, label=""];
32->43 [style = solid, label="i"];
44->58 [style = solid, label="n"];
38->17 [style = bold, label=""];
17->26 [style = solid, label="instanceName"];
27->50 [style = dashed, label="0"];
28->43 [style = solid, label="i"];
50->34 [style = bold, label=""];
14->36 [style = bold, label=""];
37->64 [style = solid, label="participants"];
13->64 [style = bold, label=""];
62->1 [style = bold, label=""];
68->52 [style = bold, label=""];
25->39 [style = bold, label=""];
62->55 [style = dotted, label="true"];
33->14 [style = solid, label="clusterName"];
52->61 [style = bold, label=""];
65->69 [style = solid, label="particHandlerNb"];
26->39 [style = solid, label="i"];
23->32 [style = bold, label=""];
10->4 [style = solid, label="controllerHandlerNb"];
1->51 [style = dashed, label="0"];
27->56 [style = dashed, label="0"];
38->25 [style = dotted, label="true"];
20->33 [style = solid, label="methodName"];
33->31 [style = solid, label="clusterName"];
33->11 [style = solid, label="clusterName"];
6->27 [style = bold, label=""];
44->30 [style = solid, label="n"];
22->51 [style = bold, label=""];
16->27 [style = solid, label="particHandlerNb"];
27->34 [style = bold, label=""];
18->48 [style = bold, label=""];
10->16 [style = bold, label=""];
33->61 [style = solid, label="clusterName"];
43->5 [style = bold, label=""];
15->42 [style = solid, label="handlerNb"];
19->35 [style = bold, label=""];
26->64 [style = solid, label="participants"];
16->42 [style = solid, label="particHandlerNb"];
3->21 [style = bold, label=""];
68->52 [style = solid, label="newSessionId"];
22->1 [style = bold, label=""];
56->63 [style = bold, label=""];
42->69 [style = dashed, label="0"];
16->58 [style = bold, label=""];
33->29 [style = solid, label="clusterName"];
46->22 [style = bold, label=""];
62->1 [style = dotted, label="true"];
17->26 [style = bold, label=""];
40->52 [style = dashed, label="0"];
61->16 [style = bold, label=""];
18->48 [style = solid, label="result"];
7->10 [style = bold, label=""];
62->4 [style = bold, label=""];
33->5 [style = solid, label="clusterName"];
33->4 [style = solid, label="clusterName"];
31->9 [style = solid, label="result"];
26->25 [style = bold, label=""];
38->29 [style = bold, label=""];
54->69 [style = bold, label=""];
67->55 [style = solid, label="i"];
39->38 [style = solid, label="i"];
9->30 [style = bold, label=""];
34->41 [style = bold, label=""];
32->43 [style = bold, label=""];
33->26 [style = solid, label="clusterName"];
11->2 [style = bold, label=""];
21->70 [style = bold, label=""];
20->33 [style = bold, label=""];
22->1 [style = solid, label="result"];
67->62 [style = bold, label=""];
57->56 [style = bold, label=""];
61->16 [style = solid, label="result"];
38->26 [style = dotted, label="true"];
0->33 [style = solid, label="className"];
24->4 [style = bold, label=""];
69->71 [style = bold, label=""];
45->38 [style = solid, label="i"];
13->3 [style = bold, label=""];
15->42 [style = bold, label=""];
1->24 [style = bold, label=""];
38->17 [style = dotted, label="true"];
6->50 [style = bold, label=""];
65->56 [style = solid, label="particHandlerNb"];
14->57 [style = solid, label="controller"];
44->11 [style = bold, label=""];
45->17 [style = solid, label="i"];
21->8 [style = solid, label="result"];
16->65 [style = dashed, label="0"];
44->43 [style = solid, label="n"];
34->63 [style = dashed, label="0"];
29->13 [style = bold, label=""];
}
