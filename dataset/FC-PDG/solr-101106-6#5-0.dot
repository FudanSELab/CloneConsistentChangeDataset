digraph {
40 [style = filled, label = "SchemaRequest.FieldType fieldTypeRequest = new SchemaRequest.FieldType(fieldTypeName)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "List<FieldTypeRepresentation> currentFieldTypes = currentFieldTypesResponse.getFieldTypes()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(analyzerDefinition.getTokenizer().get(\"class\"),is(equalTo(newFieldTypeRepresentation.getAnalyzer().getTokenizer().get(\"class\"))))@@@55@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "fieldTypeAttributes.put(\"positionIncrementGap\",\"100\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String dynamicFieldName = \"*_accuracy\"@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "SchemaRequest.AddField addFieldRequest = new SchemaRequest.AddField(fieldAttributes)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Map<String,Object> tokenizerAttributes = new LinkedHashMap<>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,Object> fieldAttributes = new LinkedHashMap<>()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "charFilterAttributes.put(\"pattern\",\"((a-zA-Z()\\1+\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "Map<String,Object> filterAttributes = new LinkedHashMap<>()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "SchemaResponse.FieldTypesResponse currentFieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "FieldTypeRepresentation newFieldTypeRepresentation = newFieldTypeResponse.getFieldType()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "AnalyzerDefinition analyzerDefinition = new AnalyzerDefinition()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "analyzerDefinition.setCharFilters(Collections.singletonList(charFilterAttributes))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "return new SchemaRequest.AddFieldType(fieldTypeDefinition)@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "charFilterAttributes.put(\"class\",\"solr.PatternReplaceCharFilterFactory\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String fieldTypeName = \"accuracyTextField\"@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "filterAttributes.put(\"preserveOriginal\",\"0\")@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "AnalyzerDefinition indexAnalyzerDefinition = new AnalyzerDefinition()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "fieldTypeAttributes.put(\"class\",\"solr.TextField\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Map<String,Object> fieldTypeAttributes = new LinkedHashMap<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "analyzerDefinition.setFilters(Collections.singletonList(filterAttributes))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "fieldAttributes.put(\"type\",fieldTypeName)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "filterAttributes.put(\"class\",\"solr.WordDelimiterFilterFactory\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
68 [style = filled, label = "createFieldTypeRequest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "fieldTypeDefinition.setAnalyzer(analyzerDefinition)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "fieldAttributes.put(\"name\",fieldName)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "iTokenizerAttributes.put(\"class\",\"solr.PathHierarchyTokenizerFactory\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "fieldTypeAttributes.put(\"name\",fieldTypeName)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testAddFieldTypeAccuracy['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "FieldTypeDefinition fieldTypeDefinition = new FieldTypeDefinition()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<FieldTypeRepresentation> initialFieldTypes = initialFieldTypesResponse.getFieldTypes()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "charFilterAttributes.put(\"replacement\",\"$1$1\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertValidSchemaResponse(addFieldResponse)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "SchemaResponse.UpdateResponse addFieldTypeResponse = addFieldTypeRequest.process(getSolrClient())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "filterAttributes.put(\"class\",\"solr.WordDelimiterGraphFilterFactory\")@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
69 [style = filled, label = "indexAnalyzerDefinition.setTokenizer(iTokenizerAttributes)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "analyzerDefinition.setTokenizer(tokenizerAttributes)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "fieldTypeDefinition.setQueryAnalyzer(queryAnalyzerDefinition)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(fieldTypeName,is(equalTo(newFieldTypeRepresentation.getAttributes().get(\"name\"))))@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "SchemaRequest.FieldTypes fieldTypesRequest = new SchemaRequest.FieldTypes()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertValidSchemaResponse(addDynamicFieldResponse)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertValidSchemaResponse(newFieldTypeResponse)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "SchemaResponse.FieldTypesResponse initialFieldTypesResponse = fieldTypesRequest.process(getSolrClient())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Map<String,Object> charFilterAttributes = new LinkedHashMap<>()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "iTokenizerAttributes.put(\"delimiter\",\"/\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "dynamicFieldAttributes.put(\"name\",dynamicFieldName)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "qTokenizerAttributes.put(\"class\",\"solr.KeywordTokenizerFactory\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "AnalyzerDefinition queryAnalyzerDefinition = new AnalyzerDefinition()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "Map<String,Object> iTokenizerAttributes = new LinkedHashMap<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "tokenizerAttributes.put(\"class\",\"solr.WhitespaceTokenizerFactory\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Map<String,Object> dynamicFieldAttributes = new LinkedHashMap<>()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "fieldTypeDefinition.setAttributes(fieldTypeAttributes)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(initialFieldTypes.size() + 1,currentFieldTypes.size())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String fieldName = \"accuracyField\"@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertThat(\"solr.TextField\",is(equalTo(newFieldTypeRepresentation.getAttributes().get(\"class\"))))@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "dynamicFieldAttributes.put(\"type\",fieldTypeName)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "SchemaResponse.UpdateResponse addDynamicFieldResponse = addDynamicFieldRequest.process(getSolrClient())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "fieldTypeDefinition.setIndexAnalyzer(indexAnalyzerDefinition)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "Map<String,Object> qTokenizerAttributes = new LinkedHashMap<>()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "SchemaResponse.FieldTypeResponse newFieldTypeResponse = fieldTypeRequest.process(getSolrClient())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertValidSchemaResponse(addFieldTypeResponse)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SchemaRequest.AddDynamicField addDynamicFieldRequest = new SchemaRequest.AddDynamicField(dynamicFieldAttributes)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "queryAnalyzerDefinition.setTokenizer(qTokenizerAttributes)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "testAddFieldTypeAccuracy['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "String fieldTypeName@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertValidSchemaResponse(initialFieldTypesResponse)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "SchemaResponse.UpdateResponse addFieldResponse = addFieldRequest.process(getSolrClient())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(0,currentFieldTypesResponse.getStatus())@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "SchemaRequest.AddFieldType addFieldTypeRequest = new SchemaRequest.AddFieldType(fieldTypeDefinition)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55->36 [style = bold, label=""];
32->23 [style = bold, label=""];
61->56 [style = bold, label=""];
38->51 [style = bold, label=""];
28->40 [style = solid, label="fieldTypeName"];
29->0 [style = bold, label=""];
26->54 [style = dashed, label="0"];
46->31 [style = bold, label=""];
12->9 [style = bold, label=""];
5->38 [style = bold, label=""];
5->38 [style = solid, label="fieldName"];
48->54 [style = bold, label=""];
8->0 [style = bold, label=""];
25->10 [style = solid, label="dynamicFieldAttributes"];
6->33 [style = solid, label="addFieldResponse"];
54->16 [style = bold, label=""];
69->58 [style = bold, label=""];
33->25 [style = bold, label=""];
60->59 [style = solid, label="fieldTypeDefinition"];
28->31 [style = solid, label="fieldTypeName"];
60->65 [style = bold, label=""];
28->42 [style = bold, label=""];
17->27 [style = bold, label=""];
47->58 [style = dashed, label="0"];
45->69 [style = dashed, label="0"];
14->48 [style = bold, label=""];
17->14 [style = solid, label="tokenizerAttributes"];
32->44 [style = dashed, label="0"];
40->50 [style = bold, label=""];
37->36 [style = bold, label=""];
57->61 [style = bold, label=""];
53->52 [style = bold, label=""];
3->11 [style = bold, label=""];
19->39 [style = bold, label=""];
4->21 [style = bold, label=""];
24->15 [style = solid, label="fieldAttributes"];
42->69 [style = solid, label="iTokenizerAttributes"];
23->3 [style = bold, label=""];
24->5 [style = bold, label=""];
26->16 [style = bold, label=""];
7->24 [style = bold, label=""];
22->18 [style = bold, label=""];
64->20 [style = bold, label=""];
44->0 [style = solid, label="fieldTypeAttributes"];
41->46 [style = bold, label=""];
58->67 [style = bold, label=""];
66->57 [style = bold, label=""];
53->52 [style = solid, label="addFieldTypeResponse"];
44->42 [style = bold, label=""];
16->13 [style = bold, label=""];
68->62 [style = dotted, label="true"];
67->66 [style = bold, label=""];
27->14 [style = bold, label=""];
28->42 [style = solid, label="fieldTypeName"];
25->41 [style = bold, label=""];
42->8 [style = bold, label=""];
32->19 [style = solid, label="analyzerDefinition"];
65->20 [style = solid, label="fieldTypeAttributes"];
67->56 [style = solid, label="queryAnalyzerDefinition"];
9->20 [style = bold, label=""];
35->49 [style = bold, label=""];
43->2 [style = bold, label=""];
39->53 [style = bold, label=""];
28->51 [style = solid, label="fieldTypeName"];
62->63 [style = solid, label="fieldTypeName"];
48->26 [style = bold, label=""];
13->19 [style = bold, label=""];
30->35 [style = bold, label=""];
31->10 [style = bold, label=""];
6->33 [style = bold, label=""];
49->7 [style = bold, label=""];
0->69 [style = bold, label=""];
0->32 [style = bold, label=""];
28->18 [style = solid, label="fieldTypeName"];
56->59 [style = bold, label=""];
65->63 [style = bold, label=""];
36->34 [style = bold, label=""];
50->1 [style = solid, label="newFieldTypeResponse"];
68->60 [style = bold, label=""];
63->64 [style = bold, label=""];
41->46 [style = solid, label="dynamicFieldName"];
48->13 [style = solid, label="filterAttributes"];
34->12 [style = solid, label="initialFieldTypesResponse"];
11->45 [style = bold, label=""];
15->6 [style = bold, label=""];
66->61 [style = solid, label="qTokenizerAttributes"];
14->57 [style = dashed, label="0"];
34->12 [style = bold, label=""];
20->39 [style = solid, label="fieldTypeDefinition"];
4->21 [style = solid, label="addDynamicFieldResponse"];
11->0 [style = dashed, label="0"];
20->44 [style = bold, label=""];
1->22 [style = bold, label=""];
27->66 [style = dashed, label="0"];
18->43 [style = bold, label=""];
50->1 [style = bold, label=""];
44->28 [style = bold, label=""];
45->47 [style = bold, label=""];
10->4 [style = bold, label=""];
21->40 [style = bold, label=""];
3->8 [style = dashed, label="0"];
51->15 [style = bold, label=""];
44->58 [style = solid, label="indexAnalyzerDefinition"];
47->17 [style = bold, label=""];
23->42 [style = dashed, label="0"];
23->47 [style = solid, label="charFilterAttributes"];
8->29 [style = bold, label=""];
52->30 [style = bold, label=""];
}
