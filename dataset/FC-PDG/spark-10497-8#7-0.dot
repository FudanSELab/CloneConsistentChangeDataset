digraph {
42 [style = filled, label = "LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@43@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "String path = \"data/mllib/sample_binary_classification_data.txt\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> recall = metrics.recallByThreshold().toJavaRDD()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "JavaRDD<Double> thresholds = precision.map(new Function<Tuple2<Object,Object>,Double>(){@Override public Double call(Tuple2<Object,Object> t){return new Double(t._1().toString())}})@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@37@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(3).run(training.rdd())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MulticlassMetrics metrics = new MulticlassMetrics(predictionAndLabels.rdd())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "model.clearThreshold()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Java Binary Classification Metrics Example\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f1Score = metrics.fMeasureByThreshold().toJavaRDD()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "final LogisticRegressionModel model = new LogisticRegressionWithLBFGS().setNumClasses(2).run(training.rdd())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "System.out.println(\"F2 Score by threshold: \" + f2Score.collect())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "JavaRDD<LabeledPoint>(( splits = data.randomSplit(new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1a7f392,11L)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "System.out.println(\"Recall = \" + metrics.recall())@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "i++@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "System.out.format(\"Weighted precision = %f\",metrics.weightedPrecision())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "JavaRDD<LabeledPoint> data = MLUtils.loadLibSVMFile(sc,path).toJavaRDD()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "System.out.println(\"Precision = \" + metrics.precision())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "System.out.format(\"Class %f recall = %f\",metrics.labels()(i(,metrics.recall(metrics.labels()(i())@@@30@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Matrix confusion = metrics.confusionMatrix()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@38@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "System.out.format(\"Weighted F1 score = %f\",metrics.weightedFMeasure())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "System.out.println(\"Precision by threshold: \" + precision.collect())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> roc = metrics.roc().toJavaRDD()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "System.out.format(\"Class %f recall = %f\",metrics.labels()(i(,metrics.recall(metrics.labels()(i())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "System.out.println(\"Confusion matrix: \" + confusion)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SparkConf conf = new SparkConf().setAppName(\"Multi class Classification Metrics Example\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "System.out.println(\"ROC curve: \" + roc.collect())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "System.out.format(\"Weighted false positive rate = %f\",metrics.weightedFalsePositiveRate())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "LogisticRegressionModel sameModel = LogisticRegressionModel.load(sc,\"target/tmp/LogisticRegressionModel\")@@@36@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "System.out.println(\"F1 Score = \" + metrics.fMeasure())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "System.out.println(\"Accuracy = \" + metrics.accuracy())@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "main['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "System.out.println(\"Area under ROC = \" + metrics.areaUnderROC())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> precision = metrics.precisionByThreshold().toJavaRDD()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String(( args@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> f2Score = metrics.fMeasureByThreshold(2.0).toJavaRDD()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "System.out.println(\"Area under precision-recall curve = \" + metrics.areaUnderPR())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> prc = metrics.pr().toJavaRDD()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "System.out.println(\"F1 Score by threshold: \" + f1Score.collect())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "BinaryClassificationMetrics metrics = new BinaryClassificationMetrics(predictionAndLabels.rdd())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "System.out.println(\"Precision-recall curve: \" + prc.collect())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "i < metrics.labels().length@@@25@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "main['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "SparkContext sc = new SparkContext(conf)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "int i = 0@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "model.save(sc,\"target/tmp/LogisticRegressionModel\")@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "System.out.format(\"Weighted recall = %f\",metrics.weightedRecall())@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "main['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "JavaRDD<LabeledPoint> test = splits(1(@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JavaRDD<LabeledPoint> training = splits(0(.cache()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String path = \"data/mllib/sample_multiclass_classification_data.txt\"@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "System.out.println(\"Recall by threshold: \" + recall.collect())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "JavaRDD<Tuple2<Object,Object>> predictionAndLabels = test.map(new Function<LabeledPoint,Tuple2<Object,Object>>(){@Override public Tuple2<Object,Object> call(LabeledPoint p){Double prediction = model.predict(p.features())return new Tuple2<Object,Object>(prediction,p.label())}})@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "System.out.format(\"Class %f F1 score = %f\",metrics.labels()(i(,metrics.fMeasure(metrics.labels()(i())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "System.out.format(\"Class %f precision = %f\",metrics.labels()(i(,metrics.precision(metrics.labels()(i())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
14->24 [style = bold, label=""];
7->32 [style = bold, label=""];
14->25 [style = bold, label=""];
25->2 [style = solid, label="i"];
10->19 [style = bold, label=""];
30->0 [style = dotted, label="true"];
38->41 [style = bold, label=""];
25->14 [style = bold, label=""];
37->55 [style = bold, label=""];
7->16 [style = solid, label="i"];
9->6 [style = bold, label=""];
22->26 [style = solid, label="sc"];
7->14 [style = bold, label=""];
6->55 [style = dashed, label="0"];
17->36 [style = bold, label=""];
55->48 [style = bold, label=""];
25->16 [style = solid, label="i"];
32->25 [style = dotted, label="true"];
5->3 [style = solid, label="confusion"];
22->57 [style = solid, label="sc"];
21->48 [style = dashed, label="0"];
39->47 [style = bold, label=""];
14->2 [style = dotted, label="true"];
48->49 [style = bold, label=""];
31->32 [style = solid, label="i"];
35->54 [style = bold, label=""];
53->52 [style = bold, label=""];
51->22 [style = solid, label="conf"];
22->43 [style = bold, label=""];
32->2 [style = dotted, label="true"];
31->7 [style = solid, label="i"];
27->16 [style = bold, label=""];
14->27 [style = dotted, label="true"];
11->36 [style = dashed, label="0"];
25->2 [style = bold, label=""];
25->14 [style = solid, label="i"];
1->17 [style = bold, label=""];
43->13 [style = bold, label=""];
19->22 [style = solid, label="conf"];
30->19 [style = bold, label=""];
36->46 [style = bold, label=""];
19->51 [style = dashed, label="0"];
28->43 [style = dashed, label="0"];
16->33 [style = bold, label=""];
5->45 [style = dashed, label="0"];
22->8 [style = solid, label="sc"];
14->25 [style = dotted, label="true"];
7->27 [style = solid, label="i"];
2->27 [style = bold, label=""];
21->7 [style = bold, label=""];
10->0 [style = dotted, label="true"];
44->37 [style = bold, label=""];
13->15 [style = bold, label=""];
19->22 [style = bold, label=""];
3->29 [style = bold, label=""];
24->12 [style = bold, label=""];
18->23 [style = bold, label=""];
40->56 [style = bold, label=""];
7->2 [style = solid, label="i"];
6->21 [style = bold, label=""];
31->32 [style = bold, label=""];
11->4 [style = bold, label=""];
32->7 [style = dotted, label="true"];
32->14 [style = bold, label=""];
22->28 [style = bold, label=""];
22->23 [style = solid, label="sc"];
32->16 [style = bold, label=""];
31->14 [style = solid, label="i"];
32->14 [style = dotted, label="true"];
45->44 [style = bold, label=""];
34->0 [style = dotted, label="true"];
47->50 [style = bold, label=""];
3->9 [style = bold, label=""];
34->51 [style = bold, label=""];
14->16 [style = dotted, label="true"];
20->54 [style = dashed, label="0"];
12->8 [style = bold, label=""];
33->24 [style = bold, label=""];
52->40 [style = bold, label=""];
46->35 [style = bold, label=""];
4->20 [style = bold, label=""];
56->39 [style = bold, label=""];
14->2 [style = bold, label=""];
7->14 [style = solid, label="i"];
15->1 [style = bold, label=""];
54->45 [style = bold, label=""];
57->42 [style = bold, label=""];
7->32 [style = solid, label="i"];
14->53 [style = dashed, label="0"];
22->18 [style = solid, label="sc"];
29->31 [style = bold, label=""];
3->44 [style = dashed, label="0"];
28->13 [style = bold, label=""];
16->25 [style = bold, label=""];
31->25 [style = solid, label="i"];
41->57 [style = bold, label=""];
7->25 [style = solid, label="i"];
17->11 [style = bold, label=""];
20->5 [style = bold, label=""];
49->53 [style = bold, label=""];
31->2 [style = solid, label="i"];
9->29 [style = dashed, label="0"];
50->38 [style = bold, label=""];
25->27 [style = solid, label="i"];
51->22 [style = bold, label=""];
15->17 [style = solid, label="splits"];
22->42 [style = solid, label="sc"];
2->7 [style = bold, label=""];
23->42 [style = dashed, label="0"];
26->18 [style = bold, label=""];
8->26 [style = bold, label=""];
}
