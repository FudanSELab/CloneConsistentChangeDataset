digraph {
6 [style = filled, label = "assertEquals(BitSets.toList(BitSets.range(2,2)),Collections.emptyList())@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "testBitSetOf['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertEquals(BitSets.toList(BitSets.of()),Collections.emptyList())@@@4@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testBitSetOf['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(BitSets.toList(BitSets.range(1,4)),Arrays.asList(1,2,3))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(BitSets.toList(BitSets.of(0,4,2)),Arrays.asList(0,2,4))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testBitSetsRange['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(BitSets.toList(BitSets.range(0,4)),Arrays.asList(0,1,2,3))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->5 [style = dashed, label="0"];
7->5 [style = bold, label=""];
1->2 [style = bold, label=""];
5->6 [style = bold, label=""];
1->7 [style = dashed, label="0"];
3->1 [style = bold, label=""];
0->1 [style = bold, label=""];
4->7 [style = bold, label=""];
}
