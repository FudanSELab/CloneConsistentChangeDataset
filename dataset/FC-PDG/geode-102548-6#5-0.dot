digraph {
2 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(1)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testRemoveOutputStreamWhenEmpty['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "inOrderStreams.verify(streamOne,times(2)).flush()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@175110,2,3)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "verifyZeroInteractions(streamOne)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(3)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testAddOneOutputStreamWhenEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).close()@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(cos.size()).isEqualTo(1)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "cos.write(9)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRemoveOutputStreamWhenEmpty['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "cos.addOutputStream(streamOne)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "cos.close()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifyNoMoreInteractions(streamOne)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "cos.flush()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(4)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@175123)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "cos.removeOutputStream(streamOne)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(2)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "InOrder inOrderStreams = inOrder(streamOne)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
17->25 [style = bold, label=""];
16->0 [style = bold, label=""];
24->19 [style = bold, label=""];
28->18 [style = bold, label=""];
18->23 [style = bold, label=""];
26->17 [style = bold, label=""];
19->12 [style = bold, label=""];
3->21 [style = dashed, label="0"];
1->15 [style = bold, label=""];
27->28 [style = bold, label=""];
0->10 [style = solid, label="streamOne"];
1->3 [style = bold, label=""];
23->26 [style = bold, label=""];
11->12 [style = bold, label=""];
12->7 [style = bold, label=""];
2->13 [style = bold, label=""];
0->21 [style = solid, label="streamOne"];
0->15 [style = solid, label="streamOne"];
14->0 [style = bold, label=""];
8->2 [style = bold, label=""];
5->0 [style = bold, label=""];
22->27 [style = bold, label=""];
21->22 [style = bold, label=""];
11->19 [style = dashed, label="0"];
1->21 [style = bold, label=""];
7->6 [style = bold, label=""];
0->3 [style = solid, label="streamOne"];
0->8 [style = bold, label=""];
10->4 [style = bold, label=""];
3->15 [style = dashed, label="0"];
10->20 [style = dashed, label="0"];
0->20 [style = solid, label="streamOne"];
4->24 [style = dashed, label="0"];
6->9 [style = bold, label=""];
9->1 [style = bold, label=""];
4->11 [style = bold, label=""];
20->24 [style = bold, label=""];
13->20 [style = bold, label=""];
}
