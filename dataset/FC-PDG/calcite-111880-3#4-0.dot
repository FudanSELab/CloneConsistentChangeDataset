digraph {
41 [style = filled, label = "final MutableCalc qInput0 = (MutableCalc)query.getLeft()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "return null@@@54@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "!referenceByMapping(query.condition,qInput0Projs,qInput1Projs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int i = 0@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final MutableCalc compensatingCalc = MutableCalc.of(target,compensatingRexProgram)@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final RexNode qInput1Cond = qInput1Explained.left@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return null@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "return tryMergeParentCalcAndGenResult(call,compensatingCalc)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final RexNode splitted = splitFilter(call.getSimplify(),newQueryJoinCond,target.condition)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final MutableCalc qInput1 = (MutableCalc)query.getRight()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "UnifyRuleCall call@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final List<RexNode> identityProjects = (List<RexNode>)rexBuilder.identityProjects(qInput0.rowType)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "final RexNode compenCond = RexUtil.composeConjunction(rexBuilder,ImmutableList.of(qInput0Cond,qInput1CondShifted))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "final RexNode qInput1CondShifted = RexUtil.shift(qInput1Cond,fieldCnt(qInput0.getInput()))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i < query.rowType.getFieldCount()@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "return null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput0Explained = explainCalc(qInput0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final MutableRel qInput0 = query.getLeft()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "final JoinRelType joinRelType = sameJoinType(query.joinType,target.joinType)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "final List<RexNode> identityProjects = rexBuilder.identityProjects(qInput0.rowType)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "final List<RexNode> qInput0Projs = qInput0Explained.right@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "splitted != null && splitted.isAlwaysTrue()@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "final RexNode qInput0Cond = qInput0Explained.left@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput0Cond.isAlwaysTrue() && qInput1Cond.isAlwaysTrue())@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i++@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i < fieldCnt(qInput0)@@@46@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "compenProjs.add(qInput0Projs.get(i))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "joinRelType != JoinRelType.INNER && !(joinRelType.isOuterJoin() && qInput1Cond.isAlwaysTrue())@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Pair<RexNode,List<RexNode>> qInput1Explained = explainCalc(qInput1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RexBuilder rexBuilder = call.getCluster().getRexBuilder()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "return null@@@58@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "joinRelType == null@@@15@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final List<RexNode> qInput1Projs = qInput1Explained.right@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "UnifyRuleCall call@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "final MutableJoin target = (MutableJoin)call.target@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),qInput0.rowType.getFieldCount())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {return inputRef}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0)return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!referenceByMapping(query.condition,identityProjects,qInput1Projs)@@@19@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return null@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "RexNode shifted = RexUtil.shift(qInput1Projs.get(i - fieldCnt(qInput0)),fieldCnt(qInput0.getInput()))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "return null@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final MutableJoin query = (MutableJoin)call.query@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final List<RexNode> compenProjs = new ArrayList<>()@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "compenProjs.add(shifted)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final RexProgram compensatingRexProgram = RexProgram.create(target.rowType,compenProjs,compenCond,query.rowType,rexBuilder)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "RexNode newQueryJoinCond = new RexShuttle(){@Override public RexNode visitInputRef(RexInputRef inputRef){final int idx = inputRef.getIndex()if (idx < fieldCnt(qInput0)) {final int newIdx = ((RexInputRef)qInput0Projs.get(idx)).getIndex()return new RexInputRef(newIdx,inputRef.getType())}{final int newIdx = ((RexInputRef)qInput1Projs.get(idx - fieldCnt(qInput0))).getIndex() + fieldCnt(qInput0.getInput())return new RexInputRef(newIdx,inputRef.getType())}}}.apply(query.condition)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
41->0 [style = bold, label=""];
29->9 [style = dotted, label="true"];
25->1 [style = bold, label=""];
13->22 [style = solid, label="compenCalc"];
14->25 [style = bold, label=""];
29->30 [style = bold, label=""];
29->48 [style = dotted, label="true"];
27->9 [style = bold, label=""];
43->42 [style = bold, label=""];
14->25 [style = solid, label="i"];
21->24 [style = bold, label=""];
10->15 [style = solid, label="rexBuilder"];
14->32 [style = dotted, label="false"];
3->25 [style = dotted, label="true"];
1->45 [style = dashed, label="0"];
12->7 [style = bold, label=""];
22->30 [style = bold, label=""];
29->8 [style = dotted, label="true"];
21->2 [style = bold, label=""];
28->4 [style = bold, label=""];
42->44 [style = bold, label=""];
27->15 [style = solid, label="compenCond"];
29->13 [style = dotted, label="true"];
6->16 [style = dotted, label="true"];
46->13 [style = solid, label="compenProjs"];
5->0 [style = bold, label=""];
21->24 [style = dotted, label="true"];
16->49 [style = bold, label=""];
14->31 [style = dotted, label="false"];
32->31 [style = dashed, label="0"];
1->31 [style = dotted, label="false"];
13->22 [style = bold, label=""];
3->14 [style = solid, label="i"];
44->18 [style = bold, label=""];
1->31 [style = bold, label=""];
18->29 [style = solid, label="splitted"];
43->44 [style = bold, label=""];
5->41 [style = dashed, label="0"];
7->34 [style = dashed, label="0"];
3->31 [style = solid, label="i"];
27->37 [style = solid, label="qInput1CondShifted"];
23->22 [style = solid, label="target"];
49->12 [style = bold, label=""];
15->13 [style = bold, label=""];
1->45 [style = dotted, label="true"];
37->13 [style = solid, label="compenCond"];
2->18 [style = solid, label="newQueryJoinCond"];
25->1 [style = solid, label="i"];
33->22 [style = solid, label="call"];
38->11 [style = bold, label=""];
50->37 [style = solid, label="qInput0Cond"];
5->32 [style = solid, label="qInput0"];
25->3 [style = bold, label=""];
36->4 [style = bold, label=""];
25->32 [style = solid, label="i"];
2->18 [style = bold, label=""];
6->49 [style = bold, label=""];
16->17 [style = bold, label=""];
9->8 [style = bold, label=""];
39->4 [style = bold, label=""];
25->14 [style = solid, label="i"];
8->25 [style = solid, label="i"];
29->27 [style = bold, label=""];
17->34 [style = bold, label=""];
51->14 [style = bold, label=""];
45->14 [style = bold, label=""];
37->46 [style = bold, label=""];
31->51 [style = bold, label=""];
9->15 [style = solid, label="compenProjs"];
19->26 [style = bold, label=""];
20->49 [style = solid, label="joinRelType"];
23->10 [style = bold, label=""];
14->45 [style = solid, label="i"];
29->40 [style = bold, label=""];
14->1 [style = dotted, label="true"];
41->31 [style = solid, label="qInput0"];
1->45 [style = bold, label=""];
32->31 [style = bold, label=""];
41->47 [style = solid, label="qInput0"];
6->17 [style = bold, label=""];
33->48 [style = solid, label="call"];
31->25 [style = bold, label=""];
13->22 [style = solid, label="compensatingRexProgram"];
22->48 [style = bold, label=""];
22->48 [style = solid, label="compensatingCalc"];
8->3 [style = bold, label=""];
0->11 [style = bold, label=""];
3->45 [style = solid, label="i"];
4->41 [style = bold, label=""];
23->13 [style = solid, label="target"];
47->50 [style = bold, label=""];
3->14 [style = dotted, label="true"];
5->14 [style = solid, label="qInput0"];
29->22 [style = dotted, label="true"];
27->37 [style = bold, label=""];
17->12 [style = bold, label=""];
17->12 [style = dotted, label="true"];
10->37 [style = solid, label="rexBuilder"];
15->13 [style = solid, label="compensatingRexProgram"];
14->31 [style = solid, label="i"];
2->44 [style = dashed, label="0"];
12->43 [style = bold, label=""];
35->22 [style = solid, label="call"];
14->32 [style = bold, label=""];
19->27 [style = solid, label="qInput1Cond"];
4->5 [style = bold, label=""];
1->25 [style = bold, label=""];
29->3 [style = dotted, label="true"];
34->21 [style = bold, label=""];
29->25 [style = dotted, label="true"];
22->48 [style = dashed, label="0"];
46->3 [style = bold, label=""];
25->1 [style = dotted, label="true"];
3->25 [style = solid, label="i"];
10->20 [style = bold, label=""];
8->3 [style = solid, label="i"];
24->2 [style = bold, label=""];
25->13 [style = bold, label=""];
3->25 [style = bold, label=""];
28->33 [style = dotted, label="true"];
29->27 [style = dotted, label="true"];
1->51 [style = dotted, label="false"];
3->14 [style = bold, label=""];
49->12 [style = dotted, label="true"];
12->34 [style = bold, label=""];
3->1 [style = solid, label="i"];
3->15 [style = bold, label=""];
25->14 [style = dotted, label="true"];
20->6 [style = bold, label=""];
11->19 [style = bold, label=""];
31->51 [style = solid, label="shifted"];
29->15 [style = dotted, label="true"];
43->42 [style = dotted, label="true"];
29->37 [style = dotted, label="true"];
17->49 [style = dashed, label="0"];
49->43 [style = bold, label=""];
48->40 [style = bold, label=""];
14->1 [style = bold, label=""];
8->32 [style = solid, label="i"];
29->46 [style = dotted, label="true"];
17->7 [style = bold, label=""];
18->29 [style = bold, label=""];
0->47 [style = bold, label=""];
10->13 [style = solid, label="rexBuilder"];
50->38 [style = bold, label=""];
0->11 [style = solid, label="qInput1"];
8->14 [style = solid, label="i"];
41->1 [style = solid, label="qInput0"];
6->16 [style = bold, label=""];
8->1 [style = solid, label="i"];
26->23 [style = bold, label=""];
14->1 [style = solid, label="i"];
7->21 [style = bold, label=""];
20->6 [style = solid, label="joinRelType"];
25->3 [style = solid, label="i"];
36->35 [style = dotted, label="true"];
13->22 [style = dashed, label="0"];
39->33 [style = dotted, label="true"];
32->31 [style = solid, label="shifted"];
20->17 [style = solid, label="joinRelType"];
44->18 [style = solid, label="newQueryJoinCond"];
33->35 [style = dashed, label="0"];
}
