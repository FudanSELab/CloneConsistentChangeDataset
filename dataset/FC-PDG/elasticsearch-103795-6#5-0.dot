digraph {
12 [style = filled, label = "assertEquals(2,cache.numRegisteredCloseListeners())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(2,cache.count())@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "loader = new Loader(secondReader,0)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes,null)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(2,cache.count())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes,null)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "IOUtils.close(secondReader,writer,dir,cache)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "writer = new IndexWriter(dir,newIndexWriterConfig())@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
67 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "IOUtils.close(writer)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "assertEquals(2,cache.count())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
91 [style = filled, label = "indexShard.set(false)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "Loader loader = new Loader(reader,0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "cache.cleanCache()@@@61@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@76@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "writer.flush()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
92 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Directory dir = newDirectory()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "IOUtils.close(reader,writer,dir,cache)@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,cache.count())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "assertEquals(0,cache.count())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "randomBoolean()@@@32@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "randomBoolean()@@@12@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "loader = new Loader(reader,0)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "cache.cleanCache()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@77@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(cacheSize,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "loader = new Loader(secondReader,0)@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "DirectoryReader secondReader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "secondReader.close()@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "reader.close()@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
87 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "writer.updateDocument(new Term(\"id\",\"0\"),newDoc(0,\"bar\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@82@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > cacheSize + value.length())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "final int cacheSize = requestCacheStats.stats().getMemorySize().bytesAsInt()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "secondEntity = new TestEntity(requestCacheStats,indexShard)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCacheDifferentReaders['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "reader.close()@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@47@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "randomBoolean()@@@68@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@67@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "assertEquals(1,cache.count())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getHitCount())@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "testCacheDifferentReaders['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "TestEntity secondEntity = new TestEntity(requestCacheStats,indexShard)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "cache.clear(entity)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "cache.clear(secondEntity)@@@73@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "testBasicOperationsCache['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7->91 [style = dotted, label="false"];
10->21 [style = bold, label=""];
7->88 [style = bold, label=""];
28->16 [style = bold, label=""];
21->37 [style = solid, label="secondReader"];
75->77 [style = dotted, label="true"];
59->14 [style = solid, label="cacheSize"];
60->88 [style = dashed, label="0"];
15->33 [style = bold, label=""];
5->15 [style = solid, label="loader"];
3->64 [style = bold, label=""];
78->26 [style = solid, label="writer"];
43->70 [style = bold, label=""];
48->4 [style = bold, label=""];
56->53 [style = solid, label="requestCacheStats"];
19->0 [style = bold, label=""];
36->15 [style = solid, label="entity"];
9->37 [style = solid, label="loader"];
51->8 [style = bold, label=""];
63->30 [style = bold, label=""];
67->32 [style = bold, label=""];
56->35 [style = bold, label=""];
1->68 [style = bold, label=""];
26->46 [style = solid, label="reader"];
31->56 [style = bold, label=""];
49->1 [style = bold, label=""];
42->58 [style = solid, label="reader"];
11->71 [style = bold, label=""];
56->78 [style = bold, label=""];
88->70 [style = bold, label=""];
27->79 [style = bold, label=""];
42->86 [style = solid, label="termBytes"];
25->41 [style = bold, label=""];
82->84 [style = bold, label=""];
84->27 [style = solid, label="requestCacheStats"];
90->81 [style = bold, label=""];
35->26 [style = bold, label=""];
65->6 [style = bold, label=""];
46->63 [style = bold, label=""];
27->66 [style = solid, label="termBytes"];
41->46 [style = bold, label=""];
8->87 [style = bold, label=""];
34->37 [style = solid, label="entity"];
52->59 [style = bold, label=""];
6->48 [style = bold, label=""];
45->90 [style = dashed, label="0"];
86->34 [style = bold, label=""];
16->62 [style = bold, label=""];
31->34 [style = solid, label="indexShard"];
27->18 [style = solid, label="termBytes"];
51->80 [style = dashed, label="0"];
53->9 [style = bold, label=""];
40->36 [style = solid, label="indexShard"];
68->54 [style = bold, label=""];
26->79 [style = solid, label="reader"];
0->22 [style = bold, label=""];
18->69 [style = bold, label=""];
7->91 [style = bold, label=""];
27->37 [style = solid, label="termBytes"];
2->65 [style = bold, label=""];
42->64 [style = solid, label="reader"];
61->66 [style = solid, label="loader"];
34->18 [style = solid, label="entity"];
14->48 [style = dashed, label="0"];
54->7 [style = bold, label=""];
26->42 [style = solid, label="writer"];
58->18 [style = solid, label="loader"];
3->64 [style = solid, label="loader"];
75->74 [style = dotted, label="true"];
38->43 [style = bold, label=""];
7->14 [style = bold, label=""];
77->10 [style = bold, label=""];
78->35 [style = bold, label=""];
31->53 [style = solid, label="indexShard"];
30->46 [style = dashed, label="0"];
77->21 [style = solid, label="writer"];
30->57 [style = bold, label=""];
59->39 [style = bold, label=""];
79->86 [style = bold, label=""];
31->17 [style = solid, label="indexShard"];
42->40 [style = bold, label=""];
58->18 [style = bold, label=""];
21->30 [style = solid, label="secondReader"];
21->34 [style = bold, label=""];
71->30 [style = solid, label="cache"];
44->24 [style = bold, label=""];
65->3 [style = dashed, label="0"];
89->56 [style = bold, label=""];
35->30 [style = solid, label="dir"];
75->73 [style = dotted, label="true"];
56->33 [style = solid, label="requestCacheStats"];
2->92 [style = bold, label=""];
43->60 [style = bold, label=""];
9->37 [style = bold, label=""];
60->8 [style = bold, label=""];
4->7 [style = bold, label=""];
36->80 [style = solid, label="entity"];
50->13 [style = bold, label=""];
59->47 [style = solid, label="cacheSize"];
87->83 [style = bold, label=""];
26->15 [style = solid, label="reader"];
42->3 [style = solid, label="reader"];
43->51 [style = dotted, label="false"];
24->49 [style = bold, label=""];
26->5 [style = solid, label="reader"];
26->30 [style = solid, label="writer"];
78->46 [style = solid, label="writer"];
42->18 [style = solid, label="reader"];
26->86 [style = solid, label="reader"];
40->27 [style = bold, label=""];
71->31 [style = bold, label=""];
27->86 [style = solid, label="entity"];
56->78 [style = solid, label="dir"];
91->80 [style = bold, label=""];
21->66 [style = solid, label="secondReader"];
26->74 [style = solid, label="writer"];
12->17 [style = bold, label=""];
70->51 [style = bold, label=""];
70->90 [style = bold, label=""];
61->66 [style = bold, label=""];
76->71 [style = bold, label=""];
31->33 [style = solid, label="indexShard"];
7->80 [style = dotted, label="false"];
85->48 [style = bold, label=""];
22->72 [style = bold, label=""];
35->26 [style = solid, label="dir"];
56->46 [style = solid, label="dir"];
27->75 [style = bold, label=""];
55->47 [style = bold, label=""];
75->73 [style = bold, label=""];
26->29 [style = bold, label=""];
29->42 [style = solid, label="termQuery"];
84->89 [style = bold, label=""];
17->66 [style = solid, label="secondEntity"];
84->36 [style = solid, label="requestCacheStats"];
42->15 [style = solid, label="termBytes"];
77->30 [style = solid, label="writer"];
15->52 [style = bold, label=""];
14->38 [style = bold, label=""];
29->42 [style = bold, label=""];
56->17 [style = solid, label="requestCacheStats"];
69->67 [style = bold, label=""];
73->74 [style = bold, label=""];
81->8 [style = bold, label=""];
56->34 [style = solid, label="requestCacheStats"];
43->70 [style = dotted, label="false"];
92->85 [style = bold, label=""];
13->33 [style = bold, label=""];
36->5 [style = bold, label=""];
17->61 [style = bold, label=""];
80->70 [style = bold, label=""];
17->51 [style = solid, label="secondEntity"];
32->36 [style = bold, label=""];
62->20 [style = bold, label=""];
35->77 [style = solid, label="dir"];
89->46 [style = solid, label="cache"];
64->2 [style = bold, label=""];
33->64 [style = solid, label="entity"];
33->3 [style = bold, label=""];
27->10 [style = bold, label=""];
39->53 [style = bold, label=""];
83->41 [style = bold, label=""];
40->27 [style = solid, label="indexShard"];
79->86 [style = solid, label="loader"];
72->50 [style = bold, label=""];
47->12 [style = bold, label=""];
7->88 [style = dotted, label="true"];
21->61 [style = solid, label="secondReader"];
74->77 [style = bold, label=""];
23->28 [style = bold, label=""];
8->45 [style = bold, label=""];
40->27 [style = solid, label="termQuery"];
20->55 [style = bold, label=""];
26->21 [style = solid, label="writer"];
43->60 [style = dotted, label="true"];
45->25 [style = bold, label=""];
37->23 [style = bold, label=""];
75->10 [style = bold, label=""];
21->9 [style = solid, label="secondReader"];
6->64 [style = dashed, label="0"];
27->64 [style = solid, label="termBytes"];
5->15 [style = bold, label=""];
4->44 [style = bold, label=""];
34->58 [style = bold, label=""];
66->19 [style = bold, label=""];
}
