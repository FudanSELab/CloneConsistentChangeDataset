digraph {
1 [style = filled, label = "when(filePreferences.getFileNamePattern()).thenReturn(\"(bibtexkey( - (fulltitle(\")@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Path path = testFolder.resolve(\"Toot.tmp\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(filePreferences.getFileNamePattern()).thenReturn(\"(citationkey( - (fulltitle(\")@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(new LinkedFile(\"\",\"Misc/test.pdf\",\"\"))),entry.getField(StandardField.FILE))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertTrue(Files.exists(fileAfter))@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "cleanupRenamePdfRenamesWithMultipleFiles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "cleanup.cleanup(entry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "entry.setField(StandardField.FILE,FileFieldWriter.getStringRepresentation(Arrays.asList(new LinkedFile(\"\",\"\",\"\"),new LinkedFile(\"\",path.toAbsolutePath().toString(),\"\"),new LinkedFile(\"\",\"\",\"\"))))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "@TempDir Path testFolder@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Files.createFile(path)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertFalse(Files.exists(fileBefore))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "when(filePreferences.getFileDirectoryPattern()).thenReturn(\"(entrytype(\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "movesFileWithFileDirPattern['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "cleanupRenamePdfRenamesWithMultipleFiles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Path fileAfter = defaultFileFolder.resolve(\"Misc\").resolve(\"test.pdf\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Optional.of(FileFieldWriter.getStringRepresentation(Arrays.asList(new LinkedFile(\"\",\"\",\"\"),new LinkedFile(\"\",\"Toot - test title.tmp\",\"\"),new LinkedFile(\"\",\"\",\"\")))),entry.getField(StandardField.FILE))@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "entry.setField(StandardField.TITLE,\"test title\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->4 [style = bold, label=""];
0->5 [style = dotted, label="true"];
15->14 [style = bold, label=""];
9->2 [style = bold, label=""];
11->4 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
12->15 [style = bold, label=""];
3->6 [style = bold, label=""];
1->10 [style = dashed, label="0"];
2->8 [style = solid, label="path"];
13->11 [style = bold, label=""];
4->7 [style = bold, label=""];
6->1 [style = bold, label=""];
6->10 [style = bold, label=""];
14->4 [style = solid, label="fileAfter"];
10->4 [style = bold, label=""];
14->13 [style = bold, label=""];
16->12 [style = bold, label=""];
2->8 [style = bold, label=""];
9->5 [style = dotted, label="true"];
}
