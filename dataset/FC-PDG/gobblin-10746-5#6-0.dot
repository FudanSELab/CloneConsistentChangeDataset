digraph {
13 [style = filled, label = "List<String> uriList = jobSpecs.stream().map(null).collect(Collectors.toList())@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertTrue(uriList.contains(\"newTestJob\"))@@@23@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testUpdateSpec['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertEquals(((JobSpec)jobSpecs.get(0).getRight()).getConfig().getString(\"key1\"),\"val1\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(jobSpecs.size(),1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertTrue(uriList.contains(\"testJob\"))@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "Assert.assertEquals(jobSpecs.get(0).getLeft(),SpecExecutor.Verb.ADD)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(((JobSpec)jobSpecs.get(0).getRight()).getConfig().getString(\"key2\"),\"val2\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "List<Pair<SpecExecutor.Verb,Spec>> jobSpecs = this._fsSpecConsumer.changedSpecs().get()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(jobSpecs.get(0).getRight().getUri().toString(),\"testJob\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testAddSpec['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(((JobSpec)jobSpecs.get(0).getRight()).getConfig().getString(\"key3.1\" + ConfigUtils.STRIP_SUFFIX),\"val3\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(((JobSpec)jobSpecs.get(0).getRight()).getConfig().getString(\"key3.1.1\"),\"val4\")@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "jobSpecs = this._fsSpecConsumer.changedSpecs().get()@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "this._fsSpecProducer.updateSpec(createTestJobSpec())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(jobSpecs.get(0).getLeft(),SpecExecutor.Verb.UPDATE)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Assert.assertEquals(jobSpecs.get(0).getLeft(),SpecExecutor.Verb.ADD)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(jobSpecs.get(1).getLeft(),SpecExecutor.Verb.ADD)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "File randomFile = new File(workDir,\"random\")@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "jobSpecs.clear()@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(jobSpecs.size(),2)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "this._fsSpecProducer.addSpec(createTestJobSpec(\"newTestJob\"))@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testAddSpec['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "randomFile.deleteOnExit()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "this._fsSpecProducer.addSpec(createTestJobSpec())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertTrue(randomFile.createNewFile())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
21->11 [style = bold, label=""];
1->23 [style = dashed, label="0"];
8->9 [style = bold, label=""];
15->1 [style = bold, label=""];
24->23 [style = bold, label=""];
0->7 [style = bold, label=""];
1->21 [style = bold, label=""];
1->8 [style = bold, label=""];
14->13 [style = bold, label=""];
19->22 [style = bold, label=""];
11->17 [style = bold, label=""];
3->18 [style = bold, label=""];
4->1 [style = bold, label=""];
6->2 [style = bold, label=""];
12->16 [style = bold, label=""];
7->3 [style = bold, label=""];
18->19 [style = bold, label=""];
23->8 [style = bold, label=""];
16->14 [style = bold, label=""];
5->25 [style = dashed, label="0"];
17->8 [style = bold, label=""];
2->0 [style = bold, label=""];
9->25 [style = bold, label=""];
22->12 [style = bold, label=""];
13->10 [style = bold, label=""];
9->5 [style = bold, label=""];
25->6 [style = bold, label=""];
5->6 [style = bold, label=""];
10->20 [style = bold, label=""];
}
