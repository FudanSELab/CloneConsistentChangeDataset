digraph {
13 [style = filled, label = "Function<Resource,Observable<String>> observableFactory = new Function<Resource,Observable<String>>(){@Override public Observable<String> apply(Resource resource){return Observable.fromArray(resource.getTextFromWeb().split(\" \"))}}@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "o.safeSubscribe(observer)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Flowable<String> flowable = Flowable.using(resourceFactory,observableFactory,new DisposeAction(),false).doOnCancel(unsub).doOnComplete(completion)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final Action completion = createOnCompletedAction(events)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Supplier<Resource> resourceFactory = createResourceFactory(events)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Observable<String> o = Observable.using(resourceFactory,observableFactory,new DisposeAction(),false).doOnDispose(unsub).doOnComplete(completion)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "usingDoesNotDisposesEagerlyBeforeCompletion['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "usingDoesNotDisposesEagerlyBeforeCompletion['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "usingDoesNotDisposesEagerlyBeforeCompletion['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Subscriber<String> subscriber = TestHelper.mockSubscriber()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Action unsub = createUnsubAction(events)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Observer<String> observer = TestHelper.mockObserver()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Function<Resource,Flowable<String>> observableFactory = new Function<Resource,Flowable<String>>(){@Override public Flowable<String> apply(Resource resource){return Flowable.fromArray(resource.getTextFromWeb().split(\" \"))}}@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(Arrays.asList(\"completed\",\"disposed\"),events)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "flowable.safeSubscribe(subscriber)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<String> events = new ArrayList<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "final List<String> events = new ArrayList<String>()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
5->13 [style = dashed, label="0"];
4->9 [style = bold, label=""];
16->15 [style = solid, label="observer"];
9->10 [style = dashed, label="0"];
9->3 [style = solid, label="events"];
2->3 [style = bold, label=""];
0->16 [style = dashed, label="0"];
9->1 [style = solid, label="events"];
9->6 [style = solid, label="events"];
1->8 [style = solid, label="completion"];
8->14 [style = dashed, label="0"];
15->3 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = bold, label=""];
9->7 [style = solid, label="events"];
10->6 [style = bold, label=""];
13->16 [style = bold, label=""];
9->6 [style = bold, label=""];
2->15 [style = dashed, label="0"];
6->1 [style = bold, label=""];
7->5 [style = bold, label=""];
5->0 [style = bold, label=""];
8->2 [style = bold, label=""];
11->10 [style = bold, label=""];
10->3 [style = solid, label="events"];
0->8 [style = bold, label=""];
10->7 [style = solid, label="events"];
16->14 [style = bold, label=""];
10->6 [style = solid, label="events"];
14->15 [style = bold, label=""];
0->2 [style = solid, label="subscriber"];
10->1 [style = solid, label="events"];
1->14 [style = solid, label="completion"];
}
