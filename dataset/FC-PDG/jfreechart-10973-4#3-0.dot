digraph {
19 [style = filled, label = "d2.add(1.0,1.1,\"Series 1\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertFalse(d1.equals(d2))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertTrue(d1.equals(d2))@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "d2.setIntervalPositionFactor(0.33)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "d1.add(1.0,1.1,\"Series 1\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "d1.setIntervalPositionFactor(0.33)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(d2.equals(d1))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertFalse(d1.equals(d2))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "d1.add(3.0,3.3,\"Series 1\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(d1.equals(d2))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CategoryTableXYDataset d1 = new CategoryTableXYDataset()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "d2.add(2.0,2.2,\"Series 1\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "CategoryTableXYDataset d2 = new CategoryTableXYDataset()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(d1.equals(d2))@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(d1 != d2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CategoryTableXYDataset d2 = (CategoryTableXYDataset)d1.clone()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "CategoryTableXYDataset d2 = CloneUtils.clone(d1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "d2.add(3.0,3.3,\"Series 1\")@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "d1.add(2.0,2.2,\"Series 1\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
8->16 [style = dashed, label="0"];
3->1 [style = bold, label=""];
5->20 [style = bold, label=""];
9->2 [style = bold, label=""];
0->22 [style = solid, label="d1"];
8->13 [style = solid, label="d2"];
8->20 [style = dashed, label="0"];
10->3 [style = bold, label=""];
15->6 [style = bold, label=""];
7->0 [style = bold, label=""];
8->3 [style = solid, label="d2"];
12->9 [style = bold, label=""];
2->10 [style = bold, label=""];
0->16 [style = solid, label="d1"];
1->13 [style = bold, label=""];
16->6 [style = solid, label="d2"];
0->12 [style = solid, label="d1"];
21->2 [style = bold, label=""];
8->11 [style = solid, label="d2"];
6->14 [style = bold, label=""];
5->16 [style = bold, label=""];
8->12 [style = solid, label="d2"];
16->13 [style = solid, label="d2"];
8->6 [style = solid, label="d2"];
20->13 [style = solid, label="d2"];
17->0 [style = bold, label=""];
16->2 [style = solid, label="d2"];
16->11 [style = solid, label="d2"];
0->4 [style = bold, label=""];
16->3 [style = solid, label="d2"];
20->2 [style = solid, label="d2"];
22->10 [style = bold, label=""];
16->12 [style = solid, label="d2"];
8->2 [style = solid, label="d2"];
13->15 [style = bold, label=""];
20->3 [style = solid, label="d2"];
2->22 [style = bold, label=""];
20->19 [style = bold, label=""];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
18->0 [style = bold, label=""];
8->12 [style = bold, label=""];
19->21 [style = bold, label=""];
}
