digraph {
43 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final int cacheSize = requestCacheStats.stats().getMemorySize().bytesAsInt()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "Directory dir = newDirectory()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "assertEquals(2,cache.count())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "IOUtils.close(secondReader,writer,dir,cache)@@@76@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "reader.close()@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "loader = new Loader(secondReader,0)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "DirectoryReader reader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "assertEquals(2,cache.numRegisteredCloseListeners())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testBasicOperationsCache['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(cacheSize,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@61@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "randomBoolean()@@@63@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes,null)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
80 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > cacheSize + value.length())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "entity = new TestEntity(requestCacheStats,indexShard)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(requestCacheStats.stats().getMemorySize().bytesAsInt() > value.length())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(2,cache.count())@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(2,cache.count())@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "TestEntity entity = new TestEntity(requestCacheStats,indexShard)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@77@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertFalse(loader.loadedFromCache)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "indexShard.set(false)@@@67@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "value = cache.getOrCompute(entity,loader,secondReader,termBytes)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "value = cache.getOrCompute(entity,loader,reader,termBytes)@@@48@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "secondReader.close()@@@64@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(1,cache.count())@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(0,cache.numRegisteredCloseListeners())@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(1,cache.count())@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "writer.updateDocument(new Term(\"id\",\"0\"),newDoc(0,\"bar\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "value = cache.getOrCompute(secondEntity,loader,secondReader,termBytes)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "assertEquals(1,cache.numRegisteredCloseListeners())@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "TestEntity secondEntity = new TestEntity(requestCacheStats,indexShard)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "testCacheDifferentReaders['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "testBasicOperationsCache['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "BytesReference value = cache.getOrCompute(entity,loader,reader,termBytes)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "DirectoryReader secondReader = ElasticsearchDirectoryReader.wrap(DirectoryReader.open(writer),new ShardId(\"foo\",\"bar\",1))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "loader = new Loader(reader,0)@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Loader loader = new Loader(reader,0)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "AtomicBoolean indexShard = new AtomicBoolean(true)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "writer.addDocument(newDoc(0,\"foo\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getMemorySize().bytesAsInt())@@@75@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(\"bar\",value.streamInput().readString())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "cache.cleanCache()@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "cache.cleanCache()@@@70@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getMissCount())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertEquals(0,cache.count())@@@74@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "ShardRequestCache requestCacheStats = new ShardRequestCache()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "secondEntity = new TestEntity(requestCacheStats,indexShard)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "cache.clear(secondEntity)@@@68@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "BytesReference termBytes = XContentHelper.toXContent(termQuery,XContentType.JSON,false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getHitCount())@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@71@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getEvictions())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "IndicesRequestCache cache = new IndicesRequestCache(Settings.EMPTY)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "IndexWriter writer = new IndexWriter(dir,newIndexWriterConfig())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertEquals(1,requestCacheStats.stats().getHitCount())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertEquals(0,requestCacheStats.stats().getHitCount())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "TermQueryBuilder termQuery = new TermQueryBuilder(\"id\",\"0\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "loader = new Loader(secondReader,0)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertTrue(loader.loadedFromCache)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(\"foo\",value.streamInput().readString())@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertEquals(2,requestCacheStats.stats().getMissCount())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83->46 [style = bold, label=""];
56->84 [style = solid, label="requestCacheStats"];
27->47 [style = dashed, label="0"];
29->13 [style = bold, label=""];
23->62 [style = bold, label=""];
28->45 [style = solid, label="termBytes"];
68->58 [style = solid, label="secondReader"];
56->82 [style = bold, label=""];
39->22 [style = solid, label="requestCacheStats"];
11->76 [style = solid, label="termBytes"];
26->2 [style = bold, label=""];
2->24 [style = solid, label="reader"];
82->40 [style = solid, label="dir"];
56->70 [style = solid, label="requestCacheStats"];
36->75 [style = bold, label=""];
54->71 [style = bold, label=""];
17->3 [style = bold, label=""];
22->31 [style = solid, label="entity"];
74->69 [style = bold, label=""];
19->40 [style = bold, label=""];
75->60 [style = bold, label=""];
2->31 [style = solid, label="reader"];
11->85 [style = solid, label="termBytes"];
1->2 [style = solid, label="writer"];
21->84 [style = solid, label="indexShard"];
84->8 [style = solid, label="secondEntity"];
36->7 [style = bold, label=""];
10->41 [style = solid, label="dir"];
31->33 [style = bold, label=""];
5->38 [style = bold, label=""];
2->15 [style = solid, label="reader"];
68->85 [style = solid, label="secondReader"];
84->76 [style = solid, label="secondEntity"];
78->85 [style = solid, label="entity"];
18->45 [style = solid, label="entity"];
63->21 [style = bold, label=""];
21->70 [style = solid, label="indexShard"];
48->65 [style = bold, label=""];
25->29 [style = dotted, label="true"];
15->43 [style = bold, label=""];
58->76 [style = bold, label=""];
10->68 [style = solid, label="writer"];
65->83 [style = bold, label=""];
15->31 [style = bold, label=""];
11->31 [style = solid, label="termBytes"];
25->8 [style = dotted, label="false"];
28->24 [style = solid, label="termBytes"];
51->23 [style = bold, label=""];
7->20 [style = bold, label=""];
76->55 [style = bold, label=""];
18->24 [style = solid, label="entity"];
57->59 [style = bold, label=""];
70->24 [style = solid, label="entity"];
71->85 [style = bold, label=""];
79->84 [style = bold, label=""];
73->67 [style = bold, label=""];
28->43 [style = solid, label="termBytes"];
26->24 [style = solid, label="reader"];
41->16 [style = bold, label=""];
20->42 [style = bold, label=""];
3->47 [style = bold, label=""];
37->45 [style = solid, label="loader"];
37->45 [style = bold, label=""];
82->10 [style = bold, label=""];
71->85 [style = solid, label="loader"];
11->28 [style = bold, label=""];
35->9 [style = bold, label=""];
43->33 [style = bold, label=""];
44->39 [style = bold, label=""];
41->40 [style = dashed, label="0"];
60->42 [style = bold, label=""];
2->11 [style = solid, label="termQuery"];
63->40 [style = solid, label="cache"];
37->24 [style = solid, label="loader"];
37->24 [style = bold, label=""];
10->1 [style = solid, label="dir"];
12->18 [style = solid, label="indexShard"];
84->58 [style = bold, label=""];
59->51 [style = bold, label=""];
12->22 [style = solid, label="indexShard"];
50->80 [style = bold, label=""];
26->15 [style = solid, label="reader"];
9->64 [style = bold, label=""];
2->45 [style = solid, label="reader"];
52->23 [style = solid, label="cacheSize"];
24->17 [style = bold, label=""];
11->28 [style = solid, label="termQuery"];
11->24 [style = solid, label="termBytes"];
66->49 [style = bold, label=""];
3->27 [style = bold, label=""];
21->78 [style = solid, label="indexShard"];
21->10 [style = bold, label=""];
24->45 [style = dashed, label="0"];
1->41 [style = solid, label="writer"];
10->26 [style = solid, label="writer"];
10->1 [style = bold, label=""];
2->41 [style = solid, label="reader"];
68->71 [style = solid, label="secondReader"];
40->41 [style = bold, label=""];
18->8 [style = solid, label="entity"];
53->48 [style = bold, label=""];
22->43 [style = solid, label="entity"];
42->19 [style = bold, label=""];
8->13 [style = bold, label=""];
70->37 [style = bold, label=""];
14->25 [style = bold, label=""];
23->14 [style = bold, label=""];
55->53 [style = bold, label=""];
47->81 [style = bold, label=""];
15->31 [style = solid, label="loader"];
1->26 [style = bold, label=""];
68->40 [style = solid, label="secondReader"];
27->6 [style = bold, label=""];
68->76 [style = solid, label="secondReader"];
26->37 [style = solid, label="reader"];
77->50 [style = bold, label=""];
81->35 [style = bold, label=""];
13->36 [style = bold, label=""];
85->73 [style = bold, label=""];
56->78 [style = solid, label="requestCacheStats"];
28->31 [style = solid, label="termBytes"];
25->30 [style = dotted, label="false"];
18->52 [style = bold, label=""];
82->10 [style = solid, label="dir"];
28->68 [style = bold, label=""];
21->56 [style = bold, label=""];
68->78 [style = bold, label=""];
38->32 [style = bold, label=""];
61->63 [style = bold, label=""];
25->29 [style = bold, label=""];
21->54 [style = solid, label="indexShard"];
67->77 [style = bold, label=""];
64->66 [style = bold, label=""];
28->12 [style = bold, label=""];
2->37 [style = solid, label="reader"];
2->11 [style = bold, label=""];
34->5 [style = bold, label=""];
21->41 [style = solid, label="cache"];
15->43 [style = solid, label="loader"];
58->76 [style = solid, label="loader"];
4->39 [style = bold, label=""];
26->31 [style = solid, label="reader"];
39->21 [style = bold, label=""];
10->40 [style = solid, label="writer"];
22->15 [style = bold, label=""];
39->18 [style = solid, label="requestCacheStats"];
80->74 [style = bold, label=""];
32->18 [style = bold, label=""];
12->22 [style = bold, label=""];
62->25 [style = bold, label=""];
72->54 [style = bold, label=""];
2->43 [style = solid, label="reader"];
49->57 [style = bold, label=""];
46->70 [style = bold, label=""];
52->72 [style = bold, label=""];
45->17 [style = bold, label=""];
78->31 [style = solid, label="entity"];
18->37 [style = bold, label=""];
31->43 [style = dashed, label="0"];
9->23 [style = bold, label=""];
30->8 [style = bold, label=""];
69->79 [style = bold, label=""];
6->35 [style = bold, label=""];
0->34 [style = bold, label=""];
56->54 [style = solid, label="requestCacheStats"];
33->0 [style = bold, label=""];
25->30 [style = bold, label=""];
78->15 [style = bold, label=""];
52->69 [style = solid, label="cacheSize"];
}
