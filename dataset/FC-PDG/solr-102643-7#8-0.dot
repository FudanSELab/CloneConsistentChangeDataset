digraph {
9 [style = filled, label = "testReplicaType['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "PlacementContext placementContext = clusterBuilder.buildPlacementContext()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),2,2,2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(placementRequest,placementContext)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "i == 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Cluster cluster = placementContext.getCluster()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AttributeValues attributeValues = placementContext.getAttributeFetcher().fetchAttributes()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Optional<String> groupOptional = attributeValues.getSystemProperty(rp.getNode(),\"group\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(12,pp.getReplicaPlacements().size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Nrt, TlOg\")@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "replicas.forEach(null)@@@46@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "!groupOptional.isPresent()@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "PlacementRequestImpl placementRequest = new PlacementRequestImpl(solrCollection,StreamSupport.stream(solrCollection.shards().spliterator(),false).map(null).collect(Collectors.toSet()),cluster.getLiveNodes(),1,0,1)@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "nodeBuilder.setCoreCount(0)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"one\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Map<Replica.ReplicaType,Map<String,Map<String,AtomicInteger>>> replicas = new HashMap<>()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testReplicaType['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "Builders.ClusterBuilder clusterBuilder = Builders.newClusterBuilder().initializeLiveNodes(NUM_NODES)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "int NUM_NODES = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String group = groupOptional.get()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "String collectionName = \"replicaTypeCollection\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "String collectionName = \"freeDiskCollection\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "PlacementPlan pp = plugin.computePlacement(placementRequest,placementContext)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(\"wrong replica type in group one\",(rp.getReplicaType() == Replica.ReplicaType.NRT) || rp.getReplicaType() == Replica.ReplicaType.TLOG)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "Node smallNode = null@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "clusterBuilder.addCollection(collectionBuilder)@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "nodeBuilder.setFreeDiskGB(100.0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "i < NUM_NODES / 3 * 2@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "Builders.CollectionBuilder collectionBuilder = Builders.newCollectionBuilder(collectionName)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "nodeBuilder.setSysprop(\"group\",\"two\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "nodeBuilder.setFreeDiskGB(1.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fail(\"missing group sysprop for node \" + rp.getNode())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertFalse(\"should not put any replicas on \" + smallNode,rp.getNode().equals(smallNode))@@@30@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(4,pp.getReplicaPlacements().size())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "replicas.computeIfAbsent(rp.getReplicaType(),null).computeIfAbsent(rp.getShardName(),null).computeIfAbsent(group,null).incrementAndGet()@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"wrong replica type in group two\",Replica.ReplicaType.PULL,rp.getReplicaType())@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < NUM_NODES@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementConfig.REPLICA_TYPE_SYSPROP,\"Nrt, TlOg\")@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
43 [style = filled, label = "collectionBuilder.initializeShardsReplicas(2,0,0,0,clusterBuilder.getLiveNodeBuilders())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementConfig.REPLICA_TYPE_SYSPROP,\"Pull,foobar\")@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "SolrCollection solrCollection = cluster.getCollection(collectionName)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "testFreeDiskConstraints['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "int NUM_NODES = 6@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Builders.NodeBuilder nodeBuilder = clusterBuilder.getLiveNodeBuilders().get(i)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "nodeBuilder.setSysprop(AffinityPlacementFactory.REPLICA_TYPE_SYSPROP,\"Pull,foobar\")@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "group.equals(\"one\")@@@38@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "smallNode = nodeBuilder.build()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->2 [style = dashed, label="0"];
42->41 [style = bold, label=""];
40->45 [style = solid, label="collectionName"];
3->22 [style = solid, label="i"];
25->22 [style = bold, label=""];
20->26 [style = bold, label=""];
36->29 [style = bold, label=""];
3->48 [style = solid, label="i"];
15->40 [style = dashed, label="0"];
15->6 [style = solid, label="collectionName"];
21->18 [style = bold, label=""];
12->7 [style = bold, label=""];
48->39 [style = bold, label=""];
40->10 [style = solid, label="collectionName"];
6->4 [style = solid, label="collectionBuilder"];
15->5 [style = solid, label="collectionName"];
19->1 [style = bold, label=""];
45->43 [style = bold, label=""];
33->25 [style = bold, label=""];
48->39 [style = dotted, label="true"];
45->6 [style = solid, label="collectionBuilder"];
0->34 [style = dotted, label="true"];
39->49 [style = bold, label=""];
48->44 [style = dotted, label="false"];
3->20 [style = solid, label="i"];
1->12 [style = bold, label=""];
19->28 [style = bold, label=""];
8->11 [style = bold, label=""];
49->41 [style = solid, label="smallNode"];
2->5 [style = solid, label="placementRequest"];
21->13 [style = bold, label=""];
16->37 [style = dashed, label="0"];
22->23 [style = dotted, label="true"];
22->0 [style = dotted, label="true"];
44->3 [style = bold, label=""];
18->19 [style = bold, label=""];
48->44 [style = bold, label=""];
16->17 [style = bold, label=""];
5->14 [style = solid, label="solrCollection"];
0->36 [style = bold, label=""];
0->34 [style = bold, label=""];
30->5 [style = solid, label="placementContext"];
0->16 [style = dotted, label="false"];
31->46 [style = dashed, label="0"];
47->25 [style = bold, label=""];
22->20 [style = dotted, label="true"];
33->47 [style = bold, label=""];
22->20 [style = bold, label=""];
15->31 [style = bold, label=""];
31->33 [style = bold, label=""];
46->33 [style = bold, label=""];
49->3 [style = bold, label=""];
10->2 [style = bold, label=""];
21->13 [style = dotted, label="true"];
26->48 [style = bold, label=""];
27->8 [style = bold, label=""];
13->18 [style = bold, label=""];
22->6 [style = bold, label=""];
4->10 [style = bold, label=""];
19->1 [style = dotted, label="true"];
34->29 [style = bold, label=""];
0->16 [style = bold, label=""];
47->41 [style = solid, label="smallNode"];
22->45 [style = bold, label=""];
35->15 [style = bold, label=""];
25->20 [style = solid, label="i"];
32->27 [style = bold, label=""];
0->17 [style = dotted, label="false"];
12->24 [style = bold, label=""];
28->12 [style = bold, label=""];
10->2 [style = solid, label="solrCollection"];
23->0 [style = bold, label=""];
31->22 [style = solid, label="NUM_NODES"];
27->42 [style = dashed, label="0"];
14->32 [style = solid, label="placementRequest"];
10->32 [style = solid, label="placementContext"];
22->26 [style = dotted, label="true"];
17->3 [style = bold, label=""];
22->3 [style = dotted, label="true"];
22->48 [style = dotted, label="true"];
34->36 [style = dashed, label="0"];
14->32 [style = bold, label=""];
38->40 [style = bold, label=""];
2->5 [style = bold, label=""];
25->48 [style = solid, label="i"];
0->37 [style = bold, label=""];
25->0 [style = solid, label="i"];
29->3 [style = bold, label=""];
37->17 [style = bold, label=""];
19->28 [style = dotted, label="false"];
46->33 [style = solid, label="NUM_NODES"];
31->33 [style = solid, label="NUM_NODES"];
5->14 [style = bold, label=""];
3->22 [style = bold, label=""];
0->37 [style = dotted, label="false"];
48->49 [style = dotted, label="true"];
43->6 [style = bold, label=""];
0->36 [style = dotted, label="true"];
40->46 [style = bold, label=""];
3->0 [style = solid, label="i"];
31->0 [style = solid, label="NUM_NODES"];
0->29 [style = dotted, label="true"];
30->4 [style = bold, label=""];
9->15 [style = bold, label=""];
26->23 [style = bold, label=""];
7->21 [style = bold, label=""];
25->3 [style = solid, label="i"];
5->42 [style = bold, label=""];
25->22 [style = solid, label="i"];
46->22 [style = solid, label="NUM_NODES"];
11->7 [style = bold, label=""];
6->30 [style = bold, label=""];
}
