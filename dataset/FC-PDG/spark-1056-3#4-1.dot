digraph {
36 [style = filled, label = "base.get(expected)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Throwable t@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "byte(( result = ((ByteArrayOutputStream)out).toByteArray()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "run['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "File outFile = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "byte(( expected = new byte((((@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "ByteBuffer srcBuffer = testData.srcBuffer(streamId)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "baos = new ByteArrayOutputStream()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "out = new FileOutputStream(outFile)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "out = baos@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "streamId.equals(\"file\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertArrayEquals(\"buffers don't match\",expected,result)@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "{if (out != null) {try {out.close()}catch (Exception e) }if (outFile != null) {outFile.delete()}}@@@47@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "ByteBuffer srcBuffer = null@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestCallback callback = new TestCallback(out)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "verify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ByteBuffer base@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "srcBuffer = testData.emptyBuffer@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "base.get(expected)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "srcBuffer@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "streamId@@@8@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "out = baos@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "run['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "base = srcBuffer.duplicate()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "error = t@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(expected.length,result.length)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "baos = new ByteArrayOutputStream()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.stream(streamId,callback)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertTrue(\"buffers don't match\",Arrays.equals(expected,result))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "srcBuffer@@@34@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "ByteBuffer base@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "out = baos@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(\"File stream did not match.\",Files.equal(testData.testFile,outFile))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "throw new IllegalArgumentException(streamId)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ByteArrayOutputStream baos = null@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(\"buffers don't match\",Arrays.equals(expected,result))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "baos = new ByteArrayOutputStream()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertTrue(\"File stream did not match.\",Files.equal(testData.testFile,outFile))@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "callback.waitForCompletion(timeoutMs)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "OutputStream out = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "base = srcBuffer.duplicate()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "byte(( result = baos.toByteArray()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "srcBuffer = testData.largeBuffer@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(expected.length,result.length)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "srcBuffer = testData.smallBuffer@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "outFile = File.createTempFile(\"data\",\".tmp\",testData.tempDir)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "byte(( expected = new byte((((@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "srcBuffer == null@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27->13 [style = bold, label=""];
10->25 [style = solid, label="srcBuffer"];
29->8 [style = solid, label="out"];
12->35 [style = dashed, label="0"];
21->18 [style = dotted, label="true"];
30->19 [style = solid, label="out"];
43->42 [style = bold, label=""];
5->15 [style = bold, label=""];
8->9 [style = solid, label="callback"];
25->14 [style = bold, label=""];
3->16 [style = bold, label=""];
4->2 [style = solid, label="srcBuffer"];
1->19 [style = solid, label="out"];
21->18 [style = bold, label=""];
26->11 [style = bold, label=""];
9->6 [style = bold, label=""];
27->7 [style = solid, label="outFile"];
42->44 [style = solid, label="expected"];
22->8 [style = bold, label=""];
39->44 [style = dotted, label="false"];
1->33 [style = bold, label=""];
10->8 [style = bold, label=""];
21->23 [style = dotted, label="true"];
39->38 [style = bold, label=""];
30->8 [style = solid, label="out"];
4->8 [style = bold, label=""];
33->2 [style = solid, label="srcBuffer"];
34->32 [style = bold, label=""];
28->8 [style = solid, label="out"];
5->15 [style = solid, label="expected"];
21->3 [style = bold, label=""];
25->15 [style = dotted, label="false"];
25->24 [style = dotted, label="false"];
39->36 [style = dotted, label="false"];
39->45 [style = dotted, label="false"];
2->0 [style = dotted, label="true"];
21->20 [style = dotted, label="true"];
23->30 [style = bold, label=""];
27->19 [style = solid, label="outFile"];
31->5 [style = bold, label=""];
32->25 [style = solid, label="srcBuffer"];
21->29 [style = dotted, label="true"];
25->2 [style = dotted, label="false"];
21->22 [style = dotted, label="true"];
38->45 [style = bold, label=""];
47->43 [style = bold, label=""];
25->7 [style = bold, label=""];
38->44 [style = solid, label="result"];
20->1 [style = solid, label="baos"];
21->33 [style = dotted, label="true"];
47->43 [style = dotted, label="true"];
21->22 [style = bold, label=""];
21->30 [style = dotted, label="true"];
25->14 [style = dotted, label="false"];
39->40 [style = dotted, label="true"];
36->37 [style = bold, label=""];
45->46 [style = bold, label=""];
21->16 [style = dotted, label="true"];
18->19 [style = solid, label="outFile"];
33->8 [style = bold, label=""];
0->31 [style = bold, label=""];
39->47 [style = dotted, label="false"];
21->23 [style = bold, label=""];
42->36 [style = solid, label="expected"];
23->30 [style = solid, label="baos"];
24->12 [style = bold, label=""];
45->47 [style = solid, label="srcBuffer"];
25->12 [style = dotted, label="false"];
18->7 [style = solid, label="outFile"];
21->10 [style = dotted, label="true"];
20->1 [style = bold, label=""];
25->7 [style = dotted, label="true"];
2->0 [style = bold, label=""];
18->29 [style = solid, label="outFile"];
31->35 [style = solid, label="result"];
5->35 [style = solid, label="expected"];
39->40 [style = bold, label=""];
37->44 [style = bold, label=""];
21->3 [style = dotted, label="true"];
25->5 [style = dotted, label="false"];
14->2 [style = bold, label=""];
26->11 [style = dotted, label="true"];
7->19 [style = bold, label=""];
3->16 [style = solid, label="baos"];
4->25 [style = solid, label="srcBuffer"];
1->8 [style = solid, label="out"];
39->38 [style = dotted, label="false"];
29->8 [style = bold, label=""];
39->42 [style = dotted, label="false"];
21->1 [style = dotted, label="true"];
16->10 [style = bold, label=""];
24->35 [style = bold, label=""];
25->35 [style = dotted, label="false"];
35->19 [style = bold, label=""];
28->19 [style = solid, label="out"];
31->12 [style = solid, label="result"];
39->37 [style = dotted, label="false"];
17->32 [style = bold, label=""];
42->36 [style = bold, label=""];
11->19 [style = bold, label=""];
46->47 [style = bold, label=""];
21->4 [style = dotted, label="true"];
32->2 [style = solid, label="srcBuffer"];
25->31 [style = dotted, label="false"];
10->2 [style = solid, label="srcBuffer"];
18->29 [style = bold, label=""];
5->12 [style = solid, label="expected"];
21->20 [style = bold, label=""];
39->46 [style = dotted, label="false"];
30->4 [style = bold, label=""];
16->19 [style = solid, label="out"];
15->24 [style = bold, label=""];
33->25 [style = solid, label="srcBuffer"];
8->9 [style = bold, label=""];
29->19 [style = solid, label="out"];
28->27 [style = bold, label=""];
41->39 [style = bold, label=""];
12->19 [style = bold, label=""];
13->21 [style = bold, label=""];
32->28 [style = bold, label=""];
16->8 [style = solid, label="out"];
6->25 [style = bold, label=""];
}
