digraph {
18 [style = filled, label = "i++@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "region.put(Integer.toString(i),\"Portfolio-\" + i)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "qs = CacheUtils.getQueryService()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "i % 2 == 0@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "region.size() == 0@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertTrue(\"Index should be a CompactMapRangeIndex \",keyIndex1 instanceof CompactMapRangeIndex)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AttributesFactory af = new AttributesFactory()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int i = 1@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i <= 100@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "region.put(Integer.toString(i),new Portfolio(i,i))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(100,region.size())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "region = CacheUtils.createRegion(\"portfolio\",af.create(),false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testUndefinedForMapRangeIndex['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "keyIndex1 = qs.createIndex(INDEX_NAME,\"positions('SUN', 'IBM'(\",\"/portfolio \")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "IndexManager.TEST_RANGEINDEX_ONLY = true@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "region.put(Integer.toString(i),\"Portfolio-\" + i)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "region.put(Integer.toString(i),new Portfolio(i,i))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testUndefinedForMapRangeIndex['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertTrue(\"Index should be a MapRangeIndex \",keyIndex1 instanceof MapRangeIndex)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "keyIndex1 = qs.createIndex(INDEX_NAME,\"positions('SUN', 'IBM'(\",SEPARATOR + \"portfolio \")@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "assertTrue(\"Index should be a CompactMapRangeIndex \",keyIndex1 instanceof CompactMapRangeIndex)@@@24@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(\"Index should be a MapRangeIndex \",keyIndex1 instanceof MapRangeIndex)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testUndefinedForCompactMapRangeIndex['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "keyIndex1 = qs.createIndex(INDEX_NAME,\"positions('SUN', 'IBM'(\",SEPARATOR + \"portfolio \")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "af.setScope(Scope.LOCAL)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "qs.removeIndexes()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "keyIndex1 = qs.createIndex(INDEX_NAME,\"positions('SUN', 'IBM'(\",\"/portfolio \")@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
2->17 [style = bold, label=""];
14->16 [style = bold, label=""];
17->9 [style = solid, label="keyIndex1"];
16->6 [style = solid, label="i"];
18->12 [style = solid, label="i"];
6->4 [style = solid, label="i"];
0->3 [style = dashed, label="0"];
8->15 [style = bold, label=""];
21->0 [style = bold, label=""];
3->21 [style = dashed, label="0"];
11->1 [style = bold, label=""];
7->10 [style = bold, label=""];
25->23 [style = bold, label=""];
8->18 [style = bold, label=""];
6->18 [style = bold, label=""];
6->23 [style = bold, label=""];
16->6 [style = bold, label=""];
17->9 [style = bold, label=""];
12->8 [style = solid, label="i"];
12->15 [style = solid, label="i"];
16->18 [style = dotted, label="true"];
8->15 [style = dotted, label="false"];
16->7 [style = bold, label=""];
9->14 [style = solid, label="keyIndex1"];
10->3 [style = bold, label=""];
16->22 [style = solid, label="i"];
3->0 [style = solid, label="keyIndex1"];
18->8 [style = dotted, label="true"];
10->21 [style = bold, label=""];
16->18 [style = solid, label="i"];
26->24 [style = bold, label=""];
25->16 [style = bold, label=""];
13->11 [style = bold, label=""];
17->19 [style = bold, label=""];
6->8 [style = solid, label="i"];
21->0 [style = solid, label="keyIndex1"];
3->0 [style = bold, label=""];
8->4 [style = dotted, label="true"];
9->19 [style = dashed, label="0"];
6->18 [style = solid, label="i"];
5->2 [style = bold, label=""];
22->18 [style = bold, label=""];
18->12 [style = dotted, label="true"];
6->18 [style = dotted, label="true"];
19->14 [style = bold, label=""];
18->6 [style = bold, label=""];
12->8 [style = bold, label=""];
12->22 [style = dotted, label="false"];
9->25 [style = bold, label=""];
12->4 [style = solid, label="i"];
12->18 [style = bold, label=""];
9->14 [style = bold, label=""];
18->22 [style = solid, label="i"];
25->6 [style = dotted, label="true"];
4->12 [style = bold, label=""];
14->9 [style = dashed, label="0"];
18->8 [style = solid, label="i"];
16->12 [style = solid, label="i"];
15->12 [style = bold, label=""];
18->8 [style = bold, label=""];
23->7 [style = bold, label=""];
6->15 [style = solid, label="i"];
8->4 [style = bold, label=""];
24->1 [style = bold, label=""];
6->12 [style = solid, label="i"];
18->7 [style = bold, label=""];
12->18 [style = solid, label="i"];
10->3 [style = solid, label="keyIndex1"];
6->12 [style = dotted, label="true"];
19->14 [style = solid, label="keyIndex1"];
16->8 [style = solid, label="i"];
12->8 [style = dotted, label="true"];
12->22 [style = bold, label=""];
18->6 [style = solid, label="i"];
25->16 [style = dotted, label="true"];
16->6 [style = dotted, label="true"];
20->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
