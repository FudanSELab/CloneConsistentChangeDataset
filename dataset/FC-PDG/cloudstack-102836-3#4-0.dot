digraph {
12 [style = filled, label = "Mockito.doNothing().when(xenserver625StorageProcessor).removeSrAndPbdIfPossible(Mockito.eq(connectionMock),Mockito.any(),Mockito.any())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SR sr = xenserver625StorageProcessor.createNewFileSr(connectionMock,pathMock)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String uuid = \"hostUuid\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(srMock,sr)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Mockito.when(citrixResourceBase._host.getUuid()).thenReturn(uuid)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "SR srMock = Mockito.mock()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Mockito.doNothing().when(xenserver625StorageProcessor).removeSrAndPbdIfPossible(Mockito.eq(connectionMock),Mockito.any(),Mockito.any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PowerMockito.when(SR.introduce(Mockito.eq(connectionMock),Mockito.eq(srUuid),Mockito.eq(pathMock),Mockito.eq(pathMock),Mockito.eq(\"file\"),Mockito.eq(\"file\"),Mockito.eq(false),Mockito.anyMapOf(,))).thenThrow(dbUniquenessException)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PowerMockito.when(Host.getByUuid(connectionMock,uuid)).thenReturn(hostMock)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "prepareAndExecuteTestcreateNewFileSrTestThrowingException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Mockito.verify(xenserver625StorageProcessor).removeSrAndPbdIfPossible(Mockito.eq(connectionMock),nullable(),nullable())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Mockito.verify(xenserver625StorageProcessor).retrieveAlreadyConfiguredSrWithoutException(connectionMock,pathMock)@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "PowerMockito.when(SR.introduce(Mockito.eq(connectionMock),Mockito.eq(srUuid),Mockito.eq(pathMock),Mockito.eq(pathMock),Mockito.eq(\"file\"),Mockito.eq(\"file\"),Mockito.eq(false),Mockito.anyMapOf(,))).thenThrow(Mockito.mock(exceptionClass))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PowerMockito.mockStatic()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "InternalError dbUniquenessException = new InternalError(\"message: Db_exn.Uniqueness_constraint_violation(\"SR\", \"uuid\", \"fd3edbcf-f142-83d1-3fcb-029ca2446b68\")\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "createNewFileSrTestThrowingDbUniqueException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "PowerMockito.mockStatic()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Mockito.verify(xenserver625StorageProcessor).removeSrAndPbdIfPossible(Mockito.eq(connectionMock),Mockito.any(),Mockito.any())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Mockito.doReturn(srMock).when(xenserver625StorageProcessor).retrieveAlreadyConfiguredSrWithoutException(connectionMock,pathMock)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Mockito.verify(xenserver625StorageProcessor,times(0)).removeSrAndPbdIfPossible(Mockito.eq(connectionMock),Mockito.any(),Mockito.any())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "prepareAndExecuteTestcreateNewFileSrTestThrowingException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String srUuid = UUID.nameUUIDFromBytes(pathMock.getBytes()).toString()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Host hostMock = Mockito.mock()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Class<? extends Throwable> exceptionClass@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
19->18 [style = bold, label=""];
20->17 [style = solid, label="dbUniquenessException"];
20->17 [style = bold, label=""];
21->19 [style = solid, label="srMock"];
18->23 [style = bold, label=""];
16->10 [style = bold, label=""];
6->13 [style = dotted, label="true"];
8->3 [style = bold, label=""];
0->21 [style = bold, label=""];
1->0 [style = bold, label=""];
3->4 [style = bold, label=""];
12->7 [style = bold, label=""];
11->3 [style = solid, label="hostMock"];
15->13 [style = dotted, label="true"];
7->14 [style = bold, label=""];
7->19 [style = solid, label="sr"];
12->7 [style = solid, label="sr"];
6->1 [style = bold, label=""];
0->10 [style = bold, label=""];
17->12 [style = bold, label=""];
2->14 [style = dashed, label="0"];
1->0 [style = solid, label="uuid"];
5->12 [style = bold, label=""];
15->1 [style = bold, label=""];
7->19 [style = dashed, label="0"];
7->2 [style = bold, label=""];
13->9 [style = solid, label="exceptionClass"];
4->20 [style = bold, label=""];
2->18 [style = dashed, label="0"];
9->5 [style = bold, label=""];
21->16 [style = bold, label=""];
11->8 [style = bold, label=""];
22->1 [style = bold, label=""];
7->19 [style = bold, label=""];
10->11 [style = bold, label=""];
}
