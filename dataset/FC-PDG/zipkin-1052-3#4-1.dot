digraph {
3 [style = filled, label = "HttpClientFactory factory = context.getBean()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "providesBasicAuthInterceptor_whenDynamicCredentialsConfigured['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String credentialsFile = pathOfResource(\"es-credentials\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Access.registerElasticsearch(context)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Access.registerElasticsearch(context)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "WebClient client = WebClient.builder(\"http://127.0.0.1:1234\").option(ClientOption.DECORATION,factory.options.decoration()).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "providesBasicAuthInterceptor_whenBasicAuthUserNameAndPasswordConfigured['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "providesBasicAuthInterceptor_whenBasicAuthUserNameAndPasswordConfigured['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "context.refresh()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\",\"zipkin.storage.elasticsearch.hosts:127.0.0.1:1234\",\"zipkin.storage.elasticsearch.username:somename\",\"zipkin.storage.elasticsearch.password:pass\").applyTo(context)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "TestPropertyValues.of(\"zipkin.storage.type:elasticsearch\",\"zipkin.storage.elasticsearch.hosts:127.0.0.1:1234\",\"zipkin.storage.elasticsearch.credentials-file:\" + credentialsFile,\"zipkin.storage.elasticsearch.credentials-refresh-interval:2\").applyTo(context)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(credentials).isEqualTo(\"Basic Zm9vOmJhcg==\")@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "String credentials = basicCredentials.getCredentials()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "BasicCredentials basicCredentials = Objects.requireNonNull(client.as()).basicCredentials@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertThat(client.as()).isNotNull()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "WebClient client = WebClient.builder(\"http://127.0.0.1:1234\").option(ClientOptions.DECORATION,factory.options.decoration()).build()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8->0 [style = bold, label=""];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
12->14 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
7->4 [style = bold, label=""];
15->11 [style = bold, label=""];
6->7 [style = bold, label=""];
5->0 [style = bold, label=""];
9->1 [style = bold, label=""];
11->9 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = dashed, label="0"];
3->4 [style = bold, label=""];
2->1 [style = bold, label=""];
0->2 [style = bold, label=""];
}
