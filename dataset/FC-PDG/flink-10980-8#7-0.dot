digraph {
20 [style = filled, label = "Assert.assertNull(recoveredState.getInProgressResumableFile())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final Path testBucket = new Path(testFolder.getPath(),\"test\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stream.close()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(testBucket,recoveredState.getBucketPath())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final SimpleVersionedSerializer<BucketState<String>> serializer = new BucketStateSerializer<>(writer.getResumeRecoverableSerializer(),writer.getCommitRecoverableSerializer(),SimpleVersionedStringSerializer.INSTANCE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final BucketState<String> bucketState = new BucketState<>(\"test\",testBucket,Long.MAX_VALUE,null,new HashMap<>())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testSerializationOnlyInProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "Assert.assertEquals(1L,statuses.length)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testSerializationEmpty['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final FileSystem fs = FileSystem.get(testFolder.toURI())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "byte(( bytes = SimpleVersionedSerialization.writeVersionAndSerialize(serializer,bucketState)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assert.assertTrue(statuses(0(.getPath().getPath().startsWith((new Path(testBucket.getParent(),\".test.inprogress\")).toString()))@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "final RecoverableWriter.ResumeRecoverable current = stream.persist()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final BucketState<String> bucketState = new BucketState<>(\"test\",testBucket,Long.MAX_VALUE,current,new HashMap<>())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final File testFolder = tempFolder.newFolder()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "stream.write(IN_PROGRESS_CONTENT.getBytes(Charset.forName(\"UTF-8\")))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "FileStatus(( statuses = fs.listStatus(testBucket.getParent())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testSerializationOnlyInProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertEquals(testBucket,recoveredState.getBucketPath())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final RecoverableFsDataOutputStream stream = writer.open(testBucket)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Path testBucket = new Path(testFolder.getPath(),\"test\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertTrue(statuses(0(.getPath().getPath().startsWith((new Path(testBucket.getParent(),\".test.inprogress\")).getPath()))@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "final BucketState<String> recoveredState = SimpleVersionedSerialization.readVersionAndDeSerialize(serializer,bytes)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final RecoverableWriter writer = fs.createRecoverableWriter()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final byte(( bytes = SimpleVersionedSerialization.writeVersionAndSerialize(serializer,bucketState)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(recoveredState.getCommittableFilesPerCheckpoint().isEmpty())@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
16->3 [style = solid, label="testBucket"];
9->13 [style = solid, label="current"];
0->4 [style = solid, label="bytes"];
23->20 [style = bold, label=""];
8->23 [style = bold, label=""];
25->22 [style = bold, label=""];
10->14 [style = bold, label=""];
19->23 [style = solid, label="testBucket"];
21->15 [style = bold, label=""];
11->4 [style = bold, label=""];
12->17 [style = bold, label=""];
18->15 [style = bold, label=""];
8->0 [style = solid, label="serializer"];
22->24 [style = solid, label="serializer"];
8->4 [style = solid, label="serializer"];
0->11 [style = bold, label=""];
13->0 [style = solid, label="bucketState"];
16->10 [style = solid, label="testBucket"];
2->17 [style = dashed, label="0"];
19->25 [style = bold, label=""];
6->15 [style = bold, label=""];
20->4 [style = bold, label=""];
24->8 [style = solid, label="bytes"];
8->0 [style = bold, label=""];
7->9 [style = bold, label=""];
5->19 [style = bold, label=""];
12->2 [style = bold, label=""];
12->4 [style = dashed, label="0"];
3->7 [style = bold, label=""];
1->16 [style = bold, label=""];
19->25 [style = solid, label="testBucket"];
14->12 [style = bold, label=""];
25->24 [style = solid, label="bucketState"];
16->5 [style = bold, label=""];
0->24 [style = dashed, label="0"];
22->8 [style = solid, label="serializer"];
22->24 [style = bold, label=""];
24->8 [style = bold, label=""];
13->8 [style = bold, label=""];
16->13 [style = solid, label="testBucket"];
9->13 [style = bold, label=""];
15->1 [style = bold, label=""];
}
