digraph {
15 [style = filled, label = "assertEquals(sessionCredentials.getAWSSecretKey(),\"secretKeySample\")@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "AWSCredentialsProvider provider = awsModule.getAWSCredentialsProvider(config)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "EasyMock.replay(config)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(credentials.getAWSAccessKeyId(),\"accessKeySample\")@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "testWithFixedAWSKeys['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "FileSessionCredentialsProvider provider = new FileSessionCredentialsProvider(file.getAbsolutePath())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EasyMock.expect(config.getAccessKey()).andReturn(new DefaultPasswordProvider(\"accessKeySample\")).atLeastOnce()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testWithFixedAWSKeys['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "out.write(\"sessionToken=sessionTokenSamplesecretKey=secretKeySampleaccessKey=accessKeySample\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(sessionCredentials.getAWSAccessKeyId(),\"accessKeySample\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "AWSSessionCredentials sessionCredentials = (AWSSessionCredentials)provider.getCredentials()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(sessionCredentials.getSessionToken(),\"sessionTokenSample\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "File file = folder.newFile()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "AWSCredentialsConfig config = EasyMock.createMock()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "s3Module.getAmazonS3Client(provider,new AWSProxyConfig(),new AWSEndpointConfig(),new AWSClientConfig(),new S3StorageConfig(new NoopServerSideEncryption()))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expect(config.getSecretKey()).andReturn(new DefaultPasswordProvider(\"secretKeySample\")).atLeastOnce()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "AWSCredentials credentials = provider.getCredentials()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(credentials.getAWSSecretKey(),\"secretKeySample\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "test['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(\"accessKeySample\",credentials.getAWSAccessKeyId())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Assert.assertEquals(\"secretKeySample\",credentials.getAWSSecretKey())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20->13 [style = bold, label=""];
9->0 [style = bold, label=""];
5->3 [style = solid, label="config"];
3->0 [style = solid, label="provider"];
12->11 [style = bold, label=""];
18->15 [style = bold, label=""];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
2->9 [style = bold, label=""];
1->7 [style = bold, label=""];
7->3 [style = bold, label=""];
19->16 [style = bold, label=""];
6->2 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->0 [style = bold, label=""];
10->5 [style = bold, label=""];
8->5 [style = bold, label=""];
5->4 [style = bold, label=""];
9->11 [style = dashed, label="0"];
16->14 [style = bold, label=""];
4->1 [style = bold, label=""];
5->7 [style = solid, label="config"];
13->18 [style = bold, label=""];
17->20 [style = bold, label=""];
6->12 [style = bold, label=""];
}
