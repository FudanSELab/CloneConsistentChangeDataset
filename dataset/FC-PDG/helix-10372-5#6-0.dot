digraph {
10 [style = filled, label = "verify['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(_clusterName,new ZkBaseDataAccessor<ZNRecord>(_client))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return verifyBalanceExternalView(accessor.getProperty(keyBuilder.externalView(_resourceName)).getRecord(),numberOfPartitions,masterValue,replicas,instances)@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verify['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(_clusterName,new ZkBaseDataAccessor<>(_gZkClient))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "instances == 0@@@18@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int instances = 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "instances = cache.getLiveInstances().size()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int numberOfPartitions = accessor.getProperty(keyBuilder.idealStates(_resourceName)).getRecord().getListFields().size()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "cache.getInstanceConfigMap().get(liveInstanceName).containsTag(instanceGroupTag)@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Builder keyBuilder = accessor.keyBuilder()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "HelixDataAccessor accessor = new ZKHelixDataAccessor(_clusterName,new ZkBaseDataAccessor<ZNRecord>(_gZkClient))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "instances++@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "verify['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "int numberOfPartitions = accessor.getProperty(keyBuilder.idealStates(_resourceName)).getRecord().getListFields().size()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ResourceControllerDataProvider cache = new ResourceControllerDataProvider()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "cache.refresh(accessor)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int replicas = Integer.parseInt(cache.getIdealState(_resourceName).getReplicas())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String instanceGroupTag = cache.getIdealState(_resourceName).getInstanceGroupTag()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "String masterValue = cache.getStateModelDef(cache.getIdealState(_resourceName).getStateModelDefRef()).getStatesPriorityList().get(0)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return verifyBalanceExternalView(accessor.getProperty(keyBuilder.externalView(_resourceName)).getRecord(),numberOfPartitions,masterValue,replicas,cache.getLiveInstances().size(),cache.getIdealState(_resourceName).getMaxPartitionsPerInstance())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->3 [style = bold, label=""];
6->3 [style = bold, label=""];
16->15 [style = bold, label=""];
1->4 [style = bold, label=""];
12->5 [style = bold, label=""];
2->1 [style = bold, label=""];
4->19 [style = solid, label="replicas"];
0->2 [style = bold, label=""];
15->19 [style = solid, label="instances"];
4->21 [style = bold, label=""];
20->17 [style = solid, label="instances"];
2->11 [style = solid, label="masterValue"];
13->19 [style = solid, label="instances"];
16->17 [style = bold, label=""];
21->16 [style = solid, label="instanceGroupTag"];
15->16 [style = bold, label=""];
7->0 [style = solid, label="accessor"];
9->0 [style = solid, label="accessor"];
17->19 [style = bold, label=""];
8->7 [style = bold, label=""];
1->11 [style = bold, label=""];
9->6 [style = bold, label=""];
1->4 [style = solid, label="replicas"];
15->17 [style = bold, label=""];
3->5 [style = bold, label=""];
13->19 [style = bold, label=""];
21->20 [style = bold, label=""];
20->16 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->4 [style = solid, label="numberOfPartitions"];
5->0 [style = bold, label=""];
12->11 [style = solid, label="numberOfPartitions"];
7->9 [style = dashed, label="0"];
1->11 [style = solid, label="replicas"];
7->6 [style = bold, label=""];
20->19 [style = solid, label="instances"];
15->17 [style = solid, label="instances"];
5->19 [style = solid, label="numberOfPartitions"];
20->15 [style = solid, label="instances"];
1->19 [style = solid, label="masterValue"];
10->9 [style = bold, label=""];
17->13 [style = bold, label=""];
2->4 [style = solid, label="masterValue"];
4->11 [style = dashed, label="0"];
14->2 [style = solid, label="accessor"];
17->13 [style = dotted, label="true"];
18->14 [style = bold, label=""];
16->15 [style = dotted, label="true"];
6->12 [style = bold, label=""];
}
