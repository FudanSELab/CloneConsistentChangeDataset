digraph {
5 [style = filled, label = "stopBeforeStarting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ClassLoader loader = EasyMock.createMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "EasyMock.expectLastCall()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "TaskStatus.Listener statusListener = EasyMock.createMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "cancelBeforeStopping['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectLastCall()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "replay(workerTask)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "workerTask.cancel()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "verify(workerTask)@@@39@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final CountDownLatch stopped = new CountDownLatch(1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "workerTask.execute()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "EasyMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "stopped.countDown()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "thread.join()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ConnectorTaskId taskId = new ConnectorTaskId(\"foo\",0)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader,metrics).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "workerTask.initialize(TASK_CONFIG)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "statusListener.onStartup(taskId)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final Thread thread = new Thread(){@Override public void run(){try {stopped.await()}catch (Exception e) }}@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){thread.start()return null}})@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expectLastCall()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "stopBeforeStarting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "workerTask.stop()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "workerTask.close()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "workerTask.run()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "workerTask.releaseResources()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "WorkerTask workerTask = partialMockBuilder().withConstructor(,,,).withArgs(taskId,statusListener,TargetState.STARTED,loader).addMockedMethod(\"initialize\").addMockedMethod(\"execute\").addMockedMethod(\"close\").createStrictMock()@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "workerTask.awaitStop(1000L)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "workerTask.stop()@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "EasyMock.expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22->25 [style = bold, label=""];
2->19 [style = bold, label=""];
7->10 [style = bold, label=""];
2->6 [style = bold, label=""];
12->21 [style = bold, label=""];
25->23 [style = bold, label=""];
0->27 [style = bold, label=""];
17->9 [style = bold, label=""];
4->9 [style = solid, label="workerTask"];
1->3 [style = bold, label=""];
15->8 [style = solid, label="workerTask"];
11->12 [style = bold, label=""];
3->15 [style = bold, label=""];
4->29 [style = bold, label=""];
7->0 [style = bold, label=""];
16->17 [style = bold, label=""];
5->14 [style = bold, label=""];
9->7 [style = bold, label=""];
3->4 [style = bold, label=""];
26->11 [style = bold, label=""];
14->1 [style = bold, label=""];
24->14 [style = bold, label=""];
29->26 [style = bold, label=""];
12->2 [style = bold, label=""];
30->28 [style = bold, label=""];
15->11 [style = bold, label=""];
10->13 [style = bold, label=""];
19->9 [style = bold, label=""];
21->22 [style = bold, label=""];
6->16 [style = bold, label=""];
4->15 [style = dashed, label="0"];
28->8 [style = bold, label=""];
6->19 [style = dashed, label="0"];
0->8 [style = bold, label=""];
14->25 [style = solid, label="taskId"];
23->2 [style = bold, label=""];
6->9 [style = bold, label=""];
4->11 [style = bold, label=""];
20->30 [style = bold, label=""];
27->20 [style = bold, label=""];
18->14 [style = bold, label=""];
4->8 [style = solid, label="workerTask"];
15->9 [style = solid, label="workerTask"];
13->0 [style = bold, label=""];
}
