digraph {
65 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+YY0\"),kv(1,\"XX1+YY1\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "getter.init(driver.context())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "driver.setTime(0L)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "i++@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "processor.checkAndClearProcessResult()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "final KTableValueGetterSupplier<Integer,String> getterSupplier = ((KTableImpl<Integer,String,String>)joined).valueGetterSupplier()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "final int(( expectedKeys@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "int i = 0@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "driver.flushState()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final KStream<Integer,String> joined@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "processor.checkAndClearProcessResult(\"0:null\",\"1:null\")@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "driver.flushState()@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "i < 2@@@13@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "final StreamsBuilder builder@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "int i = 0@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "checkJoinedValues(getter,kv(0,null),kv(1,null))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier = new MockProcessorSupplier<>()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "driver.flushState()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "i < 2@@@21@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "doTestJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "driver.flushState()@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i())@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "final KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final KStream<Integer,String> stream1@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@c3b5db@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "processor.checkAndClearProcessResult()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "final Collection<Set<String>> copartitionGroups = TopologyWrapper.getInternalTopologyBuilder(builder.build()).copartitionGroups()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "i++@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "final KTable<Integer,String> joined@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "i++@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"1:XX1+Y1\")@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+YY0\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "driver.flushState()@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "driver.setUp(builder,stateDir,Serdes.Integer(),Serdes.String())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "driver.pipeInput(recordFactory.create(topic2,expectedKey,\"YY\" + expectedKey))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "joined.process(supplier)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i < 2@@@45@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "driver.process(topic1,null,\"XX\" + 1)@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "stream1 = builder.stream(topic1,consumed)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final MockProcessorSupplier<Integer,String> supplier@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final StreamsBuilder builder = new StreamsBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "driver.flushState()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "stream2 = builder.stream(topic2,consumed)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "driver.pipeInput(recordFactory.create(topic1,expectedKey,\"XX\" + expectedKey))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "int i = 0@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "driver.flushState()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final KStream<Integer,String> stream2@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final MockProcessor<Integer,String> processor = supplier.theCapturedProcessor()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "joined = stream1.join(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(ofMillis(100)),Joined.with(Serdes.Integer(),Serdes.String(),Serdes.String()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+Y0\"),kv(1,\"XX1+Y1\"))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "checkJoinedValues(getter,kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@62@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "i < 2@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "processor.checkAndClearProcessResult(\"2:XX2+YY2\",\"3:XX3+YY3\")@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "int i = 0@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "i < 2@@@27@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40->47 [style = solid, label="i"];
71->3 [style = solid, label="i"];
48->81 [style = bold, label=""];
25->73 [style = bold, label=""];
0->13 [style = bold, label=""];
57->39 [style = dotted, label="true"];
55->49 [style = bold, label=""];
56->41 [style = bold, label=""];
8->22 [style = solid, label="expectedKeys"];
36->28 [style = bold, label=""];
19->11 [style = bold, label=""];
10->32 [style = bold, label=""];
70->26 [style = solid, label="getter"];
7->31 [style = bold, label=""];
40->59 [style = solid, label="i"];
63->42 [style = solid, label="i"];
59->47 [style = solid, label="i"];
9->26 [style = bold, label=""];
74->67 [style = bold, label=""];
8->30 [style = solid, label="expectedKeys"];
63->81 [style = bold, label=""];
43->56 [style = solid, label="expectedKeys"];
35->23 [style = bold, label=""];
26->60 [style = bold, label=""];
70->62 [style = solid, label="getter"];
51->48 [style = bold, label=""];
23->33 [style = bold, label=""];
3->41 [style = dotted, label="true"];
22->0 [style = bold, label=""];
24->21 [style = bold, label=""];
71->56 [style = solid, label="i"];
19->76 [style = dashed, label="0"];
57->68 [style = dotted, label="true"];
40->47 [style = bold, label=""];
63->81 [style = solid, label="i"];
48->42 [style = solid, label="i"];
73->66 [style = bold, label=""];
13->22 [style = bold, label=""];
7->1 [style = dotted, label="true"];
54->71 [style = bold, label=""];
3->30 [style = bold, label=""];
26->22 [style = solid, label="i"];
81->63 [style = dotted, label="true"];
33->7 [style = bold, label=""];
13->34 [style = bold, label=""];
60->0 [style = bold, label=""];
62->46 [style = bold, label=""];
24->59 [style = bold, label=""];
70->82 [style = bold, label=""];
12->28 [style = bold, label=""];
27->12 [style = bold, label=""];
57->79 [style = bold, label=""];
52->80 [style = bold, label=""];
22->50 [style = bold, label=""];
3->30 [style = dotted, label="true"];
49->38 [style = bold, label=""];
38->45 [style = bold, label=""];
41->3 [style = solid, label="i"];
67->26 [style = bold, label=""];
59->24 [style = solid, label="i"];
16->19 [style = bold, label=""];
47->59 [style = dotted, label="true"];
26->13 [style = bold, label=""];
35->66 [style = dashed, label="0"];
65->78 [style = bold, label=""];
6->2 [style = bold, label=""];
20->8 [style = bold, label=""];
33->7 [style = solid, label="i"];
26->0 [style = solid, label="i"];
70->38 [style = solid, label="getter"];
13->22 [style = dotted, label="true"];
13->0 [style = dotted, label="true"];
81->58 [style = bold, label=""];
15->30 [style = solid, label="i"];
28->24 [style = bold, label=""];
33->17 [style = solid, label="i"];
8->17 [style = solid, label="expectedKeys"];
40->24 [style = solid, label="i"];
7->17 [style = dotted, label="true"];
30->24 [style = dashed, label="0"];
1->62 [style = bold, label=""];
14->6 [style = bold, label=""];
30->15 [style = bold, label=""];
57->43 [style = dotted, label="true"];
1->17 [style = solid, label="i"];
71->3 [style = bold, label=""];
3->56 [style = dotted, label="true"];
7->17 [style = bold, label=""];
10->28 [style = solid, label="supplier"];
17->1 [style = bold, label=""];
57->77 [style = dotted, label="true"];
25->60 [style = dashed, label="0"];
61->69 [style = bold, label=""];
8->14 [style = bold, label=""];
70->72 [style = solid, label="getter"];
32->27 [style = bold, label=""];
5->18 [style = bold, label=""];
78->52 [style = bold, label=""];
26->13 [style = solid, label="i"];
2->10 [style = bold, label=""];
15->3 [style = bold, label=""];
25->16 [style = bold, label=""];
1->7 [style = bold, label=""];
81->42 [style = dotted, label="true"];
0->22 [style = solid, label="i"];
79->65 [style = bold, label=""];
17->42 [style = dashed, label="0"];
3->9 [style = bold, label=""];
42->63 [style = bold, label=""];
21->5 [style = bold, label=""];
58->1 [style = bold, label=""];
59->47 [style = bold, label=""];
66->75 [style = bold, label=""];
33->1 [style = solid, label="i"];
47->24 [style = bold, label=""];
22->56 [style = dashed, label="0"];
3->15 [style = dotted, label="true"];
47->5 [style = bold, label=""];
4->20 [style = bold, label=""];
29->15 [style = solid, label="i"];
44->25 [style = bold, label=""];
45->72 [style = bold, label=""];
82->40 [style = bold, label=""];
27->12 [style = solid, label="stream2"];
41->56 [style = solid, label="i"];
30->74 [style = bold, label=""];
46->55 [style = bold, label=""];
70->51 [style = solid, label="getter"];
34->25 [style = bold, label=""];
27->36 [style = bold, label=""];
29->3 [style = solid, label="i"];
70->73 [style = solid, label="getter"];
53->51 [style = bold, label=""];
29->30 [style = solid, label="i"];
0->13 [style = solid, label="i"];
43->24 [style = solid, label="expectedKeys"];
80->61 [style = bold, label=""];
29->3 [style = bold, label=""];
41->3 [style = bold, label=""];
37->20 [style = bold, label=""];
27->36 [style = solid, label="stream2"];
50->76 [style = bold, label=""];
64->54 [style = bold, label=""];
43->42 [style = solid, label="expectedKeys"];
71->41 [style = solid, label="i"];
11->35 [style = bold, label=""];
15->3 [style = solid, label="i"];
76->44 [style = bold, label=""];
18->29 [style = bold, label=""];
81->42 [style = bold, label=""];
70->50 [style = solid, label="getter"];
48->81 [style = solid, label="i"];
12->36 [style = dashed, label="0"];
0->22 [style = bold, label=""];
48->63 [style = solid, label="i"];
69->70 [style = bold, label=""];
75->53 [style = bold, label=""];
47->24 [style = dotted, label="true"];
1->7 [style = solid, label="i"];
5->64 [style = bold, label=""];
68->80 [style = solid, label="builder"];
3->56 [style = bold, label=""];
}
