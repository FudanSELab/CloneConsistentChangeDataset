digraph {
55 [style = filled, label = "testSlidingEventTimeWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
85 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 2000))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "expectedOutput.add(new Watermark(2000))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@45@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "expectedOutput.add(new Watermark(6000))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
81 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5999))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "testContinuousWatermarkTrigger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "expectedOutput.add(new Watermark(5000))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7999))@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6000))@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "expectedOutput.add(new Watermark(1999))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 1999))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 20))@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "expectedOutput.add(new Watermark(3999))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "expectedOutput.add(new Watermark(7000))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",1,closeCalled.get())@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "long initialTime = 0L@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "testSlidingEventTimeWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@43@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4999))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "closeCalled.set(0)@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 999))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ConcurrentLinkedQueue<Object> expectedOutput = new ConcurrentLinkedQueue<>()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
51 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(SlidingTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS),Time.of(WINDOW_SLIDE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,TimeWindow,Tuple2<String,Integer>>(new SumReducer()),EventTimeTrigger.create())@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 8000))@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "testHarness.open()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final int WINDOW_SLIDE = 1@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "windowBufferFactory instanceof PreAggregatingHeapWindowBuffer.Factory@@@52@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),initialTime + 2999))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),Long.MAX_VALUE))@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",2,closeCalled.get())@@@53@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
74 [style = filled, label = "operator.setInputType(TypeInfoParser.parse(\"Tuple2<String, Integer>\"),new ExecutionConfig())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "testHarness.close()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "expectedOutput.add(new Watermark(3000))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime + 999))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testHarness.close()@@@51@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "expectedOutput.add(new Watermark(5999))@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 6999))@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "windowBufferFactory instanceof PreAggregatingHeapWindowBuffer.Factory@@@46@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final int WINDOW_SIZE = 3@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3000))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "Assert.assertEquals(\"Close was not called.\",1,closeCalled.get())@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key1\",3),Long.MAX_VALUE))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "expectedOutput.add(new Watermark(4000))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",3),initialTime + 2999))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 3000))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "long initialTime = 0L@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "expectedOutput.add(new Watermark(8000))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expectedOutput.add(new StreamRecord<>(new Tuple2<>(\"key2\",5),initialTime + 3999))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new OneInputStreamOperatorTestHarness<>(operator)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 1000))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
79 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 5000))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 7000))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,GlobalWindow> operator = new WindowOperator<>(GlobalWindows.create(),new GlobalWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),windowBufferFactory,new ReduceWindowFunction<String,GlobalWindow,Tuple2<String,Integer>>(new SumReducer()),ContinuousEventTimeTrigger.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1000))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "expectedOutput.add(new Watermark(6999))@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "expectedOutput.add(new Watermark(2999))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key1\",1),initialTime))@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "expectedOutput.add(new Watermark(7999))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
71 [style = filled, label = "testHarness.processWatermark(new Watermark(initialTime + 4000))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expectedOutput,testHarness.getOutput(),new ResultSortComparator())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "expectedOutput.add(new Watermark(1000))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 1999))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedOutput.add(new Watermark(4999))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),initialTime + 3999))@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23->7 [style = dotted, label="false"];
0->36 [style = solid, label="initialTime"];
6->77 [style = dashed, label="0"];
0->3 [style = solid, label="initialTime"];
0->14 [style = solid, label="initialTime"];
60->42 [style = solid, label="expectedOutput"];
0->39 [style = solid, label="initialTime"];
53->36 [style = solid, label="initialTime"];
54->57 [style = bold, label=""];
24->39 [style = bold, label=""];
53->3 [style = solid, label="initialTime"];
34->87 [style = bold, label=""];
0->15 [style = solid, label="initialTime"];
42->64 [style = dashed, label="0"];
53->9 [style = solid, label="initialTime"];
5->45 [style = bold, label=""];
9->10 [style = bold, label=""];
38->2 [style = solid, label="expectedOutput"];
12->9 [style = bold, label=""];
47->33 [style = bold, label=""];
74->21 [style = bold, label=""];
42->29 [style = bold, label=""];
0->24 [style = solid, label="initialTime"];
22->66 [style = solid, label="WINDOW_SIZE"];
0->49 [style = solid, label="initialTime"];
21->28 [style = bold, label=""];
3->27 [style = bold, label=""];
28->63 [style = solid, label="initialTime"];
28->0 [style = bold, label=""];
66->21 [style = solid, label="operator"];
13->17 [style = bold, label=""];
87->19 [style = bold, label=""];
8->20 [style = bold, label=""];
20->16 [style = bold, label=""];
41->80 [style = dashed, label="0"];
3->9 [style = dashed, label="0"];
71->64 [style = bold, label=""];
79->50 [style = bold, label=""];
28->87 [style = solid, label="initialTime"];
76->81 [style = bold, label=""];
84->70 [style = bold, label=""];
38->40 [style = solid, label="expectedOutput"];
29->44 [style = bold, label=""];
28->34 [style = solid, label="initialTime"];
25->66 [style = dashed, label="0"];
13->86 [style = bold, label=""];
49->4 [style = bold, label=""];
53->49 [style = solid, label="initialTime"];
11->43 [style = dashed, label="0"];
39->50 [style = dashed, label="0"];
48->18 [style = bold, label=""];
6->46 [style = bold, label=""];
46->50 [style = bold, label=""];
53->60 [style = bold, label=""];
28->19 [style = solid, label="initialTime"];
0->35 [style = solid, label="initialTime"];
53->29 [style = solid, label="initialTime"];
60->39 [style = solid, label="expectedOutput"];
14->48 [style = bold, label=""];
28->79 [style = solid, label="initialTime"];
25->51 [style = bold, label=""];
28->73 [style = solid, label="initialTime"];
0->42 [style = solid, label="initialTime"];
22->25 [style = bold, label=""];
88->34 [style = bold, label=""];
0->19 [style = solid, label="initialTime"];
53->5 [style = solid, label="initialTime"];
28->31 [style = solid, label="initialTime"];
41->32 [style = bold, label=""];
55->59 [style = dotted, label="true"];
73->67 [style = bold, label=""];
34->19 [style = bold, label=""];
38->11 [style = bold, label=""];
31->5 [style = bold, label=""];
17->41 [style = bold, label=""];
36->31 [style = bold, label=""];
51->21 [style = bold, label=""];
28->1 [style = solid, label="initialTime"];
16->26 [style = bold, label=""];
85->63 [style = bold, label=""];
13->86 [style = dotted, label="true"];
13->82 [style = bold, label=""];
57->0 [style = bold, label=""];
28->40 [style = solid, label="initialTime"];
28->71 [style = solid, label="initialTime"];
26->6 [style = bold, label=""];
31->68 [style = bold, label=""];
53->46 [style = solid, label="initialTime"];
0->4 [style = solid, label="initialTime"];
58->54 [style = bold, label=""];
53->11 [style = solid, label="initialTime"];
0->38 [style = bold, label=""];
43->11 [style = bold, label=""];
44->76 [style = bold, label=""];
56->58 [style = bold, label=""];
25->51 [style = solid, label="WINDOW_SLIDE"];
0->72 [style = solid, label="expectedOutput"];
26->70 [style = dashed, label="0"];
53->52 [style = solid, label="initialTime"];
39->52 [style = bold, label=""];
23->37 [style = bold, label=""];
38->9 [style = solid, label="expectedOutput"];
28->43 [style = solid, label="initialTime"];
24->79 [style = dashed, label="0"];
65->72 [style = bold, label=""];
53->57 [style = solid, label="initialTime"];
0->5 [style = solid, label="initialTime"];
0->81 [style = solid, label="expectedOutput"];
23->7 [style = bold, label=""];
27->8 [style = bold, label=""];
0->31 [style = solid, label="initialTime"];
0->16 [style = solid, label="initialTime"];
83->79 [style = bold, label=""];
60->56 [style = bold, label=""];
60->6 [style = solid, label="expectedOutput"];
40->35 [style = bold, label=""];
72->69 [style = bold, label=""];
0->6 [style = solid, label="initialTime"];
0->61 [style = solid, label="expectedOutput"];
53->54 [style = solid, label="initialTime"];
53->10 [style = solid, label="initialTime"];
60->12 [style = solid, label="expectedOutput"];
35->73 [style = dashed, label="0"];
75->40 [style = bold, label=""];
53->44 [style = solid, label="initialTime"];
53->19 [style = solid, label="initialTime"];
40->80 [style = bold, label=""];
0->27 [style = solid, label="initialTime"];
53->20 [style = solid, label="initialTime"];
35->14 [style = bold, label=""];
53->56 [style = solid, label="initialTime"];
53->16 [style = solid, label="initialTime"];
14->67 [style = dashed, label="0"];
38->18 [style = solid, label="expectedOutput"];
0->1 [style = solid, label="initialTime"];
22->51 [style = solid, label="WINDOW_SIZE"];
68->85 [style = bold, label=""];
62->84 [style = bold, label=""];
22->66 [style = bold, label=""];
52->40 [style = bold, label=""];
0->62 [style = solid, label="expectedOutput"];
81->75 [style = bold, label=""];
0->26 [style = solid, label="initialTime"];
53->40 [style = solid, label="initialTime"];
28->75 [style = solid, label="initialTime"];
0->20 [style = solid, label="expectedOutput"];
28->4 [style = solid, label="initialTime"];
53->31 [style = solid, label="initialTime"];
53->34 [style = solid, label="initialTime"];
5->31 [style = dashed, label="0"];
4->1 [style = bold, label=""];
43->88 [style = bold, label=""];
50->15 [style = bold, label=""];
0->17 [style = solid, label="initialTime"];
13->82 [style = dotted, label="false"];
44->24 [style = bold, label=""];
50->61 [style = bold, label=""];
60->8 [style = solid, label="expectedOutput"];
33->22 [style = bold, label=""];
38->43 [style = bold, label=""];
0->83 [style = solid, label="expectedOutput"];
77->20 [style = bold, label=""];
53->58 [style = solid, label="initialTime"];
63->9 [style = bold, label=""];
78->33 [style = bold, label=""];
80->65 [style = bold, label=""];
38->44 [style = solid, label="expectedOutput"];
48->44 [style = dashed, label="0"];
38->20 [style = solid, label="expectedOutput"];
51->28 [style = solid, label="operator"];
0->13 [style = solid, label="initialTime"];
28->84 [style = solid, label="initialTime"];
53->38 [style = solid, label="initialTime"];
53->50 [style = solid, label="initialTime"];
28->88 [style = solid, label="initialTime"];
30->23 [style = bold, label=""];
66->74 [style = bold, label=""];
0->10 [style = solid, label="initialTime"];
70->77 [style = bold, label=""];
53->0 [style = solid, label="initialTime"];
10->3 [style = bold, label=""];
0->11 [style = solid, label="initialTime"];
67->44 [style = bold, label=""];
38->50 [style = solid, label="expectedOutput"];
9->62 [style = bold, label=""];
28->36 [style = solid, label="initialTime"];
15->71 [style = dashed, label="0"];
13->75 [style = dashed, label="0"];
1->36 [style = bold, label=""];
0->34 [style = solid, label="initialTime"];
32->2 [style = bold, label=""];
32->65 [style = dashed, label="0"];
20->71 [style = bold, label=""];
45->12 [style = bold, label=""];
16->84 [style = dashed, label="0"];
23->37 [style = dotted, label="true"];
0->45 [style = solid, label="initialTime"];
11->34 [style = bold, label=""];
15->42 [style = bold, label=""];
0->85 [style = solid, label="expectedOutput"];
19->49 [style = bold, label=""];
17->40 [style = dashed, label="0"];
55->53 [style = bold, label=""];
18->13 [style = bold, label=""];
61->73 [style = bold, label=""];
60->48 [style = solid, label="expectedOutput"];
64->83 [style = bold, label=""];
19->4 [style = bold, label=""];
45->68 [style = dashed, label="0"];
69->13 [style = bold, label=""];
2->30 [style = bold, label=""];
10->63 [style = dashed, label="0"];
60->1 [style = solid, label="expectedOutput"];
}
