digraph {
2 [style = filled, label = "File garbage = new File(mavenHomeDir,\"garbage\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(distributionDir,localDistribution.getDistributionDir())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertTrue(zipDestination.exists())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "configuration.setAlwaysUnpack(true)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "File garbage = mavenHomeDir.resolve(\"garbage\").toFile()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "createTestZip(zipDestination)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Assert.assertTrue(homeDir.isDirectory())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCreateDistWithExistingZipAndDistAndAlwaysDownloadTrue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(localDistribution,pathAssembler.getDistribution(configuration))@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertFalse(new File(homeDir,\"garbage\").exists())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "testCreateDist['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "Assert.assertEquals(distributionDir,localDistribution.getDistributionDir())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertFalse(Files.exists(homeDir.resolve(\"garbage\")))@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "testCreateDistWithExistingZipAndDistAndAlwaysDownloadTrue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "Assert.assertTrue(Files.exists(zipDestination))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "FileUtils.touch(garbage)@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "Files.createFile(garbage.toPath())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "Assert.assertEquals(zipDestination,localDistribution.getZipFile())@@@16@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Assert.assertEquals(mavenHomeDir,homeDir)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(localDistribution,pathAssembler.getDistribution(configuration))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Path homeDir = install.createDist(configuration)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "Assert.assertEquals(zipDestination,localDistribution.getZipFile())@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertEquals(localDistribution,pathAssembler.getDistribution(configuration))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(Files.isDirectory(mavenHomeDir))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "Assert.assertTrue(zipDestination.exists())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(mavenHomeDir,homeDir)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertTrue(new File(homeDir,\"bin/mvn\").exists())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(Files.exists(homeDir.resolve(\"bin/mvn\")))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "File homeDir = install.createDist(configuration)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Files.createDirectories(mavenHomeDir)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6->3 [style = bold, label=""];
18->23 [style = bold, label=""];
21->0 [style = bold, label=""];
16->8 [style = bold, label=""];
3->26 [style = dashed, label="0"];
24->27 [style = solid, label="homeDir"];
3->18 [style = dashed, label="0"];
25->9 [style = bold, label=""];
8->6 [style = bold, label=""];
7->0 [style = bold, label=""];
1->21 [style = dashed, label="0"];
9->10 [style = bold, label=""];
15->19 [style = bold, label=""];
1->7 [style = bold, label=""];
9->23 [style = dashed, label="0"];
11->2 [style = bold, label=""];
11->15 [style = bold, label=""];
2->12 [style = bold, label=""];
8->22 [style = bold, label=""];
19->16 [style = bold, label=""];
3->18 [style = bold, label=""];
2->15 [style = dashed, label="0"];
3->9 [style = bold, label=""];
22->3 [style = bold, label=""];
12->13 [style = bold, label=""];
8->22 [style = dashed, label="0"];
12->19 [style = dashed, label="0"];
0->4 [style = bold, label=""];
8->6 [style = solid, label="homeDir"];
28->8 [style = bold, label=""];
4->20 [style = bold, label=""];
10->17 [style = dashed, label="0"];
23->17 [style = bold, label=""];
5->11 [style = bold, label=""];
26->28 [style = bold, label=""];
13->8 [style = bold, label=""];
10->1 [style = bold, label=""];
29->24 [style = bold, label=""];
2->12 [style = solid, label="garbage"];
14->11 [style = bold, label=""];
17->21 [style = bold, label=""];
24->27 [style = bold, label=""];
22->3 [style = solid, label="homeDir"];
6->25 [style = bold, label=""];
27->26 [style = bold, label=""];
}
