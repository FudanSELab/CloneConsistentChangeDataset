digraph {
14 [style = filled, label = "assertFalse(d1.equals(d2))@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "dataset.addSeries(\"S1\",data1)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(d1.equals(d2))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "x1(0( = 111.1@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testIterateToFindDomainBounds_IntervalXYDataset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "Range r = DatasetUtils.iterateToFindDomainBounds(dataset,Arrays.asList(\"S1\"),true)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "double(((( data1 = new double((((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2395d4@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(d1 != d2)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "double(( x1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@239598@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "double(( x1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2395a2@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0.8,r.getLowerBound(),EPSILON)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "double(( x1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2395ac@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testCloning2['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "double(( y1 = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2395b6@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "d1.addSeries(\"S1\",data1)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "double(( y1End = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2395ca@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testCloning2['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "DefaultIntervalXYDataset<String> d2 = CloneUtils.clone(d1)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "DefaultIntervalXYDataset d2 = CloneUtils.clone(d1)@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "DefaultIntervalXYDataset dataset = new DefaultIntervalXYDataset()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertTrue(d1.getClass() == d2.getClass())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "double(( y1Start = new double((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@2395c0@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(3.2,r.getUpperBound(),EPSILON)@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "DefaultIntervalXYDataset d1 = new DefaultIntervalXYDataset()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "DefaultIntervalXYDataset<String> d1 = new DefaultIntervalXYDataset<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15->9 [style = solid, label="y1"];
1->9 [style = solid, label="y1Start"];
18->5 [style = solid, label="d2"];
0->13 [style = bold, label=""];
9->4 [style = bold, label=""];
2->3 [style = bold, label=""];
3->14 [style = bold, label=""];
0->9 [style = solid, label="x1"];
12->15 [style = bold, label=""];
9->4 [style = solid, label="data1"];
5->24 [style = dashed, label="0"];
4->18 [style = bold, label=""];
16->17 [style = bold, label=""];
10->22 [style = dashed, label="0"];
6->9 [style = solid, label="y1End"];
8->5 [style = solid, label="d2"];
18->14 [style = solid, label="d2"];
17->5 [style = solid, label="d1"];
20->22 [style = bold, label=""];
19->24 [style = bold, label=""];
9->23 [style = bold, label=""];
1->6 [style = bold, label=""];
13->12 [style = bold, label=""];
17->0 [style = bold, label=""];
22->0 [style = bold, label=""];
13->9 [style = solid, label="x1Start"];
8->5 [style = bold, label=""];
24->21 [style = bold, label=""];
11->10 [style = bold, label=""];
7->2 [style = bold, label=""];
10->8 [style = solid, label="d1"];
18->5 [style = bold, label=""];
23->19 [style = bold, label=""];
17->18 [style = solid, label="d1"];
10->0 [style = bold, label=""];
22->19 [style = solid, label="dataset"];
10->17 [style = dashed, label="0"];
12->9 [style = solid, label="x1End"];
4->8 [style = bold, label=""];
5->7 [style = bold, label=""];
8->18 [style = dashed, label="0"];
8->2 [style = solid, label="d2"];
6->9 [style = bold, label=""];
10->5 [style = solid, label="d1"];
4->23 [style = dashed, label="0"];
18->2 [style = solid, label="d2"];
9->23 [style = solid, label="data1"];
8->14 [style = solid, label="d2"];
15->1 [style = bold, label=""];
}
