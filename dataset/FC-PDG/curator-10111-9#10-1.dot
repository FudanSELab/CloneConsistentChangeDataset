digraph {
40 [style = filled, label = "testErrorPolicies['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
46 [style = filled, label = "latch.start()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "client.start()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"true\")@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "timing.sleepABit()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "next = Lists.newArrayList()@@@53@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "states.clear()@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "List<String> next = Lists.newArrayList()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "selector.close()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "latch.addListener(listener)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(1000).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionConnectionStateErrorPolicy()).build()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"true\")@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "{CloseableUtils.closeQuietly(latch)CloseableUtils.closeQuietly(client)}@@@56@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "latch.close()@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "next = Lists.newArrayList()@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "selector.start()@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "latch = new LeaderLatch(client,\"/test\")@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "server = new TestingServer()@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "LeaderLatch latch = null@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "latch = new LeaderLatch(client,\"/test\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "final BlockingQueue<String> states = Queues.newLinkedBlockingQueue()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testErrorPolicies['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "server.close()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardConnectionStateErrorPolicy()).build()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "server.stop()@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "changes.clear()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "next.add(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.LOST.name(),\"release\")) || next.equals(Arrays.asList(\"release\",ConnectionState.LOST.name())),next.toString())@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "client.start()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.SUSPENDED.name(),\"false\")) || next.equals(Arrays.asList(\"false\",ConnectionState.SUSPENDED.name())),next.toString())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "LeaderSelectorListener listener = new LeaderSelectorListenerAdapter(){@Override public void takeLeadership(CuratorFramework client){changes.add(\"leader\")try {Thread.currentThread().join()}catch (InterruptedException e) }}@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "next.add(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS))@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "client.getConnectionStateListenable().addListener(stateListener)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(1000).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new StandardConnectionStateErrorPolicy()).build()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),\"leader\")@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.SUSPENDED.name(),\"release\")) || next.equals(Arrays.asList(\"release\",ConnectionState.SUSPENDED.name())),next.toString())@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "LeaderSelector selector = null@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "client.close()@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "LeaderLatchListener listener = new LeaderLatchListener(){@Override public void isLeader(){states.add(\"true\")}@Override public void notLeader(){states.add(\"false\")}}@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "selector = new LeaderSelector(client,\"/test\",listener)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "{CloseableUtils.closeQuietly(selector)CloseableUtils.closeQuietly(client)}@@@58@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testErrorPolicies['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).connectionStateErrorPolicy(new SessionConnectionStateErrorPolicy()).build()@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "Assert.assertEquals(states.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "server.close()@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "next.add(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.CONNECTED.name())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "Assert.assertTrue(next.equals(Arrays.asList(ConnectionState.LOST.name(),\"false\")) || next.equals(Arrays.asList(\"false\",ConnectionState.LOST.name())),next.toString())@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "next.add(states.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "next.add(states.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forSessionSleep().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.LOST.name())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).errorPolicy(new SessionConnectionStateErrorPolicy()).build()@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Timing timing = new Timing()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertEquals(changes.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "CuratorFramework client = CuratorFrameworkFactory.builder().connectString(server.getConnectString()).connectionTimeoutMs(timing.connection()).sessionTimeoutMs(timing.session()).retryPolicy(new RetryOneTime(1)).connectionStateErrorPolicy(new StandardConnectionStateErrorPolicy()).build()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "Assert.assertEquals(states.poll(timing.forWaiting().milliseconds(),TimeUnit.MILLISECONDS),ConnectionState.SUSPENDED.name())@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "selector.start()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "latch.addListener(listener)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "latch.start()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ConnectionStateListener stateListener = new ConnectionStateListener(){@Override public void stateChanged(CuratorFramework client,ConnectionState newState){states.add(newState.name())}}@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final BlockingQueue<String> changes = Queues.newLinkedBlockingQueue()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20->45 [style = solid, label="latch"];
22->44 [style = dashed, label="0"];
14->65 [style = dashed, label="0"];
54->27 [style = bold, label=""];
65->47 [style = bold, label=""];
32->23 [style = bold, label=""];
28->20 [style = bold, label=""];
55->49 [style = bold, label=""];
56->3 [style = bold, label=""];
26->9 [style = bold, label=""];
14->17 [style = bold, label=""];
19->11 [style = bold, label=""];
28->39 [style = dashed, label="0"];
7->31 [style = bold, label=""];
5->28 [style = bold, label=""];
25->35 [style = bold, label=""];
52->45 [style = solid, label="client"];
11->60 [style = bold, label=""];
59->61 [style = bold, label=""];
12->58 [style = dashed, label="0"];
3->20 [style = solid, label="stateListener"];
8->1 [style = bold, label=""];
0->25 [style = bold, label=""];
6->50 [style = dashed, label="0"];
36->2 [style = bold, label=""];
66->63 [style = solid, label="listener"];
37->32 [style = bold, label=""];
49->56 [style = bold, label=""];
27->33 [style = bold, label=""];
25->55 [style = dashed, label="0"];
3->30 [style = bold, label=""];
11->48 [style = dashed, label="0"];
28->52 [style = dashed, label="0"];
66->63 [style = bold, label=""];
47->53 [style = bold, label=""];
1->4 [style = bold, label=""];
35->49 [style = dashed, label="0"];
5->39 [style = bold, label=""];
31->57 [style = dashed, label="0"];
40->0 [style = bold, label=""];
11->37 [style = bold, label=""];
30->34 [style = bold, label=""];
34->8 [style = bold, label=""];
8->2 [style = solid, label="listener"];
28->2 [style = solid, label="client"];
62->20 [style = bold, label=""];
5->62 [style = bold, label=""];
61->48 [style = bold, label=""];
36->46 [style = bold, label=""];
52->5 [style = bold, label=""];
12->29 [style = bold, label=""];
43->66 [style = bold, label=""];
31->27 [style = bold, label=""];
58->51 [style = bold, label=""];
66->36 [style = solid, label="listener"];
28->23 [style = solid, label="client"];
15->26 [style = dashed, label="0"];
46->68 [style = bold, label=""];
22->14 [style = bold, label=""];
6->7 [style = bold, label=""];
39->20 [style = bold, label=""];
37->11 [style = dashed, label="0"];
50->41 [style = bold, label=""];
52->20 [style = solid, label="client"];
24->3 [style = bold, label=""];
4->22 [style = bold, label=""];
13->0 [style = bold, label=""];
24->56 [style = dashed, label="0"];
25->38 [style = bold, label=""];
10->18 [style = bold, label=""];
3->30 [style = solid, label="stateListener"];
33->52 [style = bold, label=""];
21->27 [style = dashed, label="0"];
38->24 [style = bold, label=""];
8->1 [style = solid, label="listener"];
4->67 [style = dashed, label="0"];
2->10 [style = bold, label=""];
49->43 [style = solid, label="client"];
42->0 [style = bold, label=""];
35->24 [style = bold, label=""];
21->5 [style = bold, label=""];
35->1 [style = solid, label="client"];
29->19 [style = bold, label=""];
48->11 [style = bold, label=""];
63->67 [style = bold, label=""];
7->41 [style = dashed, label="0"];
2->23 [style = solid, label="selector"];
34->43 [style = bold, label=""];
39->2 [style = solid, label="client"];
20->36 [style = bold, label=""];
18->16 [style = bold, label=""];
17->26 [style = bold, label=""];
2->20 [style = dashed, label="0"];
57->64 [style = bold, label=""];
67->44 [style = bold, label=""];
15->6 [style = bold, label=""];
64->54 [style = bold, label=""];
41->57 [style = bold, label=""];
35->38 [style = dashed, label="0"];
39->23 [style = solid, label="client"];
51->59 [style = bold, label=""];
60->45 [style = bold, label=""];
32->60 [style = dashed, label="0"];
16->68 [style = dashed, label="0"];
26->50 [style = bold, label=""];
9->15 [style = bold, label=""];
0->55 [style = bold, label=""];
9->17 [style = dashed, label="0"];
53->17 [style = bold, label=""];
44->65 [style = bold, label=""];
3->5 [style = solid, label="stateListener"];
33->21 [style = bold, label=""];
16->12 [style = bold, label=""];
38->1 [style = solid, label="client"];
68->58 [style = bold, label=""];
}
