digraph {
16 [style = filled, label = "Capture<Callback<ConfigInfos>> validateCallback = newCapture()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "PowerMock.expectLastCall()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "herder.validateConnectorConfig(EasyMock.eq(CONN1_CONFIG),capture(validateCallback))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "member.wakeup()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "herder.tick()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PowerMock.expectLastCall()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "PowerMock.expectLastCall()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ConnectorInfo info = new ConnectorInfo(CONN2,CONN2_CONFIG,Collections.emptyList(),ConnectorType.SOURCE)@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "time.sleep(1000L)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "herder.tick()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testCreateConnector['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "member.ensureActive()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "member.wakeup()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "herder.tick()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "EasyMock.expect(member.currentProtocolVersion()).andStubReturn(CONNECT_PROTOCOL_V0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "PowerMock.expectLastCall()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "member.wakeup()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "EasyMock.expect(member.memberId()).andStubReturn(\"leader\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testCreateConnectorAlreadyExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "PowerMock.replayAll()@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "PowerMock.verifyAll()@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "PowerMock.expectLastCall()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "putConnectorCallback.onCompletion(EasyMock.anyObject(),EasyMock.isNull())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCreateConnector['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PowerMock.expectLastCall()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "herder.putConnectorConfig(CONN1,CONN1_CONFIG,false,putConnectorCallback)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "herder.validateConnectorConfig(EasyMock.eq(CONN2_CONFIG),capture(validateCallback))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "configBackingStore.putConnectorConfig(CONN2,CONN2_CONFIG)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "member.poll(EasyMock.anyInt())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PowerMock.expectLastCall()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PowerMock.expectLastCall()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PowerMock.expectLastCall().andAnswer(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "ConnectorInfo info = new ConnectorInfo(CONN2,CONN2_CONFIG,Collections.emptyList(),ConnectorType.SOURCE)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "member.poll(EasyMock.anyInt())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "PowerMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "member.poll(EasyMock.anyInt())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40->4 [style = bold, label=""];
36->6 [style = bold, label=""];
17->10 [style = bold, label=""];
2->23 [style = dashed, label="0"];
27->18 [style = bold, label=""];
16->36 [style = bold, label=""];
6->26 [style = bold, label=""];
9->39 [style = bold, label=""];
26->7 [style = bold, label=""];
6->34 [style = bold, label=""];
5->9 [style = bold, label=""];
37->11 [style = bold, label=""];
0->27 [style = solid, label="info"];
15->21 [style = bold, label=""];
0->27 [style = bold, label=""];
31->27 [style = solid, label="info"];
41->3 [style = bold, label=""];
12->17 [style = bold, label=""];
1->3 [style = bold, label=""];
15->30 [style = dashed, label="0"];
7->0 [style = bold, label=""];
4->29 [style = bold, label=""];
16->36 [style = solid, label="validateCallback"];
7->31 [style = bold, label=""];
14->36 [style = dashed, label="0"];
13->11 [style = bold, label=""];
33->27 [style = bold, label=""];
27->35 [style = bold, label=""];
21->28 [style = bold, label=""];
19->16 [style = bold, label=""];
22->4 [style = bold, label=""];
2->23 [style = bold, label=""];
35->40 [style = bold, label=""];
11->5 [style = bold, label=""];
30->21 [style = bold, label=""];
3->20 [style = bold, label=""];
18->22 [style = bold, label=""];
23->37 [style = bold, label=""];
20->16 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
31->27 [style = bold, label=""];
25->12 [style = bold, label=""];
23->13 [style = bold, label=""];
16->14 [style = solid, label="validateCallback"];
24->25 [style = bold, label=""];
0->31 [style = dashed, label="0"];
28->19 [style = bold, label=""];
16->14 [style = bold, label=""];
34->38 [style = bold, label=""];
20->30 [style = bold, label=""];
29->24 [style = bold, label=""];
32->3 [style = bold, label=""];
20->15 [style = bold, label=""];
38->33 [style = bold, label=""];
14->6 [style = bold, label=""];
}
