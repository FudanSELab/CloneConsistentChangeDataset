digraph {
8 [style = filled, label = "firstPage['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "result == Integer.MAX_VALUE@@@10@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "int result = Integer.MAX_VALUE@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "return String.valueOf(result)@@@14@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final String(( splitPages = pages.split(\"\D+\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "return \"\"@@@11@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "lastPage['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String pages@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "int result = Integer.MIN_VALUE@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "n.matches(\"\d+\")@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "firstPage['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "result == Integer.MIN_VALUE@@@10@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "return NOT_DECIMAL_DIGIT.splitAsStream(pages).filter(Predicate.not(null)).map(null).min(null).map(null).orElse(\"\")@@@3@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "String pages@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "result = Math.min(Integer.parseInt(n),result)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "result = Math.max(Integer.parseInt(n),result)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->13 [style = dashed, label="0"];
5->3 [style = bold, label=""];
15->13 [style = solid, label="result"];
15->13 [style = bold, label=""];
1->14 [style = dashed, label="0"];
14->15 [style = solid, label="result"];
2->1 [style = bold, label=""];
1->5 [style = solid, label="result"];
1->3 [style = solid, label="result"];
15->6 [style = bold, label=""];
7->5 [style = solid, label="result"];
0->11 [style = dashed, label="0"];
7->3 [style = solid, label="result"];
6->15 [style = bold, label=""];
5->4 [style = dotted, label="true"];
1->7 [style = solid, label="result"];
12->11 [style = dotted, label="true"];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
7->5 [style = bold, label=""];
1->6 [style = bold, label=""];
14->3 [style = solid, label="result"];
13->3 [style = bold, label=""];
8->2 [style = bold, label=""];
15->3 [style = solid, label="result"];
6->13 [style = bold, label=""];
2->14 [style = bold, label=""];
5->4 [style = bold, label=""];
7->6 [style = bold, label=""];
5->3 [style = dotted, label="false"];
6->7 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
10->0 [style = dotted, label="true"];
13->3 [style = dotted, label="false"];
8->0 [style = dotted, label="true"];
10->9 [style = bold, label=""];
6->15 [style = dotted, label="true"];
14->13 [style = solid, label="result"];
6->7 [style = bold, label=""];
14->6 [style = bold, label=""];
13->4 [style = dotted, label="true"];
13->4 [style = bold, label=""];
}
