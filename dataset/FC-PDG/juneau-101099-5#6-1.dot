digraph {
26 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "c.get().header(forwarded(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "c.get().header(acceptLanguage((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "c.get().header(forwarded(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "c.get().header(forwarded((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "c.get().header(acceptLanguage((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "c.get().header(forwarded(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "c.get().header(forwarded(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "c.get().header(acceptLanguage(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "c.get().header(forwarded(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "c.get().header(forwarded((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "c.get().header(acceptLanguage(VALUE)).run().assertBody().is(VALUE)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "c.get().header(acceptLanguage((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "c.get().header(new AcceptLanguage(VALUE)).run().assertBody().is(VALUE)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "c.get().header(acceptLanguage(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "c.get().header(forwarded(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "c.get().header(acceptLanguage(VALUE)).run().assertBody().is(VALUE)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c.get().header(new Forwarded(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "c.get().header(forwarded(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "c.get().header(acceptLanguage(null)).run().assertBody().is(VALUE)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "c.get().header(forwarded((String)null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "c.get().header(forwarded((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "c.get().header(forwarded(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "c.get().header(forwarded((Supplier<String>)null)).run().assertBody().isEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18->24 [style = bold, label=""];
2->20 [style = dashed, label="0"];
4->16 [style = dashed, label="0"];
9->0 [style = bold, label=""];
3->21 [style = dashed, label="0"];
2->1 [style = bold, label=""];
7->14 [style = dashed, label="0"];
6->11 [style = dashed, label="0"];
12->15 [style = bold, label=""];
5->24 [style = dashed, label="0"];
1->3 [style = bold, label=""];
9->22 [style = dashed, label="0"];
11->12 [style = bold, label=""];
26->8 [style = bold, label=""];
6->17 [style = dashed, label="0"];
19->17 [style = bold, label=""];
3->16 [style = bold, label=""];
20->25 [style = bold, label=""];
3->4 [style = bold, label=""];
4->7 [style = bold, label=""];
8->22 [style = bold, label=""];
24->20 [style = bold, label=""];
8->1 [style = bold, label=""];
5->2 [style = bold, label=""];
22->18 [style = bold, label=""];
10->8 [style = bold, label=""];
7->19 [style = dashed, label="0"];
23->19 [style = bold, label=""];
7->6 [style = bold, label=""];
8->9 [style = bold, label=""];
0->18 [style = dashed, label="0"];
16->14 [style = bold, label=""];
13->8 [style = bold, label=""];
1->25 [style = dashed, label="0"];
4->23 [style = dashed, label="0"];
14->11 [style = bold, label=""];
25->21 [style = bold, label=""];
0->5 [style = bold, label=""];
21->23 [style = bold, label=""];
}
