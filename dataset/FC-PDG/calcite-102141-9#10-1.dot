digraph {
2 [style = filled, label = "rowCount += rightRowCount@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RelMetadataQuery mq@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "joinType@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Double.isInfinite(leftRowCount)@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return planner.getCostFactory().makeCost(rowCount,0,0)@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "rowCount += Util.nLogN(leftRowCount)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "rowCount = leftRowCount@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return cost@@@22@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "rowCount = RelMdUtil.addEpsilon(rowCount)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final double rightRowCount = right.estimateRowCount(mq)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "computeSelfCost['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "RelOptPlanner planner@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "RelMetadataQuery mq@@@2@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "double rowCount = mq.getRowCount(this)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "computeSelfCost['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "isSemiJoin()@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "computeSelfCost['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "RelNodes.COMPARATOR.compare(left,right) > 0@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "RelOptPlanner planner@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Double.isInfinite(rightRowCount)@@@17@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "rowCount = RelMdUtil.addEpsilon(rowCount)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "rowCount = rightRowCount@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "RelMetadataQuery mq@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "return planner.getCostFactory().makeCost(rowCount,0,0).multiplyBy(.01d)@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "RelOptCost cost = planner.getCostFactory().makeCost(rowCount,0,0)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final double leftRowCount = left.estimateRowCount(mq)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cost = cost.multiplyBy(10)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4->9 [style = bold, label=""];
24->12 [style = bold, label=""];
22->23 [style = solid, label="cost"];
7->9 [style = solid, label="mq"];
5->1 [style = solid, label="leftRowCount"];
15->13 [style = bold, label=""];
13->18 [style = dotted, label="true"];
0->26 [style = bold, label=""];
17->26 [style = solid, label="rowCount"];
9->0 [style = solid, label="rightRowCount"];
1->17 [style = dotted, label="true"];
11->14 [style = bold, label=""];
24->25 [style = dotted, label="true"];
19->5 [style = solid, label="mq"];
0->15 [style = dotted, label="true"];
4->26 [style = solid, label="rowCount"];
0->2 [style = bold, label=""];
12->11 [style = bold, label=""];
11->14 [style = dotted, label="true"];
0->2 [style = dotted, label="false"];
5->10 [style = solid, label="leftRowCount"];
1->0 [style = bold, label=""];
20->21 [style = dotted, label="true"];
16->5 [style = solid, label="mq"];
15->26 [style = solid, label="rowCount"];
11->9 [style = bold, label=""];
22->23 [style = bold, label=""];
24->16 [style = dotted, label="true"];
16->21 [style = dashed, label="0"];
0->15 [style = bold, label=""];
26->22 [style = bold, label=""];
1->17 [style = bold, label=""];
15->26 [style = bold, label=""];
2->13 [style = bold, label=""];
5->1 [style = bold, label=""];
1->10 [style = dotted, label="false"];
19->9 [style = solid, label="mq"];
17->0 [style = bold, label=""];
12->4 [style = solid, label="rowCount"];
16->9 [style = solid, label="mq"];
12->26 [style = solid, label="rowCount"];
2->3 [style = solid, label="rowCount"];
13->3 [style = bold, label=""];
5->17 [style = solid, label="leftRowCount"];
10->0 [style = bold, label=""];
20->12 [style = bold, label=""];
8->9 [style = bold, label=""];
6->7 [style = dotted, label="true"];
9->5 [style = bold, label=""];
8->26 [style = solid, label="rowCount"];
11->8 [style = bold, label=""];
14->9 [style = bold, label=""];
11->8 [style = dotted, label="true"];
13->3 [style = dotted, label="false"];
20->19 [style = dotted, label="true"];
9->2 [style = solid, label="rightRowCount"];
9->15 [style = solid, label="rightRowCount"];
7->5 [style = solid, label="mq"];
1->10 [style = bold, label=""];
14->4 [style = dotted, label="true"];
15->3 [style = solid, label="rowCount"];
6->12 [style = bold, label=""];
6->16 [style = dotted, label="true"];
13->18 [style = bold, label=""];
14->4 [style = bold, label=""];
12->8 [style = solid, label="rowCount"];
}
