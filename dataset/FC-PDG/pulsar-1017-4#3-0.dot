digraph {
10 [style = filled, label = "NamespaceIsolationPolicy nsPolicy = policies.getPolicyByName(\"non-existing-policy\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(nsPolicy == null)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNotNull(nsPolicy)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testGetNamespaceIsolationPolicyByName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testGetNamespaceIsolationPolicyByNamespace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testGetNamespaceIsolationPolicyByNamespace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"no/such/namespace\"))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "NamespaceIsolationPolicy nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"no/such/namespace\"))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "nsPolicy = policies.getPolicyByNamespace(NamespaceName.get(\"pulsar/use/testns-1\"))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "nsPolicy = policies.getPolicyByName(\"policy1\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "NamespaceIsolationPolicies policies = this.getDefaultTestPolicies()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "nsPolicy = policies.getPolicyByNamespace(new NamespaceName(\"pulsar/use/testns-1\"))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "assertEquals(new NamespaceIsolationPolicyImpl(policies.getPolicies().get(\"policy1\")),nsPolicy)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
4->10 [style = bold, label=""];
7->2 [style = solid, label="nsPolicy"];
1->6 [style = solid, label="nsPolicy"];
0->2 [style = solid, label="nsPolicy"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
1->9 [style = dashed, label="0"];
0->11 [style = dashed, label="0"];
6->0 [style = bold, label=""];
1->10 [style = dashed, label="0"];
10->6 [style = solid, label="nsPolicy"];
10->6 [style = bold, label=""];
11->2 [style = solid, label="nsPolicy"];
11->2 [style = bold, label=""];
0->3 [style = solid, label="nsPolicy"];
7->3 [style = solid, label="nsPolicy"];
9->6 [style = bold, label=""];
1->6 [style = bold, label=""];
12->4 [style = bold, label=""];
7->2 [style = bold, label=""];
6->11 [style = bold, label=""];
5->4 [style = bold, label=""];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
9->6 [style = solid, label="nsPolicy"];
11->3 [style = solid, label="nsPolicy"];
0->7 [style = dashed, label="0"];
}
