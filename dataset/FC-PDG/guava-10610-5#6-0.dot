digraph {
8 [style = filled, label = "expectedTranspose.putEdgeValue(N4,N3,E34)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "return directedGraph@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ValueGraph<Integer,String> transpose = Graphs.transpose(directedGraph)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "directedGraph.putEdgeValue(N1,N3,E13)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "AbstractGraphTest.validateGraph(transpose)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EndpointPair<Integer> pair12 = EndpointPair.ordered(N1,N2)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expectedTranspose.putEdgeValue(N2,N1,E12)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isEqualTo(E21)@@@21@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "expectedTranspose.putEdgeValue(N3,N1,E13)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertThat(transpose.edgeValues().get(pair12)).isEqualTo(E21)@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "directedGraph.putEdgeValue(N1,N2,E12)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "transpose_directedValueGraph['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "AbstractGraphTest.validateGraph(transpose)@@@22@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertThat(transpose.edgeValues().get(pair12)).isNull()@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "directedGraph.putEdgeValue(N3,N4,E34)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N1,E11)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(transpose.edgeValueOrDefault(N1,N2,null)).isNull()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "transpose_directedValueGraph['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "directedGraph.putEdgeValue(N1,N2,E12)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "expectedTranspose.putEdgeValue(N1,N3,E31)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "directedGraph.putEdgeValue(N1,N1,E11)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertThat(Graphs.equivalent(transpose,expectedTranspose)).isTrue()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "directedGraph.putEdgeValue(N3,N1,E31)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(transpose(transpose)).isSameAs(directedGraph)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "buildDirectedValueGraph['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "AbstractGraphTest.validateGraph(transpose)@@@21@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "MutableValueGraph<Integer,String> expectedTranspose = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "directedGraph.putEdgeValue(N2,N1,E21)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "MutableValueGraph<Integer,String> directedGraph = ValueGraphBuilder.directed().allowsSelfLoops(true).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->13 [style = solid, label="transpose"];
18->9 [style = solid, label="directedGraph"];
4->14 [style = bold, label=""];
19->18 [style = bold, label=""];
10->28 [style = bold, label=""];
16->10 [style = bold, label=""];
3->25 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
5->15 [style = bold, label=""];
9->17 [style = bold, label=""];
7->4 [style = bold, label=""];
20->1 [style = bold, label=""];
12->24 [style = bold, label=""];
12->6 [style = bold, label=""];
14->4 [style = dashed, label="0"];
9->12 [style = solid, label="transpose"];
29->18 [style = bold, label=""];
18->20 [style = bold, label=""];
3->5 [style = bold, label=""];
17->0 [style = bold, label=""];
15->11 [style = bold, label=""];
18->10 [style = bold, label=""];
18->1 [style = bold, label=""];
24->21 [style = bold, label=""];
18->26 [style = solid, label="directedGraph"];
1->16 [style = bold, label=""];
2->28 [style = dashed, label="0"];
8->9 [style = bold, label=""];
11->8 [style = bold, label=""];
25->5 [style = bold, label=""];
10->2 [style = bold, label=""];
18->0 [style = solid, label="directedGraph"];
28->27 [style = bold, label=""];
14->13 [style = bold, label=""];
6->7 [style = bold, label=""];
9->22 [style = solid, label="transpose"];
4->22 [style = bold, label=""];
23->18 [style = bold, label=""];
21->4 [style = bold, label=""];
27->26 [style = bold, label=""];
}
