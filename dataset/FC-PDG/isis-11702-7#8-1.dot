digraph {
6 [style = filled, label = "assertNotNull(facet)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertTrue(facet instanceof PluralFacetForDomainObjectLayoutAnnotation)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "facetFactory.process(new FacetFactory.ProcessClassContext(cls,mockMethodRemover,facetHolder))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final NamedFacetForDomainObjectLayoutAnnotation facetImpl = (NamedFacetForDomainObjectLayoutAnnotation)facet@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "whenSpecified['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final Class<?> cls = @@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "whenSpecified['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final PluralFacetForDomainObjectLayoutAnnotation facetImpl = (PluralFacetForDomainObjectLayoutAnnotation)facet@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(facet instanceof NamedFacetForDomainObjectLayoutAnnotation)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "Assert.assertThat(facetImpl.text(),is(\"Customers Plural Form\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "final Facet facet = facetHolder.getFacet()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "whenSpecified['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertNotNull(namedFacet)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(namedFacet instanceof NamedFacetForDomainObjectLayoutAnnotation)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "expectNoMethodsRemoved()@@@9@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "final Facet facet = facetHolder.getFacet()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"Name override\",namedFacet.text(NounForm.SINGULAR))@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assert.assertThat(facetImpl.text(),is(\"Name override\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "final NamedFacet namedFacet = facetHolder.getFacet()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "expectNoMethodsRemoved()@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5->8 [style = bold, label=""];
1->4 [style = bold, label=""];
9->11 [style = bold, label=""];
16->8 [style = bold, label=""];
15->6 [style = solid, label="facet"];
4->6 [style = bold, label=""];
7->17 [style = dashed, label="0"];
6->18 [style = bold, label=""];
1->15 [style = bold, label=""];
10->13 [style = solid, label="namedFacet"];
10->12 [style = solid, label="namedFacet"];
18->17 [style = bold, label=""];
15->6 [style = bold, label=""];
6->0 [style = bold, label=""];
19->2 [style = bold, label=""];
17->19 [style = bold, label=""];
7->3 [style = bold, label=""];
0->7 [style = bold, label=""];
6->12 [style = dashed, label="0"];
3->19 [style = dashed, label="0"];
4->6 [style = solid, label="facet"];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
3->2 [style = bold, label=""];
10->12 [style = bold, label=""];
4->7 [style = solid, label="facet"];
4->15 [style = dashed, label="0"];
4->0 [style = solid, label="facet"];
0->13 [style = dashed, label="0"];
8->1 [style = solid, label="cls"];
0->18 [style = dashed, label="0"];
15->17 [style = solid, label="facet"];
14->8 [style = bold, label=""];
13->9 [style = bold, label=""];
4->10 [style = dashed, label="0"];
1->10 [style = bold, label=""];
15->18 [style = solid, label="facet"];
}
