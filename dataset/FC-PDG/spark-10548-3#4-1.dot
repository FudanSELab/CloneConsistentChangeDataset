digraph {
10 [style = filled, label = "readWithNewAPIHadoopFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "String outputDir = new File(tempDir,\"output\").getAbsolutePath()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "hadoopFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(pairs.toString(),output.map(new Function<Tuple2<IntWritable,Text>,String>(){@Override public String call(Tuple2<IntWritable,Text> x){return x.toString()}}).collect().toString())@@@13@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<Tuple2<Integer,String>> pairs = Arrays.asList(new Tuple2<>(1,\"a\"),new Tuple2<>(2,\"aa\"),new Tuple2<>(3,\"aaa\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JavaPairRDD<IntWritable,Text> output = sc.newAPIHadoopFile(outputDir,,,,Job.getInstance().getConfiguration())@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "JavaPairRDD<IntWritable,Text> output = sc.newAPIHadoopFile(outputDir,,,,Job.getInstance().getConfiguration())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "JavaPairRDD<IntWritable,Text> output = sc.hadoopFile(outputDir,,,)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "rdd.mapToPair(null).saveAsHadoopFile(outputDir,,,)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "rdd.mapToPair(new PairFunction<Tuple2<Integer,String>,IntWritable,Text>(){@Override public Tuple2<IntWritable,Text> call(Tuple2<Integer,String> pair){return new Tuple2<>(new IntWritable(pair._1()),new Text(pair._2()))}}).saveAsHadoopFile(outputDir,,,)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(pairs.toString(),output.map(null).collect().toString())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "readWithNewAPIHadoopFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "JavaPairRDD<Integer,String> rdd = sc.parallelizePairs(pairs)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->5 [style = solid, label="pairs"];
4->3 [style = bold, label=""];
5->8 [style = bold, label=""];
6->7 [style = dashed, label="0"];
2->11 [style = solid, label="outputDir"];
11->6 [style = bold, label=""];
3->6 [style = bold, label=""];
9->7 [style = bold, label=""];
2->9 [style = solid, label="outputDir"];
12->2 [style = bold, label=""];
2->0 [style = bold, label=""];
2->8 [style = solid, label="outputDir"];
5->4 [style = bold, label=""];
8->9 [style = bold, label=""];
2->4 [style = solid, label="outputDir"];
2->3 [style = solid, label="outputDir"];
10->2 [style = bold, label=""];
1->2 [style = bold, label=""];
4->11 [style = bold, label=""];
3->11 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
