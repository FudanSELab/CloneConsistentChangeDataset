digraph {
13 [style = filled, label = "partitionsPerTopic.put(topic,2)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "subscriptions.put(consumer2,new Subscription(topics(topic)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "String consumer1 = \"consumer1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Map<String,List<TopicPartition>> assignment = assignor.assign(partitionsPerTopic,subscriptions)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "partitionsPerTopic.put(topic,1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testTwoConsumersOneTopicOnePartition['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "verifyValidityAndBalance(subscriptions,assignment,partitionsPerTopic)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(partitions(tp(topic,0)),assignment.get(consumer1))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(isFullyBalanced(assignment))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testTwoConsumersOneTopicTwoPartitions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(partitions(tp(topic,1)),assignment.get(consumer2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "String consumer2 = \"consumer2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "subscriptions.put(consumer1,new Subscription(topics(topic)))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testTwoConsumersOneTopicOnePartition['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map<String,Integer> partitionsPerTopic = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(Collections.emptyList(),assignment.get(consumer2))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4->10 [style = bold, label=""];
6->3 [style = bold, label=""];
13->10 [style = bold, label=""];
3->14 [style = solid, label="consumer2"];
7->11 [style = bold, label=""];
11->1 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
11->8 [style = solid, label="assignment"];
15->6 [style = bold, label=""];
1->0 [style = bold, label=""];
3->0 [style = solid, label="consumer2"];
12->6 [style = bold, label=""];
10->7 [style = bold, label=""];
11->2 [style = bold, label=""];
3->9 [style = bold, label=""];
0->14 [style = dashed, label="0"];
9->2 [style = solid, label="partitionsPerTopic"];
5->6 [style = bold, label=""];
6->10 [style = solid, label="consumer1"];
3->7 [style = solid, label="consumer2"];
11->2 [style = solid, label="assignment"];
9->11 [style = solid, label="partitionsPerTopic"];
1->14 [style = bold, label=""];
14->2 [style = bold, label=""];
4->13 [style = dashed, label="0"];
6->1 [style = solid, label="consumer1"];
2->8 [style = bold, label=""];
9->13 [style = bold, label=""];
}
