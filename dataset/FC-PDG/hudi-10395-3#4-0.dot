digraph {
4 [style = filled, label = "((MergeOnReadInputFormat)inputFormat).isEmitDelete(true)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "List<RowData> result1 = readData(inputFormat)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "TestData.writeData(TestData.DATA_SET_DISORDER_UPDATE_DELETE,conf)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED,true)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TestData.writeData(TestData.DATA_SET_SINGLE_INSERT,conf)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "TestData.writeData(TestData.DATA_SET_INSERT,conf)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(inputFormat,instanceOf())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "conf.setInteger(FlinkOptions.COMPACTION_DELTA_COMMITS,1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "InputFormat<RowData,?> inputFormat = this.tableSource.getInputFormat()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inputFormat = this.tableSource.getInputFormat()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final String expected2 = \"(\" + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \" + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \" + \"-D(id3,Julian,53,1970-01-01T00:00:00.003,par2), \" + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \" + \"-D(id5,Sophia,18,1970-01-01T00:00:00.005,par3), \" + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \" + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \" + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4), \" + \"-D(id9,Jane,19,1970-01-01T00:00:00.006,par3)(\"@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final String actual1 = TestData.rowDataToString(result1)@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "options.put(FlinkOptions.CHANGELOG_ENABLED.key(),\"true\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.tableSource.reset()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testReadBaseAndLogFilesWithDeletes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Map<String,String> options = new HashMap<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final String expected2 = \"(\" + \"+I(id1, Danny, 24, 1970-01-01T00:00:00.001, par1(, \" + \"+I(id2, Stephen, 34, 1970-01-01T00:00:00.002, par1(, \" + \"-D(id3, Julian, 53, 1970-01-01T00:00:00.003, par2(, \" + \"+I(id4, Fabian, 31, 1970-01-01T00:00:00.004, par2(, \" + \"-D(id5, Sophia, 18, 1970-01-01T00:00:00.005, par3(, \" + \"+I(id6, Emma, 20, 1970-01-01T00:00:00.006, par3(, \" + \"+I(id7, Bob, 44, 1970-01-01T00:00:00.007, par4(, \" + \"+I(id8, Han, 56, 1970-01-01T00:00:00.008, par4(, \" + \"-D(id9, Jane, 19, 1970-01-01T00:00:00.006, par3((\"@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final String actual2 = TestData.rowDataToString(result2)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "conf.setBoolean(FlinkOptions.COMPACTION_ASYNC_ENABLED,false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<RowData> result2 = readData(inputFormat)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final String expected1 = \"(\" + \"+I(id1, Danny, 24, 1970-01-01T00:00:00.001, par1(, \" + \"+I(id2, Stephen, 34, 1970-01-01T00:00:00.002, par1(, \" + \"+I(id4, Fabian, 31, 1970-01-01T00:00:00.004, par2(, \" + \"+I(id6, Emma, 20, 1970-01-01T00:00:00.006, par3(, \" + \"+I(id7, Bob, 44, 1970-01-01T00:00:00.007, par4(, \" + \"+I(id8, Han, 56, 1970-01-01T00:00:00.008, par4((\"@@@15@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "testReadBaseAndLogFilesWithDeletes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "final String expected1 = \"(+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)(\"@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(actual2,is(expected2))@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final String expected2 = \"(+U(id1,Danny,22,1970-01-01T00:00:00.004,par1)(\"@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final String actual2 = TestData.rowDataToString(result2,true)@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final String actual1 = TestData.rowDataToString(result1,true)@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testReadBaseAndLogFilesWithDisorderUpdateDelete['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "TestData.writeData(TestData.DATA_SET_UPDATE_DELETE,conf)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(actual1,is(expected1))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final String expected1 = \"(\" + \"+I(id1,Danny,24,1970-01-01T00:00:00.001,par1), \" + \"+I(id2,Stephen,34,1970-01-01T00:00:00.002,par1), \" + \"+I(id4,Fabian,31,1970-01-01T00:00:00.004,par2), \" + \"+I(id6,Emma,20,1970-01-01T00:00:00.006,par3), \" + \"+I(id7,Bob,44,1970-01-01T00:00:00.007,par4), \" + \"+I(id8,Han,56,1970-01-01T00:00:00.008,par4)(\"@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "beforeEach(HoodieTableType.MERGE_ON_READ,options)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->13 [style = bold, label=""];
21->3 [style = bold, label=""];
11->4 [style = bold, label=""];
26->18 [style = bold, label=""];
18->2 [style = solid, label="options"];
16->25 [style = dashed, label="0"];
5->14 [style = solid, label="inputFormat"];
14->16 [style = bold, label=""];
20->6 [style = bold, label=""];
12->22 [style = solid, label="result2"];
24->20 [style = bold, label=""];
11->12 [style = solid, label="inputFormat"];
7->18 [style = bold, label=""];
25->24 [style = bold, label=""];
6->11 [style = bold, label=""];
9->13 [style = solid, label="actual2"];
23->13 [style = solid, label="expected2"];
16->8 [style = bold, label=""];
9->15 [style = bold, label=""];
0->19 [style = bold, label=""];
5->10 [style = solid, label="inputFormat"];
24->20 [style = solid, label="expected1"];
5->10 [style = bold, label=""];
3->27 [style = bold, label=""];
15->13 [style = solid, label="expected2"];
22->13 [style = solid, label="actual2"];
12->22 [style = bold, label=""];
14->16 [style = solid, label="result1"];
12->9 [style = bold, label=""];
19->21 [style = bold, label=""];
3->17 [style = bold, label=""];
23->13 [style = bold, label=""];
30->20 [style = bold, label=""];
28->13 [style = solid, label="expected2"];
8->20 [style = solid, label="expected1"];
14->25 [style = solid, label="result1"];
30->20 [style = solid, label="expected1"];
27->5 [style = bold, label=""];
15->13 [style = bold, label=""];
4->12 [style = bold, label=""];
31->3 [style = bold, label=""];
14->25 [style = bold, label=""];
18->1 [style = bold, label=""];
2->0 [style = bold, label=""];
9->28 [style = bold, label=""];
16->30 [style = bold, label=""];
22->23 [style = bold, label=""];
19->31 [style = bold, label=""];
25->20 [style = solid, label="actual1"];
29->18 [style = bold, label=""];
1->2 [style = bold, label=""];
17->5 [style = bold, label=""];
10->14 [style = bold, label=""];
8->20 [style = bold, label=""];
16->20 [style = solid, label="actual1"];
9->22 [style = dashed, label="0"];
12->9 [style = solid, label="result2"];
21->31 [style = dashed, label="0"];
17->27 [style = dashed, label="0"];
}
