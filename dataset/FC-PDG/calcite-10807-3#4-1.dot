digraph {
16 [style = filled, label = "tester.checkScalar(\"extract(hour from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "tester.checkScalar(\"cbrt(-8)\",\"-2.0\",\"DOUBLE NOT NULL\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "tester.checkNull(\"cbrt(cast(null as integer))\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "tester.setFor(SqlStdOperatorTable.EXTRACT,VM_FENNEL,VM_JAVA)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.checkScalar(\"cbrt(8)\",\"2.0\",\"DOUBLE NOT NULL\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "tester.checkFails(\"^extract(dow from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "tester.setFor(SqlStdOperatorTable.CBRT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "tester.checkFails(\"^extract(isodow from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testCbrtFunc['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "TODO@@@4@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "tester.checkScalar(\"extract(century from interval '426-3' year(3) to month)\",\"4\",\"BIGINT NOT NULL\")@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "tester.checkScalar(\"extract(millennium from interval '2005-3' year(4) to month)\",\"2\",\"BIGINT NOT NULL\")@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "tester.checkScalar(\"extract(day from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "tester.checkScalar(\"extract(microsecond from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "tester.checkScalar(\"extract(epoch from interval '4-2' year to month)\",\"131328000\",\"BIGINT NOT NULL\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "tester.checkType(\"cbrt(case when false then 1 else null end)\",\"DOUBLE\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "tester.checkScalar(\"extract(month from interval '4-2' year to month)\",\"2\",\"BIGINT NOT NULL\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "tester.checkType(\"cbrt('abc')\",\"DOUBLE NOT NULL\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "tester.checkType(\"cbrt(1)\",\"DOUBLE NOT NULL\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "tester.checkScalar(\"extract(year from interval '4-2' year to month)\",\"4\",\"BIGINT NOT NULL\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "tester.checkScalar(\"extract(second from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "tester.checkScalar(\"extract(quarter from interval '4-2' year to month)\",\"1\",\"BIGINT NOT NULL\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "tester.checkScalar(\"cbrt(cast(1 as decimal(1, 0)))\",\"1.0\",\"DOUBLE NOT NULL\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "tester.checkFails(\"^extract(doy from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "tester.checkType(\"cbrt(cast(1 as float))\",\"DOUBLE NOT NULL\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "tester.checkScalar(\"extract(nanosecond from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "tester.checkNull(\"cbrt(cast(null as double))\")@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "tester.checkFails(\"^extract(week from interval '4-2' year to month)^\",INVALID_EXTRACT_UNIT_VALIDATION_ERROR,false)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "testExtractIntervalYearMonth['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testCbrtFunc['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "tester.checkScalar(\"extract(minute from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "tester.checkScalar(\"extract(decade from interval '426-3' year(3) to month)\",\"42\",\"BIGINT NOT NULL\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "tester.checkScalar(\"extract(millisecond from interval '4-2' year to month)\",\"0\",\"BIGINT NOT NULL\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "strictTester.checkFails(\"^cbrt('abc')^\",\"Cannot apply 'CBRT' to arguments of type 'CBRT\(<CHAR\(3\)>\)'\. Supported form\(s\): 'CBRT\(<NUMERIC>\)'\",false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->18 [style = bold, label=""];
25->28 [style = bold, label=""];
32->21 [style = bold, label=""];
14->25 [style = bold, label=""];
22->15 [style = bold, label=""];
13->24 [style = bold, label=""];
24->32 [style = dotted, label="true"];
30->33 [style = bold, label=""];
24->14 [style = dotted, label="true"];
3->28 [style = dashed, label="0"];
24->25 [style = dotted, label="true"];
19->31 [style = bold, label=""];
2->3 [style = bold, label=""];
11->4 [style = bold, label=""];
24->32 [style = bold, label=""];
0->16 [style = dashed, label="0"];
16->26 [style = bold, label=""];
18->19 [style = bold, label=""];
20->14 [style = bold, label=""];
4->2 [style = bold, label=""];
9->8 [style = bold, label=""];
24->28 [style = dotted, label="true"];
28->16 [style = bold, label=""];
1->7 [style = bold, label=""];
24->16 [style = dotted, label="true"];
3->0 [style = bold, label=""];
24->30 [style = bold, label=""];
26->30 [style = bold, label=""];
33->23 [style = bold, label=""];
8->13 [style = dashed, label="0"];
8->1 [style = bold, label=""];
0->10 [style = bold, label=""];
10->26 [style = dashed, label="0"];
23->22 [style = bold, label=""];
21->20 [style = bold, label=""];
10->5 [style = bold, label=""];
24->26 [style = dotted, label="true"];
12->8 [style = bold, label=""];
6->11 [style = bold, label=""];
24->20 [style = dotted, label="true"];
7->6 [style = bold, label=""];
2->25 [style = dashed, label="0"];
7->32 [style = dashed, label="0"];
4->14 [style = dashed, label="0"];
31->17 [style = bold, label=""];
15->27 [style = bold, label=""];
24->21 [style = dotted, label="true"];
29->13 [style = bold, label=""];
}
