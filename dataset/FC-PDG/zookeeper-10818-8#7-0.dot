digraph {
32 [style = filled, label = "ZooKeeper(( clients = new ZooKeeper((((@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assert.assertNotNull(takeResult(0()@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "int m@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "int n@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "queueHandles(1(.remove()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final String testString = \"Hello World\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "final int numClients = 2@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "testTakeWait1['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new String(takeResult(0(),testString)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "i < m@@@20@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(new String(queueHandles(1(.element()),testString + m)@@@24@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "createNremoveMelementTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertNotNull(takeResult(0()@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "String testString = \"Hello World\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "final int numClients = 1@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(new String(takeResult(0(),testString)@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "i++@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "int i = 0@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ZooKeeper(( clients = new ZooKeeper((((@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "DistributedQueue(( queueHandles = new DistributedQueue((((@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String dir = \"/testTakeWait1\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i++@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final DistributedQueue(( queueHandles = new DistributedQueue((((@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testTakeWait1['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "takeThread.join()@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < clients.length@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Thread takeThread = new Thread(null)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String offerString = testString + i@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "String dir@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "int i = 0@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i < n@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final byte(((( takeResult = new byte((((((@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clients(i( = createClient()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "offerThread.join()@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "queueHandles(i( = new DistributedQueue(clients(i(,dir,null)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "queueHandles(0(.offer(offerString.getBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "offerThread.start()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "takeThread.start()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Thread offerThread = new Thread(null)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 0@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33->39 [style = solid, label="i"];
8->10 [style = bold, label=""];
35->34 [style = solid, label="i"];
16->0 [style = bold, label=""];
33->34 [style = solid, label="i"];
28->25 [style = dotted, label="true"];
28->38 [style = bold, label=""];
7->8 [style = bold, label=""];
12->9 [style = bold, label=""];
13->23 [style = dashed, label="0"];
0->38 [style = dashed, label="0"];
8->4 [style = dotted, label="true"];
2->23 [style = bold, label=""];
38->12 [style = solid, label="testString"];
23->22 [style = bold, label=""];
15->20 [style = bold, label=""];
35->33 [style = solid, label="i"];
37->32 [style = bold, label=""];
4->8 [style = bold, label=""];
30->40 [style = bold, label=""];
35->39 [style = solid, label="i"];
8->4 [style = bold, label=""];
8->4 [style = solid, label="i"];
18->32 [style = dashed, label="0"];
21->0 [style = bold, label=""];
19->12 [style = bold, label=""];
5->14 [style = solid, label="clients"];
39->34 [style = bold, label=""];
18->11 [style = bold, label=""];
14->10 [style = bold, label=""];
34->31 [style = bold, label=""];
28->36 [style = dotted, label="true"];
6->22 [style = solid, label="testString"];
24->40 [style = bold, label=""];
3->22 [style = dashed, label="0"];
4->8 [style = solid, label="i"];
1->17 [style = bold, label=""];
40->29 [style = dotted, label="true"];
0->14 [style = solid, label="dir"];
38->37 [style = bold, label=""];
31->33 [style = bold, label=""];
30->24 [style = solid, label="i"];
28->41 [style = dotted, label="true"];
39->34 [style = dotted, label="true"];
40->29 [style = bold, label=""];
27->26 [style = bold, label=""];
1->13 [style = solid, label="takeResult"];
39->31 [style = dotted, label="true"];
4->5 [style = dotted, label="true"];
30->40 [style = solid, label="i"];
41->40 [style = solid, label="m"];
41->12 [style = solid, label="m"];
4->10 [style = dotted, label="true"];
6->18 [style = bold, label=""];
35->39 [style = bold, label=""];
1->23 [style = solid, label="takeResult"];
32->27 [style = bold, label=""];
14->10 [style = solid, label="i"];
26->8 [style = bold, label=""];
24->40 [style = solid, label="i"];
8->35 [style = bold, label=""];
40->12 [style = bold, label=""];
1->3 [style = solid, label="takeResult"];
10->5 [style = bold, label=""];
5->4 [style = bold, label=""];
4->1 [style = bold, label=""];
11->27 [style = dashed, label="0"];
4->5 [style = bold, label=""];
36->39 [style = solid, label="n"];
0->6 [style = bold, label=""];
5->4 [style = solid, label="i"];
40->24 [style = dotted, label="true"];
10->4 [style = solid, label="i"];
5->14 [style = bold, label=""];
8->10 [style = dotted, label="true"];
4->14 [style = dotted, label="true"];
17->19 [style = bold, label=""];
2->13 [style = bold, label=""];
20->2 [style = bold, label=""];
39->30 [style = bold, label=""];
38->34 [style = solid, label="testString"];
33->39 [style = bold, label=""];
13->3 [style = bold, label=""];
8->5 [style = dotted, label="true"];
9->15 [style = bold, label=""];
26->8 [style = solid, label="i"];
10->4 [style = bold, label=""];
25->5 [style = solid, label="dir"];
10->5 [style = solid, label="clients"];
29->24 [style = bold, label=""];
6->3 [style = solid, label="testString"];
39->33 [style = dotted, label="true"];
1->22 [style = solid, label="takeResult"];
11->7 [style = bold, label=""];
}
