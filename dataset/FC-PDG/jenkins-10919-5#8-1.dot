digraph {
3 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasUpPage)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.oldestOnPage)@@@16@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "test_latest_partial_page['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Assert.assertEquals(1,historyPageFilter.runs.size())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "historyPageFilter.add(runs,queueItems)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.newestOnPage)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(1),historyPageFilter.runs.get(1).getEntryId())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(historyPageFilter.hasDownPage)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "test_latest_partial_page['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "historyPageFilter.setSearchString(searchString)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Iterable<ModelObject> runs = newRuns(1,2)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.queueItems.size())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "List<ModelObject> runs@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Assert.assertEquals(4,historyPageFilter.queueItems.get(0).getEntryId())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "String searchString@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertOneMatchingBuildForGivenSearchStringAndRunItems['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "HistoryPageFilter<ModelObject> historyPageFilter = newPage(5,null,null)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertEquals(3,historyPageFilter.queueItems.get(1).getEntryId())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertEquals(2,historyPageFilter.runs.size())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "List<ModelObject> runs = newRuns(1,2)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "List<Queue.Item> queueItems = newQueueItems(3,4)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Assert.assertEquals(HistoryPageEntry.getEntryId(2),historyPageFilter.runs.get(0).getEntryId())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
22->19 [style = dotted, label="true"];
16->11 [style = bold, label=""];
12->5 [style = bold, label=""];
7->10 [style = bold, label=""];
15->6 [style = solid, label="runs"];
4->13 [style = bold, label=""];
11->12 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
1->7 [style = bold, label=""];
11->18 [style = bold, label=""];
15->5 [style = bold, label=""];
11->15 [style = bold, label=""];
20->21 [style = bold, label=""];
6->20 [style = bold, label=""];
2->0 [style = bold, label=""];
17->18 [style = solid, label="searchString"];
5->6 [style = bold, label=""];
12->6 [style = solid, label="runs"];
19->6 [style = solid, label="runs"];
0->1 [style = bold, label=""];
18->5 [style = bold, label=""];
3->20 [style = dashed, label="0"];
12->15 [style = dashed, label="0"];
22->17 [style = dotted, label="true"];
10->9 [style = bold, label=""];
5->6 [style = solid, label="queueItems"];
14->11 [style = bold, label=""];
22->11 [style = bold, label=""];
13->2 [style = bold, label=""];
}
