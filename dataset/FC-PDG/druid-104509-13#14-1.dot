digraph {
7 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,SEGMENT_INTERVALS,tuningConfig,Granularities.MONTH)@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,SEGMENT_INTERVALS,Granularities.MONTH)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration(keepSegmentGranularity)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(1,ingestionSpecs.size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testCreateIngestionSchemaWithCustomSegments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ingestionSpecs.sort(null)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "keepSegmentGranularity@@@5@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,null,null,objectMapper,coordinatorClient,segmentLoaderFactory,retryPolicyFactory)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,Collections.singletonList(COMPACTION_INTERVAL),Granularities.ALL)@@@12@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "ingestionSpecs.sort(null)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(SEGMENTS),new PartitionConfigurationManager(null,TUNING_CONFIG),null,null,keepSegmentGranularity,null,objectMapper,coordinatorClient,segmentLoaderFactory,retryPolicyFactory)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(null,6,500000,1000000L,null,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,true,false,null,100L,null,null,null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertEquals(6,ingestionSpecs.size())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,Collections.singletonList(COMPACTION_INTERVAL),tuningConfig,Granularities.ALL)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,null,keepSegmentGranularity,null,objectMapper,coordinatorClient,segmentLoaderFactory,retryPolicyFactory)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->4 [style = dotted, label="false"];
17->9 [style = solid, label="expectedDimensionsSpec"];
3->9 [style = dotted, label="false"];
15->14 [style = bold, label=""];
7->1 [style = dashed, label="0"];
0->4 [style = solid, label="tuningConfig"];
2->3 [style = bold, label=""];
0->7 [style = solid, label="tuningConfig"];
0->2 [style = bold, label=""];
9->4 [style = bold, label=""];
17->1 [style = solid, label="expectedDimensionsSpec"];
2->7 [style = solid, label="ingestionSpecs"];
6->1 [style = dotted, label="true"];
6->9 [style = dotted, label="false"];
3->6 [style = bold, label=""];
14->17 [style = bold, label=""];
3->16 [style = bold, label=""];
3->6 [style = dotted, label="true"];
3->13 [style = dashed, label="0"];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
13->11 [style = bold, label=""];
2->4 [style = solid, label="ingestionSpecs"];
2->10 [style = dashed, label="0"];
14->9 [style = solid, label="ingestionSpecs"];
8->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
0->10 [style = bold, label=""];
14->1 [style = solid, label="ingestionSpecs"];
5->0 [style = bold, label=""];
10->13 [style = bold, label=""];
6->8 [style = dotted, label="true"];
0->2 [style = solid, label="tuningConfig"];
3->7 [style = solid, label="expectedDimensionsSpec"];
6->8 [style = bold, label=""];
3->4 [style = solid, label="expectedDimensionsSpec"];
17->3 [style = bold, label=""];
6->7 [style = dotted, label="true"];
11->8 [style = bold, label=""];
0->1 [style = solid, label="tuningConfig"];
6->9 [style = bold, label=""];
13->1 [style = solid, label="expectedDimensionsSpec"];
0->10 [style = solid, label="tuningConfig"];
3->8 [style = dotted, label="true"];
3->16 [style = dotted, label="false"];
3->1 [style = dotted, label="true"];
10->1 [style = solid, label="ingestionSpecs"];
16->9 [style = bold, label=""];
}
