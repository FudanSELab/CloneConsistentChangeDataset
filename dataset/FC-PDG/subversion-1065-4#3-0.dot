digraph {
10 [style = filled, label = "boolean conflicts = SVNUtil.fileMerge(original.getAbsolutePath(),modified.getAbsolutePath(),latest.getAbsolutePath(),null,\"||||||| base\",\"<<<<<<< branch\",\">>>>>>> local\",\"=======\",SVNUtil.ConflictDisplayStyle.modified_original_latest,result)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ByteArrayOutputStream result = new ByteArrayOutputStream()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertArrayEquals(expected,result.toByteArray())@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(conflicts)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final byte(( expected = (\"1234\" + \"<<<<<<< branch\" + \"modified\" + \"||||||| base\" + \"original\" + \"=======\" + \"latest\" + \">>>>>>> local\" + \"N-3N-2N-1N\").getBytes()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "final byte(( expected = (\"1234\" + \"<<<<<<< branch\" + NL + \"modified\" + \"||||||| base\" + NL + \"original\" + \"=======\" + NL + \"latest\" + \">>>>>>> local\" + NL + \"N-3N-2N-1N\").getBytes()@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "File original = File.createTempFile(\"merge\",\".original\",localTmp)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final byte(( expected = (\"--- original\" + NL + \"+++ modified\" + NL + \"@@ -3,7 +3,7 @@\" + NL + \" 3 4 \" + \"-original\" + \"+modified\" + \"  N-3 N-2\").getBytes()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "boolean diffs = SVNUtil.fileDiff(original.getAbsolutePath(),modified.getAbsolutePath(),null,\"original\",\"modified\",\"UTF-8\",null,result)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "writeFileContents(latest,\"latest\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "writeFileContents(modified,\"modified\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testFileMerge['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "writeFileContents(original,\"original\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testFileMerge['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "File latest = File.createTempFile(\"merge\",\".latest\",localTmp)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "File modified = File.createTempFile(\"merge\",\".modified\",localTmp)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertTrue(diffs)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "testFileDiff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0->3 [style = bold, label=""];
14->3 [style = bold, label=""];
8->16 [style = bold, label=""];
8->10 [style = bold, label=""];
16->15 [style = bold, label=""];
14->3 [style = solid, label="expected"];
15->14 [style = bold, label=""];
8->10 [style = solid, label="result"];
4->6 [style = bold, label=""];
17->9 [style = bold, label=""];
9->4 [style = bold, label=""];
16->15 [style = solid, label="diffs"];
8->16 [style = solid, label="result"];
4->7 [style = solid, label="modified"];
0->12 [style = dashed, label="0"];
7->8 [style = bold, label=""];
10->5 [style = solid, label="conflicts"];
0->3 [style = solid, label="expected"];
12->3 [style = solid, label="expected"];
1->9 [style = bold, label=""];
10->5 [style = bold, label=""];
5->0 [style = bold, label=""];
5->12 [style = bold, label=""];
7->2 [style = bold, label=""];
6->11 [style = bold, label=""];
9->11 [style = solid, label="original"];
12->3 [style = bold, label=""];
13->9 [style = bold, label=""];
6->2 [style = solid, label="latest"];
4->11 [style = bold, label=""];
5->15 [style = dashed, label="0"];
11->7 [style = bold, label=""];
2->8 [style = bold, label=""];
}
