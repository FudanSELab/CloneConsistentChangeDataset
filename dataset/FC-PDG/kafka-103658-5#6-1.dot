digraph {
11 [style = filled, label = "sender.run(time.milliseconds())@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "sendAddPartitionsToTxnResponse(Errors.NOT_COORDINATOR,tp0,epoch,pid)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "doInitTransactions(pid,epoch)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final long pid = 13131L@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "sender.run(time.milliseconds())@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
26 [style = filled, label = "testAbortableErrorWhileAbortInProgress['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(transactionManager.hasAbortableError())@@@19@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(transactionManager.hasError())@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "sender.runOnce()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(abortResult.isCompleted())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(responseFuture.isDone())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "prepareAddPartitionsToTxnResponse(Errors.NONE,tp0,epoch,pid)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "prepareEndTxnResponse(Errors.NONE,TransactionResult.ABORT,pid,epoch)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TransactionalRequestResult abortResult = transactionManager.beginAbort()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sender.runOnce()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testFindCoordinatorAllowedInAbortableErrorState['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "transactionManager.transitionToAbortableError(new KafkaException())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final short epoch = 1@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertFalse(transactionManager.hasError())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "prepareFindCoordinatorResponse(Errors.NONE,false,CoordinatorType.TRANSACTION,transactionalId)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "sender.runOnce()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "sender.run(time.milliseconds())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "sendProduceResponse(Errors.OUT_OF_ORDER_SEQUENCE_NUMBER,pid,epoch)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testAbortableErrorWhileAbortInProgress['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertNull(transactionManager.coordinator(CoordinatorType.TRANSACTION))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "sender.runOnce()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertTrue(transactionManager.isAborting())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Future<RecordMetadata> responseFuture = accumulator.append(tp0,time.milliseconds(),\"key\".getBytes(),\"value\".getBytes(),Record.EMPTY_HEADERS,null,MAX_BLOCK_TIMEOUT).future@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(brokerNode,transactionManager.coordinator(CoordinatorType.TRANSACTION))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "transactionManager.maybeAddPartitionToTransaction(tp0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(transactionManager.isAborting())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "transactionManager.beginTransaction()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(abortResult.isSuccessful())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertTrue(transactionManager.hasAbortableError())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertTrue(transactionManager.isReady())@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2->23 [style = dashed, label="0"];
14->16 [style = bold, label=""];
17->8 [style = bold, label=""];
6->3 [style = bold, label=""];
4->9 [style = bold, label=""];
19->0 [style = solid, label="epoch"];
33->35 [style = bold, label=""];
19->16 [style = solid, label="epoch"];
16->27 [style = bold, label=""];
18->23 [style = bold, label=""];
16->10 [style = bold, label=""];
19->18 [style = solid, label="epoch"];
3->33 [style = dashed, label="0"];
0->17 [style = bold, label=""];
6->32 [style = dashed, label="0"];
11->6 [style = bold, label=""];
28->11 [style = bold, label=""];
19->28 [style = solid, label="epoch"];
14->10 [style = bold, label=""];
5->15 [style = bold, label=""];
15->28 [style = solid, label="pid"];
1->18 [style = bold, label=""];
11->32 [style = bold, label=""];
21->24 [style = bold, label=""];
15->1 [style = solid, label="pid"];
20->1 [style = bold, label=""];
18->2 [style = bold, label=""];
15->19 [style = bold, label=""];
25->6 [style = bold, label=""];
10->27 [style = dashed, label="0"];
31->15 [style = bold, label=""];
30->29 [style = bold, label=""];
32->33 [style = bold, label=""];
19->0 [style = bold, label=""];
19->1 [style = solid, label="epoch"];
34->28 [style = bold, label=""];
20->35 [style = dashed, label="0"];
3->20 [style = bold, label=""];
29->2 [style = bold, label=""];
10->34 [style = bold, label=""];
15->16 [style = solid, label="pid"];
26->15 [style = bold, label=""];
11->25 [style = dashed, label="0"];
7->21 [style = bold, label=""];
7->29 [style = dashed, label="0"];
23->7 [style = bold, label=""];
9->12 [style = bold, label=""];
2->7 [style = bold, label=""];
4->24 [style = dashed, label="0"];
21->2 [style = dashed, label="0"];
15->18 [style = solid, label="pid"];
35->30 [style = bold, label=""];
13->14 [style = bold, label=""];
27->25 [style = bold, label=""];
15->0 [style = solid, label="pid"];
12->22 [style = bold, label=""];
24->9 [style = bold, label=""];
8->13 [style = bold, label=""];
21->4 [style = bold, label=""];
10->11 [style = bold, label=""];
}
