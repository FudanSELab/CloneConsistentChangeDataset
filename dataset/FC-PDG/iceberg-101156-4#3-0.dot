digraph {
4 [style = filled, label = "String branch = \"bar \"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "Assert.assertEquals(path,pti.tableIdentifier().name())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assertions.assertThat(pti.reference()).isNull()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "TableReference pti = TableReference.parse(path)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@7@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "whitespace['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assertions.assertThat(branch).isEqualTo(pti.reference())@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "String path = \"foo\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "Assertions.assertThat(path).isEqualTo(pti.tableIdentifier().name())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "pti = TableReference.parse(path + \"@\" + branch)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assertions.assertThat(pti.timestamp()).isNull()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertEquals(branch,pti.reference())@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "noMarkings['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "whitespace['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "Assert.assertNull(pti.reference())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String path = \"foo \"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assertions.assertThat(pti.timestamp()).isNull()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertEquals(path,pti.tableIdentifier().name())@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "Assert.assertNull(pti.timestamp())@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->17 [style = bold, label=""];
20->6 [style = solid, label="path"];
1->4 [style = bold, label=""];
4->3 [style = solid, label="branch"];
5->10 [style = solid, label="path"];
11->14 [style = bold, label=""];
7->14 [style = dashed, label="0"];
19->20 [style = bold, label=""];
5->8 [style = solid, label="path"];
10->3 [style = bold, label=""];
10->13 [style = dashed, label="0"];
0->12 [style = dashed, label="0"];
9->7 [style = bold, label=""];
2->10 [style = bold, label=""];
13->16 [style = bold, label=""];
3->0 [style = bold, label=""];
2->13 [style = bold, label=""];
20->18 [style = bold, label=""];
5->2 [style = solid, label="path"];
20->18 [style = solid, label="path"];
5->6 [style = bold, label=""];
18->6 [style = bold, label=""];
4->2 [style = solid, label="branch"];
4->20 [style = dashed, label="0"];
7->2 [style = bold, label=""];
6->8 [style = bold, label=""];
15->4 [style = bold, label=""];
8->9 [style = bold, label=""];
8->17 [style = dashed, label="0"];
9->11 [style = dashed, label="0"];
14->2 [style = bold, label=""];
5->6 [style = solid, label="path"];
4->5 [style = bold, label=""];
16->12 [style = bold, label=""];
3->16 [style = dashed, label="0"];
17->11 [style = bold, label=""];
}
