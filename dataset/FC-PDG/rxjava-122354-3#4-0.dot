digraph {
14 [style = filled, label = "maxActive.set(Math.max(active.get(),maxActive.get()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "subscribe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "subscriber.onSubscribe(new Subscription(){@Override public void request(long n){}@Override public void cancel(){terminate.set(true)active.decrementAndGet()}})@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "subscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final Observer<? super Long> observer@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "observer.onSubscribe(Disposables.fromRunnable(new Runnable(){@Override public void run(){terminate.set(true)active.decrementAndGet()}}))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "active.getAndIncrement()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "subscribe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "efforts.getAndIncrement()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "active.getAndIncrement()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "observer.onSubscribe(Disposable.fromRunnable(new Runnable(){@Override public void run(){terminate.set(true)active.decrementAndGet()}}))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "thread.start()@@@37@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "efforts.getAndIncrement()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final Subscriber<? super Long> subscriber@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final AtomicBoolean terminate = new AtomicBoolean(false)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "thread.start()@@@35@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final Thread thread = new Thread(context){@Override public void run(){long nr = 0try {while (!terminate.get()) {Thread.sleep(emitDelay)if (nextBeforeFailure.getAndDecrement() > 0) {subscriber.onNext(nr++)}{active.decrementAndGet()subscriber.onError(new RuntimeException(\"expected-failed\"))break}}}catch (InterruptedException t) }}@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14->16 [style = bold, label=""];
6->3 [style = bold, label=""];
16->15 [style = bold, label=""];
4->14 [style = bold, label=""];
11->1 [style = bold, label=""];
6->9 [style = dashed, label="0"];
11->13 [style = dotted, label="true"];
1->9 [style = bold, label=""];
4->0 [style = bold, label=""];
6->12 [style = dashed, label="0"];
5->1 [style = bold, label=""];
1->6 [style = bold, label=""];
3->2 [style = bold, label=""];
5->7 [style = dotted, label="true"];
12->8 [style = bold, label=""];
7->13 [style = dashed, label="0"];
1->12 [style = bold, label=""];
9->3 [style = bold, label=""];
8->4 [style = bold, label=""];
10->1 [style = bold, label=""];
10->7 [style = dotted, label="true"];
2->8 [style = bold, label=""];
}
