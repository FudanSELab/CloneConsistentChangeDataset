digraph {
15 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testProcessWithUnAvailableOutput['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "task.invoke()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final long sleepTimeInsideMail = 44@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final long sleepTimeOutsideMail = 42@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.greaterThanOrEqualTo(sleepTimeOutsideMail))@@@23@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "testProcessWithAvailableOutput['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(ioMetricGroup.getBackPressuredTimePerSecond().getCount(),Matchers.lessThanOrEqualTo(totalDuration - sleepTimeInsideMail))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "final int numberOfProcessCalls = 10@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final MailboxExecutor executor = task.mailboxProcessor.getMainMailboxExecutor()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@26@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final AvailabilityTestInputProcessor inputProcessor = new AvailabilityTestInputProcessor(numberOfProcessCalls)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "task.invoke()@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "executor.submit(null,\"This task will submit another task to execute after processing input once.\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final StreamTask task = new MockStreamTaskBuilder(environment).setStreamInputProcessor(inputProcessor).build()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(numberOfProcessCalls,inputProcessor.currentNumProcessCalls)@@@26@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testProcessWithUnAvailableOutput['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "final RunnableWithException completeFutureTask = null@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final long sleepTime = 42@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "long startTs = System.currentTimeMillis()@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertThat(ioMetricGroup.getIdleTimeMsPerSecond().getCount(),is(0L))@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "TaskIOMetricGroup ioMetricGroup = task.getEnvironment().getMetricGroup().getIOMetricGroup()@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25->0 [style = bold, label=""];
0->1 [style = solid, label="numberOfProcessCalls"];
15->13 [style = bold, label=""];
5->14 [style = dashed, label="0"];
22->2 [style = bold, label=""];
12->5 [style = bold, label=""];
0->2 [style = solid, label="numberOfProcessCalls"];
21->19 [style = bold, label=""];
13->11 [style = solid, label="startTs"];
2->3 [style = bold, label=""];
18->11 [style = bold, label=""];
0->2 [style = bold, label=""];
14->22 [style = bold, label=""];
3->11 [style = bold, label=""];
3->6 [style = bold, label=""];
19->17 [style = bold, label=""];
7->20 [style = bold, label=""];
9->10 [style = bold, label=""];
7->9 [style = bold, label=""];
25->0 [style = solid, label="numberOfProcessCalls"];
5->0 [style = bold, label=""];
5->8 [style = solid, label="sleepTime"];
24->25 [style = bold, label=""];
22->21 [style = solid, label="sleepTimeInsideMail"];
13->23 [style = bold, label=""];
25->11 [style = solid, label="numberOfProcessCalls"];
8->21 [style = bold, label=""];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
4->1 [style = bold, label=""];
8->4 [style = bold, label=""];
6->7 [style = bold, label=""];
14->8 [style = solid, label="sleepTimeOutsideMail"];
11->21 [style = solid, label="totalDuration"];
20->15 [style = bold, label=""];
2->17 [style = solid, label="numberOfProcessCalls"];
23->18 [style = bold, label=""];
2->3 [style = solid, label="numberOfProcessCalls"];
9->15 [style = dashed, label="0"];
10->11 [style = bold, label=""];
}
