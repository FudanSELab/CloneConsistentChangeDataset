digraph {
13 [style = filled, label = "issue813['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TestObserver<Integer> to = new TestObserver<Integer>()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "issue813['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Observable.unsafeCreate(new ObservableSource<Integer>(){@Override public void subscribe(final Observer<? super Integer> observer){observer.onSubscribe(Disposable.empty())scheduled.countDown()try {try {latch.await()}catch (InterruptedException e) observer.onComplete()}catch (Throwable e) {doneLatch.countDown()}}}).subscribeOn(Schedulers.computation()).subscribe(to)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "doneLatch.await()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "issue813['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final CountDownLatch doneLatch = new CountDownLatch(1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final CountDownLatch scheduled = new CountDownLatch(1)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "to.dispose()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "TestSubscriber<Integer> ts = new TestSubscriber<Integer>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Flowable.unsafeCreate(new Publisher<Integer>(){@Override public void subscribe(final Subscriber<? super Integer> subscriber){subscriber.onSubscribe(new BooleanSubscription())scheduled.countDown()try {try {latch.await()}catch (InterruptedException e) subscriber.onComplete()}catch (Throwable e) {doneLatch.countDown()}}}).subscribeOn(Schedulers.computation()).subscribe(ts)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "ts.cancel()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final CountDownLatch latch = new CountDownLatch(1)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "ts.assertComplete()@@@33@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "latch.countDown()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "scheduled.await()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ts.assertNoErrors()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "to.assertNoErrors()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "to.assertComplete()@@@33@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->18 [style = dashed, label="0"];
9->4 [style = bold, label=""];
10->17 [style = bold, label=""];
6->15 [style = bold, label=""];
3->2 [style = bold, label=""];
7->10 [style = bold, label=""];
0->7 [style = bold, label=""];
10->9 [style = bold, label=""];
12->2 [style = bold, label=""];
5->1 [style = bold, label=""];
6->0 [style = bold, label=""];
4->5 [style = bold, label=""];
9->17 [style = dashed, label="0"];
8->6 [style = bold, label=""];
16->10 [style = bold, label=""];
2->8 [style = bold, label=""];
1->11 [style = bold, label=""];
15->16 [style = solid, label="ts"];
17->4 [style = bold, label=""];
15->16 [style = bold, label=""];
5->18 [style = bold, label=""];
7->16 [style = dashed, label="0"];
0->7 [style = solid, label="to"];
0->15 [style = dashed, label="0"];
18->14 [style = bold, label=""];
13->2 [style = bold, label=""];
11->14 [style = dashed, label="0"];
}
