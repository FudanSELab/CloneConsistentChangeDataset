digraph {
5 [style = filled, label = "Thread.sleep(1000)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testNumberOfFiles_finish_empty_new_writer['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "long sum = 0@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "cfs.truncateBlocking()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "files++@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "files == 3@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Set<SSTableReader> compacting = Sets.newHashSet(s)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(files,sstables.size())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "ColumnFamilyStore cfs = keyspace.getColumnFamilyStore(CF)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "scanner.hasNext()@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "validateCFS(cfs)@@@31@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "sum += x.bytesOnDisk()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(s.bytesOnDisk(),cfs.metric.liveDiskSpaceUsed.getCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "cfs.getDataTracker().markCompactedSSTablesReplaced(compacting,sstables,OperationType.COMPACTION)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertFileCounts(s.descriptor.directory.list(),0,0)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(s.bytesOnDisk(),cfs.metric.totalDiskSpaceUsed.getCount())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "long startStorageMetricsLoad = StorageMetrics.load.getCount()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(sum,cfs.metric.totalDiskSpaceUsed.getCount())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "testNumberOfFilesAndSizes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertEquals(files - 1,cfs.getSSTables().size())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Thread.sleep(1000)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "SSTableRewriter.overrideOpenInterval(10000000)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<SSTableReader> sstables = rewriter.finish()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(startStorageMetricsLoad - s.bytesOnDisk() + sum,StorageMetrics.load.getCount())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testNumberOfFiles_finish_empty_new_writer['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "cfs.getDataTracker().markCompactedSSTablesReplaced(compacting,sstables,OperationType.COMPACTION)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "SSTableReader s = writeFile(cfs,1000)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "rewriter.switchWriter(getWriter(cfs,s.descriptor.directory))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(files,cfs.getSSTables().size())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "rewriter.append(new LazilyCompactedRow(controller,Arrays.asList(scanner.next())))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "rewriter.currentWriter().getFilePointer() > 25000000@@@17@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "rewriter.currentWriter().getOnDiskFilePointer() > 25000000@@@18@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertEquals(sum,cfs.metric.liveDiskSpaceUsed.getCount())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SSTableRewriter rewriter = new SSTableRewriter(cfs,compacting,1000,false)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(cfs.getSSTables().size(),files)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "List<SSTableReader> sstables = rewriter.finish()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "cfs.addSSTable(s)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "validateCFS(cfs)@@@38@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertFileCounts(s.descriptor.directory.list(),0,0)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "int files = 1@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Keyspace keyspace = Keyspace.open(KEYSPACE)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->39 [style = dashed, label="0"];
23->2 [style = bold, label=""];
5->14 [style = bold, label=""];
35->33 [style = bold, label=""];
11->4 [style = bold, label=""];
21->3 [style = bold, label=""];
3->29 [style = dotted, label="true"];
19->6 [style = bold, label=""];
16->0 [style = solid, label="files"];
1->0 [style = dotted, label="true"];
25->10 [style = bold, label=""];
26->35 [style = bold, label=""];
12->1 [style = bold, label=""];
15->22 [style = bold, label=""];
6->8 [style = bold, label=""];
3->1 [style = bold, label=""];
0->23 [style = bold, label=""];
18->4 [style = solid, label="s"];
13->22 [style = solid, label="cfs"];
4->19 [style = bold, label=""];
1->21 [style = dotted, label="true"];
3->9 [style = bold, label=""];
7->0 [style = bold, label=""];
1->24 [style = dotted, label="true"];
16->7 [style = bold, label=""];
34->29 [style = bold, label=""];
13->20 [style = bold, label=""];
3->16 [style = dotted, label="true"];
4->6 [style = solid, label="compacting"];
38->39 [style = bold, label=""];
1->5 [style = bold, label=""];
0->23 [style = dotted, label="true"];
39->31 [style = bold, label=""];
33->27 [style = bold, label=""];
41->40 [style = bold, label=""];
12->36 [style = solid, label="files"];
12->37 [style = solid, label="files"];
20->18 [style = bold, label=""];
9->16 [style = bold, label=""];
32->27 [style = solid, label="startStorageMetricsLoad"];
24->0 [style = bold, label=""];
16->7 [style = solid, label="files"];
35->33 [style = solid, label="sum"];
11->32 [style = bold, label=""];
13->8 [style = solid, label="cfs"];
4->2 [style = solid, label="compacting"];
37->38 [style = bold, label=""];
24->16 [style = dotted, label="true"];
28->10 [style = bold, label=""];
3->7 [style = dotted, label="true"];
29->1 [style = bold, label=""];
32->4 [style = bold, label=""];
3->9 [style = dotted, label="true"];
12->14 [style = solid, label="files"];
0->2 [style = dotted, label="true"];
24->7 [style = dotted, label="true"];
40->26 [style = bold, label=""];
13->18 [style = solid, label="cfs"];
13->30 [style = solid, label="cfs"];
1->3 [style = dotted, label="true"];
10->13 [style = bold, label=""];
24->9 [style = dotted, label="true"];
12->0 [style = solid, label="files"];
24->9 [style = bold, label=""];
31->30 [style = bold, label=""];
14->15 [style = bold, label=""];
16->36 [style = solid, label="files"];
18->11 [style = bold, label=""];
13->9 [style = solid, label="cfs"];
35->27 [style = solid, label="sum"];
16->14 [style = solid, label="files"];
36->37 [style = bold, label=""];
16->37 [style = solid, label="files"];
8->12 [style = bold, label=""];
4->40 [style = solid, label="compacting"];
41->40 [style = solid, label="sstables"];
2->5 [style = bold, label=""];
1->21 [style = bold, label=""];
23->2 [style = solid, label="sstables"];
3->24 [style = dashed, label="0"];
21->24 [style = bold, label=""];
1->41 [style = bold, label=""];
0->1 [style = bold, label=""];
13->6 [style = solid, label="cfs"];
27->36 [style = bold, label=""];
12->16 [style = solid, label="files"];
3->0 [style = bold, label=""];
7->34 [style = bold, label=""];
18->11 [style = solid, label="s"];
3->34 [style = dotted, label="true"];
35->39 [style = solid, label="sum"];
17->10 [style = bold, label=""];
}
