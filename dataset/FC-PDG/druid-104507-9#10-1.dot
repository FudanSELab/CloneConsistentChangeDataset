digraph {
8 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(null,6,500000,1000000L,null,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,Collections.singletonList(COMPACTION_INTERVAL),tuningConfig,Granularities.ALL)@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCreateIngestionSchemaWithMaxTotalRows['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertIngestionSchema(ingestionSpecs,expectedDimensionsSpec,AGGREGATORS,SEGMENT_INTERVALS,tuningConfig,Granularities.MONTH)@@@9@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(6,ingestionSpecs.size())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,null,keepSegmentGranularity,null,objectMapper)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(1,ingestionSpecs.size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final List<DimensionsSpec> expectedDimensionsSpec = getExpectedDimensionsSpecForAutoGeneration(keepSegmentGranularity)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "keepSegmentGranularity@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final IndexTuningConfig tuningConfig = new IndexTuningConfig(null,null,500000,1000000L,6L,null,null,null,new IndexSpec(new RoaringBitmapSerdeFactory(true),CompressionStrategy.LZ4,CompressionStrategy.LZF,LongEncodingStrategy.LONGS),5000,true,false,true,false,null,100L,null,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<IndexIngestionSpec> ingestionSpecs = CompactionTask.createIngestionSchema(toolbox,new SegmentProvider(DATA_SOURCE,COMPACTION_INTERVAL),new PartitionConfigurationManager(null,tuningConfig),null,null,keepSegmentGranularity,null,objectMapper,coordinatorClient,segmentLoaderFactory,retryPolicyFactory)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "testCreateIngestionSchemaWithTargetPartitionSize['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "ingestionSpecs.sort(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->4 [style = solid, label="tuningConfig"];
13->2 [style = solid, label="tuningConfig"];
11->4 [style = solid, label="ingestionSpecs"];
1->8 [style = bold, label=""];
5->9 [style = bold, label=""];
3->6 [style = solid, label="expectedDimensionsSpec"];
2->3 [style = bold, label=""];
8->2 [style = solid, label="tuningConfig"];
8->4 [style = solid, label="tuningConfig"];
7->0 [style = bold, label=""];
5->0 [style = dotted, label="true"];
5->4 [style = dotted, label="true"];
2->4 [style = solid, label="ingestionSpecs"];
9->6 [style = bold, label=""];
8->13 [style = dashed, label="0"];
12->13 [style = bold, label=""];
8->6 [style = solid, label="tuningConfig"];
3->5 [style = bold, label=""];
10->8 [style = bold, label=""];
8->2 [style = bold, label=""];
5->6 [style = dotted, label="false"];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
5->7 [style = dotted, label="true"];
3->4 [style = solid, label="expectedDimensionsSpec"];
8->11 [style = solid, label="tuningConfig"];
5->9 [style = dotted, label="false"];
5->7 [style = bold, label=""];
2->11 [style = dashed, label="0"];
13->6 [style = solid, label="tuningConfig"];
11->6 [style = solid, label="ingestionSpecs"];
2->6 [style = solid, label="ingestionSpecs"];
8->11 [style = bold, label=""];
13->2 [style = bold, label=""];
}
