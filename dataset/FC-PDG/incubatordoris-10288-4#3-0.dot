digraph {
5 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@49@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "AnalysisException e@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "columns.add(new Column(\"k2\",PrimitiveType.TINYINT))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "columns.add(new Column(\"v1\",ScalarType.createType(PrimitiveType.VARCHAR),false,AggregateType.REPLACE,\"\",\"\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"column does not exist in table\"))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertEquals(Sets.newHashSet(\"k1\"),bfColumns)@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assert.fail()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "testBfColumns['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k1,K1\")@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"Bloom filter index only used in\"))@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AnalysisException e@@@23@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Set<String> bfColumns = PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(Sets.newHashSet(),PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Map<String,String> properties = Maps.newHashMap()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "AnalysisException e@@@37@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k3\")@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "columns.get(0).setIsKey(true)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "columns.get(1).setIsKey(true)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "columns.add(new Column(\"k1\",PrimitiveType.INT))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"v2\")@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k3\")@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "columns.add(new Column(\"k3\",PrimitiveType.BOOLEAN))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "AnalysisException e@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"TINYINT is not supported\"))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k1\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "columns.add(new Column(\"v2\",ScalarType.createType(PrimitiveType.BIGINT),false,AggregateType.SUM,\"0\",\"\"))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AnalysisException e@@@30@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testBfColumnsError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<Column> columns = Lists.newArrayList()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "PropertyAnalyzer.analyzeBloomFilterColumns(properties,columns)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertTrue(e.getMessage().contains(\"BOOLEAN is not supported\"))@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "testBfColumnsError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k4\")@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "properties.put(PropertyAnalyzer.PROPERTIES_BF_COLUMNS,\"k2\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
17->25 [style = bold, label=""];
1->5 [style = solid, label="properties"];
28->6 [style = bold, label=""];
32->21 [style = bold, label=""];
1->32 [style = solid, label="properties"];
2->7 [style = solid, label="columns"];
26->17 [style = bold, label=""];
20->29 [style = bold, label=""];
1->7 [style = solid, label="properties"];
16->29 [style = bold, label=""];
18->15 [style = bold, label=""];
35->2 [style = bold, label=""];
31->2 [style = bold, label=""];
1->26 [style = bold, label=""];
25->6 [style = bold, label=""];
7->8 [style = bold, label=""];
24->18 [style = bold, label=""];
22->23 [style = bold, label=""];
33->30 [style = dotted, label="true"];
1->20 [style = solid, label="properties"];
6->15 [style = bold, label=""];
20->21 [style = bold, label=""];
9->28 [style = bold, label=""];
34->36 [style = solid, label="bfColumns"];
17->28 [style = bold, label=""];
30->21 [style = bold, label=""];
2->17 [style = solid, label="columns"];
1->6 [style = solid, label="properties"];
1->34 [style = solid, label="properties"];
2->6 [style = solid, label="columns"];
10->16 [style = bold, label=""];
8->5 [style = bold, label=""];
19->9 [style = bold, label=""];
22->27 [style = bold, label=""];
2->34 [style = solid, label="columns"];
15->20 [style = bold, label=""];
16->21 [style = bold, label=""];
9->25 [style = bold, label=""];
3->8 [style = bold, label=""];
29->32 [style = bold, label=""];
37->34 [style = bold, label=""];
34->36 [style = bold, label=""];
12->14 [style = bold, label=""];
13->2 [style = bold, label=""];
19->9 [style = dotted, label="true"];
11->22 [style = bold, label=""];
33->30 [style = bold, label=""];
2->5 [style = solid, label="columns"];
21->7 [style = bold, label=""];
26->37 [style = dashed, label="0"];
1->17 [style = solid, label="properties"];
23->12 [style = bold, label=""];
4->1 [style = bold, label=""];
27->23 [style = bold, label=""];
2->20 [style = solid, label="columns"];
0->3 [style = dotted, label="true"];
25->28 [style = dashed, label="0"];
2->32 [style = solid, label="columns"];
17->36 [style = dashed, label="0"];
10->16 [style = dotted, label="true"];
2->11 [style = bold, label=""];
24->18 [style = dotted, label="true"];
1->37 [style = bold, label=""];
14->4 [style = bold, label=""];
}
