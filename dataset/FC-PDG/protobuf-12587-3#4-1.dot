digraph {
19 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UNSAFE.getByte(bytes,offset++) > (byte)0xBF@@@26@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "return MALFORMED@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "byte2 = UNSAFE.getByte(bytes,offset++)@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
69 [style = filled, label = "address >= addressLimit@@@44@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "byte2 == 0@@@33@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int byte1 = (byte)state@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "final int limit@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "byte2 = UNSAFE.getByte(address++)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "address >= addressLimit@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UNSAFE.getByte(bytes,offset++) > (byte)0xBF@@@48@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "byte(( bytes@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "long address = addressOffset(buffer) + index@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "final long addressLimit = address + (limit - index)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "ByteBuffer buffer@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@48@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "final long offsetLimit = getArrayBaseOffset() + limit@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "byte3 = UNSAFE.getByte(address++)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "(index | limit | buffer.limit() - limit) < 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "final int index@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "byte1 < (byte)0xC2 || UNSAFE.getByte(bytes,offset++) > (byte)0xBF@@@14@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
29 [style = filled, label = "final long offsetLimit = ARRAY_BASE_OFFSET + limit@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "partialIsValidUtf8Direct['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "(index | limit | bytes.length - limit) < 0@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return MALFORMED@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UNSAFE.getByte(address++) > (byte)0xBF@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "byte2 > (byte)0xBF || (byte1 == (byte)0xE0 && byte2 < (byte)0xA0) || (byte1 == (byte)0xED && byte2 >= (byte)0xA0) || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@26@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "byte3 = UnsafeUtil.getByte(bytes,offset++)@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "return state@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "offset >= offsetLimit@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "byte1 < (byte)0xF0@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "int byte3 = 0@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "long offset = ARRAY_BASE_OFFSET + index@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "final int index@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "throw new ArrayIndexOutOfBoundsException(String.format(\"Array length=%d, index=%d, limit=%d\",bytes.length,index,limit))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "byte(( bytes@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "long offset = getArrayBaseOffset() + index@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "partialIsValidUtf8['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "byte2 > (byte)0xBF || (((byte1 << 28) + (byte2 - (byte)0x90)) >> 30) != 0 || byte3 > (byte)0xBF || UNSAFE.getByte(address++) > (byte)0xBF@@@48@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "byte1 < (byte)0xC2 || UNSAFE.getByte(address++) > (byte)0xBF@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "final int byte1 = (byte)state@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "byte3 = (byte)(state >> 16)@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "byte3 = UNSAFE.getByte(bytes,offset++)@@@43@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "byte2 == 0@@@20@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "state != COMPLETE@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "address >= addressLimit@@@9@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "offset >= offsetLimit@@@9@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "throw new ArrayIndexOutOfBoundsException(String.format(\"buffer limit=%d, index=%d, limit=%d\",buffer.limit(),index,limit))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "return partialIsValidUtf8(address,(int)(addressLimit - address))@@@53@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "byte3 == 0@@@42@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int state@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final int limit@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "byte1 < (byte)0xE0@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "return MALFORMED@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "offset >= offsetLimit@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final int state@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "byte2 = UnsafeUtil.getByte(bytes,offset++)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
60 [style = filled, label = "address >= addressLimit@@@35@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "byte1 < (byte)0xC2 || UnsafeUtil.getByte(bytes,offset++) > (byte)0xBF@@@14@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "return incompleteStateFor(byte1,byte2)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "return incompleteStateFor(byte1,byte2,byte3)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int byte2 = (byte)~(state >> 8)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "offset >= offsetLimit@@@44@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "byte2 = UNSAFE.getByte(bytes,offset++)@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
58 [style = filled, label = "byte2 = UNSAFE.getByte(address++)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "final int index@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "return partialIsValidUtf8(bytes,offset,(int)(offsetLimit - offset))@@@53@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "partialIsValidUtf8['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
48 [style = filled, label = "final int limit@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
68->14 [style = solid, label="byte1"];
3->11 [style = solid, label="limit"];
68->25 [style = solid, label="byte1"];
44->35 [style = bold, label=""];
37->25 [style = solid, label="byte2"];
42->43 [style = solid, label="bytes"];
36->20 [style = bold, label=""];
27->15 [style = bold, label=""];
52->61 [style = solid, label="limit"];
10->39 [style = bold, label=""];
15->20 [style = bold, label=""];
39->43 [style = solid, label="offset"];
36->67 [style = bold, label=""];
64->59 [style = solid, label="index"];
7->1 [style = dotted, label="true"];
46->2 [style = dotted, label="true"];
35->60 [style = dashed, label="0"];
25->57 [style = bold, label=""];
18->69 [style = dotted, label="true"];
8->41 [style = solid, label="byte1"];
31->22 [style = dotted, label="true"];
36->63 [style = bold, label=""];
35->18 [style = bold, label=""];
33->44 [style = dashed, label="0"];
24->26 [style = solid, label="state"];
31->4 [style = dotted, label="false"];
7->37 [style = bold, label=""];
7->57 [style = bold, label=""];
40->34 [style = solid, label="state"];
39->45 [style = bold, label=""];
34->8 [style = bold, label=""];
49->32 [style = bold, label=""];
21->67 [style = dashed, label="0"];
56->52 [style = dotted, label="true"];
56->64 [style = dotted, label="true"];
37->50 [style = dashed, label="0"];
68->66 [style = solid, label="byte1"];
12->19 [style = solid, label="bytes"];
14->6 [style = bold, label=""];
38->42 [style = dotted, label="true"];
23->20 [style = bold, label=""];
8->9 [style = solid, label="byte1"];
35->9 [style = bold, label=""];
31->0 [style = bold, label=""];
69->27 [style = dotted, label="true"];
8->14 [style = bold, label=""];
32->27 [style = bold, label=""];
50->25 [style = solid, label="byte2"];
4->33 [style = bold, label=""];
22->7 [style = solid, label="byte2"];
4->58 [style = dotted, label="true"];
45->32 [style = solid, label="offsetLimit"];
60->18 [style = bold, label=""];
9->18 [style = bold, label=""];
13->33 [style = solid, label="offset"];
3->10 [style = solid, label="limit"];
68->9 [style = solid, label="byte1"];
5->4 [style = bold, label=""];
39->41 [style = solid, label="offset"];
57->23 [style = dotted, label="true"];
29->20 [style = solid, label="offsetLimit"];
0->5 [style = bold, label=""];
42->41 [style = solid, label="bytes"];
33->30 [style = solid, label="offset"];
33->35 [style = bold, label=""];
50->57 [style = solid, label="address"];
29->32 [style = solid, label="offsetLimit"];
44->46 [style = solid, label="byte2"];
7->62 [style = dotted, label="true"];
64->70 [style = solid, label="index"];
29->21 [style = solid, label="offsetLimit"];
62->57 [style = bold, label=""];
6->17 [style = dotted, label="true"];
37->43 [style = dashed, label="0"];
32->27 [style = dotted, label="true"];
15->55 [style = dashed, label="0"];
66->17 [style = bold, label=""];
8->15 [style = solid, label="byte1"];
15->46 [style = dashed, label="0"];
54->27 [style = solid, label="byte3"];
32->15 [style = bold, label=""];
24->34 [style = solid, label="state"];
18->54 [style = bold, label=""];
49->27 [style = solid, label="byte3"];
18->30 [style = dotted, label="true"];
60->9 [style = bold, label=""];
58->27 [style = solid, label="byte2"];
46->2 [style = bold, label=""];
0->55 [style = solid, label="byte2"];
28->16 [style = dotted, label="true"];
4->44 [style = dotted, label="true"];
47->20 [style = solid, label="offset"];
58->60 [style = bold, label=""];
61->70 [style = dotted, label="true"];
41->20 [style = bold, label=""];
69->55 [style = bold, label=""];
8->14 [style = solid, label="byte1"];
29->35 [style = solid, label="offsetLimit"];
19->20 [style = solid, label="offset"];
24->36 [style = solid, label="state"];
14->31 [style = dotted, label="false"];
6->41 [style = dashed, label="0"];
5->46 [style = solid, label="byte3"];
25->19 [style = bold, label=""];
57->63 [style = solid, label="address"];
64->65 [style = solid, label="index"];
41->17 [style = dotted, label="true"];
38->40 [style = dotted, label="true"];
31->19 [style = dotted, label="true"];
10->11 [style = bold, label=""];
60->9 [style = dotted, label="true"];
2->20 [style = bold, label=""];
5->18 [style = solid, label="byte3"];
10->61 [style = dashed, label="0"];
42->49 [style = solid, label="bytes"];
15->2 [style = dotted, label="true"];
62->25 [style = bold, label=""];
26->55 [style = solid, label="byte3"];
38->24 [style = dotted, label="true"];
27->46 [style = bold, label=""];
48->10 [style = solid, label="limit"];
31->46 [style = dotted, label="false"];
46->20 [style = bold, label=""];
44->35 [style = solid, label="offset"];
61->70 [style = bold, label=""];
24->39 [style = solid, label="index"];
31->18 [style = dotted, label="false"];
3->29 [style = solid, label="limit"];
24->11 [style = solid, label="index"];
59->58 [style = solid, label="address"];
59->65 [style = bold, label=""];
45->36 [style = bold, label=""];
45->1 [style = solid, label="offsetLimit"];
64->61 [style = solid, label="index"];
47->23 [style = dotted, label="true"];
30->15 [style = solid, label="byte3"];
13->6 [style = solid, label="offset"];
33->35 [style = solid, label="offset"];
43->47 [style = solid, label="byte2"];
31->15 [style = dotted, label="false"];
22->47 [style = solid, label="byte2"];
68->31 [style = solid, label="byte1"];
12->15 [style = solid, label="bytes"];
59->54 [style = solid, label="address"];
47->23 [style = bold, label=""];
59->66 [style = solid, label="address"];
14->41 [style = bold, label=""];
15->2 [style = bold, label=""];
1->25 [style = dotted, label="true"];
31->22 [style = bold, label=""];
8->6 [style = solid, label="byte1"];
40->8 [style = solid, label="state"];
19->23 [style = dotted, label="true"];
18->32 [style = dotted, label="true"];
7->37 [style = dotted, label="true"];
59->57 [style = solid, label="address"];
44->9 [style = solid, label="byte2"];
29->65 [style = dashed, label="0"];
65->36 [style = bold, label=""];
13->30 [style = solid, label="offset"];
1->47 [style = bold, label=""];
30->54 [style = dashed, label="0"];
51->59 [style = solid, label="buffer"];
56->53 [style = dotted, label="true"];
4->26 [style = dotted, label="false"];
59->55 [style = solid, label="address"];
18->54 [style = dotted, label="true"];
7->43 [style = dotted, label="true"];
8->31 [style = solid, label="byte1"];
66->63 [style = solid, label="address"];
14->66 [style = bold, label=""];
48->11 [style = solid, label="limit"];
11->70 [style = dashed, label="0"];
36->67 [style = dotted, label="true"];
0->27 [style = solid, label="byte2"];
18->55 [style = bold, label=""];
21->8 [style = bold, label=""];
55->2 [style = bold, label=""];
30->27 [style = solid, label="byte3"];
19->47 [style = dashed, label="0"];
0->4 [style = solid, label="byte2"];
61->59 [style = bold, label=""];
4->44 [style = bold, label=""];
14->41 [style = dotted, label="true"];
15->20 [style = solid, label="offset"];
34->68 [style = bold, label=""];
57->63 [style = bold, label=""];
49->32 [style = solid, label="offset"];
43->1 [style = bold, label=""];
50->62 [style = bold, label=""];
2->63 [style = bold, label=""];
7->43 [style = bold, label=""];
26->18 [style = solid, label="byte3"];
36->14 [style = dotted, label="true"];
66->63 [style = bold, label=""];
45->21 [style = solid, label="offsetLimit"];
68->14 [style = bold, label=""];
25->47 [style = bold, label=""];
6->20 [style = solid, label="offset"];
13->37 [style = solid, label="offset"];
22->19 [style = solid, label="byte2"];
37->1 [style = bold, label=""];
42->47 [style = solid, label="bytes"];
33->9 [style = solid, label="byte2"];
65->60 [style = solid, label="addressLimit"];
53->36 [style = solid, label="state"];
29->45 [style = dashed, label="0"];
43->1 [style = solid, label="offset"];
8->47 [style = solid, label="byte1"];
58->55 [style = solid, label="address"];
28->24 [style = dotted, label="true"];
45->35 [style = solid, label="offsetLimit"];
58->54 [style = solid, label="address"];
5->15 [style = solid, label="byte3"];
42->44 [style = solid, label="bytes"];
14->66 [style = dotted, label="true"];
8->46 [style = solid, label="byte1"];
12->30 [style = solid, label="bytes"];
7->50 [style = bold, label=""];
8->68 [style = dashed, label="0"];
31->47 [style = dotted, label="true"];
32->46 [style = bold, label=""];
12->6 [style = solid, label="bytes"];
55->63 [style = solid, label="address"];
28->3 [style = dotted, label="true"];
7->50 [style = dotted, label="true"];
52->65 [style = solid, label="limit"];
30->32 [style = bold, label=""];
18->49 [style = dotted, label="true"];
16->13 [style = solid, label="index"];
32->69 [style = dashed, label="0"];
4->58 [style = bold, label=""];
0->15 [style = solid, label="byte2"];
31->55 [style = dotted, label="false"];
24->10 [style = solid, label="index"];
65->67 [style = solid, label="addressLimit"];
12->37 [style = solid, label="bytes"];
31->57 [style = dotted, label="true"];
44->49 [style = solid, label="offset"];
1->62 [style = dashed, label="0"];
13->20 [style = solid, label="offset"];
7->19 [style = bold, label=""];
28->12 [style = dotted, label="true"];
14->6 [style = dotted, label="true"];
13->15 [style = solid, label="offset"];
28->10 [style = bold, label=""];
42->46 [style = solid, label="bytes"];
19->57 [style = dashed, label="0"];
26->46 [style = solid, label="byte3"];
35->9 [style = dotted, label="true"];
8->27 [style = solid, label="byte1"];
56->61 [style = bold, label=""];
8->19 [style = solid, label="byte1"];
42->20 [style = solid, label="bytes"];
41->20 [style = solid, label="offset"];
43->25 [style = solid, label="byte2"];
39->49 [style = solid, label="offset"];
0->46 [style = solid, label="byte2"];
65->63 [style = solid, label="addressLimit"];
31->0 [style = dotted, label="false"];
36->21 [style = bold, label=""];
56->51 [style = dotted, label="true"];
54->55 [style = solid, label="address"];
39->21 [style = solid, label="offset"];
67->34 [style = dotted, label="true"];
47->20 [style = bold, label=""];
13->19 [style = solid, label="offset"];
67->34 [style = bold, label=""];
26->18 [style = bold, label=""];
36->8 [style = dotted, label="true"];
30->32 [style = solid, label="offset"];
53->34 [style = solid, label="state"];
18->30 [style = bold, label=""];
59->65 [style = solid, label="address"];
52->70 [style = solid, label="limit"];
58->60 [style = solid, label="address"];
36->21 [style = dotted, label="true"];
4->33 [style = dotted, label="true"];
31->7 [style = dotted, label="true"];
12->20 [style = solid, label="bytes"];
55->63 [style = bold, label=""];
49->46 [style = solid, label="byte3"];
18->49 [style = bold, label=""];
17->63 [style = bold, label=""];
30->49 [style = dashed, label="0"];
38->48 [style = dotted, label="true"];
33->27 [style = solid, label="byte2"];
11->13 [style = bold, label=""];
67->68 [style = bold, label=""];
18->46 [style = bold, label=""];
53->68 [style = solid, label="state"];
44->27 [style = solid, label="byte2"];
5->55 [style = solid, label="byte3"];
50->62 [style = solid, label="address"];
59->67 [style = solid, label="address"];
17->20 [style = bold, label=""];
29->36 [style = bold, label=""];
13->59 [style = dashed, label="0"];
53->26 [style = solid, label="state"];
62->25 [style = dotted, label="true"];
37->19 [style = solid, label="byte2"];
33->15 [style = solid, label="byte2"];
19->20 [style = bold, label=""];
24->8 [style = solid, label="state"];
4->35 [style = dotted, label="true"];
18->15 [style = bold, label=""];
39->44 [style = solid, label="offset"];
37->1 [style = solid, label="offset"];
40->36 [style = solid, label="state"];
22->7 [style = bold, label=""];
68->55 [style = solid, label="byte1"];
65->69 [style = solid, label="addressLimit"];
57->23 [style = bold, label=""];
70->59 [style = bold, label=""];
39->20 [style = solid, label="offset"];
59->63 [style = solid, label="address"];
16->10 [style = solid, label="index"];
36->68 [style = dotted, label="true"];
39->47 [style = solid, label="offset"];
31->5 [style = dotted, label="false"];
8->25 [style = solid, label="byte1"];
1->19 [style = bold, label=""];
16->11 [style = solid, label="index"];
13->21 [style = solid, label="offset"];
6->17 [style = bold, label=""];
39->46 [style = solid, label="offset"];
40->26 [style = solid, label="state"];
66->17 [style = dotted, label="true"];
46->20 [style = solid, label="offset"];
26->15 [style = solid, label="byte3"];
6->66 [style = dashed, label="0"];
4->60 [style = dotted, label="true"];
21->34 [style = bold, label=""];
54->69 [style = solid, label="address"];
6->20 [style = bold, label=""];
13->39 [style = dashed, label="0"];
27->55 [style = bold, label=""];
10->13 [style = bold, label=""];
10->11 [style = dotted, label="true"];
24->64 [style = dashed, label="0"];
69->27 [style = bold, label=""];
59->50 [style = solid, label="address"];
14->31 [style = bold, label=""];
23->63 [style = bold, label=""];
33->58 [style = dashed, label="0"];
1->25 [style = bold, label=""];
45->20 [style = solid, label="offsetLimit"];
58->9 [style = solid, label="byte2"];
68->57 [style = solid, label="byte1"];
20->63 [style = dashed, label="0"];
7->47 [style = bold, label=""];
38->10 [style = bold, label=""];
65->62 [style = solid, label="addressLimit"];
4->26 [style = bold, label=""];
54->69 [style = bold, label=""];
21->34 [style = dotted, label="true"];
55->2 [style = dotted, label="true"];
13->29 [style = bold, label=""];
41->17 [style = bold, label=""];
19->23 [style = bold, label=""];
22->57 [style = solid, label="byte2"];
12->33 [style = solid, label="bytes"];
11->39 [style = bold, label=""];
68->27 [style = solid, label="byte1"];
29->1 [style = solid, label="offsetLimit"];
48->45 [style = solid, label="limit"];
}
