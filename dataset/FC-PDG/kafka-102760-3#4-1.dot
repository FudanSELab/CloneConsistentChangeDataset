digraph {
10 [style = filled, label = "leftTable.outerJoin(rightTable,valueJoiner).outerJoin(rightTable,valueJoiner,materialized).toStream().to(OUTPUT_TOPIC)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-inner-left\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "leftTable.outerJoin(rightTable,valueJoiner).outerJoin(rightTable,valueJoiner,materialized).toStream().peek(new CountingPeek(true)).to(OUTPUT_TOPIC)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testOuterLeft['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "leftTable.outerJoin(rightTable,valueJoiner).leftJoin(rightTable,valueJoiner,materialized).toStream().to(OUTPUT_TOPIC)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testOuterLeft['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "STREAMS_CONFIG.put(StreamsConfig.APPLICATION_ID_CONFIG,appID + \"-inner-outer\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "leftTable.outerJoin(rightTable,valueJoiner).leftJoin(rightTable,valueJoiner,materialized).toStream().peek(new CountingPeek(true)).to(OUTPUT_TOPIC)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "runTest(expectedFinalMultiJoinResult,storeName)@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final List<List<String>> expectedResult = Arrays.asList(null,null,null,Arrays.asList(\"A-null-null\",\"A-a-a\",\"A-a-a\"),Collections.singletonList(\"B-a-a\"),Arrays.asList(\"B-b-b\",\"B-b-b\"),Collections.singletonList(\"null-b-b\"),Collections.singletonList((String)null),null,Arrays.asList(\"C-null-null\",\"C-c-c\",\"C-c-c\"),Arrays.asList(\"C-null-null\",\"C-null-null\"),Collections.singletonList((String)null),null,Arrays.asList(\"null-d-d\",\"null-d-d\"),Collections.singletonList(\"D-d-d\"))@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "runTest(expectedResult,storeName)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<List<String>> expectedResult = Arrays.asList(null,null,null,Arrays.asList(\"A-null-null\",\"A-a-a\",\"A-a-a\"),Collections.singletonList(\"B-a-a\"),Arrays.asList(\"B-b-b\",\"B-b-b\"),Collections.singletonList(\"null-b-b\"),Collections.singletonList((String)null),null,Arrays.asList(\"C-null-null\",\"C-c-c\",\"C-c-c\"),Arrays.asList(\"C-null-null\",\"C-null-null\"),Collections.singletonList((String)null),null,Arrays.asList(\"null-d-d\",\"null-d-d\"),Collections.singletonList(\"D-d-d\"))@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testOuterOuter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<List<String>> expectedResult = Arrays.asList(null,null,null,Arrays.asList(\"A-null-null\",\"A-a-a\",\"A-a-a\"),Collections.singletonList(\"B-a-a\"),Arrays.asList(\"B-b-b\",\"B-b-b\"),Collections.singletonList(\"null-b-b\"),Arrays.asList((String)null,null),null,Arrays.asList(\"C-null-null\",\"C-c-c\",\"C-c-c\"),Arrays.asList(\"C-null-null\",\"C-null-null\"),Collections.singletonList((String)null),null,null,Arrays.asList(\"null-d-d\",\"null-d-d\",\"D-d-d\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "cacheEnabled@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
4->5 [style = solid, label="expectedResult"];
4->6 [style = bold, label=""];
2->14 [style = dotted, label="false"];
2->1 [style = bold, label=""];
14->10 [style = bold, label=""];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
2->10 [style = dotted, label="false"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
2->13 [style = bold, label=""];
1->13 [style = dashed, label="0"];
6->5 [style = bold, label=""];
12->2 [style = bold, label=""];
10->5 [style = bold, label=""];
3->12 [style = dashed, label="0"];
3->2 [style = bold, label=""];
2->1 [style = dotted, label="true"];
13->7 [style = bold, label=""];
2->7 [style = dotted, label="true"];
2->5 [style = dotted, label="false"];
2->14 [style = bold, label=""];
4->8 [style = dashed, label="0"];
2->8 [style = dotted, label="false"];
2->6 [style = dotted, label="false"];
9->3 [style = bold, label=""];
4->14 [style = dashed, label="0"];
2->4 [style = dotted, label="false"];
14->5 [style = solid, label="expectedResult"];
8->5 [style = solid, label="expectedResult"];
2->13 [style = dotted, label="true"];
2->8 [style = bold, label=""];
}
