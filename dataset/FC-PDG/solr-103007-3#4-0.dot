digraph {
8 [style = filled, label = "String xml_doc1 = \"<doc >\" + \" <field name=\"id\">1</field>\" + \" <field name=\"empty_s\"></field>\" + \" <field name=\"parent_s\">X</field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >2</field>\" + \" <field name=\"child_s\">y</field>\" + \" </doc>\" + \" <doc> \" + \" <field name=\"id\" >3</field>\" + \" <field name=\"child_s\">z</field>\" + \" </doc>\" + \" </field> \" + \"</doc>\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "UpdateRequest req = new UpdateRequest()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "XMLStreamReader parser2 = inputFactory.createXMLStreamReader(new StringReader(xml_doc2))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(document1.toString(),sdoc(\"id\",\"1\",\"empty_s\",\"\",\"parent_s\",\"X\",\"test\",sdocs(sdoc(\"id\",\"2\",\"child_s\",\"y\"),sdoc(\"id\",\"3\",\"child_s\",\"z\"))).toString())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "parser.next()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testXMLLabeledChildren['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "SolrInputDocument document1 = loader.readDoc(parser)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Collections.shuffle(docs,random())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testXMLMultiLevelLabeledChildren['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "req.add(docs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String xml_doc1 = \"<doc >\" + \" <field name=\"id\">1</field>\" + \" <field name=\"empty_s\"></field>\" + \" <field name=\"parent_s\">X</field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >2</field>\" + \" <field name=\"child_s\">y</field>\" + \" </doc>\" + \" <doc> \" + \" <field name=\"id\" >3</field>\" + \" <field name=\"child_s\">z</field>\" + \" </doc>\" + \" </field> \" + \"</doc>\"@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "requestWriter.write(req,os)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "XMLLoader loader = new XMLLoader()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertFalse(document1.hasChildDocuments())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String xml_doc2 = \"<doc >\" + \" <field name=\"id\">4</field>\" + \" <field name=\"parent_s\">A</field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >5</field>\" + \" <field name=\"child_s\">b</field>\" + \" </doc>\" + \" </field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >6</field>\" + \" <field name=\"child_s\">c</field>\" + \" </doc>\" + \" </field> \" + \"</doc>\"@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "List<SolrInputDocument> docs = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "docs.add(document2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertU(commit())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(document2.toString(),sdoc(\"id\",\"4\",\"parent_s\",\"A\",\"test\",sdocs(sdoc(\"id\",\"5\",\"child_s\",\"b\"),sdoc(\"id\",\"6\",\"child_s\",\"c\"))).toString())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testXMLMultiLevelLabeledChildren['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final SolrIndexSearcher searcher = getSearcher()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "XMLLoader loader = new XMLLoader()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "parser2.next()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RequestWriter requestWriter = new RequestWriter()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertBlockU(os.toString())@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String xml_doc2 = \"<doc >\" + \" <field name=\"id\">4</field>\" + \" <field name=\"parent_s\">A</field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >5</field>\" + \" <field name=\"child_s\">b</field>\" + \" <field name=\"grandChild\">\" + \" <doc> \" + \" <field name=\"id\" >7</field>\" + \" <field name=\"child_s\">d</field>\" + \" </doc>\" + \" </field>\" + \" </doc>\" + \" </field>\" + \" <field name=\"test\">\" + \" <doc> \" + \" <field name=\"id\" >6</field>\" + \" <field name=\"child_s\">c</field>\" + \" </doc>\" + \" </field> \" + \"</doc>\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(document2.hasChildDocuments())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "parser2.next()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(document1.toString(),sdoc(\"id\",\"1\",\"empty_s\",\"\",\"parent_s\",\"X\",\"test\",sdocs(sdoc(\"id\",\"2\",\"child_s\",\"y\"),sdoc(\"id\",\"3\",\"child_s\",\"z\"))).toString())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "parser.next()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertSingleParentOf(searcher,one(\"yz\"),\"X\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "XMLStreamReader parser = inputFactory.createXMLStreamReader(new StringReader(xml_doc1))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "OutputStream os = new ByteArrayOutputStream()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "docs.add(document1)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertSingleParentOf(searcher,one(\"bc\"),\"A\")@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "SolrInputDocument document2 = loader.readDoc(parser2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "XMLStreamReader parser = inputFactory.createXMLStreamReader(new StringReader(xml_doc1))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "SolrInputDocument document2 = loader.readDoc(parser2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->2 [style = bold, label=""];
9->19 [style = bold, label=""];
23->22 [style = bold, label=""];
31->30 [style = solid, label="docs"];
30->26 [style = bold, label=""];
16->28 [style = solid, label="document1"];
28->35 [style = bold, label=""];
26->36 [style = bold, label=""];
35->30 [style = bold, label=""];
36->15 [style = bold, label=""];
8->0 [style = bold, label=""];
0->7 [style = solid, label="xml_doc2"];
18->24 [style = bold, label=""];
32->35 [style = solid, label="document2"];
7->16 [style = bold, label=""];
22->27 [style = solid, label="req"];
24->17 [style = bold, label=""];
6->32 [style = dashed, label="0"];
31->26 [style = solid, label="docs"];
16->33 [style = bold, label=""];
31->18 [style = bold, label=""];
2->10 [style = bold, label=""];
27->37 [style = bold, label=""];
22->31 [style = bold, label=""];
11->6 [style = bold, label=""];
7->11 [style = bold, label=""];
0->1 [style = bold, label=""];
29->20 [style = solid, label="searcher"];
15->27 [style = bold, label=""];
19->25 [style = bold, label=""];
12->32 [style = bold, label=""];
20->21 [style = bold, label=""];
10->7 [style = bold, label=""];
25->28 [style = bold, label=""];
33->12 [style = bold, label=""];
37->34 [style = bold, label=""];
18->17 [style = solid, label="xml_doc1"];
17->16 [style = solid, label="parser"];
33->32 [style = solid, label="parser2"];
10->16 [style = dashed, label="0"];
9->25 [style = dashed, label="0"];
8->1 [style = solid, label="xml_doc1"];
12->3 [style = bold, label=""];
1->10 [style = solid, label="parser"];
4->9 [style = bold, label=""];
15->27 [style = solid, label="os"];
14->8 [style = bold, label=""];
6->12 [style = bold, label=""];
24->33 [style = solid, label="xml_doc2"];
34->29 [style = bold, label=""];
13->8 [style = bold, label=""];
32->4 [style = bold, label=""];
29->21 [style = solid, label="searcher"];
7->33 [style = dashed, label="0"];
3->4 [style = bold, label=""];
17->10 [style = bold, label=""];
7->6 [style = solid, label="parser2"];
29->20 [style = bold, label=""];
1->5 [style = bold, label=""];
}
