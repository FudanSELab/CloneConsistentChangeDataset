digraph {
13 [style = filled, label = "assertEquals(Optional.of(\"Git : dezentrale Versionsverwaltung im Team : Grundlagen und Workflows\"),entry.getField(StandardField.TITLE))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertEquals(Optional.of(\"Optical waveguides in Sn2P2S6 by low fluence MeV He+ ion implantation\"),second.getField(StandardField.TITLE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testImportEntriesBookExample['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Path file = Paths.get(.getResource(\"IsiImporterTestWOS.isi\").toURI())@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "assertEquals(Optional.of(\"Journal of Physics-condensed Matter\"),first.getField(StandardField.JOURNAL))@@@10@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testImportEntriesWOS['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "List<BibEntry> bibEntries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Path file = Paths.get(.getResource(\"Endnote.book.example.enw\").toURI())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(Optional.of(\"http://d-nb.info/107601965X\"),entry.getField(StandardField.URL))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(Optional.of(\"Optical and photoelectric spectroscopy of photorefractive Sn2P2S6 crystals\"),first.getField(StandardField.TITLE))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(Optional.of(\"3., aktualisierte und erweiterte Auflage\"),entry.getField(StandardField.EDITION))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testImportEntriesWOS['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(1,bibEntries.size())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Path file = Path.of(.getResource(\"IsiImporterTestWOS.isi\").toURI())@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "List<BibEntry> entries = importer.importDatabase(file,StandardCharsets.UTF_8).getDatabase().getEntries()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "BibEntry first = entries.get(0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(StandardEntryType.Book,entry.getType())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(Optional.of(\"2016\"),entry.getField(StandardField.YEAR))@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(Optional.of(\"XX, 327\"),entry.getField(StandardField.PAGES))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(Optional.of(\"Prei鐃緒申鐃緒申鐃緒申el, Ren鐃緒申鐃緒申鐃緒申 and Stachmann, Bj鐃緒申鐃緒申鐃緒申rn\"),entry.getField(StandardField.AUTHOR))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(2,entries.size())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "BibEntry second = entries.get(1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(Optional.of(\"Heidelberg\"),entry.getField(StandardField.ADDRESS))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertEquals(Optional.of(\"dpunkt.verlag\"),entry.getField(StandardField.PUBLISHER))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "BibEntry entry = bibEntries.get(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(Optional.of(\"Versionsverwaltung\"),entry.getField(StandardField.KEYWORDS))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->16 [style = bold, label=""];
18->24 [style = bold, label=""];
7->1 [style = bold, label=""];
20->13 [style = bold, label=""];
11->14 [style = bold, label=""];
4->6 [style = bold, label=""];
7->14 [style = dashed, label="0"];
25->18 [style = bold, label=""];
1->3 [style = bold, label=""];
9->10 [style = bold, label=""];
17->22 [style = bold, label=""];
2->4 [style = bold, label=""];
0->10 [style = dashed, label="0"];
8->7 [style = bold, label=""];
6->18 [style = dashed, label="0"];
13->17 [style = bold, label=""];
3->2 [style = bold, label=""];
5->0 [style = bold, label=""];
10->8 [style = bold, label=""];
21->11 [style = bold, label=""];
14->23 [style = bold, label=""];
0->21 [style = dashed, label="0"];
12->25 [style = bold, label=""];
15->20 [style = bold, label=""];
0->8 [style = bold, label=""];
8->11 [style = dashed, label="0"];
1->23 [style = dashed, label="0"];
16->12 [style = bold, label=""];
3->16 [style = dashed, label="0"];
24->15 [style = bold, label=""];
19->21 [style = bold, label=""];
}
