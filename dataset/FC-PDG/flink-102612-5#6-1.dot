digraph {
14 [style = filled, label = "expected.add(new Watermark(1500))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final long lateness = 500@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"SideOutput was not correct.\",lateExpected,(Iterable)testHarness.getSideOutput(lateOutputTag),new Tuple2ResultSortComparator())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1997))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.close()@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "testHarness.close()@@@29@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),2001))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "testHarness.processWatermark(new Watermark(7000))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1000))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),inputType.createSerializer(new ExecutionConfig()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testHarness.processWatermark(new Watermark(2300))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "ConcurrentLinkedQueue<Object> lateExpected = new ConcurrentLinkedQueue<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "expected.add(new Watermark(2999))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1980))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"SideOutput was not correct.\",sideExpected,(Iterable)testHarness.getSideOutput(lateOutputTag),new Tuple2ResultSortComparator())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "expected.add(new Watermark(7000))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ConcurrentLinkedQueue<Object> expected = new ConcurrentLinkedQueue<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final int windowSize = 2@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingEventTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new PassThroughWindowFunction<String,TimeWindow,Tuple2<String,Integer>>()),PurgingTrigger.of(EventTimeTrigger.create()),LATENESS,lateOutputTag)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple2<String,Integer>> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(operator,new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "expected.add(new Watermark(1999))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple2<>(\"key2\",2),1999))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingEventTimeWindows.of(Time.of(WINDOW_SIZE,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new PassThroughWindowFunction<String,TimeWindow,Tuple2<String,Integer>>()),EventTimeTrigger.create(),LATENESS,lateOutputTag)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "testHarness.processWatermark(new Watermark(3999))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "expected.add(new Watermark(3999))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "ConcurrentLinkedQueue<Object> sideExpected = new ConcurrentLinkedQueue<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testHarness.processWatermark(new Watermark(6000))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "expected.add(new Watermark(6000))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testHarness.processWatermark(new Watermark(1985))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "testSideOutputDueToLatenessTumbling['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expected.add(new Watermark(2300))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),500))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "final long LATENESS = 0@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "testHarness.processWatermark(new Watermark(2999))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final int WINDOW_SIZE = 2@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHarness.open()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.processWatermark(new Watermark(1500))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1300))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.processWatermark(new Watermark(1999))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),1999))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "final long LATENESS = 500@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "expected.add(new Watermark(1985))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "sideExpected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),1998))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "testLateness['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,testHarness.getOutput(),new Tuple2ResultSortComparator())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),3999))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "lateExpected.add(new StreamRecord<>(new Tuple2<>(\"key2\",1),1998))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple2<String,Integer>,TimeWindow> operator = new WindowOperator<>(TumblingEventTimeWindows.of(Time.of(windowSize,TimeUnit.SECONDS)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new PassThroughWindowFunction<String,TimeWindow,Tuple2<String,Integer>>()),PurgingTrigger.of(EventTimeTrigger.create()),lateness,lateOutputTag)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1998))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "testLateness['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
23->38 [style = dashed, label="0"];
18->3 [style = bold, label=""];
4->51 [style = dashed, label="0"];
6->35 [style = bold, label=""];
17->35 [style = dashed, label="0"];
22->29 [style = dashed, label="0"];
25->6 [style = bold, label=""];
30->29 [style = bold, label=""];
21->2 [style = bold, label=""];
38->50 [style = bold, label=""];
17->28 [style = dashed, label="0"];
0->14 [style = bold, label=""];
48->43 [style = bold, label=""];
2->15 [style = bold, label=""];
31->30 [style = bold, label=""];
2->36 [style = bold, label=""];
12->17 [style = solid, label="WINDOW_SIZE"];
12->22 [style = bold, label=""];
12->35 [style = solid, label="WINDOW_SIZE"];
24->26 [style = solid, label="lateExpected"];
22->25 [style = bold, label=""];
33->16 [style = bold, label=""];
28->18 [style = bold, label=""];
35->18 [style = bold, label=""];
24->48 [style = dashed, label="0"];
6->17 [style = solid, label="stateDesc"];
7->43 [style = dashed, label="0"];
7->0 [style = bold, label=""];
40->34 [style = bold, label=""];
12->30 [style = dashed, label="0"];
50->49 [style = bold, label=""];
26->27 [style = bold, label=""];
0->41 [style = dashed, label="0"];
47->2 [style = bold, label=""];
14->42 [style = dashed, label="0"];
11->8 [style = bold, label=""];
5->11 [style = bold, label=""];
39->25 [style = bold, label=""];
9->1 [style = bold, label=""];
1->19 [style = bold, label=""];
24->7 [style = bold, label=""];
51->33 [style = bold, label=""];
5->37 [style = dashed, label="0"];
37->47 [style = bold, label=""];
14->4 [style = bold, label=""];
6->17 [style = bold, label=""];
4->10 [style = bold, label=""];
39->35 [style = solid, label="LATENESS"];
49->37 [style = bold, label=""];
36->40 [style = bold, label=""];
13->24 [style = bold, label=""];
26->32 [style = dashed, label="0"];
17->18 [style = solid, label="operator"];
45->32 [style = bold, label=""];
13->48 [style = bold, label=""];
35->18 [style = solid, label="operator"];
16->23 [style = bold, label=""];
42->51 [style = bold, label=""];
11->47 [style = dashed, label="0"];
10->16 [style = bold, label=""];
22->17 [style = solid, label="LATENESS"];
29->28 [style = solid, label="lateness"];
32->44 [style = bold, label=""];
43->41 [style = bold, label=""];
12->39 [style = bold, label=""];
13->45 [style = solid, label="expected"];
19->21 [style = bold, label=""];
28->18 [style = solid, label="operator"];
46->12 [style = bold, label=""];
34->45 [style = bold, label=""];
6->28 [style = solid, label="stateDesc"];
29->25 [style = bold, label=""];
8->26 [style = bold, label=""];
10->33 [style = dashed, label="0"];
13->8 [style = solid, label="expected"];
15->5 [style = bold, label=""];
48->32 [style = solid, label="sideExpected"];
20->12 [style = bold, label=""];
22->39 [style = dashed, label="0"];
3->13 [style = bold, label=""];
30->28 [style = solid, label="windowSize"];
6->35 [style = solid, label="stateDesc"];
23->9 [style = bold, label=""];
17->18 [style = bold, label=""];
16->38 [style = bold, label=""];
6->28 [style = bold, label=""];
41->42 [style = bold, label=""];
}
