digraph {
10 [style = filled, label = "return new WorkerTaskManager(jsonMapper,new TestTaskRunner(new TaskToolboxFactory(taskConfig,null,taskActionClientFactory,null,null,null,null,null,null,null,notifierFactory,null,null,NoopJoinableFactory.INSTANCE,null,new SegmentLoaderFactory(null,jsonMapper),jsonMapper,indexIO,null,null,null,indexMergerV9,null,null,null,null,new NoopTestTaskReportFileWriter(),null,AuthTestUtils.TEST_AUTHORIZER_MAPPER,new NoopChatHandlerProvider(),testUtils.getRowIngestionMetersFactory(),new TestAppenderatorsManager(),new NoopIndexingServiceClient(),null,null,null),taskConfig,location),taskConfig,EasyMock.createNiceMock()){@Override protected void taskStarted(String taskId){}@Override protected void taskAnnouncementChanged(TaskAnnouncement announcement){}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "createTaskMonitor['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final SegmentLoaderConfig loaderConfig = new SegmentLoaderConfig(){@Override public List<StorageLocationConfig> getLocations(){return Collections.emptyList()}}@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "return new WorkerTaskManager(jsonMapper,new TestTaskRunner(new TaskToolboxFactory(taskConfig,null,taskActionClientFactory,null,null,null,null,null,null,null,notifierFactory,null,null,NoopJoinableFactory.INSTANCE,null,new SegmentLoaderFactory(null,jsonMapper),jsonMapper,indexIO,null,null,null,indexMergerV9,null,null,null,null,new NoopTestTaskReportFileWriter(),null),taskConfig,location),taskConfig,EasyMock.createNiceMock()){@Override protected void taskStarted(String taskId){}@Override protected void taskAnnouncementChanged(TaskAnnouncement announcement){}}@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "TaskActionClient taskActionClient = EasyMock.createNiceMock()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "EasyMock.replay(taskActionClientFactory,taskActionClient,notifierFactory)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createWorkerTaskManager['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "return new WorkerTaskMonitor(jsonMapper,new SingleTaskBackgroundRunner(new TaskToolboxFactory(taskConfig,null,taskActionClientFactory,null,null,null,null,null,null,null,notifierFactory,null,null,NoopJoinableFactory.INSTANCE,null,new SegmentLoaderFactory(null,jsonMapper),jsonMapper,indexIO,null,null,null,indexMergerV9,null,null,null,null,new NoopTestTaskReportFileWriter(),null),taskConfig,new NoopServiceEmitter(),DUMMY_NODE,new ServerConfig()),taskConfig,cf,workerCuratorCoordinator,EasyMock.createNiceMock())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "SegmentHandoffNotifierFactory notifierFactory = EasyMock.createNiceMock()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "createWorkerTaskManager['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final TaskConfig taskConfig = new TaskConfig(FileUtils.createTempDir().toString(),null,null,0,null,false,null,null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TaskConfig taskConfig = new TaskConfig(FileUtils.createTempDir().toString(),null,null,0,null,false,null,null,null)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expect(taskActionClientFactory.create(EasyMock.anyObject())).andReturn(taskActionClient).anyTimes()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TaskActionClientFactory taskActionClientFactory = EasyMock.createNiceMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->13 [style = dashed, label="0"];
8->10 [style = bold, label=""];
1->8 [style = bold, label=""];
11->13 [style = solid, label="taskConfig"];
6->4 [style = solid, label="taskActionClientFactory"];
7->8 [style = solid, label="taskActionClient"];
9->2 [style = bold, label=""];
6->10 [style = solid, label="taskActionClientFactory"];
2->6 [style = bold, label=""];
1->10 [style = solid, label="notifierFactory"];
11->6 [style = bold, label=""];
12->11 [style = bold, label=""];
7->0 [style = bold, label=""];
1->4 [style = solid, label="notifierFactory"];
2->10 [style = solid, label="taskConfig"];
6->13 [style = solid, label="taskActionClientFactory"];
8->5 [style = bold, label=""];
3->2 [style = bold, label=""];
5->10 [style = dashed, label="0"];
0->1 [style = bold, label=""];
5->4 [style = bold, label=""];
2->4 [style = solid, label="taskConfig"];
2->11 [style = dashed, label="0"];
1->13 [style = solid, label="notifierFactory"];
6->7 [style = bold, label=""];
6->8 [style = solid, label="taskActionClientFactory"];
1->8 [style = solid, label="notifierFactory"];
8->13 [style = bold, label=""];
}
