digraph {
13 [style = filled, label = "ByteArrayOutputStream baos = new ByteArrayOutputStream()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "PowerMockito.mockStatic()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "getDataTypeShouldReturnGemfireEnum['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "DataOutputStream out = new DataOutputStream(baos)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "out.writeByte(DSCODE.USER_CLASS.toByte())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "DataSerializer.writeString(DSCODE.GEMFIRE_ENUM.name(),out)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "getDataTypeShouldReturnUserClass['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "byte(( bytes = baos.toByteArray()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "out.writeByte(DSCODE.GEMFIRE_ENUM.toByte())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "getDataTypeShouldReturnGemfireEnum['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "byte someUserClassId = 1@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "out.writeByte(someUserClassId)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String type = DataType.getDataType(bytes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(type).isEqualTo(\"DataSerializer: with Id:\" + someUserClassId)@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "byte(( bytes = baos.toByteArray()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "when(DataSerializer.readString(any())).thenReturn(\"GEMFIRE_ENUM\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = bold, label=""];
15->7 [style = solid, label="bytes"];
7->1 [style = bold, label=""];
9->0 [style = bold, label=""];
15->7 [style = bold, label=""];
0->7 [style = solid, label="bytes"];
2->9 [style = solid, label="out"];
4->2 [style = bold, label=""];
8->2 [style = dashed, label="0"];
11->15 [style = bold, label=""];
0->7 [style = bold, label=""];
8->0 [style = bold, label=""];
3->5 [style = bold, label=""];
14->11 [style = solid, label="someUserClassId"];
5->4 [style = bold, label=""];
12->14 [style = bold, label=""];
8->9 [style = bold, label=""];
14->1 [style = solid, label="someUserClassId"];
4->2 [style = solid, label="baos"];
10->4 [style = bold, label=""];
14->13 [style = bold, label=""];
13->4 [style = solid, label="baos"];
2->11 [style = bold, label=""];
2->8 [style = bold, label=""];
13->4 [style = bold, label=""];
}
