digraph {
6 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "DefaultKeyedValue v2 = (DefaultKeyedValue)v1.clone()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(v1.equals(v2))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(v1 != v2)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "v1.addValue(\"V2\",null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "DefaultKeyedValues v2 = (DefaultKeyedValues)v1.clone()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "v2.setValue(\"V1\",new Integer(44))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "v1.addValue(\"V1\",new Integer(1))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",new Double(45.5))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertTrue(v1.getClass() == v2.getClass())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "v1.addValue(\"V3\",new Integer(3))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "DefaultKeyedValue v1 = new DefaultKeyedValue(\"Test\",45.5)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "DefaultKeyedValues v1 = new DefaultKeyedValues()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertTrue(v1.equals(v2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertTrue(v1 != v2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCloning['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "v2.setValue(12.3)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14->16 [style = bold, label=""];
16->11 [style = bold, label=""];
15->14 [style = bold, label=""];
1->14 [style = dashed, label="0"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
12->4 [style = solid, label="v2"];
7->5 [style = solid, label="v2"];
1->9 [style = dashed, label="0"];
7->0 [style = solid, label="v2"];
7->0 [style = bold, label=""];
5->18 [style = bold, label=""];
1->0 [style = solid, label="v1"];
9->7 [style = bold, label=""];
9->0 [style = solid, label="v1"];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
12->19 [style = solid, label="v2"];
14->4 [style = solid, label="v1"];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
13->19 [style = bold, label=""];
17->12 [style = bold, label=""];
10->5 [style = bold, label=""];
12->4 [style = bold, label=""];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
12->18 [style = solid, label="v2"];
11->17 [style = bold, label=""];
4->10 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
4->5 [style = bold, label=""];
7->3 [style = solid, label="v2"];
}
