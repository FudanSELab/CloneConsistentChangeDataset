digraph {
5 [style = filled, label = "ScanResultValue s1 = new ScanResultValue(\"segmentId\",Collections.singletonList(ColumnHolder.TIME_COLUMN_NAME),events1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "event1.put(ColumnHolder.TIME_COLUMN_NAME,new Long(42))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testAscendingCompactedList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ScanQuery query = Druids.newScanQueryBuilder().order(ScanQuery.Order.ASCENDING).resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_COMPACTED_LIST).dataSource(\"some src\").intervals(intervalSpec).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "ScanResultValue s2 = new ScanResultValue(\"segmentId\",Collections.singletonList(ColumnHolder.TIME_COLUMN_NAME),events2)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ScanResultValue s2 = new ScanResultValue(\"segmentId\",Collections.singletonList(ColumnHolder.TIME_COLUMN_NAME),events2)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "events1.add(event1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "events1.add(event1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "event2.put(ColumnHolder.TIME_COLUMN_NAME,new Long(43))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "List<List<Object>> events1 = new ArrayList<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testAscendingCompactedList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "List<Object> event1 = Collections.singletonList(new Long(42))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(-1,comparator.compare(s1,s2))@@@13@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "testComparisonDescendingList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "HashMap<String,Object> event2 = new HashMap<>()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assert.assertEquals(-1,comparator.compare(s1,s2))@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "HashMap<String,Object> event1 = new HashMap<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ArrayList<HashMap<String,Object>> events2 = new ArrayList<>()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "ScanQuery query = Druids.newScanQueryBuilder().order(ScanQuery.Order.DESCENDING).resultFormat(ScanQuery.ResultFormat.RESULT_FORMAT_LIST).dataSource(\"some src\").intervals(intervalSpec).build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "events2.add(event2)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "List<Object> event2 = Collections.singletonList(new Long(43))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "events2.add(event2)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ArrayList<HashMap<String,Object>> events1 = new ArrayList<>()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ScanResultValueTimestampComparator comparator = new ScanResultValueTimestampComparator(query)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->14 [style = bold, label=""];
20->23 [style = bold, label=""];
20->11 [style = solid, label="event1"];
3->17 [style = dashed, label="0"];
4->7 [style = bold, label=""];
18->20 [style = bold, label=""];
8->18 [style = dashed, label="0"];
14->16 [style = bold, label=""];
5->14 [style = dashed, label="0"];
8->4 [style = bold, label=""];
11->3 [style = solid, label="s1"];
5->1 [style = bold, label=""];
14->19 [style = solid, label="events2"];
22->3 [style = bold, label=""];
21->10 [style = solid, label="query"];
9->3 [style = bold, label=""];
16->3 [style = solid, label="event2"];
11->12 [style = solid, label="s1"];
10->8 [style = bold, label=""];
9->12 [style = solid, label="s2"];
15->21 [style = bold, label=""];
2->10 [style = bold, label=""];
23->11 [style = bold, label=""];
16->22 [style = bold, label=""];
7->11 [style = bold, label=""];
1->6 [style = bold, label=""];
21->10 [style = bold, label=""];
10->18 [style = bold, label=""];
6->9 [style = bold, label=""];
4->7 [style = solid, label="event1"];
8->11 [style = solid, label="events1"];
9->3 [style = solid, label="s2"];
5->9 [style = solid, label="events2"];
2->10 [style = solid, label="query"];
19->17 [style = bold, label=""];
3->19 [style = bold, label=""];
1->16 [style = dashed, label="0"];
2->21 [style = dashed, label="0"];
4->20 [style = dashed, label="0"];
0->2 [style = bold, label=""];
1->6 [style = solid, label="event2"];
13->2 [style = bold, label=""];
3->12 [style = dashed, label="0"];
5->17 [style = solid, label="s1"];
11->5 [style = bold, label=""];
9->12 [style = bold, label=""];
19->17 [style = solid, label="s2"];
18->5 [style = solid, label="events1"];
}
