digraph {
8 [style = filled, label = "BitSet o = closure.get(pos)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "o.or(computeClosure(i))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "i = b.nextSetBit(i + 1)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "o = (BitSet)b.clone()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "computeClosure['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "computeClosure['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i >= 0@@@18@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "int i = b.nextSetBit(pos + 1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "return o@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "i = b.nextSetBit(i + 1)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "o = b@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "i >= 0@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "closure.put(i,o)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "BitSet b = equivalence.get(pos)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "i = o.nextSetBit(pos + 1)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "closure.put(pos,o)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return o@@@22@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "BitSet b = requireNonNull(equivalence.get(pos),null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "o = o.union(computeClosure(i))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "o != null@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "final ImmutableBitSet b = equivalence.get(pos)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int pos@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "computeClosure['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "ImmutableBitSet o = closure.get(pos)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int pos@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2->23 [style = dashed, label="0"];
0->3 [style = bold, label=""];
13->9 [style = solid, label="i"];
14->13 [style = solid, label="i"];
9->12 [style = dotted, label="true"];
5->16 [style = solid, label="i"];
11->20 [style = dashed, label="0"];
17->1 [style = bold, label=""];
11->2 [style = solid, label="pos"];
8->3 [style = solid, label="o"];
21->0 [style = bold, label=""];
20->4 [style = solid, label="pos"];
21->3 [style = solid, label="o"];
16->10 [style = bold, label=""];
2->1 [style = bold, label=""];
0->17 [style = bold, label=""];
9->4 [style = bold, label=""];
0->2 [style = bold, label=""];
24->4 [style = solid, label="o"];
16->7 [style = bold, label=""];
22->21 [style = bold, label=""];
1->10 [style = solid, label="o"];
14->12 [style = solid, label="i"];
8->21 [style = dashed, label="0"];
2->17 [style = dashed, label="0"];
8->0 [style = solid, label="o"];
10->6 [style = bold, label=""];
16->10 [style = dotted, label="true"];
23->24 [style = solid, label="b"];
13->12 [style = solid, label="i"];
24->10 [style = solid, label="o"];
21->0 [style = solid, label="o"];
24->14 [style = bold, label=""];
14->9 [style = solid, label="i"];
8->0 [style = bold, label=""];
5->16 [style = bold, label=""];
11->4 [style = solid, label="pos"];
19->7 [style = solid, label="o"];
12->13 [style = bold, label=""];
18->11 [style = dotted, label="true"];
3->23 [style = bold, label=""];
23->24 [style = bold, label=""];
9->19 [style = dotted, label="true"];
22->20 [style = dotted, label="true"];
13->19 [style = solid, label="i"];
0->23 [style = bold, label=""];
11->5 [style = solid, label="pos"];
20->21 [style = solid, label="pos"];
3->2 [style = bold, label=""];
19->13 [style = bold, label=""];
11->17 [style = solid, label="pos"];
14->19 [style = solid, label="i"];
6->16 [style = bold, label=""];
1->24 [style = dashed, label="0"];
12->19 [style = dashed, label="0"];
9->13 [style = dotted, label="true"];
6->10 [style = solid, label="i"];
11->14 [style = solid, label="pos"];
15->11 [style = dotted, label="true"];
19->10 [style = solid, label="o"];
9->19 [style = bold, label=""];
3->17 [style = bold, label=""];
14->9 [style = bold, label=""];
1->7 [style = solid, label="o"];
1->14 [style = bold, label=""];
20->5 [style = solid, label="pos"];
9->12 [style = bold, label=""];
13->9 [style = bold, label=""];
18->8 [style = bold, label=""];
20->14 [style = solid, label="pos"];
11->8 [style = solid, label="pos"];
0->3 [style = dotted, label="true"];
20->23 [style = solid, label="pos"];
5->10 [style = solid, label="i"];
5->6 [style = solid, label="i"];
19->4 [style = solid, label="o"];
4->5 [style = bold, label=""];
15->8 [style = bold, label=""];
24->7 [style = solid, label="o"];
16->6 [style = dotted, label="true"];
1->4 [style = solid, label="o"];
6->16 [style = solid, label="i"];
}
