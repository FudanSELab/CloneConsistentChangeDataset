digraph {
9 [style = filled, label = "assertFalse(schema.getField(\"id\").multiValued())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final String dateClass = RANDOMIZED_NUMERIC_FIELDTYPES.get()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "assertTrue(schema.isDynamicField(\"aaa_i\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "!usingPoints@@@13@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "String expectedDefinition = \"<fieldtype name=\"tdatedv\" class=\"\" + dateClass + \"\" \" + \"precisionStep=\"6\" docValues=\"true\" multiValued=\"true\"/>\"@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "IndexSchema schema = core.getLatestSchema()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(schema.isDynamicField(\"id\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(\"Expecting a field type defined as \" + expectedDefinition,(usingPoints? : ).isInstance(tdatedv))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "testIsDynamicField['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(\"Expecting a field type defined as \" + expectedDefinition,tdatedv.isMultiValued())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertTrue(\"Expecting a field type defined as \" + expectedDefinition,tdatedv.isMultiValued())@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SolrCore core = h.getCore()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "String expectedDefinition = \"<fieldtype name=\"tdatedv\" class=\"solr.TrieDateField\" \" + \"precisionStep=\"6\" docValues=\"true\" multiValued=\"true\"/>\"@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final boolean usingPoints = Boolean.getBoolean(NUMERIC_POINTS_SYSPROP)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "FieldType tdatedv = schema.getFieldType(\"foo_tdtdvs\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(\"Expecting a field type defined as \" + expectedDefinition,tdatedv instanceof TrieDateField)@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "assertTrue(\"Expecting a field type defined as \" + expectedDefinition,tdatedv.hasProperty(FieldProperties.DOC_VALUES))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(schema.isDynamicField(\"no_such_field\"))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "FieldType tdatedv = schema.getFieldType(\"foo_tdtdvs\")@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"Expecting a field type defined as \" + expectedDefinition,6,((TrieDateField)tdatedv).getPrecisionStep())@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
11->16 [style = bold, label=""];
0->4 [style = solid, label="expectedDefinition"];
9->0 [style = bold, label=""];
9->11 [style = bold, label=""];
15->14 [style = bold, label=""];
17->15 [style = solid, label="expectedDefinition"];
19->20 [style = bold, label=""];
1->15 [style = bold, label=""];
14->10 [style = bold, label=""];
6->19 [style = bold, label=""];
16->17 [style = bold, label=""];
0->8 [style = solid, label="expectedDefinition"];
17->1 [style = solid, label="expectedDefinition"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
3->2 [style = solid, label="tdatedv"];
14->10 [style = dotted, label="true"];
17->10 [style = solid, label="expectedDefinition"];
20->21 [style = bold, label=""];
0->1 [style = solid, label="expectedDefinition"];
9->19 [style = dashed, label="0"];
8->1 [style = bold, label=""];
2->12 [style = dashed, label="0"];
11->17 [style = solid, label="dateClass"];
3->2 [style = bold, label=""];
13->7 [style = bold, label=""];
0->2 [style = solid, label="expectedDefinition"];
7->6 [style = bold, label=""];
4->12 [style = solid, label="tdatedv"];
4->12 [style = bold, label=""];
4->8 [style = bold, label=""];
5->7 [style = bold, label=""];
17->12 [style = solid, label="expectedDefinition"];
6->9 [style = bold, label=""];
18->7 [style = bold, label=""];
17->4 [style = bold, label=""];
}
