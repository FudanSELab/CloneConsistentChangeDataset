digraph {
11 [style = filled, label = "store.init((StateStoreContext)context,store)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final JmxReporter reporter = new JmxReporter()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final MetricsContext metricsContext = new KafkaMetricsContext(\"kafka.streams\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "StreamsConfig.METRICS_0100_TO_24.equals(builtInMetricsVersion)@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final JmxReporter reporter = new JmxReporter()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "StreamsConfig.METRICS_0100_TO_24.equals(builtInMetricsVersion)@@@9@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=%s,%s=%s,task-id=%s,%s-state-id=%s\",storeLevelGroup,threadIdTagKey,threadId,context.taskId().toString(),STORE_TYPE,STORE_NAME)))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "replay(innerStoreMock)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=%s,%s=%s,task-id=%s,%s-state-id=%s\",STORE_LEVEL_GROUP,THREAD_ID_TAG_KEY,threadId,taskId.toString(),STORE_TYPE,STORE_NAME)))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "init()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "reporter.contextChange(metricsContext)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "testMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "testMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "metrics.addReporter(reporter)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertTrue(reporter.containsMbean(String.format(\"kafka.streams:type=%s,%s=%s,task-id=%s,%s-state-id=%s\",storeLevelGroup,threadIdTagKey,threadId,context.taskId().toString(),STORE_TYPE,ROLLUP_VALUE)))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
6->3 [style = bold, label=""];
5->8 [style = bold, label=""];
0->12 [style = dotted, label="true"];
7->10 [style = bold, label=""];
0->12 [style = bold, label=""];
9->4 [style = bold, label=""];
5->6 [style = solid, label="reporter"];
8->7 [style = solid, label="metricsContext"];
0->12 [style = dashed, label="0"];
6->14 [style = dashed, label="0"];
2->4 [style = bold, label=""];
3->0 [style = bold, label=""];
8->7 [style = bold, label=""];
6->10 [style = dashed, label="0"];
6->14 [style = bold, label=""];
11->5 [style = bold, label=""];
15->11 [style = bold, label=""];
14->0 [style = bold, label=""];
4->15 [style = dashed, label="0"];
5->8 [style = solid, label="metricsContext"];
7->6 [style = bold, label=""];
3->0 [style = dotted, label="true"];
1->7 [style = solid, label="reporter"];
4->1 [style = bold, label=""];
13->15 [style = bold, label=""];
}
