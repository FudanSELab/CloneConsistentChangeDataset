digraph {
1 [style = filled, label = "JobSpec jobSpec = new JobSpec(new URI(\"uri\"),\"0.0\",\"test job spec\",ConfigUtils.propertiesToConfig(properties),properties,Optional.absent())@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "AzkabanProjectConfig azkabanProjectConfig = new AzkabanProjectConfig(jobSpec)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String expectedZipFileName = \"randomPrefix_http___localhost_8000_context.zip\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testProjectZipFileName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "properties.setProperty(\"gobblin.service.azkaban.project.namePrefix\",\"randomPrefix\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testProjectNameDefault['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertEquals(actualProjectName,expectedProjectName)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Properties properties = new Properties()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String actualZipFileName = azkabanProjectConfig.getAzkabanProjectZipFilename()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "AzkabanProjectConfig azkabanProjectConfig = new AzkabanProjectConfig(jobSpec)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "JobSpec jobSpec = new JobSpec(new URI(\"uri\"),\"0.0\",\"test job spec\",ConfigUtils.propertiesToConfig(properties),properties,Optional.absent(),Collections.EMPTY_MAP)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "testProjectNameDefault['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "JobSpec jobSpec = new JobSpec(new URI(\"http://localhost:8000/context\"),\"0.0\",\"test job spec\",ConfigUtils.propertiesToConfig(properties),properties,Optional.absent())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "String expectedProjectName = \"GobblinService__uri\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(actualZipFileName,expectedZipFileName)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11->13 [style = solid, label="expectedZipFileName"];
3->7 [style = solid, label="properties"];
6->3 [style = bold, label=""];
9->0 [style = bold, label=""];
10->13 [style = solid, label="actualZipFileName"];
3->1 [style = bold, label=""];
3->9 [style = solid, label="properties"];
6->11 [style = dashed, label="0"];
1->2 [style = solid, label="jobSpec"];
3->1 [style = solid, label="properties"];
8->6 [style = bold, label=""];
3->12 [style = bold, label=""];
9->0 [style = solid, label="jobSpec"];
12->9 [style = bold, label=""];
0->10 [style = dashed, label="0"];
0->4 [style = solid, label="actualProjectName"];
0->10 [style = bold, label=""];
2->0 [style = bold, label=""];
5->6 [style = bold, label=""];
10->13 [style = bold, label=""];
3->7 [style = bold, label=""];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
7->2 [style = bold, label=""];
7->2 [style = solid, label="jobSpec"];
6->4 [style = solid, label="expectedProjectName"];
1->2 [style = bold, label=""];
1->7 [style = dashed, label="0"];
4->13 [style = dashed, label="0"];
14->11 [style = bold, label=""];
}
