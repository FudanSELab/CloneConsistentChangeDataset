digraph {
5 [style = filled, label = "getAccessLevelWhenTokenIsNotValidShouldThrowException['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "getAccessLevelWhenTokenIsNotValidShouldThrowException['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "this.thrown.expect(AuthorizationExceptionMatcher.withReason(Reason.INVALID_TOKEN))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "getAccessLevelWhenCloudControllerIsNotReachableThrowsException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "this.securityService.getAccessLevel(\"my-access-token\",\"my-app-id\")@@@5@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.server.expect(requestTo(CLOUD_CONTROLLER_PERMISSIONS)).andExpect(header(\"Authorization\",\"bearer my-access-token\")).andRespond(withServerError())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThatExceptionOfType().isThrownBy(null).satisfies(reasonRequirement(Reason.INVALID_TOKEN))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "this.thrown.expect(AuthorizationExceptionMatcher.withReason(Reason.SERVICE_UNAVAILABLE))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "this.server.expect(requestTo(CLOUD_CONTROLLER_PERMISSIONS)).andExpect(header(\"Authorization\",\"bearer my-access-token\")).andRespond(withUnauthorizedRequest())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->1 [style = bold, label=""];
0->8 [style = dashed, label="0"];
5->2 [style = bold, label=""];
2->0 [style = bold, label=""];
0->4 [style = dashed, label="0"];
3->2 [style = bold, label=""];
6->7 [style = bold, label=""];
2->7 [style = dashed, label="0"];
7->8 [style = bold, label=""];
2->4 [style = bold, label=""];
0->1 [style = bold, label=""];
}
