digraph {
29 [style = filled, label = "shouldPunctuateActiveTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "final List<TopicPartition> assignedPartitions = new ArrayList<>()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "clientSupplier.consumer.updateBeginningOffsets(Collections.singletonMap(t1p1,0L))@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(2,peekedContextTime.size())@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "shouldPunctuateActiveTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> activeTasks = new HashMap<>()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "thread.rebalanceListener().onPartitionsRevoked(Collections.emptySet())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "internalStreamsBuilder.buildAndOptimizeTopology()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "final List<TopicPartition> assignedPartitions = new ArrayList<>()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "final StreamThread thread = createStreamThread(CLIENT_ID,config,false)@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(110L,peekedContextTime.get(1).longValue())@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "clientSupplier.consumer.addRecord(new ConsumerRecord<>(topic1,1,100L,100L,TimestampType.CREATE_TIME,\"K\".getBytes().length,\"V\".getBytes().length,\"K\".getBytes(),\"V\".getBytes(),new RecordHeaders(),Optional.empty()))@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "clientSupplier.consumer.assign(assignedPartitions)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "shouldPunctuateWithTimestampPreservedInProcessorContext['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "activeTasks.put(task1,Collections.singleton(t1p1))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final org.apache.kafka.streams.processor.ProcessorSupplier<Object,Object> peekProcessor = null@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "clientSupplier.consumer.assign(assignedPartitions)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "thread.rebalanceListener().onPartitionsRevoked(Collections.emptySet())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final long currTime = mockTime.milliseconds()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "final org.apache.kafka.streams.processor.ProcessorSupplier<Object,Object> punctuateProcessor = null@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "thread.runOnce()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "internalStreamsBuilder.stream(Collections.singleton(topic1),consumed).transform(punctuateProcessor).process(peekProcessor)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "mockTime.sleep(100L)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final org.apache.kafka.streams.kstream.TransformerSupplier<Object,Object,KeyValue<Object,Object>> punctuateProcessor = null@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "thread.runOnce()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "thread.taskManager().handleAssignment(activeTasks,emptyMap())@@@32@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(currTime + 100L,peekedContextTime.get(0).longValue())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "final List<Long> peekedContextTime = new ArrayList<>()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assignedPartitions.add(t1p1)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "final List<Long> punctuatedStreamTime = new ArrayList<>()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "thread.rebalanceListener().onPartitionsAssigned(assignedPartitions)@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "activeTasks.put(task1,Collections.singleton(t1p1))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(0,peekedContextTime.size())@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "thread.runOnce()@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "thread.taskManager().handleAssignment(activeTasks,emptyMap())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final Map<TaskId,Set<TopicPartition>> activeTasks = new HashMap<>()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "clientSupplier.consumer.addRecord(new ConsumerRecord<>(topic1,1,110L,110L,TimestampType.CREATE_TIME,ConsumerRecord.NULL_CHECKSUM,\"K\".getBytes().length,\"V\".getBytes().length,\"K\".getBytes(),\"V\".getBytes()))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assignedPartitions.add(t1p1)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "thread.setState(StreamThread.State.STARTING)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "thread.setState(StreamThread.State.STARTING)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "internalStreamsBuilder.stream(Collections.singleton(topic1),consumed).process(punctuateProcessor)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(2,punctuatedWallClockTime.size())@@@38@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,peekedContextTime.size())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "final List<Long> punctuatedWallClockTime = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36->43 [style = bold, label=""];
21->10 [style = bold, label=""];
28->6 [style = bold, label=""];
15->12 [style = dashed, label="0"];
35->41 [style = bold, label=""];
20->26 [style = bold, label=""];
26->5 [style = bold, label=""];
2->35 [style = dashed, label="0"];
31->32 [style = bold, label=""];
19->20 [style = bold, label=""];
39->34 [style = bold, label=""];
25->9 [style = bold, label=""];
3->14 [style = bold, label=""];
18->11 [style = bold, label=""];
24->28 [style = solid, label="assignedPartitions"];
22->21 [style = bold, label=""];
25->20 [style = solid, label="assignedPartitions"];
38->23 [style = bold, label=""];
14->19 [style = bold, label=""];
9->19 [style = solid, label="activeTasks"];
4->18 [style = bold, label=""];
42->31 [style = bold, label=""];
2->40 [style = bold, label=""];
8->1 [style = solid, label="punctuateProcessor"];
17->42 [style = bold, label=""];
27->22 [style = bold, label=""];
10->7 [style = bold, label=""];
32->26 [style = bold, label=""];
22->30 [style = bold, label=""];
1->23 [style = bold, label=""];
29->18 [style = bold, label=""];
21->30 [style = dashed, label="0"];
2->16 [style = bold, label=""];
37->5 [style = bold, label=""];
8->1 [style = bold, label=""];
12->2 [style = bold, label=""];
15->21 [style = solid, label="activeTasks"];
16->41 [style = dashed, label="0"];
7->28 [style = bold, label=""];
40->36 [style = bold, label=""];
0->25 [style = bold, label=""];
28->43 [style = dashed, label="0"];
5->24 [style = bold, label=""];
30->10 [style = bold, label=""];
17->42 [style = solid, label="peekProcessor"];
9->3 [style = bold, label=""];
11->8 [style = bold, label=""];
23->17 [style = bold, label=""];
26->37 [style = bold, label=""];
33->38 [style = bold, label=""];
17->13 [style = bold, label=""];
24->10 [style = solid, label="assignedPartitions"];
34->35 [style = bold, label=""];
25->5 [style = solid, label="assignedPartitions"];
15->27 [style = bold, label=""];
43->39 [style = bold, label=""];
32->43 [style = solid, label="currTime"];
7->36 [style = dashed, label="0"];
13->0 [style = bold, label=""];
24->15 [style = bold, label=""];
6->12 [style = bold, label=""];
}
