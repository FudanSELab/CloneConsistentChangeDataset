digraph {
61 [style = filled, label = "testActualPipelineProcessorWithFalseConditional['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "IngestService ingestService = createIngestService()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testActualPipelineProcessorWithTrueConditional['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "CompoundProcessor trackingProcessor = decorate(actualProcessor,null,resultList)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key3))@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertThat(resultList.get(0).getProcessorTag(),equalTo(\"pipeline0\"))@@@44@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key2))@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
45 [style = filled, label = "assertThat(resultList.get(4).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@55@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertTrue(resultList.get(3).getIngestDocument().hasField(key2))@@@53@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
51 [style = filled, label = "assertThat(resultList.get(2).getConditionalWithResult().v2(),is(Boolean.TRUE))@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Map<String,Object> pipelineConfig2 = new HashMap<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument)@@@37@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "SimulateProcessorResult expectedResult = new SimulateProcessorResult(actualProcessor.getType(),actualProcessor.getTag(),actualProcessor.getDescription(),ingestDocument,null)@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "Pipeline pipeline2 = new Pipeline(pipelineId2,null,null,new CompoundProcessor(new TestProcessor(null)))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testActualPipelineProcessorWithTrueConditional['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "String key3 = randomAlphaOfLength(10)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertNull(resultList.get(0).getConditionalWithResult())@@@42@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "when(ingestService.getPipeline(pipelineId2)).thenReturn(pipeline2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "CompoundProcessor actualProcessor = new CompoundProcessor(pipelineProcessor)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "pipelineConfig1.put(\"name\",pipelineId1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertThat(resultList.get(2).getType(),equalTo(\"pipeline\"))@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "assertThat(resultList.get(0).getType(),equalTo(\"pipeline\"))@@@43@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "pipelineConfig0.put(\"name\",pipelineId1)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "assertThat(resultList.size(),equalTo(2))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(resultList.size(),equalTo(3))@@@41@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "Map<String,Object> pipelineConfig0 = new HashMap<>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(resultList.get(1).getFailure(),nullValue())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "verify(ingestService,Mockito.atLeast(1)).getPipeline(pipelineId2)@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Pipeline pipeline1 = new Pipeline(pipelineId1,null,null,new CompoundProcessor(new TestProcessor(null),new ConditionalProcessor(randomAlphaOfLength(10),null,new Script(ScriptType.INLINE,Script.DEFAULT_SCRIPT_LANG,scriptName,Collections.emptyMap()),scriptService,factory.create(Collections.emptyMap(),null,null,pipelineConfig2)),new TestProcessor(null)))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertThat(resultList.get(1).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(resultList.get(0).getIngestDocument().hasField(key1))@@@42@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(resultList.get(2).getIngestDocument(),equalTo(expectedResult.getIngestDocument()))@@@48@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),\"pipeline0\",null,pipelineConfig0)@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "verify(ingestService,Mockito.never()).getPipeline(pipelineId2)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key3))@@@44@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "String scriptName = \"conditionalScript\"@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertThat(resultList.size(),equalTo(5))@@@41@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertTrue(resultList.get(3).getIngestDocument().hasField(key1))@@@52@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Map<String,Object> pipelineConfig1 = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key2))@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key1))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "when(ingestService.getPipeline(pipelineId1)).thenReturn(pipeline1)@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertTrue(resultList.get(1).getIngestDocument().hasField(key3))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "verify(ingestService,Mockito.atLeast(1)).getPipeline(pipelineId1)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "PipelineProcessor.Factory factory = new PipelineProcessor.Factory(ingestService)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ScriptService scriptService = new ScriptService(Settings.builder().build(),Collections.singletonMap(Script.DEFAULT_SCRIPT_LANG,new MockScriptEngine(Script.DEFAULT_SCRIPT_LANG,Collections.singletonMap(scriptName,null),Collections.emptyMap())),new HashMap<>(ScriptModule.CORE_CONTEXTS))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(resultList.get(2).getFailure(),nullValue())@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "String key2 = randomAlphaOfLength(10)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertFalse(resultList.get(3).getIngestDocument().hasField(key3))@@@54@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
64 [style = filled, label = "assertThat(resultList.get(1).getProcessorTag(),nullValue())@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "String pipelineId2 = \"pipeline2\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "pipelineConfig2.put(\"name\",pipelineId2)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "PipelineProcessor pipelineProcessor = factory.create(Collections.emptyMap(),null,null,pipelineConfig0)@@@31@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String pipelineId1 = \"pipeline1\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(resultList.get(2).getConditionalWithResult().v1(),equalTo(scriptName))@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "expectedResult.getIngestDocument().getIngestMetadata().put(\"pipeline\",pipelineId1)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertFalse(resultList.get(0).getIngestDocument().hasField(key2))@@@43@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "ScriptService scriptService = new ScriptService(Settings.builder().build(),Collections.singletonMap(Script.DEFAULT_SCRIPT_LANG,new MockScriptEngine(Script.DEFAULT_SCRIPT_LANG,Collections.singletonMap(scriptName,null),Collections.emptyMap())),new HashMap<>(ScriptModule.CORE_CONTEXTS))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "String key1 = randomAlphaOfLength(10)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(resultList.get(2).getProcessorTag(),nullValue())@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "assertThat(resultList.get(4).getFailure(),nullValue())@@@56@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "trackingProcessor.execute(ingestDocument,null)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertFalse(resultList.get(1).getIngestDocument().hasField(key2))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(resultList.get(4).getProcessorTag(),nullValue())@@@57@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertThat(resultList.get(2).getProcessorTag(),equalTo(\"pipeline1\"))@@@51@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4->51 [style = dashed, label="0"];
21->48 [style = solid, label="pipelineConfig0"];
48->3 [style = bold, label=""];
24->30 [style = solid, label="pipelineId1"];
43->55 [style = bold, label=""];
37->27 [style = bold, label=""];
20->26 [style = bold, label=""];
38->51 [style = bold, label=""];
11->29 [style = bold, label=""];
10->26 [style = solid, label="scriptName"];
63->56 [style = bold, label=""];
59->62 [style = bold, label=""];
31->1 [style = bold, label=""];
48->3 [style = solid, label="pipelineProcessor"];
21->30 [style = bold, label=""];
12->26 [style = solid, label="pipelineConfig2"];
1->13 [style = bold, label=""];
7->56 [style = dashed, label="0"];
26->11 [style = bold, label=""];
25->44 [style = bold, label=""];
25->31 [style = bold, label=""];
53->27 [style = bold, label=""];
15->38 [style = dashed, label="0"];
23->33 [style = bold, label=""];
34->24 [style = bold, label=""];
15->59 [style = dashed, label="0"];
0->25 [style = bold, label=""];
29->14 [style = bold, label=""];
23->35 [style = solid, label="key2"];
23->50 [style = solid, label="key2"];
61->24 [style = bold, label=""];
14->9 [style = bold, label=""];
44->1 [style = bold, label=""];
36->17 [style = bold, label=""];
46->50 [style = bold, label=""];
50->54 [style = bold, label=""];
35->7 [style = bold, label=""];
5->41 [style = dashed, label="0"];
14->48 [style = bold, label=""];
33->56 [style = solid, label="key3"];
17->16 [style = bold, label=""];
35->63 [style = dashed, label="0"];
31->44 [style = dashed, label="0"];
23->63 [style = solid, label="key2"];
3->0 [style = solid, label="actualProcessor"];
24->26 [style = solid, label="pipelineId1"];
23->19 [style = solid, label="key2"];
22->49 [style = dashed, label="0"];
8->28 [style = solid, label="pipelineId2"];
28->58 [style = dashed, label="0"];
18->12 [style = bold, label=""];
16->46 [style = solid, label="key1"];
2->18 [style = bold, label=""];
3->0 [style = bold, label=""];
19->37 [style = bold, label=""];
52->42 [style = bold, label=""];
9->48 [style = dashed, label="0"];
39->7 [style = bold, label=""];
9->3 [style = solid, label="pipelineProcessor"];
60->26 [style = solid, label="scriptService"];
57->6 [style = bold, label=""];
19->55 [style = dashed, label="0"];
8->58 [style = solid, label="pipelineId2"];
24->8 [style = bold, label=""];
45->52 [style = bold, label=""];
22->6 [style = bold, label=""];
32->17 [style = solid, label="ingestService"];
10->60 [style = bold, label=""];
22->57 [style = dashed, label="0"];
8->36 [style = solid, label="pipelineId2"];
28->49 [style = bold, label=""];
10->38 [style = solid, label="scriptName"];
12->36 [style = bold, label=""];
58->57 [style = bold, label=""];
33->7 [style = solid, label="key3"];
37->53 [style = dashed, label="0"];
16->23 [style = bold, label=""];
16->27 [style = solid, label="key1"];
8->11 [style = solid, label="pipelineId2"];
27->35 [style = bold, label=""];
20->26 [style = solid, label="scriptService"];
24->18 [style = solid, label="pipelineId1"];
5->64 [style = dashed, label="0"];
26->29 [style = solid, label="pipeline1"];
35->39 [style = dashed, label="0"];
27->39 [style = bold, label=""];
41->40 [style = bold, label=""];
47->24 [style = bold, label=""];
20->60 [style = dashed, label="0"];
9->3 [style = bold, label=""];
7->15 [style = bold, label=""];
56->59 [style = bold, label=""];
4->5 [style = bold, label=""];
33->37 [style = solid, label="key3"];
4->62 [style = dashed, label="0"];
28->22 [style = bold, label=""];
10->20 [style = solid, label="scriptName"];
33->54 [style = solid, label="key3"];
54->45 [style = bold, label=""];
10->20 [style = bold, label=""];
32->21 [style = bold, label=""];
23->39 [style = solid, label="key2"];
8->32 [style = bold, label=""];
16->6 [style = solid, label="key1"];
60->26 [style = bold, label=""];
6->43 [style = dashed, label="0"];
24->13 [style = solid, label="pipelineId1"];
33->10 [style = bold, label=""];
27->63 [style = bold, label=""];
6->19 [style = bold, label=""];
62->64 [style = bold, label=""];
13->58 [style = bold, label=""];
11->14 [style = solid, label="pipeline2"];
49->43 [style = bold, label=""];
40->46 [style = bold, label=""];
7->38 [style = bold, label=""];
10->60 [style = solid, label="scriptName"];
24->1 [style = solid, label="pipelineId1"];
55->53 [style = bold, label=""];
15->4 [style = bold, label=""];
30->2 [style = bold, label=""];
21->9 [style = solid, label="pipelineConfig0"];
51->41 [style = bold, label=""];
13->28 [style = bold, label=""];
}
