digraph {
3 [style = filled, label = "{sqlSession.close()}@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "User user = mapper.getUser(1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertNull(\"should not inherit auto-mapping\",user.getPets().get(0).getPetName())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SqlSession sqlSession = sqlSessionFactory.openSession()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(Integer.valueOf(2),user.getId())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "shouldGetAUserAndGroups['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(\"User2\",user.getName())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(1,user.getGroups().size())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "sqlSessionFactory.getConfiguration().setAutoMappingBehavior(AutoMappingBehavior.NONE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "{sqlSession.close()}@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "shouldNotInheritAutoMappingInherited_ExternalNestedResultMap['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "User user = mapper.getUserWithPets_External(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Mapper mapper = sqlSession.getMapper()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(1,user.getGroups().size())@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertTrue(user instanceof Proxy)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldGetAUserAndGroups['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "Assert.assertEquals(\"John\",user.getPets().get(0).getBreeder().getBreederName())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13->10 [style = bold, label=""];
10->14 [style = bold, label=""];
0->6 [style = bold, label=""];
18->11 [style = bold, label=""];
12->17 [style = bold, label=""];
6->11 [style = dashed, label="0"];
4->2 [style = bold, label=""];
9->8 [style = bold, label=""];
1->7 [style = bold, label=""];
0->1 [style = solid, label="user"];
7->3 [style = bold, label=""];
6->1 [style = bold, label=""];
17->0 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
5->6 [style = solid, label="user"];
11->13 [style = bold, label=""];
0->18 [style = dashed, label="0"];
7->10 [style = dashed, label="0"];
0->18 [style = bold, label=""];
14->15 [style = bold, label=""];
16->12 [style = bold, label=""];
2->5 [style = bold, label=""];
}
