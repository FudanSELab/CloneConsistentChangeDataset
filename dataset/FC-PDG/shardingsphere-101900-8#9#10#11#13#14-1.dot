digraph {
36 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.ACCEPTOR_SIZE.getKey(),\"20\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SHOW))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED))@@@14@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(new Properties())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD),is(128))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Properties props = new Properties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.SQL_SHOW.getKey(),Boolean.TRUE.toString())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SHOW))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD.getKey(),\"20\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),is(20))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED.getKey(),Boolean.TRUE.toString())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_HINT_ENABLED.getKey(),Boolean.TRUE.toString())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY.getKey(),\"20\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),is(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_MAX_CONNECTIONS),is(8))@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "ConfigurationProperties actual = new ConfigurationProperties(props)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE),is(20))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.EXECUTOR_SIZE.getKey(),\"20\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.SQL_SIMPLE))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.QUERY_WITH_CIPHER_COLUMN.getKey(),Boolean.FALSE.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_FRONTEND_FLUSH_THRESHOLD),is(20))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE),is(\"XA\"))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE),is(\"LOCAL\"))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.PROXY_BACKEND_CONNECTION_TIMEOUT_SECONDS),is(60))@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_OPENTRACING_ENABLED))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.ACCEPTOR_SIZE),is(Runtime.getRuntime().availableProcessors() * 2))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.PROXY_TRANSACTION_TYPE.getKey(),\"XA\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertGetValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE),is(0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.SQL_SIMPLE.getKey(),Boolean.TRUE.toString())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "props.setProperty(ConfigurationPropertyKey.CHECK_TABLE_METADATA_ENABLED.getKey(),Boolean.TRUE.toString())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "assertGetDefaultValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(actual.getValue(ConfigurationPropertyKey.EXECUTOR_SIZE),is(20))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(actual.getValue(ConfigurationPropertyKey.PROXY_HINT_ENABLED))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertGetDefaultValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4->3 [style = bold, label=""];
27->18 [style = bold, label=""];
16->36 [style = bold, label=""];
35->27 [style = bold, label=""];
22->25 [style = bold, label=""];
25->39 [style = bold, label=""];
28->34 [style = bold, label=""];
31->19 [style = solid, label="props"];
7->10 [style = bold, label=""];
12->16 [style = dashed, label="0"];
14->28 [style = dashed, label="0"];
31->32 [style = bold, label=""];
3->27 [style = dashed, label="0"];
2->32 [style = dashed, label="0"];
0->11 [style = bold, label=""];
24->38 [style = bold, label=""];
5->14 [style = bold, label=""];
32->16 [style = bold, label=""];
40->20 [style = bold, label=""];
8->36 [style = dashed, label="0"];
5->18 [style = dashed, label="0"];
13->23 [style = dashed, label="0"];
1->13 [style = bold, label=""];
17->23 [style = bold, label=""];
11->2 [style = bold, label=""];
18->28 [style = bold, label=""];
2->12 [style = bold, label=""];
39->26 [style = bold, label=""];
9->6 [style = bold, label=""];
14->7 [style = bold, label=""];
9->37 [style = dashed, label="0"];
23->35 [style = bold, label=""];
7->9 [style = bold, label=""];
8->1 [style = bold, label=""];
3->5 [style = bold, label=""];
1->17 [style = dashed, label="0"];
21->29 [style = bold, label=""];
10->40 [style = dashed, label="0"];
15->11 [style = bold, label=""];
34->37 [style = bold, label=""];
11->31 [style = dashed, label="0"];
30->31 [style = bold, label=""];
12->8 [style = bold, label=""];
6->10 [style = bold, label=""];
37->19 [style = bold, label=""];
36->17 [style = bold, label=""];
29->22 [style = bold, label=""];
19->40 [style = bold, label=""];
33->21 [style = bold, label=""];
20->24 [style = bold, label=""];
38->33 [style = bold, label=""];
7->34 [style = dashed, label="0"];
4->35 [style = dashed, label="0"];
13->4 [style = bold, label=""];
}
