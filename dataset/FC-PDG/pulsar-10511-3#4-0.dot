digraph {
39 [style = filled, label = "splits@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
34 [style = filled, label = "assertEquals(pulsarSplit.getStartPositionLedgerId(),0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PulsarTableLayoutHandle pulsarTableLayoutHandle = new PulsarTableLayoutHandle(pulsarTableHandle,tupleDomain)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(totalSize,49)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(pulsarSplit.getEndPosition(),PositionImpl.get(0,initialStart + pulsarSplit.getSplitSize()))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PulsarTableHandle pulsarTableHandle = new PulsarTableHandle(pulsarConnectorId.toString(),topicName.getNamespace(),topicName.getLocalName(),topicName.getLocalName())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(pulsarSplit.getSchemaName(),topicName.getNamespace())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "ConnectorSplitSource connectorSplitSource = this.pulsarSplitManager.getSplits(mock(),mock(),pulsarTableLayoutHandle,null)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<PulsarSplit> splits = getSplitsForPartition(topicName.getPartition(i),resultCaptor.getResult())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "int totalSize = 0@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "splits@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "String delimiter@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map<ColumnHandle,Domain> domainMap = new HashMap<>()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "TopicName topicName = PARTITIONED_TOPIC_1@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(pulsarSplit.getStartPosition(),PositionImpl.get(0,initialStart))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String delimiter@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "TopicName topicName = NON_SCHEMA_TOPIC@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "i++@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doAnswer(resultCaptor).when(this.pulsarSplitManager).getSplitsPartitionedTopic(anyInt(),any(),any(),any(),any())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "domainMap.put(PulsarInternalColumn.PUBLISH_TIME.getColumnHandle(pulsarConnectorId.toString(),false),domain)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertNotNull(connectorSplitSource)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(pulsarSplit.getTableName(),topicName.getPartition(i).getLocalName())@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(pulsarSplit.getConnectorId(),pulsarConnectorId.toString())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i < partitions@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "testPublishTimePredicatePushdownPartitionedTopic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "setup()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "totalSize += pulsarSplit.getSplitSize()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int i = 0@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testPublishTimePredicatePushdownPartitionedTopic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(pulsarSplit.getEndPositionEntryId(),initialStart + pulsarSplit.getSplitSize())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "doAnswer(resultCaptor).when(this.pulsarSplitManager).getSplitsPartitionedTopic(anyInt(),any(),any(),any(),any(),any())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertEquals(pulsarSplit.getSchema(),new String(topicsToSchemas.get(topicName.getSchemaName()).getSchema()))@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "initialStart += pulsarSplit.getSplitSize()@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "updateRewriteNamespaceDelimiterIfNeeded(delimiter)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(pulsarSplit.getEndPositionLedgerId(),0)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "verify(this.pulsarSplitManager,times(1)).getSplitsPartitionedTopic(anyInt(),any(),any(),any(),any(),any())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
44 [style = filled, label = "testGetSplitNonSchema['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertEquals(pulsarSplit.getSchemaType(),topicsToSchemas.get(topicName.getSchemaName()).getType())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Domain domain = Domain.create(ValueSet.ofRanges(Range.range(TIMESTAMP,currentTimeMs + 1L,true,currentTimeMs + 50L,true)),false)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final ResultCaptor<Collection<PulsarSplit>> resultCaptor = new ResultCaptor<>()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "TupleDomain<ColumnHandle> tupleDomain = TupleDomain.withColumnDomains(domainMap)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "verify(this.pulsarSplitManager,times(1)).getSplitsPartitionedTopic(anyInt(),any(),any(),any(),any())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "PulsarSplit pulsarSplit@@@24@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int initialStart = 1@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "int partitions = partitionedTopicsToPartitions.get(topicName.toString())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "log.info(\"!----- topic: %s -----!\",topicName)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(pulsarSplit.getStartPositionEntryId(),initialStart)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10->15 [style = solid, label="pulsarTableHandle"];
32->35 [style = bold, label=""];
18->3 [style = bold, label=""];
2->26 [style = bold, label=""];
22->31 [style = dotted, label="true"];
15->21 [style = bold, label=""];
15->21 [style = solid, label="pulsarTableLayoutHandle"];
13->22 [style = solid, label="i"];
13->23 [style = solid, label="i"];
44->19 [style = bold, label=""];
21->45 [style = solid, label="connectorSplitSource"];
21->30 [style = bold, label=""];
40->36 [style = dotted, label="true"];
22->14 [style = dotted, label="true"];
7->14 [style = bold, label=""];
8->1 [style = bold, label=""];
46->19 [style = solid, label="delimiter"];
10->8 [style = bold, label=""];
43->24 [style = bold, label=""];
36->19 [style = solid, label="delimiter"];
22->35 [style = dotted, label="true"];
4->35 [style = solid, label="initialStart"];
13->22 [style = bold, label=""];
42->21 [style = bold, label=""];
17->5 [style = bold, label=""];
22->29 [style = dotted, label="true"];
26->35 [style = solid, label="initialStart"];
22->23 [style = dotted, label="true"];
29->7 [style = solid, label="totalSize"];
30->41 [style = dashed, label="0"];
22->0 [style = dotted, label="true"];
44->46 [style = dotted, label="true"];
22->7 [style = dotted, label="true"];
14->22 [style = bold, label=""];
21->41 [style = bold, label=""];
8->1 [style = solid, label="domainMap"];
16->19 [style = bold, label=""];
22->23 [style = bold, label=""];
3->0 [style = bold, label=""];
8->17 [style = bold, label=""];
21->45 [style = bold, label=""];
5->1 [style = bold, label=""];
36->46 [style = dashed, label="0"];
14->22 [style = solid, label="i"];
26->31 [style = solid, label="initialStart"];
26->12 [style = solid, label="initialStart"];
25->22 [style = solid, label="partitions"];
38->33 [style = solid, label="topicName"];
1->15 [style = solid, label="tupleDomain"];
13->14 [style = solid, label="i"];
22->9 [style = dotted, label="true"];
22->32 [style = dotted, label="true"];
22->4 [style = dotted, label="true"];
19->38 [style = bold, label=""];
4->9 [style = bold, label=""];
22->18 [style = dotted, label="true"];
38->24 [style = bold, label=""];
26->2 [style = solid, label="initialStart"];
28->31 [style = bold, label=""];
35->2 [style = bold, label=""];
6->42 [style = bold, label=""];
4->2 [style = solid, label="initialStart"];
12->32 [style = bold, label=""];
40->19 [style = bold, label=""];
22->37 [style = dotted, label="true"];
16->36 [style = dotted, label="true"];
38->43 [style = dashed, label="0"];
4->31 [style = solid, label="initialStart"];
31->34 [style = bold, label=""];
6->20 [style = bold, label=""];
24->33 [style = bold, label=""];
9->18 [style = bold, label=""];
20->42 [style = dashed, label="0"];
43->33 [style = solid, label="topicName"];
22->26 [style = dotted, label="true"];
22->27 [style = dotted, label="true"];
22->3 [style = dotted, label="true"];
19->43 [style = bold, label=""];
22->34 [style = dotted, label="true"];
23->27 [style = bold, label=""];
25->13 [style = bold, label=""];
22->39 [style = dotted, label="true"];
1->15 [style = bold, label=""];
26->29 [style = bold, label=""];
29->9 [style = bold, label=""];
22->28 [style = dotted, label="true"];
30->25 [style = bold, label=""];
22->11 [style = dotted, label="true"];
33->10 [style = bold, label=""];
15->6 [style = bold, label=""];
34->12 [style = bold, label=""];
17->5 [style = solid, label="domain"];
22->12 [style = dotted, label="true"];
22->2 [style = dotted, label="true"];
4->12 [style = solid, label="initialStart"];
20->21 [style = bold, label=""];
27->4 [style = bold, label=""];
29->7 [style = bold, label=""];
14->23 [style = solid, label="i"];
41->25 [style = bold, label=""];
0->28 [style = bold, label=""];
}
