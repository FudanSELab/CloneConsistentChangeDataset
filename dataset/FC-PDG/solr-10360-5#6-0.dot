digraph {
6 [style = filled, label = "String function = expression.getFunctionName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid evaluator expression %s - function '%s' is unknown (not mapped to a valid StreamEvaluator)\",expression,expression.getFunctionName()))@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@6@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "StreamExpression expression@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "constructEvaluator['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "classSupplier != null@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "throw new IOException(String.format(Locale.ROOT,\"Invalid evaluator expression %s - function '%s' is unknown (not mapped to a valid StreamEvaluator)\",expression,expression.getFunctionName()))@@@15@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "StreamExpression expression@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "return true@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "constructEvaluator['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = ".isAssignableFrom(clazz) && .isAssignableFrom(clazz)@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "functionNames.containsKey(function)@@@4@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Class<? extends Expressible> clazz = classSupplier.get()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "Supplier<Class<? extends Expressible>> classSupplier = functionNames.get(function)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "isEvaluator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return (org.apache.solr.client.solrj.io.eval.StreamEvaluator)createInstance(clazz,new Class((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f61ece,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@f61ed3)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Class<? extends Expressible> clazz = functionNames.get(function)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "return false@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
0->16 [style = bold, label=""];
5->12 [style = dashed, label="0"];
6->3 [style = solid, label="function"];
1->8 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
0->17 [style = bold, label=""];
0->2 [style = bold, label=""];
4->7 [style = dotted, label="true"];
6->5 [style = solid, label="function"];
5->0 [style = dotted, label="true"];
7->13 [style = solid, label="expression"];
16->17 [style = bold, label=""];
5->3 [style = dotted, label="true"];
5->17 [style = bold, label=""];
1->13 [style = bold, label=""];
3->0 [style = bold, label=""];
11->1 [style = solid, label="clazz"];
9->6 [style = bold, label=""];
7->8 [style = solid, label="expression"];
11->8 [style = solid, label="clazz"];
6->5 [style = bold, label=""];
5->2 [style = bold, label=""];
14->15 [style = dotted, label="true"];
12->10 [style = solid, label="classSupplier"];
12->10 [style = bold, label=""];
6->12 [style = solid, label="function"];
7->1 [style = solid, label="expression"];
10->13 [style = bold, label=""];
10->11 [style = dotted, label="true"];
0->1 [style = bold, label=""];
1->8 [style = dotted, label="true"];
7->15 [style = dashed, label="0"];
1->8 [style = dashed, label="0"];
1->2 [style = bold, label=""];
0->16 [style = dotted, label="true"];
10->1 [style = dotted, label="true"];
9->7 [style = dotted, label="true"];
7->2 [style = solid, label="expression"];
3->0 [style = solid, label="clazz"];
14->6 [style = bold, label=""];
6->1 [style = solid, label="function"];
8->13 [style = bold, label=""];
0->1 [style = dotted, label="true"];
10->11 [style = bold, label=""];
6->12 [style = bold, label=""];
}
