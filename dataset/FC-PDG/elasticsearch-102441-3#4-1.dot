digraph {
8 [style = filled, label = "IllegalArgumentException ex = expectThrows(,null)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "when(plugin1.getRepositories(environment,contentRegistry)).thenReturn(Collections.singletonMap(\"type1\",factory))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testCannotRegisterNormalAndInternalRepositoriesWithSameTypes['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testCannotRegisterTwoInternalRepositoriesWithSameTypes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(\"Internal repository type (type1( is already registered as a non-internal repository\",ex.getMessage())@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(\"Internal repository type (type1( is already registered\",ex.getMessage())@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(plugin2.getInternalRepositories(environment,contentRegistry)).thenReturn(Collections.singletonMap(\"type1\",factory))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "IllegalArgumentException ex = expectThrows(,null)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "when(plugin2.getInternalRepositories(environment,contentRegistry,threadPool)).thenReturn(Collections.singletonMap(\"type1\",factory))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "when(plugin1.getInternalRepositories(environment,contentRegistry)).thenReturn(Collections.singletonMap(\"type1\",factory))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "when(plugin1.getInternalRepositories(environment,contentRegistry,threadPool)).thenReturn(Collections.singletonMap(\"type1\",factory))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "testCannotRegisterTwoInternalRepositoriesWithSameTypes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
9->3 [style = bold, label=""];
0->8 [style = dashed, label="0"];
0->11 [style = bold, label=""];
1->9 [style = dashed, label="0"];
2->11 [style = dashed, label="0"];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
5->6 [style = bold, label=""];
6->7 [style = bold, label=""];
8->2 [style = bold, label=""];
7->8 [style = bold, label=""];
3->7 [style = dashed, label="0"];
1->6 [style = dashed, label="0"];
3->0 [style = bold, label=""];
0->2 [style = bold, label=""];
}
