digraph {
11 [style = filled, label = "assertThat(GlobalTracer.isRegistered(),is(true))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "props.setProperty(\"JAEGER_REPORTER_FLUSH_INTERVAL\",\"1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "props.setProperty(\"JAEGER_REPORTER_LOG_SPANS\",\"true\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "openTracingPluginBootService.start(configuration)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertStart['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "PluginConfiguration configuration = new PluginConfiguration(\"localhost\",8090,\"\",props)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertStart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Properties props = new Properties()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertStart['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "PluginConfiguration configuration = new PluginConfiguration(\"localhost\",5775,\"\",props)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "props.setProperty(\"OPENTRACING_TRACER_CLASS_NAME\",\"io.opentracing.mock.MockTracer\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "props.setProperty(\"JAEGER_SAMPLER_TYPE\",\"const\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "jaegerTracingPluginBootService.start(configuration)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(GlobalTracer.isRegistered(),is(true))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "assertTrue(GlobalTracer.isRegistered())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "props.setProperty(\"JAEGER_SAMPLER_PARAM\",\"1\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = solid, label="props"];
1->12 [style = solid, label="props"];
6->0 [style = bold, label=""];
12->13 [style = solid, label="configuration"];
2->9 [style = bold, label=""];
6->14 [style = dashed, label="0"];
2->4 [style = bold, label=""];
13->11 [style = bold, label=""];
7->3 [style = bold, label=""];
0->7 [style = bold, label=""];
8->1 [style = bold, label=""];
12->13 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->2 [style = bold, label=""];
3->5 [style = bold, label=""];
1->6 [style = bold, label=""];
14->12 [style = bold, label=""];
1->14 [style = bold, label=""];
5->2 [style = solid, label="configuration"];
10->1 [style = bold, label=""];
15->1 [style = bold, label=""];
}
