digraph {
6 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startArray(\"dynamic_templates\").startObject().startObject(\"georule\").field(\"match\",\"foo*\").startObject(\"mapping\").field(\"type\",\"object\").endObject().endObject().endObject().endArray().endObject().endObject())@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Mapper bazMapper = ((ObjectMapper)barMapper).getMapper(\"baz\")@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
30 [style = filled, label = "assertNotNull(fooMapper)@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
28 [style = filled, label = "assertThat(bazMapper,instanceOf())@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
33 [style = filled, label = "assertNotNull(aMapper)@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Mapper fooMapper = doc.dynamicMappingsUpdate().root().getMapper(\"foo\")@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(bazMapper,instanceOf())@@@17@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(barMapper,instanceOf())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(2,doc.rootDoc().getFields(\"foo.bar.baz\").length)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "ParsedDocument doc = mapper.parse(source(null))@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "assertNotNull(bazMapper)@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "BytesReference bytes = BytesReference.bytes(XContentFactory.jsonBuilder().startObject().field(\"foo.bar.baz\",0).endObject())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "DocumentMapper mapper = mapperParser.parse(\"type\",new CompressedXContent(mapping))@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "DocumentMapper mapper = createDocumentMapper(topMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Mapper aMapper = ((ObjectMapper)bazMapper).getMapper(\"a\")@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"foo\").field(\"type\",\"object\").endObject().endObject().endObject().endObject())@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Mapper barMapper = ((ObjectMapper)fooMapper).getMapper(\"bar\")@@@25@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "assertNotNull(barMapper)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Mapper aMapper = ((ObjectMapper)bazMapper).getMapper(\"a\")@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "BytesReference bytes = BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startObject(\"foo.bar.baz\").field(\"a\",0).endObject().endObject())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "DocumentMapperParser mapperParser = createIndex(\"test\").mapperService().documentMapperParser()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Mapper fooMapper = doc.dynamicMappingsUpdate().root().getMapper(\"foo\")@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertThat(bazMapper,instanceOf())@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(aMapper,instanceOf())@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertNotNull(bazMapper)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "testDynamicDottedFieldNameLongWithExistingParent['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(fooMapper,instanceOf())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertNotNull(aMapper)@@@19@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertThat(aMapper,instanceOf())@@@33@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "assertEquals(2,doc.rootDoc().getFields(\"foo.bar.baz.a\").length)@@@8@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Mapper barMapper = ((ObjectMapper)fooMapper).getMapper(\"bar\")@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertNotNull(fooMapper)@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testDynamicDottedFieldNameObjectWithParentTemplate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "ParsedDocument doc = mapper.parse(new SourceToParse(\"test\",\"1\",bytes,XContentType.JSON))@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(fooMapper,instanceOf())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,doc.rootDoc().getFields(\"foo.bar.baz.a\").length)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertNotNull(barMapper)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "testDynamicDottedFieldNameObjectWithParentTemplate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertThat(barMapper,instanceOf())@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Mapper bazMapper = ((ObjectMapper)barMapper).getMapper(\"baz\")@@@15@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12->18 [style = solid, label="barMapper"];
11->1 [style = solid, label="bazMapper"];
30->34 [style = bold, label=""];
26->21 [style = bold, label=""];
4->5 [style = solid, label="bytes"];
12->2 [style = solid, label="barMapper"];
35->17 [style = bold, label=""];
8->12 [style = bold, label=""];
23->24 [style = bold, label=""];
1->38 [style = dashed, label="0"];
19->25 [style = solid, label="aMapper"];
11->0 [style = bold, label=""];
12->2 [style = bold, label=""];
4->5 [style = bold, label=""];
22->27 [style = bold, label=""];
20->32 [style = bold, label=""];
14->37 [style = bold, label=""];
28->19 [style = bold, label=""];
0->38 [style = bold, label=""];
37->5 [style = solid, label="bytes"];
0->1 [style = bold, label=""];
19->33 [style = bold, label=""];
27->34 [style = solid, label="fooMapper"];
7->3 [style = bold, label=""];
39->7 [style = bold, label=""];
11->38 [style = solid, label="bazMapper"];
7->3 [style = solid, label="fooMapper"];
17->36 [style = bold, label=""];
6->14 [style = bold, label=""];
2->18 [style = bold, label=""];
17->6 [style = bold, label=""];
11->0 [style = solid, label="bazMapper"];
7->8 [style = solid, label="fooMapper"];
9->17 [style = bold, label=""];
37->5 [style = bold, label=""];
15->13 [style = solid, label="aMapper"];
15->10 [style = solid, label="aMapper"];
26->21 [style = solid, label="barMapper"];
27->30 [style = bold, label=""];
36->14 [style = bold, label=""];
3->8 [style = bold, label=""];
26->31 [style = solid, label="barMapper"];
15->13 [style = bold, label=""];
36->14 [style = solid, label="mapping"];
1->15 [style = bold, label=""];
6->36 [style = dashed, label="0"];
16->39 [style = dashed, label="0"];
4->37 [style = dashed, label="0"];
29->22 [style = bold, label=""];
16->7 [style = bold, label=""];
23->28 [style = solid, label="bazMapper"];
19->33 [style = solid, label="aMapper"];
14->4 [style = bold, label=""];
23->24 [style = solid, label="bazMapper"];
13->10 [style = bold, label=""];
32->29 [style = bold, label=""];
24->28 [style = bold, label=""];
33->25 [style = bold, label=""];
34->26 [style = bold, label=""];
21->31 [style = bold, label=""];
5->16 [style = bold, label=""];
5->39 [style = bold, label=""];
18->11 [style = bold, label=""];
6->14 [style = solid, label="mapping"];
31->23 [style = bold, label=""];
27->30 [style = solid, label="fooMapper"];
}
