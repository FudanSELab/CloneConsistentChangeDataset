digraph {
24 [style = filled, label = "testOperatorMetricReuse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "final Counter numRecordsInCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsInCounter()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "x < numRecords2@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "testOperatorMetricReuse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testHarness.invoke(env)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(numRecords,numRecordsInCounter.getCount())@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(numRecords1 + numRecords2,numRecordsInCounter.getCount())@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),1,0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testHarness.waitForTaskCompletion()@@@31@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final int numRecords2 = 3@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "x < numRecords1@@@24@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final OneInputStreamTaskTestHarness<String,String> testHarness = new OneInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "final TwoInputStreamTaskTestHarness<String,String,String> testHarness = new TwoInputStreamTaskTestHarness<>(isInputSelectable? null: null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "x < numRecords@@@23@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "final TwoInputStreamTaskTestHarness<String,String,String> testHarness = new TwoInputStreamTaskTestHarness<>(null,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO,BasicTypeInfo.STRING_TYPE_INFO)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "final int numRecords = 5@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testHarness.waitForTaskRunning()@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final StreamMockEnvironment env = new StreamMockEnvironment(testHarness.jobConfig,testHarness.taskConfig,testHarness.memorySize,new MockInputSplitProvider(),testHarness.bufferSize,new TestTaskStateManager()){@Override public TaskMetricGroup getMetricGroup(){return taskMetricGroup}}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals((numRecords1 + numRecords2) * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testHarness.setupOperatorChain(new OperatorID(),new DuplicatingOperator()).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).chain(new OperatorID(),new OneInputStreamTaskTest.DuplicatingOperator(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig())).finish()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final TaskMetricGroup taskMetricGroup = new UnregisteredMetricGroups.UnregisteredTaskMetricGroup(){@Override public OperatorMetricGroup getOrAddOperator(OperatorID operatorID,String name){return new OperatorMetricGroup(NoOpMetricRegistry.INSTANCE,this,operatorID,name)}}@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testHarness.waitForTaskCompletion()@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testOperatorMetricReuse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "x++@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertEquals(numRecords * 2 * 2 * 2,numRecordsOutCounter.getCount())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "int x = 0@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "x++@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testHarness.waitForInputProcessing()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(\"hello\"),0,0)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final int numRecords1 = 5@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.endInput()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "int x = 0@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final Counter numRecordsOutCounter = taskMetricGroup.getIOMetricGroup().getNumRecordsOutCounter()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->29 [style = dashed, label="0"];
27->1 [style = bold, label=""];
28->18 [style = bold, label=""];
4->17 [style = bold, label=""];
15->7 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
3->0 [style = solid, label="numRecords1"];
18->34 [style = bold, label=""];
29->31 [style = bold, label=""];
33->4 [style = bold, label=""];
6->4 [style = dashed, label="0"];
26->14 [style = bold, label=""];
29->34 [style = solid, label="numRecords"];
31->4 [style = bold, label=""];
30->32 [style = bold, label=""];
15->20 [style = dotted, label="true"];
23->3 [style = bold, label=""];
10->17 [style = bold, label=""];
17->33 [style = bold, label=""];
33->4 [style = solid, label="x"];
7->20 [style = bold, label=""];
29->18 [style = solid, label="numRecords"];
2->19 [style = solid, label="env"];
15->7 [style = dotted, label="true"];
25->16 [style = bold, label=""];
15->18 [style = bold, label=""];
32->26 [style = bold, label=""];
3->13 [style = solid, label="numRecords1"];
9->16 [style = bold, label=""];
4->28 [style = bold, label=""];
11->15 [style = bold, label=""];
17->6 [style = solid, label="x"];
31->4 [style = solid, label="x"];
3->6 [style = solid, label="numRecords1"];
6->17 [style = dotted, label="true"];
4->33 [style = dotted, label="true"];
11->15 [style = solid, label="x"];
23->29 [style = bold, label=""];
6->10 [style = dotted, label="true"];
9->32 [style = dashed, label="0"];
16->26 [style = dashed, label="0"];
3->5 [style = bold, label=""];
20->15 [style = solid, label="x"];
5->13 [style = solid, label="numRecords2"];
1->21 [style = bold, label=""];
22->12 [style = bold, label=""];
19->23 [style = bold, label=""];
6->11 [style = bold, label=""];
6->10 [style = bold, label=""];
5->4 [style = bold, label=""];
0->1 [style = bold, label=""];
24->25 [style = bold, label=""];
5->0 [style = solid, label="numRecords2"];
8->9 [style = bold, label=""];
18->13 [style = bold, label=""];
4->6 [style = solid, label="x"];
4->17 [style = solid, label="x"];
31->33 [style = solid, label="x"];
5->15 [style = solid, label="numRecords2"];
16->14 [style = bold, label=""];
10->17 [style = dashed, label="0"];
0->34 [style = dashed, label="0"];
14->2 [style = bold, label=""];
14->2 [style = solid, label="taskMetricGroup"];
9->25 [style = dashed, label="0"];
2->22 [style = bold, label=""];
12->19 [style = bold, label=""];
13->18 [style = dashed, label="0"];
4->17 [style = dotted, label="true"];
20->15 [style = bold, label=""];
29->4 [style = solid, label="numRecords"];
13->0 [style = bold, label=""];
34->27 [style = bold, label=""];
11->20 [style = solid, label="x"];
}
