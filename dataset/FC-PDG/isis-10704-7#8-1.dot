digraph {
10 [style = filled, label = "whenDomainObjectAndAutoCompleteRepositoryAndAction['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "expectNoMethodsRemoved()@@@10@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "final AutoCompleteFacetForDomainObjectAnnotation autoCompleteFacet = (AutoCompleteFacetForDomainObjectAnnotation)facet@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(.isAssignableFrom(autoCompleteFacet.getRepositoryClass()),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(autoCompleteFacet.getActionName(),is(\"lookup\"))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetHolder))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(autoCompleteFacet.getActionName(),is(\"autoComplete\"))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Assert.assertNotNull(facet)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "whenDomainObjectAndAutoCompleteRepositoryAndAction['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(.isAssignableFrom(autoCompleteFacet.getRepositoryClass()),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final Facet facet = facetHolder.getFacet()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertTrue(facet instanceof AutoCompleteFacetForDomainObjectAnnotation)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "whenDomainObjectAndAutoCompleteRepository['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "facetFactory.process(ProcessClassContext.forTesting(,mockMethodRemover,facetHolder))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "facetFactory.process(new ProcessClassContext(,mockMethodRemover,facetHolder))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5->3 [style = bold, label=""];
14->3 [style = bold, label=""];
5->14 [style = dashed, label="0"];
2->6 [style = bold, label=""];
0->2 [style = bold, label=""];
6->8 [style = solid, label="facet"];
1->7 [style = bold, label=""];
9->6 [style = bold, label=""];
7->5 [style = bold, label=""];
6->1 [style = solid, label="facet"];
2->9 [style = dashed, label="0"];
2->13 [style = dashed, label="0"];
11->13 [style = bold, label=""];
6->8 [style = bold, label=""];
12->14 [style = bold, label=""];
1->12 [style = bold, label=""];
7->12 [style = dashed, label="0"];
4->1 [style = bold, label=""];
10->9 [style = bold, label=""];
6->4 [style = solid, label="facet"];
8->4 [style = bold, label=""];
13->6 [style = bold, label=""];
}
