digraph {
1 [style = filled, label = "Assert.assertFalse(\"Should not match: column with some nulls contains a non-null value\",shouldRead)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "shouldRead = new StrictMetricsEvaluator(SCHEMA,notNull(\"some_nulls\")).eval(FILE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Assert.assertTrue(\"Should match: notEqual on all nulls column\",shouldRead)@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testAllNulls['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "shouldRead = new StrictMetricsEvaluator(SCHEMA,notNull(\"no_nulls\")).eval(FILE)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,isNull(\"no_nulls\")).eval(FILE)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertTrue(\"Should read: at least one null value in all null column\",shouldRead)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testAllNulls['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "shouldRead = new StrictMetricsEvaluator(SCHEMA,notEqual(\"all_nulls\",\"a\")).eval(FILE)@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "testNoNulls['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "boolean shouldRead = new InclusiveMetricsEvaluator(SCHEMA,isNull(\"all_nulls\")).eval(FILE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "shouldRead = new InclusiveMetricsEvaluator(SCHEMA,isNull(\"some_nulls\")).eval(FILE)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertTrue(\"Should read: column with some nulls contains a null value\",shouldRead)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Assert.assertFalse(\"Should skip: non-null column contains no null values\",shouldRead)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertTrue(\"Should match: non-null column contains no null values\",shouldRead)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertFalse(\"Should not match: no non-null value in all null column\",shouldRead)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "boolean shouldRead = new StrictMetricsEvaluator(SCHEMA,notNull(\"all_nulls\")).eval(FILE)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->4 [style = bold, label=""];
5->14 [style = dashed, label="0"];
13->16 [style = solid, label="shouldRead"];
3->10 [style = dashed, label="0"];
5->1 [style = bold, label=""];
4->5 [style = bold, label=""];
10->11 [style = solid, label="shouldRead"];
4->16 [style = dashed, label="0"];
10->11 [style = bold, label=""];
9->0 [style = bold, label=""];
6->8 [style = bold, label=""];
0->13 [style = dashed, label="0"];
8->7 [style = solid, label="shouldRead"];
12->13 [style = bold, label=""];
3->6 [style = bold, label=""];
5->1 [style = solid, label="shouldRead"];
14->15 [style = solid, label="shouldRead"];
0->4 [style = solid, label="shouldRead"];
1->3 [style = bold, label=""];
13->16 [style = bold, label=""];
16->14 [style = bold, label=""];
1->15 [style = dashed, label="0"];
8->7 [style = bold, label=""];
2->0 [style = bold, label=""];
6->11 [style = dashed, label="0"];
14->15 [style = bold, label=""];
15->10 [style = bold, label=""];
3->6 [style = solid, label="shouldRead"];
}
