digraph {
14 [style = filled, label = "c.get().header(trailer((Supplier<String>)null)).run().assertBody().isEmpty()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "c.get().header(trailer((Object)null)).run().assertBody().isEmpty()@@@5@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "c.get().header(trailer(null)).run().assertBody().is(VALUE)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "c.get().header(maxForwards(VALUE)).run().assertBody().is(VALUE.toString())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "RestClient c = client().build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "a01_basic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "c.get().header(maxForwards((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "c.get().header(new Trailer(VALUE)).run().assertBody().is(VALUE)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
21 [style = filled, label = "c.get().header(maxForwards(null)).run().assertBody().isEmpty()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "c.get().header(trailer(null)).run().assertBody().isEmpty()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "c.get().header(trailer((Supplier<?>)null)).run().assertBody().isEmpty()@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "c.get().header(trailer(VALUE)).run().assertBody().is(VALUE)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "c.get().header(new MaxForwards(VALUE.toString())).run().assertBody().is(VALUE.toString())@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "a01_basic['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "c.get().header(maxForwards(VALUE)).run().assertBody().is(VALUE.toString())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "c.get().header(trailer(new StringBuilder(VALUE))).run().assertBody().is(VALUE)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
18 [style = filled, label = "c.get().header(maxForwards((String)null)).run().assertBody().isEmpty()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "c.get().header(trailer((String)null)).run().assertBody().isEmpty()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "c.get().header(trailer(VALUE)).run().assertBody().is(VALUE)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "c.get().header(trailer((String)null)).run().assertBody().isEmpty()@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "a01_basic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "c.get().header(trailer(PARSED)).run().assertBody().is(VALUE)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "c.get().header(trailer(null)).run().assertBody().isEmpty()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
23 [style = filled, label = "c.get().header(maxForwards((Object)null)).run().assertBody().isEmpty()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "c.get().header(maxForwards(null)).run().assertBody().is(VALUE.toString())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "c.get().header(trailer(null)).run().assertBody().is(VALUE)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14->16 [style = bold, label=""];
4->10 [style = bold, label=""];
3->25 [style = dashed, label="0"];
9->0 [style = bold, label=""];
18->23 [style = bold, label=""];
15->14 [style = bold, label=""];
25->22 [style = bold, label=""];
0->19 [style = dashed, label="0"];
12->15 [style = bold, label=""];
10->12 [style = dashed, label="0"];
3->11 [style = bold, label=""];
7->20 [style = dashed, label="0"];
11->12 [style = bold, label=""];
1->21 [style = dashed, label="0"];
5->18 [style = bold, label=""];
4->22 [style = dashed, label="0"];
20->25 [style = bold, label=""];
1->7 [style = bold, label=""];
3->4 [style = bold, label=""];
9->23 [style = dashed, label="0"];
7->3 [style = bold, label=""];
24->5 [style = bold, label=""];
6->18 [style = dashed, label="0"];
2->15 [style = dashed, label="0"];
21->20 [style = bold, label=""];
5->6 [style = bold, label=""];
8->5 [style = bold, label=""];
0->1 [style = bold, label=""];
23->19 [style = bold, label=""];
10->17 [style = dashed, label="0"];
13->5 [style = bold, label=""];
22->17 [style = bold, label=""];
5->7 [style = bold, label=""];
10->2 [style = bold, label=""];
4->11 [style = dashed, label="0"];
6->9 [style = bold, label=""];
19->21 [style = bold, label=""];
}
