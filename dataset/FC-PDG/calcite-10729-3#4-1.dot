digraph {
1 [style = filled, label = "final RexBuilder builder = new RexBuilder(targetTypeFactory)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final RelDataTypeFactory sourceTypeFactory = new SqlTypeFactoryImpl(RelDataTypeSystem.DEFAULT)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testCopyLocalRef['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "final RexDynamicParam node = builder.makeDynamicParam(type,0)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCopyLocalRef['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final RelDataTypeFactory targetTypeFactory = new MySqlTypeFactoryImpl(RelDataTypeSystem.DEFAULT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "RelDataType type = sourceTypeFactory.createSqlType(SqlTypeName.VARCHAR,65536)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "final RexDynamicParam result = (RexDynamicParam)copy@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertTrue(copy instanceof RexDynamicParam)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "final RexLocalRef node = new RexLocalRef(0,type)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "final RexLocalRef result = (RexLocalRef)copy@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result.getType().getPrecision(),is(PRECISION))@@@13@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCopyDynamicParam['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(result.getType().getSqlTypeName(),is(SqlTypeName.VARCHAR))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(result.getIndex(),is(node.getIndex()))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(copy instanceof RexLocalRef)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final RexNode copy = builder.copy(node)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
8->16 [style = dashed, label="0"];
11->13 [style = solid, label="copy"];
9->2 [style = bold, label=""];
0->5 [style = solid, label="type"];
16->6 [style = bold, label=""];
8->6 [style = bold, label=""];
7->4 [style = bold, label=""];
0->14 [style = solid, label="type"];
3->13 [style = dashed, label="0"];
13->16 [style = bold, label=""];
4->0 [style = bold, label=""];
14->11 [style = solid, label="node"];
0->10 [style = bold, label=""];
12->4 [style = bold, label=""];
11->3 [style = bold, label=""];
11->3 [style = solid, label="copy"];
5->11 [style = solid, label="node"];
3->8 [style = bold, label=""];
11->13 [style = bold, label=""];
15->4 [style = bold, label=""];
1->14 [style = bold, label=""];
5->11 [style = bold, label=""];
10->1 [style = solid, label="targetTypeFactory"];
6->9 [style = bold, label=""];
10->1 [style = bold, label=""];
14->11 [style = bold, label=""];
11->8 [style = solid, label="copy"];
11->16 [style = solid, label="copy"];
}
