digraph {
13 [style = filled, label = "assertEquals(1,stats.getCoordinatingRejections())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testReplicaRejections['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertEquals(1024 * 14,indexingPressure.stats().getCurrentReplicaBytes())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "Releasable local = indexingPressure.markPrimaryOperationLocalToCoordinatingNodeStarted(1024 * 2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "IndexingPressureStats stats = indexingPressure.stats()@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "expectThrows(,null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "IndexingPressureStats stats = indexingPressure.stats()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Releasable forced = indexingPressure.markPrimaryOperationStarted(1024 * 2,true)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(1024 * 14,indexingPressure.stats().getTotalReplicaBytes())@@@20@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,stats.getPrimaryRejections())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertEquals(preLocalStats.getPrimaryRejections(),indexingPressure.stats().getPrimaryRejections())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "Releasable replica2 = indexingPressure.markReplicaOperationStarted(1024 * 11,false)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "randomBoolean()@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testReplicaRejections['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testCoordinatingPrimaryRejections['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "IndexingPressure indexingPressure = new IndexingPressure(settings)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "forced.close()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "long preForceRejections = indexingPressure.stats().getPrimaryRejections()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertEquals(1024 * 6,indexingPressure.stats().getCurrentCombinedCoordinatingAndPrimaryBytes())@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(1024 * 14,indexingPressure.stats().getCurrentReplicaBytes())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "expectThrows(,null)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertEquals(1,stats.getReplicaRejections())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "expectThrows(,null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(1024 * 8,indexingPressure.stats().getTotalCombinedCoordinatingAndPrimaryBytes())@@@31@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "forced.close()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(1024 * 14,stats.getCurrentReplicaBytes())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "IndexingPressureStats preLocalStats = indexingPressure.stats()@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "replica2.close()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "forced.close()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(preForceRejections,indexingPressure.stats().getPrimaryRejections())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertEquals(1024 * 6,stats.getCurrentCombinedCoordinatingAndPrimaryBytes())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(preLocalStats.getCurrentPrimaryBytes() + 1024 * 2,indexingPressure.stats().getCurrentPrimaryBytes())@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(1024 * 6,stats.getCurrentCombinedCoordinatingAndPrimaryBytes())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "local.close()@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Releasable forced = indexingPressure.markPrimaryOperationStarted(1024 * 2,true)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(1,indexingPressure.stats().getReplicaRejections())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1024 * 8,indexingPressure.stats().getCurrentCombinedCoordinatingAndPrimaryBytes())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16->23 [style = solid, label="stats"];
28->22 [style = solid, label="preForceRejections"];
35->33 [style = bold, label=""];
2->22 [style = dashed, label="0"];
13->7 [style = bold, label=""];
15->1 [style = bold, label=""];
25->23 [style = solid, label="stats"];
8->4 [style = bold, label=""];
36->29 [style = bold, label=""];
3->2 [style = bold, label=""];
21->32 [style = bold, label=""];
28->20 [style = bold, label=""];
2->11 [style = bold, label=""];
13->17 [style = bold, label=""];
7->9 [style = bold, label=""];
1->21 [style = bold, label=""];
5->1 [style = bold, label=""];
9->3 [style = bold, label=""];
25->34 [style = bold, label=""];
20->22 [style = bold, label=""];
9->17 [style = dashed, label="0"];
14->12 [style = bold, label=""];
31->18 [style = bold, label=""];
21->17 [style = dotted, label="true"];
0->8 [style = bold, label=""];
11->36 [style = dashed, label="0"];
11->6 [style = bold, label=""];
16->13 [style = bold, label=""];
21->34 [style = dotted, label="false"];
7->13 [style = dashed, label="0"];
21->25 [style = dotted, label="false"];
12->24 [style = dashed, label="0"];
29->23 [style = bold, label=""];
27->35 [style = bold, label=""];
6->10 [style = bold, label=""];
23->31 [style = bold, label=""];
19->25 [style = bold, label=""];
21->19 [style = bold, label=""];
8->32 [style = dashed, label="0"];
22->36 [style = bold, label=""];
26->1 [style = bold, label=""];
21->30 [style = dotted, label="false"];
17->28 [style = bold, label=""];
32->16 [style = bold, label=""];
21->19 [style = dotted, label="false"];
30->28 [style = bold, label=""];
4->13 [style = bold, label=""];
21->16 [style = dotted, label="true"];
21->32 [style = dotted, label="true"];
34->30 [style = bold, label=""];
18->27 [style = bold, label=""];
33->24 [style = bold, label=""];
10->14 [style = bold, label=""];
21->13 [style = dotted, label="true"];
1->0 [style = bold, label=""];
}
