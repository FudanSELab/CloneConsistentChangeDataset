digraph {
16 [style = filled, label = "MockProcessorSupplier<Integer,String> processor@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "i++@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "joined = stream1.outerJoin(stream2,MockValueJoiner.TOSTRING_JOINER,JoinWindows.of(100),intSerde,stringSerde,stringSerde)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,null),kv(3,null))@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "driver.flushState()@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "KTableValueGetter<Integer,String> getter = getterSupplier.get()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "stream1 = builder.stream(intSerde,stringSerde,topic1)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "i < 2@@@22@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int i = 0@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+null\",\"1:XX1+null\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "driver.process(topic2,expectedKey,\"YY\" + expectedKey)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+YY0\"),kv(1,\"X1+YY1\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "checkJoinedValues(getter,kv(0,\"XX0+null\"),kv(1,\"XX1+null\"),kv(2,\"XX2+YY2\"),kv(3,\"XX3+YY3\"))@@@70@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "i++@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YYY0\",\"0:X0+YYY0\",\"0:XX0+YYY0\",\"1:X1+YYY1\",\"1:X1+YYY1\",\"1:XX1+YYY1\")@@@50@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"YYY\" + expectedKeys(i()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "int i = 0@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "final int(( expectedKeys = new int((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@be3ad9@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "driver.flushState()@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "i < 2@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "i++@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "joined.process(processor)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "testJoin['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+Y0\"),kv(1,\"X1+Y1\"),kv(2,\"X2+null\"),kv(3,\"X3+null\"))@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "driver.process(topic2,expectedKeys(i(,null)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "processor = new MockProcessorSupplier<>()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "testOuterJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "driver.process(topic1,null,\"SomeVal\")@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
49 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@55@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+Y0\",\"1:X1+Y1\",\"2:X2+null\",\"3:X3+null\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "int i = 0@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "int i = 0@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "KStreamBuilder builder = new KStreamBuilder()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "driver.process(topic1,expectedKeys(i(,\"X\" + expectedKeys(i()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "i < 2@@@46@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "driver = new KStreamTestDriver(builder,stateDir)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "driver.flushState()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "processor.checkAndClearProcessResult(\"0:XX0+Y0\",\"0:XX0+YY0\",\"1:XX1+Y1\",\"1:XX1+YY1\",\"2:XX2+YY2\",\"3:XX3+YY3\")@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,null),kv(3,null))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,copartitionGroups.size())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "driver.flushState()@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "joined.toStream().process(processor)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "i < 2@@@58@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "driver.process(topic2,null,\"AnotherVal\")@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "KStream<Integer,String> stream2@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "driver.flushState()@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "KStream<Integer,String> joined@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "testJoin['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "stream2 = builder.stream(intSerde,stringSerde,topic2)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "i++@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "i < 2@@@28@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "assertEquals(new HashSet<>(Arrays.asList(topic1,topic2)),copartitionGroups.iterator().next())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "driver.setTime(0L)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final KStreamBuilder builder = new KStreamBuilder()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collection<Set<String>> copartitionGroups = builder.copartitionGroups()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@66@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+YY0\",\"0:X0+YY0\",\"1:X1+YY1\",\"1:X1+YY1\",\"2:X2+YY2\",\"3:X3+YY3\")@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "KTable<Integer,String> table1 = builder.table(intSerde,stringSerde,topic1,storeName1)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "driver.process(topic1,expectedKey,\"XX\" + expectedKey)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "KStream<Integer,String> stream1@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "i++@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Collection<Set<String>> copartitionGroups = builder.copartitionGroups()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "KTable<Integer,String> table2 = builder.table(intSerde,stringSerde,topic2,storeName2)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "checkJoinedValues(getter,kv(0,\"X0+null\"),kv(1,\"X1+null\"),kv(2,\"X2+YY2\"),kv(3,\"X3+YY3\"))@@@64@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "driver.process(topic1,expectedKey,\"X\" + expectedKey)@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "processor.checkAndClearProcessResult(\"0:X0+null\",\"1:X1+null\")@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "KTable<Integer,String> joined = table1.leftJoin(table2,MockValueJoiner.TOSTRING_JOINER)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "driver.process(topic2,expectedKeys(i(,\"Y\" + expectedKeys(i()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11->34 [style = bold, label=""];
7->23 [style = bold, label=""];
14->40 [style = solid, label="processor"];
8->48 [style = bold, label=""];
59->74 [style = bold, label=""];
13->25 [style = bold, label=""];
25->26 [style = bold, label=""];
35->19 [style = dotted, label="true"];
66->67 [style = bold, label=""];
33->17 [style = bold, label=""];
2->41 [style = bold, label=""];
67->73 [style = bold, label=""];
6->10 [style = solid, label="i"];
52->4 [style = solid, label="getter"];
6->8 [style = solid, label="i"];
9->70 [style = dashed, label="0"];
6->8 [style = bold, label=""];
61->57 [style = bold, label=""];
3->6 [style = bold, label=""];
49->3 [style = bold, label=""];
37->44 [style = solid, label="i"];
44->22 [style = dotted, label="true"];
36->18 [style = bold, label=""];
22->23 [style = solid, label="i"];
51->12 [style = bold, label=""];
17->13 [style = bold, label=""];
72->50 [style = dotted, label="true"];
8->48 [style = dotted, label="true"];
70->30 [style = solid, label="builder"];
61->59 [style = dotted, label="true"];
20->69 [style = dashed, label="0"];
19->72 [style = bold, label=""];
35->50 [style = bold, label=""];
44->55 [style = bold, label=""];
40->11 [style = bold, label=""];
26->46 [style = bold, label=""];
52->3 [style = solid, label="getter"];
28->30 [style = bold, label=""];
13->26 [style = bold, label=""];
72->33 [style = bold, label=""];
74->61 [style = solid, label="i"];
20->16 [style = bold, label=""];
6->48 [style = solid, label="i"];
58->7 [style = dotted, label="true"];
38->4 [style = bold, label=""];
37->22 [style = solid, label="i"];
41->32 [style = bold, label=""];
3->61 [style = solid, label="i"];
50->33 [style = bold, label=""];
29->19 [style = solid, label="expectedKeys"];
32->67 [style = dashed, label="0"];
35->54 [style = bold, label=""];
29->23 [style = solid, label="expectedKeys"];
1->22 [style = solid, label="i"];
50->72 [style = solid, label="i"];
22->58 [style = bold, label=""];
45->19 [style = solid, label="i"];
1->44 [style = bold, label=""];
53->38 [style = bold, label=""];
55->7 [style = bold, label=""];
15->5 [style = bold, label=""];
62->60 [style = bold, label=""];
45->21 [style = solid, label="i"];
69->16 [style = bold, label=""];
19->72 [style = solid, label="i"];
71->68 [style = bold, label=""];
61->59 [style = bold, label=""];
43->20 [style = bold, label=""];
3->74 [style = solid, label="i"];
37->1 [style = solid, label="i"];
1->44 [style = solid, label="i"];
52->30 [style = bold, label=""];
8->53 [style = bold, label=""];
54->50 [style = bold, label=""];
7->58 [style = solid, label="i"];
22->1 [style = bold, label=""];
72->13 [style = bold, label=""];
58->35 [style = bold, label=""];
61->74 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
50->72 [style = bold, label=""];
70->29 [style = bold, label=""];
58->23 [style = dotted, label="true"];
7->23 [style = solid, label="i"];
22->58 [style = solid, label="i"];
68->69 [style = bold, label=""];
52->5 [style = solid, label="getter"];
27->47 [style = bold, label=""];
72->33 [style = dotted, label="true"];
29->22 [style = solid, label="expectedKeys"];
63->70 [style = bold, label=""];
46->27 [style = bold, label=""];
39->43 [style = bold, label=""];
28->52 [style = bold, label=""];
10->8 [style = bold, label=""];
0->45 [style = bold, label=""];
34->36 [style = bold, label=""];
23->0 [style = bold, label=""];
60->65 [style = solid, label="stream2"];
33->50 [style = bold, label=""];
39->71 [style = dashed, label="0"];
19->33 [style = solid, label="i"];
31->49 [style = bold, label=""];
3->61 [style = bold, label=""];
29->71 [style = bold, label=""];
45->35 [style = bold, label=""];
52->17 [style = solid, label="getter"];
9->29 [style = bold, label=""];
37->22 [style = bold, label=""];
7->58 [style = bold, label=""];
74->59 [style = solid, label="i"];
21->35 [style = bold, label=""];
73->3 [style = bold, label=""];
4->51 [style = bold, label=""];
21->19 [style = solid, label="i"];
45->35 [style = solid, label="i"];
50->33 [style = solid, label="i"];
9->24 [style = solid, label="builder"];
10->48 [style = solid, label="i"];
60->65 [style = bold, label=""];
64->18 [style = bold, label=""];
48->10 [style = bold, label=""];
2->66 [style = bold, label=""];
43->20 [style = solid, label="table2"];
21->35 [style = solid, label="i"];
52->0 [style = solid, label="getter"];
30->37 [style = bold, label=""];
14->64 [style = solid, label="processor"];
37->44 [style = bold, label=""];
18->24 [style = bold, label=""];
29->33 [style = solid, label="expectedKeys"];
12->15 [style = bold, label=""];
52->46 [style = solid, label="getter"];
65->64 [style = bold, label=""];
74->61 [style = bold, label=""];
52->41 [style = solid, label="getter"];
35->21 [style = dotted, label="true"];
26->27 [style = bold, label=""];
3->59 [style = solid, label="i"];
19->21 [style = bold, label=""];
29->59 [style = solid, label="expectedKeys"];
43->68 [style = dashed, label="0"];
58->23 [style = bold, label=""];
47->2 [style = bold, label=""];
44->1 [style = dotted, label="true"];
29->39 [style = bold, label=""];
32->31 [style = bold, label=""];
16->14 [style = bold, label=""];
42->9 [style = bold, label=""];
56->9 [style = bold, label=""];
23->7 [style = bold, label=""];
48->59 [style = dashed, label="0"];
10->8 [style = solid, label="i"];
14->62 [style = bold, label=""];
44->7 [style = bold, label=""];
14->40 [style = bold, label=""];
24->28 [style = bold, label=""];
19->50 [style = solid, label="i"];
35->19 [style = bold, label=""];
44->22 [style = bold, label=""];
29->48 [style = solid, label="expectedKeys"];
27->2 [style = bold, label=""];
22->7 [style = solid, label="i"];
}
