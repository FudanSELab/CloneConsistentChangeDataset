digraph {
9 [style = filled, label = "DocumentMapper mapper = parser.parse(\"type\",new CompressedXContent(Strings.toString(mapping)))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "ParsedDocument doc = mapper.parse(SourceToParse.source(\"test\",\"type\",\"1\",BytesReference.bytes(XContentFactory.jsonBuilder().startObject().startObject(\"field\").field(getFromField(),getFrom(type)).field(getToField(),getTo(type)).endObject().endObject()),XContentType.JSON))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(1,fields.length)@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "IndexableField(( fields = doc.rootDoc().getFields(\"field\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(2,fields.length)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "doTestNotIndexed['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "IndexableField dvField = fields(0(@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "type.equals(\"date_range\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertFalse(pointField.fieldType().stored())@@@17@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "mapping = mapping.field(\"format\",DATE_FORMAT)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(2,pointField.fieldType().pointIndexDimensionCount())@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "doTestDefaults['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "assertEquals(2,pointField.fieldType().pointDimensionCount())@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertEquals(DocValuesType.BINARY,dvField.fieldType().docValuesType())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "XContentBuilder mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"field\").field(\"type\",type).field(\"index\",false)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertEquals(Strings.toString(mapping),mapper.mappingSource().toString())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String type@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "mapping = mapping.endObject().endObject().endObject().endObject()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "String type@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "IndexableField pointField = fields(1(@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "doTestDefaults['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "XContentBuilder mapping = XContentFactory.jsonBuilder().startObject().startObject(\"type\").startObject(\"properties\").startObject(\"field\").field(\"type\",type)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
4->10 [style = bold, label=""];
6->21 [style = dashed, label="0"];
20->13 [style = bold, label=""];
9->11 [style = bold, label=""];
4->1 [style = dotted, label="true"];
16->10 [style = bold, label=""];
2->6 [style = bold, label=""];
1->19 [style = dashed, label="0"];
18->19 [style = dotted, label="true"];
3->11 [style = solid, label="mapping"];
12->17 [style = dashed, label="0"];
13->5 [style = dotted, label="true"];
6->0 [style = bold, label=""];
3->9 [style = solid, label="mapping"];
0->15 [style = bold, label=""];
2->0 [style = solid, label="fields"];
1->10 [style = solid, label="type"];
3->9 [style = bold, label=""];
8->17 [style = bold, label=""];
18->20 [style = bold, label=""];
13->3 [style = bold, label=""];
10->13 [style = bold, label=""];
16->1 [style = dotted, label="true"];
2->8 [style = solid, label="fields"];
17->14 [style = bold, label=""];
7->2 [style = bold, label=""];
2->21 [style = bold, label=""];
12->14 [style = bold, label=""];
13->5 [style = bold, label=""];
10->20 [style = dashed, label="0"];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
11->7 [style = bold, label=""];
}
