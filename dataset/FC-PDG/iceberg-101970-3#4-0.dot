digraph {
12 [style = filled, label = "long pendingId = pending.snapshotId()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Snapshot pending = rewrite.rewriteFiles(Sets.newSet(FILE_A),Sets.newSet(FILE_B)).apply()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Should create 1 manifest for initial write\",1,base.currentSnapshot().allManifests().size())@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "AssertHelpers.assertThrows(\"Expected an exception\",,\"Missing required files to delete: /path/to/data-c.parquet\",null)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testAlreadyDeletedFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "table.newAppend().appendFile(FILE_A).appendFile(FILE_B).commit()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertEquals(\"Should contain 2 manifest\",2,pending.manifests().size())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Should create 1 manifest for initial write\",1,base.currentSnapshot().manifests().size())@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Assert.assertEquals(\"Only 1 manifests should exist\",1,listManifestFiles().size())@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testDeleteNonExistentFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "validateManifestEntries(pending.manifests().get(1),ids(pendingId,base.currentSnapshot().snapshotId()),files(FILE_A),statuses(DELETED))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "TableMetadata base = readMetadata()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"Table should start empty\",0,listManifestFiles().size())@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "table.newAppend().appendFile(FILE_A).commit()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testDeleteNonExistentFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Only 3 manifests should exist\",3,listManifestFiles().size())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "RewriteFiles rewrite = table.newRewrite()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "validateManifestEntries(pending.manifests().get(0),ids(pendingId),files(FILE_B),statuses(ADDED))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "AssertHelpers.assertThrows(\"Expected an exception\",,\"Missing required files to delete: /path/to/data-a.parquet\",null)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "rewrite.commit()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19->3 [style = bold, label=""];
1->10 [style = bold, label=""];
14->16 [style = bold, label=""];
10->17 [style = bold, label=""];
2->7 [style = bold, label=""];
15->12 [style = bold, label=""];
12->9 [style = solid, label="pendingId"];
6->13 [style = dashed, label="0"];
11->18 [style = bold, label=""];
0->3 [style = bold, label=""];
3->13 [style = bold, label=""];
5->4 [style = bold, label=""];
8->3 [style = bold, label=""];
6->2 [style = bold, label=""];
12->14 [style = solid, label="pendingId"];
3->6 [style = bold, label=""];
12->9 [style = bold, label=""];
1->7 [style = dashed, label="0"];
17->15 [style = bold, label=""];
2->1 [style = bold, label=""];
9->14 [style = bold, label=""];
7->5 [style = bold, label=""];
13->2 [style = bold, label=""];
16->11 [style = bold, label=""];
1->5 [style = bold, label=""];
}
