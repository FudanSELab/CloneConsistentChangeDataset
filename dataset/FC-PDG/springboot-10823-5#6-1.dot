digraph {
6 [style = filled, label = "TestPropertyValues.of(\"management.endpoints.web.cors.allowed-origins:spring.example.org\",\"management.endpoints.web.cors.allowed-headers:Alpha,Bravo\").applyTo(this.context)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "createWebTestClient().options().uri(\"/actuator/beans\").header(\"Origin\",\"spring.example.org\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,\"GET\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS,\"Alpha\").exchange().expectStatus().isForbidden()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
7 [style = filled, label = "allowedHeadersCanBeConfigured['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "TestPropertyValues.of(\"management.endpoints.web.cors.allowed-origins:spring.example.org\").applyTo(this.context)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "createWebTestClient().options().uri(\"/actuator/beans\").header(\"Origin\",\"spring.example.org\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_METHOD,\"GET\").header(HttpHeaders.ACCESS_CONTROL_REQUEST_HEADERS,\"Alpha\").exchange().expectStatus().isOk().expectHeader().valueEquals(HttpHeaders.ACCESS_CONTROL_ALLOW_HEADERS,\"Alpha\")@@@4@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "requestsWithDisallowedHeadersAreRejected['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "this.contextRunner.withPropertyValues(\"management.endpoints.web.cors.allowed-origins:spring.example.org\").run(withWebTestClient(null))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "requestsWithDisallowedHeadersAreRejected['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1->4 [style = dashed, label="0"];
6->5 [style = bold, label=""];
2->5 [style = dashed, label="0"];
1->2 [style = bold, label=""];
3->4 [style = bold, label=""];
0->1 [style = bold, label=""];
1->6 [style = dashed, label="0"];
7->6 [style = bold, label=""];
}
