digraph {
24 [style = filled, label = "assertEquals(8,histogram.getBuckets().size())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "assertEquals(0d,histogram.getBuckets().get(1).getKey())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertEquals(2,histogram.getBuckets().get(1).getDocCount())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "IndexSearcher searcher = new IndexSearcher(reader)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(9d,histogram.getBuckets().get(3).getKey())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
31 [style = filled, label = "assertEquals(24d,histogram.getBuckets().get(6).getKey())@@@31@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertEquals(6,histogram.getBuckets().size())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(7).getDocCount())@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
33 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(2).getDocCount())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(4d,histogram.getBuckets().get(2).getKey())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "doc.add(new BinaryDocValuesField(\"field\",encodedRange))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertEquals(45d,histogram.getBuckets().get(5).getKey())@@@25@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "InternalHistogram histogram = search(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testOffset['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(6).getDocCount())@@@31@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertEquals(-1d,histogram.getBuckets().get(1).getKey())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(3).getDocCount())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(0).getDocCount())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertEquals(29d,histogram.getBuckets().get(7).getKey())@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "testMultipleRanges['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "InternalHistogram histogram = searchAndReduce(searcher,new MatchAllDocsQuery(),aggBuilder,rangeField(\"field\",rangeType))@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testOffset['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Document doc = new Document()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(0,histogram.getBuckets().get(4).getDocCount())@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "w.addDocument(doc)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(14d,histogram.getBuckets().get(4).getKey())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(-6d,histogram.getBuckets().get(0).getKey())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "RangeType rangeType = RangeType.LONG@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "assertEquals(10d,histogram.getBuckets().get(3).getKey())@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(6).getDocCount())@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertEquals(3,histogram.getBuckets().get(2).getDocCount())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "RangeType rangeType = RangeType.DOUBLE@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(-5d,histogram.getBuckets().get(0).getKey())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(-6d,histogram.getBuckets().get(0).getKey())@@@18@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Set.of(new RangeFieldMapper.Range(rangeType,1L,5L,true,true),new RangeFieldMapper.Range(rangeType,-3L,4L,true,true),new RangeFieldMapper.Range(rangeType,4L,13L,true,true),new RangeFieldMapper.Range(rangeType,42L,49L,true,true)))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(40d,histogram.getBuckets().get(4).getKey())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(1).getDocCount())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(5).getDocCount())@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(5d,histogram.getBuckets().get(2).getKey())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "HistogramAggregationBuilder aggBuilder = new HistogramAggregationBuilder(\"my_agg\").field(\"field\").interval(5).offset(4)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(19d,histogram.getBuckets().get(5).getKey())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "assertEquals(1,histogram.getBuckets().get(4).getDocCount())@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "BytesRef encodedRange = rangeType.encodeRanges(Collections.singleton(range))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
17->5 [style = bold, label=""];
4->14 [style = bold, label=""];
3->14 [style = solid, label="doc"];
31->23 [style = bold, label=""];
42->2 [style = bold, label=""];
21->34 [style = dashed, label="0"];
16->31 [style = dashed, label="0"];
19->12 [style = bold, label=""];
5->39 [style = bold, label=""];
11->12 [style = solid, label="rangeType"];
0->17 [style = bold, label=""];
13->29 [style = dashed, label="0"];
10->19 [style = bold, label=""];
28->11 [style = bold, label=""];
2->34 [style = bold, label=""];
44->19 [style = bold, label=""];
35->33 [style = bold, label=""];
23->32 [style = bold, label=""];
14->10 [style = bold, label=""];
29->25 [style = bold, label=""];
41->4 [style = bold, label=""];
32->27 [style = bold, label=""];
20->4 [style = solid, label="encodedRange"];
10->12 [style = solid, label="aggBuilder"];
0->43 [style = dashed, label="0"];
43->37 [style = bold, label=""];
19->26 [style = solid, label="searcher"];
36->41 [style = solid, label="rangeType"];
14->45 [style = bold, label=""];
11->26 [style = solid, label="rangeType"];
7->8 [style = bold, label=""];
26->24 [style = bold, label=""];
25->16 [style = bold, label=""];
45->44 [style = bold, label=""];
38->42 [style = bold, label=""];
30->29 [style = bold, label=""];
12->7 [style = bold, label=""];
41->4 [style = solid, label="encodedRange"];
11->36 [style = dashed, label="0"];
20->4 [style = bold, label=""];
9->35 [style = dashed, label="0"];
39->18 [style = bold, label=""];
37->5 [style = bold, label=""];
40->36 [style = bold, label=""];
12->26 [style = dashed, label="0"];
20->41 [style = dashed, label="0"];
3->20 [style = bold, label=""];
21->9 [style = bold, label=""];
12->38 [style = bold, label=""];
36->19 [style = solid, label="rangeType"];
10->26 [style = solid, label="aggBuilder"];
8->2 [style = bold, label=""];
16->1 [style = bold, label=""];
11->3 [style = bold, label=""];
18->6 [style = bold, label=""];
2->21 [style = bold, label=""];
9->15 [style = bold, label=""];
6->16 [style = bold, label=""];
19->26 [style = bold, label=""];
15->0 [style = bold, label=""];
5->13 [style = bold, label=""];
16->31 [style = bold, label=""];
3->41 [style = bold, label=""];
33->43 [style = bold, label=""];
19->12 [style = solid, label="searcher"];
44->19 [style = solid, label="searcher"];
15->33 [style = dashed, label="0"];
7->12 [style = dashed, label="0"];
18->46 [style = bold, label=""];
5->30 [style = bold, label=""];
34->35 [style = bold, label=""];
24->8 [style = bold, label=""];
22->11 [style = bold, label=""];
45->19 [style = solid, label="aggBuilder"];
18->25 [style = dashed, label="0"];
13->18 [style = bold, label=""];
5->30 [style = dashed, label="0"];
36->3 [style = bold, label=""];
}
