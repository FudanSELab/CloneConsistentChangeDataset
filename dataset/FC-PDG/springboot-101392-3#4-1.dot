digraph {
8 [style = filled, label = "inOrder.verify(handler).onSuccess(eq(ConfigurationPropertyName.of(\"foo\")),eq(target),any(),isA())@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.binder.bind(\"foo\",target,handler)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "InOrder inOrder = inOrder(handler)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this.binder.bind(\"foo\",INTEGER_LIST,handler)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "inOrder.verify(handler).onSuccess(eq(ConfigurationPropertyName.of(\"foo(0(\")),eq(Bindable.of()),any(),eq(1))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "bindToArrayShouldTriggerOnSuccess['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "this.sources.add(new MockConfigurationPropertySource(\"foo(0(\",\"1\",\"line1\"))@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "bindToCollectionShouldTriggerOnSuccess['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "Bindable<Integer((> target = INTEGER_ARRAY@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "bindToCollectionShouldTriggerOnSuccess['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "BindHandler handler = mock(,withSettings().defaultAnswer(Answers.CALLS_REAL_METHODS))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "InOrder inOrder = inOrder(handler)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
6->1 [style = bold, label=""];
4->8 [style = bold, label=""];
10->3 [style = bold, label=""];
5->11 [style = solid, label="handler"];
1->2 [style = bold, label=""];
3->5 [style = bold, label=""];
5->1 [style = solid, label="handler"];
5->2 [style = solid, label="handler"];
9->11 [style = solid, label="target"];
9->8 [style = solid, label="target"];
5->6 [style = bold, label=""];
9->11 [style = bold, label=""];
5->9 [style = bold, label=""];
5->6 [style = solid, label="handler"];
2->4 [style = bold, label=""];
11->2 [style = bold, label=""];
7->3 [style = bold, label=""];
4->8 [style = dashed, label="0"];
}
