digraph {
15 [style = filled, label = "rulepair(0(.setUuid(UUID.randomUUID())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "rulepair(1(.setUuid(UUID.randomUUID())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final ConfigureStaticNatRulesOnLogicalRouterAnswer a = (ConfigureStaticNatRulesOnLogicalRouterAnswer)resource.executeRequest(cmd)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "when(cmd.getRules()).thenReturn(rules)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final ConfigureStaticNatRulesOnLogicalRouterAnswer a = (ConfigureStaticNatRulesOnLogicalRouterAnswer)resource.executeRequest(cmd)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "when(nvpApi.createLogicalRouterNatRule(eq(\"aaaaa\"),(NatRule)any())).thenReturn(rulepair(0().thenThrow(new NiciraNvpApiException())@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "when(nvpApi.findNatRulesByLogicalRouterUuid(\"aaaaa\")).thenReturn(storedRules)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "final List<StaticNatRuleTO> rules = new ArrayList<StaticNatRuleTO>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ConfigureStaticNatRulesOnLogicalRouterCommand cmd = mock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(a.getResult())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "when(nvpApi.createLogicalRouterNatRule(eq(\"aaaaa\"),(NatRule)any())).thenReturn(rulepair(0().thenReturn(rulepair(1()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testConfigureStaticNatRulesOnLogicalRouter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final StaticNatRuleTO rule = new StaticNatRuleTO(1,\"11.11.11.11\",null,null,\"10.10.10.10\",null,null,null,false,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "@SuppressWarnings(\"unchecked\") final List<NatRule> storedRules = Collections.EMPTY_LIST@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(a.getResult())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "when(cmd.getLogicalRouterUuid()).thenReturn(\"aaaaa\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "resource.configure(\"NiciraNvpResource\",parameters)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(nvpApi,atLeastOnce()).deleteLogicalRouterNatRule(eq(\"aaaaa\"),eq(rulepair(0(.getUuid()))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final NatRule(( rulepair = resource.generateStaticNatRulePair(\"10.10.10.10\",\"11.11.11.11\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "when(nvpApi.findNatRulesByLogicalRouterUuid(\"aaaaa\")).thenReturn(storedRules)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testConfigureStaticNatRulesOnLogicalRouter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rules.add(rule)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testConfigureStaticNatRulesOnLogicalRouterRollback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "@SuppressWarnings(\"unchecked\") final List<NatRule> storedRules = Collections.EMPTY_LIST@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->19 [style = dashed, label="0"];
13->15 [style = bold, label=""];
2->13 [style = bold, label=""];
7->9 [style = bold, label=""];
14->1 [style = solid, label="rules"];
12->1 [style = bold, label=""];
14->12 [style = bold, label=""];
11->21 [style = dashed, label="0"];
0->11 [style = bold, label=""];
2->8 [style = bold, label=""];
9->6 [style = bold, label=""];
9->11 [style = solid, label="cmd"];
19->21 [style = bold, label=""];
13->3 [style = solid, label="rulepair"];
9->4 [style = solid, label="cmd"];
6->14 [style = bold, label=""];
10->13 [style = bold, label=""];
23->20 [style = bold, label=""];
11->19 [style = bold, label=""];
22->7 [style = bold, label=""];
15->5 [style = bold, label=""];
5->18 [style = bold, label=""];
3->18 [style = dashed, label="0"];
16->7 [style = bold, label=""];
23->20 [style = solid, label="storedRules"];
5->3 [style = bold, label=""];
17->7 [style = bold, label=""];
8->10 [style = solid, label="storedRules"];
1->2 [style = bold, label=""];
8->10 [style = bold, label=""];
3->4 [style = bold, label=""];
6->12 [style = solid, label="rule"];
4->0 [style = bold, label=""];
18->23 [style = bold, label=""];
20->11 [style = bold, label=""];
}
