digraph {
8 [style = filled, label = "RunOptions options = CliFrontendParser.parseRunCommand(arguments)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertArrayEquals(reducedArguments,options.getProgramArgs())@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testNonExistingFileWithArguments['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "frontend.buildProgram(options)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "URL(( classpath = new URL((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b07521@@@7@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String(( arguments = {\"/some/none/existing/path\"}@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "RunOptions options = CliFrontendParser.parseRunCommand(arguments)@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "fail(\"Should fail with an exception\")@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testNonExistingFileWithArguments['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertArrayEquals(classpath,options.getClasspaths().toArray())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testNonExistingFileWithoutArguments['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertArrayEquals(reducedArguments,options.getProgramArgs())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(arguments(0(,options.getJarFilePath())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "String(( arguments = {\"--classpath\",\"file:///tmp/foo\",\"--classpath\",\"file:///tmp/bar\",\"/some/none/existing/path\",\"--debug\",\"true\",\"arg1\",\"arg2\"}@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String(( reducedArguments = {\"--debug\",\"true\",\"arg1\",\"arg2\"}@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "URL(( classpath = new URL((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1b07589@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "assertArrayEquals(new String((((,options.getProgramArgs())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "frontend.buildProgram(options)@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "fail(\"Should fail with an exception\")@@@19@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String(( reducedArguments = {\"--debug\",\"true\",\"arg1\",\"arg2\"}@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
15->10 [style = bold, label=""];
1->8 [style = bold, label=""];
13->12 [style = solid, label="arguments"];
12->14 [style = solid, label="options"];
5->14 [style = bold, label=""];
8->16 [style = solid, label="options"];
7->8 [style = bold, label=""];
10->5 [style = solid, label="reducedArguments"];
17->19 [style = bold, label=""];
7->3 [style = solid, label="reducedArguments"];
3->0 [style = bold, label=""];
19->16 [style = bold, label=""];
2->5 [style = solid, label="classpath"];
1->8 [style = solid, label="arguments"];
8->17 [style = bold, label=""];
6->1 [style = bold, label=""];
14->0 [style = bold, label=""];
18->1 [style = bold, label=""];
0->4 [style = bold, label=""];
10->12 [style = bold, label=""];
12->8 [style = bold, label=""];
9->17 [style = dashed, label="0"];
11->13 [style = bold, label=""];
15->9 [style = solid, label="classpath"];
8->9 [style = bold, label=""];
9->5 [style = bold, label=""];
1->2 [style = bold, label=""];
13->15 [style = bold, label=""];
2->7 [style = bold, label=""];
1->9 [style = solid, label="arguments"];
5->19 [style = dashed, label="0"];
13->8 [style = solid, label="arguments"];
8->0 [style = solid, label="options"];
1->17 [style = solid, label="arguments"];
}
