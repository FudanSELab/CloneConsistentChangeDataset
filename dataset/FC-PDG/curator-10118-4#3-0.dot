digraph {
6 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testAddWithoutEnsembleTracker['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "client.reconfig().inBackground(callback).joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(callbackLatch))@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "final CountDownLatch reconnectLatch = new CountDownLatch(1)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "client.reconfig().joining(toReconfigSpec(newCluster.getInstances())).fromConfig(oldConfig.getVersion()).forEnsemble()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "testAddAsync['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertConfig(newConfig,newInstances)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "final CountDownLatch callbackLatch = new CountDownLatch(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "newConfigData = client.getConfig().forEnsemble()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "QuorumVerifier newConfig = toQuorumVerifier(newConfigData)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "List<InstanceSpec> newInstances = Lists.newArrayList(cluster.getInstances())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertTrue(timing.awaitLatch(callbackLatch))@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "client.getZookeeperClient().getZooKeeper().getTestable().injectSessionExpiration()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "newCluster.start()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "Assert.assertTrue(reconnectLatch.await(2,TimeUnit.SECONDS))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assertConfig(oldConfig,cluster.getInstances())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
38 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "Assert.assertEquals(ensembleProvider.getConnectionString(),initialClusterCS)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@32@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertNotEquals(EnsembleTracker.configToConnectionString(newConfig),ensembleProvider.getConnectionString())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "byte(( newConfigData = client.getConfig().forEnsemble()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "client.start()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(timing.awaitLatch(latch))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "Assert.assertEquals(client.getZookeeperClient().getCurrentConnectionString(),initialClusterCS)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "QuorumVerifier oldConfig = toQuorumVerifier(client.getConfig().forEnsemble())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "client.start()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testAddAsync['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "assertConfig(newConfig,newInstances)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "newInstances.addAll(newCluster.getInstances())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "client.getConnectionStateListenable().addListener(null)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(timing.awaitLatch(latch))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
40 [style = filled, label = "Assert.assertEquals(((CuratorFrameworkImpl)client).getEnsembleTracker(),null)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final String initialClusterCS = cluster.getConnectString()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CountDownLatch latch = setChangeWaiter(client)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34->33 [style = solid, label="initialClusterCS"];
6->3 [style = bold, label=""];
11->28 [style = bold, label=""];
22->33 [style = bold, label=""];
35->27 [style = bold, label=""];
10->19 [style = solid, label="newConfig"];
1->8 [style = bold, label=""];
32->37 [style = bold, label=""];
37->24 [style = bold, label=""];
34->40 [style = bold, label=""];
14->3 [style = solid, label="newInstances"];
10->14 [style = bold, label=""];
16->10 [style = bold, label=""];
25->30 [style = bold, label=""];
34->35 [style = solid, label="initialClusterCS"];
9->4 [style = bold, label=""];
4->31 [style = solid, label="oldConfig"];
26->34 [style = bold, label=""];
12->17 [style = bold, label=""];
23->32 [style = bold, label=""];
13->17 [style = dashed, label="0"];
37->21 [style = solid, label="newConfig"];
31->2 [style = bold, label=""];
11->12 [style = bold, label=""];
40->9 [style = bold, label=""];
4->5 [style = solid, label="latch"];
4->2 [style = bold, label=""];
2->23 [style = solid, label="latch"];
34->38 [style = solid, label="initialClusterCS"];
10->7 [style = bold, label=""];
10->7 [style = solid, label="newConfig"];
4->20 [style = solid, label="latch"];
5->20 [style = dashed, label="0"];
21->38 [style = bold, label=""];
5->16 [style = bold, label=""];
16->10 [style = solid, label="newConfigData"];
36->21 [style = bold, label=""];
12->13 [style = bold, label=""];
4->31 [style = bold, label=""];
24->36 [style = bold, label=""];
10->3 [style = solid, label="newConfig"];
20->16 [style = bold, label=""];
15->11 [style = bold, label=""];
33->39 [style = bold, label=""];
3->19 [style = bold, label=""];
3->7 [style = bold, label=""];
18->1 [style = bold, label=""];
37->30 [style = solid, label="newConfig"];
28->23 [style = bold, label=""];
7->19 [style = dashed, label="0"];
0->1 [style = bold, label=""];
34->27 [style = solid, label="initialClusterCS"];
7->38 [style = dashed, label="0"];
2->15 [style = bold, label=""];
39->10 [style = bold, label=""];
37->22 [style = solid, label="newConfig"];
8->9 [style = bold, label=""];
8->9 [style = solid, label="oldConfig"];
13->5 [style = bold, label=""];
29->35 [style = bold, label=""];
15->13 [style = solid, label="callbackLatch"];
32->37 [style = solid, label="newConfigData"];
38->22 [style = bold, label=""];
27->25 [style = bold, label=""];
14->6 [style = bold, label=""];
2->11 [style = bold, label=""];
15->17 [style = solid, label="callbackLatch"];
24->21 [style = solid, label="newInstances"];
17->20 [style = bold, label=""];
7->29 [style = bold, label=""];
}
