digraph {
22 [style = filled, label = "assertTrue(item1.equals(item2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(item2.equals(item1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.0,1.0,3.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertFalse(item1.equals(item2))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.0,4.0,1.0,3.0)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertTrue(item1.equals(item2))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "XYIntervalDataItem item2 = CloneUtils.clone(item1)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "assertTrue(item1.equals(item2))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.0)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.3)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertFalse(item1.equals(item2))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.0,1.0,3.0)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertFalse(item1.equals(item2))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertFalse(item1.equals(item2))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.0)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "XYIntervalDataItem item1 = new XYIntervalDataItem(1.0,0.5,1.5,2.0,1.9,2.1)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.4,1.1,3.3)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertFalse(item1.equals(item2))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "item2 = new OHLCItem(new Year(2007),2.2,4.4,1.0,3.0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.0,4.0,1.0,3.0)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "OHLCItem item1 = new OHLCItem(new Year(2006),2.0,4.0,1.0,3.0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "OHLCItem item2 = new OHLCItem(new Year(2006),2.0,4.0,1.0,3.0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "XYIntervalDataItem item2 = (XYIntervalDataItem)item1.clone()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(item1.equals(item2))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertTrue(item1 != item2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(item1.getClass() == item2.getClass())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertTrue(item1.equals(item2))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "item1 = new OHLCItem(new Year(2007),2.2,4.4,1.0,3.0)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertTrue(item1.equals(item2))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->31 [style = bold, label=""];
19->18 [style = bold, label=""];
7->1 [style = bold, label=""];
22->15 [style = bold, label=""];
0->2 [style = solid, label="item2"];
20->10 [style = solid, label="item2"];
25->22 [style = bold, label=""];
8->17 [style = solid, label="item2"];
20->28 [style = solid, label="item2"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
30->26 [style = bold, label=""];
1->6 [style = solid, label="item1"];
0->6 [style = dashed, label="0"];
6->4 [style = solid, label="item2"];
21->23 [style = solid, label="item2"];
8->14 [style = bold, label=""];
9->20 [style = bold, label=""];
0->4 [style = solid, label="item2"];
25->22 [style = solid, label="item2"];
1->0 [style = bold, label=""];
12->24 [style = bold, label=""];
11->9 [style = bold, label=""];
3->4 [style = bold, label=""];
26->11 [style = bold, label=""];
25->16 [style = solid, label="item2"];
30->26 [style = solid, label="item2"];
20->10 [style = bold, label=""];
6->2 [style = bold, label=""];
29->28 [style = bold, label=""];
5->1 [style = bold, label=""];
8->14 [style = solid, label="item2"];
1->6 [style = bold, label=""];
0->25 [style = dashed, label="0"];
10->29 [style = bold, label=""];
1->24 [style = dashed, label="0"];
24->25 [style = bold, label=""];
16->30 [style = bold, label=""];
28->8 [style = bold, label=""];
1->2 [style = solid, label="item1"];
15->4 [style = bold, label=""];
27->17 [style = bold, label=""];
18->13 [style = bold, label=""];
21->19 [style = solid, label="item2"];
18->13 [style = solid, label="item2"];
6->2 [style = solid, label="item2"];
14->27 [style = bold, label=""];
24->15 [style = solid, label="item1"];
30->9 [style = solid, label="item2"];
17->21 [style = bold, label=""];
31->19 [style = bold, label=""];
4->16 [style = bold, label=""];
21->23 [style = bold, label=""];
}
