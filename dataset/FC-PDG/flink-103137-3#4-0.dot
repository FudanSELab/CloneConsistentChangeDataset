digraph {
11 [style = filled, label = "AbstractKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "StreamOperatorStateContext stateContext = streamTaskStateManager.streamOperatorStateContext(streamOperator.getOperatorID(),streamOperator.getClass().getSimpleName(),streamOperator,typeSerializer,closeableRegistry)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "++count@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "verify(mockingBackend).createStreamFactory(any(),any())@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "CheckpointStreamFactory streamFactory = stateContext.checkpointStreamFactory()@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "AbstractStreamOperator<?> streamOperator = mock()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Assert.assertEquals(3,count)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "MemoryStateBackend stateBackend = spy(new MemoryStateBackend(1024))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "TaskStateSnapshot taskStateSnapshot = new TaskStateSnapshot()@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "JobManagerTaskRestore jobManagerTaskRestore = new JobManagerTaskRestore(0L,taskStateSnapshot)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "TypeSerializer<?> typeSerializer = new IntSerializer()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "count = 0@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "CloseableRegistry closeableRegistry = new CloseableRegistry()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CheckpointStreamFactory streamFactory = stateContext.checkpointStreamFactory()@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(false,stateContext.isRestored())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "checkCloseablesRegistered(closeableRegistry,operatorStateBackend,keyedStateBackend,keyedStateInputs,operatorStateInputs)@@@68@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "StreamOperatorStateContext stateContext = streamTaskStateManager.streamOperatorStateContext(streamOperator.getOperatorID(),streamOperator.getClass().getSimpleName(),streamOperator,typeSerializer,closeableRegistry)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "testWithRestore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "verify(stateBackend).createKeyedStateBackend(any(),any(),any(),eq(typeSerializer),anyInt(),any(),any())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "CloseableIterable<KeyGroupStatePartitionStreamProvider> keyedStateInputs = stateContext.rawKeyedStateInputs()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "Assert.assertNull(timeServiceManager)@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Assert.assertEquals(1,count)@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "++count@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "OperatorID operatorID = new OperatorID(47L,11L)@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Assert.assertNotNull(timeServiceManager)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Assert.assertNotNull(operatorStateInputs)@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "when(streamOperator.getOperatorID()).thenReturn(operatorID)@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "TypeSerializer<?> typeSerializer = new IntSerializer()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "testNoRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
59 [style = filled, label = "AbstractKeyedStateBackend<?> keyedStateBackend = stateContext.keyedStateBackend()@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "Assert.assertNotNull(keyedStateInputs)@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "verify(stateBackend).createOperatorStateBackend(any(),any())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "CloseableIterable<StatePartitionStreamProvider> operatorStateInputs = stateContext.rawOperatorStateInputs()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "Assert.assertNotNull(streamFactory)@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "taskStateSnapshot.putSubtaskStateByOperatorID(operatorID,operatorSubtaskState)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "InternalTimeServiceManager<?,?> timeServiceManager = stateContext.internalTimerServiceManager()@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testNoRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CloseableIterable<StatePartitionStreamProvider> operatorStateInputs = stateContext.rawOperatorStateInputs()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "verify(stateBackend).createStreamFactory(any(),any())@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "verify(mockingBackend).createKeyedStateBackend(any(),any(),any(),eq(typeSerializer),anyInt(),any(),any())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AbstractStreamOperator<?> streamOperator = mock()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "InternalTimeServiceManager<?,?> timeServiceManager = stateContext.internalTimerServiceManager()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "OperatorSubtaskState operatorSubtaskState = new OperatorSubtaskState(new OperatorStateHandle(Collections.singletonMap(\"a\",new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bc3112,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)),CheckpointTestUtils.createDummyStreamStateHandle(random)),new OperatorStateHandle(Collections.singletonMap(\"_default_\",new OperatorStateHandle.StateMetaInfo(new long((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@1bc3128,OperatorStateHandle.Mode.SPLIT_DISTRIBUTE)),CheckpointTestUtils.createDummyStreamStateHandle(random)),CheckpointTestUtils.createDummyKeyGroupStateHandle(random),CheckpointTestUtils.createDummyKeyGroupStateHandle(random))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "verify(operatorStateBackend).restore(eq(operatorSubtaskState.getManagedOperatorState()))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertNotNull(keyedStateBackend)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "OperatorID operatorID = new OperatorID(47L,11L)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "Assert.assertEquals(true,stateContext.isRestored())@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "Random random = new Random(0x42)@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "StreamTaskStateInitializer streamTaskStateManager = streamTaskStateManager(stateBackend,null,true)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "verify(mockingBackend).createOperatorStateBackend(any(),any())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
61 [style = filled, label = "verify(keyedStateBackend).restore(eq(operatorSubtaskState.getManagedKeyedState()))@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "OperatorStateBackend operatorStateBackend = stateContext.operatorStateBackend()@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "OperatorStateBackend operatorStateBackend = stateContext.operatorStateBackend()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "StateBackend mockingBackend = spy(new StateBackend(){@Override public StreamStateHandle resolveCheckpoint(String pointer){return null}@Override public CheckpointStorage createCheckpointStorage(JobID jobId){return null}@Override public CheckpointStreamFactory createStreamFactory(JobID jobId,String operatorIdentifier){return mock()}@Override public CheckpointStreamFactory createSavepointStreamFactory(JobID jobId,String operatorIdentifier,@Nullable String targetLocation){return mock()}@Override public AbstractKeyedStateBackend<K> createKeyedStateBackend(Environment env,JobID jobID,String operatorIdentifier,TypeSerializer<K> keySerializer,int numberOfKeyGroups,KeyGroupRange keyGroupRange,TaskKvStateRegistry kvStateRegistry){return mock()}@Override public OperatorStateBackend createOperatorStateBackend(Environment env,String operatorIdentifier){return mock()}})@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "when(streamOperator.getOperatorID()).thenReturn(operatorID)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "CloseableIterable<KeyGroupStatePartitionStreamProvider> keyedStateInputs = stateContext.rawKeyedStateInputs()@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertNotNull(operatorStateBackend)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "Assert.assertNotNull(operatorStateBackend)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.fail()@@@29@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "int count = 0@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "Assert.assertNotNull(keyedStateBackend)@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "StreamTaskStateInitializer streamTaskStateManager = streamTaskStateManager(mockingBackend,jobManagerTaskRestore,false)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50->34 [style = solid, label="count"];
61->45 [style = bold, label=""];
55->36 [style = bold, label=""];
35->41 [style = bold, label=""];
60->29 [style = bold, label=""];
17->9 [style = bold, label=""];
21->8 [style = bold, label=""];
40->20 [style = bold, label=""];
12->14 [style = solid, label="closeableRegistry"];
26->14 [style = solid, label="operatorStateInputs"];
14->13 [style = solid, label="typeSerializer"];
12->2 [style = bold, label=""];
53->32 [style = bold, label=""];
46->32 [style = solid, label="streamFactory"];
42->56 [style = solid, label="closeableRegistry"];
8->11 [style = bold, label=""];
9->24 [style = bold, label=""];
14->54 [style = solid, label="typeSerializer"];
0->3 [style = bold, label=""];
8->16 [style = solid, label="operatorStateBackend"];
51->38 [style = solid, label="taskStateSnapshot"];
39->34 [style = bold, label=""];
23->31 [style = dashed, label="0"];
42->13 [style = solid, label="closeableRegistry"];
48->36 [style = solid, label="operatorStateBackend"];
8->14 [style = solid, label="operatorStateBackend"];
51->30 [style = bold, label=""];
12->2 [style = solid, label="closeableRegistry"];
27->16 [style = bold, label=""];
23->8 [style = bold, label=""];
6->53 [style = dashed, label="0"];
22->23 [style = bold, label=""];
48->56 [style = solid, label="operatorStateBackend"];
50->39 [style = bold, label=""];
4->0 [style = bold, label=""];
46->60 [style = bold, label=""];
26->27 [style = bold, label=""];
29->62 [style = solid, label="operatorStateInputs"];
38->37 [style = bold, label=""];
36->49 [style = bold, label=""];
45->57 [style = solid, label="count"];
11->17 [style = bold, label=""];
29->56 [style = solid, label="operatorStateInputs"];
41->38 [style = bold, label=""];
13->15 [style = bold, label=""];
62->33 [style = bold, label=""];
60->56 [style = solid, label="keyedStateInputs"];
27->55 [style = dashed, label="0"];
22->54 [style = dashed, label="0"];
16->18 [style = bold, label=""];
52->46 [style = bold, label=""];
3->1 [style = bold, label=""];
26->5 [style = solid, label="operatorStateInputs"];
47->40 [style = bold, label=""];
37->10 [style = bold, label=""];
4->0 [style = solid, label="stateBackend"];
13->54 [style = bold, label=""];
14->42 [style = bold, label=""];
58->57 [style = bold, label=""];
25->22 [style = solid, label="typeSerializer"];
1->7 [style = bold, label=""];
24->14 [style = solid, label="keyedStateInputs"];
34->56 [style = bold, label=""];
6->20 [style = bold, label=""];
11->14 [style = solid, label="keyedStateBackend"];
29->55 [style = bold, label=""];
24->26 [style = bold, label=""];
45->58 [style = bold, label=""];
10->5 [style = bold, label=""];
30->35 [style = bold, label=""];
31->44 [style = bold, label=""];
18->6 [style = bold, label=""];
6->10 [style = bold, label=""];
20->51 [style = bold, label=""];
3->7 [style = solid, label="operatorID"];
14->13 [style = bold, label=""];
59->49 [style = solid, label="keyedStateBackend"];
38->37 [style = solid, label="jobManagerTaskRestore"];
17->6 [style = solid, label="timeServiceManager"];
48->59 [style = bold, label=""];
33->61 [style = bold, label=""];
42->13 [style = bold, label=""];
43->62 [style = bold, label=""];
21->44 [style = dashed, label="0"];
57->50 [style = bold, label=""];
20->5 [style = solid, label="operatorID"];
59->52 [style = bold, label=""];
52->53 [style = solid, label="timeServiceManager"];
5->14 [style = bold, label=""];
32->43 [style = bold, label=""];
24->10 [style = solid, label="keyedStateInputs"];
59->56 [style = solid, label="keyedStateBackend"];
60->43 [style = solid, label="keyedStateInputs"];
20->10 [style = bold, label=""];
11->18 [style = solid, label="keyedStateBackend"];
49->53 [style = bold, label=""];
17->24 [style = bold, label=""];
40->37 [style = solid, label="mockingBackend"];
23->21 [style = bold, label=""];
54->31 [style = bold, label=""];
25->12 [style = bold, label=""];
44->48 [style = bold, label=""];
1->2 [style = solid, label="streamOperator"];
7->25 [style = bold, label=""];
19->4 [style = bold, label=""];
35->41 [style = solid, label="operatorSubtaskState"];
2->22 [style = bold, label=""];
10->13 [style = solid, label="streamOperator"];
4->40 [style = dashed, label="0"];
9->20 [style = solid, label="streamFactory"];
20->41 [style = solid, label="operatorID"];
25->2 [style = solid, label="typeSerializer"];
30->35 [style = solid, label="random"];
28->4 [style = bold, label=""];
}
