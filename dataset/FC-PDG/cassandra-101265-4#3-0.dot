digraph {
9 [style = filled, label = "createTable(\"CREATE TABLE %s (id int primary key, v1 text, v2 text)\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertLogEntry(logEntry,cql)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "SyntaxError e@@@11@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.size())@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "String cql = \"INSERT INTO \" + KEYSPACE + '.' + currentTable() + \" (id, v1, v2) VALUES (?,?,?)\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.size())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "Assert.fail(\"should not succeed\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "PreparedStatement pstmt = session.prepare(cql)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "{}@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "createTable(\"CREATE TABLE %s (id int primary key, v1 text, v2 text)\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "dropTable(\"DROP TABLE %s\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertLogEntry(cql,AuditLogEntryType.PREPARE_STATEMENT,logEntry,false)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "ResultSet rs = session.execute(pstmt.bind(1,\"insert_audit\",\"test\"))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Session session = sessionNet()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(0,((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.size())@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "NoHostAvailableException e@@@14@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.instance.getLogger()).inMemQueue.poll()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testCqlPrepareQueryError['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertLogEntry(logEntry,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "String cql = \"INSERT INTO \" + KEYSPACE + '.' + \"foo\" + \"(id, v1, v2) VALES (?,?,?)\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ResultSet rs = session.execute(pstmt.bind(1,\"insert_audit\",\"test\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testCqlPrepareQuerySyntaxError['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "{}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "{}@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertLogEntry(logEntry,cql)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "AuditLogEntry logEntry = ((InMemoryAuditLogger)AuditLogManager.getInstance().getLogger()).inMemQueue.poll()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testCqlPrepareQuerySyntaxError['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
25->4 [style = solid, label="cql"];
4->3 [style = bold, label=""];
23->25 [style = bold, label=""];
27->18 [style = bold, label=""];
10->4 [style = solid, label="logEntry"];
4->24 [style = bold, label=""];
5->14 [style = dashed, label="0"];
25->17 [style = solid, label="cql"];
26->10 [style = bold, label=""];
21->27 [style = bold, label=""];
6->21 [style = bold, label=""];
20->28 [style = bold, label=""];
5->7 [style = solid, label="logEntry"];
16->26 [style = bold, label=""];
3->6 [style = bold, label=""];
9->10 [style = bold, label=""];
11->4 [style = solid, label="cql"];
11->9 [style = bold, label=""];
7->8 [style = bold, label=""];
25->16 [style = bold, label=""];
5->17 [style = bold, label=""];
22->23 [style = bold, label=""];
17->19 [style = bold, label=""];
27->18 [style = solid, label="logEntry"];
2->12 [style = bold, label=""];
1->11 [style = bold, label=""];
14->7 [style = bold, label=""];
8->13 [style = dashed, label="0"];
24->20 [style = bold, label=""];
6->14 [style = bold, label=""];
6->5 [style = bold, label=""];
2->0 [style = bold, label=""];
15->11 [style = bold, label=""];
18->5 [style = bold, label=""];
12->14 [style = bold, label=""];
10->4 [style = bold, label=""];
5->17 [style = solid, label="logEntry"];
2->6 [style = dashed, label="0"];
5->7 [style = bold, label=""];
14->7 [style = solid, label="logEntry"];
28->27 [style = bold, label=""];
25->26 [style = solid, label="cql"];
11->7 [style = solid, label="cql"];
0->5 [style = bold, label=""];
}
