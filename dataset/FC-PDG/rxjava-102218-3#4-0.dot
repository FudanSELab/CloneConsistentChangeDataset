digraph {
5 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"two\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Observable<String> sampled = Observable.switchOnNext(source)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"four\")@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "switchWhenInnerCompleteBeforeOuter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "inOrder.verify(observer,never()).onNext(anyString())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "scheduler.advanceTimeTo(250,TimeUnit.MILLISECONDS)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "scheduler.advanceTimeTo(150,TimeUnit.MILLISECONDS)@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "inOrder.verify(subscriber,never()).onComplete()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "inOrder.verify(subscriber,never()).onNext(anyString())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Observable<Observable<String>> source = Observable.unsafeCreate(new ObservableSource<Observable<String>>(){@Override public void subscribe(Observer<? super Observable<String>> outerObserver){outerObserver.onSubscribe(Disposable.empty())publishNext(outerObserver,10,Observable.unsafeCreate(new ObservableSource<String>(){@Override public void subscribe(Observer<? super String> innerObserver){innerObserver.onSubscribe(Disposable.empty())publishNext(innerObserver,0,\"one\")publishNext(innerObserver,10,\"two\")publishCompleted(innerObserver,20)}}))publishNext(outerObserver,100,Observable.unsafeCreate(new ObservableSource<String>(){@Override public void subscribe(Observer<? super String> innerObserver){innerObserver.onSubscribe(Disposable.empty())publishNext(innerObserver,0,\"three\")publishNext(innerObserver,10,\"four\")publishCompleted(innerObserver,20)}}))publishCompleted(outerObserver,200)}})@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Flowable<String> sampled = Flowable.switchOnNext(source)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "sampled.subscribe(observer)@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "switchWhenInnerCompleteBeforeOuter['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "sampled.subscribe(subscriber)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"three\")@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "inOrder.verify(observer,never()).onComplete()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"one\")@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"four\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"one\")@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Flowable<Flowable<String>> source = Flowable.unsafeCreate(new Publisher<Flowable<String>>(){@Override public void subscribe(Subscriber<? super Flowable<String>> subscriber){subscriber.onSubscribe(new BooleanSubscription())publishNext(subscriber,10,Flowable.unsafeCreate(new Publisher<String>(){@Override public void subscribe(Subscriber<? super String> subscriber){subscriber.onSubscribe(new BooleanSubscription())publishNext(subscriber,0,\"one\")publishNext(subscriber,10,\"two\")publishCompleted(subscriber,20)}}))publishNext(subscriber,100,Flowable.unsafeCreate(new Publisher<String>(){@Override public void subscribe(Subscriber<? super String> subscriber){subscriber.onSubscribe(new BooleanSubscription())publishNext(subscriber,0,\"three\")publishNext(subscriber,10,\"four\")publishCompleted(subscriber,20)}}))publishCompleted(subscriber,200)}})@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"two\")@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "inOrder.verify(subscriber,times(1)).onComplete()@@@39@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"three\")@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inOrder.verify(observer,times(1)).onComplete()@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "switchWhenInnerCompleteBeforeOuter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
26->21 [style = bold, label=""];
3->11 [style = bold, label=""];
7->8 [style = bold, label=""];
23->15 [style = bold, label=""];
1->9 [style = bold, label=""];
11->20 [style = dashed, label="0"];
10->6 [style = bold, label=""];
8->4 [style = bold, label=""];
16->26 [style = bold, label=""];
3->22 [style = dashed, label="0"];
24->2 [style = bold, label=""];
25->19 [style = bold, label=""];
12->2 [style = bold, label=""];
6->1 [style = solid, label="source"];
13->19 [style = dashed, label="0"];
21->8 [style = bold, label=""];
6->17 [style = dashed, label="0"];
15->24 [style = bold, label=""];
22->20 [style = bold, label=""];
19->23 [style = bold, label=""];
9->26 [style = dashed, label="0"];
4->25 [style = dashed, label="0"];
12->24 [style = dashed, label="0"];
2->3 [style = bold, label=""];
7->21 [style = dashed, label="0"];
5->0 [style = bold, label=""];
0->12 [style = bold, label=""];
5->23 [style = dashed, label="0"];
17->16 [style = solid, label="source"];
8->25 [style = bold, label=""];
2->22 [style = bold, label=""];
14->6 [style = bold, label=""];
1->16 [style = dashed, label="0"];
4->13 [style = bold, label=""];
18->17 [style = bold, label=""];
0->15 [style = dashed, label="0"];
17->16 [style = bold, label=""];
6->1 [style = bold, label=""];
13->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
