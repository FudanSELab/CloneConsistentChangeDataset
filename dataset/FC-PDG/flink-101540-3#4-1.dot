digraph {
15 [style = filled, label = "verifyPlanDump['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "String args@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "verifyPlanDump['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Class<?> entrypoint@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "String args@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "verifyOptimizedPlan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final String json = dumper.getOptimizerPlanAsJSON(op)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String args@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "parser.nextToken() != null@@@11@@@['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final List<DataSinkNode> sinks = Optimizer.createPreOptimizedPlan(plan)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final Pipeline pipeline = PackagedProgramUtils.getPipelineFromProgram(program,1,true)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final Plan plan = (Plan)pipeline@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(pipeline instanceof Plan)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "{}@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final PlanJSONDumpGenerator dumper = new PlanJSONDumpGenerator()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Class<?> entrypoint@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "final Pipeline pipeline = PackagedProgramUtils.getPipelineFromProgram(program,1)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String json = dumper.getPactPlanAsJSON(sinks)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "parser.nextToken() != null@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "final OptimizedPlan op = compileNoStats(plan)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "final PackagedProgram program = PackagedProgram.newBuilder().setEntryPointClassName(entrypoint.getName()).setArguments(args).build()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "parser.nextToken() != null@@@11@@@['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10->21 [style = dashed, label="0"];
7->17 [style = bold, label=""];
9->0 [style = bold, label=""];
1->14 [style = dashed, label="0"];
8->2 [style = dotted, label="true"];
5->9 [style = solid, label="sinks"];
3->5 [style = solid, label="plan"];
4->13 [style = bold, label=""];
4->19 [style = bold, label=""];
16->7 [style = bold, label=""];
1->11 [style = solid, label="pipeline"];
1->3 [style = solid, label="pipeline"];
15->10 [style = dotted, label="true"];
8->6 [style = bold, label=""];
6->1 [style = solid, label="program"];
14->3 [style = solid, label="pipeline"];
15->6 [style = bold, label=""];
20->6 [style = bold, label=""];
20->21 [style = dotted, label="true"];
3->16 [style = bold, label=""];
8->10 [style = dotted, label="true"];
6->14 [style = solid, label="program"];
17->19 [style = bold, label=""];
14->11 [style = solid, label="pipeline"];
1->11 [style = bold, label=""];
4->0 [style = bold, label=""];
6->14 [style = bold, label=""];
3->16 [style = solid, label="plan"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
3->5 [style = bold, label=""];
16->17 [style = solid, label="op"];
11->3 [style = bold, label=""];
0->4 [style = bold, label=""];
9->17 [style = dashed, label="0"];
20->18 [style = dotted, label="true"];
15->12 [style = dotted, label="true"];
5->7 [style = bold, label=""];
19->4 [style = bold, label=""];
14->11 [style = bold, label=""];
9->13 [style = bold, label=""];
13->4 [style = bold, label=""];
}
