digraph {
3 [style = filled, label = "configurer.configure(this.mockRegistry)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "configureShouldApplyFilter['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "this.binders.add(this.mockBinder)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "this.filters.add(this.mockFilter)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "given(this.mockRegistry.config()).willReturn(this.mockConfig)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "verify(this.mockBinder).bindTo(this.mockRegistry)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "configureShouldApplyFilter['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "verify(this.mockConfig).meterFilter(this.mockFilter)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "configureShouldApplyBinder['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "MeterRegistryConfigurer configurer = new MeterRegistryConfigurer(createObjectProvider(this.customizers),createObjectProvider(this.filters),createObjectProvider(this.binders),false,false)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->3 [style = bold, label=""];
6->5 [style = bold, label=""];
4->1 [style = bold, label=""];
7->1 [style = bold, label=""];
3->2 [style = bold, label=""];
9->7 [style = bold, label=""];
0->4 [style = bold, label=""];
4->7 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
3->8 [style = bold, label=""];
5->4 [style = bold, label=""];
}
