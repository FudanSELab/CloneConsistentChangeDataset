digraph {
38 [style = filled, label = "testCreateConnectorAlreadyExists['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "PowerMock.expectLastCall()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "PowerMock.expectLastCall()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "putConnectorCallback.onCompletion(capture(error),EasyMock.isNull())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "config.remove(ConnectorConfig.NAME_CONFIG)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "PowerMock.replayAll()@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Capture<Callback<ConfigInfos>> validateCallback = newCapture()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "herder.tick()@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PowerMock.expectLastCall()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testCreateConnectorFailedValidation['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "EasyMock.expect(member.currentProtocolVersion()).andStubReturn(CONNECT_PROTOCOL_V0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expectPostRebalanceCatchup(SNAPSHOT)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HashMap<String,String> config = new HashMap<>(CONN2_CONFIG)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "PowerMock.expectLastCall()@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "member.poll(EasyMock.anyInt())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "herder.validateConnectorConfig(EasyMock.eq(CONN1_CONFIG),capture(validateCallback))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@33@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "herder.tick()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "PowerMock.expectLastCall()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "PowerMock.expectLastCall()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "expectRebalance(1,Collections.emptyList(),Collections.emptyList())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testCreateConnectorFailedValidation['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "member.wakeup()@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "putConnectorCallback.onCompletion(EasyMock.anyObject(),EasyMock.isNull())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "member.ensureActive()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "PowerMock.verifyAll()@@@34@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "member.wakeup()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "PowerMock.expectLastCall().andAnswer(new IAnswer<Void>(){@Override public Void answer(){validateCallback.getValue().onCompletion(null,CONN1_CONFIG_INFOS)return null}})@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "time.sleep(1000L)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "herder.putConnectorConfig(CONN1,CONN1_CONFIG,false,putConnectorCallback)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "PowerMock.expectLastCall()@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertStatistics(3,1,100,1000L)@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "PowerMock.expectLastCall().andAnswer(null)@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "herder.tick()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "herder.validateConnectorConfig(EasyMock.eq(config),capture(validateCallback))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Capture<Throwable> error = newCapture()@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "member.poll(EasyMock.anyInt())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "member.poll(EasyMock.anyInt())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "EasyMock.expect(member.memberId()).andStubReturn(\"leader\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "time.sleep(1000L)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "member.wakeup()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "PowerMock.expectLastCall()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
33->14 [style = bold, label=""];
26->42 [style = bold, label=""];
30->17 [style = bold, label=""];
13->24 [style = bold, label=""];
34->20 [style = bold, label=""];
7->30 [style = bold, label=""];
21->27 [style = bold, label=""];
28->20 [style = bold, label=""];
22->40 [style = dashed, label="0"];
8->18 [style = bold, label=""];
2->1 [style = bold, label=""];
31->32 [style = bold, label=""];
16->6 [style = bold, label=""];
1->15 [style = bold, label=""];
20->0 [style = solid, label="error"];
20->0 [style = bold, label=""];
35->39 [style = bold, label=""];
43->36 [style = bold, label=""];
34->20 [style = solid, label="error"];
22->29 [style = bold, label=""];
4->26 [style = bold, label=""];
11->37 [style = bold, label=""];
19->10 [style = bold, label=""];
22->40 [style = bold, label=""];
12->16 [style = bold, label=""];
25->14 [style = bold, label=""];
32->34 [style = bold, label=""];
31->42 [style = dashed, label="0"];
9->8 [style = bold, label=""];
40->13 [style = bold, label=""];
8->31 [style = solid, label="config"];
8->15 [style = solid, label="config"];
17->11 [style = bold, label=""];
28->41 [style = bold, label=""];
15->22 [style = bold, label=""];
38->14 [style = bold, label=""];
5->19 [style = bold, label=""];
26->31 [style = bold, label=""];
26->31 [style = solid, label="validateCallback"];
3->2 [style = bold, label=""];
10->12 [style = bold, label=""];
19->35 [style = bold, label=""];
39->10 [style = bold, label=""];
24->17 [style = bold, label=""];
31->28 [style = bold, label=""];
18->21 [style = bold, label=""];
42->28 [style = bold, label=""];
26->42 [style = solid, label="validateCallback"];
24->7 [style = bold, label=""];
23->9 [style = bold, label=""];
41->43 [style = bold, label=""];
8->22 [style = solid, label="config"];
4->23 [style = bold, label=""];
28->32 [style = dashed, label="0"];
36->19 [style = bold, label=""];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
27->26 [style = bold, label=""];
29->13 [style = bold, label=""];
}
