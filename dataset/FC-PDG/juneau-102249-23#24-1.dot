digraph {
7 [style = filled, label = "b.httpMethod(\"delete\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "b.httpMethod(\"get\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "stringStream(a.defaultRequestHeaders()).map(null).forEach(null)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "value(a.clientVersion()).ifPresent(null)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "stringStream(a.defaultRequestAttributes()).map(null).forEach(null)@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "b.addToIfNotEmpty(REST_roleGuard,string(a.roleGuard()))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "RestGet a = ai.getAnnotation()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "b.set(REST_encoders,merge(ConverterUtils.toType(b.peek(REST_encoders),),a.encoders()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "cdStream(a.rolesDeclared()).forEach(null)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "b.prependTo(REST_guards,reverse(a.guards()))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "value(a.debug()).map(null).ifPresent(null)@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "b.prependTo(REST_converters,a.converters())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "value(a.contextClass(),).ifPresent(null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stringStream(a.defaultQuery()).map(null).forEach(null)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RestDelete a = ai.getAnnotation()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "stringStream(a.path()).forEach(null)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "b.set(REST_serializers,merge(ConverterUtils.toType(b.peek(REST_serializers),),a.serializers()))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "stringStream(a.defaultResponseHeaders()).map(null).forEach(null)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "b.appendToIfNotEmpty(REST_defaultRequestHeaders,accept(string(a.defaultAccept())))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "b.prependTo(RESTOP_matchers,a.matchers())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "apply['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "apply['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "value(a.value()).ifPresent(null)@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "RestOperationContextBuilder b@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "b.setIfNotEmpty(REST_defaultCharset,string(a.defaultCharset()))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "AnnotationInfo<RestDelete> ai@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "RestOperationContextBuilder b@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "b.setIfNotEmpty(REST_produces,stringList(a.produces()))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "stringStream(a.defaultQueryData()).map(null).forEach(null)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "apply['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "AnnotationInfo<RestGet> ai@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23->16 [style = dotted, label="true"];
13->16 [style = dotted, label="true"];
18->3 [style = bold, label=""];
17->5 [style = bold, label=""];
27->32 [style = dotted, label="true"];
31->25 [style = bold, label=""];
16->32 [style = dashed, label="0"];
7->31 [style = dashed, label="0"];
7->12 [style = bold, label=""];
9->2 [style = bold, label=""];
2->1 [style = bold, label=""];
27->30 [style = bold, label=""];
23->21 [style = dotted, label="true"];
4->26 [style = bold, label=""];
8->14 [style = bold, label=""];
14->10 [style = bold, label=""];
3->6 [style = bold, label=""];
1->18 [style = bold, label=""];
10->17 [style = bold, label=""];
6->24 [style = bold, label=""];
17->22 [style = bold, label=""];
11->9 [style = bold, label=""];
27->28 [style = dotted, label="true"];
13->19 [style = bold, label=""];
22->0 [style = bold, label=""];
19->30 [style = dashed, label="0"];
5->0 [style = bold, label=""];
0->4 [style = bold, label=""];
30->31 [style = bold, label=""];
12->8 [style = bold, label=""];
23->19 [style = bold, label=""];
4->20 [style = bold, label=""];
14->29 [style = bold, label=""];
29->10 [style = bold, label=""];
25->8 [style = bold, label=""];
13->15 [style = dotted, label="true"];
19->7 [style = bold, label=""];
26->20 [style = bold, label=""];
20->11 [style = bold, label=""];
5->22 [style = dashed, label="0"];
}
