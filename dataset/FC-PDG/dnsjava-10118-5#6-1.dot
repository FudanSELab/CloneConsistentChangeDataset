digraph {
9 [style = filled, label = "List<Inet4Address> ipv4List = Arrays.asList((Inet4Address)InetAddress.getByName(\"1.2.3.4\"))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "SVCBRecord.ParameterEchConfig echconfig = new SVCBRecord.ParameterEchConfig(data)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "HTTPSRecord.ParameterMandatory mandatory = new HTTPSRecord.ParameterMandatory(mandatoryList)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertEquals(HTTPSRecord.PORT,port.getKey())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(HTTPSRecord.ECHCONFIG,echconfig.getKey())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assertEquals(SVCBRecord.ALPN,alpn.getKey())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertEquals(HTTPSRecord.IPV4HINT,ipv4hint.getKey())@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(SVCBRecord.MANDATORY,mandatory.getKey())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "SVCBRecord.ParameterMandatory mandatory = new SVCBBase.ParameterMandatory(mandatoryList)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "SVCBRecord.ParameterUnknown unknown = new SVCBRecord.ParameterUnknown(33,value)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "HTTPSRecord.ParameterUnknown unknown = new HTTPSRecord.ParameterUnknown(33,value)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertEquals(33,unknown.getKey())@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "byte(( data = {'a','b','c'}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(HTTPSRecord.IPV6HINT,ipv6hint.getKey())@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<Inet6Address> ipv6List = Arrays.asList((Inet6Address)InetAddress.getByName(\"2001::1\"))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "List<String> alpnList = Arrays.asList(\"h2\",\"h3\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "createParams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertEquals(alpnList,alpn.getValues())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "assertEquals(SVCBRecord.IPV6HINT,ipv6hint.getKey())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "createParams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(ipv4List,ipv4hint.getAddresses())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "SVCBRecord.ParameterAlpn alpn = new SVCBRecord.ParameterAlpn(alpnList)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertEquals(HTTPSRecord.MANDATORY,mandatory.getKey())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "List<Integer> mandatoryList = Arrays.asList(SVCBRecord.ALPN,SVCBRecord.IPV4HINT)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "byte(( value = {0,1,2,3}@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(SVCBRecord.IPV4HINT,ipv4hint.getKey())@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(SVCBRecord.ECHCONFIG,echconfig.getKey())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertEquals(HTTPSRecord.ALPN,alpn.getKey())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "HTTPSRecord.ParameterAlpn alpn = new HTTPSRecord.ParameterAlpn(alpnList)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "SVCBRecord.ParameterIpv6Hint ipv6hint = new SVCBRecord.ParameterIpv6Hint(ipv6List)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "HTTPSRecord.ParameterIpv6Hint ipv6hint = new HTTPSRecord.ParameterIpv6Hint(ipv6List)@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "SVCBRecord.ParameterPort port = new SVCBBase.ParameterPort(8443)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "List<Inet6Address> ipv6List = Collections.singletonList((Inet6Address)InetAddress.getByName(\"2001:db8::1\"))@@@24@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assertEquals(mandatoryList,mandatory.getValues())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HTTPSRecord.ParameterPort port = new HTTPSRecord.ParameterPort(8443)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(ipv6List,ipv6hint.getAddresses())@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "List<Inet4Address> ipv4List = Collections.singletonList((Inet4Address)InetAddress.getByName(\"1.2.3.4\"))@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "List<Integer> mandatoryList = Arrays.asList(HTTPSRecord.ALPN,HTTPSRecord.IPV4HINT)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "HTTPSRecord.ParameterEchConfig echconfig = new HTTPSRecord.ParameterEchConfig(data)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(data,echconfig.getData())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(8443,port.getPort())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "SVCBRecord.ParameterIpv4Hint ipv4hint = new SVCBRecord.ParameterIpv4Hint(ipv4List)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(SVCBRecord.PORT,port.getKey())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertEquals(value,unknown.getValue())@@@33@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "createParams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "HTTPSRecord.ParameterIpv4Hint ipv4hint = new HTTPSRecord.ParameterIpv4Hint(ipv4List)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->43 [style = bold, label=""];
12->35 [style = dashed, label="0"];
14->17 [style = bold, label=""];
21->24 [style = bold, label=""];
30->18 [style = bold, label=""];
9->16 [style = bold, label=""];
9->37 [style = bold, label=""];
23->28 [style = bold, label=""];
6->43 [style = solid, label="value"];
43->24 [style = bold, label=""];
26->36 [style = solid, label="alpnList"];
39->23 [style = bold, label=""];
16->14 [style = bold, label=""];
9->37 [style = solid, label="ipv4List"];
26->3 [style = solid, label="alpnList"];
6->21 [style = solid, label="value"];
32->11 [style = bold, label=""];
18->0 [style = bold, label=""];
27->2 [style = bold, label=""];
17->20 [style = bold, label=""];
34->33 [style = solid, label="mandatoryList"];
35->31 [style = bold, label=""];
16->37 [style = dashed, label="0"];
8->23 [style = bold, label=""];
1->31 [style = dashed, label="0"];
34->33 [style = bold, label=""];
9->17 [style = solid, label="ipv4List"];
12->1 [style = bold, label=""];
5->32 [style = dashed, label="0"];
26->27 [style = bold, label=""];
20->41 [style = bold, label=""];
0->33 [style = dashed, label="0"];
40->17 [style = bold, label=""];
5->11 [style = bold, label=""];
20->19 [style = bold, label=""];
34->11 [style = solid, label="mandatoryList"];
14->40 [style = dashed, label="0"];
11->26 [style = bold, label=""];
22->6 [style = bold, label=""];
18->0 [style = solid, label="mandatoryList"];
4->22 [style = solid, label="ipv6List"];
6->21 [style = bold, label=""];
2->3 [style = bold, label=""];
29->22 [style = solid, label="ipv6List"];
19->10 [style = bold, label=""];
27->36 [style = dashed, label="0"];
26->27 [style = solid, label="alpnList"];
4->35 [style = solid, label="ipv6List"];
19->41 [style = dashed, label="0"];
18->34 [style = dashed, label="0"];
3->44 [style = bold, label=""];
10->13 [style = bold, label=""];
29->12 [style = solid, label="ipv6List"];
2->45 [style = dashed, label="0"];
24->25 [style = bold, label=""];
38->34 [style = bold, label=""];
7->18 [style = bold, label=""];
4->12 [style = bold, label=""];
33->32 [style = bold, label=""];
15->8 [style = bold, label=""];
0->5 [style = bold, label=""];
4->35 [style = bold, label=""];
21->43 [style = dashed, label="0"];
42->13 [style = bold, label=""];
31->22 [style = bold, label=""];
28->16 [style = solid, label="ipv4List"];
18->11 [style = solid, label="mandatoryList"];
20->19 [style = solid, label="data"];
45->3 [style = bold, label=""];
20->41 [style = solid, label="data"];
26->36 [style = bold, label=""];
9->28 [style = dashed, label="0"];
15->44 [style = dashed, label="0"];
3->15 [style = bold, label=""];
44->39 [style = bold, label=""];
10->42 [style = dashed, label="0"];
28->16 [style = bold, label=""];
9->16 [style = solid, label="ipv4List"];
1->22 [style = bold, label=""];
13->29 [style = bold, label=""];
29->12 [style = bold, label=""];
8->39 [style = dashed, label="0"];
4->12 [style = solid, label="ipv6List"];
28->17 [style = solid, label="ipv4List"];
6->25 [style = solid, label="value"];
36->45 [style = bold, label=""];
20->13 [style = solid, label="data"];
4->29 [style = dashed, label="0"];
23->9 [style = bold, label=""];
13->4 [style = bold, label=""];
37->40 [style = bold, label=""];
41->42 [style = bold, label=""];
}
