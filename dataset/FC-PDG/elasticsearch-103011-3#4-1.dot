digraph {
0 [style = filled, label = "assertThat(coerce,equalTo(false))@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "boolean coerce = ((ShapeFieldMapper)fieldMapper).coerce()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "fieldMapper = defaultMapper.mappers().getMapper(FIELD_NAME)@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "DocumentMapper defaultMapper = createIndex(\"test\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testCoerceParsing['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(\"location\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCoerceParsing['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "coerce = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).coerce().value()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(coerce,equalTo(false))@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "assertFieldWarnings(\"tree\")@@@15@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "coerce = ((ShapeFieldMapper)fieldMapper).coerce().value()@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "defaultMapper = createDocumentMapper(fieldMapping(null))@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
21 [style = filled, label = "DocumentMapper defaultMapper = createDocumentMapper(fieldMapping(null))@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "coerce = ((ShapeFieldMapper)fieldMapper).coerce()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
28 [style = filled, label = "mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"coerce\",\"false\").endObject().endObject().endObject().endObject())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"shape\").field(\"coerce\",\"true\").endObject().endObject().endObject().endObject())@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(coerce,equalTo(true))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "boolean coerce = ((ShapeFieldMapper)fieldMapper).coerce().value()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Mapper fieldMapper = defaultMapper.mappers().getMapper(FIELD_NAME)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "defaultMapper = createIndex(\"test2\").mapperService().documentMapperParser().parse(\"type1\",new CompressedXContent(mapping))@@@10@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "String mapping = Strings.toString(XContentFactory.jsonBuilder().startObject().startObject(\"type1\").startObject(\"properties\").startObject(\"location\").field(\"type\",\"geo_shape\").field(\"coerce\",\"true\").endObject().endObject().endObject().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testCoerceParsing['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "boolean coerce = ((GeoShapeWithDocValuesFieldMapper)fieldMapper).coerce().value()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(fieldMapper,instanceOf())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24->10 [style = bold, label=""];
5->3 [style = bold, label=""];
29->2 [style = solid, label="mapping"];
0->9 [style = bold, label=""];
22->5 [style = solid, label="fieldMapper"];
17->18 [style = solid, label="coerce"];
10->28 [style = bold, label=""];
17->1 [style = bold, label=""];
3->1 [style = bold, label=""];
1->11 [style = solid, label="fieldMapper"];
6->10 [style = solid, label="coerce"];
18->15 [style = bold, label=""];
18->15 [style = solid, label="coerce"];
6->17 [style = dashed, label="0"];
4->2 [style = bold, label=""];
24->10 [style = solid, label="coerce"];
7->4 [style = bold, label=""];
14->20 [style = solid, label="fieldMapper"];
12->6 [style = bold, label=""];
5->17 [style = bold, label=""];
28->3 [style = solid, label="mapping"];
22->5 [style = bold, label=""];
13->26 [style = dashed, label="0"];
17->1 [style = solid, label="coerce"];
1->25 [style = solid, label="fieldMapper"];
1->11 [style = bold, label=""];
23->29 [style = bold, label=""];
20->18 [style = bold, label=""];
4->2 [style = solid, label="mapping"];
26->0 [style = solid, label="coerce"];
8->12 [style = solid, label="fieldMapper"];
26->0 [style = bold, label=""];
29->2 [style = bold, label=""];
5->28 [style = dashed, label="0"];
5->3 [style = solid, label="mapping"];
10->5 [style = bold, label=""];
19->14 [style = bold, label=""];
21->22 [style = bold, label=""];
6->24 [style = dashed, label="0"];
16->21 [style = bold, label=""];
6->10 [style = bold, label=""];
11->13 [style = bold, label=""];
25->26 [style = bold, label=""];
14->20 [style = bold, label=""];
12->27 [style = dashed, label="0"];
11->25 [style = dashed, label="0"];
13->0 [style = solid, label="coerce"];
27->24 [style = bold, label=""];
28->3 [style = bold, label=""];
13->18 [style = dashed, label="0"];
4->29 [style = dashed, label="0"];
1->19 [style = bold, label=""];
8->27 [style = bold, label=""];
1->25 [style = bold, label=""];
8->12 [style = bold, label=""];
8->27 [style = solid, label="fieldMapper"];
2->8 [style = bold, label=""];
13->0 [style = bold, label=""];
}
