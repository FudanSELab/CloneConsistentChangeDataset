digraph {
21 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),1L),is(true))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),1),is(true))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),1.0D),is(true))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(SqlFunctions.eqAny(new BigDecimal(1L),new BigDecimal(1.0D)),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(SqlFunctions.gtAny(\"banana\",\"apple\"),is(true))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(SqlFunctions.eqAny(\"2\",2),is(false))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(SqlFunctions.gtAny(2L,1.0D),is(true))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(SqlFunctions.eqAny(new BigDecimal(1L),1),is(true))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertThat(SqlFunctions.eqAny(1,1L),is(true))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(SqlFunctions.eqAny(new BigDecimal(1L),1.0D),is(true))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(SqlFunctions.eqAny(new BigDecimal(1L),1L),is(true))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testEqWithAny['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testEqWithAny['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertThat(SqlFunctions.eqAny(1,1.0D),is(true))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(SqlFunctions.eqAny(1L,1.0D),is(true))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(SqlFunctions.gtAny(2,1.0D),is(true))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(SqlFunctions.gtAny(new BigDecimal(2L),new BigDecimal(1.0D)),is(true))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(SqlFunctions.gtAny(\"2\",1L),is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "fail(\"'gt' on non-numeric different type is not possible\")@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testGtWithAny['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(SqlFunctions.eqAny(\"hello\",\"hello\"),is(true))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertThat(SqlFunctions.gtAny(2,1L),is(true))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->12 [style = dashed, label="0"];
7->18 [style = dashed, label="0"];
5->9 [style = bold, label=""];
19->12 [style = bold, label=""];
0->19 [style = dashed, label="0"];
12->11 [style = bold, label=""];
6->0 [style = bold, label=""];
16->17 [style = bold, label=""];
15->19 [style = bold, label=""];
9->8 [style = bold, label=""];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
21->18 [style = bold, label=""];
7->3 [style = bold, label=""];
8->13 [style = dashed, label="0"];
1->6 [style = bold, label=""];
8->2 [style = bold, label=""];
2->21 [style = dashed, label="0"];
6->15 [style = dashed, label="0"];
11->13 [style = bold, label=""];
9->11 [style = dashed, label="0"];
14->15 [style = bold, label=""];
2->7 [style = bold, label=""];
13->21 [style = bold, label=""];
3->16 [style = dashed, label="0"];
0->5 [style = bold, label=""];
17->20 [style = bold, label=""];
18->16 [style = bold, label=""];
}
