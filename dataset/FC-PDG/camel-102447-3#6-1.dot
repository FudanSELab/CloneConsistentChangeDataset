digraph {
6 [style = filled, label = "muteExceptionTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testMuteException['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertNotNull(responseString)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "String responseString = EntityUtils.toString(response.getEntity(),\"UTF-8\")@@@7@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "HttpResponse response = client.execute(get)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "HttpGet get = new HttpGet(\"http://localhost:\" + getPort() + \"/test/mute\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "GetMethod get = new GetMethod(\"http://localhost:\" + getPort() + \"/foo\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(500,response.getStatusLine().getStatusCode())@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Assert.assertEquals(\"Exception\",body)@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "GetMethod get = new GetMethod(\"http://localhost:\" + getPort() + \"/test/mute\")@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "get.addHeader(\"Accept\",\"application/text\")@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "muteExceptionTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "get.setRequestHeader(\"Accept\",\"application/text\")@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HttpClient client = new HttpClient()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(\"Exception\",responseString)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "String body = get.getResponseBodyAsString()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(500,get.getStatusCode())@@@10@@@['1', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "client.executeMethod(get)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "CloseableHttpClient client = HttpClients.createDefault()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "client.close()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Assert.assertNotNull(body)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->3 [style = bold, label=""];
17->10 [style = bold, label=""];
10->18 [style = bold, label=""];
8->19 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
1->8 [style = bold, label=""];
19->2 [style = solid, label="get"];
7->11 [style = dashed, label="0"];
1->9 [style = dashed, label="0"];
9->17 [style = bold, label=""];
11->12 [style = bold, label=""];
4->2 [style = bold, label=""];
20->1 [style = bold, label=""];
0->7 [style = solid, label="body"];
6->1 [style = bold, label=""];
12->13 [style = bold, label=""];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
15->11 [style = bold, label=""];
14->11 [style = solid, label="responseString"];
3->7 [style = bold, label=""];
8->2 [style = solid, label="get"];
2->18 [style = dashed, label="0"];
0->3 [style = solid, label="body"];
3->15 [style = dashed, label="0"];
8->17 [style = dashed, label="0"];
14->15 [style = bold, label=""];
19->4 [style = bold, label=""];
8->4 [style = bold, label=""];
1->19 [style = bold, label=""];
17->18 [style = solid, label="get"];
4->10 [style = dashed, label="0"];
18->14 [style = bold, label=""];
16->9 [style = bold, label=""];
14->15 [style = solid, label="responseString"];
}
