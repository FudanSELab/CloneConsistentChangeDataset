digraph {
10 [style = filled, label = "i < expectedNumResults@@@35@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertNull(reduce.sortedTopDocs.collapseValues)@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertEquals(expectedNumResults,numQueryResultListener.get())@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "int bufferSize = randomIntBetween(2,200)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "SearchPhaseController.ReducedQueryPhase reduce = consumer.reduce()@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "AtomicInteger numReduceListener = new AtomicInteger()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Thread(( threads = new Thread((((@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int id = i@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < expectedNumResults@@@41@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertEquals(max.get(),reduce.maxScore,0.0f)@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertEquals(max.get(),reduce.maxScore,0.0f)@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "QueryPhaseResultConsumer consumer = searchPhaseController.newSearchPhaseResults(fixedExecutor,progressListener,request,expectedNumResults,null)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertEquals(expectedNumResults,reduce.totalHits.value)@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(reduce.totalHits,totalHitsListener.get())@@@79@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertEquals(numReduceListener.get(),reduce.numReducePhases)@@@82@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "AtomicInteger max = new AtomicInteger()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "AtomicInteger max = new AtomicInteger()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "request.source(new SearchSourceBuilder().aggregation(AggregationBuilders.avg(\"foo\")))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "int expectedNumResults = randomIntBetween(10,100)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "threads(i( = new Thread(null)@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "AtomicReference<TotalHits> totalHitsListener = new AtomicReference<>()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "assertFalse(reduce.sortedTopDocs.isSortedByField)@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testConsumerConcurrently['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(reduce.sortedTopDocs.isSortedByField)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "i < expectedNumResults@@@61@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertAggReduction(request)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ArraySearchPhaseResults<SearchPhaseResult> consumer = searchPhaseController.newSearchPhaseResults(fixedExecutor,new NoopCircuitBreaker(CircuitBreaker.REQUEST),SearchProgressListener.NOOP,request,expectedNumResults,null)@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "assertNull(reduce.sortedTopDocs.collapseValues)@@@51@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "AtomicReference<InternalAggregations> finalAggsListener = new AtomicReference<>()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "int i = 0@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "threads(i(.start()@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "i < expectedNumResults@@@15@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(expectedNumResults,reduce.totalHits.value)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "InternalMax internalMax = (InternalMax)reduce.aggregations.asList().get(0)@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
58 [style = filled, label = "assertNull(reduce.sortedTopDocs.collapseField)@@@76@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "threads(i(.start()@@@58@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "testProgressListener['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "int id = i@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "i++@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertEquals(reduce.aggregations,finalAggsListener.get())@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNull(reduce.sortedTopDocs.sortFields)@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,reduce.sortedTopDocs.scoreDocs.length)@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Thread(( threads = new Thread((((@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertEquals(0,numQueryFailureListener.get())@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "CountDownLatch latch = new CountDownLatch(expectedNumResults)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "request.source(new SearchSourceBuilder().aggregation(AggregationBuilders.avg(\"foo\")))@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertEquals(max.get(),reduce.sortedTopDocs.scoreDocs(0(.score,0.0f)@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "SearchRequest request = randomSearchRequest()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertNull(reduce.sortedTopDocs.collapseField)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "i++@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "int i = 0@@@60@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "AtomicInteger numQueryFailureListener = new AtomicInteger()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "request.setBatchedReduceSize(bufferSize)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "int expectedNumResults = randomIntBetween(1,100)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testConsumerConcurrently['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "threads(i(.join()@@@63@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "i++@@@62@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "AtomicInteger numQueryResultListener = new AtomicInteger()@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "threads(i( = new Thread(null)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "SearchRequest request = randomSearchRequest()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertNull(reduce.sortedTopDocs.sortFields)@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(max.get(),internalMax.getValue(),0.0D)@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "CountDownLatch latch = new CountDownLatch(expectedNumResults)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "SearchProgressListener progressListener = new SearchProgressListener(){@Override public void onQueryResult(int shardIndex){assertThat(shardIndex,lessThan(expectedNumResults))numQueryResultListener.incrementAndGet()}@Override public void onQueryFailure(int shardIndex,SearchShardTarget shardTarget,Exception exc){assertThat(shardIndex,lessThan(expectedNumResults))numQueryFailureListener.incrementAndGet()}@Override public void onPartialReduce(List<SearchShard> shards,TotalHits totalHits,DelayableWriteable.Serialized<InternalAggregations> aggs,int reducePhase){assertEquals(numReduceListener.incrementAndGet(),reducePhase)}@Override public void onFinalReduce(List<SearchShard> shards,TotalHits totalHits,InternalAggregations aggs,int reducePhase){totalHitsListener.set(totalHits)finalAggsListener.set(aggs)assertEquals(numReduceListener.incrementAndGet(),reducePhase)}}@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "latch.await()@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(max.get(),reduce.sortedTopDocs.scoreDocs(0(.score,0.0f)@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->28 [style = bold, label=""];
60->64 [style = bold, label=""];
10->21 [style = bold, label=""];
54->21 [style = bold, label=""];
20->10 [style = solid, label="expectedNumResults"];
59->22 [style = bold, label=""];
31->27 [style = solid, label="bufferSize"];
44->9 [style = solid, label="expectedNumResults"];
5->32 [style = bold, label=""];
9->30 [style = bold, label=""];
34->20 [style = bold, label=""];
64->39 [style = bold, label=""];
20->24 [style = solid, label="expectedNumResults"];
15->7 [style = solid, label="i"];
48->53 [style = solid, label="i"];
15->4 [style = solid, label="i"];
22->23 [style = solid, label="i"];
53->65 [style = bold, label=""];
19->29 [style = bold, label=""];
20->7 [style = solid, label="expectedNumResults"];
44->17 [style = solid, label="expectedNumResults"];
36->47 [style = bold, label=""];
39->51 [style = bold, label=""];
44->43 [style = solid, label="expectedNumResults"];
56->38 [style = bold, label=""];
17->23 [style = bold, label=""];
44->64 [style = solid, label="expectedNumResults"];
17->22 [style = bold, label=""];
5->24 [style = solid, label="request"];
35->54 [style = solid, label="progressListener"];
22->17 [style = solid, label="i"];
24->33 [style = dashed, label="0"];
20->0 [style = solid, label="expectedNumResults"];
66->58 [style = bold, label=""];
24->37 [style = bold, label=""];
47->43 [style = bold, label=""];
27->33 [style = bold, label=""];
57->52 [style = bold, label=""];
1->10 [style = bold, label=""];
20->31 [style = bold, label=""];
14->13 [style = bold, label=""];
29->7 [style = solid, label="i"];
22->17 [style = bold, label=""];
6->20 [style = bold, label=""];
15->7 [style = bold, label=""];
35->54 [style = bold, label=""];
7->29 [style = dotted, label="true"];
51->66 [style = bold, label=""];
63->53 [style = bold, label=""];
8->2 [style = bold, label=""];
41->60 [style = bold, label=""];
50->35 [style = bold, label=""];
44->27 [style = bold, label=""];
58->61 [style = bold, label=""];
27->56 [style = solid, label="request"];
31->5 [style = bold, label=""];
5->17 [style = solid, label="request"];
29->7 [style = bold, label=""];
48->63 [style = solid, label="i"];
61->36 [style = bold, label=""];
20->33 [style = solid, label="expectedNumResults"];
28->10 [style = bold, label=""];
17->11 [style = dotted, label="true"];
17->22 [style = dotted, label="true"];
68->40 [style = bold, label=""];
44->53 [style = solid, label="expectedNumResults"];
30->17 [style = bold, label=""];
24->26 [style = bold, label=""];
16->29 [style = solid, label="i"];
21->45 [style = bold, label=""];
17->48 [style = bold, label=""];
48->53 [style = bold, label=""];
44->54 [style = solid, label="expectedNumResults"];
65->63 [style = bold, label=""];
17->59 [style = dotted, label="true"];
29->4 [style = solid, label="i"];
11->25 [style = bold, label=""];
13->15 [style = bold, label=""];
11->59 [style = bold, label=""];
53->46 [style = bold, label=""];
7->4 [style = dotted, label="true"];
10->1 [style = dotted, label="true"];
4->16 [style = bold, label=""];
67->50 [style = bold, label=""];
28->1 [style = solid, label="i"];
16->19 [style = bold, label=""];
30->23 [style = solid, label="i"];
32->27 [style = bold, label=""];
0->3 [style = bold, label=""];
26->14 [style = bold, label=""];
40->27 [style = bold, label=""];
37->57 [style = bold, label=""];
27->54 [style = solid, label="request"];
3->12 [style = bold, label=""];
20->13 [style = solid, label="expectedNumResults"];
11->22 [style = solid, label="i"];
53->63 [style = dotted, label="true"];
25->0 [style = bold, label=""];
49->67 [style = bold, label=""];
21->1 [style = bold, label=""];
44->35 [style = solid, label="expectedNumResults"];
52->49 [style = bold, label=""];
12->8 [style = bold, label=""];
7->16 [style = dotted, label="true"];
30->17 [style = solid, label="i"];
7->19 [style = dotted, label="true"];
20->44 [style = dashed, label="0"];
1->10 [style = solid, label="i"];
10->9 [style = bold, label=""];
17->23 [style = dotted, label="true"];
45->9 [style = bold, label=""];
62->44 [style = bold, label=""];
23->11 [style = bold, label=""];
46->42 [style = bold, label=""];
38->55 [style = bold, label=""];
27->24 [style = bold, label=""];
2->18 [style = bold, label=""];
7->4 [style = bold, label=""];
63->53 [style = solid, label="i"];
43->68 [style = bold, label=""];
55->41 [style = bold, label=""];
53->65 [style = dotted, label="true"];
28->10 [style = solid, label="i"];
10->21 [style = dotted, label="true"];
22->23 [style = bold, label=""];
42->56 [style = bold, label=""];
5->33 [style = solid, label="request"];
33->26 [style = bold, label=""];
}
