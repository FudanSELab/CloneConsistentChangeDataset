digraph {
34 [style = filled, label = "Assert.assertFalse(unrepairedContains(sstable))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "SSTableDeletingNotification notification = new SSTableDeletingNotification(sstable)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "compactionTask.execute(null)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertFalse(pendingContains(repairID,sstable))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "Assert.assertFalse(hasTransientStrategiesFor(repairID))@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "LocalSessionAccessor.failUnsafe(repairID)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@21@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@22@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertFalse(hasPendingStrategiesFor(repairID))@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "csm.getForPendingRepair(repairID).forEach(null)@@@9@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "UUID repairID = registerSession(cfs,true,true)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "Assert.assertEquals(ActiveRepairService.UNREPAIRED_SSTABLE,sstable.getSSTableMetadata().repairedAt)@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "SSTableReader sstable = makeSSTable(true)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "csm.handleNotification(notification,cfs.getTracker())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "Assert.assertFalse(sstable.isPendingRepair())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "LocalSessionAccessor.prepareUnsafe(repairID,COORDINATOR,PARTICIPANTS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertTrue(sstable.isPendingRepair())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cleanupCompactionFailed['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "csm.handleNotification(new SSTableAddedNotification(Collections.singleton(sstable),null),cfs.getTracker())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertFalse(sstable.isRepaired())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "mutateRepaired(sstable,repairID)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "AbstractCompactionTask compactionTask = csm.getNextBackgroundTask(FBUtilities.nowInSeconds())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "mutateRepaired(sstable,repairID,false)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "cfs.getCompactionStrategyManager().enable()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertNotNull(pendingContains(repairID,sstable))@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "Assert.assertTrue(pendingContains(repairID,sstable))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "sstableDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertFalse(repairedContains(sstable))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertNotNull(compactionTask)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(unrepairedContains(sstable))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "cleanupCompactionFailed['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "Assert.assertTrue(hasPendingStrategiesFor(repairID))@@@9@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Assert.assertTrue(pendingContains(sstable))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "Assert.assertSame(,compactionTask.getClass())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->6 [style = solid, label="sstable"];
17->8 [style = bold, label=""];
8->27 [style = solid, label="sstable"];
5->10 [style = bold, label=""];
15->18 [style = solid, label="repairID"];
6->3 [style = bold, label=""];
15->22 [style = solid, label="repairID"];
16->0 [style = bold, label=""];
31->37 [style = bold, label=""];
31->37 [style = solid, label="notification"];
8->13 [style = solid, label="sstable"];
8->36 [style = solid, label="sstable"];
8->32 [style = solid, label="sstable"];
23->27 [style = bold, label=""];
13->24 [style = bold, label=""];
8->31 [style = solid, label="sstable"];
33->15 [style = bold, label=""];
8->3 [style = solid, label="sstable"];
2->6 [style = bold, label=""];
25->23 [style = bold, label=""];
0->1 [style = solid, label="compactionTask"];
21->15 [style = bold, label=""];
15->10 [style = solid, label="repairID"];
11->4 [style = bold, label=""];
22->9 [style = bold, label=""];
36->31 [style = bold, label=""];
15->17 [style = solid, label="repairID"];
1->12 [style = solid, label="compactionTask"];
8->14 [style = bold, label=""];
14->22 [style = dashed, label="0"];
15->14 [style = solid, label="repairID"];
24->29 [style = bold, label=""];
32->34 [style = bold, label=""];
15->24 [style = solid, label="repairID"];
15->25 [style = solid, label="repairID"];
10->7 [style = bold, label=""];
15->23 [style = solid, label="repairID"];
13->11 [style = bold, label=""];
8->22 [style = bold, label=""];
19->16 [style = bold, label=""];
8->14 [style = solid, label="sstable"];
15->29 [style = solid, label="repairID"];
19->34 [style = dashed, label="0"];
29->20 [style = bold, label=""];
15->17 [style = bold, label=""];
12->2 [style = bold, label=""];
8->22 [style = solid, label="sstable"];
8->34 [style = solid, label="sstable"];
9->18 [style = bold, label=""];
30->28 [style = bold, label=""];
8->35 [style = solid, label="sstable"];
15->32 [style = solid, label="repairID"];
0->1 [style = bold, label=""];
15->36 [style = solid, label="repairID"];
18->5 [style = bold, label=""];
18->36 [style = dashed, label="0"];
26->15 [style = bold, label=""];
4->20 [style = bold, label=""];
1->12 [style = bold, label=""];
18->25 [style = bold, label=""];
3->13 [style = bold, label=""];
37->32 [style = bold, label=""];
7->32 [style = dashed, label="0"];
8->10 [style = solid, label="sstable"];
14->9 [style = bold, label=""];
27->19 [style = bold, label=""];
34->35 [style = bold, label=""];
20->30 [style = bold, label=""];
10->23 [style = dashed, label="0"];
7->19 [style = bold, label=""];
8->9 [style = solid, label="sstable"];
9->36 [style = bold, label=""];
}
