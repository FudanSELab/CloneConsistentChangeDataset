digraph {
24 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetadata.SETTING_VERSION_CREATED,Version.V_7_0_0).put(IndexMetadata.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetadata.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetadata.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.2))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<Coordinate> shellCoordinates = new ArrayList<>()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(e,hasToString(containsString(\"unable to add coordinate to CoordinateBuilder: coordinate dimensions do not match\")))@@@24@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "parser.nextToken()@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "testParseMixedDimensionPolyWithHoleStoredZ['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "final GeoShapeFieldMapper mapperBuilder = (GeoShapeFieldMapper)(new GeoShapeFieldMapper.Builder(\"test\").ignoreZValue(false).build(mockBuilderContext))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.V_7_0_0).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@20@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "List<Coordinate> holeCoordinates = new ArrayList<>()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testParseMixedDimensionPolyWithHole['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(e,hasToString(containsString(\"but (ignore_z_value( parameter is (false(\")))@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ElasticsearchException e = expectThrows(,null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "shellCoordinates.add(new Coordinate(100,0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "builder.hole(new LineStringBuilder(holeCoordinates))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final LegacyGeoShapeFieldMapper mapperBuilder = (LegacyGeoShapeFieldMapper)(new LegacyGeoShapeFieldMapper.Builder(\"test\").ignoreZValue(true).build(mockBuilderContext))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "shellCoordinates.add(new Coordinate(100,1))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "testParseMixedDimensionPolyWithHole['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Settings indexSettings = Settings.builder().put(IndexMetaData.SETTING_VERSION_CREATED,Version.CURRENT).put(IndexMetaData.SETTING_NUMBER_OF_REPLICAS,0).put(IndexMetaData.SETTING_NUMBER_OF_SHARDS,1).put(IndexMetaData.SETTING_INDEX_UUID,UUIDs.randomBase64UUID()).build()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "XContentBuilder xContentBuilder = XContentFactory.jsonBuilder().value(builder.toWKT())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ElasticsearchParseException e = expectThrows(,null)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "holeCoordinates.add(new Coordinate(100.8,0.8))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "shellCoordinates.add(new Coordinate(101,1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.2,15.0))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "PolygonBuilder builder = new PolygonBuilder(new CoordinatesBuilder().coordinates(shellCoordinates))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Mapper.BuilderContext mockBuilderContext = new Mapper.BuilderContext(indexSettings,new ContentPath())@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "holeCoordinates.add(new Coordinate(100.2,0.8,10.0))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "holeCoordinates.add(new Coordinate(100.8,0.2))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "shellCoordinates.add(new Coordinate(101,0))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "XContentParser parser = createParser(xContentBuilder)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->15 [style = bold, label=""];
19->27 [style = dashed, label="0"];
18->3 [style = bold, label=""];
15->2 [style = bold, label=""];
1->8 [style = bold, label=""];
15->28 [style = dashed, label="0"];
3->1 [style = bold, label=""];
16->15 [style = solid, label="mockBuilderContext"];
17->6 [style = bold, label=""];
6->4 [style = solid, label="shellCoordinates"];
10->27 [style = bold, label=""];
10->24 [style = bold, label=""];
10->19 [style = bold, label=""];
11->21 [style = bold, label=""];
14->22 [style = bold, label=""];
2->9 [style = solid, label="e"];
2->9 [style = bold, label=""];
25->29 [style = bold, label=""];
27->16 [style = bold, label=""];
27->16 [style = solid, label="indexSettings"];
26->6 [style = bold, label=""];
13->11 [style = bold, label=""];
19->16 [style = bold, label=""];
20->10 [style = bold, label=""];
7->14 [style = bold, label=""];
14->5 [style = solid, label="holeCoordinates"];
12->13 [style = bold, label=""];
24->16 [style = bold, label=""];
22->18 [style = bold, label=""];
9->29 [style = dashed, label="0"];
16->28 [style = bold, label=""];
5->0 [style = bold, label=""];
19->16 [style = solid, label="indexSettings"];
23->6 [style = bold, label=""];
24->16 [style = solid, label="indexSettings"];
16->28 [style = solid, label="mockBuilderContext"];
2->25 [style = dashed, label="0"];
28->25 [style = bold, label=""];
21->7 [style = bold, label=""];
0->20 [style = bold, label=""];
19->24 [style = dashed, label="0"];
25->29 [style = solid, label="e"];
8->4 [style = bold, label=""];
4->5 [style = bold, label=""];
0->20 [style = solid, label="xContentBuilder"];
6->12 [style = bold, label=""];
}
