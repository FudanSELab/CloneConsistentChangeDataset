digraph {
50 [style = filled, label = "assertEquals(250,avgMetric.value(),EPSILON)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "int throttleTimeMs = 100 * i@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "i <= 3@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "selector.delayedReceive(new DelayedReceive(node.idString(),new NetworkReceive(node.idString(),buffer)))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
39 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '1', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeAvg))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeAvg)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "client.poll(1,time.milliseconds())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "client.close()@@@36@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "client.send(request,time.milliseconds())@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "MockSelector selector = new MockSelector(time)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(400,maxMetric.value(),EPSILON)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "selector.clear()@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "buffer = response.serialize(ApiKeys.FETCH.latestVersion(),new ResponseHeader(request.correlationId()))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "client.close()@@@32@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Cluster cluster = TestUtils.singletonCluster(\"test\",1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "short apiVersionsResponseVersion = ApiKeys.API_VERSIONS.latestVersion()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "selector.clear()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "assertEquals(400,maxMetric.value(),EPS)@@@35@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "FetchRequest.Builder builder = FetchRequest.Builder.forConsumer(100,100,new LinkedHashMap<TopicPartition,PartitionData>())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "FetchResponse response = fullFetchResponse(tp0,nextRecords,Errors.NONE,i,throttleTimeMs)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Sensor throttleTimeSensor = Sender.throttleTimeSensor(this.senderMetricsRegistry)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "i++@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "ClientRequest request = client.newClientRequest(node.idString(),builder,time.milliseconds(),true,null)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "time.sleep(client.throttleDelayMs(node,time.milliseconds()))@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "i <= 3@@@14@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ByteBuffer buffer = ApiVersionsResponse.createApiVersionsResponse(400,RecordBatch.CURRENT_MAGIC_VALUE).serialize(apiVersionsResponseVersion,new ResponseHeader(0))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(250,avgMetric.value(),EPS)@@@34@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
40 [style = filled, label = "!client.ready(node,time.milliseconds())@@@11@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchThrottleTimeMax))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "client.poll(1,time.milliseconds())@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(this.senderMetricsRegistry.produceThrottleTimeMax)@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor,new LogContext())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "Sensor throttleTimeSensor = Fetcher.throttleTimeSensor(metrics,metricsRegistry)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "selector.clear()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "NetworkClient client = new NetworkClient(selector,metadata,\"mock\",Integer.MAX_VALUE,1000,1000,64 * 1024,64 * 1024,1000,time,true,new ApiVersions(),throttleTimeSensor,logContext)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "client.send(request,time.milliseconds())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "selector.completeReceive(new NetworkReceive(node.idString(),buffer))@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "int i = 1@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "client.poll(1,time.milliseconds())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "client.poll(1,time.milliseconds())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "Node node = cluster.nodes().get(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->41 [style = dashed, label="0"];
2->26 [style = bold, label=""];
25->1 [style = bold, label=""];
5->20 [style = bold, label=""];
41->8 [style = bold, label=""];
25->4 [style = dotted, label="true"];
25->35 [style = dotted, label="true"];
4->15 [style = bold, label=""];
42->2 [style = solid, label="buffer"];
12->13 [style = solid, label="apiVersionsResponseVersion"];
20->28 [style = solid, label="selector"];
15->19 [style = solid, label="i"];
30->29 [style = bold, label=""];
46->43 [style = solid, label="throttleTimeSensor"];
6->29 [style = bold, label=""];
17->28 [style = solid, label="throttleTimeSensor"];
21->2 [style = bold, label=""];
25->18 [style = dotted, label="true"];
7->9 [style = bold, label=""];
29->6 [style = bold, label=""];
49->1 [style = solid, label="builder"];
16->49 [style = bold, label=""];
15->16 [style = solid, label="i"];
17->46 [style = dashed, label="0"];
9->14 [style = bold, label=""];
9->47 [style = bold, label=""];
30->40 [style = bold, label=""];
40->24 [style = bold, label=""];
1->25 [style = solid, label="i"];
23->50 [style = dashed, label="0"];
25->21 [style = dotted, label="true"];
16->7 [style = solid, label="i"];
42->2 [style = bold, label=""];
0->19 [style = bold, label=""];
24->0 [style = bold, label=""];
22->43 [style = bold, label=""];
14->47 [style = dashed, label="0"];
7->26 [style = solid, label="throttleTimeMs"];
27->31 [style = bold, label=""];
44->50 [style = bold, label=""];
23->3 [style = bold, label=""];
19->21 [style = dotted, label="true"];
48->44 [style = bold, label=""];
22->31 [style = solid, label="node"];
25->7 [style = bold, label=""];
26->4 [style = bold, label=""];
1->7 [style = solid, label="request"];
8->38 [style = bold, label=""];
20->43 [style = solid, label="selector"];
40->29 [style = dotted, label="true"];
38->32 [style = bold, label=""];
16->26 [style = solid, label="i"];
0->15 [style = solid, label="i"];
15->47 [style = solid, label="i"];
49->1 [style = bold, label=""];
18->1 [style = bold, label=""];
43->12 [style = bold, label=""];
16->14 [style = solid, label="throttleTimeMs"];
19->4 [style = dotted, label="true"];
28->43 [style = dashed, label="0"];
16->1 [style = solid, label="i"];
19->9 [style = dotted, label="true"];
1->26 [style = solid, label="i"];
32->36 [style = bold, label=""];
29->40 [style = bold, label=""];
50->41 [style = bold, label=""];
0->47 [style = solid, label="i"];
25->26 [style = dotted, label="true"];
14->21 [style = bold, label=""];
39->34 [style = dotted, label="true"];
19->26 [style = dotted, label="true"];
40->29 [style = bold, label=""];
19->47 [style = dotted, label="true"];
39->37 [style = bold, label=""];
19->1 [style = dotted, label="true"];
27->18 [style = bold, label=""];
15->14 [style = solid, label="i"];
29->6 [style = dotted, label="true"];
47->42 [style = bold, label=""];
25->31 [style = dotted, label="true"];
22->28 [style = bold, label=""];
45->20 [style = bold, label=""];
28->12 [style = bold, label=""];
19->15 [style = dotted, label="true"];
15->19 [style = bold, label=""];
19->7 [style = dotted, label="true"];
19->42 [style = dotted, label="true"];
18->48 [style = dashed, label="0"];
1->7 [style = bold, label=""];
25->7 [style = dotted, label="true"];
21->42 [style = dashed, label="0"];
19->16 [style = bold, label=""];
13->30 [style = solid, label="buffer"];
12->13 [style = bold, label=""];
39->37 [style = dotted, label="true"];
18->10 [style = bold, label=""];
0->16 [style = solid, label="i"];
10->23 [style = bold, label=""];
3->8 [style = bold, label=""];
34->39 [style = bold, label=""];
11->22 [style = bold, label=""];
25->2 [style = dotted, label="true"];
1->25 [style = bold, label=""];
16->47 [style = solid, label="throttleTimeMs"];
25->1 [style = dotted, label="true"];
19->14 [style = dotted, label="true"];
4->35 [style = bold, label=""];
39->15 [style = bold, label=""];
35->27 [style = bold, label=""];
20->17 [style = bold, label=""];
19->25 [style = dotted, label="true"];
33->20 [style = bold, label=""];
25->23 [style = bold, label=""];
19->2 [style = dotted, label="true"];
14->21 [style = solid, label="request"];
29->39 [style = dashed, label="0"];
20->46 [style = bold, label=""];
19->49 [style = dotted, label="true"];
10->44 [style = dashed, label="0"];
31->18 [style = bold, label=""];
16->25 [style = bold, label=""];
25->14 [style = dotted, label="true"];
13->30 [style = bold, label=""];
4->35 [style = solid, label="buffer"];
15->16 [style = bold, label=""];
22->34 [style = solid, label="node"];
46->11 [style = bold, label=""];
16->25 [style = solid, label="i"];
21->2 [style = solid, label="buffer"];
0->14 [style = solid, label="i"];
25->1 [style = solid, label="builder"];
25->9 [style = dotted, label="true"];
37->34 [style = bold, label=""];
19->27 [style = bold, label=""];
9->14 [style = solid, label="builder"];
27->48 [style = bold, label=""];
19->16 [style = dotted, label="true"];
30->39 [style = bold, label=""];
0->19 [style = solid, label="i"];
25->27 [style = dotted, label="true"];
29->24 [style = bold, label=""];
1->7 [style = solid, label="i"];
17->11 [style = bold, label=""];
}
