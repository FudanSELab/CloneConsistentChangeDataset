digraph {
12 [style = filled, label = "fetcher.initFetches(cluster)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "i <= 3@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "subscriptions.assign(Arrays.asList(tp))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "int i = 1@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "testQuotaMetrics['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "consumerClient.poll(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testQuotaMetrics['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(new MetricName(\"produce-throttle-time-max\",METRIC_GROUP,\"\",metricTags))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "List<ConsumerRecord<byte((,byte((>> records@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "sender.run(time.milliseconds())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "records = fetcher.fetchedRecords().get(tp)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sender.run(time.milliseconds())@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertEquals(300,maxMetric.value(),EPS)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testQuotaMetrics['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "subscriptions.subscribe(tp)@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "assertEquals(200,avgMetric.value(),EPS)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Future<RecordMetadata> future = accumulator.append(tp,\"key\".getBytes(),\"value\".getBytes(),null).future@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "client.prepareResponse(fetchResponse(this.records.buffer(),Errors.NONE.code(),100L,100 * i))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(new MetricName(\"fetch-throttle-time-avg\",metricGroup,\"\",metricTags))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "KafkaMetric maxMetric = allMetrics.get(new MetricName(\"fetch-throttle-time-max\",metricGroup,\"\",metricTags))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(300,maxMetric.value(),EPSILON)@@@19@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i < 4@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertEquals(3,records.size())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final long offset = 0@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "client.respond(produceResponse(tp,offset,Errors.NONE.code(),100 * i))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "subscriptions.seek(tp,0)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "KafkaMetric avgMetric = allMetrics.get(new MetricName(\"produce-throttle-time-avg\",METRIC_GROUP,\"\",metricTags))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertEquals(200,avgMetric.value(),EPSILON)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->5 [style = dotted, label="true"];
2->9 [style = solid, label="i"];
7->1 [style = bold, label=""];
23->5 [style = bold, label=""];
24->2 [style = bold, label=""];
16->8 [style = bold, label=""];
28->20 [style = bold, label=""];
4->1 [style = dotted, label="true"];
25->23 [style = bold, label=""];
5->4 [style = solid, label="i"];
28->22 [style = solid, label="offset"];
27->28 [style = bold, label=""];
20->22 [style = solid, label="i"];
4->7 [style = dotted, label="true"];
25->24 [style = dotted, label="true"];
8->6 [style = bold, label=""];
10->17 [style = bold, label=""];
3->22 [style = dashed, label="0"];
15->19 [style = dashed, label="0"];
2->22 [style = solid, label="i"];
16->19 [style = bold, label=""];
12->9 [style = bold, label=""];
2->4 [style = bold, label=""];
20->25 [style = bold, label=""];
0->17 [style = dashed, label="0"];
29->26 [style = bold, label=""];
4->25 [style = dashed, label="0"];
26->16 [style = bold, label=""];
25->5 [style = dotted, label="true"];
0->14 [style = bold, label=""];
20->2 [style = solid, label="i"];
21->29 [style = bold, label=""];
4->3 [style = dotted, label="true"];
18->10 [style = bold, label=""];
3->7 [style = bold, label=""];
17->14 [style = bold, label=""];
11->10 [style = bold, label=""];
6->26 [style = dashed, label="0"];
6->13 [style = bold, label=""];
5->4 [style = bold, label=""];
10->0 [style = bold, label=""];
2->4 [style = solid, label="i"];
25->22 [style = dotted, label="true"];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
20->25 [style = solid, label="i"];
14->2 [style = bold, label=""];
13->15 [style = bold, label=""];
25->23 [style = dotted, label="true"];
22->24 [style = bold, label=""];
4->9 [style = dotted, label="true"];
4->12 [style = dotted, label="true"];
2->25 [style = bold, label=""];
5->22 [style = bold, label=""];
2->25 [style = solid, label="i"];
25->2 [style = dotted, label="true"];
2->5 [style = solid, label="i"];
8->29 [style = dashed, label="0"];
4->16 [style = bold, label=""];
25->21 [style = bold, label=""];
13->16 [style = dashed, label="0"];
5->9 [style = solid, label="i"];
}
