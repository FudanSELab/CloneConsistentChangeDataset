digraph {
15 [style = filled, label = "assertNotNull(\"Ephemeral node should be present when server restarted\",zk.exists(\"/sdeath\",null))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSessionRestore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "testSessionRestore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "zk.close()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "zk.create(\"/srestore\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "zk.create(\"/sdeath\",new byte((((,ZooDefs.Ids.OPEN_ACL_UNSAFE,CreateMode.EPHEMERAL)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNotNull(\"Ephemeral node has not been created\",zk.exists(\"/srestore\",null))@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "zk.disconnect()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertNotNull(\"Ephemeral node has not been created\",zk.exists(\"/sdeath\",null))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "startServer()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "testSessionSurviveServerRestart['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertNotNull(zk.exists(\"/srestore\",null),\"Ephemeral node should be present when session is restored\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "assertNotNull(zk.exists(\"/srestore\",null),\"Ephemeral node has not been created\")@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "zk = createClient()@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "zk = createClient()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "stopServer()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6->3 [style = bold, label=""];
9->0 [style = bold, label=""];
10->14 [style = bold, label=""];
11->6 [style = bold, label=""];
12->11 [style = bold, label=""];
4->2 [style = bold, label=""];
1->0 [style = bold, label=""];
0->12 [style = dashed, label="0"];
2->8 [style = dashed, label="0"];
3->4 [style = bold, label=""];
0->7 [style = bold, label=""];
2->15 [style = dashed, label="0"];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
6->10 [style = bold, label=""];
2->15 [style = bold, label=""];
7->6 [style = bold, label=""];
4->8 [style = bold, label=""];
14->2 [style = bold, label=""];
3->10 [style = dashed, label="0"];
5->7 [style = dashed, label="0"];
0->5 [style = bold, label=""];
}
