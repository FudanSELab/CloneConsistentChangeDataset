digraph {
3 [style = filled, label = "Assert.assertEquals(500,((Watermark)output.poll()).getTimestamp())@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "tester.setProcessingTime(501)@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
124 [style = filled, label = "content == null@@@38@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "Assert.assertTrue(lastElement instanceof Watermark)@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "Collections.sort(cntnt,new Comparator<String>(){@Override public int compare(String o1,String o2){return getLineNo(o1) - getLineNo(o2)}})@@@97@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "reader.setOutputType(typeInfo,tester.getExecutionConfig())@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "modTimes.put(file.f0.getName(),hdfs.getFileStatus(file.f0).getModificationTime())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
70 [style = filled, label = "expectedFileContents.put(i,file.f1)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "runnableWithException.run()@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
110 [style = filled, label = "Map<Integer,List<String>> actualFileContents = new HashMap<>()@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
102 [style = filled, label = "OneInputStreamOperatorTestHarness<TimestampedFileInputSplit,String> tester = new OneInputStreamOperatorTestHarness<>(reader)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "int i = 0@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
93 [style = filled, label = "line instanceof StreamRecord@@@55@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "localMailbox.runMailboxStep()@@@54@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "content == null@@@61@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Assert.assertEquals(300,((Watermark)output.poll()).getTimestamp())@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
92 [style = filled, label = "line instanceof Watermark@@@67@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "int fileIdx = Character.getNumericValue(element.getValue().charAt(0))@@@59@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "lastSeenWatermark = watermark@@@72@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
86 [style = filled, label = "hdfs.delete(file,false)@@@86@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
104 [style = filled, label = "tester.open()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ConcurrentLinkedQueue<Object> output = tester.getOutput()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(200,((Watermark)output.poll()).getTimestamp())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "List<String> cntnt = actualFileContents.get(fileIdx)@@@94@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
72 [style = filled, label = "final long watermarkInterval = 10@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "hdfs.delete(file,false)@@@88@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "lastSeenWatermark = watermark@@@74@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
125 [style = filled, label = "Map<Integer,String> expectedFileContents = new HashMap<>()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "Assert.assertTrue(watermark > lastSeenWatermark)@@@70@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
98 [style = filled, label = "tester.getOutput().clear()@@@78@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "Assert.fail(\"Unknown element in the list.\")@@@77@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "Assert.assertEquals(splits.length,watermarkCounter)@@@81@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "tester.close()@@@83@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "tester.open()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "Assert.assertEquals(expectedFileContents.size(),actualFileContents.size())@@@91@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
113 [style = filled, label = "testFileReadingOperatorWithEventTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "long lastSeenWatermark = Long.MIN_VALUE@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
89 [style = filled, label = "testFileReadingOperatorWithIngestionTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
115 [style = filled, label = "filesCreated.add(file.f0)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
114 [style = filled, label = "reader.setOutputType(typeInfo,new ExecutionConfig())@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "tester.getOutput().isEmpty() || tester.getOutput().size() != (LINES_PER_FILE + 1)@@@51@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "List<String> content = actualFileContents.get(fileIdx)@@@60@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "tester.setTimeCharacteristic(TimeCharacteristic.IngestionTime)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
97 [style = filled, label = "final OneInputStreamOperatorTestHarness<TimestampedFileInputSplit,String> tester = createHarness(format)@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
121 [style = filled, label = "actualFileContents.put(fileIdx,content)@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
91 [style = filled, label = "Assert.assertEquals(NO_OF_FILES * LINES_PER_FILE,lineCounter)@@@80@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
118 [style = filled, label = "Assert.assertEquals(NO_OF_FILES * LINES_PER_FILE + 1,tester.getOutput().size())@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
108 [style = filled, label = "List<String> cntnt = actualFileContents.get(fileIdx)@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "tester.setProcessingTime(301)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
112 [style = filled, label = "StringBuilder cntntStr = new StringBuilder()@@@57@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
95 [style = filled, label = "StringBuilder cntntStr = new StringBuilder()@@@101@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
61 [style = filled, label = "localMailbox.runMailboxStep()@@@52@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(TimeCharacteristic.IngestionTime,tester.getTimeCharacteristic())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Map<String,Long> modTimes = new HashMap<>()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
122 [style = filled, label = "Collections.sort(cntnt,new Comparator<String>(){@Override public int compare(String o1,String o2){return getLineNo(o1) - getLineNo(o2)}})@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "Set<org.apache.hadoop.fs.Path> filesCreated = new HashSet<>()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "content.add(element.getValue() + \"\")@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "filesCreated.add(file.f0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "int watermarkCounter = 0@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
106 [style = filled, label = "content = new ArrayList<>()@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
105 [style = filled, label = "FileInputSplit(( splits = format.createInputSplits(reader.getRuntimeContext().getNumberOfParallelSubtasks())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
109 [style = filled, label = "Assert.assertEquals(expectedFileContents.get(fileIdx),cntntStr.toString())@@@61@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "i < NO_OF_FILES@@@8@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
120 [style = filled, label = "int fileIdx = Character.getNumericValue(element.getValue().charAt(0))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "Assert.assertTrue(\"file\" + fileIdx + \" not found\",actualFileContents.keySet().contains(fileIdx))@@@49@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "Assert.assertEquals(nextTimestamp - (nextTimestamp % watermarkInterval),watermark)@@@69@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
117 [style = filled, label = "line instanceof StreamRecord@@@34@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "Assert.assertTrue(output.isEmpty())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertEquals(nextTimestamp,element.getTimestamp())@@@58@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
76 [style = filled, label = "cntntStr.append(line)@@@105@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "tester.close()@@@85@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "ContinuousFileReaderOperator<String> reader = new ContinuousFileReaderOperator<>(format)@@@17@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
107 [style = filled, label = "tester.setTimeCharacteristic(TimeCharacteristic.EventTime)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Assert.assertEquals(Long.MAX_VALUE,((Watermark)lastElement).getTimestamp())@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "long watermark = ((Watermark)line).getTimestamp()@@@68@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "localMailbox.runMailboxStep()@@@29@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
87 [style = filled, label = "cntntStr.append(line)@@@103@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "localMailbox.runMailboxStep()@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "tester.getCheckpointLock()@@@82@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
119 [style = filled, label = "cntntStr.append(line)@@@59@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "tester.setProcessingTime(nextTimestamp)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertTrue(tester.getOutput().peek() instanceof Watermark)@@@89@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testFileReadingOperatorWithIngestionTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
88 [style = filled, label = "Assert.fail(\"Unknown element in the list.\")@@@75@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
94 [style = filled, label = "Assert.assertEquals(expectedFileContents.get(fileIdx),cntntStr.toString())@@@105@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
71 [style = filled, label = "TextInputFormat format = new TextInputFormat(new Path(testBasePath))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
127 [style = filled, label = "tester.getCheckpointLock()@@@26@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "int watermarkCounter = 0@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "int lineCounter = 0@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "tester.getExecutionConfig().setAutoWatermarkInterval(watermarkInterval)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "tester.setProcessingTime(201)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "tester.processElement(new StreamRecord<>(new TimestampedFileInputSplit(modTimes.get(split.getPath().getName()),split.getSplitNumber(),split.getPath(),split.getStart(),split.getLength(),split.getHostnames())))@@@24@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "@SuppressWarnings(\"unchecked\") StreamRecord<String> element = (StreamRecord<String>)line@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
85 [style = filled, label = "SteppingMailboxProcessor localMailbox = createLocalMailbox(tester)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
44 [style = filled, label = "Assert.assertTrue(output.peek() instanceof Watermark)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Assert.assertEquals(expectedFileContents.size(),actualFileContents.size())@@@47@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "StringBuilder cntntStr = new StringBuilder()@@@103@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "RunnableWithException runnableWithException = null@@@49@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "Assert.assertEquals(400,((Watermark)output.poll()).getTimestamp())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
101 [style = filled, label = "@SuppressWarnings(\"unchecked\") StreamRecord<String> element = (StreamRecord<String>)line@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
103 [style = filled, label = "hdfs.delete(file,false)@@@64@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
123 [style = filled, label = "lastElement = line@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "Assert.assertEquals(expectedFileContents.size(),actualFileContents.size())@@@93@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "output.isEmpty()@@@26@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
90 [style = filled, label = "long nextTimestamp = tester.getProcessingTime() + watermarkInterval@@@47@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
96 [style = filled, label = "Map<Integer,List<String>> actualFileContents = new HashMap<>()@@@42@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "Assert.assertTrue(output.peek() instanceof Watermark)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
83 [style = filled, label = "Assert.assertEquals(1,tester.getOutput().size())@@@88@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
82 [style = filled, label = "Collections.sort(cntnt,new Comparator<String>(){@Override public int compare(String o1,String o2){return getLineNo(o1) - getLineNo(o2)}})@@@95@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "FileInputSplit(( splits = format.createInputSplits(tester.getExecutionConfig().getParallelism())@@@41@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "Tuple2<org.apache.hadoop.fs.Path,String> file = createFileAndFillWithData(testBasePath,\"file\",i,\"This is test line.\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(Long.MAX_VALUE,((Watermark)tester.getOutput().poll()).getTimestamp())@@@90@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "tester.setProcessingTime(401)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "Assert.assertTrue(output.peek() instanceof Watermark)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
80 [style = filled, label = "Map<Integer,String> expectedFileContents = new HashMap<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "watermarkCounter++@@@71@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
79 [style = filled, label = "final OneInputStreamOperatorTestHarness<TimestampedFileInputSplit,String> tester = new OneInputStreamOperatorTestHarness<>(reader)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "String testBasePath = hdfsURI + \"/\" + UUID.randomUUID() + \"/\"@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "Assert.assertEquals(expectedFileContents.get(fileIdx),cntntStr.toString())@@@107@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "i++@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
116 [style = filled, label = "List<String> content = actualFileContents.get(fileIdx)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "TypeInformation<String> typeInfo = TypeExtractor.getInputFormatTypes(format)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
99 [style = filled, label = "content.add(element.getValue() + \"\")@@@65@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
126 [style = filled, label = "Object lastElement = null@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
111 [style = filled, label = "tester.close()@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "tester.getOutput().clear()@@@80@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
84 [style = filled, label = "Assert.assertTrue(\"file\" + fileIdx + \" not found\",actualFileContents.keySet().contains(fileIdx))@@@93@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
100 [style = filled, label = "Assert.assertTrue(output.toString(),output.peek() instanceof Watermark)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
8->10 [style = bold, label=""];
35->48 [style = bold, label=""];
67->28 [style = bold, label=""];
106->121 [style = solid, label="content"];
61->6 [style = bold, label=""];
64->21 [style = bold, label=""];
32->37 [style = bold, label=""];
69->76 [style = bold, label=""];
117->63 [style = bold, label=""];
25->34 [style = bold, label=""];
50->22 [style = bold, label=""];
9->103 [style = solid, label="file"];
41->68 [style = dotted, label="false"];
93->66 [style = dotted, label="true"];
48->29 [style = bold, label=""];
50->78 [style = solid, label="watermark"];
87->94 [style = bold, label=""];
68->50 [style = bold, label=""];
68->20 [style = dotted, label="false"];
36->28 [style = bold, label=""];
40->15 [style = bold, label=""];
30->36 [style = bold, label=""];
16->9 [style = solid, label="i"];
37->84 [style = solid, label="fileIdx"];
68->59 [style = dotted, label="true"];
51->58 [style = dotted, label="true"];
12->9 [style = bold, label=""];
72->15 [style = bold, label=""];
63->36 [style = bold, label=""];
125->18 [style = bold, label=""];
51->86 [style = bold, label=""];
80->24 [style = bold, label=""];
98->90 [style = bold, label=""];
107->104 [style = bold, label=""];
97->85 [style = solid, label="tester"];
40->114 [style = solid, label="typeInfo"];
77->47 [style = bold, label=""];
34->115 [style = bold, label=""];
41->38 [style = dotted, label="true"];
124->106 [style = dotted, label="true"];
41->36 [style = dotted, label="true"];
33->0 [style = bold, label=""];
31->81 [style = bold, label=""];
64->47 [style = dashed, label="0"];
76->73 [style = bold, label=""];
93->92 [style = bold, label=""];
24->125 [style = bold, label=""];
63->26 [style = dotted, label="true"];
9->7 [style = solid, label="file"];
53->65 [style = bold, label=""];
39->51 [style = bold, label=""];
96->21 [style = bold, label=""];
63->30 [style = dotted, label="true"];
104->105 [style = bold, label=""];
68->22 [style = solid, label="watermark"];
37->38 [style = bold, label=""];
113->14 [style = bold, label=""];
2->44 [style = bold, label=""];
71->40 [style = solid, label="format"];
0->8 [style = bold, label=""];
82->75 [style = bold, label=""];
12->70 [style = dotted, label="true"];
72->50 [style = solid, label="watermarkInterval"];
22->78 [style = bold, label=""];
81->31 [style = bold, label=""];
28->42 [style = bold, label=""];
40->72 [style = bold, label=""];
90->29 [style = solid, label="nextTimestamp"];
99->98 [style = bold, label=""];
59->67 [style = bold, label=""];
118->110 [style = bold, label=""];
109->36 [style = bold, label=""];
27->2 [style = bold, label=""];
26->30 [style = solid, label="content"];
73->60 [style = bold, label=""];
37->38 [style = solid, label="fileIdx"];
48->39 [style = solid, label="watermarkCounter"];
35->78 [style = solid, label="watermarkCounter"];
12->34 [style = dotted, label="true"];
3->77 [style = bold, label=""];
41->62 [style = dotted, label="true"];
66->63 [style = bold, label=""];
18->9 [style = solid, label="i"];
47->64 [style = bold, label=""];
29->19 [style = solid, label="nextTimestamp"];
9->86 [style = solid, label="file"];
1->4 [style = bold, label=""];
121->62 [style = bold, label=""];
16->70 [style = solid, label="i"];
120->36 [style = solid, label="fileIdx"];
98->91 [style = bold, label=""];
106->121 [style = bold, label=""];
36->41 [style = bold, label=""];
72->97 [style = bold, label=""];
126->123 [style = bold, label=""];
72->22 [style = solid, label="watermarkInterval"];
21->22 [style = solid, label="lastSeenWatermark"];
90->32 [style = solid, label="nextTimestamp"];
29->37 [style = solid, label="nextTimestamp"];
37->26 [style = solid, label="fileIdx"];
18->12 [style = bold, label=""];
92->88 [style = dotted, label="false"];
79->33 [style = solid, label="tester"];
57->60 [style = bold, label=""];
31->4 [style = bold, label=""];
12->115 [style = dotted, label="true"];
75->69 [style = bold, label=""];
51->58 [style = bold, label=""];
18->70 [style = solid, label="i"];
88->98 [style = bold, label=""];
119->109 [style = bold, label=""];
5->17 [style = bold, label=""];
24->18 [style = bold, label=""];
67->78 [style = solid, label="lastSeenWatermark"];
71->97 [style = solid, label="format"];
72->33 [style = solid, label="watermarkInterval"];
60->82 [style = solid, label="cntnt"];
127->111 [style = dotted, label="true"];
92->59 [style = dotted, label="true"];
117->123 [style = bold, label=""];
71->15 [style = solid, label="format"];
23->35 [style = bold, label=""];
45->1 [style = bold, label=""];
6->61 [style = bold, label=""];
54->80 [style = bold, label=""];
7->5 [style = bold, label=""];
88->93 [style = bold, label=""];
20->41 [style = bold, label=""];
109->103 [style = bold, label=""];
32->42 [style = solid, label="lineCounter"];
38->66 [style = solid, label="fileIdx"];
82->75 [style = solid, label="cntnt"];
68->50 [style = solid, label="watermark"];
31->27 [style = bold, label=""];
68->50 [style = dotted, label="true"];
89->14 [style = bold, label=""];
116->124 [style = bold, label=""];
59->39 [style = solid, label="watermarkCounter"];
123->63 [style = solid, label="lastElement"];
68->67 [style = dotted, label="true"];
97->85 [style = bold, label=""];
10->45 [style = bold, label=""];
95->87 [style = bold, label=""];
115->70 [style = bold, label=""];
4->100 [style = bold, label=""];
120->108 [style = solid, label="fileIdx"];
120->121 [style = solid, label="fileIdx"];
34->70 [style = bold, label=""];
100->27 [style = bold, label=""];
117->101 [style = bold, label=""];
50->67 [style = solid, label="watermark"];
65->61 [style = bold, label=""];
124->121 [style = dotted, label="true"];
120->109 [style = solid, label="fileIdx"];
59->22 [style = solid, label="lastSeenWatermark"];
15->102 [style = solid, label="reader"];
114->102 [style = bold, label=""];
31->81 [style = dotted, label="true"];
39->51 [style = dotted, label="true"];
12->25 [style = dotted, label="true"];
21->23 [style = bold, label=""];
38->82 [style = solid, label="fileIdx"];
61->6 [style = dotted, label="true"];
13->10 [style = bold, label=""];
28->29 [style = bold, label=""];
47->96 [style = bold, label=""];
82->95 [style = bold, label=""];
102->107 [style = bold, label=""];
46->56 [style = bold, label=""];
61->41 [style = bold, label=""];
92->68 [style = bold, label=""];
59->98 [style = bold, label=""];
66->63 [style = dotted, label="true"];
41->63 [style = dotted, label="true"];
61->65 [style = bold, label=""];
62->32 [style = bold, label=""];
59->93 [style = bold, label=""];
63->26 [style = bold, label=""];
127->111 [style = bold, label=""];
18->16 [style = solid, label="i"];
78->59 [style = bold, label=""];
60->82 [style = bold, label=""];
41->68 [style = bold, label=""];
42->39 [style = bold, label=""];
74->84 [style = bold, label=""];
38->66 [style = solid, label="content"];
93->38 [style = dotted, label="true"];
84->60 [style = bold, label=""];
72->29 [style = solid, label="watermarkInterval"];
35->90 [style = bold, label=""];
111->118 [style = bold, label=""];
112->119 [style = bold, label=""];
90->29 [style = bold, label=""];
110->126 [style = bold, label=""];
38->60 [style = solid, label="fileIdx"];
41->37 [style = dotted, label="true"];
41->66 [style = dotted, label="true"];
86->83 [style = bold, label=""];
120->116 [style = bold, label=""];
122->112 [style = bold, label=""];
14->9 [style = solid, label="testBasePath"];
93->37 [style = dotted, label="true"];
23->78 [style = solid, label="lastSeenWatermark"];
15->79 [style = bold, label=""];
116->124 [style = solid, label="content"];
70->16 [style = bold, label=""];
4->31 [style = bold, label=""];
38->66 [style = bold, label=""];
17->74 [style = bold, label=""];
54->24 [style = bold, label=""];
58->7 [style = bold, label=""];
40->13 [style = solid, label="typeInfo"];
48->59 [style = solid, label="watermarkCounter"];
19->53 [style = bold, label=""];
29->19 [style = bold, label=""];
64->127 [style = bold, label=""];
43->14 [style = bold, label=""];
4->31 [style = dotted, label="true"];
79->33 [style = bold, label=""];
93->92 [style = dotted, label="false"];
62->91 [style = solid, label="lineCounter"];
117->116 [style = dotted, label="true"];
92->50 [style = dotted, label="true"];
93->41 [style = dotted, label="true"];
15->114 [style = bold, label=""];
41->32 [style = dotted, label="true"];
120->116 [style = solid, label="fileIdx"];
85->33 [style = bold, label=""];
71->40 [style = bold, label=""];
11->55 [style = bold, label=""];
65->61 [style = dotted, label="true"];
93->62 [style = dotted, label="true"];
35->42 [style = solid, label="lineCounter"];
91->42 [style = bold, label=""];
105->64 [style = bold, label=""];
101->120 [style = bold, label=""];
41->62 [style = bold, label=""];
66->63 [style = solid, label="content"];
8->13 [style = bold, label=""];
15->79 [style = solid, label="reader"];
35->32 [style = solid, label="lineCounter"];
83->5 [style = bold, label=""];
124->106 [style = bold, label=""];
18->12 [style = solid, label="i"];
68->78 [style = dotted, label="true"];
94->84 [style = bold, label=""];
56->49 [style = bold, label=""];
35->42 [style = solid, label="watermarkCounter"];
36->108 [style = bold, label=""];
14->71 [style = solid, label="testBasePath"];
37->94 [style = solid, label="fileIdx"];
20->28 [style = bold, label=""];
74->57 [style = bold, label=""];
23->62 [style = solid, label="lineCounter"];
62->63 [style = bold, label=""];
108->122 [style = bold, label=""];
66->26 [style = dotted, label="true"];
92->88 [style = bold, label=""];
108->122 [style = solid, label="cntnt"];
37->60 [style = solid, label="fileIdx"];
93->32 [style = dotted, label="true"];
92->78 [style = dotted, label="true"];
93->41 [style = bold, label=""];
66->99 [style = bold, label=""];
38->73 [style = solid, label="fileIdx"];
93->99 [style = dotted, label="true"];
78->42 [style = solid, label="watermarkCounter"];
92->22 [style = dotted, label="true"];
26->30 [style = bold, label=""];
90->50 [style = solid, label="nextTimestamp"];
117->120 [style = dotted, label="true"];
14->54 [style = bold, label=""];
99->93 [style = bold, label=""];
67->41 [style = bold, label=""];
117->124 [style = dotted, label="true"];
55->46 [style = bold, label=""];
49->52 [style = bold, label=""];
12->16 [style = dotted, label="true"];
38->30 [style = solid, label="fileIdx"];
117->101 [style = dotted, label="true"];
23->91 [style = solid, label="lineCounter"];
26->99 [style = bold, label=""];
92->68 [style = dotted, label="true"];
65->93 [style = bold, label=""];
9->25 [style = bold, label=""];
72->0 [style = solid, label="watermarkInterval"];
123->117 [style = bold, label=""];
12->71 [style = bold, label=""];
44->11 [style = bold, label=""];
29->22 [style = solid, label="nextTimestamp"];
16->12 [style = solid, label="i"];
63->26 [style = solid, label="content"];
52->3 [style = bold, label=""];
117->62 [style = dotted, label="true"];
50->22 [style = solid, label="watermark"];
68->59 [style = solid, label="watermark"];
68->22 [style = dotted, label="true"];
12->9 [style = dotted, label="true"];
16->12 [style = bold, label=""];
124->62 [style = bold, label=""];
68->20 [style = bold, label=""];
62->123 [style = bold, label=""];
72->90 [style = solid, label="watermarkInterval"];
9->34 [style = bold, label=""];
}
