digraph {
5 [style = filled, label = "assertEquals(\"Ciao\",state.value())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testValueStateDefaultValue['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertEquals(\"Hello\",state.value())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "backend.dispose()@@@12@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "state.clear()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ValueState<String> state = backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "ValueStateDescriptor<String> kvId = new ValueStateDescriptor<>(\"id\",,\"Hello\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testValueStateDefaultValue['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "state.update(\"Ciao\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "backend.setCurrentKey(1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "CheckpointableKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "ValueState<String> state = backend.getPartitionedState(VoidNamespace.INSTANCE,VoidNamespaceSerializer.INSTANCE,kvId)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "AbstractKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "CheckpointableKeyedStateBackend<Integer> backend = createKeyedBackend(IntSerializer.INSTANCE)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(\"Hello\",state.value())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testValueStateDefaultValue['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4->10 [style = bold, label=""];
14->3 [style = bold, label=""];
5->8 [style = bold, label=""];
15->13 [style = bold, label=""];
2->14 [style = solid, label="kvId"];
11->12 [style = bold, label=""];
2->9 [style = bold, label=""];
3->4 [style = bold, label=""];
8->7 [style = bold, label=""];
1->13 [style = dashed, label="0"];
1->12 [style = dashed, label="0"];
12->2 [style = bold, label=""];
9->14 [style = dashed, label="0"];
10->5 [style = bold, label=""];
0->1 [style = bold, label=""];
2->14 [style = bold, label=""];
7->6 [style = bold, label=""];
9->3 [style = bold, label=""];
1->2 [style = bold, label=""];
2->9 [style = solid, label="kvId"];
13->2 [style = bold, label=""];
}
