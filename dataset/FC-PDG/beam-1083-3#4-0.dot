digraph {
12 [style = filled, label = "assertThat(watermarksForSource2.getLowWatermark(),equalTo(instant.plus(Duration.millis(3))))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "SparkWatermarks watermarksForSource2 = GlobalWatermarkHolder.get().getValue().get(2)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(10)),instant))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "GlobalWatermarkHolder.advance()@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "thrown.expect()@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testSynchronizedTimeMonotonic['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "thrown.expectMessage(\"Synchronized processing time must advance.\")@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "GlobalWatermarkHolder.add(2,new SparkWatermarks(instant.plus(Duration.millis(3)),instant.plus(Duration.millis(6)),instant))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertThat(watermarksForSource1.getHighWatermark(),equalTo(instant.plus(Duration.millis(10))))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertThat(watermarksForSource1.getLowWatermark(),equalTo(instant.plus(Duration.millis(5))))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "JavaSparkContext jsc = SparkContextFactory.getSparkContext(options)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "GlobalWatermarkHolder.advance()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "GlobalWatermarkHolder.advance(jsc)@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Instant instant = new Instant(0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "GlobalWatermarkHolder.add(1,new SparkWatermarks(instant.plus(Duration.millis(5)),instant.plus(Duration.millis(10)),instant))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertThat(watermarksForSource2.getHighWatermark(),equalTo(instant.plus(Duration.millis(6))))@@@13@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testMultiSource['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "testSynchronizedTimeMonotonic['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "SparkWatermarks watermarksForSource1 = GlobalWatermarkHolder.get().getValue().get(1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
0->3 [style = bold, label=""];
2->19 [style = bold, label=""];
8->4 [style = solid, label="instant"];
9->0 [style = bold, label=""];
16->6 [style = bold, label=""];
12->15 [style = bold, label=""];
18->12 [style = bold, label=""];
19->17 [style = bold, label=""];
5->18 [style = dashed, label="0"];
3->4 [style = bold, label=""];
10->6 [style = bold, label=""];
6->2 [style = solid, label="jsc"];
8->7 [style = bold, label=""];
7->9 [style = bold, label=""];
6->5 [style = solid, label="jsc"];
2->0 [style = bold, label=""];
1->6 [style = bold, label=""];
5->11 [style = dashed, label="0"];
17->14 [style = bold, label=""];
8->7 [style = solid, label="instant"];
7->2 [style = bold, label=""];
2->9 [style = dashed, label="0"];
6->8 [style = bold, label=""];
14->18 [style = bold, label=""];
4->14 [style = dashed, label="0"];
4->11 [style = bold, label=""];
8->13 [style = solid, label="instant"];
4->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
