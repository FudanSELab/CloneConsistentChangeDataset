digraph {
8 [style = filled, label = "values instanceof SortedSet && isNaturalOrder(((SortedSet<String>)values).comparator())@@@4@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final List<String> sortedValuesList = new ArrayList<>(values)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "hasher.putInt(0)@@@15@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "hasher.putString(v,StandardCharsets.UTF_8)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Hasher hasher = Hashing.sha256().newHasher()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sortedValues = values@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "computeCacheKey['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "computeCacheKey['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return new CacheKeyBuilder(DimFilterUtils.BLOOM_DIM_FILTER_CACHE_ID).appendString(dimension).appendByte(DimFilterUtils.STRING_SEPARATOR).appendByteArray(extractionFn == null? new byte((((: extractionFn.getCacheKey()).appendByte(DimFilterUtils.STRING_SEPARATOR).appendByteArray(hash.asBytes()).build()@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "hasher.putInt(-1)@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "sortedValues = sortedValuesList@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "getCacheKey['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "sortedValuesList.sort(Comparators.naturalNullsFirst())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return new CacheKeyBuilder(DimFilterUtils.IN_CACHE_ID).appendString(dimension).appendByte(DimFilterUtils.STRING_SEPARATOR).appendByteArray(extractionFn == null? new byte((((: extractionFn.getCacheKey()).appendByte(DimFilterUtils.STRING_SEPARATOR).appendByteArray(hasher.hash().asBytes()).build()@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "v == null@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final Collection<String> sortedValues@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "hasher.putInt(v.length())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16->15 [style = bold, label=""];
8->3 [style = dotted, label="false"];
11->12 [style = dotted, label="false"];
2->6 [style = bold, label=""];
11->10 [style = dotted, label="true"];
11->2 [style = dotted, label="false"];
1->3 [style = bold, label=""];
0->11 [style = bold, label=""];
11->12 [style = bold, label=""];
11->13 [style = dotted, label="true"];
10->13 [style = dashed, label="0"];
7->8 [style = bold, label=""];
13->11 [style = bold, label=""];
10->6 [style = bold, label=""];
11->2 [style = bold, label=""];
4->7 [style = bold, label=""];
3->0 [style = bold, label=""];
8->9 [style = dotted, label="false"];
14->7 [style = bold, label=""];
9->3 [style = solid, label="sortedValuesList"];
12->2 [style = bold, label=""];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
8->5 [style = dotted, label="true"];
11->10 [style = bold, label=""];
11->13 [style = bold, label=""];
8->9 [style = bold, label=""];
13->6 [style = bold, label=""];
9->1 [style = bold, label=""];
8->1 [style = dotted, label="false"];
2->11 [style = bold, label=""];
10->11 [style = bold, label=""];
}
