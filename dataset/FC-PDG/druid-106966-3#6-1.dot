digraph {
14 [style = filled, label = "NullHandling.initializeForTests()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "EasyMock.expect(colSelectorFactory.makeColumnValueSelector(\"nilly\")).andReturn(selector)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "setup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "EasyMock.expect(vectorColumnSelectorFactory.getColumnCapabilities(\"lngFld\")).andReturn(new ColumnCapabilitiesImpl().setType(ValueType.LONG).setDictionaryEncoded(true)).anyTimes()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "VectorValueSelector vectorValueSelector = EasyMock.createMock()@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "setup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "vectorColumnSelectorFactory = EasyMock.createMock()@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "selector = new TestDoubleColumnSelectorImpl(values)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "EasyMock.expect(colSelectorFactory.getColumnCapabilities(\"nilly\")).andReturn(null)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "EasyMock.expect(vectorValueSelector.getNullVector()).andReturn(null).anyTimes()@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "EasyMock.replay(vectorColumnSelectorFactory)@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "EasyMock.replay(colSelectorFactory)@@@7@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "selector = new TestLongColumnSelector(values)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.replay(vectorValueSelector)@@@12@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "colSelectorFactory = EasyMock.createMock()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "EasyMock.expect(vectorColumnSelectorFactory.makeValueSelector(\"lngFld\")).andReturn(vectorValueSelector).anyTimes()@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "EasyMock.expect(vectorValueSelector.getLongVector()).andReturn(longValues1).anyTimes()@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "setup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7->10 [style = solid, label="vectorColumnSelectorFactory"];
9->11 [style = bold, label=""];
0->12 [style = bold, label=""];
2->3 [style = bold, label=""];
12->15 [style = bold, label=""];
8->14 [style = bold, label=""];
2->0 [style = solid, label="colSelectorFactory"];
15->6 [style = bold, label=""];
16->2 [style = bold, label=""];
1->3 [style = solid, label="selector"];
16->3 [style = solid, label="selector"];
14->1 [style = bold, label=""];
7->9 [style = bold, label=""];
3->5 [style = bold, label=""];
12->13 [style = solid, label="vectorValueSelector"];
5->0 [style = bold, label=""];
11->10 [style = bold, label=""];
13->7 [style = bold, label=""];
1->16 [style = dashed, label="0"];
6->13 [style = bold, label=""];
4->1 [style = bold, label=""];
1->2 [style = bold, label=""];
17->16 [style = bold, label=""];
}
