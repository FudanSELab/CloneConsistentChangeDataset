digraph {
24 [style = filled, label = "assertTrue(c1.equals(c2))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "OHLCSeries s2 = new OHLCSeries(\"Series\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertTrue(c1.equals(c2))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "OHLCSeries s1 = new OHLCSeries(\"Series\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "s1.add(new Year(2006),1.0,1.1,1.2,1.3)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertTrue(c1.equals(c2))@@@21@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "OHLCSeriesCollection c1 = new OHLCSeriesCollection()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "c1.setXPosition(TimePeriodAnchor.END)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "c2.setXPosition(TimePeriodAnchor.END)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertFalse(c1.equals(c2))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "OHLCSeriesCollection c2 = new OHLCSeriesCollection()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "c1.addSeries(new OHLCSeries(\"Empty Series\"))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertFalse(c1.equals(c2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "assertEquals(c1,c2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(c1,c2)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "OHLCSeriesCollection c2 = TestUtils.serialised(c1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "c2.addSeries(s2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "OHLCSeriesCollection c2 = (OHLCSeriesCollection)TestUtils.serialised(c1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "s2.add(new Year(2006),1.0,1.1,1.2,1.3)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertFalse(c1.equals(c2))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "c1.addSeries(s1)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "c2.addSeries(new OHLCSeries(\"Empty Series\"))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->4 [style = solid, label="s1"];
6->3 [style = bold, label=""];
4->14 [style = bold, label=""];
16->13 [style = bold, label=""];
20->17 [style = bold, label=""];
21->19 [style = bold, label=""];
3->8 [style = solid, label="c1"];
15->9 [style = solid, label="s2"];
22->9 [style = bold, label=""];
0->2 [style = bold, label=""];
1->5 [style = solid, label="c2"];
3->11 [style = bold, label=""];
10->3 [style = bold, label=""];
11->12 [style = bold, label=""];
2->4 [style = bold, label=""];
12->0 [style = bold, label=""];
8->5 [style = solid, label="c2"];
17->23 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = bold, label=""];
3->1 [style = solid, label="c1"];
15->22 [style = bold, label=""];
11->18 [style = solid, label="c2"];
24->16 [style = bold, label=""];
8->5 [style = bold, label=""];
11->17 [style = solid, label="c2"];
11->13 [style = solid, label="c2"];
3->12 [style = solid, label="c1"];
4->8 [style = bold, label=""];
11->19 [style = solid, label="c2"];
1->8 [style = dashed, label="0"];
14->15 [style = bold, label=""];
4->1 [style = bold, label=""];
11->24 [style = solid, label="c2"];
11->14 [style = solid, label="c2"];
18->21 [style = bold, label=""];
11->12 [style = solid, label="c2"];
3->5 [style = solid, label="c1"];
9->24 [style = bold, label=""];
23->18 [style = bold, label=""];
13->20 [style = bold, label=""];
}
