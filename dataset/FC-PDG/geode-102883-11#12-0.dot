digraph {
10 [style = filled, label = "assertEquals(4,invalidateConnections)@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
49 [style = filled, label = "assertThat(thrown).isInstanceOf()@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "assertThat(invalidateConnections).isEqualTo(4)@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "manager.numServers = 5@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(1,returns)@@@12@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
57 [style = filled, label = "reset()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "ExecutablePool exec = new OpExecutorImpl(manager,queueManager,endpointManager,riTracker,3,10,PoolFactory.DEFAULT_SERVER_CONNECTION_TIMEOUT,cancelCriterion,null)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "ServerOperationException expected@@@42@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertEquals(\"hello\",result)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
39 [style = filled, label = "assertThat(invalidateConnections).isEqualTo(0)@@@35@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
48 [style = filled, label = "assertThat(serverCrashes).isEqualTo(4)@@@50@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "{}@@@25@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new ServerOperationException(\"Something didn't work\")}})@@@34@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "reset()@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new IOException(\"Something didn't work\")}})@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(4,serverCrashes)@@@64@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "assertThat(returns).isEqualTo(1)@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "ServerConnectivityException expected@@@25@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "assertThat(borrows).isEqualTo(1)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertEquals(1,returns)@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,serverCrashes)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
34 [style = filled, label = "assertEquals(1,borrows)@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
70 [style = filled, label = "OpExecutorImpl exec = new OpExecutorImpl(manager,queueManager,endpointManager,riTracker,10,10,PoolFactory.DEFAULT_SERVER_CONNECTION_TIMEOUT,cancelCriterion,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "fail(\"Should have got an exception\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertThat(exchanges).isEqualTo(3)@@@20@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "OpExecutorImpl exec = new OpExecutorImpl(manager,queueManager,endpointManager,riTracker,3,10,PoolFactory.DEFAULT_SERVER_CONNECTION_TIMEOUT,cancelCriterion,null)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
36 [style = filled, label = "assertEquals(1,borrows)@@@60@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "thrown = catchThrowable(null)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "fail(\"Should have got an exception\")@@@40@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
44 [style = filled, label = "assertThat(result).isEqualTo(\"hello\")@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "assertEquals(11,invalidateConnections)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "fail(\"Should have got an exception\")@@@56@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "assertThat(invalidateConnections).isEqualTo(0)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
58 [style = filled, label = "Object result = exec.execute(null)@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "assertEquals(0,serverCrashes)@@@47@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new SocketTimeoutException()}})@@@17@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
52 [style = filled, label = "Throwable thrown = catchThrowable(null)@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
56 [style = filled, label = "assertThat(exchanges).isEqualTo(3)@@@47@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
68 [style = filled, label = "assertEquals(1,borrows)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertEquals(11,serverCrashes)@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertEquals(1,borrows)@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "assertEquals(3,exchanges)@@@61@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "{}@@@58@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertThat(serverCrashes).isEqualTo(0)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertThat(thrown).isInstanceOf()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
47 [style = filled, label = "assertThat(borrows).isEqualTo(1)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
55 [style = filled, label = "reset()@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "assertEquals(4,invalidateConnections)@@@63@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
53 [style = filled, label = "assertThat(thrown).isInstanceOf()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "reset()@@@32@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "testExecute['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "reset()@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(1,returns)@@@62@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "reset()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(1,returns)@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
62 [style = filled, label = "assertThat(borrows).isEqualTo(1)@@@46@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(1,borrows)@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "assertThat(serverCrashes).isEqualTo(0)@@@36@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "assertEquals(3,exchanges)@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertThat(serverCrashes).isEqualTo(0)@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "assertEquals(0,invalidateConnections)@@@46@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
51 [style = filled, label = "assertThat(returns).isEqualTo(1)@@@48@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "assertEquals(0,invalidateConnections)@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
76 [style = filled, label = "assertEquals(1,returns)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "ServerConnectivityException expected@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "testRetryFailedServers['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){throw new IOException(\"Something didn't work\")}})@@@50@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "Object result = exec.execute(new Op(){@Override public Object attempt(Connection cnx){return \"hello\"}})@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "{}@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testExecute['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(returns).isEqualTo(1)@@@34@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
46 [style = filled, label = "assertThat(borrows).isEqualTo(1)@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "thrown = catchThrowable(null)@@@38@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
71 [style = filled, label = "fail(\"Should have got an exception\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
73 [style = filled, label = "assertEquals(10,exchanges)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "ServerConnectivityException expected@@@58@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
42 [style = filled, label = "assertThat(invalidateConnections).isEqualTo(4)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
72 [style = filled, label = "{}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(0,serverCrashes)@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
54 [style = filled, label = "assertThat(returns).isEqualTo(1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59->49 [style = bold, label=""];
18->30 [style = bold, label=""];
15->69 [style = dashed, label="0"];
27->73 [style = dashed, label="0"];
30->36 [style = bold, label=""];
19->36 [style = bold, label=""];
4->39 [style = dashed, label="0"];
14->79 [style = dashed, label="0"];
12->9 [style = bold, label=""];
38->39 [style = bold, label=""];
26->43 [style = dashed, label="0"];
68->73 [style = bold, label=""];
28->21 [style = bold, label=""];
8->20 [style = bold, label=""];
51->50 [style = bold, label=""];
30->49 [style = dashed, label="0"];
74->70 [style = bold, label=""];
54->37 [style = bold, label=""];
78->71 [style = bold, label=""];
23->12 [style = bold, label=""];
32->4 [style = bold, label=""];
73->76 [style = bold, label=""];
47->60 [style = bold, label=""];
5->70 [style = dashed, label="0"];
62->56 [style = bold, label=""];
0->3 [style = bold, label=""];
46->38 [style = bold, label=""];
79->69 [style = bold, label=""];
55->41 [style = bold, label=""];
32->38 [style = dashed, label="0"];
6->60 [style = dashed, label="0"];
52->45 [style = bold, label=""];
35->29 [style = solid, label="result"];
49->62 [style = bold, label=""];
25->7 [style = bold, label=""];
22->23 [style = bold, label=""];
77->78 [style = bold, label=""];
66->54 [style = bold, label=""];
6->2 [style = bold, label=""];
56->51 [style = bold, label=""];
41->53 [style = bold, label=""];
2->67 [style = dashed, label="0"];
26->16 [style = bold, label=""];
61->55 [style = bold, label=""];
71->68 [style = bold, label=""];
14->15 [style = bold, label=""];
24->8 [style = bold, label=""];
44->66 [style = bold, label=""];
42->61 [style = bold, label=""];
13->0 [style = bold, label=""];
16->18 [style = bold, label=""];
35->29 [style = bold, label=""];
31->24 [style = bold, label=""];
21->34 [style = bold, label=""];
3->46 [style = dashed, label="0"];
50->48 [style = bold, label=""];
2->10 [style = bold, label=""];
11->5 [style = bold, label=""];
53->46 [style = bold, label=""];
43->65 [style = bold, label=""];
9->3 [style = bold, label=""];
75->72 [style = bold, label=""];
33->19 [style = bold, label=""];
35->58 [style = dashed, label="0"];
5->35 [style = bold, label=""];
22->61 [style = dashed, label="0"];
10->22 [style = bold, label=""];
27->1 [style = bold, label=""];
20->17 [style = bold, label=""];
29->31 [style = bold, label=""];
64->63 [style = bold, label=""];
39->43 [style = bold, label=""];
4->26 [style = bold, label=""];
70->77 [style = bold, label=""];
34->47 [style = dashed, label="0"];
10->42 [style = dashed, label="0"];
40->57 [style = bold, label=""];
58->44 [style = bold, label=""];
63->58 [style = bold, label=""];
57->52 [style = bold, label=""];
5->63 [style = dashed, label="0"];
28->78 [style = dashed, label="0"];
17->28 [style = bold, label=""];
60->67 [style = bold, label=""];
7->34 [style = bold, label=""];
36->27 [style = bold, label=""];
34->6 [style = bold, label=""];
45->47 [style = bold, label=""];
65->59 [style = bold, label=""];
67->42 [style = bold, label=""];
1->14 [style = bold, label=""];
76->79 [style = bold, label=""];
3->32 [style = bold, label=""];
72->68 [style = bold, label=""];
37->40 [style = bold, label=""];
}
