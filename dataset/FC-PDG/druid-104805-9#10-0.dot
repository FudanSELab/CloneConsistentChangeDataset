digraph {
18 [style = filled, label = "toolbox.getTaskActionClient().submit(new SegmentMetadataUpdateAction(ImmutableSet.of(movedSegment)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "run['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "final DataSegment movedSegment = toolbox.getDataSegmentMover().move(segment,targetLoadSpec)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "log.info(\"Segment (%s( did not move, not updating metadata\",segment)@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final List<DataSegment> unusedSegments = toolbox.getTaskActionClient().submit(new RetrieveUnusedSegmentsAction(myLock.getDataSource(),myLock.getInterval()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "toolbox.getTaskActionClient().submit(new SegmentMetadataUpdateAction(ImmutableSet.copyOf(restoredSegments)))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "log.info(\"Segment (%s( did not move, not updating metadata\",segment.getId())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "restoredSegments.add(restored)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "restoredSegments.isEmpty()@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "final TaskLock myLock = getAndCheckLock(toolbox)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "unusedSegment.getVersion().compareTo(myLock.getVersion()) > 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "log.info(\"OK to restore segment: %s\",unusedSegment.getId())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return TaskStatus.success(getId())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final DataSegment restored = toolbox.getDataSegmentArchiver().restore(segment)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "restored != null@@@14@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final List<DataSegment> restoredSegments = new ArrayList<>()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "return TaskStatus.success(getId())@@@27@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new ISE(\"WTF?! Unused segment(%s( has version(%s( > task version(%s(\",unusedSegment.getId(),unusedSegment.getVersion(),myLock.getVersion())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "TaskToolbox toolbox@@@2@@@['1', '1', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "log.info(\"No segments restored\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "run['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "run['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "log.info(\"OK to move segment: %s\",unusedSegment.getId())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->22 [style = bold, label=""];
13->10 [style = bold, label=""];
4->9 [style = bold, label=""];
17->8 [style = bold, label=""];
16->3 [style = bold, label=""];
8->11 [style = dotted, label="false"];
4->17 [style = bold, label=""];
0->13 [style = bold, label=""];
15->7 [style = bold, label=""];
11->6 [style = bold, label=""];
20->18 [style = solid, label="movedSegment"];
4->15 [style = bold, label=""];
18->19 [style = bold, label=""];
7->20 [style = dashed, label="0"];
14->3 [style = solid, label="toolbox"];
7->4 [style = bold, label=""];
9->7 [style = bold, label=""];
9->8 [style = bold, label=""];
21->3 [style = bold, label=""];
13->10 [style = dotted, label="true"];
4->17 [style = dotted, label="false"];
3->0 [style = bold, label=""];
4->15 [style = dotted, label="false"];
2->13 [style = bold, label=""];
17->7 [style = bold, label=""];
20->18 [style = bold, label=""];
8->1 [style = bold, label=""];
8->1 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
18->20 [style = bold, label=""];
1->6 [style = bold, label=""];
22->20 [style = bold, label=""];
7->4 [style = solid, label="restored"];
16->14 [style = dotted, label="true"];
5->11 [style = solid, label="restoredSegments"];
21->14 [style = dotted, label="true"];
7->9 [style = solid, label="restored"];
15->17 [style = dashed, label="0"];
5->7 [style = bold, label=""];
10->2 [style = bold, label=""];
12->3 [style = bold, label=""];
13->22 [style = bold, label=""];
4->9 [style = dotted, label="true"];
8->11 [style = bold, label=""];
2->22 [style = dashed, label="0"];
15->8 [style = bold, label=""];
22->13 [style = bold, label=""];
2->5 [style = bold, label=""];
13->2 [style = bold, label=""];
}
