digraph {
4 [style = filled, label = "test_filterPushDown_factToCountryRightWithFilterOnNullColumnsUsingLookup['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(null,new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",null),new SelectorFilter(FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"v\",null))),ImmutableSet.of())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(null,new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",null),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\",null))),ImmutableSet.of())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",null),new SelectorFilter(FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"v\",null)))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"k\",FACT_TO_COUNTRY_ON_NUMBER_PREFIX + \"v\"),ImmutableList.of())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = joinFilterPreAnalysisGroup.getPreAnalysisForSingleLevelMode()@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysisGroup)@@@6@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryNameUsingIsoCodeLookup(JoinType.RIGHT))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "test_filterPushDown_factToCountryInnerUsingCountryNumberFilterOnNullsUsingLookup['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = makeDefaultConfigPreAnalysis(originalFilter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToCountryNameUsingIsoCodeLookup(JoinType.INNER))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,VirtualColumns.EMPTY,Granularities.ALL,false,null),ImmutableList.of(\"page\",\"countryIsoCode\",\"countryNumber\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"k\",FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\"),ImmutableList.of())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "JoinFilterPreAnalysisGroup joinFilterPreAnalysisGroup = makeDefaultConfigPreAnalysisGroup(originalFilter,joinableClauses,VirtualColumns.EMPTY)@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"channel\",null),new SelectorFilter(FACT_TO_COUNTRY_ON_ISO_CODE_PREFIX + \"v\",null)))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "test_filterPushDown_factToCountryRightWithFilterOnNullColumnsUsingLookup['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
2->9 [style = solid, label="joinFilterPreAnalysis"];
14->1 [style = solid, label="originalFilter"];
7->11 [style = solid, label="originalFilter"];
7->11 [style = bold, label=""];
7->1 [style = bold, label=""];
5->12 [style = dashed, label="0"];
9->0 [style = bold, label=""];
11->9 [style = solid, label="joinFilterPreAnalysis"];
4->6 [style = bold, label=""];
6->11 [style = solid, label="joinableClauses"];
7->14 [style = dashed, label="0"];
7->3 [style = solid, label="originalFilter"];
6->12 [style = solid, label="joinableClauses"];
14->13 [style = solid, label="originalFilter"];
11->12 [style = bold, label=""];
2->9 [style = bold, label=""];
15->16 [style = bold, label=""];
3->13 [style = dashed, label="0"];
10->6 [style = bold, label=""];
14->1 [style = bold, label=""];
13->17 [style = bold, label=""];
6->16 [style = dashed, label="0"];
17->2 [style = bold, label=""];
8->2 [style = bold, label=""];
16->5 [style = solid, label="joinableClauses"];
1->11 [style = dashed, label="0"];
17->0 [style = solid, label="expectedFilterSplit"];
3->8 [style = bold, label=""];
5->13 [style = bold, label=""];
11->12 [style = solid, label="joinFilterPreAnalysis"];
9->0 [style = solid, label="actualFilterSplit"];
8->9 [style = bold, label=""];
8->17 [style = dashed, label="0"];
16->14 [style = bold, label=""];
1->5 [style = solid, label="joinFilterPreAnalysisGroup"];
8->0 [style = solid, label="expectedFilterSplit"];
12->3 [style = bold, label=""];
6->7 [style = bold, label=""];
6->5 [style = solid, label="joinableClauses"];
7->1 [style = solid, label="originalFilter"];
16->1 [style = solid, label="joinableClauses"];
6->1 [style = solid, label="joinableClauses"];
}
