digraph {
10 [style = filled, label = "assertFalse(t1.equals(t2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(t1.equals(t2))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int h2 = t2.hashCode()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "testEquals['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertTrue(t1.equals(t2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertFalse(t1.equals(t2))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertEquals(t2,t1)@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "t1.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertFalse(t1.equals(t2))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "t1.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testEquals['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "t2.getContainer().add(new TextTitle(\"T1\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "t1.getContainer().add(new TextTitle(\"T1\"))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertTrue(t1.equals(t2))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "t1.setFrame(new BlockBorder(Color.RED))@@@11@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(h1,h2)@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "t2.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "CompositeTitle t2 = new CompositeTitle(new BlockContainer())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@23@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "t2.setPadding(new RectangleInsets(1.0,2.0,3.0,4.0))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertTrue(t1.equals(t2))@@@26@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(t1.equals(t2))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "DateTitle t1 = new DateTitle()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "CompositeTitle t1 = new CompositeTitle(new BlockContainer())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "DateTitle t2 = new DateTitle()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertFalse(t1.equals(t2))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertTrue(t1.equals(t2))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "t1.setFrame(new BlockBorder(Color.red))@@@11@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "assertFalse(t1.equals(t2))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "int h1 = t1.hashCode()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "t2.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.RED,3.0f,4.0f,Color.YELLOW))@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "t2.setFrame(new BlockBorder(Color.red))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "t2.setFrame(new BlockBorder(Color.RED))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "t2.setMargin(new RectangleInsets(1.0,2.0,3.0,4.0))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "testHashcode['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(t1,t2)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "t1.setBackgroundPaint(new GradientPaint(1.0f,2.0f,Color.red,3.0f,4.0f,Color.yellow))@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19->7 [style = solid, label="t2"];
0->9 [style = bold, label=""];
4->14 [style = bold, label=""];
19->14 [style = solid, label="t2"];
19->8 [style = solid, label="t2"];
21->0 [style = bold, label=""];
17->6 [style = bold, label=""];
16->17 [style = solid, label="t1"];
15->21 [style = bold, label=""];
2->3 [style = bold, label=""];
19->6 [style = solid, label="t2"];
19->3 [style = solid, label="t2"];
28->7 [style = bold, label=""];
35->32 [style = bold, label=""];
35->32 [style = solid, label="t2"];
19->21 [style = solid, label="t2"];
19->10 [style = solid, label="t2"];
19->17 [style = bold, label=""];
3->12 [style = bold, label=""];
13->25 [style = dashed, label="0"];
16->19 [style = bold, label=""];
36->33 [style = bold, label=""];
23->29 [style = dashed, label="0"];
34->30 [style = bold, label=""];
12->7 [style = bold, label=""];
22->4 [style = bold, label=""];
19->17 [style = solid, label="t2"];
26->16 [style = bold, label=""];
3->28 [style = bold, label=""];
23->24 [style = bold, label=""];
25->20 [style = bold, label=""];
9->18 [style = bold, label=""];
30->35 [style = bold, label=""];
33->31 [style = solid, label="h2"];
8->5 [style = bold, label=""];
14->23 [style = bold, label=""];
16->30 [style = dashed, label="0"];
11->10 [style = bold, label=""];
1->16 [style = bold, label=""];
24->25 [style = bold, label=""];
12->28 [style = dashed, label="0"];
6->11 [style = bold, label=""];
14->29 [style = bold, label=""];
7->27 [style = bold, label=""];
33->31 [style = bold, label=""];
32->36 [style = bold, label=""];
7->15 [style = bold, label=""];
19->24 [style = solid, label="t2"];
10->2 [style = bold, label=""];
36->31 [style = solid, label="h1"];
18->8 [style = bold, label=""];
15->27 [style = dashed, label="0"];
19->9 [style = solid, label="t2"];
19->35 [style = dashed, label="0"];
16->6 [style = solid, label="t1"];
19->22 [style = solid, label="t2"];
19->20 [style = solid, label="t2"];
29->24 [style = bold, label=""];
5->22 [style = bold, label=""];
27->21 [style = bold, label=""];
24->13 [style = bold, label=""];
13->20 [style = bold, label=""];
}
