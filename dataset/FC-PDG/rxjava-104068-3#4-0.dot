digraph {
8 [style = filled, label = "inOrder.verify(observer,times(0)).onNext(\"four\")@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Flowable<String> source = Flowable.unsafeCreate(new Publisher<String>(){@Override public void subscribe(Subscriber<? super String> subscriber){subscriber.onSubscribe(new BooleanSubscription())publishNext(subscriber,100,\"one\")publishNext(subscriber,300,\"two\")publishNext(subscriber,900,\"three\")publishNext(subscriber,905,\"four\")publishCompleted(subscriber,1000)}})@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"three\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "throttlingWithCompleted['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "InOrder inOrder = inOrder(observer)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "inOrder.verifyNoMoreInteractions()@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "inOrder.verify(subscriber,times(0)).onNext(\"four\")@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "inOrder.verify(observer,times(0)).onNext(\"two\")@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "inOrder.verify(subscriber,times(1)).onComplete()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "InOrder inOrder = inOrder(subscriber)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"three\")@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "inOrder.verify(subscriber,times(1)).onNext(\"one\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "sampled.subscribe(subscriber)@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "inOrder.verify(observer,times(1)).onNext(\"one\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "inOrder.verify(observer,times(1)).onComplete()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Observable<String> source = Observable.unsafeCreate(new ObservableSource<String>(){@Override public void subscribe(Observer<? super String> innerObserver){innerObserver.onSubscribe(Disposable.empty())publishNext(innerObserver,100,\"one\")publishNext(innerObserver,300,\"two\")publishNext(innerObserver,900,\"three\")publishNext(innerObserver,905,\"four\")publishCompleted(innerObserver,1000)}})@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "throttlingWithCompleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "inOrder.verify(subscriber,times(0)).onNext(\"two\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "scheduler.advanceTimeTo(1000,TimeUnit.MILLISECONDS)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "throttlingWithCompleted['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Observable<String> sampled = source.throttleFirst(400,TimeUnit.MILLISECONDS,scheduler)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Flowable<String> sampled = source.throttleFirst(400,TimeUnit.MILLISECONDS,scheduler)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "sampled.subscribe(observer)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3->19 [style = dashed, label="0"];
22->19 [style = bold, label=""];
8->16 [style = dashed, label="0"];
21->15 [style = bold, label=""];
9->4 [style = bold, label=""];
18->22 [style = bold, label=""];
14->21 [style = bold, label=""];
10->9 [style = bold, label=""];
4->5 [style = bold, label=""];
20->4 [style = bold, label=""];
1->14 [style = dashed, label="0"];
12->1 [style = bold, label=""];
2->10 [style = bold, label=""];
11->6 [style = bold, label=""];
5->18 [style = dashed, label="0"];
11->17 [style = dashed, label="0"];
10->15 [style = dashed, label="0"];
0->1 [style = bold, label=""];
7->3 [style = bold, label=""];
19->16 [style = bold, label=""];
8->11 [style = bold, label=""];
17->6 [style = bold, label=""];
7->22 [style = dashed, label="0"];
3->8 [style = bold, label=""];
9->20 [style = dashed, label="0"];
15->20 [style = bold, label=""];
2->21 [style = dashed, label="0"];
16->17 [style = bold, label=""];
13->14 [style = bold, label=""];
1->2 [style = bold, label=""];
5->7 [style = bold, label=""];
4->18 [style = bold, label=""];
}
