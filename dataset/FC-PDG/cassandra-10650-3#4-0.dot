digraph {
16 [style = filled, label = "getCurrentColumnFamilyStore().loadNewSSTables(backupdir.toString(),false,false,false,false,false,false)@@@13@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "getCurrentColumnFamilyStore().clearUnsafe()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "backupdir = moveToBackupDir(sstables)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "backupdir = moveToBackupDir(sstables)@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,sstables.size())@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ColumnFamilyStore.ImportOptions options = ColumnFamilyStore.ImportOptions.options(backupdir.toString()).build()@@@13@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "options = ColumnFamilyStore.ImportOptions.options(backupdir.toString()).resetLevel(true).build()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "importClearRepairedTest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(10,execute(\"select * from %s\").size())@@@14@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "getCurrentColumnFamilyStore().loadNewSSTables(backupdir.toString(),false,true,false,false,false,false)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "i < 10@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "getCurrentColumnFamilyStore().importNewSSTables(options)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "i++@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(1,sstables.size())@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "getCurrentColumnFamilyStore().clearUnsafe()@@@18@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertEquals(0,execute(\"select * from %s\").size())@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "sstable.descriptor.getMetadataSerializer().mutateLevel(sstable.descriptor,123)@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "File backupdir = moveToBackupDir(sstables)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "assertFalse(sstable.isRepaired())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "getCurrentColumnFamilyStore().importNewSSTables(options)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "sstable.descriptor.getMetadataSerializer().mutateLevel(sstable.descriptor,8)@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
27 [style = filled, label = "execute(\"insert into %s (id, d) values (?, ?)\",i,i)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
37 [style = filled, label = "sstable.descriptor.getMetadataSerializer().mutateRepaired(sstable.descriptor,111,null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertEquals(0,sstable.getSSTableLevel())@@@25@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "createTable(\"create table %s (id int primary key, d int)\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Set<SSTableReader> sstables = getCurrentColumnFamilyStore().getLiveSSTables()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "getCurrentColumnFamilyStore().forceBlockingFlush()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "importResetLevelTest['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
36 [style = filled, label = "assertTrue(sstable.isRepaired())@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "execute(\"insert into %s (id, d) values (?, ?)\",i,i)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertEquals(1,sstables.size())@@@22@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "importResetLevelTest['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(1,sstables.size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "i++@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(8,sstable.getSSTableLevel())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2->17 [style = bold, label=""];
36->6 [style = bold, label=""];
4->9 [style = bold, label=""];
10->18 [style = bold, label=""];
2->23 [style = dashed, label="0"];
0->16 [style = bold, label=""];
4->35 [style = bold, label=""];
5->20 [style = bold, label=""];
18->1 [style = solid, label="sstables"];
16->10 [style = bold, label=""];
35->9 [style = bold, label=""];
11->33 [style = dashed, label="0"];
21->15 [style = bold, label=""];
9->4 [style = bold, label=""];
27->9 [style = bold, label=""];
20->28 [style = bold, label=""];
12->11 [style = bold, label=""];
4->35 [style = dotted, label="true"];
22->35 [style = solid, label="i"];
20->28 [style = dashed, label="0"];
23->32 [style = bold, label=""];
14->19 [style = bold, label=""];
31->18 [style = bold, label=""];
26->8 [style = bold, label=""];
37->15 [style = bold, label=""];
28->1 [style = bold, label=""];
22->4 [style = solid, label="i"];
20->6 [style = bold, label=""];
34->8 [style = bold, label=""];
21->37 [style = dashed, label="0"];
2->38 [style = dashed, label="0"];
3->4 [style = bold, label=""];
30->29 [style = bold, label=""];
4->7 [style = bold, label=""];
22->27 [style = solid, label="i"];
8->22 [style = bold, label=""];
19->37 [style = bold, label=""];
22->4 [style = bold, label=""];
7->14 [style = bold, label=""];
19->24 [style = bold, label=""];
25->31 [style = bold, label=""];
22->9 [style = solid, label="i"];
2->23 [style = bold, label=""];
6->1 [style = bold, label=""];
3->4 [style = solid, label="i"];
3->9 [style = solid, label="i"];
17->12 [style = bold, label=""];
4->3 [style = dotted, label="true"];
20->36 [style = dashed, label="0"];
0->25 [style = bold, label=""];
18->5 [style = bold, label=""];
15->0 [style = bold, label=""];
4->27 [style = bold, label=""];
5->2 [style = solid, label="sstables"];
9->35 [style = solid, label="i"];
12->33 [style = bold, label=""];
4->27 [style = dotted, label="true"];
9->3 [style = bold, label=""];
22->3 [style = solid, label="i"];
1->2 [style = bold, label=""];
9->27 [style = solid, label="i"];
14->15 [style = solid, label="sstables"];
13->8 [style = bold, label=""];
9->4 [style = solid, label="i"];
4->9 [style = dotted, label="true"];
32->11 [style = bold, label=""];
5->36 [style = bold, label=""];
38->17 [style = bold, label=""];
23->32 [style = solid, label="options"];
21->24 [style = dashed, label="0"];
11->30 [style = bold, label=""];
25->31 [style = solid, label="options"];
1->38 [style = bold, label=""];
24->15 [style = bold, label=""];
19->21 [style = bold, label=""];
}
