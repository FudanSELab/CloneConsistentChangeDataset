digraph {
12 [style = filled, label = "long maxMemoryPerCompaction = IOUtils.getMaxMemoryPerCompaction(new SparkTaskContextSupplier(),config)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "result = hoodieCopyOnWriteTable.handleInsert(instantTime,operation.getPartitionPath(),operation.getFileId(),scanner.getRecords())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "compact['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "HoodieSparkCopyOnWriteTable hoodieCopyOnWriteTable@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "HoodieFlinkCopyOnWriteTable hoodieCopyOnWriteTable@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Option<HoodieBaseFile> oldDataFileOpt = operation.getBaseFile(metaClient.getBasePath(),operation.getPartitionPath())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Iterator<List<WriteStatus>> result@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "!scanner.iterator().hasNext()@@@11@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "return StreamSupport.stream(resultIterable.spliterator(),false).flatMap(null).peek(null).collect(toList())@@@23@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "HoodieSparkCopyOnWriteTable hoodieCopyOnWriteTable@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "result = hoodieCopyOnWriteTable.handleUpdate(instantTime,operation.getPartitionPath(),operation.getFileId(),scanner.getRecords(),oldDataFileOpt.get())@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "FileSystem fs = metaClient.getFs()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "String instantTime@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "LOG.info(\"Compacting base \" + operation.getDataFileName() + \" with delta files \" + operation.getDeltaFileNames() + \" for commit \" + instantTime)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "LOG.info(\"MaxMemoryPerCompaction => \" + maxMemoryPerCompaction)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "HoodieMergedLogRecordScanner scanner = HoodieMergedLogRecordScanner.newBuilder().withFileSystem(fs).withBasePath(metaClient.getBasePath()).withLogFilePaths(logFiles).withReaderSchema(readerSchema).withLatestInstantTime(maxInstantTime).withMaxMemorySizeInBytes(maxMemoryPerCompaction).withReadBlocksLazily(config.getCompactionLazyBlockReadEnabled()).withReverseReader(config.getCompactionReverseLogReadEnabled()).withBufferSize(config.getMaxDFSStreamBufferSize()).withSpillableMapBasePath(config.getSpillableMapBasePath()).build()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "oldDataFileOpt.isPresent()@@@16@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "CompactionOperation operation@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "HoodieTableMetaClient metaClient@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "HoodieWriteConfig config@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Schema readerSchema = HoodieAvroUtils.addMetadataFields(new Schema.Parser().parse(config.getSchema()))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "compact['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "String maxInstantTime = metaClient.getActiveTimeline().getTimelineOfActions(CollectionUtils.createSet(HoodieTimeline.COMMIT_ACTION,HoodieTimeline.ROLLBACK_ACTION,HoodieTimeline.DELTA_COMMIT_ACTION)).filterCompletedInstants().lastInstant().get().getTimestamp()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "CompactionOperation operation@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "return new ArrayList<>()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "compact['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "HoodieTableMetaClient metaClient@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Iterable<List<WriteStatus>> resultIterable = null@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "List<String> logFiles = operation.getDeltaFileNames().stream().map(null).collect(toList())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String instantTime@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "HoodieTableMetaClient metaClient@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
29 [style = filled, label = "HoodieWriteConfig config@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "long maxMemoryPerCompaction = IOUtils.getMaxMemoryPerCompaction(new FlinkTaskContextSupplier(null),config)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "HoodieWriteConfig config@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
25 [style = filled, label = "String instantTime@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14->16 [style = bold, label=""];
13->10 [style = bold, label=""];
16->18 [style = bold, label=""];
28->15 [style = bold, label=""];
15->7 [style = bold, label=""];
14->0 [style = dotted, label="true"];
23->22 [style = dotted, label="true"];
25->16 [style = solid, label="instantTime"];
29->31 [style = solid, label="config"];
28->33 [style = dotted, label="true"];
31->20 [style = solid, label="maxMemoryPerCompaction"];
25->0 [style = solid, label="instantTime"];
14->16 [style = dotted, label="false"];
4->13 [style = bold, label=""];
23->15 [style = bold, label=""];
11->17 [style = dotted, label="true"];
12->20 [style = bold, label=""];
12->31 [style = dashed, label="0"];
11->9 [style = dotted, label="true"];
5->14 [style = bold, label=""];
22->34 [style = dashed, label="0"];
27->12 [style = solid, label="config"];
13->10 [style = dotted, label="true"];
2->4 [style = bold, label=""];
11->22 [style = dotted, label="true"];
10->6 [style = bold, label=""];
33->0 [style = solid, label="instantTime"];
21->0 [style = solid, label="instantTime"];
11->15 [style = bold, label=""];
20->2 [style = bold, label=""];
28->29 [style = dotted, label="true"];
28->30 [style = dotted, label="true"];
19->1 [style = bold, label=""];
6->5 [style = bold, label=""];
23->26 [style = dotted, label="true"];
33->16 [style = solid, label="instantTime"];
28->32 [style = dotted, label="true"];
25->19 [style = solid, label="instantTime"];
14->0 [style = bold, label=""];
9->12 [style = solid, label="config"];
33->19 [style = solid, label="instantTime"];
23->27 [style = dotted, label="true"];
1->12 [style = bold, label=""];
12->20 [style = solid, label="maxMemoryPerCompaction"];
0->18 [style = bold, label=""];
18->8 [style = bold, label=""];
11->21 [style = dotted, label="true"];
13->6 [style = bold, label=""];
31->20 [style = bold, label=""];
1->31 [style = bold, label=""];
11->3 [style = dotted, label="true"];
7->19 [style = bold, label=""];
23->24 [style = dotted, label="true"];
23->25 [style = dotted, label="true"];
28->34 [style = dotted, label="true"];
21->16 [style = solid, label="instantTime"];
21->19 [style = solid, label="instantTime"];
}
