digraph {
3 [style = filled, label = "MemoryRecords records = builder.build()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "partitions.put(tp0,new FetchResponse.PartitionData<>(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,records))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "consumerClient.poll(time.timer(0))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "client.prepareResponse(new FetchResponse<>(Errors.NONE,new LinkedHashMap<>(partitions),0,INVALID_SESSION_ID))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@15@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@11@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "record.offset() >= 1@@@16@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "subscriptions.seek(tp0,1)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "int v = 0@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "MemoryRecordsBuilder builder = MemoryRecords.builder(ByteBuffer.allocate(1024),CompressionType.NONE,TimestampType.CREATE_TIME,0L)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@12@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
41 [style = filled, label = "subscriptions.seek(tp1,5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "subscriptions.assignFromUser(Utils.mkSet(tp0,tp1))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int expectedBytes = 0@@@14@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "subscriptions.seek(tp0,0)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "fetcher.fetchedRecords()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "Map<TopicPartition,FetchResponse.PartitionData<MemoryRecords>> partitions = new HashMap<>()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assignFromUser(singleton(tp0))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "v < 3@@@13@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "builder.appendWithOffset(v,RecordBatch.NO_TIMESTAMP,\"key\".getBytes(),(\"value-\" + v).getBytes())@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "fetchRecords(tp0,records,Errors.NONE,100L,0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "KafkaMetric fetchSizeAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.fetchSizeAvg))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(1,fetcher.sendFetches())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testFetchResponseMetricsPartialResponse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "v++@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertEquals(3,(Double)recordsCountAverage.metricValue(),EPSILON)@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "buildFetcher()@@@3@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "KafkaMetric recordsCountAverage = allMetrics.get(metrics.metricInstance(metricsRegistry.recordsPerRequestAvg))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "subscriptions.seek(tp0,1)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(expectedBytes,(Double)fetchSizeAverage.metricValue(),EPSILON)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Map<MetricName,KafkaMetric> allMetrics = metrics.metrics()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "subscriptions.seek(tp1,0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "record.offset() >= 1@@@15@@@['1', '0', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "int expectedBytes = 0@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "fetchRecords(tp0,records,Errors.NONE,100L,0)@@@17@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "partitions.put(tp1,new FetchResponse.PartitionData<>(Errors.NONE,100,FetchResponse.INVALID_LAST_STABLE_OFFSET,0L,null,MemoryRecords.withRecords(CompressionType.NONE,new SimpleRecord(\"val\".getBytes()))))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "testFetchResponseMetricsWithOnePartitionAtTheWrongOffset['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "testFetchResponseMetricsPartialResponse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertEquals(2,(Double)recordsCountAverage.metricValue(),EPSILON)@@@20@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "expectedBytes += record.sizeInBytes()@@@16@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
16 [style = filled, label = "subscriptions.assignFromUser(singleton(tp0))@@@3@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27->15 [style = solid, label="v"];
42->41 [style = bold, label=""];
9->27 [style = solid, label="v"];
37->30 [style = solid, label="expectedBytes"];
5->9 [style = bold, label=""];
25->22 [style = bold, label=""];
11->14 [style = bold, label=""];
22->1 [style = solid, label="expectedBytes"];
16->35 [style = dashed, label="0"];
15->20 [style = dotted, label="true"];
19->11 [style = bold, label=""];
6->38 [style = dashed, label="0"];
12->7 [style = bold, label=""];
27->15 [style = bold, label=""];
15->17 [style = bold, label=""];
22->0 [style = bold, label=""];
15->20 [style = bold, label=""];
6->11 [style = bold, label=""];
4->0 [style = solid, label="expectedBytes"];
9->15 [style = dotted, label="true"];
35->38 [style = bold, label=""];
17->27 [style = bold, label=""];
3->0 [style = solid, label="expectedBytes"];
17->13 [style = solid, label="records"];
15->9 [style = solid, label="v"];
40->37 [style = bold, label=""];
39->29 [style = bold, label=""];
22->25 [style = bold, label=""];
3->31 [style = solid, label="records"];
15->8 [style = solid, label="v"];
3->0 [style = solid, label="records"];
16->6 [style = bold, label=""];
17->15 [style = solid, label="v"];
28->36 [style = solid, label="partitions"];
9->17 [style = bold, label=""];
4->2 [style = bold, label=""];
21->25 [style = bold, label=""];
9->8 [style = bold, label=""];
2->4 [style = bold, label=""];
15->27 [style = dotted, label="true"];
38->32 [style = bold, label=""];
27->17 [style = solid, label="v"];
9->8 [style = dotted, label="true"];
15->17 [style = dotted, label="true"];
7->5 [style = bold, label=""];
3->2 [style = bold, label=""];
15->9 [style = bold, label=""];
17->15 [style = bold, label=""];
7->42 [style = bold, label=""];
29->40 [style = bold, label=""];
34->35 [style = bold, label=""];
13->0 [style = bold, label=""];
25->0 [style = bold, label=""];
1->33 [style = dashed, label="0"];
9->20 [style = solid, label="v"];
8->15 [style = bold, label=""];
18->23 [style = bold, label=""];
30->33 [style = bold, label=""];
37->30 [style = bold, label=""];
28->31 [style = bold, label=""];
4->13 [style = bold, label=""];
32->14 [style = bold, label=""];
15->3 [style = bold, label=""];
36->39 [style = bold, label=""];
21->1 [style = solid, label="expectedBytes"];
31->26 [style = bold, label=""];
3->28 [style = bold, label=""];
10->16 [style = bold, label=""];
0->1 [style = bold, label=""];
23->19 [style = bold, label=""];
2->4 [style = dotted, label="true"];
9->17 [style = solid, label="v"];
17->3 [style = bold, label=""];
3->21 [style = bold, label=""];
5->9 [style = solid, label="v"];
5->8 [style = solid, label="v"];
20->17 [style = bold, label=""];
26->36 [style = bold, label=""];
17->20 [style = solid, label="v"];
5->15 [style = solid, label="v"];
9->15 [style = solid, label="v"];
2->13 [style = bold, label=""];
9->15 [style = bold, label=""];
1->24 [style = bold, label=""];
14->12 [style = bold, label=""];
25->22 [style = dotted, label="true"];
41->5 [style = bold, label=""];
}
