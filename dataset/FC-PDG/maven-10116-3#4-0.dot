digraph {
6 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forProjectDirectory(new File(testDir,\"unknown\"),System.out)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forWrapperPropertiesFile(propertiesFile,System.out)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getDistribution())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getDistributionBase())@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getZipPath())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "useDefaultMetadataNoProeprtiesFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getZipBase())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getDistributionBase())@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "Assert.assertNull(wrapper.getDistribution())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "properties = new Properties()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(PathAssembler.MAVEN_USER_HOME_STRING,wrapper.getConfiguration().getZipBase())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "writePropertiesFile(properties,propertiesFile,\"header\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "properties.put(\"distributionUrl\",\"http://server/test/maven.zip\")@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getDistributionPath())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Assert.assertEquals(Installer.DEFAULT_DISTRIBUTION_PATH,wrapper.getConfiguration().getDistributionPath())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "WrapperExecutor wrapper = WrapperExecutor.forProjectDirectory(testDir.getRoot().toPath().resolve(\"unknown\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "useDefaultMetadataNoProeprtiesFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "Assert.assertNull(wrapper.getConfiguration().getDistribution())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(new URI(\"http://server/test/maven.zip\"),wrapper.getConfiguration().getDistribution())@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "propertiesFileOnlyContainsDistURL['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
6->8 [style = dashed, label="0"];
15->13 [style = bold, label=""];
16->18 [style = bold, label=""];
10->15 [style = bold, label=""];
3->1 [style = bold, label=""];
0->6 [style = bold, label=""];
10->13 [style = solid, label="properties"];
9->8 [style = bold, label=""];
5->17 [style = bold, label=""];
2->4 [style = bold, label=""];
13->16 [style = bold, label=""];
7->3 [style = bold, label=""];
4->7 [style = bold, label=""];
6->2 [style = bold, label=""];
2->15 [style = dashed, label="0"];
17->12 [style = bold, label=""];
8->2 [style = bold, label=""];
11->10 [style = bold, label=""];
12->19 [style = bold, label=""];
18->14 [style = bold, label=""];
14->5 [style = bold, label=""];
}
