digraph {
1 [style = filled, label = "final ProcessorTopology topology = builder.internalTopologyBuilder.rewriteTopology(new StreamsConfig(props)).buildTopology()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shouldUseGeneratedStoreNamesForLeftJoinOperationBetweenKStreamAndKStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "final KStream<String,String> streamOne = builder.stream(STREAM_TOPIC)@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertNamesForOperation(topology,\"KSTREAM-SOURCE-0000000000\",\"KSTREAM-SOURCE-0000000001\",STREAM_OPERATION_NAME + \"-this-windowed\",STREAM_OPERATION_NAME + \"-other-windowed\",STREAM_OPERATION_NAME + \"-outer-this-join\",STREAM_OPERATION_NAME + \"-outer-other-join\",STREAM_OPERATION_NAME + \"-merge\")@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertNamesForOperation(topology,\"KSTREAM-SOURCE-0000000000\",\"KSTREAM-SOURCE-0000000001\",STREAM_OPERATION_NAME + \"-this-windowed\",STREAM_OPERATION_NAME + \"-other-windowed\",STREAM_OPERATION_NAME + \"-this-join\",STREAM_OPERATION_NAME + \"-outer-other-join\",STREAM_OPERATION_NAME + \"-merge\")@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldUseGeneratedStoreNamesForOuterJoinOperationBetweenKStreamAndKStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertNamesForStateStore(topology.stateStores(),\"KSTREAM-OUTERTHIS-0000000004-store\",\"KSTREAM-OUTEROTHER-0000000005-store\")@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertNamesForStateStore(topology.stateStores(),\"KSTREAM-JOINTHIS-0000000004-store\",\"KSTREAM-OUTEROTHER-0000000005-store\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "streamOne.outerJoin(streamTwo,null,JoinWindows.of(Duration.ofHours(1)),StreamJoined.with(Serdes.String(),Serdes.String(),Serdes.String()).withName(STREAM_OPERATION_NAME))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "streamOne.leftJoin(streamTwo,null,JoinWindows.of(Duration.ofHours(1)),StreamJoined.with(Serdes.String(),Serdes.String(),Serdes.String()).withName(STREAM_OPERATION_NAME))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final KStream<String,String> streamTwo = builder.stream(STREAM_TOPIC_TWO)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "builder.build()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertNamesForStateStore(topology.stateStores(),\"KSTREAM-JOINTHIS-0000000004-store\",\"KSTREAM-OUTEROTHER-0000000005-store\",\"KSTREAM-OUTERSHARED-0000000004-store\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "shouldUseGeneratedStoreNamesForLeftJoinOperationBetweenKStreamAndKStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6->8 [style = dashed, label="0"];
5->12 [style = dashed, label="0"];
1->8 [style = bold, label=""];
9->0 [style = bold, label=""];
2->3 [style = solid, label="streamTwo"];
2->3 [style = bold, label=""];
0->2 [style = bold, label=""];
6->11 [style = dashed, label="0"];
1->12 [style = solid, label="topology"];
7->0 [style = bold, label=""];
11->12 [style = bold, label=""];
3->13 [style = dashed, label="0"];
3->4 [style = bold, label=""];
1->5 [style = solid, label="topology"];
1->11 [style = bold, label=""];
2->13 [style = bold, label=""];
6->5 [style = bold, label=""];
1->6 [style = bold, label=""];
8->5 [style = bold, label=""];
10->0 [style = bold, label=""];
4->1 [style = bold, label=""];
2->13 [style = solid, label="streamTwo"];
13->4 [style = bold, label=""];
}
