digraph {
34 [style = filled, label = "TestObserver<Long> observer = new TestObserver<Long>()@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "doOnUnsubscribe['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
31 [style = filled, label = "doOnUnsubscribe['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "int i = 0@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertEquals(String.format(\"There should exactly %d un-subscription events for upper stream\",subCount),subCount,upperCount.get())@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "final CountDownLatch lowerLatch = new CountDownLatch(subCount)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "List<Disposable> subscriptions = new ArrayList<Disposable>()@@@27@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "doOnUnsubscribe['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "onNextLatch.await()@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertEquals(String.format(\"There should exactly %d un-subscription events for lower stream\",subCount),subCount,lowerCount.get())@@@46@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "++i@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "List<Disposable> subscriptions = new ArrayList<>()@@@27@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "TestSubscriber<Long> subscriber = new TestSubscriber<Long>()@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "int i = 0@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "final AtomicInteger upperCount = new AtomicInteger()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "List<TestSubscriber<Long>> subscribers = new ArrayList<>()@@@28@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
8 [style = filled, label = "List<TestSubscriber<Long>> subscribers = new ArrayList<TestSubscriber<Long>>()@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "subscribers.add(subscriber)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "i < subCount@@@39@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "Observable<Long> longs = Observable.interval(50,TimeUnit.MILLISECONDS).doOnDispose(new Action(){@Override public void run(){upperLatch.countDown()upperCount.incrementAndGet()}}).doOnNext(new Consumer<Long>(){@Override public void accept(Long aLong){onNextLatch.countDown()}}).doOnDispose(new Action(){@Override public void run(){lowerLatch.countDown()lowerCount.incrementAndGet()}})@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "List<TestObserver<Long>> subscribers = new ArrayList<TestObserver<Long>>()@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "++i@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final CountDownLatch upperLatch = new CountDownLatch(subCount)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "subscriptions.add(Disposable.fromSubscription(subscriber))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CountDownLatch onNextLatch = new CountDownLatch(subCount)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "lowerLatch.await()@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "longs.subscribe(subscriber)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "upperLatch.await()@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "longs.subscribe(observer)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "subscribers.add(observer)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "i < subCount@@@30@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final AtomicInteger lowerCount = new AtomicInteger()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "TestSubscriber<Long> subscriber = new TestSubscriber<>()@@@32@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Flowable<Long> longs = Flowable.interval(50,TimeUnit.MILLISECONDS).doOnCancel(new Action(){@Override public void run(){upperLatch.countDown()upperCount.incrementAndGet()}}).doOnNext(new Consumer<Long>(){@Override public void accept(Long aLong){onNextLatch.countDown()}}).doOnCancel(new Action(){@Override public void run(){lowerLatch.countDown()lowerCount.incrementAndGet()}})@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int subCount = 3@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "subscriptions.get(i).dispose()@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "subscriptions.add(observer)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10->22 [style = bold, label=""];
11->33 [style = dotted, label="true"];
2->0 [style = solid, label="subCount"];
26->3 [style = solid, label="subscriber"];
30->22 [style = bold, label=""];
14->9 [style = solid, label="subscriber"];
8->15 [style = bold, label=""];
33->20 [style = bold, label=""];
1->35 [style = dashed, label="0"];
17->18 [style = dotted, label="true"];
19->12 [style = bold, label=""];
11->14 [style = bold, label=""];
2->7 [style = solid, label="subCount"];
14->34 [style = dashed, label="0"];
3->36 [style = dashed, label="0"];
14->3 [style = solid, label="subscriber"];
2->17 [style = solid, label="subCount"];
11->1 [style = dotted, label="true"];
11->6 [style = bold, label=""];
2->11 [style = solid, label="subCount"];
26->1 [style = bold, label=""];
22->29 [style = dashed, label="0"];
34->33 [style = solid, label="observer"];
1->3 [style = bold, label=""];
11->14 [style = dotted, label="true"];
8->32 [style = dashed, label="0"];
22->32 [style = bold, label=""];
9->20 [style = bold, label=""];
6->24 [style = bold, label=""];
12->30 [style = bold, label=""];
31->2 [style = bold, label=""];
11->9 [style = dotted, label="true"];
11->35 [style = dotted, label="true"];
2->13 [style = solid, label="subCount"];
36->33 [style = bold, label=""];
25->17 [style = bold, label=""];
27->15 [style = bold, label=""];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
11->26 [style = dotted, label="true"];
14->26 [style = dashed, label="0"];
21->2 [style = bold, label=""];
9->33 [style = dashed, label="0"];
22->8 [style = bold, label=""];
3->9 [style = bold, label=""];
11->34 [style = dotted, label="true"];
29->27 [style = bold, label=""];
11->26 [style = bold, label=""];
28->2 [style = bold, label=""];
11->20 [style = dotted, label="true"];
2->0 [style = bold, label=""];
12->10 [style = bold, label=""];
11->34 [style = bold, label=""];
17->25 [style = dotted, label="true"];
10->30 [style = dashed, label="0"];
15->11 [style = bold, label=""];
10->29 [style = bold, label=""];
0->4 [style = bold, label=""];
5->13 [style = bold, label=""];
24->17 [style = bold, label=""];
32->15 [style = bold, label=""];
2->4 [style = solid, label="subCount"];
18->25 [style = bold, label=""];
16->5 [style = bold, label=""];
2->23 [style = solid, label="subCount"];
13->23 [style = bold, label=""];
8->27 [style = dashed, label="0"];
34->36 [style = solid, label="observer"];
34->35 [style = bold, label=""];
14->1 [style = solid, label="subscriber"];
35->36 [style = bold, label=""];
26->9 [style = solid, label="subscriber"];
11->3 [style = dotted, label="true"];
7->19 [style = bold, label=""];
11->36 [style = dotted, label="true"];
17->18 [style = bold, label=""];
17->16 [style = bold, label=""];
26->1 [style = solid, label="subscriber"];
15->11 [style = solid, label="i"];
24->17 [style = solid, label="i"];
20->11 [style = bold, label=""];
34->35 [style = solid, label="observer"];
}
