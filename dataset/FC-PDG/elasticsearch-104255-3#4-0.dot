digraph {
24 [style = filled, label = "testParseOGCPolygonWithHoles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "parser.nextToken()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "shape = ShapeParser.parse(parser).build()@@@11@@@['1', '0', '0']", fillcolor = red, shape = ShapeParser.parse(parser).build()@@@11@@@", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "parser.nextToken()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "shape = ShapeParser.parse(parser).build()@@@21@@@['1', '0', '0']", fillcolor = red, shape = ShapeParser.parse(parser).build()@@@21@@@", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Shape shape = ShapeParser.parse(parser).build()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ShapeParser.parse(parser).build()@@@6@@@", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "parser.nextToken()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(176.0).value(15.0).endArray().startArray().value(-177.0).value(10.0).endArray().startArray().value(-177.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().endArray().startArray().startArray().value(-172.0).value(8.0).endArray().startArray().value(174.0).value(10.0).endArray().startArray().value(-172.0).value(-8.0).endArray().startArray().value(-172.0).value(8.0).endArray().endArray().endArray().endObject())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(183.0).value(10.0).endArray().startArray().value(183.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().startArray().value(183.0).value(10.0).endArray().endArray().startArray().startArray().value(178.0).value(8.0).endArray().startArray().value(182.0).value(8.0).endArray().startArray().value(180.0).value(-8.0).endArray().startArray().value(178.0).value(8.0).endArray().endArray().endArray().endObject())@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "Shape shape = ShapeParser.parse(parser).build()@@@12@@@['0', '1', '0']", fillcolor = red, shape = ShapeParser.parse(parser).build()@@@12@@@", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "Shape shape = ShapeParser.parse(parser).build()@@@18@@@['0', '1', '0']", fillcolor = red, shape = ShapeParser.parse(parser).build()@@@18@@@", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "XContentParser parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "ElasticsearchGeoAssertions.assertValidException(parser,)@@@6@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "ElasticsearchGeoAssertions.assertPolygon(shape)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testParseOGCPolygonWithHoles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(176.0).value(15.0).endArray().startArray().value(180.0).value(10.0).endArray().startArray().value(179.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().endArray().startArray().startArray().value(177.0).value(8.0).endArray().startArray().value(179.0).value(10.0).endArray().startArray().value(179.0).value(-8.0).endArray().startArray().value(177.0).value(8.0).endArray().endArray().endArray().endObject())@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(-177.0).value(10.0).endArray().startArray().value(176.0).value(15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(-177.0).value(-10.0).endArray().startArray().value(-177.0).value(10.0).endArray().endArray().startArray().startArray().value(178.0).value(8.0).endArray().startArray().value(-178.0).value(8.0).endArray().startArray().value(-180.0).value(-8.0).endArray().startArray().value(178.0).value(8.0).endArray().endArray().endArray().endObject())@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "ElasticsearchGeoAssertions.assertMultiPolygon(shape)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ElasticsearchGeoAssertions.assertMultiPolygon(shape)@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@19@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "parser.nextToken()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "String polygonGeoJson = Strings.toString(XContentFactory.jsonBuilder().startObject().field(\"type\",\"Polygon\").startArray(\"coordinates\").startArray().startArray().value(176.0).value(15.0).endArray().startArray().value(-177.0).value(10.0).endArray().startArray().value(-177.0).value(-10.0).endArray().startArray().value(176.0).value(-15.0).endArray().startArray().value(-177.0).value(15.0).endArray().startArray().value(172.0).value(0.0).endArray().startArray().value(176.0).value(15.0).endArray().endArray().endArray().endObject())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "ElasticsearchGeoAssertions.assertPolygon(shape)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testParseSelfCrossingPolygon['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "parser = createParser(JsonXContent.jsonXContent,polygonGeoJson)@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "Shape shape = ShapeParser.parse(parser).build()@@@24@@@['0', '1', '0']", fillcolor = red, shape = ShapeParser.parse(parser).build()@@@24@@@", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "shape = ShapeParser.parse(parser).build()@@@16@@@['1', '0', '0']", fillcolor = red, shape = ShapeParser.parse(parser).build()@@@16@@@", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6->3 [style = bold, label=""];
10->18 [style = bold, label=""];
2->6 [style = solid, label="shape"];
0->9 [style = bold, label=""];
15->10 [style = bold, label=""];
26->17 [style = solid, label="polygonGeoJson"];
23->1 [style = solid, label="shape"];
18->23 [style = bold, label=""];
26->17 [style = bold, label=""];
11->14 [style = bold, label=""];
5->26 [style = dashed, label="0"];
2->6 [style = bold, label=""];
9->4 [style = bold, label=""];
15->10 [style = solid, label="polygonGeoJson"];
4->15 [style = bold, label=""];
14->22 [style = bold, label=""];
7->0 [style = bold, label=""];
16->23 [style = dashed, label="0"];
0->21 [style = bold, label=""];
11->19 [style = bold, label=""];
5->17 [style = bold, label=""];
15->18 [style = bold, label=""];
11->19 [style = solid, label="polygonGeoJson"];
3->0 [style = bold, label=""];
24->5 [style = bold, label=""];
1->11 [style = bold, label=""];
5->17 [style = solid, label="polygonGeoJson"];
13->27 [style = bold, label=""];
19->14 [style = bold, label=""];
8->5 [style = bold, label=""];
21->4 [style = solid, label="shape"];
3->7 [style = bold, label=""];
9->4 [style = solid, label="shape"];
16->1 [style = bold, label=""];
17->27 [style = solid, label="parser"];
20->12 [style = solid, label="shape"];
22->12 [style = bold, label=""];
9->21 [style = dashed, label="0"];
5->13 [style = bold, label=""];
25->26 [style = bold, label=""];
22->12 [style = solid, label="shape"];
20->12 [style = bold, label=""];
20->22 [style = dashed, label="0"];
23->1 [style = bold, label=""];
16->1 [style = solid, label="shape"];
17->13 [style = bold, label=""];
21->4 [style = bold, label=""];
3->7 [style = solid, label="polygonGeoJson"];
14->20 [style = bold, label=""];
13->2 [style = bold, label=""];
18->16 [style = bold, label=""];
}
