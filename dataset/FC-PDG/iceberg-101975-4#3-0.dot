digraph {
21 [style = filled, label = "Assert.assertEquals(\"Current state should be at second snapshot\",5,base.currentSnapshot().snapshotId())@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "table.manageSnapshots().cherrypick(thirdSnapshot.snapshotId()).commit()@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "table.manageSnapshots().rollbackToTime(secondSnapshot.timestampMillis()).commit()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "base = readMetadata()@@@11@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "TableMetadata base = readMetadata()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "base = readMetadata()@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Snapshot thirdSnapshot = base.currentSnapshot()@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Snapshot firstSnapshot = base.currentSnapshot()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "Assert.assertEquals(\"Current state should be at third snapshot\",4,base.currentSnapshot().snapshotId())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "base = readMetadata()@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Snapshot secondSnapshot = base.currentSnapshot()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "testRollbackAndCherrypick['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "long firstSnapshotId = firstSnapshot.snapshotId()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "table.newAppend().appendFile(FILE_A).commit()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assert.assertEquals(\"Should have all three snapshots in the system\",3,base.snapshots().size())@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "table.manageSnapshots().rollbackTo(firstSnapshotId).commit()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(\"Should be at first snapshot\",firstSnapshotId,base.currentSnapshot().snapshotId())@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "testRollbackToTime['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
9 [style = filled, label = "base = readMetadata()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "table.newAppend().appendFile(FILE_B).commit()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "table.newAppend().appendFile(FILE_C).commit()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "base = readMetadata()@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "table.manageSnapshots().cherrypick(secondSnapshot.snapshotId()).commit()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(\"Count all snapshots\",5,base.snapshots().size())@@@23@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testRollbackToTime['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5->2 [style = bold, label=""];
22->19 [style = bold, label=""];
2->4 [style = bold, label=""];
1->10 [style = bold, label=""];
14->3 [style = bold, label=""];
13->0 [style = bold, label=""];
6->11 [style = bold, label=""];
21->16 [style = bold, label=""];
11->9 [style = bold, label=""];
8->6 [style = bold, label=""];
17->20 [style = bold, label=""];
4->1 [style = bold, label=""];
7->13 [style = bold, label=""];
20->21 [style = bold, label=""];
10->22 [style = bold, label=""];
3->12 [style = bold, label=""];
5->23 [style = bold, label=""];
24->3 [style = bold, label=""];
6->1 [style = solid, label="firstSnapshotId"];
2->23 [style = dashed, label="0"];
15->3 [style = bold, label=""];
18->17 [style = bold, label=""];
0->5 [style = bold, label=""];
13->2 [style = bold, label=""];
23->4 [style = bold, label=""];
12->8 [style = bold, label=""];
19->18 [style = bold, label=""];
9->7 [style = bold, label=""];
}
