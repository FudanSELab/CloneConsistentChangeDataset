digraph {
1 [style = filled, label = "JavaClassSource clazz = (JavaClassSource)Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteTest.java\"))@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertFalse(\"Should be invalid\",result.isParsed())@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(\"mock:foo\",list.get(0).getElement())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "List<ParserResult> list = CamelJavaParserHelper.parseCamelConsumerUris(method,true,false)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "parse['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "MethodSource<JavaClassSource> method = CamelJavaParserHelper.findConfigureMethod(clazz)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "parse['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "list = CamelJavaParserHelper.parseCamelProducerUris(method,true,false)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertEquals(1,list.size())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"direct:foo\",list.get(0).getElement())@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "LOG.info(\"Producer: \" + result.getElement())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(\"direct:foo\",list.get(0).getElement())@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertEquals(\"mock:foo\",list.get(0).getElement())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "parse['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "JavaClassSource clazz = (JavaClassSource)Roaster.parse(new File(\"src/test/java/org/apache/camel/parser/java/MyRouteEmptyUriTest.java\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LOG.info(\"Consumer: \" + result.getElement())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
4->10 [style = bold, label=""];
7->1 [style = bold, label=""];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
1->15 [style = dashed, label="0"];
2->3 [style = bold, label=""];
9->8 [style = bold, label=""];
5->2 [style = solid, label="method"];
15->5 [style = bold, label=""];
3->0 [style = bold, label=""];
6->10 [style = dashed, label="0"];
3->9 [style = bold, label=""];
5->2 [style = bold, label=""];
5->8 [style = solid, label="method"];
12->4 [style = bold, label=""];
0->8 [style = bold, label=""];
4->12 [style = bold, label=""];
1->5 [style = solid, label="clazz"];
15->5 [style = solid, label="clazz"];
14->15 [style = bold, label=""];
8->4 [style = bold, label=""];
0->9 [style = dashed, label="0"];
8->13 [style = bold, label=""];
13->4 [style = bold, label=""];
}
