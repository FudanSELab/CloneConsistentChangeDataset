digraph {
31 [style = filled, label = "clearIndex()@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "h.close()@@@53@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "Thread.sleep(100)@@@57@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "createCore()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "assertEquals(UpdateLog.State.ACTIVE,h.getCore().getUpdateHandler().getUpdateLog().getState())@@@59@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A13\"),null))@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@40@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "h.close()@@@48@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==5\")@@@56@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testLogReplay['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "UpdateLog.testing_logReplayHook = new Runnable(){@Override public void run(){try {assertTrue(logReplay.tryAcquire(timeout,TimeUnit.SECONDS))}catch (Exception e) }}@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final Semaphore logReplayFinish = new Semaphore(0)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertU(commit())@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==0\")@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "int permits = logReplay.availablePermits()@@@54@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "{DirectUpdateHandler2.commitOnClose = trueUpdateLog.testing_logReplayHook = nullUpdateLog.testing_logReplayFinishHook = null}@@@61@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@42@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertU(adoc(\"id\",\"A4\"))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertJQ(req(\"q\",\"id:A2\"),\"/response/numFound==0\")@@@52@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@37@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Deque<Long> versions = new ArrayDeque<>()@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "Deque<Long> versions = new ArrayDeque<Long>()@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==5\")@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertU(adoc(\"id\",\"A2\"))@@@43@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A11\"),null))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "versions.addFirst(deleteByQueryAndGetVersion(\"id:A11\",null))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "createCore()@@@49@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "testLogReplay['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "createCore()@@@55@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "h.close()@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "assertEquals(permits,logReplay.availablePermits())@@@58@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "DirectUpdateHandler2.commitOnClose = false@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "testLogReplay['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@41@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertU(delI(\"A2\"))@@@45@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "logReplay.release(1000)@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertJQ(req(\"q\",\"*:*\"),\"/response/numFound==3\")@@@47@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertTrue(logReplayFinish.tryAcquire(timeout,TimeUnit.SECONDS))@@@50@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertJQ(req(\"qt\",\"/get\",\"getVersions\",\"\" + versions.size()),\"/versions==\" + versions)@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "UpdateLog.testing_logReplayFinishHook = new Runnable(){@Override public void run(){logReplayFinish.release()}}@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A12\"),null))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "versions.addFirst(addAndGetVersion(sdoc(\"id\",\"A1\"),null))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertU(adoc(\"id\",\"A3\"))@@@44@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "final Semaphore logReplay = new Semaphore(0)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0->42 [style = solid, label="versions"];
44->9 [style = solid, label="versions"];
17->26 [style = bold, label=""];
16->40 [style = bold, label=""];
4->41 [style = solid, label="permits"];
44->34 [style = solid, label="versions"];
37->11 [style = bold, label=""];
15->25 [style = bold, label=""];
2->1 [style = bold, label=""];
39->13 [style = bold, label=""];
0->44 [style = dashed, label="0"];
20->28 [style = bold, label=""];
41->37 [style = bold, label=""];
35->33 [style = bold, label=""];
26->14 [style = bold, label=""];
22->29 [style = bold, label=""];
44->15 [style = bold, label=""];
38->27 [style = bold, label=""];
28->9 [style = bold, label=""];
31->18 [style = bold, label=""];
44->42 [style = solid, label="versions"];
12->24 [style = bold, label=""];
25->35 [style = bold, label=""];
9->8 [style = bold, label=""];
1->7 [style = bold, label=""];
0->15 [style = bold, label=""];
45->29 [style = bold, label=""];
27->42 [style = bold, label=""];
19->16 [style = bold, label=""];
44->36 [style = solid, label="versions"];
8->36 [style = bold, label=""];
24->4 [style = bold, label=""];
18->44 [style = bold, label=""];
13->12 [style = bold, label=""];
21->20 [style = bold, label=""];
0->34 [style = solid, label="versions"];
36->23 [style = bold, label=""];
10->34 [style = bold, label=""];
34->2 [style = bold, label=""];
4->30 [style = bold, label=""];
30->5 [style = bold, label=""];
40->3 [style = bold, label=""];
5->6 [style = bold, label=""];
29->32 [style = bold, label=""];
14->31 [style = bold, label=""];
6->41 [style = bold, label=""];
0->36 [style = solid, label="versions"];
23->10 [style = bold, label=""];
3->39 [style = bold, label=""];
33->38 [style = bold, label=""];
43->29 [style = bold, label=""];
42->21 [style = bold, label=""];
7->19 [style = bold, label=""];
32->17 [style = bold, label=""];
18->0 [style = bold, label=""];
0->9 [style = solid, label="versions"];
}
