digraph {
8 [style = filled, label = "@SuppressWarnings(\"unchecked\") T v = ((ScalarSupplier<T>)this).get()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int maxConcurrency@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "return empty()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "switchMap0['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Objects.requireNonNull(mapper,\"mapper is null\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "ObjectHelper.requireNonNull(mapper,\"mapper is null\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return FlowableScalarXMap.scalarXMap(v,mapper)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "ObjectHelper.verifyPositive(bufferSize,\"bufferSize\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int maxConcurrency@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "Function<? super T,? extends Publisher<? extends R>> mapper@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "flatMap['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "return ObservableScalarXMap.scalarXMap(v,mapper)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return RxJavaPlugins.onAssembly(new ObservableFlatMap<T,R>(this,mapper,delayErrors,maxConcurrency,bufferSize))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "this instanceof ScalarSupplier@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "boolean delayErrors@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "int bufferSize@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "flatMap['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ObjectHelper.verifyPositive(maxConcurrency,\"maxConcurrency\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "int bufferSize@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "boolean delayError@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "v == null@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "return RxJavaPlugins.onAssembly(new FlowableSwitchMap<T,R>(this,mapper,bufferSize,delayError))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "boolean delayErrors@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "Function<? super T,? extends ObservableSource<? extends R>> mapper@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4->5 [style = dotted, label="true"];
21->19 [style = solid, label="bufferSize"];
3->17 [style = dashed, label="0"];
1->10 [style = dotted, label="true"];
2->20 [style = dashed, label="0"];
8->2 [style = solid, label="v"];
5->20 [style = bold, label=""];
18->16 [style = dotted, label="true"];
22->20 [style = solid, label="mapper"];
0->6 [style = bold, label=""];
1->11 [style = dotted, label="true"];
18->15 [style = dotted, label="true"];
11->3 [style = solid, label="mapper"];
1->3 [style = bold, label=""];
18->17 [style = bold, label=""];
12->0 [style = solid, label="bufferSize"];
14->2 [style = solid, label="mapper"];
14->7 [style = solid, label="mapper"];
16->7 [style = solid, label="maxConcurrency"];
4->2 [style = bold, label=""];
6->19 [style = bold, label=""];
18->14 [style = dotted, label="true"];
3->0 [style = bold, label=""];
6->20 [style = dotted, label="true"];
11->2 [style = solid, label="mapper"];
5->2 [style = bold, label=""];
6->2 [style = dotted, label="true"];
18->12 [style = dotted, label="true"];
9->7 [style = solid, label="delayErrors"];
15->7 [style = solid, label="delayErrors"];
6->4 [style = dotted, label="true"];
24->23 [style = dotted, label="true"];
7->19 [style = dashed, label="0"];
6->8 [style = dotted, label="true"];
22->3 [style = solid, label="mapper"];
24->22 [style = dotted, label="true"];
11->7 [style = solid, label="mapper"];
1->9 [style = dotted, label="true"];
1->12 [style = dotted, label="true"];
6->8 [style = bold, label=""];
8->20 [style = solid, label="v"];
4->20 [style = bold, label=""];
16->13 [style = solid, label="maxConcurrency"];
21->0 [style = solid, label="bufferSize"];
3->13 [style = bold, label=""];
8->4 [style = solid, label="v"];
12->7 [style = solid, label="bufferSize"];
10->7 [style = solid, label="maxConcurrency"];
22->19 [style = solid, label="mapper"];
17->13 [style = bold, label=""];
10->13 [style = solid, label="maxConcurrency"];
8->4 [style = bold, label=""];
2->7 [style = bold, label=""];
6->7 [style = bold, label=""];
23->19 [style = solid, label="delayError"];
14->17 [style = solid, label="mapper"];
20->19 [style = bold, label=""];
24->21 [style = dotted, label="true"];
4->5 [style = bold, label=""];
24->3 [style = bold, label=""];
13->0 [style = bold, label=""];
}
