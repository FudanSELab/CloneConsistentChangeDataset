digraph {
0 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.CREATE,Jenkins.READ).withStdin(.getResourceAsStream(\"node.xml\")).invokeWithArgs(\"CustomSlaveName\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(updatedSlave.getNodeName(),equalTo(\"CustomSlaveName\"))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "createNodeSpecifyingDifferentNameExplicitly['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertThat(updatedSlave.getUserId(),equalTo(command.user().getId()))@@@10@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "createNodeSpecifyingNameExplicitly['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "final Slave updatedSlave = (Slave)j.jenkins.getNode(\"CustomSlaveName\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final Node originalSlave = j.createSlave(\"SlaveFromXml\",null,null)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Computer.CREATE,Jenkins.READ).withStdin(.getResourceAsStream(\"node.xml\")).invokeWithArgs(\"CustomSlaveName\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "createNodeSpecifyingNameExplicitly['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertThat(result,succeededSilently())@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertThat(updatedSlave.getNumExecutors(),equalTo(42))@@@9@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final Slave updatedSlave = (Slave)j.jenkins.getNode(\"CustomSlaveName\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "assertThat(\"A slave with original name should be left untouched\",j.jenkins.getNode(\"SlaveFromXml\"),equalTo(originalSlave))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5->3 [style = bold, label=""];
11->0 [style = bold, label=""];
7->1 [style = bold, label=""];
10->11 [style = bold, label=""];
2->9 [style = bold, label=""];
6->7 [style = bold, label=""];
3->0 [style = solid, label="result"];
2->9 [style = dashed, label="0"];
2->4 [style = bold, label=""];
4->6 [style = bold, label=""];
11->9 [style = solid, label="originalSlave"];
3->0 [style = bold, label=""];
9->6 [style = bold, label=""];
0->2 [style = bold, label=""];
8->3 [style = bold, label=""];
1->12 [style = bold, label=""];
0->2 [style = solid, label="result"];
}
