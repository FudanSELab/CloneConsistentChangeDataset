digraph {
5 [style = filled, label = "assertFalse(builder.internalTopologyBuilder.earliestResetTopicsPattern().matcher(topicTwo).matches())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "final Pattern topicPattern = Pattern.compile(\"topic-\d+\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(builder.internalTopologyBuilder.earliestResetTopicsPattern().matcher(topicTwo).matches())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "shouldAddRegexTopicToLatestAutoOffsetResetList['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "builder.buildAndOptimizeTopology()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "shouldAddRegexTopicToEarliestAutoOffsetResetList['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final String topicTwo = \"topic-1000000\"@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertFalse(builder.internalTopologyBuilder.latestResetTopicsPattern().matcher(topicTwo).matches())@@@8@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "builder.stream(topicPattern,new ConsumedInternal<>(Consumed.with(AutoOffsetReset.EARLIEST)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertThat(builder.internalTopologyBuilder.offsetResetStrategy(topicTwo),equalTo(OffsetResetStrategy.LATEST))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "builder.stream(topicPattern,new ConsumedInternal<>(Consumed.with(AutoOffsetReset.LATEST)))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertTrue(builder.internalTopologyBuilder.latestResetTopicsPattern().matcher(topicTwo).matches())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
4 [style = filled, label = "shouldAddRegexTopicToLatestAutoOffsetResetList['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final String topicTwo = \"topic-500000\"@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->5 [style = bold, label=""];
0->3 [style = bold, label=""];
5->12 [style = dashed, label="0"];
3->1 [style = bold, label=""];
4->6 [style = bold, label=""];
3->11 [style = bold, label=""];
8->6 [style = bold, label=""];
11->12 [style = bold, label=""];
10->6 [style = bold, label=""];
6->2 [style = bold, label=""];
6->0 [style = solid, label="topicPattern"];
2->0 [style = bold, label=""];
13->3 [style = bold, label=""];
3->7 [style = bold, label=""];
2->9 [style = dashed, label="0"];
1->11 [style = dashed, label="0"];
0->13 [style = dashed, label="0"];
6->13 [style = solid, label="topicPattern"];
6->9 [style = bold, label=""];
2->7 [style = solid, label="topicTwo"];
1->7 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
