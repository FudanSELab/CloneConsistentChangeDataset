digraph {
18 [style = filled, label = "response.addRecord(question,Section.QUESTION)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Message qparsed = new Message(qbytes)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "TSIG_response['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "i++@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "response.addRecord(answer,Section.ANSWER)@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Message query = Message.newQuery(question)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "response.addRecord(answer,Section.ANSWER)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "byte(( qbytes = query.toWire()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "int i = 0@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "TSIG key = new TSIG(TSIG.HMAC_SHA256,\"example.\",\"12345678\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "query.setTSIG(key,Rcode.NOERROR,null)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Record question = Record.newRecord(qname,Type.A,DClass.IN)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Name qname = Name.fromString(\"www.example.\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "response.setTSIG(key,Rcode.NOERROR,qparsed.getTSIG())@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Message parsed = new Message(bytes)@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(result,Rcode.NOERROR)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "TSIG_truncated['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "response.getHeader().setFlag(Flags.QR)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "byte(( bytes = response.toWire(512)@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "Record answer = Record.fromString(qname,Type.TXT,DClass.IN,300,\"foo\" + i,null)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "Message response = new Message(query.getHeader().getID())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "assertTrue(parsed.isSigned())@@@25@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertEquals(Rcode.NOERROR,result)@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "Record answer = Record.fromString(qname,Type.A,DClass.IN,300,\"1.2.3.4\",null)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i < 40@@@15@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "byte(( bytes = response.toWire(512)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "Message parsed = new Message(bytes)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertTrue(parsed.getHeader().getFlag(Flags.TC))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "int result = key.verify(parsed,bytes,qparsed.getTSIG())@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "TSIG_response['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17->10 [style = bold, label=""];
0->8 [style = solid, label="key"];
16->0 [style = bold, label=""];
28->26 [style = solid, label="i"];
10->12 [style = solid, label="result"];
26->10 [style = bold, label=""];
21->27 [style = bold, label=""];
10->24 [style = bold, label=""];
1->14 [style = solid, label="qname"];
10->19 [style = bold, label=""];
2->3 [style = bold, label=""];
11->6 [style = bold, label=""];
20->0 [style = bold, label=""];
4->15 [style = bold, label=""];
7->4 [style = solid, label="answer"];
29->0 [style = bold, label=""];
3->11 [style = bold, label=""];
23->26 [style = bold, label=""];
22->21 [style = bold, label=""];
28->24 [style = solid, label="i"];
24->26 [style = solid, label="i"];
5->18 [style = bold, label=""];
10->19 [style = solid, label="result"];
7->4 [style = bold, label=""];
9->8 [style = bold, label=""];
18->28 [style = bold, label=""];
15->10 [style = solid, label="bytes"];
14->18 [style = solid, label="question"];
12->13 [style = bold, label=""];
6->5 [style = bold, label=""];
15->17 [style = bold, label=""];
23->26 [style = dotted, label="true"];
2->3 [style = solid, label="qbytes"];
21->27 [style = solid, label="result"];
15->17 [style = solid, label="bytes"];
23->10 [style = dotted, label="true"];
19->13 [style = bold, label=""];
12->19 [style = dashed, label="0"];
8->2 [style = bold, label=""];
26->10 [style = solid, label="answer"];
10->12 [style = bold, label=""];
28->23 [style = bold, label=""];
0->1 [style = bold, label=""];
12->21 [style = solid, label="bytes"];
14->9 [style = solid, label="question"];
0->6 [style = solid, label="key"];
28->23 [style = solid, label="i"];
14->9 [style = bold, label=""];
1->14 [style = bold, label=""];
23->12 [style = bold, label=""];
13->22 [style = bold, label=""];
12->13 [style = solid, label="bytes"];
18->7 [style = bold, label=""];
27->25 [style = bold, label=""];
1->26 [style = solid, label="qname"];
1->7 [style = solid, label="qname"];
17->10 [style = solid, label="parsed"];
13->21 [style = solid, label="parsed"];
24->23 [style = solid, label="i"];
23->24 [style = dotted, label="true"];
24->23 [style = bold, label=""];
}
