digraph {
16 [style = filled, label = "assertEquals(true,workerTask.awaitStop(1000))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "EasyMock.expectLastCall()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCommit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "sourceTask.start(EMPTY_TASK_PROPS)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "sourceTask.initialize(EasyMock.anyObject())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "executor.submit(workerTask)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "EasyMock.expectLastCall()@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "assertTrue(workerTask.commitOffsets())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "createWorkerTask()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "sourceTask.stop()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "testPollsInBackground['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "awaitPolls(pollLatch)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "workerTask.stop()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "workerTask.initialize(EMPTY_TASK_PROPS)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "final CountDownLatch pollLatch = expectPolls(10)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "sourceTask.commit()@@@10@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "PowerMock.replayAll()@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "EasyMock.expectLastCall()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "expectOffsetFlush(true)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "PowerMock.verifyAll()@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "PowerMock.verifyAll()@@@18@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "expectOffsetFlush(true)@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testCommit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "final CountDownLatch pollLatch = expectPolls(1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "EasyMock.expectLastCall()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->16 [style = bold, label=""];
8->9 [style = bold, label=""];
22->0 [style = bold, label=""];
16->18 [style = bold, label=""];
12->14 [style = bold, label=""];
9->16 [style = bold, label=""];
15->4 [style = bold, label=""];
13->6 [style = bold, label=""];
6->17 [style = bold, label=""];
4->8 [style = bold, label=""];
19->0 [style = bold, label=""];
17->20 [style = bold, label=""];
13->24 [style = bold, label=""];
0->11 [style = bold, label=""];
11->2 [style = bold, label=""];
21->12 [style = bold, label=""];
5->13 [style = bold, label=""];
24->22 [style = bold, label=""];
20->19 [style = bold, label=""];
2->3 [style = bold, label=""];
14->1 [style = bold, label=""];
6->8 [style = solid, label="pollLatch"];
7->12 [style = bold, label=""];
23->12 [style = bold, label=""];
24->4 [style = solid, label="pollLatch"];
18->10 [style = bold, label=""];
6->24 [style = dashed, label="0"];
3->15 [style = bold, label=""];
17->0 [style = bold, label=""];
1->5 [style = bold, label=""];
}
