digraph {
7 [style = filled, label = "executeEtl()@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "return@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "loadStartTimestamp = System.currentTimeMillis()@@@27@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "onPendingTaskFinished['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "Database db = getDb()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "isTxnDone()@@@5@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "unprotectedLogUpdateStateInfo()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "sparkAppHandle = attachment.getHandle()@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "createLoadingTask(db,attachment)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "LOG.warn(new LogBuilder(LogKey.LOAD_JOB,id).add(\"state\",state).add(\"error_msg\",\"this task will be ignored when job is: \" + state).build())@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "onPendingTaskFinished['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "etlOutputPath = attachment.getOutputPath()@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "appId = attachment.getAppId()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "return@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "UserException e@@@22@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "return@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "BrokerPendingTaskAttachment attachment@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "finishedTaskIds.contains(attachment.getTaskId())@@@9@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "cancelJobWithoutCheck(new FailMsg(FailMsg.CancelType.ETL_RUN_FAIL,e.getMessage()),true,true)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "LOG.warn(new LogBuilder(LogKey.LOAD_JOB,id).add(\"database_id\",dbId).add(\"error_msg\",\"Failed to divide job into loading task.\").build(),e)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "sparkLoadAppHandle = attachment.getHandle()@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "finishedTaskIds.add(attachment.getTaskId())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SparkPendingTaskAttachment attachment@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "writeLock()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "onPendingTaskFinished['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "LOG.warn(new LogBuilder(LogKey.LOAD_JOB,id).add(\"task_id\",attachment.getTaskId()).add(\"error_msg\",\"this is a duplicated callback of pending task \" + \"when broker already has loading task\").build())@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "{writeUnlock()}@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->9 [style = bold, label=""];
8->10 [style = bold, label=""];
10->6 [style = dotted, label="true"];
10->12 [style = dotted, label="true"];
17->0 [style = dotted, label="true"];
2->0 [style = dotted, label="true"];
16->11 [style = bold, label=""];
15->16 [style = dashed, label="0"];
20->24 [style = dotted, label="true"];
20->26 [style = bold, label=""];
1->15 [style = bold, label=""];
0->23 [style = dashed, label="0"];
20->26 [style = dotted, label="true"];
18->19 [style = bold, label=""];
25->4 [style = bold, label=""];
21->24 [style = bold, label=""];
20->21 [style = dotted, label="true"];
9->10 [style = bold, label=""];
23->19 [style = solid, label="attachment"];
18->19 [style = solid, label="db"];
12->1 [style = bold, label=""];
2->4 [style = bold, label=""];
24->22 [style = bold, label=""];
10->6 [style = bold, label=""];
1->13 [style = bold, label=""];
26->21 [style = bold, label=""];
7->14 [style = bold, label=""];
9->8 [style = dotted, label="true"];
11->5 [style = bold, label=""];
15->11 [style = bold, label=""];
1->16 [style = bold, label=""];
3->8 [style = bold, label=""];
9->3 [style = bold, label=""];
5->7 [style = bold, label=""];
25->23 [style = dotted, label="true"];
14->13 [style = bold, label=""];
9->3 [style = dotted, label="true"];
10->1 [style = bold, label=""];
19->22 [style = bold, label=""];
17->4 [style = bold, label=""];
13->18 [style = bold, label=""];
6->12 [style = bold, label=""];
}
