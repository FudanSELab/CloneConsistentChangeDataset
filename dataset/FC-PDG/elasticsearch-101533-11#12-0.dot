digraph {
12 [style = filled, label = "fieldNames.add(property.name().toLowerCase(Locale.ROOT))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Set<GeoIpProcessor.Property> properties = EnumSet.noneOf()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "properties.add(property)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "testBuildFields['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(localDatabases)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "assertThat(processor.getProperties(),equalTo(properties))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertFalse(processor.isIgnoreMissing())@@@19@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "i++@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "properties.add(property)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int counter = 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testBuildFields['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "GeoIpProcessor.Factory factory = new GeoIpProcessor.Factory(databaseRegistry)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
25 [style = filled, label = "testBuildFields['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "int numFields = scaledRandomIntBetween(1,AttachmentProcessor.Property.values().length)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Map<String,Object> config = new HashMap<>()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "fieldNames.add(property.name().toLowerCase(Locale.ROOT))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < numFields@@@7@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "Set<AttachmentProcessor.Property> properties = EnumSet.noneOf()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "config.put(\"field\",\"_field\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "AttachmentProcessor.Property property = AttachmentProcessor.Property.values()(i(@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "int i = 0@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "config.put(\"field\",\"_field\")@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "config.put(\"properties\",fieldNames)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "AttachmentProcessor processor = factory.create(null,null,null,config)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(processor.getProperties(),equalTo(properties))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "int numFields = scaledRandomIntBetween(1,GeoIpProcessor.Property.values().length)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(processor.getField(),equalTo(\"_field\"))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "List<String> fieldNames = new ArrayList<>()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7->13 [style = bold, label=""];
5->8 [style = bold, label=""];
8->10 [style = bold, label=""];
13->7 [style = dashed, label="0"];
23->24 [style = solid, label="i"];
24->14 [style = dotted, label="true"];
17->1 [style = bold, label=""];
4->10 [style = solid, label="config"];
7->8 [style = solid, label="fieldNames"];
27->22 [style = solid, label="i"];
3->11 [style = bold, label=""];
22->21 [style = bold, label=""];
7->24 [style = solid, label="numFields"];
23->22 [style = solid, label="i"];
9->20 [style = bold, label=""];
11->12 [style = bold, label=""];
16->17 [style = bold, label=""];
19->10 [style = solid, label="fieldNames"];
26->19 [style = bold, label=""];
24->22 [style = bold, label=""];
0->17 [style = dashed, label="0"];
1->7 [style = bold, label=""];
15->18 [style = bold, label=""];
22->21 [style = solid, label="property"];
6->15 [style = bold, label=""];
9->6 [style = bold, label=""];
10->9 [style = dashed, label="0"];
26->15 [style = solid, label="properties"];
23->24 [style = bold, label=""];
2->0 [style = bold, label=""];
24->4 [style = bold, label=""];
1->6 [style = solid, label="properties"];
27->23 [style = solid, label="i"];
24->23 [style = dotted, label="true"];
13->3 [style = bold, label=""];
14->23 [style = bold, label=""];
0->1 [style = bold, label=""];
24->22 [style = dotted, label="true"];
3->14 [style = solid, label="numFields"];
25->26 [style = bold, label=""];
12->14 [style = bold, label=""];
21->14 [style = bold, label=""];
7->27 [style = bold, label=""];
4->8 [style = bold, label=""];
27->24 [style = solid, label="i"];
27->24 [style = bold, label=""];
10->9 [style = bold, label=""];
24->21 [style = dotted, label="true"];
20->15 [style = bold, label=""];
14->11 [style = bold, label=""];
4->5 [style = bold, label=""];
19->7 [style = bold, label=""];
14->4 [style = bold, label=""];
4->9 [style = solid, label="config"];
}
