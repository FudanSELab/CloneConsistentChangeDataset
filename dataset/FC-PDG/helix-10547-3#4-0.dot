digraph {
13 [style = filled, label = "String workflowName = TestHelper.getTestMethodName()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "testDropCurrentStateRunningTask['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
38 [style = filled, label = "String currentStatePathP0 = _manager.getHelixDataAccessor().keyBuilder().taskCurrentState(instanceP0,sessionIdP0,namespacedJobName).toString()@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "record.setSimpleField(CurrentState.CurrentStateProperty.SESSION_ID.name(),sessionIdP0)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "_driver.start(workflowBuilder1.build())@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String namespacedJobName = TaskUtil.getNamespacedJobName(workflowName,jobName)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String partitionName = namespacedJobName + \"_0\"@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "String currentStatePathP1 = _manager.getHelixDataAccessor().keyBuilder().taskCurrentState(instanceP1,sessionIdP1,namespacedJobName).toString()@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "_driver.stop(workflowName)@@@37@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "_driver.deleteTask(workflowName,jobName,dummyID)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "record.setSimpleField(CurrentState.CurrentStateProperty.SESSION_ID.name(),sessionIdP1)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "_manager.getHelixDataAccessor().getBaseDataAccessor().set(currentStatePathP0,record,AccessOption.PERSISTENT)@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "IllegalArgumentException e@@@14@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,String> newCurrentState = new HashMap<>()@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "String currentStatePathP1 = \"/\" + CLUSTER_NAME + \"/INSTANCES/\" + instanceP1 + \"/CURRENTSTATES/\" + sessionIdP1 + \"/\" + namespacedJobName@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "String sessionIdP1 = ZkTestHelper.getSessionId(clientP1)@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "testDropCurrentStateRunningTask['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "testDeleteNonExistedTask['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ZkClient clientP1 = (ZkClient)_participants(1(.getZkClient()@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "_driver.waitToStop(workflowName,TestHelper.WAIT_DURATION)@@@16@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "String currentStatePathP2 = _manager.getHelixDataAccessor().keyBuilder().taskCurrentState(instanceP2,sessionIdP2,namespacedJobName).toString()@@@16@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "startParticipant(0)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Workflow.Builder workflowBuilder1 = new Workflow.Builder(workflowName).addJob(jobName,jobBuilder1)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "String instanceP1 = PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "String instanceP2 = PARTICIPANT_PREFIX + \"_\" + (_startPort + 2)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "startParticipant(1)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "String currentStatePathP0 = \"/\" + CLUSTER_NAME + \"/INSTANCES/\" + instanceP0 + \"/CURRENTSTATES/\" + sessionIdP0 + \"/\" + namespacedJobName@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Assert.assertTrue(TestHelper.verify(null,TestHelper.WAIT_DURATION))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "ZNRecord record = _manager.getHelixDataAccessor().getBaseDataAccessor().get(currentStatePathP2,new Stat(),AccessOption.PERSISTENT)@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "String dummyID = \"1234\"@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "String jobName = \"JOB0\"@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "Assert.assertTrue(TestHelper.verify(null,TestHelper.WAIT_DURATION))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "String currentStatePathP2 = \"/\" + CLUSTER_NAME + \"/INSTANCES/\" + instanceP2 + \"/CURRENTSTATES/\" + sessionIdP2 + \"/\" + namespacedJobName@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "newCurrentState.put(CurrentState.CurrentStateProperty.REQUESTED_STATE.name(),TaskPartitionState.DROPPED.name())@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String instanceP0 = PARTICIPANT_PREFIX + \"_\" + (_startPort + 0)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "_manager.getHelixDataAccessor().getBaseDataAccessor().set(currentStatePathP1,record,AccessOption.PERSISTENT)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String sessionIdP0 = ZkTestHelper.getSessionId(clientP0)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "JobConfig.Builder jobBuilder1 = new JobConfig.Builder().setWorkflow(workflowName).setNumberOfTasks(1).setNumConcurrentTasksPerInstance(100).setCommand(MockTask.TASK_COMMAND).setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"99999999\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "_driver.pollForJobState(workflowName,TaskUtil.getNamespacedJobName(workflowName,jobName),TaskState.IN_PROGRESS)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "JobConfig.Builder jobBuilder1 = new JobConfig.Builder().setWorkflow(workflowName).setNumberOfTasks(1).setNumConcurrentTasksPerInstance(100).setCommand(MockTask.TASK_COMMAND).setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"9999999\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "newCurrentState.put(CurrentState.CurrentStateProperty.CURRENT_STATE.name(),TaskPartitionState.RUNNING.name())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "String sessionIdP2 = ZkTestHelper.getSessionId(clientP2)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "{}@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "ZkClient clientP2 = (ZkClient)_participants(2(.getZkClient()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assert.assertTrue(TestHelper.verify(null,TestHelper.WAIT_DURATION))@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "ZkClient clientP0 = (ZkClient)_participants(0(.getZkClient()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "Assert.fail(\"Exception is expected because a task with such ID does not exists!\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "record.setMapField(partitionName,newCurrentState)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37->28 [style = bold, label=""];
32->19 [style = solid, label="jobBuilder1"];
25->14 [style = bold, label=""];
10->6 [style = solid, label="newCurrentState"];
39->28 [style = solid, label="currentStatePathP2"];
27->15 [style = bold, label=""];
43->40 [style = bold, label=""];
34->9 [style = solid, label="namespacedJobName"];
38->30 [style = bold, label=""];
10->8 [style = bold, label=""];
12->18 [style = bold, label=""];
37->27 [style = solid, label="currentStatePathP1"];
35->38 [style = bold, label=""];
13->40 [style = solid, label="workflowName"];
22->5 [style = solid, label="sessionIdP2"];
16->17 [style = solid, label="clientP1"];
26->46 [style = bold, label=""];
24->28 [style = bold, label=""];
13->47 [style = solid, label="workflowName"];
41->47 [style = solid, label="dummyID"];
26->32 [style = bold, label=""];
21->0 [style = bold, label=""];
34->4 [style = solid, label="namespacedJobName"];
3->5 [style = solid, label="instanceP2"];
17->24 [style = solid, label="sessionIdP1"];
47->43 [style = bold, label=""];
5->39 [style = dashed, label="0"];
16->17 [style = bold, label=""];
17->37 [style = bold, label=""];
22->5 [style = bold, label=""];
42->40 [style = bold, label=""];
5->25 [style = bold, label=""];
28->1 [style = solid, label="record"];
0->34 [style = bold, label=""];
29->27 [style = bold, label=""];
7->22 [style = solid, label="clientP2"];
28->27 [style = solid, label="record"];
3->7 [style = bold, label=""];
34->24 [style = solid, label="namespacedJobName"];
33->35 [style = solid, label="clientP0"];
26->19 [style = solid, label="jobName"];
13->0 [style = solid, label="workflowName"];
46->19 [style = bold, label=""];
26->0 [style = solid, label="jobName"];
39->25 [style = bold, label=""];
31->3 [style = bold, label=""];
32->46 [style = dashed, label="0"];
4->10 [style = bold, label=""];
44->42 [style = bold, label=""];
20->13 [style = bold, label=""];
5->28 [style = solid, label="currentStatePathP2"];
35->9 [style = solid, label="sessionIdP0"];
35->9 [style = bold, label=""];
35->18 [style = solid, label="sessionIdP0"];
13->34 [style = solid, label="workflowName"];
14->9 [style = solid, label="instanceP0"];
32->19 [style = bold, label=""];
26->47 [style = solid, label="jobName"];
0->41 [style = bold, label=""];
11->31 [style = bold, label=""];
7->22 [style = bold, label=""];
6->1 [style = bold, label=""];
24->37 [style = dashed, label="0"];
36->13 [style = bold, label=""];
18->6 [style = bold, label=""];
13->26 [style = bold, label=""];
13->2 [style = solid, label="workflowName"];
22->39 [style = bold, label=""];
34->23 [style = bold, label=""];
41->47 [style = bold, label=""];
23->11 [style = bold, label=""];
1->29 [style = bold, label=""];
8->12 [style = bold, label=""];
9->38 [style = dashed, label="0"];
19->21 [style = bold, label=""];
33->35 [style = bold, label=""];
15->2 [style = bold, label=""];
30->24 [style = solid, label="instanceP1"];
46->19 [style = solid, label="jobBuilder1"];
9->30 [style = bold, label=""];
45->13 [style = bold, label=""];
4->6 [style = solid, label="partitionName"];
14->33 [style = bold, label=""];
9->1 [style = solid, label="currentStatePathP0"];
38->1 [style = solid, label="currentStatePathP0"];
24->27 [style = solid, label="currentStatePathP1"];
17->24 [style = bold, label=""];
34->5 [style = solid, label="namespacedJobName"];
17->29 [style = solid, label="sessionIdP1"];
26->34 [style = solid, label="jobName"];
30->16 [style = bold, label=""];
28->4 [style = bold, label=""];
}
