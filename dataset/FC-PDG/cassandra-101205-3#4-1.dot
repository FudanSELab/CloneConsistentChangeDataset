digraph {
2 [style = filled, label = "i < updates@@@7@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "i++@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "Assert.assertEquals(10,rate.get(TimeUnit.SECONDS),0.0)@@@12@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TestTimeSource time = new TestTimeSource()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "int updates = 100@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "rate.update(1)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testUpdateAndGetToPointInTime['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Assert.assertEquals(10,rate.get(1,TimeUnit.SECONDS),0.0)@@@14@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "Assert.assertEquals(5,rate.get(TimeUnit.SECONDS),0.0)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "time.sleep(100,TimeUnit.MILLISECONDS)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "time.sleep(1,TimeUnit.SECONDS)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "testUpdateAndGetBetweenWindows['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SlidingTimeRate rate = new SlidingTimeRate(time,5,1,TimeUnit.SECONDS)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "int updates = 10@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testUpdateAndGetBetweenWindows['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "int i = 0@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
3->2 [style = solid, label="i"];
8->2 [style = solid, label="updates"];
9->4 [style = bold, label=""];
11->6 [style = bold, label=""];
8->3 [style = bold, label=""];
3->1 [style = solid, label="i"];
2->9 [style = bold, label=""];
7->8 [style = bold, label=""];
10->6 [style = bold, label=""];
8->13 [style = dashed, label="0"];
0->14 [style = dashed, label="0"];
6->7 [style = solid, label="time"];
2->0 [style = bold, label=""];
2->9 [style = dotted, label="true"];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
13->3 [style = bold, label=""];
2->1 [style = dotted, label="true"];
2->14 [style = bold, label=""];
1->2 [style = solid, label="i"];
2->4 [style = dotted, label="true"];
14->15 [style = bold, label=""];
1->2 [style = bold, label=""];
4->1 [style = bold, label=""];
15->12 [style = bold, label=""];
6->7 [style = bold, label=""];
13->2 [style = solid, label="updates"];
}
