digraph {
1 [style = filled, label = "testNormalFollowerRun['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testFollowerConversation(new FollowerConversation(){@Override public void converseWithFollower(InputArchive ia,OutputArchive oa,Follower f){File tmpDir = File.createTempFile(\"test\",\"dir\",testData)tmpDir.delete()tmpDir.mkdir()File logDir = f.fzk.getTxnLogFactory().getDataDir().getParentFile()File snapDir = f.fzk.getTxnLogFactory().getSnapDir().getParentFile()f.zk = spy(f.zk)try {Assert.assertEquals(0,f.self.getAcceptedEpoch())Assert.assertEquals(0,f.self.getCurrentEpoch())ZKDatabase zkDb = new ZKDatabase(new FileTxnSnapLog(tmpDir,tmpDir))final long firstZxid = ZxidUtils.makeZxid(1,1)zkDb.processTxn(new TxnHeader(13,1313,firstZxid,33,ZooDefs.OpCode.create),new CreateTxn(\"/foo\",\"data1\".getBytes(),ZooDefs.Ids.OPEN_ACL_UNSAFE,false,1))Stat stat = new Stat()Assert.assertEquals(\"data1\",new String(zkDb.getData(\"/foo\",stat,null)))QuorumPacket qp = new QuorumPacket()readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.FOLLOWERINFO,qp.getType())Assert.assertEquals(qp.getZxid(),0)LearnerInfo learnInfo = new LearnerInfo()ByteBufferInputStream.byteBuffer2Record(ByteBuffer.wrap(qp.getData()),learnInfo)Assert.assertEquals(learnInfo.getProtocolVersion(),0x10000)Assert.assertEquals(learnInfo.getServerid(),0)qp.setType(Leader.LEADERINFO)qp.setZxid(ZxidUtils.makeZxid(1,0))byte protoBytes = new byte((((ByteBuffer.wrap(protoBytes).putInt(0x10000)qp.setData(protoBytes)oa.writeRecord(qp,null)readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.ACKEPOCH,qp.getType())Assert.assertEquals(0,qp.getZxid())Assert.assertEquals(ZxidUtils.makeZxid(0,0),ByteBuffer.wrap(qp.getData()).getInt())Assert.assertEquals(1,f.self.getAcceptedEpoch())Assert.assertEquals(0,f.self.getCurrentEpoch())qp.setType(Leader.DIFF)qp.setData(new byte(((()qp.setZxid(zkDb.getDataTreeLastProcessedZxid())oa.writeRecord(qp,null)final long createSessionZxid = ZxidUtils.makeZxid(1,2)proposeNewSession(qp,createSessionZxid,0x333)oa.writeRecord(qp,null)qp.setType(Leader.COMMIT)qp.setZxid(createSessionZxid)oa.writeRecord(qp,null)qp.setType(Leader.NEWLEADER)qp.setZxid(ZxidUtils.makeZxid(1,0))qp.setData(null)oa.writeRecord(qp,null)qp.setType(Leader.UPTODATE)qp.setZxid(0)oa.writeRecord(qp,null)readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.ACK,qp.getType())Assert.assertEquals(ZxidUtils.makeZxid(1,0),qp.getZxid())readPacketSkippingPing(ia,qp)Assert.assertEquals(Leader.ACK,qp.getType())Assert.assertEquals(ZxidUtils.makeZxid(1,0),qp.getZxid())Assert.assertEquals(1,f.self.getAcceptedEpoch())Assert.assertEquals(1,f.self.getCurrentEpoch())long start = System.currentTimeMillis()while (createSessionZxid != f.fzk.getLastProcessedZxid() && (System.currentTimeMillis() - start) < 50) {Thread.sleep(1)}Assert.assertEquals(createSessionZxid,f.fzk.getLastProcessedZxid())ZKDatabase zkDb2 = new ZKDatabase(new FileTxnSnapLog(logDir,snapDir))start = System.currentTimeMillis()zkDb2.loadDataBase()while (zkDb2.getSessionWithTimeOuts().isEmpty() && (System.currentTimeMillis() - start) < 50) {Thread.sleep(1)zkDb2.loadDataBase()}LOG.info(\"zkdb2 sessions:\" + zkDb2.getSessions())LOG.info(\"zkdb2 with timeouts:\" + zkDb2.getSessionWithTimeOuts())Assert.assertNotNull(zkDb2.getSessionWithTimeOuts().get(4L))verify(f.zk,never()).takeSnapshot()}{TestUtils.deleteFileRecursively(tmpDir)}}private void proposeNewSession(QuorumPacket qp,long zxid,long sessionId){qp.setType(Leader.PROPOSAL)qp.setZxid(zxid)TxnHeader hdr = new TxnHeader(4,1414,qp.getZxid(),55,ZooDefs.OpCode.createSession)CreateSessionTxn cst = new CreateSessionTxn(30000)ByteArrayOutputStream baos = new ByteArrayOutputStream()OutputArchive boa = BinaryOutputArchive.getArchive(baos)boa.writeRecord(hdr,null)boa.writeRecord(cst,null)qp.setData(baos.toByteArray())}})@@@3@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testNormalFollowerRun['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "testNormalFollowerRunWithDiff['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
2->0 [style = bold, label=""];
3->0 [style = bold, label=""];
1->0 [style = bold, label=""];
}
