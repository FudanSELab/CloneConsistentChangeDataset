digraph {
43 [style = filled, label = "assertEquals(0,duh2.commitCommands.getCount())@@@15@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
31 [style = filled, label = "assertEquals(0,duh2.addCommands.longValue())@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "CommitUpdateCommand cmtCmd = new CommitUpdateCommand(ureq,false)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "updater.rollback(rbkCmd)@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertEquals(2,duh2.addCommands.longValue())@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "cmtCmd.waitSearcher = true@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(0,duh2.commitCommands.longValue())@@@16@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ureq = req()@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq)@@@30@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SolrCore core = h.getCore()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertU(adoc(\"id\",\"B\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "ureq.close()@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.longValue())@@@18@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
10 [style = filled, label = "assertQ(\"\"B\" should not be found.\",req,\"//*(@numFound='1'(\",\"//result/doc(1(/str(@name='id'((.='A'(\")@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.longValue())@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
41 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.getCount())@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
29 [style = filled, label = "RollbackUpdateCommand rbkCmd = new RollbackUpdateCommand(ureq)@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertU(commit())@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.getCount())@@@18@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "assertEquals(0,duh2.rollbackCommands.longValue())@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "testAddRollback['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
32 [style = filled, label = "assertU(commit())@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "updater.rollback(rbkCmd)@@@34@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "args.put(CommonParams.Q,\"id:A OR id:B\")@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "ureq = req()@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "UpdateHandler updater = core.getUpdateHandler()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertU(delI(\"B\"))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.longValue())@@@14@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "assertEquals(1,duh2.commitCommands.longValue())@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "assertU(adoc(\"id\",\"B\"))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "assertQ(\"\"ZZZ\" must be found.\",req(\"q\",\"id:ZZZ\"),\"//*(@numFound='1'(\",\"//result/doc(1(/str(@name='id'((.='ZZZ'(\")@@@39@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "args.put(\"indent\",\"true\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Map<String,String> args = new HashMap<>()@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "DirectUpdateHandler2 duh2 = (DirectUpdateHandler2)updater@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ureq.close()@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertEquals(1,duh2.commitCommands.getCount())@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
12 [style = filled, label = "ureq.close()@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "assertU(adoc(\"id\",\"ZZZ\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "assertEquals(1,duh2.deleteByIdCommandsCumulative.longValue())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "assertQ(\"\"A\" and \"B\" should be found.\",req,\"//*(@numFound='2'(\",\"//result/doc(1(/str(@name='id'((.='A'(\",\"//result/doc(2(/str(@name='id'((.='B'(\")@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertEquals(0,duh2.deleteByIdCommandsCumulative.longValue())@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SolrQueryRequest req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(1,duh2.rollbackCommands.getCount())@@@30@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
40 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.getCount())@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "assertEquals(1,duh2.addCommandsCumulative.getCount())@@@29@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
57 [style = filled, label = "assertEquals(0,duh2.deleteByIdCommands.longValue())@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertEquals(1,duh2.addCommands.longValue())@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "SolrQueryRequest ureq = req()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "testDeleteRollback['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "SolrQueryRequest req = new LocalSolrQueryRequest(core,new MapSolrParams(args))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "assertQ(\"\"A\" and \"B\" should be found.\",req,\"//*(@numFound='2'(\",\"//result/doc(1(/str(@name='id'((.='A'(\",\"//result/doc(2(/str(@name='id'((.='B'(\")@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertEquals(0,duh2.rollbackCommands.getCount())@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
53 [style = filled, label = "assertQ(\"\"B\" should be found.\",req,\"//*(@numFound='2'(\",\"//result/doc(1(/str(@name='id'((.='A'(\",\"//result/doc(2(/str(@name='id'((.='B'(\")@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertU(adoc(\"id\",\"A\"))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(updater instanceof DirectUpdateHandler2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "assertQ(\"\"ZZZ\" must be found.\",req(\"q\",\"id:ZZZ\"),\"//*(@numFound='1'(\",\"//result/doc(1(/str(@name='id'((.='ZZZ'(\")@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertEquals(1,duh2.addCommands.longValue())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertEquals(1,duh2.rollbackCommands.longValue())@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
24 [style = filled, label = "assertEquals(0,duh2.rollbackCommands.longValue())@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "args.put(\"indent\",\"true\")@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "testAddRollback['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "assertEquals(1,duh2.rollbackCommands.longValue())@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
65 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.longValue())@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertEquals(1,duh2.deleteByIdCommands.longValue())@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertEquals(2,duh2.addCommandsCumulative.longValue())@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "updater.commit(cmtCmd)@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "deleteCore()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "initCore(\"solrconfig.xml\",\"schema12.xml\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->51 [style = bold, label=""];
29->15 [style = bold, label=""];
58->50 [style = bold, label=""];
13->47 [style = bold, label=""];
1->0 [style = solid, label="cmtCmd"];
29->8 [style = solid, label="rbkCmd"];
6->51 [style = dashed, label="0"];
50->54 [style = solid, label="req"];
11->36 [style = bold, label=""];
21->28 [style = bold, label=""];
19->5 [style = bold, label=""];
28->0 [style = bold, label=""];
7->4 [style = solid, label="core"];
13->45 [style = dashed, label="0"];
20->38 [style = dashed, label="0"];
33->18 [style = bold, label=""];
62->50 [style = solid, label="args"];
6->41 [style = bold, label=""];
18->32 [style = bold, label=""];
39->38 [style = bold, label=""];
43->0 [style = bold, label=""];
49->63 [style = bold, label=""];
50->54 [style = bold, label=""];
9->29 [style = bold, label=""];
56->53 [style = bold, label=""];
26->64 [style = bold, label=""];
35->12 [style = bold, label=""];
5->37 [style = bold, label=""];
21->65 [style = dashed, label="0"];
25->62 [style = bold, label=""];
54->49 [style = bold, label=""];
26->7 [style = bold, label=""];
16->6 [style = bold, label=""];
53->52 [style = bold, label=""];
50->63 [style = solid, label="req"];
30->26 [style = bold, label=""];
46->36 [style = bold, label=""];
2->9 [style = bold, label=""];
20->25 [style = bold, label=""];
44->12 [style = bold, label=""];
25->2 [style = bold, label=""];
50->3 [style = solid, label="req"];
36->30 [style = bold, label=""];
31->27 [style = bold, label=""];
28->43 [style = dashed, label="0"];
1->16 [style = bold, label=""];
22->17 [style = bold, label=""];
38->25 [style = bold, label=""];
62->48 [style = bold, label=""];
19->5 [style = solid, label="updater"];
41->43 [style = bold, label=""];
27->20 [style = bold, label=""];
3->13 [style = solid, label="ureq"];
27->55 [style = dashed, label="0"];
0->31 [style = bold, label=""];
17->8 [style = bold, label=""];
4->10 [style = bold, label=""];
10->18 [style = bold, label=""];
48->58 [style = bold, label=""];
52->61 [style = bold, label=""];
6->21 [style = bold, label=""];
57->66 [style = bold, label=""];
3->45 [style = bold, label=""];
42->8 [style = bold, label=""];
8->3 [style = bold, label=""];
32->14 [style = bold, label=""];
12->24 [style = bold, label=""];
17->42 [style = dashed, label="0"];
45->44 [style = bold, label=""];
47->59 [style = bold, label=""];
22->59 [style = dashed, label="0"];
15->22 [style = bold, label=""];
24->33 [style = bold, label=""];
65->28 [style = bold, label=""];
27->39 [style = dashed, label="0"];
18->57 [style = bold, label=""];
9->29 [style = solid, label="ureq"];
7->50 [style = solid, label="core"];
51->65 [style = bold, label=""];
4->10 [style = solid, label="req"];
4->14 [style = solid, label="req"];
15->40 [style = bold, label=""];
50->60 [style = solid, label="req"];
31->39 [style = bold, label=""];
7->19 [style = bold, label=""];
63->3 [style = bold, label=""];
13->33 [style = solid, label="rbkCmd"];
19->37 [style = solid, label="updater"];
61->60 [style = bold, label=""];
55->20 [style = bold, label=""];
22->40 [style = dashed, label="0"];
50->53 [style = solid, label="req"];
15->47 [style = dashed, label="0"];
37->23 [style = bold, label=""];
35->44 [style = dashed, label="0"];
64->7 [style = bold, label=""];
21->41 [style = dashed, label="0"];
31->55 [style = bold, label=""];
24->4 [style = solid, label="args"];
23->1 [style = bold, label=""];
3->13 [style = bold, label=""];
34->4 [style = bold, label=""];
59->24 [style = bold, label=""];
23->1 [style = solid, label="ureq"];
67->36 [style = bold, label=""];
13->35 [style = bold, label=""];
33->34 [style = bold, label=""];
40->42 [style = bold, label=""];
66->56 [style = bold, label=""];
}
