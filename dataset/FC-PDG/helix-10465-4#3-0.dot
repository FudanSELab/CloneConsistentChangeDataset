digraph {
20 [style = filled, label = "JobConfig.Builder jobBuilder0 = new JobConfig.Builder().setWorkflow(jobQueueName).setTargetResource(DATABASE).setTargetPartitionStates(Sets.newHashSet(MasterSlaveSMD.States.MASTER.name())).setCommand(MockTask.TASK_COMMAND).setJobCommandConfigMap(ImmutableMap.of(MockTask.JOB_DELAY,\"10000\"))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "_gSetupTool.getClusterManagementTool().updateIdealState(CLUSTER_NAME,DATABASE,idealState)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "String instanceP1 = PARTICIPANT_PREFIX + \"_\" + (_startPort + 1)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String currentStatePathP1 = \"/\" + CLUSTER_NAME + \"/INSTANCES/\" + instanceP1 + \"/CURRENTSTATES/\" + sessionIdP1 + \"/\" + namespacedJobName@@@49@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
22 [style = filled, label = "ZkClient clientP1 = (ZkClient)_participants(1(.getZkClient()@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "String currentStatePathP1 = _manager.getHelixDataAccessor().keyBuilder().taskCurrentState(instanceP1,sessionIdP1,namespacedJobName).toString()@@@49@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "Assert.assertTrue(isCurrentStateCreated)@@@62@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "_gSetupTool.rebalanceResource(CLUSTER_NAME,DATABASE,3)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "String jobQueueName = TestHelper.getTestMethodName()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "String instance = _assignmentList.get(0)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "List<String> _assignmentList@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "String currentStatePathP0 = \"/\" + CLUSTER_NAME + \"/INSTANCES/\" + instanceP0 + \"/CURRENTSTATES/\" + sessionIdP0 + \"/\" + namespacedJobName@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "String namespacedJobName = TaskUtil.getNamespacedJobName(jobQueueName,\"JOB0\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "_gSetupTool.addResourceToCluster(CLUSTER_NAME,DATABASE,_numPartitions,MASTER_SLAVE_STATE_MODEL,IdealState.RebalanceMode.SEMI_AUTO.name())@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testTargetedTaskTwoCurrentStates['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "jobQueue.enqueueJob(\"JOB0\",jobBuilder0)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "boolean isTaskAssignedToMasterNode = TestHelper.verify(null,TestHelper.WAIT_DURATION)@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<String> preferenceList = new ArrayList<>()@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "String instanceP0 = PARTICIPANT_PREFIX + \"_\" + (_startPort + 0)@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "verifyMastership['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "_driver.pollForJobState(jobQueueName,namespacedJobName,TaskState.COMPLETED)@@@63@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "Assert.assertEquals(CANCEL_COUNT.get(),0)@@@64@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "JobQueue.Builder jobQueue = TaskTestUtil.buildJobQueue(jobQueueName)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "boolean isCurrentStateCreated = TestHelper.verify(null,TestHelper.WAIT_DURATION)@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Assert.assertTrue(isMasterSwitchedToCorrectInstance)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "preferenceList.add(PARTICIPANT_PREFIX + \"_\" + (_startPort + 1))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "boolean isMasterSwitchedToCorrectInstance = TestHelper.verify(null,TestHelper.WAIT_DURATION)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "_driver.start(jobQueue.build())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "idealState.setPreferenceList(DATABASE + \"_0\",preferenceList)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "String currentStatePathP0 = _manager.getHelixDataAccessor().keyBuilder().taskCurrentState(instanceP0,sessionIdP0,namespacedJobName).toString()@@@45@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "_driver.pollForJobState(jobQueueName,namespacedJobName,TaskState.IN_PROGRESS)@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ZkClient clientP0 = (ZkClient)_participants(0(.getZkClient()@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "String sessionIdP1 = ZkTestHelper.getSessionId(clientP1)@@@48@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "String sessionIdP0 = ZkTestHelper.getSessionId(clientP0)@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "IdealState idealState = new IdealState(DATABASE)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "preferenceList.add(PARTICIPANT_PREFIX + \"_\" + (_startPort + 0))@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "preferenceList.add(PARTICIPANT_PREFIX + \"_\" + (_startPort + 2))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Assert.assertTrue(isTaskAssignedToMasterNode)@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "testTargetedTaskTwoCurrentStates['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assert.assertTrue(isMasterSwitchedToCorrectInstance)@@@16@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11->20 [style = bold, label=""];
23->25 [style = bold, label=""];
13->32 [style = solid, label="isMasterSwitchedToCorrectInstance"];
7->29 [style = solid, label="sessionIdP1"];
13->32 [style = bold, label=""];
6->26 [style = bold, label=""];
0->13 [style = bold, label=""];
3->1 [style = bold, label=""];
8->31 [style = bold, label=""];
37->36 [style = bold, label=""];
24->15 [style = bold, label=""];
21->18 [style = solid, label="sessionIdP0"];
39->13 [style = bold, label=""];
14->18 [style = solid, label="instanceP0"];
10->19 [style = bold, label=""];
3->15 [style = solid, label="preferenceList"];
21->34 [style = bold, label=""];
7->35 [style = bold, label=""];
11->26 [style = solid, label="jobQueueName"];
4->16 [style = solid, label="isTaskAssignedToMasterNode"];
24->17 [style = solid, label="idealState"];
6->26 [style = solid, label="namespacedJobName"];
22->7 [style = solid, label="clientP1"];
6->19 [style = solid, label="namespacedJobName"];
11->6 [style = solid, label="jobQueueName"];
26->4 [style = bold, label=""];
18->28 [style = bold, label=""];
21->18 [style = bold, label=""];
22->7 [style = bold, label=""];
1->23 [style = bold, label=""];
36->39 [style = bold, label=""];
9->6 [style = bold, label=""];
5->21 [style = solid, label="clientP0"];
20->2 [style = bold, label=""];
12->10 [style = solid, label="isCurrentStateCreated"];
5->21 [style = bold, label=""];
32->9 [style = bold, label=""];
25->24 [style = bold, label=""];
34->28 [style = bold, label=""];
15->17 [style = bold, label=""];
6->29 [style = solid, label="namespacedJobName"];
2->0 [style = bold, label=""];
29->12 [style = bold, label=""];
12->10 [style = bold, label=""];
37->38 [style = dotted, label="true"];
30->3 [style = bold, label=""];
18->34 [style = dashed, label="0"];
20->0 [style = solid, label="jobBuilder0"];
19->27 [style = bold, label=""];
39->13 [style = solid, label="isMasterSwitchedToCorrectInstance"];
7->29 [style = bold, label=""];
31->30 [style = bold, label=""];
28->29 [style = solid, label="instanceP1"];
33->31 [style = bold, label=""];
16->14 [style = bold, label=""];
6->18 [style = solid, label="namespacedJobName"];
35->12 [style = bold, label=""];
11->2 [style = solid, label="jobQueueName"];
11->19 [style = solid, label="jobQueueName"];
28->22 [style = bold, label=""];
4->16 [style = bold, label=""];
29->35 [style = dashed, label="0"];
14->5 [style = bold, label=""];
17->11 [style = bold, label=""];
}
