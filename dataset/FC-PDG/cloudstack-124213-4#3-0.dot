digraph {
9 [style = filled, label = "LOGGER.warn(msg)@@@51@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts found in datacenter ID: %s, creating deployment destination\",zone.getUuid()))@@@46@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "hostDao.loadHostTags(h)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "final Map<String,Pair<HostVO,Integer>> hosts_with_resevered_capacity = new ConcurrentHashMap<String,Pair<HostVO,Integer>>()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "List<HostVO> hosts = resourceManager.listAllHostsInOneZoneByType(Host.Type.Routing,zone.getId())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "return new DeployDestination(zone,null,planCluster,null)@@@54@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@16@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter ID: %s for node %d with offering ID: %s\",zone.getUuid(),i,offering.getUuid()))@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%1$s memory=%2$s)\",cpu_requested * nodesCount,ram_requested * nodesCount)@@@50@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "suitable_host_found@@@44@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "int reserved = hp.second()@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@15@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "i++@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "final ServiceOffering offering@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "HostVO h = hp.first()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "!Strings.isNullOrEmpty(offering.getHostTag()) && !(h.getHostTags() != null && h.getHostTags().contains(offering.getHostTag()))@@@20@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "suitable_host_found = false@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "ClusterDetailsVO cluster_detail_cpu = clusterDetailsDao.findDetail(cluster.getId(),\"cpuOvercommitRatio\")@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "final long nodesCount@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Cluster planCluster = null@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "!suitable_host_found@@@37@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "hosts_with_resevered_capacity.entrySet()@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "LOGGER.debug(String.format(\"Found host ID: %s for with enough capacity, CPU=%d RAM=%d\",h.getUuid(),cpu_requested * reserved,ram_requested * reserved))@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "boolean suitable_host_found = false@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final DataCenter zone@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
50 [style = filled, label = "String msg = String.format(\"Cannot find enough capacity for Kubernetes cluster(requested cpu=%d memory=%d) with offering ID: %s\",cpu_requested * nodesCount,ram_requested * nodesCount,offering.getUuid())@@@56@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "final int cpu_requested = offering.getCpu() * offering.getSpeed()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "ClusterDetailsVO cluster_detail_ram = clusterDetailsDao.findDetail(cluster.getId(),\"memoryOvercommitRatio\")@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "plan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "LOGGER.isDebugEnabled()@@@29@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "ClusterVO cluster = clusterDao.findById(h.getClusterId())@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "suitable_host_found = true@@@33@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final DataCenter zone@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "Pair<HostVO,Integer> hp = hostEntry.getValue()@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "planCluster = cluster@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "LOGGER.isInfoEnabled()@@@45@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "Map.Entry<String,Pair<HostVO,Integer>> hostEntry@@@16@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "final long ram_requested = offering.getRamSize() * 1024L * 1024L@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "capacityManager.checkIfHostHasCapacity(h.getId(),cpu_requested * reserved,ram_requested * reserved,false,cpuOvercommitRatio,memoryOvercommitRatio,true)@@@28@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Float cpuOvercommitRatio = Float.parseFloat(cluster_detail_cpu.getValue())@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "LOGGER.debug(String.format(\"Checking host ID: %s for capacity already reserved %d\",h.getUuid(),reserved))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "hosts_with_resevered_capacity.put(h.getUuid(),new Pair<HostVO,Integer>(h,0))@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "LOGGER.info(String.format(\"Suitable hosts not found in datacenter ID: %s for node %d\",zone.getUuid(),i))@@@39@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "int i = 1@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final ServiceOffering offering@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "LOGGER.isInfoEnabled()@@@38@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "final ServiceOffering offering@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
47 [style = filled, label = "plan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
52 [style = filled, label = "final DataCenter zone@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "LOGGER.isDebugEnabled()@@@25@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "return new DeployDestination(zone,null,null,null)@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "plan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "final long nodesCount@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "List<HostVO> hosts = resourceManager.listAllHostsInOneZoneByType(Type.Routing,zone.getId())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "hostEntry.setValue(new Pair<HostVO,Integer>(h,reserved))@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "reserved++@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Float memoryOvercommitRatio = Float.parseFloat(cluster_detail_ram.getValue())@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i <= nodesCount + 1@@@12@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "throw new InsufficientServerCapacityException(msg,,zone.getId())@@@52@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
39->7 [style = solid, label="i"];
16->49 [style = solid, label="i"];
28->3 [style = bold, label=""];
43->4 [style = bold, label=""];
43->32 [style = dotted, label="true"];
23->44 [style = dotted, label="true"];
21->22 [style = bold, label=""];
11->36 [style = solid, label="ram_requested"];
47->48 [style = dotted, label="true"];
50->9 [style = bold, label=""];
29->2 [style = solid, label="h"];
50->9 [style = solid, label="msg"];
23->35 [style = dotted, label="true"];
6->4 [style = solid, label="zone"];
41->13 [style = bold, label=""];
22->35 [style = bold, label=""];
31->50 [style = bold, label=""];
37->2 [style = bold, label=""];
22->38 [style = dotted, label="true"];
23->22 [style = dotted, label="true"];
23->45 [style = dotted, label="true"];
36->9 [style = solid, label="msg"];
42->12 [style = bold, label=""];
34->22 [style = solid, label="cpu_requested"];
16->23 [style = bold, label=""];
25->49 [style = bold, label=""];
32->55 [style = bold, label=""];
23->17 [style = dotted, label="true"];
23->0 [style = dotted, label="true"];
23->21 [style = dotted, label="true"];
36->50 [style = dashed, label="0"];
29->17 [style = bold, label=""];
34->50 [style = solid, label="cpu_requested"];
16->39 [style = solid, label="i"];
28->58 [style = dashed, label="0"];
31->36 [style = bold, label=""];
49->31 [style = bold, label=""];
53->23 [style = solid, label="nodesCount"];
23->54 [style = dotted, label="true"];
42->18 [style = solid, label="cluster"];
30->36 [style = solid, label="nodesCount"];
11->50 [style = solid, label="ram_requested"];
22->18 [style = dotted, label="true"];
47->34 [style = bold, label=""];
23->51 [style = dotted, label="true"];
26->6 [style = dotted, label="true"];
4->36 [style = bold, label=""];
56->34 [style = bold, label=""];
22->15 [style = dotted, label="true"];
56->57 [style = dotted, label="true"];
31->43 [style = bold, label=""];
25->49 [style = dotted, label="true"];
36->10 [style = solid, label="msg"];
53->36 [style = solid, label="nodesCount"];
0->42 [style = bold, label=""];
15->19 [style = bold, label=""];
17->0 [style = solid, label="reserved"];
0->22 [style = solid, label="reserved"];
7->49 [style = dashed, label="0"];
47->30 [style = dotted, label="true"];
34->37 [style = solid, label="cpu_requested"];
30->50 [style = solid, label="nodesCount"];
41->16 [style = bold, label=""];
26->5 [style = dotted, label="true"];
23->39 [style = dotted, label="true"];
56->52 [style = dotted, label="true"];
23->29 [style = dotted, label="true"];
32->4 [style = bold, label=""];
11->28 [style = bold, label=""];
46->4 [style = solid, label="zone"];
0->37 [style = solid, label="reserved"];
16->7 [style = solid, label="i"];
9->10 [style = bold, label=""];
29->45 [style = solid, label="h"];
22->19 [style = bold, label=""];
24->40 [style = bold, label=""];
11->37 [style = solid, label="ram_requested"];
22->38 [style = bold, label=""];
29->45 [style = bold, label=""];
4->55 [style = dashed, label="0"];
43->32 [style = bold, label=""];
51->19 [style = bold, label=""];
21->33 [style = bold, label=""];
15->18 [style = bold, label=""];
13->4 [style = solid, label="planCluster"];
30->23 [style = solid, label="nodesCount"];
31->4 [style = dotted, label="true"];
23->19 [style = dotted, label="true"];
38->37 [style = bold, label=""];
0->33 [style = solid, label="reserved"];
39->49 [style = solid, label="i"];
23->14 [style = dotted, label="true"];
26->30 [style = dotted, label="true"];
41->31 [style = solid, label="suitable_host_found"];
15->31 [style = solid, label="suitable_host_found"];
47->46 [style = dotted, label="true"];
23->27 [style = dotted, label="true"];
23->31 [style = bold, label=""];
19->25 [style = bold, label=""];
51->35 [style = bold, label=""];
23->12 [style = dotted, label="true"];
23->1 [style = dotted, label="true"];
0->2 [style = solid, label="reserved"];
7->31 [style = bold, label=""];
13->16 [style = bold, label=""];
26->34 [style = bold, label=""];
31->43 [style = dotted, label="true"];
39->23 [style = solid, label="i"];
19->25 [style = dotted, label="true"];
25->31 [style = bold, label=""];
16->23 [style = solid, label="i"];
8->24 [style = bold, label=""];
38->37 [style = dotted, label="true"];
12->8 [style = bold, label=""];
17->0 [style = bold, label=""];
19->39 [style = bold, label=""];
40->22 [style = solid, label="memoryOvercommitRatio"];
23->40 [style = dotted, label="true"];
23->42 [style = dotted, label="true"];
58->3 [style = bold, label=""];
50->10 [style = solid, label="msg"];
52->55 [style = solid, label="zone"];
31->55 [style = dotted, label="true"];
4->50 [style = bold, label=""];
23->1 [style = bold, label=""];
51->17 [style = bold, label=""];
25->7 [style = bold, label=""];
38->2 [style = bold, label=""];
43->55 [style = bold, label=""];
23->24 [style = dotted, label="true"];
56->53 [style = dotted, label="true"];
11->22 [style = solid, label="ram_requested"];
24->22 [style = solid, label="cpuOvercommitRatio"];
40->21 [style = bold, label=""];
3->20 [style = bold, label=""];
36->9 [style = bold, label=""];
22->2 [style = dotted, label="true"];
33->22 [style = bold, label=""];
11->58 [style = bold, label=""];
1->31 [style = solid, label="suitable_host_found"];
55->36 [style = bold, label=""];
18->19 [style = bold, label=""];
30->57 [style = dashed, label="0"];
34->36 [style = solid, label="cpu_requested"];
1->35 [style = bold, label=""];
45->51 [style = bold, label=""];
23->8 [style = dotted, label="true"];
21->33 [style = dotted, label="true"];
25->7 [style = dotted, label="true"];
35->29 [style = bold, label=""];
39->23 [style = bold, label=""];
2->15 [style = bold, label=""];
18->4 [style = solid, label="planCluster"];
34->11 [style = bold, label=""];
20->41 [style = bold, label=""];
}
