digraph {
2 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"1\",wrapperFs.getConf())@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "HoodieTimelineArchiveLog archiveLog = new HoodieTimelineArchiveLog(cfg,table)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "metaClient = HoodieTableMetaClient.reload(metaClient)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "List<HoodieInstant> archivedInstants = Arrays.asList(instant1,instant2,instant3)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"4\",wrapperFs.getConf())@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "HoodieTable table = HoodieSparkTable.create(cfg,context,metaClient)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "boolean result = archiveLog.archiveIfRequired(context)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "assertEquals(new HashSet<>(archivedInstants),archivedTimeline.filterCompletedInstants().getInstants().collect(Collectors.toSet()))@@@21@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "testArchiveEmptyTable['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "wrapperFs.mkdirs(markerPath)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(wrapperFs.exists(markerPath))@@@22@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Path markerPath = new Path(metaClient.getMarkerFolderPath(\"2\"))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertTrue(result)@@@8@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"5\",wrapperFs.getConf())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "HoodieInstant instant1 = new HoodieInstant(false,HoodieTimeline.COMMIT_ACTION,\"1\")@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"2\",wrapperFs.getConf())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "HoodieInstant instant3 = new HoodieInstant(false,HoodieTimeline.COMMIT_ACTION,\"3\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HoodieArchivedTimeline archivedTimeline = metaClient.getArchivedTimeline()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testArchiveCommitTimeline['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testArchiveCommitTimeline['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "HoodieInstant instant2 = new HoodieInstant(false,HoodieTimeline.COMMIT_ACTION,\"2\")@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath).withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2,2).forTable(\"test-trip-table\").withCompactionConfig(HoodieCompactionConfig.newBuilder().retainCommits(1).archiveCommitsWith(2,3).build()).build()@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "HoodieWriteConfig cfg = HoodieWriteConfig.newBuilder().withPath(basePath).withSchema(HoodieTestDataGenerator.TRIP_EXAMPLE_SCHEMA).withParallelism(2,2).forTable(\"test-trip-table\").build()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "HoodieTestDataGenerator.createCommitFile(basePath,\"3\",wrapperFs.getConf())@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertEquals(new HashSet<>(archivedInstants),archivedTimeline.getInstants().collect(Collectors.toSet()))@@@21@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17->10 [style = bold, label=""];
19->7 [style = solid, label="markerPath"];
9->4 [style = solid, label="instant1"];
24->0 [style = bold, label=""];
4->12 [style = solid, label="archivedInstants"];
3->14 [style = bold, label=""];
0->2 [style = bold, label=""];
14->17 [style = bold, label=""];
15->20 [style = solid, label="table"];
1->0 [style = bold, label=""];
2->9 [style = bold, label=""];
3->4 [style = solid, label="instant2"];
12->6 [style = bold, label=""];
0->15 [style = bold, label=""];
7->3 [style = bold, label=""];
11->15 [style = bold, label=""];
19->6 [style = solid, label="markerPath"];
20->18 [style = bold, label=""];
13->19 [style = bold, label=""];
23->24 [style = bold, label=""];
8->5 [style = bold, label=""];
18->8 [style = solid, label="result"];
16->1 [style = bold, label=""];
1->24 [style = dashed, label="0"];
15->20 [style = bold, label=""];
1->15 [style = solid, label="cfg"];
5->4 [style = bold, label=""];
21->1 [style = bold, label=""];
1->20 [style = solid, label="cfg"];
12->22 [style = dashed, label="0"];
4->22 [style = solid, label="archivedInstants"];
4->12 [style = bold, label=""];
18->8 [style = bold, label=""];
24->20 [style = solid, label="cfg"];
24->15 [style = solid, label="cfg"];
19->7 [style = bold, label=""];
4->22 [style = bold, label=""];
0->15 [style = solid, label="metaClient"];
22->6 [style = bold, label=""];
9->13 [style = bold, label=""];
10->11 [style = bold, label=""];
17->4 [style = solid, label="instant3"];
}
