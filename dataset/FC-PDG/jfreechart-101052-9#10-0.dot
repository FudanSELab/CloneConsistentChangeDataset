digraph {
17 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test 1\",45.5)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "testSerialization['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertTrue(v1.equals(v2))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "v1.addValue(\"Key 3\",new Double(42))@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "testEquals['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "DefaultKeyedValue<String> v2 = new DefaultKeyedValue<>(\"Test\",45.5)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test\",45.6)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "v2 = new DefaultKeyedValue<>(\"Test 2\",45.5)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "v1.addValue(\"Key 1\",new Double(23))@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertFalse(v1.equals(v2))@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "testSerialization['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "DefaultKeyedValues<String> v2 = (DefaultKeyedValues)TestUtils.serialised(v1)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "DefaultKeyedValues v2 = (DefaultKeyedValues)TestUtils.serialised(v1)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
19 [style = filled, label = "assertTrue(v2.equals(v1))@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "DefaultKeyedValue<String> v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "DefaultKeyedValues<String> v1 = new DefaultKeyedValues<>()@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "v1.addValue(\"Key 2\",null)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertEquals(v1,v2)@@@8@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "DefaultKeyedValues v1 = new DefaultKeyedValues()@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "assertFalse(v1.equals(v2))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "v1 = new DefaultKeyedValue<>(\"Test\",45.5)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1->4 [style = bold, label=""];
15->13 [style = bold, label=""];
10->20 [style = bold, label=""];
3->5 [style = solid, label="v1"];
3->7 [style = dashed, label="0"];
0->5 [style = solid, label="v2"];
2->3 [style = bold, label=""];
3->6 [style = bold, label=""];
11->12 [style = bold, label=""];
13->16 [style = solid, label="v2"];
19->17 [style = bold, label=""];
9->7 [style = bold, label=""];
11->12 [style = solid, label="v2"];
0->17 [style = dashed, label="0"];
13->16 [style = bold, label=""];
20->19 [style = solid, label="v1"];
8->5 [style = solid, label="v2"];
4->0 [style = bold, label=""];
6->1 [style = bold, label=""];
7->8 [style = solid, label="v1"];
8->5 [style = bold, label=""];
3->0 [style = solid, label="v1"];
3->20 [style = dashed, label="0"];
7->6 [style = bold, label=""];
7->5 [style = solid, label="v1"];
4->8 [style = bold, label=""];
0->8 [style = dashed, label="0"];
14->15 [style = bold, label=""];
18->14 [style = solid, label="v2"];
12->19 [style = bold, label=""];
18->14 [style = bold, label=""];
17->18 [style = bold, label=""];
0->5 [style = bold, label=""];
20->11 [style = bold, label=""];
}
