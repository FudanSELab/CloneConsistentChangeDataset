digraph {
27 [style = filled, label = "assertEquals(\"1970-01-01 08\",keyGen.getPartitionPath(baseRow))@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "HoodieKey hk5 = keyGen.getKey(baseRecord)@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@19@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "baseRecord.put(\"createTime\",null)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "baseRecord.put(\"createTime\",20000L)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertEquals(\"1970-01-02 12\",hk2.getPartitionPath())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "HoodieKey hk4 = keyGen.getKey(baseRecord)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT\",null)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "HoodieKey scalarSecondsKey = keyGen.getKey(baseRecord)@@@20@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
36 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertEquals(\"2020-01-06 04\",hk2.getPartitionPath())@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "HoodieKey hk6 = keyGen.getKey(baseRecord)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "properties = getBaseKeyConfig(\"DATE_STRING\",\"yyyy-MM-dd hh:mm:ss\",\"GMT\",null)@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertEquals(hk1.getPartitionPath(),\"2024-10-04 12\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertEquals(\"2020-01-06 12\",hk4.getPartitionPath())@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "baseRecord.put(\"createTime\",null)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
50 [style = filled, label = "assertEquals(\"1970-01-01 08\",hk5.getPartitionPath())@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "assertEquals(\"2020-01-06 12\",hk1.getPartitionPath())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "HoodieKey hk2 = keyGen.getKey(baseRecord)@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(\"2021-04-19\",scalarSecondsKey.getPartitionPath())@@@21@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
54 [style = filled, label = "baseRecord.put(\"createTime\",null)@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "baseRecord.put(\"createTime\",\"2020-01-06 12:12:12\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(\"2020-01-06 12\",hk3.getPartitionPath())@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertEquals(\"1970-01-01 12:00:00\",hk6.getPartitionPath())@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "properties = getBaseKeyConfig(\"DATE_STRING\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testScalar['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testScalar['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
42 [style = filled, label = "HoodieKey hk3 = keyGen.getKey(baseRecord)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "properties = getBaseKeyConfig(\"EPOCHMILLISECONDS\",\"yyyy-MM-dd hh\",\"GMT+8:00\",null)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "baseRow = genericRecordToRow(baseRecord)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "properties = getBaseKeyConfig(\"SCALAR\",\"yyyy-MM-dd\",\"GMT\",\"DAYS\")@@@18@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "properties = getBaseKeyConfig(\"SCALAR\",\"yyyy-MM-dd hh\",\"GMT\",\"days\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "assertEquals(\"2020-01-06 04\",keyGen.getPartitionPath(baseRow))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "baseRecord.put(\"createTime\",18736)@@@17@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
26 [style = filled, label = "properties.setProperty(\"hoodie.deltastreamer.keygen.timebased.input.dateformat\",\"yyyy-MM-dd hh:mm:ss\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "HoodieKey hk1 = keyGen.getKey(baseRecord)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "properties = getBaseKeyConfig(\"DATE_STRING\",\"yyyy-MM-dd hh\",\"GMT\",null)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "properties = getBaseKeyConfig(\"SCALAR\",\"yyyy-MM-dd hh\",\"GMT\",\"days\")@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertEquals(\"2024-10-04 12\",keyGen.getPartitionPath(baseRow))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "TimestampBasedKeyGenerator keyGen = new TimestampBasedKeyGenerator(properties)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testTimestampBasedKeyGenerator['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "keyGen = new TimestampBasedKeyGenerator(properties)@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "properties.setProperty(\"hoodie.deltastreamer.keygen.timebased.input.dateformat\",\"yyyy-MM-dd hh:mm:ss\")@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "baseRecord.put(\"createTime\",1578283932000L)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertEquals(\"1970-01-01 12:00:00\",keyGen.getPartitionPath(baseRow))@@@42@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertEquals(\"1970-01-02 12\",keyGen.getPartitionPath(baseRow))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertEquals(\"2020-01-06 12\",keyGen.getPartitionPath(baseRow))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23->30 [style = bold, label=""];
14->5 [style = bold, label=""];
32->23 [style = bold, label=""];
4->6 [style = bold, label=""];
36->51 [style = bold, label=""];
13->10 [style = solid, label="baseRow"];
55->25 [style = bold, label=""];
39->34 [style = solid, label="properties"];
29->42 [style = bold, label=""];
7->8 [style = bold, label=""];
52->33 [style = bold, label=""];
50->37 [style = bold, label=""];
8->0 [style = bold, label=""];
39->34 [style = bold, label=""];
43->50 [style = bold, label=""];
25->6 [style = solid, label="properties"];
0->44 [style = solid, label="baseRow"];
17->18 [style = bold, label=""];
2->13 [style = bold, label=""];
1->12 [style = bold, label=""];
37->27 [style = bold, label=""];
27->46 [style = bold, label=""];
56->0 [style = bold, label=""];
12->3 [style = solid, label="properties"];
9->2 [style = bold, label=""];
9->40 [style = bold, label=""];
2->9 [style = dashed, label="0"];
52->38 [style = solid, label="properties"];
42->49 [style = bold, label=""];
11->1 [style = bold, label=""];
22->35 [style = bold, label=""];
41->48 [style = bold, label=""];
34->3 [style = bold, label=""];
38->22 [style = bold, label=""];
31->55 [style = bold, label=""];
0->11 [style = bold, label=""];
0->11 [style = solid, label="baseRow"];
36->51 [style = solid, label="properties"];
54->36 [style = bold, label=""];
5->4 [style = bold, label=""];
51->43 [style = bold, label=""];
5->55 [style = dashed, label="0"];
10->19 [style = bold, label=""];
0->44 [style = bold, label=""];
45->53 [style = bold, label=""];
4->25 [style = dashed, label="0"];
21->28 [style = solid, label="baseRow"];
37->27 [style = solid, label="baseRow"];
17->18 [style = solid, label="properties"];
48->26 [style = bold, label=""];
46->52 [style = bold, label=""];
7->56 [style = bold, label=""];
40->41 [style = bold, label=""];
4->6 [style = solid, label="properties"];
8->56 [style = dashed, label="0"];
12->3 [style = bold, label=""];
19->17 [style = bold, label=""];
3->9 [style = bold, label=""];
47->24 [style = solid, label="baseRow"];
33->38 [style = bold, label=""];
15->20 [style = bold, label=""];
16->5 [style = bold, label=""];
1->39 [style = dashed, label="0"];
30->28 [style = bold, label=""];
0->40 [style = solid, label="baseRow"];
10->45 [style = dashed, label="0"];
11->44 [style = dashed, label="0"];
28->54 [style = bold, label=""];
6->7 [style = bold, label=""];
13->10 [style = bold, label=""];
53->32 [style = solid, label="properties"];
21->45 [style = solid, label="baseRow"];
35->47 [style = bold, label=""];
25->6 [style = bold, label=""];
44->39 [style = bold, label=""];
26->29 [style = bold, label=""];
21->45 [style = bold, label=""];
47->24 [style = bold, label=""];
53->32 [style = bold, label=""];
48->29 [style = solid, label="properties"];
49->21 [style = bold, label=""];
18->15 [style = bold, label=""];
}
