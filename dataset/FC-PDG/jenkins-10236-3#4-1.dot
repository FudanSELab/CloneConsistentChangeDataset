digraph {
6 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "addJobShouldSucceedEvenAlreadyAdded['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Job.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject\",\"aProject\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(0))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project),equalTo(true))@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "FreeStyleProject project = j.createFreeStyleProject(\"aProject\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "j.jenkins.addView(new ListView(\"aView\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project),equalTo(true))@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "((DirectlyModifiableView)j.jenkins.getView(\"aView\")).add(project)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Job.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject\")@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "assertThat(result,succeededSilently())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "removeJobManyShouldSucceedEvenAJobIsSpecifiedTwice['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").getAllItems().size(),equalTo(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "addJobShouldSucceedEvenAlreadyAdded['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(j.jenkins.getView(\"aView\").contains(project),equalTo(false))@@@11@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "final CLICommandInvoker.Result result = command.authorizedTo(Jenkins.READ,View.READ,Item.READ,View.CONFIGURE).invokeWithArgs(\"aView\",\"aProject\")@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3->13 [style = solid, label="result"];
5->8 [style = bold, label=""];
15->7 [style = bold, label=""];
2->4 [style = solid, label="result"];
10->4 [style = solid, label="result"];
6->7 [style = solid, label="project"];
0->6 [style = bold, label=""];
1->15 [style = bold, label=""];
11->6 [style = bold, label=""];
8->12 [style = dashed, label="0"];
2->4 [style = bold, label=""];
1->7 [style = bold, label=""];
1->12 [style = solid, label="project"];
5->4 [style = dashed, label="0"];
6->3 [style = solid, label="project"];
14->1 [style = bold, label=""];
2->10 [style = dashed, label="0"];
7->9 [style = bold, label=""];
6->1 [style = bold, label=""];
3->10 [style = bold, label=""];
3->2 [style = bold, label=""];
6->8 [style = solid, label="project"];
10->4 [style = bold, label=""];
3->13 [style = bold, label=""];
4->12 [style = bold, label=""];
9->3 [style = bold, label=""];
16->14 [style = bold, label=""];
1->9 [style = solid, label="project"];
1->15 [style = solid, label="project"];
2->3 [style = dashed, label="0"];
4->5 [style = bold, label=""];
13->4 [style = bold, label=""];
}
