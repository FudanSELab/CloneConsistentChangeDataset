digraph {
59 [style = filled, label = "userCallNode.isNullSafe()@@@49@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
63 [style = filled, label = "constantNode.attachDecoration(new IRDExpressionType(parameterType))@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
52 [style = filled, label = "userCallNode.getArgumentNodes()@@@41@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "irDeclarationBlockNode.addDeclarationNode((DeclarationNode)visit(userDeclarationNode,scriptScope))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "irInvokeCallNode.attachDecoration(new IRDExpressionType(valueType))@@@44@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "ECall userCallNode@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
67 [style = filled, label = "ScriptScope scriptScope@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "Class<?> parameterType = parameterTypes(i + augmentedOffset(@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "ValueType prefixValueType = scriptScope.getDecoration(userCallNode.getPrefixNode(),)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "visitCall['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "constantNode.setConstant(injection)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "Class<?> valueType = scriptScope.getDecoration(userCallNode,).getValueType()@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
45 [style = filled, label = "boxType = prefixValueType.getValueType()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "irExpressionNode = irNullSafeSubNode@@@53@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "userCallNode.getArgumentNodes()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "@@@44@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
30 [style = filled, label = "Object injection = injections(i(@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "prefixValueType != null && prefixValueType.getValueType() == @@@6@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "scriptScope.putDecoration(userCallNode,new IRNodeDecoration(irBinaryImplNode))@@@59@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
58 [style = filled, label = "irInvokeCallNode.setMethod(scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod())@@@45@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
54 [style = filled, label = "BinaryImplNode irBinaryImplNode = new BinaryImplNode(irExpressionNode.getLocation())@@@55@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "AExpression userArgumentNode@@@7@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "AExpression userCallArgumentNode@@@41@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "ExpressionNode irExpressionNode@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "irBinaryImplNode.setLeftNode((ExpressionNode)visit(userCallNode.getPrefixNode(),scriptScope))@@@56@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "prefixValueType != null@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "boxType = scriptScope.getDecoration(userCallNode.getPrefixNode(),).getStaticType()@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "i++@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
37 [style = filled, label = "irExpressionNode = irInvokeCallNode@@@47@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "ScriptScope scriptScope@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "ECall userCallNode@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "PainlessMethod method = scriptScope.getDecoration(userCallNode,).getStandardPainlessMethod()@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "InvokeCallNode irInvokeCallNode = new InvokeCallNode(userCallNode.getLocation())@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "irExpressionNode = irInvokeCallNode@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "irBinaryImplNode.setExpressionType(irExpressionNode.getExpressionType())@@@58@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
47 [style = filled, label = "InvokeCallDefNode irCallSubDefNode = new InvokeCallDefNode(userCallNode.getLocation())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "irCallSubDefNode.attachDecoration(new IRDExpressionType(valueType))@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
65 [style = filled, label = "visitDeclBlock['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ConstantNode constantNode = new ConstantNode(userCallNode.getLocation())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "irNullSafeSubNode.copyDecorationFrom(irExpressionNode,)@@@52@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "Class<?>(( parameterTypes = method.javaMethod.getParameterTypes()@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "irInvokeCallNode.setBox(boxType)@@@46@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i < injections.length@@@29@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "constantNode.setExpressionType(parameterType)@@@36@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
55 [style = filled, label = "visitCall['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
19 [style = filled, label = "parameterType != PainlessLookupUtility.typeToUnboxedType(injection.getClass())@@@33@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "Class<?> boxType@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "irCallSubDefNode.setExpressionType(scriptScope.getDecoration(userCallNode,).getValueType())@@@10@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "irExpressionNode = irCallSubDefNode@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "SDeclBlock userDeclBlockNode@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int augmentedOffset = method.javaMethod.getDeclaringClass() == method.targetClass? 0: 1@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 0@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "irInvokeCallNode.setExpressionType(scriptScope.getDecoration(userCallNode,).getValueType())@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "AExpression userArgumentNode@@@8@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
68 [style = filled, label = "scriptScope.putDecoration(userDeclBlockNode,new IRNodeDecoration(irDeclarationBlockNode))@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "irBinaryImplNode.copyDecorationFrom(irExpressionNode,)@@@58@@@['1', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "irNullSafeSubNode.setExpressionType(irExpressionNode.getExpressionType())@@@52@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
25 [style = filled, label = "Object(( injections = PainlessLookupUtility.buildInjections(method,scriptScope.getCompilerSettings().asMap())@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "throw new IllegalStateException(\"illegal tree structure\")@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "irExpressionNode = irNullSafeSubNode@@@53@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
10 [style = filled, label = "scriptScope.putDecoration(userCallNode,new IRNodeDecoration(irBinaryImplNode))@@@59@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "irNullSafeSubNode.setChildNode(irExpressionNode)@@@51@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "irCallSubDefNode.addArgumentNode((ExpressionNode)visit(userArgumentNode,scriptScope))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "irInvokeCallNode.addArgumentNode(injectCast(userCallArgumentNode,scriptScope))@@@42@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "AExpression userCallArgumentNode@@@40@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "irBinaryImplNode.setRightNode(irExpressionNode)@@@57@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "irCallSubDefNode.setName(userCallNode.getMethodName())@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "NullSafeSubNode irNullSafeSubNode = new NullSafeSubNode(irExpressionNode.getLocation())@@@50@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "DeclarationBlockNode irDeclarationBlockNode = new DeclarationBlockNode(userDeclBlockNode.getLocation())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "irInvokeCallNode.addArgumentNode(constantNode)@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18->43 [style = dashed, label="0"];
39->36 [style = dotted, label="true"];
14->25 [style = bold, label=""];
50->63 [style = dashed, label="0"];
65->64 [style = dotted, label="true"];
42->47 [style = dotted, label="true"];
41->19 [style = bold, label=""];
55->49 [style = bold, label=""];
61->43 [style = solid, label="irExpressionNode"];
3->10 [style = solid, label="userCallNode"];
7->38 [style = solid, label="irNullSafeSubNode"];
8->63 [style = bold, label=""];
30->36 [style = solid, label="injection"];
38->43 [style = solid, label="irExpressionNode"];
64->68 [style = solid, label="userDeclBlockNode"];
17->45 [style = bold, label=""];
39->6 [style = bold, label=""];
59->22 [style = dotted, label="true"];
40->1 [style = solid, label="irExpressionNode"];
25->48 [style = bold, label=""];
43->18 [style = bold, label=""];
63->36 [style = bold, label=""];
9->35 [style = bold, label=""];
2->61 [style = bold, label=""];
42->35 [style = dotted, label="false"];
26->37 [style = solid, label="boxType"];
41->63 [style = solid, label="parameterType"];
62->42 [style = bold, label=""];
22->61 [style = solid, label="irNullSafeSubNode"];
22->38 [style = dotted, label="true"];
40->7 [style = solid, label="irExpressionNode"];
49->13 [style = bold, label=""];
42->37 [style = dotted, label="false"];
34->17 [style = bold, label=""];
69->68 [style = solid, label="irDeclarationBlockNode"];
65->69 [style = bold, label=""];
40->22 [style = bold, label=""];
29->44 [style = bold, label=""];
35->39 [style = solid, label="i"];
59->22 [style = bold, label=""];
21->2 [style = solid, label="irExpressionNode"];
42->11 [style = dotted, label="false"];
59->54 [style = bold, label=""];
58->11 [style = bold, label=""];
23->41 [style = solid, label="i"];
33->16 [style = bold, label=""];
30->41 [style = bold, label=""];
35->30 [style = solid, label="i"];
59->61 [style = dotted, label="true"];
21->43 [style = solid, label="irExpressionNode"];
39->8 [style = dotted, label="true"];
22->0 [style = dotted, label="true"];
22->7 [style = dotted, label="true"];
42->20 [style = dotted, label="false"];
37->21 [style = bold, label=""];
62->60 [style = solid, label="valueType"];
11->37 [style = bold, label=""];
22->32 [style = bold, label=""];
26->11 [style = solid, label="boxType"];
20->14 [style = bold, label=""];
42->48 [style = dotted, label="false"];
23->30 [style = solid, label="i"];
51->58 [style = bold, label=""];
42->60 [style = dotted, label="true"];
14->25 [style = solid, label="method"];
22->7 [style = bold, label=""];
5->67 [style = dashed, label="0"];
0->38 [style = bold, label=""];
38->32 [style = bold, label=""];
37->2 [style = solid, label="irExpressionNode"];
13->42 [style = solid, label="prefixValueType"];
35->23 [style = solid, label="i"];
49->69 [style = dashed, label="0"];
54->57 [style = solid, label="irBinaryImplNode"];
12->29 [style = bold, label=""];
39->27 [style = dotted, label="true"];
21->22 [style = bold, label=""];
7->2 [style = bold, label=""];
65->67 [style = dotted, label="true"];
55->53 [style = dotted, label="true"];
62->51 [style = solid, label="valueType"];
35->41 [style = solid, label="i"];
19->46 [style = bold, label=""];
5->32 [style = solid, label="scriptScope"];
47->40 [style = solid, label="irCallSubDefNode"];
5->1 [style = solid, label="scriptScope"];
26->20 [style = bold, label=""];
48->41 [style = solid, label="parameterTypes"];
13->17 [style = solid, label="prefixValueType"];
12->60 [style = bold, label=""];
60->44 [style = bold, label=""];
42->58 [style = dotted, label="false"];
37->43 [style = solid, label="irExpressionNode"];
13->42 [style = bold, label=""];
42->44 [style = dotted, label="true"];
8->27 [style = solid, label="constantNode"];
42->17 [style = dotted, label="false"];
39->50 [style = dotted, label="true"];
28->3 [style = dotted, label="true"];
13->62 [style = bold, label=""];
45->37 [style = solid, label="boxType"];
6->51 [style = bold, label=""];
35->39 [style = bold, label=""];
28->49 [style = bold, label=""];
37->1 [style = solid, label="irExpressionNode"];
42->47 [style = bold, label=""];
37->7 [style = solid, label="irExpressionNode"];
55->5 [style = dotted, label="true"];
39->30 [style = dotted, label="true"];
17->45 [style = dotted, label="true"];
45->20 [style = bold, label=""];
40->59 [style = bold, label=""];
42->40 [style = dotted, label="true"];
41->50 [style = solid, label="parameterType"];
25->30 [style = solid, label="injections"];
39->23 [style = dotted, label="true"];
42->21 [style = dotted, label="false"];
2->0 [style = bold, label=""];
61->1 [style = solid, label="irExpressionNode"];
18->10 [style = bold, label=""];
67->66 [style = solid, label="scriptScope"];
42->34 [style = dotted, label="false"];
6->33 [style = bold, label=""];
32->1 [style = bold, label=""];
46->8 [style = bold, label=""];
42->15 [style = dotted, label="true"];
23->39 [style = bold, label=""];
8->50 [style = bold, label=""];
40->2 [style = solid, label="irExpressionNode"];
61->54 [style = bold, label=""];
69->66 [style = bold, label=""];
5->12 [style = solid, label="scriptScope"];
23->39 [style = solid, label="i"];
42->29 [style = dotted, label="true"];
42->33 [style = dotted, label="false"];
42->14 [style = dotted, label="false"];
42->9 [style = dotted, label="false"];
45->11 [style = solid, label="boxType"];
42->34 [style = bold, label=""];
32->10 [style = solid, label="irBinaryImplNode"];
17->26 [style = bold, label=""];
16->11 [style = bold, label=""];
43->57 [style = bold, label=""];
39->19 [style = dotted, label="true"];
1->43 [style = bold, label=""];
47->12 [style = bold, label=""];
53->57 [style = solid, label="userCallNode"];
42->6 [style = dotted, label="true"];
66->68 [style = bold, label=""];
44->40 [style = bold, label=""];
20->21 [style = solid, label="irInvokeCallNode"];
42->4 [style = dotted, label="true"];
48->9 [style = bold, label=""];
20->37 [style = solid, label="irInvokeCallNode"];
39->63 [style = dotted, label="true"];
19->8 [style = bold, label=""];
22->2 [style = dotted, label="true"];
39->30 [style = bold, label=""];
42->12 [style = dotted, label="true"];
28->5 [style = dotted, label="true"];
42->51 [style = dotted, label="false"];
36->27 [style = bold, label=""];
9->41 [style = solid, label="augmentedOffset"];
50->36 [style = bold, label=""];
37->59 [style = bold, label=""];
39->41 [style = dotted, label="true"];
42->56 [style = dotted, label="true"];
19->46 [style = dotted, label="true"];
17->26 [style = dotted, label="false"];
42->24 [style = dotted, label="false"];
42->52 [style = dotted, label="false"];
54->32 [style = bold, label=""];
40->43 [style = solid, label="irExpressionNode"];
27->23 [style = bold, label=""];
42->31 [style = dotted, label="false"];
59->7 [style = dotted, label="true"];
0->2 [style = dashed, label="0"];
42->25 [style = dotted, label="false"];
42->39 [style = dotted, label="false"];
5->6 [style = solid, label="scriptScope"];
59->2 [style = dotted, label="true"];
41->19 [style = solid, label="parameterType"];
}
