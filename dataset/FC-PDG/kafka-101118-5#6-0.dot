digraph {
8 [style = filled, label = "assertThat(lower,equalTo(WindowStoreUtils.toBinaryKey(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd2dd9,0,0)))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testLowerBoundMatchesTrailingZeros['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "Bytes lower = windowKeySchema.lowerRange(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd2d9a),Long.MAX_VALUE - 1)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testUpperBoundWithZeroTimestamp['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
0 [style = filled, label = "assertThat(upper,equalTo(SessionKeySerde.bytesToBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd2d52),new SessionWindow(0,0)))))@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
1 [style = filled, label = "Bytes upper = sessionKeySchema.upperRange(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd2d6a),0)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testUpperBoundWithZeroTimestamp['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(\"appending zeros to key should still be in range\",lower.compareTo(WindowStoreUtils.toBinaryKey(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd2db1,Long.MAX_VALUE - 1,0)) < 0)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(upper,equalTo(Bytes.wrap(SessionKeySchema.toBinary(new Windowed<>(Bytes.wrap(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@cd2d82),new SessionWindow(0,0))))))@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1->3 [style = bold, label=""];
4->1 [style = bold, label=""];
7->5 [style = bold, label=""];
0->3 [style = dashed, label="0"];
1->0 [style = bold, label=""];
1->5 [style = dashed, label="0"];
5->6 [style = bold, label=""];
1->0 [style = solid, label="upper"];
2->1 [style = bold, label=""];
5->8 [style = solid, label="lower"];
6->8 [style = bold, label=""];
1->3 [style = solid, label="upper"];
}
