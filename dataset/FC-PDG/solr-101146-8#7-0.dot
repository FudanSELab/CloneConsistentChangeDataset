digraph {
28 [style = filled, label = "nerTaggerOp.reset()@@@93@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "terms.add(termAtt.toString())@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "endOfSentence@@@84@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "tokenStream.close()@@@89@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "List<Pair<String,String>> entitiesWithType@@@97@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "startOffsets.add(offsetAtt.startOffset())@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "List<Integer> startOffsets@@@97@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "getInstance['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "List<Integer> endOffsets@@@97@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "SolrQueryRequest req@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "return entitiesWithType@@@95@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "nerTaggerOp@@@78@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "extractEntitiesFromSentence['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "!terms.isEmpty()@@@90@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "extractTypedNamedEntities['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "UpdateRequestProcessor next@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SolrQueryRequest req@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "endOffsets.add(offsetAtt.endOffset())@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "List<String> terms@@@97@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "tokenStream.end()@@@88@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "String fullText@@@97@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "endOffsets.clear()@@@104@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "UpdateRequestProcessor next@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "entitiesWithType.add(new Pair<>(text,span.getType()))@@@100@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "SolrQueryResponse rsp@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "terms.clear()@@@102@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "extractEntitiesFromSentence(fullText,terms,startOffsets,endOffsets,entitiesWithType)@@@85@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "String text = fullText.substring(startOffsets.get(span.getStart()),endOffsets.get(span.getEnd() - 1))@@@99@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "startOffsets.clear()@@@103@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "boolean endOfSentence = 0 != (flagsAtt.getFlags() & OpenNLPTokenizer.EOS_FLAG_BIT)@@@83@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "extractEntitiesFromSentence(fullText,terms,startOffsets,endOffsets,entitiesWithType)@@@91@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "tokenStream.incrementToken()@@@79@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "getInstance['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
0->2 [style = dotted, label="true"];
8->10 [style = dotted, label="true"];
31->25 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
12->7 [style = dotted, label="true"];
12->26 [style = bold, label=""];
25->23 [style = bold, label=""];
32->19 [style = bold, label=""];
22->30 [style = bold, label=""];
23->32 [style = bold, label=""];
0->1 [style = dotted, label="true"];
9->17 [style = solid, label="terms"];
29->17 [style = dotted, label="true"];
30->22 [style = solid, label="fullText"];
26->28 [style = dotted, label="true"];
7->14 [style = solid, label="entitiesWithType"];
27->28 [style = bold, label=""];
7->9 [style = bold, label=""];
16->18 [style = bold, label=""];
20->17 [style = solid, label="endOffsets"];
26->31 [style = bold, label=""];
8->17 [style = solid, label="startOffsets"];
19->29 [style = solid, label="endOfSentence"];
0->3 [style = dotted, label="true"];
30->22 [style = bold, label=""];
26->18 [style = dotted, label="true"];
22->15 [style = bold, label=""];
8->7 [style = dotted, label="true"];
21->10 [style = dotted, label="true"];
12->20 [style = dotted, label="true"];
12->30 [style = bold, label=""];
26->16 [style = dotted, label="true"];
12->8 [style = dotted, label="true"];
6->5 [style = dotted, label="true"];
6->4 [style = dotted, label="true"];
31->19 [style = dotted, label="true"];
13->12 [style = bold, label=""];
27->24 [style = bold, label=""];
19->29 [style = bold, label=""];
7->24 [style = solid, label="entitiesWithType"];
8->24 [style = solid, label="startOffsets"];
20->30 [style = bold, label=""];
30->24 [style = solid, label="fullText"];
12->9 [style = dotted, label="true"];
15->11 [style = bold, label=""];
29->31 [style = bold, label=""];
29->17 [style = bold, label=""];
11->13 [style = bold, label=""];
31->29 [style = dotted, label="true"];
6->3 [style = dotted, label="true"];
21->7 [style = bold, label=""];
31->32 [style = dotted, label="true"];
20->24 [style = solid, label="endOffsets"];
7->17 [style = solid, label="entitiesWithType"];
26->27 [style = dotted, label="true"];
9->8 [style = bold, label=""];
24->28 [style = bold, label=""];
9->24 [style = solid, label="terms"];
28->14 [style = bold, label=""];
30->22 [style = solid, label="text"];
18->27 [style = bold, label=""];
31->23 [style = dotted, label="true"];
8->20 [style = bold, label=""];
31->16 [style = bold, label=""];
31->25 [style = bold, label=""];
30->17 [style = solid, label="fullText"];
26->31 [style = dotted, label="true"];
27->24 [style = dotted, label="true"];
17->31 [style = bold, label=""];
8->9 [style = dotted, label="true"];
}
