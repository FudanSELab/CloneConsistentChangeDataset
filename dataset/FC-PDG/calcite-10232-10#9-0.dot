digraph {
0 [style = filled, label = "assertThat(x,is(1))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assertThat(r.getInt(1),is(12))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testCreateTable['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "b = s.execute(\"create type a.b.mytype as (i varchar(5))\")@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assertThat(x,is(1))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 1\")@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "b = s.execute(\"create table t2 (i int not null, j a.b.mytype)\")@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "b = s.execute(\"create or replace type mytype2 as (i int not null, jj mytype1)\")@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "assertThat(r.next(),is(true))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int x = s.executeUpdate(\"insert into t values 12.0\")@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "boolean b = s.execute(\"create type mytype1 as BIGINT\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "assertThat(b,is(false))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "assertThat(r.next(),is(true))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertThat(b,is(false))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "b = s.execute(\"create schema a.b\")@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3.0\")@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "b = s.execute(\"create or replace type mytype1 as DOUBLE\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "b = s.execute(\"create type mytype as (i int)\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "assertThat(x,is(1))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "b = s.execute(\"create type mytype3 as (i int not null, jj mytype2)\")@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "assertThat(b,is(false))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertDoesNotThrow(null,\"REPLACE must recreate the table, leaving only one column\")@@@32@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA1AAABBB2BBB"];
41 [style = filled, label = "testCreateType['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(x,is(1))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "x = s.executeUpdate(\"insert into t2 values (1, NULL)\")@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "assertThat(r.getInt(1),is(3))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assertThat(x,is(1))@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "boolean b = s.execute(\"create table t (i int not null)\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "b = s.execute(\"create table t (c mytype1 NOT NULL)\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "b = s.execute(\"create schema a\")@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertThat(x,is(1))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "x = s.executeUpdate(\"insert into t values 3\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "b = s.execute(\"create type mytype4 as BIGINT\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "b = s.execute(\"create table w (i int not null, j mytype)\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(b,is(false))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(r.next(),is(true))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "assertThat(b,is(false))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertThat(r.next(),is(false))@@@26@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertThat(r.next(),is(false))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "assertThat(b,is(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assertThat(b,is(false))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertThat(r.getInt(1),is(4))@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "x = s.executeUpdate(\"insert into w values (1, NULL)\")@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertThat(b,is(false))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "testCreateTable['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
31->42 [style = solid, label="b"];
19->3 [style = bold, label=""];
33->39 [style = solid, label="b"];
29->30 [style = bold, label=""];
39->31 [style = bold, label=""];
28->13 [style = bold, label=""];
37->29 [style = solid, label="b"];
18->0 [style = solid, label="x"];
10->24 [style = bold, label=""];
0->4 [style = bold, label=""];
34->32 [style = solid, label="b"];
43->21 [style = solid, label="b"];
8->11 [style = solid, label="x"];
24->18 [style = bold, label=""];
23->15 [style = bold, label=""];
10->24 [style = solid, label="x"];
19->3 [style = solid, label="x"];
27->12 [style = bold, label=""];
44->23 [style = bold, label=""];
16->23 [style = solid, label="b"];
11->26 [style = bold, label=""];
25->7 [style = bold, label=""];
41->43 [style = bold, label=""];
32->37 [style = bold, label=""];
12->21 [style = bold, label=""];
25->37 [style = dashed, label="0"];
12->21 [style = solid, label="b"];
30->38 [style = bold, label=""];
22->35 [style = bold, label=""];
5->13 [style = solid, label="b"];
34->32 [style = bold, label=""];
13->44 [style = bold, label=""];
35->7 [style = bold, label=""];
6->8 [style = bold, label=""];
7->36 [style = solid, label="x"];
3->5 [style = bold, label=""];
21->10 [style = bold, label=""];
19->30 [style = dashed, label="0"];
22->35 [style = solid, label="x"];
5->13 [style = bold, label=""];
9->6 [style = bold, label=""];
14->1 [style = bold, label=""];
30->38 [style = solid, label="b"];
43->21 [style = bold, label=""];
7->36 [style = bold, label=""];
8->11 [style = bold, label=""];
37->29 [style = bold, label=""];
31->42 [style = bold, label=""];
10->34 [style = dashed, label="0"];
16->23 [style = bold, label=""];
15->20 [style = solid, label="b"];
33->39 [style = bold, label=""];
22->25 [style = bold, label=""];
13->16 [style = bold, label=""];
1->17 [style = bold, label=""];
25->7 [style = solid, label="b"];
36->28 [style = bold, label=""];
4->14 [style = bold, label=""];
15->20 [style = bold, label=""];
21->34 [style = bold, label=""];
23->40 [style = bold, label=""];
16->33 [style = dashed, label="0"];
17->22 [style = solid, label="b"];
15->31 [style = dashed, label="0"];
9->6 [style = solid, label="b"];
17->22 [style = bold, label=""];
20->9 [style = bold, label=""];
38->33 [style = bold, label=""];
7->19 [style = bold, label=""];
12->43 [style = dashed, label="0"];
2->12 [style = bold, label=""];
18->0 [style = bold, label=""];
42->22 [style = bold, label=""];
}
