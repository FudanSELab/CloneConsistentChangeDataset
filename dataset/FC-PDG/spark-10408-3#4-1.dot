digraph {
13 [style = filled, label = "long arrayOffset = Platform.LONG_ARRAY_OFFSET + 4@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "testCompareLongsAsUnsigned['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "Assert.assertEquals(result1,result2)@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "long(( arr1 = new long((((@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "testCompareLongsAsLittleEndian['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "Platform.putLong(arr1,arrayOffset + 4,0xa000000000000000L)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "long arrayOffset = 12@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "int result1 = binaryComparator.compare(arr1,arrayOffset + 4,8,arr2,arrayOffset + 4,8)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testCompareLongsAsLittleEndian['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "Platform.putLong(arr2,arrayOffset + 4,0x0000000000000000L)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "int result1 = binaryComparator.compare(arr1,arrayOffset,8,arr2,arrayOffset + 4,8)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "long(( arr2 = new long((((@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Platform.putLong(arr2,arrayOffset + 4,0x0000000000000001L)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "long(( arr4 = new long((((@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Platform.putLong(arr1,arrayOffset,0x0100000000000000L)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "Platform.putLong(arr3,arrayOffset,0xa000000000000000L)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Platform.putLong(arr3,arrayOffset,0x0100000000000000L)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "int result2 = binaryComparator.compare(arr3,arrayOffset,8,arr4,arrayOffset,8)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Platform.putLong(arr4,arrayOffset,0x0000000000000001L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Platform.putLong(arr4,arrayOffset,0x0000000000000000L)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "long(( arr3 = new long((((@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8->19 [style = dashed, label="0"];
3->18 [style = solid, label="arrayOffset"];
13->10 [style = solid, label="arrayOffset"];
2->20 [style = dashed, label="0"];
9->10 [style = solid, label="arr4"];
13->2 [style = solid, label="arrayOffset"];
3->19 [style = solid, label="arrayOffset"];
5->20 [style = bold, label=""];
20->9 [style = bold, label=""];
16->10 [style = bold, label=""];
11->15 [style = dashed, label="0"];
12->16 [style = dashed, label="0"];
4->15 [style = bold, label=""];
9->12 [style = solid, label="arr4"];
6->19 [style = solid, label="arr1"];
3->2 [style = solid, label="arrayOffset"];
3->6 [style = bold, label=""];
3->10 [style = solid, label="arrayOffset"];
6->19 [style = bold, label=""];
2->9 [style = bold, label=""];
3->8 [style = solid, label="arrayOffset"];
3->13 [style = dashed, label="0"];
15->18 [style = bold, label=""];
3->12 [style = solid, label="arrayOffset"];
3->20 [style = solid, label="arrayOffset"];
9->16 [style = bold, label=""];
7->3 [style = bold, label=""];
3->0 [style = solid, label="arrayOffset"];
3->16 [style = solid, label="arrayOffset"];
5->2 [style = solid, label="arr3"];
3->15 [style = solid, label="arrayOffset"];
9->16 [style = solid, label="arr4"];
5->2 [style = bold, label=""];
3->11 [style = solid, label="arrayOffset"];
11->0 [style = bold, label=""];
12->10 [style = bold, label=""];
6->0 [style = solid, label="arr1"];
13->11 [style = solid, label="arrayOffset"];
13->12 [style = solid, label="arrayOffset"];
6->18 [style = solid, label="arr1"];
10->1 [style = solid, label="result2"];
18->5 [style = bold, label=""];
0->1 [style = solid, label="result1"];
4->15 [style = solid, label="arr2"];
6->8 [style = bold, label=""];
4->0 [style = solid, label="arr2"];
17->3 [style = bold, label=""];
0->18 [style = dashed, label="0"];
9->12 [style = bold, label=""];
19->4 [style = bold, label=""];
8->4 [style = bold, label=""];
13->6 [style = bold, label=""];
14->13 [style = bold, label=""];
13->8 [style = solid, label="arrayOffset"];
4->11 [style = bold, label=""];
10->1 [style = bold, label=""];
6->8 [style = solid, label="arr1"];
4->18 [style = solid, label="arr2"];
4->11 [style = solid, label="arr2"];
5->10 [style = solid, label="arr3"];
13->0 [style = solid, label="arrayOffset"];
5->20 [style = solid, label="arr3"];
0->5 [style = bold, label=""];
18->1 [style = solid, label="result1"];
}
