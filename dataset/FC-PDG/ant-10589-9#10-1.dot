digraph {
3 [style = filled, label = "rebuildTaskClassDefinitions = false@@@16@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "return taskClassDefinitions@@@20@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "getTaskDefinitions['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
23 [style = filled, label = "typeClassDefinitions.clear()@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "getDataTypeDefinitions['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "taskClassDefinitions@@@3@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "antTypeTable.entrySet()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "typeClassDefinitions@@@3@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
2 [style = filled, label = ".isAssignableFrom(clazz)@@@12@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
6 [style = filled, label = "taskClassDefinitions.clear()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "getTaskDefinitions['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Map.Entry<String,AntTypeDefinition> e@@@7@@@['1', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "antTypeTable.entrySet().stream().filter(null).forEach(null)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "return taskClassDefinitions@@@12@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "rebuildTypeClassDefinitions@@@5@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "Map.Entry<String,AntTypeDefinition> e@@@7@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "rebuildTaskClassDefinitions@@@5@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "clazz == null@@@9@@@['1', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final Class<?> clazz = e.getValue().getExposedClass(project)@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "antTypeTable@@@4@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "return typeClassDefinitions@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "rebuildTypeClassDefinitions = false@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "typeClassDefinitions.put(e.getKey(),e.getValue().getTypeClass(project))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "taskClassDefinitions.put(e.getKey(),e.getValue().getTypeClass(project))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
17 [style = filled, label = "!.isAssignableFrom(clazz)@@@12@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "rebuildTaskClassDefinitions = false@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
0->3 [style = bold, label=""];
14->16 [style = bold, label=""];
17->10 [style = bold, label=""];
12->3 [style = dotted, label="true"];
17->25 [style = bold, label=""];
11->20 [style = dashed, label="0"];
24->25 [style = dotted, label="true"];
7->12 [style = bold, label=""];
12->8 [style = dotted, label="true"];
2->1 [style = bold, label=""];
0->17 [style = bold, label=""];
2->3 [style = bold, label=""];
24->17 [style = dotted, label="true"];
22->7 [style = dotted, label="true"];
0->2 [style = bold, label=""];
12->2 [style = dotted, label="true"];
12->11 [style = bold, label=""];
1->3 [style = bold, label=""];
3->11 [style = bold, label=""];
24->9 [style = dotted, label="true"];
4->7 [style = dotted, label="true"];
1->19 [style = dashed, label="0"];
19->10 [style = bold, label=""];
12->16 [style = bold, label=""];
4->22 [style = dashed, label="0"];
10->0 [style = solid, label="clazz"];
2->10 [style = bold, label=""];
12->6 [style = bold, label=""];
2->17 [style = dashed, label="0"];
7->24 [style = dotted, label="true"];
22->7 [style = bold, label=""];
17->19 [style = bold, label=""];
4->7 [style = bold, label=""];
19->25 [style = bold, label=""];
7->12 [style = dotted, label="true"];
24->20 [style = bold, label=""];
24->10 [style = dotted, label="true"];
12->14 [style = dotted, label="true"];
7->24 [style = bold, label=""];
0->10 [style = bold, label=""];
12->13 [style = dotted, label="true"];
25->20 [style = bold, label=""];
18->22 [style = bold, label=""];
24->23 [style = dotted, label="true"];
12->10 [style = dotted, label="true"];
12->6 [style = dotted, label="true"];
0->25 [style = bold, label=""];
2->1 [style = dotted, label="true"];
10->2 [style = solid, label="clazz"];
6->10 [style = bold, label=""];
6->13 [style = bold, label=""];
24->0 [style = dotted, label="true"];
10->0 [style = bold, label=""];
5->4 [style = bold, label=""];
17->19 [style = dotted, label="true"];
15->4 [style = bold, label=""];
9->13 [style = dashed, label="0"];
23->10 [style = bold, label=""];
12->0 [style = dotted, label="true"];
24->21 [style = dotted, label="true"];
1->10 [style = bold, label=""];
13->14 [style = bold, label=""];
12->24 [style = dashed, label="0"];
6->23 [style = dashed, label="0"];
12->9 [style = dotted, label="true"];
24->23 [style = bold, label=""];
3->25 [style = dashed, label="0"];
}
