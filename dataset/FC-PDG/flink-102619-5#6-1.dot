digraph {
23 [style = filled, label = "testHarness.processWatermark(new Watermark(7400))@@@19@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),14500))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,actual,new Tuple3ResultSortComparator())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
51 [style = filled, label = "sideActual = testHarness.getSideOutput(lateOutputTag)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),11600))@@@25@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "testHarness.processWatermark(new Watermark(1999))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),10000))@@@29@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),2000))@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(gapSize)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new ReducedSessionWindowFunction()),PurgingTrigger.of(EventTimeTrigger.create()),lateness,lateOutputTag)@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
35 [style = filled, label = "ReducingStateDescriptor<Tuple2<String,Integer>> stateDesc = new ReducingStateDescriptor<>(\"window-contents\",new SumReducer(),inputType.createSerializer(new ExecutionConfig()))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testHarness.processWatermark(new Watermark(11501))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),7000))@@@21@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(GAP_SIZE)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new ReducedSessionWindowFunction()),PurgingTrigger.of(EventTimeTrigger.create()),LATENESS,null)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "actual = testHarness.getOutput()@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),1000))@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-5\",1000L,11500L),11499))@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testDropDueToLatenessSessionWithLatenessPurgingTrigger['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "expected.add(new Watermark(20000))@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "testHarness.processWatermark(new Watermark(14600))@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testHarness.processWatermark(new Watermark(4998))@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "WindowOperator<String,Tuple2<String,Integer>,Tuple2<String,Integer>,Tuple3<String,Long,Long>,TimeWindow> operator = new WindowOperator<>(EventTimeSessionWindows.withGap(Time.seconds(GAP_SIZE)),new TimeWindow.Serializer(),new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO.createSerializer(new ExecutionConfig()),stateDesc,new InternalSingleValueWindowFunction<>(new ReducedSessionWindowFunction()),PurgingTrigger.of(EventTimeTrigger.create()),LATENESS,lateOutputTag)@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "testHarness.open()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "expected.add(new Watermark(20000))@@@38@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "final int gapSize = 3@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
34 [style = filled, label = "testHarness.processWatermark(new Watermark(20000))@@@36@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "final long lateness = 10@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "expected.add(new Watermark(14600))@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "assertEquals(null,sideActual)@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "final int GAP_SIZE = 3@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "expected.add(new Watermark(11501))@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "final long LATENESS = 10@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
43 [style = filled, label = "testHarness.close()@@@45@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "ConcurrentLinkedQueue<StreamRecord<Tuple2<String,Integer>>> sideActual = testHarness.getSideOutput(lateOutputTag)@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",1000L,17500L),17499))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "final long LATENESS = 10000@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "ConcurrentLinkedQueue<Object> actual = testHarness.getOutput()@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",11600L,14600L),14599))@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),8500))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "TypeInformation<Tuple2<String,Integer>> inputType = TypeInfoParser.parse(\"Tuple2<String, Integer>\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "expected.add(new Watermark(1999))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "OneInputStreamOperatorTestHarness<Tuple2<String,Integer>,Tuple3<String,Long,Long>> testHarness = new KeyedOneInputStreamOperatorTestHarness<>(operator,new TupleKeySelector(),BasicTypeInfo.STRING_TYPE_INFO)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "expected.add(new Watermark(4998))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",1000L,14600L),14599))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),14500))@@@35@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",10000L,14600L),14599))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "testNotSideOutputDueToLatenessSessionWithHugeLatenessPurgingTrigger['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "testHarness.processWatermark(new Watermark(20000))@@@32@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "TestHarnessUtil.assertOutputEqualsSorted(\"Output was not correct.\",expected,actual,new Tuple3ResultSortComparator())@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "ConcurrentLinkedQueue<Object> expected = new ConcurrentLinkedQueue<>()@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "testHarness.processElement(new StreamRecord<>(new Tuple2<>(\"key2\",1),4500))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "expected.add(new StreamRecord<>(new Tuple3<>(\"key2-1\",10000L,17500L),17499))@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "assertEquals(null,sideActual)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "ConcurrentLinkedQueue<Object> actual = testHarness.getOutput()@@@37@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "expected.add(new Watermark(100000))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "testHarness.processWatermark(new Watermark(100000))@@@39@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "testDropDueToLatenessSessionWithLatenessPurgingTrigger['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "expected.add(new Watermark(7400))@@@20@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->55 [style = dashed, label="0"];
36->7 [style = solid, label="operator"];
35->36 [style = solid, label="stateDesc"];
55->51 [style = bold, label=""];
38->31 [style = bold, label=""];
52->13 [style = bold, label=""];
5->28 [style = bold, label=""];
40->38 [style = bold, label=""];
22->30 [style = bold, label=""];
37->9 [style = bold, label=""];
4->48 [style = solid, label="expected"];
13->17 [style = bold, label=""];
31->35 [style = bold, label=""];
35->50 [style = bold, label=""];
34->26 [style = bold, label=""];
9->56 [style = dashed, label="0"];
25->19 [style = bold, label=""];
4->8 [style = bold, label=""];
17->36 [style = solid, label="LATENESS"];
32->3 [style = bold, label=""];
44->47 [style = bold, label=""];
54->46 [style = solid, label="sideActual"];
2->16 [style = bold, label=""];
51->49 [style = solid, label="sideActual"];
26->25 [style = solid, label="actual"];
7->11 [style = bold, label=""];
30->34 [style = bold, label=""];
42->31 [style = bold, label=""];
13->40 [style = dashed, label="0"];
56->25 [style = bold, label=""];
36->50 [style = dashed, label="0"];
23->14 [style = bold, label=""];
38->39 [style = solid, label="lateness"];
47->54 [style = bold, label=""];
39->7 [style = bold, label=""];
10->0 [style = bold, label=""];
4->45 [style = solid, label="expected"];
21->23 [style = bold, label=""];
36->39 [style = dashed, label="0"];
9->22 [style = bold, label=""];
27->18 [style = bold, label=""];
18->24 [style = bold, label=""];
13->42 [style = bold, label=""];
11->4 [style = bold, label=""];
35->39 [style = bold, label=""];
17->42 [style = dashed, label="0"];
17->38 [style = dashed, label="0"];
29->21 [style = bold, label=""];
34->56 [style = bold, label=""];
48->46 [style = bold, label=""];
46->30 [style = bold, label=""];
19->53 [style = bold, label=""];
41->40 [style = bold, label=""];
5->44 [style = bold, label=""];
51->45 [style = bold, label=""];
6->13 [style = bold, label=""];
13->36 [style = solid, label="GAP_SIZE"];
16->5 [style = bold, label=""];
4->25 [style = solid, label="expected"];
14->27 [style = bold, label=""];
40->39 [style = solid, label="gapSize"];
24->1 [style = bold, label=""];
33->37 [style = bold, label=""];
13->50 [style = solid, label="GAP_SIZE"];
50->7 [style = solid, label="operator"];
8->12 [style = bold, label=""];
53->55 [style = bold, label=""];
20->29 [style = bold, label=""];
39->7 [style = solid, label="operator"];
45->49 [style = bold, label=""];
17->31 [style = bold, label=""];
26->25 [style = bold, label=""];
0->2 [style = bold, label=""];
12->15 [style = bold, label=""];
54->48 [style = bold, label=""];
50->7 [style = bold, label=""];
47->48 [style = solid, label="actual"];
49->43 [style = bold, label=""];
3->20 [style = bold, label=""];
35->50 [style = solid, label="stateDesc"];
28->33 [style = bold, label=""];
36->7 [style = bold, label=""];
28->44 [style = dashed, label="0"];
35->39 [style = solid, label="stateDesc"];
42->50 [style = solid, label="LATENESS"];
35->36 [style = bold, label=""];
15->32 [style = bold, label=""];
1->10 [style = bold, label=""];
55->45 [style = solid, label="actual"];
}
