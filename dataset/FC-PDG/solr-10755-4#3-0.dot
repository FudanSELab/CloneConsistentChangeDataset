digraph {
2 [style = filled, label = "indexr(id,\"5\",\"rating_f\",\"3.5\",\"personId_i\",\"15\")@@@27@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
37 [style = filled, label = "clearData()@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "indexr(id,\"8\",\"rating_f\",\"4\",\"personId_i\",\"18\")@@@30@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
71 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (16,'Madison','NC')\")@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertOrderOf(tuples,\"NAME\",\"Emma\",\"Mia\",\"Olivia\")@@@28@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NP', 'Nepal')\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(collection1, fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID as PERSONID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\", get_column_name=true),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
61 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@30@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
66 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(COLLECTION,cluster.getZkServer().getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"select\",).withFunctionName(\"innerJoin\",).withFunctionName(\"jdbc\",)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
50 [style = filled, label = "List<Tuple> tuples@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (11,'Emma','NL')\")@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
41 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (19,'Olivia','NL')\")@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@41@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "indexr(id,\"3\",\"rating_f\",\"2.2\",\"personId_i\",\"13\")@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
67 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(\" + COLLECTION + \", fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID as PERSONID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"ID asc\", get_column_name=true),\" + \" ID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
30 [style = filled, label = "testJDBCSolrInnerJoinExpressionWithProperties['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "indexr(id,\"10\",\"rating_f\",\"4.8\",\"personId_i\",\"20\")@@@32@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "tuples = getTuples(stream)@@@47@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Connection connection = DriverManager.getConnection(\"jdbc:hsqldb:mem:.\")@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
78 [style = filled, label = "stream = new JDBCStream(\"jdbc:hsqldb:mem:.\",\"select PEOPLE.ID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE where COUNTRIES.CODE = 'NL' order by PEOPLE.ID\",new FieldComparator(\"ID\",ComparatorOrder.ASCENDING))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NL', 'Netherlands')\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@43@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "statement.close()@@@20@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
75 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (13,'Hailey','NG')\")@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (17,'Mia','NL')\")@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(10,tuples.size())@@@48@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "List<Tuple> tuples@@@24@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
24 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@42@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@37@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
57 [style = filled, label = "TupleStream stream@@@23@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
43 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('US', 'United States')\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (12,'Grace','NI')\")@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "indexr(id,\"6\",\"rating_f\",\"3\",\"personId_i\",\"16\")@@@28@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
3 [style = filled, label = "connection.close()@@@21@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (14,'Isabella','NL')\")@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@51@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "Statement statement = connection.createStatement()@@@5@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (19,'Olivia','NL')\")@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",zkServer.getZkAddress()).withFunctionName(\"search\",).withFunctionName(\"select\",).withFunctionName(\"innerJoin\",).withFunctionName(\"jdbc\",)@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "indexr(id,\"7\",\"rating_f\",\"3\",\"personId_i\",\"17\")@@@29@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
28 [style = filled, label = "indexr(id,\"1\",\"rating_f\",\"3.5\",\"personId_i\",\"11\")@@@23@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
60 [style = filled, label = "assertEquals(10,tuples.size())@@@28@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
62 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@29@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
76 [style = filled, label = "testJDBCJoin['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@44@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@32@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
26 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (15,'Lily','NL')\")@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
47 [style = filled, label = "TupleStream stream@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (13,'Hailey','NL')\")@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "indexr(id,\"9\",\"rating_f\",\"4.1\",\"personId_i\",\"19\")@@@31@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (17,'Mia','US')\")@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
64 [style = filled, label = "String expression@@@22@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
74 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (20,'Samantha','NR')\")@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "stream = factory.constructStream(expression)@@@46@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "indexr(id,\"2\",\"rating_f\",\"5\",\"personId_i\",\"12\")@@@24@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
48 [style = filled, label = "commit()@@@33@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
33 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@40@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('US', 'United States')\")@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
72 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (14,'Isabella','NF')\")@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertOrderOf(tuples,\"personId\",11,12,13,14,15,16,17,18,19,20)@@@49@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "assertEquals(3,tuples.size())@@@26@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (16,'Madison','US')\")@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "stream = factory.constructStream(expression)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "stream = factory.constructStream(expression)@@@26@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
79 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (18,'Natalie','NZ')\")@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "statement.executeUpdate(\"insert into COUNTRIES (CODE,COUNTRY_NAME) values ('NO', 'Norway')\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "assertOrderOf(tuples,\"personName\",\"Emma\",\"Grace\",\"Hailey\",\"Isabella\",\"Lily\",\"Madison\",\"Mia\",\"Natalie\",\"Olivia\",\"Samantha\")@@@31@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
13 [style = filled, label = "assertOrderOf(tuples,\"rating\",3.5d,5d,2.2d,4.3d,3.5d,3d,3d,4d,4.1d,4.8d)@@@50@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(\" + COLLECTION + \", fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID as PERSONID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"PERSONID asc\", get_column_name=false),\" + \" PERSONID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@33@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
77 [style = filled, label = "tuples = getTuples(stream)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (20,'Samantha','US')\")@@@20@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "testJDBCSolrInnerJoinExpressionWithProperties['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
70 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (15,'Lily','NE')\")@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "tuples = getTuples(stream)@@@27@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "assertOrderOf(tuples,\"country\",\"Netherlands\",\"United States\",\"Netherlands\",\"Netherlands\",\"Netherlands\",\"United States\",\"United States\",\"Netherlands\",\"Netherlands\",\"United States\")@@@52@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "new UpdateRequest().add(id,\"1\",\"rating_f\",\"3.5\",\"personId_i\",\"11\").add(id,\"2\",\"rating_f\",\"5\",\"personId_i\",\"12\").add(id,\"3\",\"rating_f\",\"2.2\",\"personId_i\",\"13\").add(id,\"4\",\"rating_f\",\"4.3\",\"personId_i\",\"14\").add(id,\"5\",\"rating_f\",\"3.5\",\"personId_i\",\"15\").add(id,\"6\",\"rating_f\",\"3\",\"personId_i\",\"16\").add(id,\"7\",\"rating_f\",\"3\",\"personId_i\",\"17\").add(id,\"8\",\"rating_f\",\"4\",\"personId_i\",\"18\").add(id,\"9\",\"rating_f\",\"4.1\",\"personId_i\",\"19\").add(id,\"10\",\"rating_f\",\"4.8\",\"personId_i\",\"20\").commit(cluster.getSolrClient(),COLLECTION)@@@21@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
69 [style = filled, label = "assertOrderOf(tuples,\"ID\",11,17,19)@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "indexr(id,\"4\",\"rating_f\",\"4.3\",\"personId_i\",\"14\")@@@26@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
46 [style = filled, label = "expression = \"innerJoin(\" + \" select(\" + \" search(collection1, fl=\"personId_i,rating_f\", q=\"rating_f:*\", sort=\"personId_i asc\"),\" + \" personId_i as personId,\" + \" rating_f as rating\" + \" ),\" + \" select(\" + \" jdbc(connection=\"jdbc:hsqldb:mem:.\", sql=\"select PEOPLE.ID as PERSONID, PEOPLE.NAME, COUNTRIES.COUNTRY_NAME from PEOPLE inner join COUNTRIES on PEOPLE.COUNTRY_CODE = COUNTRIES.CODE order by PEOPLE.ID\", sort=\"PERSONID asc\", get_column_name=false),\" + \" PERSONID as personId,\" + \" NAME as personName,\" + \" COUNTRY_NAME as country\" + \" ),\" + \" on=\"personId\"\" + \")\"@@@45@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
5 [style = filled, label = "statement.executeUpdate(\"insert into PEOPLE (ID, NAME, COUNTRY_CODE) values (18,'Natalie','NL')\")@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28->6 [style = bold, label=""];
47->51 [style = solid, label="tuples"];
21->74 [style = bold, label=""];
79->21 [style = bold, label=""];
29->17 [style = solid, label="stream"];
49->14 [style = bold, label=""];
20->0 [style = bold, label=""];
4->15 [style = bold, label=""];
62->61 [style = bold, label=""];
57->58 [style = bold, label=""];
56->53 [style = solid, label="tuples"];
69->68 [style = bold, label=""];
73->75 [style = bold, label=""];
77->17 [style = bold, label=""];
77->69 [style = solid, label="tuples"];
33->17 [style = dashed, label="0"];
67->52 [style = solid, label="expression"];
17->24 [style = solid, label="tuples"];
40->67 [style = dashed, label="0"];
4->70 [style = dashed, label="0"];
45->25 [style = bold, label=""];
26->72 [style = dashed, label="0"];
33->18 [style = bold, label=""];
53->65 [style = bold, label=""];
70->71 [style = bold, label=""];
43->1 [style = bold, label=""];
2->36 [style = bold, label=""];
17->69 [style = bold, label=""];
76->37 [style = bold, label=""];
42->3 [style = bold, label=""];
14->9 [style = bold, label=""];
47->33 [style = solid, label="tuples"];
32->20 [style = bold, label=""];
67->52 [style = bold, label=""];
37->66 [style = dashed, label="0"];
13->34 [style = bold, label=""];
24->19 [style = bold, label=""];
5->80 [style = dashed, label="0"];
46->11 [style = solid, label="expression"];
12->34 [style = solid, label="tuples"];
41->21 [style = bold, label=""];
0->73 [style = dashed, label="0"];
60->62 [style = bold, label=""];
9->48 [style = bold, label=""];
1->35 [style = bold, label=""];
31->2 [style = bold, label=""];
11->12 [style = bold, label=""];
54->66 [style = bold, label=""];
23->8 [style = bold, label=""];
26->4 [style = bold, label=""];
17->10 [style = solid, label="tuples"];
16->47 [style = solid, label="stream"];
22->49 [style = bold, label=""];
74->42 [style = bold, label=""];
80->79 [style = bold, label=""];
59->16 [style = solid, label="expression"];
48->16 [style = bold, label=""];
56->61 [style = solid, label="tuples"];
37->45 [style = bold, label=""];
58->67 [style = bold, label=""];
39->74 [style = dashed, label="0"];
12->13 [style = solid, label="tuples"];
39->42 [style = bold, label=""];
64->57 [style = bold, label=""];
40->29 [style = bold, label=""];
25->38 [style = bold, label=""];
27->26 [style = bold, label=""];
18->24 [style = bold, label=""];
29->17 [style = bold, label=""];
17->19 [style = solid, label="tuples"];
56->60 [style = bold, label=""];
37->25 [style = bold, label=""];
41->79 [style = dashed, label="0"];
77->68 [style = solid, label="tuples"];
35->32 [style = bold, label=""];
19->10 [style = bold, label=""];
3->47 [style = bold, label=""];
52->56 [style = solid, label="stream"];
6->44 [style = bold, label=""];
47->50 [style = bold, label=""];
27->75 [style = dashed, label="0"];
51->29 [style = bold, label=""];
3->28 [style = bold, label=""];
71->80 [style = bold, label=""];
17->18 [style = solid, label="tuples"];
21->39 [style = bold, label=""];
24->68 [style = dashed, label="0"];
66->55 [style = bold, label=""];
55->43 [style = bold, label=""];
75->72 [style = bold, label=""];
12->7 [style = solid, label="tuples"];
44->31 [style = bold, label=""];
38->43 [style = bold, label=""];
8->13 [style = bold, label=""];
0->27 [style = bold, label=""];
16->47 [style = bold, label=""];
63->64 [style = bold, label=""];
72->70 [style = bold, label=""];
18->69 [style = dashed, label="0"];
10->46 [style = bold, label=""];
34->7 [style = bold, label=""];
52->56 [style = bold, label=""];
20->73 [style = bold, label=""];
56->62 [style = solid, label="tuples"];
15->71 [style = dashed, label="0"];
17->33 [style = bold, label=""];
59->16 [style = bold, label=""];
30->37 [style = bold, label=""];
40->29 [style = solid, label="expression"];
15->5 [style = bold, label=""];
46->11 [style = bold, label=""];
56->65 [style = solid, label="tuples"];
78->77 [style = bold, label=""];
61->53 [style = bold, label=""];
5->41 [style = bold, label=""];
21->63 [style = bold, label=""];
47->17 [style = solid, label="tuples"];
50->51 [style = bold, label=""];
50->78 [style = bold, label=""];
50->40 [style = bold, label=""];
11->12 [style = solid, label="stream"];
12->8 [style = solid, label="tuples"];
47->29 [style = solid, label="tuples"];
65->59 [style = bold, label=""];
46->59 [style = dashed, label="0"];
12->23 [style = bold, label=""];
78->77 [style = solid, label="stream"];
36->22 [style = bold, label=""];
}
