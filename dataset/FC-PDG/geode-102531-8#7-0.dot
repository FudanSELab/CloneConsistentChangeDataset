digraph {
32 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final CompositeOutputStream cos = new CompositeOutputStream(streamOne,streamTwo)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertThat(cos.size()).isEqualTo(1)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "final OutputStream streamOne = mock(,\"streamOne\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(1)@@@26@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a581,2,3)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "InOrder inOrderStreams = inOrder(streamOne)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(2)@@@22@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
16 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(9)@@@27@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "testNewCompositeOutputStreamWithNoStreams['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "cos.write(9)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).close()@@@30@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a53c,0,2)@@@25@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
7 [style = filled, label = "final OutputStream streamTwo = mock(,\"streamTwo\")@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "cos.close()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "inOrderStreams.verify(streamOne,times(2)).flush()@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "verifyNoMoreInteractions(streamTwo)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(3)@@@23@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cos.write(9)@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "cos.close()@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "assertThat(cos.size()).isEqualTo(0)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "cos.removeOutputStream(streamTwo)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "assertThat(cos.isEmpty()).isTrue()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertThat(cos.size()).isEqualTo(2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a594)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(cos.isEmpty()).isFalse()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "cos.flush()@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a523,2,3)@@@22@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
18 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(4)@@@24@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "testRemoveOutputStreamWithTwoStreams['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
35 [style = filled, label = "cos.flush()@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "inOrderStreams.verify(streamOne,times(1)).write(0)@@@25@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "cos.write(new byte((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@18a4e9,2,3)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7->13 [style = bold, label=""];
9->22 [style = bold, label=""];
16->3 [style = bold, label=""];
28->29 [style = bold, label=""];
17->26 [style = bold, label=""];
30->33 [style = bold, label=""];
29->30 [style = bold, label=""];
4->6 [style = bold, label=""];
35->22 [style = bold, label=""];
31->32 [style = bold, label=""];
0->2 [style = bold, label=""];
27->3 [style = bold, label=""];
7->15 [style = solid, label="streamTwo"];
1->20 [style = bold, label=""];
5->15 [style = bold, label=""];
14->10 [style = bold, label=""];
4->27 [style = dashed, label="0"];
19->11 [style = bold, label=""];
10->7 [style = bold, label=""];
20->5 [style = bold, label=""];
10->13 [style = solid, label="streamOne"];
7->13 [style = solid, label="streamTwo"];
13->19 [style = bold, label=""];
11->0 [style = bold, label=""];
21->9 [style = bold, label=""];
18->4 [style = bold, label=""];
2->21 [style = bold, label=""];
6->16 [style = bold, label=""];
12->24 [style = dashed, label="0"];
3->17 [style = bold, label=""];
25->10 [style = bold, label=""];
7->0 [style = solid, label="streamTwo"];
12->23 [style = bold, label=""];
22->1 [style = bold, label=""];
34->35 [style = bold, label=""];
10->8 [style = solid, label="streamOne"];
32->28 [style = bold, label=""];
33->34 [style = bold, label=""];
24->27 [style = bold, label=""];
15->8 [style = bold, label=""];
8->12 [style = bold, label=""];
23->18 [style = bold, label=""];
8->24 [style = bold, label=""];
}
