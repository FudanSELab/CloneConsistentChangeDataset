digraph {
17 [style = filled, label = "assertEquals(0,auxResult.getCrossRefEntriesCount())@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertEquals(0,auxResult.getUnresolvedKeysCount())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ParserResult result = new BibtexParser(importFormatPreferences,new DummyFileUpdateMonitor()).parse(originalReader)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
4 [style = filled, label = "AuxParser auxParser = new AuxParser(auxFile.getAbsolutePath(),result.getDatabase())@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "assertEquals(0,newDB.getEntries().size())@@@8@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "BibDatabase newDB = auxResult.getGeneratedBibDatabase()@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "duplicateBibDatabaseConfiguration['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "AuxParserResult auxResult = auxParser.parse()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "duplicateBibDatabaseConfiguration['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "AuxParser auxParser = new AuxParser(\"unknownfile.bib\",new BibDatabase())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "assertEquals(0,auxResult.getFoundKeysInAux())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "ParserResult result = new BibtexParser(importFormatPreferences).parse(originalReader)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "AuxParser auxParser = new DefaultAuxParser(result.getDatabase())@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "assertEquals(1,db.getStringCount())@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Path auxFile = Paths.get(.getResource(\"paper.aux\").toURI())@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertFalse(auxResult.getGeneratedBibDatabase().hasEntries())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "testFileNotFound['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertEquals(auxResult.getFoundKeysInAux() + auxResult.getCrossRefEntriesCount(),auxResult.getResolvedKeysCount() + auxResult.getUnresolvedKeysCount())@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "File auxFile = Paths.get(.getResource(\"paper.aux\").toURI()).toFile()@@@4@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "BibDatabase db = auxResult.getGeneratedBibDatabase()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "assertEquals(0,auxResult.getResolvedKeysCount())@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertEquals(Optional.of(\"\"Maintained by \" # maintainer\"),db.getPreamble())@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "AuxParserResult auxResult = auxParser.parse(auxFile)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "InputStream originalStream = .getResourceAsStream(\"config.bib\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13->10 [style = bold, label=""];
2->20 [style = bold, label=""];
9->11 [style = bold, label=""];
15->21 [style = bold, label=""];
18->15 [style = bold, label=""];
1->3 [style = bold, label=""];
8->6 [style = bold, label=""];
4->2 [style = bold, label=""];
19->2 [style = bold, label=""];
16->19 [style = bold, label=""];
12->6 [style = bold, label=""];
3->4 [style = bold, label=""];
0->7 [style = bold, label=""];
1->13 [style = dashed, label="0"];
6->1 [style = bold, label=""];
4->9 [style = dashed, label="0"];
7->5 [style = bold, label=""];
2->0 [style = bold, label=""];
11->0 [style = bold, label=""];
23->22 [style = bold, label=""];
20->23 [style = bold, label=""];
0->21 [style = dashed, label="0"];
6->13 [style = bold, label=""];
21->16 [style = bold, label=""];
22->17 [style = bold, label=""];
2->11 [style = dashed, label="0"];
13->11 [style = solid, label="auxFile"];
14->18 [style = bold, label=""];
10->9 [style = bold, label=""];
3->10 [style = dashed, label="0"];
}
