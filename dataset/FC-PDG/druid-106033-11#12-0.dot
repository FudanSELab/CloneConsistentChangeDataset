digraph {
4 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "VirtualColumns virtualColumns = VirtualColumns.create(ImmutableList.of(new ExpressionVirtualColumn(\"v1\",\"concat('virtual-column-', \"channel\")\",ValueType.STRING,TestExprMacroTable.INSTANCE)))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assert.assertEquals(expectedFilterSplit,actualFilterSplit)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),joinableClauses,joinFilterPreAnalysis)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "JoinTestHelper.verifyCursors(adapter.makeCursors(originalFilter,Intervals.ETERNITY,virtualColumns,Granularities.ALL,false,null),ImmutableList.of(\"page\",FACT_TO_REGION_PREFIX + \"regionName\",REGION_TO_COUNTRY_PREFIX + \"countryName\"),ImmutableList.of(new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9713e1,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9713e7,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9713ed,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9713f3,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9713f9,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@9713ff,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971405,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97140b,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971411,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971417,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97141d,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971423,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@971429,new Object((((edu.fdu.CPPDG.tinypdg.pe.ExpressionInfo@97142f))@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(VirtualColumns.EMPTY,null,null),originalFilter,true,true)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "Filter originalFilter = new SelectorFilter(\"channel\",\"#en.wikipedia\")@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "List<JoinableClause> joinableClauses = ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT))@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(adapter,adapter.determineBaseColumnsWithPreAndPostJoinVirtualColumns(virtualColumns,null,null),originalFilter,true,true)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\"),null,ImmutableList.of())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "HashJoinSegmentStorageAdapter adapter = new HashJoinSegmentStorageAdapter(factSegment.asStorageAdapter(),ImmutableList.of(factToRegion(JoinType.LEFT),regionToCountry(JoinType.LEFT)))@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannel['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "test_filterPushDown_factToRegionToCountryLeftFilterOnChannelVirtualColumn['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "JoinFilterSplit actualFilterSplit = JoinFilterAnalyzer.splitFilter(joinFilterPreAnalysis)@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "Filter originalFilter = new AndFilter(ImmutableList.of(new SelectorFilter(\"v1\",\"virtual-column-#en.wikipedia\")))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "JoinFilterPreAnalysis joinFilterPreAnalysis = simplePreAnalysis(joinableClauses,originalFilter)@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "JoinFilterSplit expectedFilterSplit = new JoinFilterSplit(new SelectorFilter(\"channel\",\"#en.wikipedia\"),null,ImmutableList.of())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9->7 [style = solid, label="joinableClauses"];
13->14 [style = solid, label="originalFilter"];
5->14 [style = solid, label="adapter"];
12->5 [style = bold, label=""];
4->16 [style = dashed, label="0"];
2->1 [style = bold, label=""];
7->8 [style = solid, label="joinFilterPreAnalysis"];
1->3 [style = bold, label=""];
15->14 [style = solid, label="virtualColumns"];
3->6 [style = bold, label=""];
2->9 [style = bold, label=""];
9->7 [style = bold, label=""];
7->8 [style = bold, label=""];
2->4 [style = solid, label="originalFilter"];
10->6 [style = bold, label=""];
11->2 [style = bold, label=""];
15->16 [style = solid, label="virtualColumns"];
8->1 [style = bold, label=""];
6->4 [style = bold, label=""];
5->2 [style = bold, label=""];
15->17 [style = bold, label=""];
7->10 [style = solid, label="joinFilterPreAnalysis"];
17->14 [style = bold, label=""];
10->6 [style = solid, label="actualFilterSplit"];
2->13 [style = dashed, label="0"];
13->16 [style = solid, label="originalFilter"];
5->13 [style = bold, label=""];
17->4 [style = solid, label="expectedFilterSplit"];
2->3 [style = solid, label="originalFilter"];
14->4 [style = solid, label="actualFilterSplit"];
3->10 [style = dashed, label="0"];
13->15 [style = bold, label=""];
3->6 [style = solid, label="actualFilterSplit"];
1->10 [style = bold, label=""];
2->7 [style = solid, label="originalFilter"];
5->3 [style = solid, label="adapter"];
1->6 [style = solid, label="expectedFilterSplit"];
4->16 [style = bold, label=""];
9->8 [style = solid, label="joinableClauses"];
0->5 [style = bold, label=""];
14->4 [style = bold, label=""];
}
