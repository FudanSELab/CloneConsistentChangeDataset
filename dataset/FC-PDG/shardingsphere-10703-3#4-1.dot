digraph {
1 [style = filled, label = "assertThat(resultMerger.merge(Collections.singletonList(createQueryResult()),selectStatementContext,buildSchema()),instanceOf())@@@5@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "MySQLSelectStatement selectStatement = (MySQLSelectStatement)buildSelectStatement(new MySQLSelectStatement())@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "MergedResult actual = resultMerger.merge(createQueryResults(),selectStatementContext,buildSchema())@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "assertThat(((TopAndRowNumberDecoratorMergedResult)actual).getMergedResult(),instanceOf())@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "assertBuildIteratorStreamMergedResultWithLimit['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "assertThat(actual,instanceOf())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
14 [style = filled, label = "assertBuildIteratorStreamMergedResultWithSQLServerLimit['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(Collections.singletonMap(DefaultSchema.LOGIC_NAME,metaData),Collections.emptyList(),selectStatement,DefaultSchema.LOGIC_NAME)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
17 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new SQLServerSelectStatement()),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralLimitValueSegment(0,0,1),null,Collections.emptyList()))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SelectStatementContext selectStatementContext = new SelectStatementContext(buildSelectStatement(new MySQLSelectStatement()),new GroupByContext(Collections.emptyList()),new OrderByContext(Collections.emptyList(),false),new ProjectionsContext(0,0,false,Collections.emptyList()),new PaginationContext(new NumberLiteralLimitValueSegment(0,0,1),null,Collections.emptyList()))@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertThat(resultMerger.merge(Collections.singletonList(createQueryResult()),selectStatementContext,buildSchema()),instanceOf())@@@10@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "assertBuildIteratorStreamMergedResultWithLimit['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "when(metaData.getSchema()).thenReturn(mock())@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "selectStatement.setLimit(new LimitSegment(0,0,new NumberLiteralLimitValueSegment(0,0,1),null))@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "selectStatement.setProjections(new ProjectionsSegment(0,0))@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
5 [style = filled, label = "ShardingSphereMetaData metaData = mock()@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"SQLServer\"))@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "ShardingDQLResultMerger resultMerger = new ShardingDQLResultMerger(DatabaseTypeRegistry.getActualDatabaseType(\"MySQL\"))@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12->5 [style = bold, label=""];
7->12 [style = bold, label=""];
18->17 [style = bold, label=""];
5->8 [style = solid, label="metaData"];
9->10 [style = bold, label=""];
15->16 [style = bold, label=""];
0->17 [style = dashed, label="0"];
9->8 [style = solid, label="selectStatement"];
1->13 [style = dashed, label="0"];
2->12 [style = dashed, label="0"];
2->0 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
13->15 [style = solid, label="actual"];
0->1 [style = bold, label=""];
2->18 [style = dashed, label="0"];
11->8 [style = bold, label=""];
14->18 [style = bold, label=""];
17->13 [style = bold, label=""];
13->15 [style = bold, label=""];
8->4 [style = solid, label="selectStatementContext"];
8->4 [style = bold, label=""];
6->9 [style = bold, label=""];
0->1 [style = solid, label="selectStatementContext"];
10->11 [style = bold, label=""];
17->13 [style = solid, label="selectStatementContext"];
}
