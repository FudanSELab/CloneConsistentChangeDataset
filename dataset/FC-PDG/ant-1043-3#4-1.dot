digraph {
5 [style = filled, label = "assertTrue(\"Expecting attribute value printed\",log.indexOf(\"Attribute attr1 = test\") != -1)@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "buildRule.executeTarget(\"simple\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
3 [style = filled, label = "Project p = getProject()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "String log = getLog()@@@7@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "executeTarget(\"nestedbyclassname\")@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "assertTrue(\"Expecting nested element value printed\",log.indexOf(\"Fileset basedir = \" + baseDir.getAbsolutePath()) != -1)@@@9@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "File baseDir = fileset.getDir(p)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testNestedByClassName['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "testSimple['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Project p = buildRule.getProject()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "String log = buildRule.getLog()@@@7@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
9 [style = filled, label = "testSimple['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "FileSet fileset = (FileSet)p.getReference(\"testfileset\")@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertTrue(\"Expecting attribute value to be printed\",log.indexOf(\"Attribute attr1 = test\") != -1)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertTrue(\"Expecting nested element value to be printed\",log.indexOf(\"Fileset basedir = \" + baseDir.getAbsolutePath()) != -1)@@@9@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "executeTarget(\"simple\")@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8->10 [style = bold, label=""];
4->14 [style = bold, label=""];
5->14 [style = dashed, label="0"];
7->1 [style = bold, label=""];
3->0 [style = solid, label="p"];
1->3 [style = bold, label=""];
0->11 [style = bold, label=""];
9->8 [style = bold, label=""];
1->12 [style = dashed, label="0"];
11->5 [style = bold, label=""];
2->0 [style = bold, label=""];
13->12 [style = bold, label=""];
5->6 [style = bold, label=""];
3->2 [style = bold, label=""];
6->15 [style = dashed, label="0"];
0->4 [style = bold, label=""];
1->8 [style = dashed, label="0"];
10->2 [style = bold, label=""];
14->15 [style = bold, label=""];
12->3 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->11 [style = dashed, label="0"];
10->0 [style = solid, label="p"];
4->5 [style = bold, label=""];
}
