digraph {
1 [style = filled, label = "Assertions.assertThat(userMemento.getName()).isEqualTo(\"fredflintstone\")@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "val userMemento = UserMemento.ofNameAndRoleNames(\"fredflintstone\",\"CAVEMAN\",\"HUSBAND\")@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "name_and_roles['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "val userMemento2 = userMemento.withAvatarUrl(new java.net.URL(\"https://upload.wikimedia.org/wikipedia/en/a/ad/Fred_Flintstone.png\"))@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "Assertions.assertThat(userMemento2.streamRoleNames()).anyMatch(null)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assertions.assertThat(userMemento.streamRoleNames()).anyMatch(null)@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "Assertions.assertThat(userMemento2.streamRoleNames()).anyMatch(null)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "Assertions.assertThat(userMemento.getRealName()).isNull()@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assertions.assertThat(userMemento2.getRoles()).hasSize(2)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "Assertions.assertThat(userMemento.getRoles()).hasSize(2)@@@12@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "name_and_roles['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "Assertions.assertThat(userMemento2).isNotSameAs(userMemento)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "Assertions.assertThat(userMemento.getAvatarUrl()).isNull()@@@15@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Assertions.assertThat(userMemento2.getAvatarUrl()).isEqualTo(new java.net.URL(\"https://upload.wikimedia.org/wikipedia/en/a/ad/Fred_Flintstone.png\"))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "user_and_roles_preserved_and_avatarUrl_set['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "Assertions.assertThat(userMemento2.getName()).isEqualTo(\"fredflintstone\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Assertions.assertThat(userMemento.getRoles().size()).isEqualTo(2)@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
5->15 [style = solid, label="userMemento"];
4->7 [style = bold, label=""];
1->9 [style = bold, label=""];
8->5 [style = bold, label=""];
3->2 [style = bold, label=""];
4->9 [style = dashed, label="0"];
5->1 [style = bold, label=""];
16->15 [style = bold, label=""];
17->12 [style = bold, label=""];
6->2 [style = bold, label=""];
9->7 [style = bold, label=""];
12->13 [style = bold, label=""];
3->6 [style = bold, label=""];
7->3 [style = bold, label=""];
10->1 [style = bold, label=""];
1->4 [style = bold, label=""];
0->5 [style = bold, label=""];
13->14 [style = bold, label=""];
14->10 [style = bold, label=""];
5->16 [style = bold, label=""];
11->5 [style = bold, label=""];
15->17 [style = bold, label=""];
}
