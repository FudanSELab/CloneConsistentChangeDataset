digraph {
17 [style = filled, label = "assertThat(sslHostConfig.getCertificateKeystoreFile()).contains(sslHostConfigWithDefaults.getCertificateKeystoreFile())@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "ssl.setKeyPassword(\"password\")@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "customizeWhenSslStoreProviderProvidesOnlyKeyStoreShouldUseDefaultTruststore['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "assertThat(sslHostConfig.getCertificateKeystoreFile()).isEqualTo(SslStoreProviderUrlStreamHandlerFactory.KEY_STORE_URL)@@@15@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "SSLHostConfig sslHostConfigWithDefaults = new SSLHostConfig()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "assertThat(sslHostConfig.getTruststoreFile()).isEqualTo(SslStoreProviderUrlStreamHandlerFactory.TRUST_STORE_URL)@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "this.tomcat.start()@@@11@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "customizeWhenSslStoreProviderProvidesOnlyTrustStoreShouldUseDefaultKeystore['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "given(sslStoreProvider.getKeyStore()).willReturn(loadStore())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "SslStoreProvider sslStoreProvider = mock()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "customizeWhenSslStoreProviderProvidesOnlyKeyStoreShouldUseDefaultTruststore['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "Ssl ssl = new Ssl()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "SslConnectorCustomizer customizer = new SslConnectorCustomizer(ssl,sslStoreProvider)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Connector connector = this.tomcat.getConnector()@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "given(sslStoreProvider.getTrustStore()).willReturn(loadStore())@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "ssl.setKeyStore(\"src/test/resources/test.jks\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(sslHostConfig.getTruststoreFile()).isEqualTo(sslHostConfigWithDefaults.getTruststoreFile())@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "ssl.setTrustStore(\"src/test/resources/test.jks\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "customizer.customize(connector)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "SSLHostConfig sslHostConfig = connector.getProtocolHandler().findSslHostConfigs()(0(@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4->10 [style = bold, label=""];
1->4 [style = bold, label=""];
15->2 [style = bold, label=""];
0->13 [style = bold, label=""];
18->17 [style = bold, label=""];
10->3 [style = bold, label=""];
7->0 [style = bold, label=""];
4->2 [style = solid, label="ssl"];
12->6 [style = bold, label=""];
2->12 [style = bold, label=""];
3->9 [style = bold, label=""];
5->2 [style = bold, label=""];
10->16 [style = bold, label=""];
9->15 [style = bold, label=""];
12->6 [style = solid, label="connector"];
6->11 [style = bold, label=""];
9->5 [style = bold, label=""];
8->17 [style = dashed, label="0"];
0->18 [style = bold, label=""];
19->4 [style = bold, label=""];
13->18 [style = dashed, label="0"];
13->8 [style = bold, label=""];
5->15 [style = dashed, label="0"];
16->9 [style = bold, label=""];
11->7 [style = bold, label=""];
3->16 [style = dashed, label="0"];
9->2 [style = solid, label="sslStoreProvider"];
14->4 [style = bold, label=""];
}
