digraph {
47 [style = filled, label = "stream.setStreamContext(context)@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "stream = factory.constructStream(expr)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assert(tuple0.getDouble(\"avg(price_f)\") == 100)@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "stream = factory.constructStream(expr2)@@@30@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "assert(tuple2.getLong(\"docFreq\") == 8)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assert(tuple2.getLong(\"count(*)\") == 1)@@@28@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assert(tuple1.getLong(\"docFreq\") == 8)@@@23@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "Tuple tuple2 = tuples.get(2)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "context = new StreamContext()@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "Tuple tuple1 = tuples.get(1)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "stream.setStreamContext(context)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "expr2 = \"sort(by=\"nodeScore desc\", \" + \"scoreNodes(termFreq=\"avg(price_f)\",gatherNodes(collection1, \" + expr + \",\" + \"walk=\"nodebasket_s\",\" + \"gather=\"product_s\", \" + \"count(*), \" + \"avg(price_f), \" + \"sum(price_f), \" + \"min(price_f), \" + \"max(price_f))))\"@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "tuples = getTuples(stream)@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"basket_s\",\"basket1\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"1\",\"basket_s\",\"basket1\",\"product_s\",\"product3\",\"price_f\",\"1\").add(id,\"2\",\"basket_s\",\"basket1\",\"product_s\",\"product5\",\"price_f\",\"100\").add(id,\"3\",\"basket_s\",\"basket2\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"4\",\"basket_s\",\"basket2\",\"product_s\",\"product6\",\"price_f\",\"1\").add(id,\"5\",\"basket_s\",\"basket2\",\"product_s\",\"product7\",\"price_f\",\"1\").add(id,\"6\",\"basket_s\",\"basket3\",\"product_s\",\"product4\",\"price_f\",\"1\").add(id,\"7\",\"basket_s\",\"basket3\",\"product_s\",\"product3\",\"price_f\",\"1\").add(id,\"8\",\"basket_s\",\"basket3\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"9\",\"basket_s\",\"basket4\",\"product_s\",\"product4\",\"price_f\",\"1\").add(id,\"10\",\"basket_s\",\"basket4\",\"product_s\",\"product3\",\"price_f\",\"1\").add(id,\"11\",\"basket_s\",\"basket4\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"12\",\"basket_s\",\"basket5\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"13\",\"basket_s\",\"basket6\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"14\",\"basket_s\",\"basket7\",\"product_s\",\"product1\",\"price_f\",\"1\").add(id,\"15\",\"basket_s\",\"basket4\",\"product_s\",\"product1\",\"price_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assert(tuple.getLong(\"count(*)\") == 3)@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "String expr = \"gatherNodes(collection1, \" + \"walk=\"product3product_s\",\" + \"gather=\"basket_s\")\"@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assert(tuple1.getLong(\"count(*)\") == 3)@@@24@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "tuple1 = tuples.get(1)@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "List<Tuple> tuples = null@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
34 [style = filled, label = "tuple2 = tuples.get(2)@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assert(tuple0.getLong(\"count(*)\") == 2)@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "context.setSolrClientCache(cache)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"basket_s\",\"basket1\",\"product_ss\",\"product1\",\"product_ss\",\"product3\",\"product_ss\",\"product5\",\"price_f\",\"1\").add(id,\"3\",\"basket_s\",\"basket2\",\"product_ss\",\"product1\",\"product_ss\",\"product6\",\"product_ss\",\"product7\",\"price_f\",\"1\").add(id,\"6\",\"basket_s\",\"basket3\",\"product_ss\",\"product4\",\"product_ss\",\"product3\",\"product_ss\",\"product1\",\"price_f\",\"1\").add(id,\"9\",\"basket_s\",\"basket4\",\"product_ss\",\"product4\",\"product_ss\",\"product3\",\"product_ss\",\"product1\",\"price_f\",\"1\").add(id,\"12\",\"basket_s\",\"basket5\",\"product_ss\",\"product1\",\"price_f\",\"1\").add(id,\"13\",\"basket_s\",\"basket6\",\"product_ss\",\"product1\",\"price_f\",\"1\").add(id,\"14\",\"basket_s\",\"basket7\",\"product_ss\",\"product1\",\"price_f\",\"1\").add(id,\"15\",\"basket_s\",\"basket4\",\"product_ss\",\"product1\",\"price_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
35 [style = filled, label = "cache.close()@@@47@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assert(tuple2.getString(\"node\").equals(\"product5\"))@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assert(tuple2.getDouble(\"avg(price_f)\") == 1)@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "tuple0 = tuples.get(0)@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "context = new StreamContext()@@@31@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assert(tuple1.getDouble(\"avg(price_f)\") == 1)@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assert(tuple.getString(\"node\").equals(\"product3\"))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "tuples = getTuples(stream)@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "Tuple tuple0 = tuples.get(0)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "String expr2 = \"sort(by=\"nodeScore desc\", \" + \"scoreNodes(gatherNodes(collection1, \" + expr + \",\" + \"walk=\"nodebasket_s\",\" + \"gather=\"product_s\", \" + \"count(*), \" + \"avg(price_f), \" + \"sum(price_f), \" + \"min(price_f), \" + \"max(price_f))))\"@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "SolrClientCache cache = new SolrClientCache()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "context.setSolrClientCache(cache)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "context.setSolrClientCache(cache)@@@32@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamContext context = new StreamContext()@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assert(tuple0.getString(\"node\").equals(\"product4\"))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
55 [style = filled, label = "testScoreNodesStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assert(tuple0.getString(\"node\").equals(\"product4\"))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assert(tuple2.getString(\"node\").equals(\"product5\"))@@@26@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withDefaultZkHost(cluster.getZkServer().getZkAddress()).withFunctionName(\"gatherNodes\",).withFunctionName(\"scoreNodes\",).withFunctionName(\"search\",).withFunctionName(\"facet\",).withFunctionName(\"sort\",).withFunctionName(\"count\",).withFunctionName(\"avg\",).withFunctionName(\"sum\",).withFunctionName(\"min\",).withFunctionName(\"max\",)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assert(tuple1.getString(\"node\").equals(\"product1\"))@@@22@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "String expr = \"sort(by=\"nodeScore desc\",scoreNodes(facet(collection1, q=\"product_ss:product3\", buckets=\"product_ss\", bucketSorts=\"count(*) desc\", bucketSizeLimit=100, count(*))))\"@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "assert(tuple2.getString(\"node\").equals(\"product1\"))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assert(tuple0.getLong(\"docFreq\") == 1)@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
54 [style = filled, label = "stream = factory.constructStream(expr2)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
32 [style = filled, label = "testScoreNodesFacetStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
60 [style = filled, label = "assert(tuple1.getLong(\"docFreq\") == 2)@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "assert(tuple1.getLong(\"docFreq\") == 4)@@@26@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
11 [style = filled, label = "assert(tuple2.getLong(\"docFreq\") == 1)@@@27@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assert(tuple1.getString(\"node\").equals(\"product1\"))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "assert(tuple.getLong(\"docFreq\") == 3)@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assert(tuple0.getString(\"node\").equals(\"product5\"))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"basket_s\",\"basket1\",\"product_ss\",\"product1\",\"product_ss\",\"product3\",\"product_ss\",\"product5\",\"price_f\",\"1\").add(id,\"3\",\"basket_s\",\"basket2\",\"product_ss\",\"product1\",\"product_ss\",\"product6\",\"product_ss\",\"product7\",\"price_f\",\"1\").add(id,\"6\",\"basket_s\",\"basket3\",\"product_ss\",\"product4\",\"product_ss\",\"product3\",\"product_ss\",\"product1\",\"price_f\",\"1\").add(id,\"9\",\"basket_s\",\"basket4\",\"product_ss\",\"product4\",\"product_ss\",\"product3\",\"product_ss\",\"product1\",\"price_f\",\"1\").commit(cluster.getSolrClient(),COLLECTION)@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
59 [style = filled, label = "assert(tuple1.getString(\"node\").equals(\"product4\"))@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "Tuple tuple0 = tuples.get(1)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "testScoreNodesFacetStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "TupleStream stream = null@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
45 [style = filled, label = "assert(tuple0.getLong(\"docFreq\") == 2)@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "StreamFactory factory = new StreamFactory().withCollectionZkHost(\"collection1\",cluster.getZkServer().getZkAddress()).withDefaultZkHost(cluster.getZkServer().getZkAddress()).withFunctionName(\"gatherNodes\",).withFunctionName(\"scoreNodes\",).withFunctionName(\"search\",).withFunctionName(\"sort\",).withFunctionName(\"count\",).withFunctionName(\"avg\",).withFunctionName(\"sum\",).withFunctionName(\"min\",).withFunctionName(\"max\",)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "context = new StreamContext()@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6->3 [style = bold, label=""];
52->43 [style = solid, label="expr"];
28->20 [style = bold, label=""];
39->59 [style = bold, label=""];
20->0 [style = bold, label=""];
25->14 [style = bold, label=""];
38->39 [style = bold, label=""];
0->8 [style = solid, label="cache"];
21->28 [style = bold, label=""];
56->54 [style = bold, label=""];
9->26 [style = bold, label=""];
27->7 [style = solid, label="stream"];
55->48 [style = bold, label=""];
4->10 [style = solid, label="context"];
48->21 [style = bold, label=""];
8->47 [style = bold, label=""];
23->17 [style = bold, label=""];
53->38 [style = bold, label=""];
25->40 [style = bold, label=""];
60->51 [style = bold, label=""];
23->49 [style = bold, label=""];
12->37 [style = dashed, label="0"];
59->60 [style = bold, label=""];
22->9 [style = bold, label=""];
2->18 [style = bold, label=""];
34->42 [style = bold, label=""];
57->45 [style = bold, label=""];
52->56 [style = solid, label="expr"];
10->7 [style = bold, label=""];
13->16 [style = bold, label=""];
31->11 [style = bold, label=""];
43->6 [style = solid, label="expr2"];
26->13 [style = bold, label=""];
12->37 [style = bold, label=""];
29->27 [style = bold, label=""];
0->23 [style = bold, label=""];
40->5 [style = bold, label=""];
0->10 [style = solid, label="cache"];
44->41 [style = bold, label=""];
30->10 [style = bold, label=""];
47->44 [style = bold, label=""];
5->11 [style = bold, label=""];
45->46 [style = bold, label=""];
1->19 [style = bold, label=""];
41->50 [style = bold, label=""];
2->43 [style = bold, label=""];
0->23 [style = solid, label="cache"];
32->33 [style = bold, label=""];
18->6 [style = bold, label=""];
3->8 [style = bold, label=""];
14->31 [style = bold, label=""];
54->12 [style = solid, label="stream"];
5->31 [style = dashed, label="0"];
0->30 [style = solid, label="cache"];
14->5 [style = bold, label=""];
37->57 [style = bold, label=""];
58->13 [style = bold, label=""];
19->21 [style = bold, label=""];
61->35 [style = bold, label=""];
25->58 [style = dashed, label="0"];
7->12 [style = bold, label=""];
12->15 [style = bold, label=""];
52->56 [style = bold, label=""];
54->30 [style = bold, label=""];
16->25 [style = bold, label=""];
46->58 [style = bold, label=""];
42->36 [style = bold, label=""];
17->49 [style = dashed, label="0"];
30->7 [style = solid, label="context"];
24->22 [style = bold, label=""];
11->2 [style = bold, label=""];
43->6 [style = bold, label=""];
27->4 [style = bold, label=""];
56->54 [style = solid, label="expr2"];
4->30 [style = bold, label=""];
49->52 [style = bold, label=""];
3->47 [style = solid, label="context"];
15->24 [style = bold, label=""];
6->44 [style = solid, label="stream"];
36->61 [style = bold, label=""];
51->34 [style = bold, label=""];
2->40 [style = dashed, label="0"];
29->27 [style = solid, label="expr"];
33->21 [style = bold, label=""];
17->29 [style = bold, label=""];
19->33 [style = dashed, label="0"];
50->53 [style = bold, label=""];
}
