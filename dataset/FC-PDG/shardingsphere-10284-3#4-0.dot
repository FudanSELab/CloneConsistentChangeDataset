digraph {
5 [style = filled, label = "Collection<String> shardingTableNames = null == currentRuleConfig? Collections.emptyList(): getShardingTables(currentRuleConfig)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "final AlterShardingTableRuleStatement sqlStatement@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "!duplicateTableNames.isEmpty()@@@6@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "checkDuplicateTables['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
0 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "final ShardingRuleConfiguration currentRuleConfig@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "checkDuplicateTables['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "final CreateShardingTableRuleStatement sqlStatement@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "return sqlStatement.getRules().stream().collect(Collectors.toMap(null,null,null)).entrySet().stream().filter(null).map(null).collect(Collectors.toList())@@@3@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "getDuplicateTables['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "Set<String> duplicateTableNames = sqlStatement.getRules().stream().collect(Collectors.toMap(null,null,null)).entrySet().stream().filter(null).map(null).collect(Collectors.toSet())@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "duplicateTableNames.addAll(sqlStatement.getRules().stream().map(null).filter(null).collect(Collectors.toSet()))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "throw new DuplicateTablesException(duplicateTableNames)@@@7@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1->5 [style = bold, label=""];
5->3 [style = bold, label=""];
7->11 [style = dashed, label="0"];
13->11 [style = dotted, label="true"];
6->4 [style = bold, label=""];
3->6 [style = bold, label=""];
10->8 [style = dotted, label="true"];
1->0 [style = dotted, label="true"];
13->12 [style = bold, label=""];
4->2 [style = bold, label=""];
10->5 [style = bold, label=""];
3->2 [style = solid, label="duplicateTableNames"];
0->5 [style = solid, label="currentRuleConfig"];
10->9 [style = dotted, label="true"];
7->9 [style = dashed, label="0"];
9->5 [style = solid, label="currentRuleConfig"];
4->2 [style = dotted, label="true"];
1->7 [style = dotted, label="true"];
}
