digraph {
16 [style = filled, label = "{clearBatch()}@@@12@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "executeUpdate['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "Collection<InputGroup<StatementExecuteUnit>> inputGroups = getInputGroups(schemaContexts.getProperties().getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY))@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "clearPrevious()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "{currentResultSet = null}@@@9@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "cacheStatements(inputGroups)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "{currentResultSet = null}@@@14@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
17 [style = filled, label = "executionContext = createExecutionContext()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "executeUpdate['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "return rawSQLExecutor.executeUpdate(getRawInputGroups(),new RawSQLExecuteUpdateExecutorCallback())@@@11@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
0 [style = filled, label = "executionContext = createExecutionContext(sql)@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "PreparedStatementExecuteGroupEngine executeGroupEngine = new PreparedStatementExecuteGroupEngine(schemaContexts.getProperties().getValue(ConfigurationPropertyKey.MAX_CONNECTIONS_SIZE_PER_QUERY),schemaContexts.getDefaultSchemaContext().getSchema().getRules())@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "reply()@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "return statementExecutor.executeUpdate(inputGroups,executionContext.getSqlStatementContext())@@@8@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final String sql@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "ExecutorConstant.MANAGED_RESOURCE@@@5@@@['0', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB2BBB"];
3 [style = filled, label = "cacheStatements(inputGroups)@@@6@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "Collection<InputGroup<StatementExecuteUnit>> inputGroups = getInputGroups()@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "execute['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "cacheStatements(inputGroups)@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "Collection<InputGroup<StatementExecuteUnit>> inputGroups = executeGroupEngine.generate(executionContext.getExecutionUnits(),connection,statementOption)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
14 [style = filled, label = "return preparedStatementExecutor.execute(inputGroups,executionContext.getSqlStatementContext())@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0->6 [style = bold, label=""];
6->1 [style = solid, label="inputGroups"];
10->2 [style = dotted, label="true"];
7->8 [style = bold, label=""];
9->11 [style = bold, label=""];
14->16 [style = bold, label=""];
13->17 [style = bold, label=""];
1->12 [style = bold, label=""];
9->11 [style = dotted, label="true"];
0->9 [style = bold, label=""];
9->1 [style = dotted, label="true"];
11->1 [style = bold, label=""];
15->21 [style = bold, label=""];
21->18 [style = solid, label="inputGroups"];
3->1 [style = bold, label=""];
6->3 [style = solid, label="inputGroups"];
9->7 [style = dotted, label="false"];
11->12 [style = solid, label="inputGroups"];
20->13 [style = bold, label=""];
11->1 [style = solid, label="inputGroups"];
17->15 [style = bold, label=""];
21->18 [style = bold, label=""];
18->19 [style = bold, label=""];
6->3 [style = bold, label=""];
2->0 [style = solid, label="sql"];
19->14 [style = bold, label=""];
9->12 [style = dotted, label="true"];
21->14 [style = solid, label="inputGroups"];
12->8 [style = bold, label=""];
10->0 [style = bold, label=""];
4->0 [style = bold, label=""];
4->2 [style = dotted, label="true"];
1->5 [style = bold, label=""];
9->7 [style = bold, label=""];
}
