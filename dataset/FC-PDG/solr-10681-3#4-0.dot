digraph {
18 [style = filled, label = "Map<String,Tuple> eofTuples = pstream.getEofTuples()@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "pstream.setStreamContext(streamContext)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "ParallelStream pstream = (ParallelStream)streamFactory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", unique(search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\"), over=\"a_f\"), workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"a_f asc\")\")@@@10@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
27 [style = filled, label = "pstream.setStreamFactory(streamFactory)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "assertOrder(tuples,0,1,3,4,6,56)@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "testParallelUniqueStream['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "StreamFactory streamFactory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,zkHost).withFunctionName(\"shuffle\",).withFunctionName(\"unique\",).withFunctionName(\"parallel\",)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "SolrClientCache solrClientCache = new SolrClientCache()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertOrder(tuples,0,1,3,4,6)@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "StreamContext streamContext = new StreamContext()@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "Map<String,Tuple> eofTuples = pstream.getEofTuples()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello1\",\"a_i\",\"10\",\"a_f\",\"1\").add(id,\"6\",\"a_s\",\"hello1\",\"a_i\",\"11\",\"a_f\",\"5\").add(id,\"7\",\"a_s\",\"hello1\",\"a_i\",\"12\",\"a_f\",\"5\").add(id,\"8\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"9\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"10\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"11\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"12\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"13\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"14\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"15\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"16\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"17\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"18\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"19\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"20\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"21\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"22\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"23\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"24\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"25\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"26\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"27\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"28\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"29\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"30\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"31\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"32\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"33\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"34\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"35\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"36\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"37\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"38\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"39\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"40\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"41\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"42\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"43\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"44\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"45\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"46\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"47\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"48\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"49\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"50\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"51\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"52\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"53\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"54\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"55\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").add(id,\"56\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"1000\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assert(tuples.size() == 6)@@@14@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "pstream.setStreamContext(streamContext)@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "{solrClientCache.close()}@@@20@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "new UpdateRequest().add(id,\"0\",\"a_s\",\"hello0\",\"a_i\",\"0\",\"a_f\",\"0\").add(id,\"2\",\"a_s\",\"hello2\",\"a_i\",\"2\",\"a_f\",\"0\").add(id,\"3\",\"a_s\",\"hello3\",\"a_i\",\"3\",\"a_f\",\"3\").add(id,\"4\",\"a_s\",\"hello4\",\"a_i\",\"4\",\"a_f\",\"4\").add(id,\"1\",\"a_s\",\"hello1\",\"a_i\",\"1\",\"a_f\",\"1\").add(id,\"5\",\"a_s\",\"hello1\",\"a_i\",\"10\",\"a_f\",\"1\").add(id,\"6\",\"a_s\",\"hello1\",\"a_i\",\"11\",\"a_f\",\"5\").add(id,\"7\",\"a_s\",\"hello1\",\"a_i\",\"12\",\"a_f\",\"5\").add(id,\"8\",\"a_s\",\"hello1\",\"a_i\",\"13\",\"a_f\",\"4\").commit(cluster.getSolrClient(),COLLECTIONORALIAS)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "testParallelUniqueStream['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
15 [style = filled, label = "ParallelStream pstream = (ParallelStream)streamFactory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", unique(search(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\", qt=\"/export\"), over=\"a_f\"), workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"a_f asc\")\")@@@10@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
24 [style = filled, label = "testParallelShuffleStream['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "assert(eofTuples.size() == 2)@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "assert(pstream.toExpression(streamFactory).toString().contains(\"shuffle\"))@@@18@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "streamContext.setSolrClientCache(solrClientCache)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "List<Tuple> tuples = getTuples(pstream)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "StreamFactory streamFactory = new StreamFactory().withCollectionZkHost(COLLECTIONORALIAS,zkHost).withFunctionName(\"search\",).withFunctionName(\"unique\",).withFunctionName(\"top\",).withFunctionName(\"group\",).withFunctionName(\"parallel\",)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "ParallelStream pstream = (ParallelStream)streamFactory.constructStream(\"parallel(\" + COLLECTIONORALIAS + \", unique(shuffle(collection1, q=*:*, fl=\"id,a_s,a_i,a_f\", sort=\"a_f asc, a_i asc\", partitionKeys=\"a_f\"), over=\"a_f\"), workers=\"2\", zkHost=\"\" + zkHost + \"\", sort=\"a_f asc\")\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "String zkHost = cluster.getZkServer().getZkAddress()@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "{solrClientCache.close()}@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14->3 [style = bold, label=""];
16->0 [style = bold, label=""];
17->26 [style = bold, label=""];
12->27 [style = solid, label="streamFactory"];
15->14 [style = bold, label=""];
7->8 [style = solid, label="zkHost"];
5->3 [style = dashed, label="0"];
0->23 [style = dashed, label="0"];
8->15 [style = dashed, label="0"];
25->3 [style = bold, label=""];
12->15 [style = bold, label=""];
9->12 [style = solid, label="solrClientCache"];
25->5 [style = solid, label="tuples"];
11->5 [style = dashed, label="0"];
8->14 [style = bold, label=""];
6->0 [style = bold, label=""];
5->18 [style = bold, label=""];
4->2 [style = bold, label=""];
2->9 [style = bold, label=""];
7->4 [style = bold, label=""];
24->23 [style = bold, label=""];
13->1 [style = bold, label=""];
19->25 [style = bold, label=""];
0->7 [style = bold, label=""];
8->22 [style = dashed, label="0"];
9->22 [style = solid, label="zkHost"];
22->25 [style = solid, label="pstream"];
26->2 [style = bold, label=""];
3->5 [style = bold, label=""];
10->13 [style = bold, label=""];
22->27 [style = bold, label=""];
11->10 [style = bold, label=""];
12->8 [style = bold, label=""];
26->2 [style = solid, label="solrClientCache"];
17->19 [style = solid, label="streamContext"];
23->17 [style = bold, label=""];
5->11 [style = bold, label=""];
27->19 [style = bold, label=""];
9->12 [style = bold, label=""];
2->14 [style = solid, label="streamContext"];
18->21 [style = bold, label=""];
15->3 [style = solid, label="pstream"];
8->3 [style = solid, label="pstream"];
7->15 [style = solid, label="zkHost"];
12->22 [style = bold, label=""];
21->13 [style = bold, label=""];
3->11 [style = solid, label="tuples"];
13->20 [style = bold, label=""];
}
