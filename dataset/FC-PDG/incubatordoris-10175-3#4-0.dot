digraph {
10 [style = filled, label = "Assert.assertEquals(\"testCluster:testDb\",stmt.getTblPattern().getQualifiedDb())@@@8@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
6 [style = filled, label = "stmt = new GrantStmt(new UserIdentity(\"testUser\",\"%\"),null,new TablePattern(\"testDb\",\"*\"),privileges)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "stmt.analyze(analyzer)@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "Assert.assertEquals(\"testCluster:testDb\",stmt.getTblPattern().getQuolifiedDb())@@@8@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
2 [style = filled, label = "stmt.analyze(analyzer)@@@11@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.fail(\"No exeception throws.\")@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "stmt = new GrantStmt(new UserIdentity(\"testUser\",\"%\"),null,new TablePattern(\"testDb\",\"*\"),privileges)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "testNormal['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "testNormal['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "List<AccessPrivilege> privileges = Lists.newArrayList(AccessPrivilege.ALL)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "testUserFail['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "privileges = Lists.newArrayList(AccessPrivilege.READ_ONLY,AccessPrivilege.ALL)@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "stmt = new GrantStmt(new UserIdentity(\"\",\"%\"),null,new TablePattern(\"testDb\",\"*\"),privileges)@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
5 [style = filled, label = "GrantStmt stmt@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "Assert.assertEquals(\"testCluster:testUser\",stmt.getUserIdent().getQualifiedUser())@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1->7 [style = solid, label="privileges"];
8->10 [style = bold, label=""];
8->3 [style = bold, label=""];
7->0 [style = bold, label=""];
12->0 [style = bold, label=""];
1->7 [style = bold, label=""];
9->6 [style = bold, label=""];
6->2 [style = bold, label=""];
3->9 [style = bold, label=""];
5->1 [style = bold, label=""];
11->5 [style = bold, label=""];
0->14 [style = bold, label=""];
0->8 [style = bold, label=""];
1->12 [style = solid, label="privileges"];
1->12 [style = bold, label=""];
7->12 [style = dashed, label="0"];
13->5 [style = bold, label=""];
10->9 [style = bold, label=""];
3->10 [style = dashed, label="0"];
4->5 [style = bold, label=""];
9->6 [style = solid, label="privileges"];
}
