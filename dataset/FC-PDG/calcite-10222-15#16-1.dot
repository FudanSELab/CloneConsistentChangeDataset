digraph {
9 [style = filled, label = "scan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
8 [style = filled, label = "filters.removeIf(null)@@@5@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "DataContext root@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB2BBB"];
15 [style = filled, label = "JavaTypeFactory typeFactory = requireNonNull(root.getTypeFactory(),\"typeFactory\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
10 [style = filled, label = "List<RexNode> filters@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
5 [style = filled, label = "final List<CsvFieldType> fieldTypes = getFieldTypes(root.getTypeFactory())@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "final @Nullable String(( filterValues = new String((((@@@5@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
2 [style = filled, label = "final List<Integer> fields = ImmutableIntList.identity(fieldTypes.size())@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "return new AbstractEnumerable<Object((>(){@Override public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(source,cancelFlag,true,null,CsvEnumerator.arrayConverter(fieldTypes,fields,true))}}@@@6@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "List<RexNode> filters@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "DataContext root@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA1AAABBB1BBB"];
14 [style = filled, label = "return new AbstractEnumerable<Object((>(){@Override public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(source,cancelFlag,false,filterValues,CsvEnumerator.arrayConverter(fieldTypes,fields,false))}}@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
1 [style = filled, label = "final String(( filterValues = new String((((@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "DataContext root@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "scan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "scan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "final List<CsvFieldType> fieldTypes = getFieldTypes(typeFactory)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
4->6 [style = dotted, label="true"];
12->14 [style = solid, label="fieldTypes"];
1->0 [style = solid, label="filterValues"];
17->5 [style = bold, label=""];
1->8 [style = bold, label=""];
7->14 [style = solid, label="fields"];
6->7 [style = solid, label="root"];
9->11 [style = dotted, label="true"];
6->11 [style = dashed, label="0"];
7->0 [style = bold, label=""];
16->7 [style = solid, label="root"];
2->0 [style = solid, label="fields"];
11->0 [style = solid, label="root"];
17->16 [style = dotted, label="true"];
7->0 [style = solid, label="cancelFlag"];
0->14 [style = dashed, label="0"];
5->0 [style = solid, label="fieldTypes"];
12->13 [style = bold, label=""];
0->14 [style = solid, label="cancelFlag"];
5->1 [style = bold, label=""];
5->2 [style = bold, label=""];
0->14 [style = bold, label=""];
6->16 [style = dashed, label="0"];
4->3 [style = dotted, label="true"];
8->2 [style = bold, label=""];
9->15 [style = bold, label=""];
15->12 [style = solid, label="typeFactory"];
15->12 [style = bold, label=""];
2->7 [style = bold, label=""];
5->15 [style = dashed, label="0"];
9->10 [style = dotted, label="true"];
4->5 [style = bold, label=""];
13->2 [style = bold, label=""];
13->14 [style = solid, label="filterValues"];
}
