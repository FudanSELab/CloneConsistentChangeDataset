digraph {
1 [style = filled, label = "testCloning['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertFalse(s1.equals(s2))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "assertTrue(s1 != s2)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "assertTrue(s1.getClass() == s2.getClass())@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "s1.add(new Task(\"T3\",new Date(22),new Date(33)))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "s1.add(new Task(\"T1\",new Date(1),new Date(2)))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "s2.add(new Task(\"T3\",new Date(22),new Date(33)))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertTrue(s1.equals(s2))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "TaskSeries s2 = CloneUtils.clone(s1)@@@6@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
12 [style = filled, label = "TaskSeries<String> s2 = CloneUtils.clone(s1)@@@6@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
13 [style = filled, label = "testCloning['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
14 [style = filled, label = "TaskSeries<String> s1 = new TaskSeries<>(\"S\")@@@3@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
16 [style = filled, label = "testSerialization['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "TaskSeries s2 = TestUtils.serialised(s1)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "assertEquals(s1,s2)@@@7@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "assertTrue(s1.equals(s2))@@@13@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "TaskSeries s1 = new TaskSeries(\"S\")@@@3@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "s1.add(new Task(\"T2\",new Date(11),new Date(22)))@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5->3 [style = bold, label=""];
12->6 [style = solid, label="s2"];
10->15 [style = dashed, label="0"];
1->4 [style = bold, label=""];
10->6 [style = solid, label="s2"];
7->11 [style = bold, label=""];
15->17 [style = solid, label="s2"];
10->5 [style = solid, label="s2"];
0->2 [style = bold, label=""];
10->12 [style = dashed, label="0"];
12->11 [style = solid, label="s2"];
3->6 [style = bold, label=""];
4->17 [style = solid, label="s1"];
10->11 [style = solid, label="s2"];
9->10 [style = bold, label=""];
12->0 [style = bold, label=""];
0->17 [style = dashed, label="0"];
4->0 [style = solid, label="s1"];
15->17 [style = bold, label=""];
12->0 [style = solid, label="s2"];
9->15 [style = bold, label=""];
10->0 [style = bold, label=""];
8->9 [style = bold, label=""];
14->0 [style = solid, label="s1"];
4->8 [style = bold, label=""];
4->10 [style = solid, label="s1"];
4->14 [style = dashed, label="0"];
14->8 [style = bold, label=""];
9->12 [style = bold, label=""];
16->4 [style = bold, label=""];
6->7 [style = bold, label=""];
14->12 [style = solid, label="s1"];
13->14 [style = bold, label=""];
4->15 [style = solid, label="s1"];
12->5 [style = solid, label="s2"];
2->5 [style = bold, label=""];
10->0 [style = solid, label="s2"];
}
