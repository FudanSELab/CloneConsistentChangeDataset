digraph {
7 [style = filled, label = "assertEquals(\"en\",liProcessor.process(doc).getFieldValue(\"languages\"))@@@13@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "doc = englishDoc()@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "assertEquals(\"en\",liProcessor.process(doc).getFieldValue(\"language\"))@@@12@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "testPreExistingMultiValueMixedLang['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "parameters.add(\"langid.map\",\"true\")@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "SolrInputDocument doc@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "parameters.add(\"langid.fl\",\"text\")@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "testPreExisting['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "parameters = new ModifiableSolrParams()@@@4@@@['1', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "ModifiableSolrParams parameters = new ModifiableSolrParams()@@@4@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
21 [style = filled, label = "assertNotNull(liProcessor.process(doc).getFieldValue(\"text_multivalue_no\"))@@@18@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertNotNull(liProcessor.process(doc).getFieldValue(\"text_no\"))@@@18@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "assertEquals(\"no\",liProcessor.process(doc).getFieldValue(\"languages\"))@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "doc = mixedEnglishRussianDoc()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "liProcessor = createLangIdProcessor(parameters)@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "parameters.add(\"langid.enforceSchema\",\"false\")@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "parameters.add(\"langid.langsField\",\"languages\")@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "doc = englishDoc()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "testPreExisting['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
6 [style = filled, label = "parameters.add(\"langid.langField\",\"language\")@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "doc.setField(\"language\",\"no\")@@@15@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "doc = mixedEnglishRussianDoc()@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
23 [style = filled, label = "parameters.add(\"langid.fl\",\"text_multivalue\")@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertEquals(\"no\",liProcessor.process(doc).getFieldValue(\"language\"))@@@16@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16->3 [style = bold, label=""];
10->18 [style = bold, label=""];
17->10 [style = bold, label=""];
22->15 [style = bold, label=""];
15->7 [style = bold, label=""];
5->9 [style = bold, label=""];
3->21 [style = dashed, label="0"];
4->6 [style = bold, label=""];
11->1 [style = bold, label=""];
14->10 [style = bold, label=""];
0->11 [style = bold, label=""];
19->10 [style = bold, label=""];
7->0 [style = bold, label=""];
7->20 [style = bold, label=""];
20->11 [style = bold, label=""];
18->8 [style = solid, label="parameters"];
0->20 [style = dashed, label="0"];
8->22 [style = bold, label=""];
12->8 [style = solid, label="parameters"];
6->5 [style = bold, label=""];
18->4 [style = bold, label=""];
12->4 [style = bold, label=""];
8->2 [style = bold, label=""];
10->12 [style = bold, label=""];
1->16 [style = bold, label=""];
16->21 [style = bold, label=""];
23->6 [style = bold, label=""];
2->15 [style = bold, label=""];
12->18 [style = dashed, label="0"];
12->23 [style = bold, label=""];
13->8 [style = bold, label=""];
4->23 [style = dashed, label="0"];
2->22 [style = dashed, label="0"];
9->13 [style = bold, label=""];
}
