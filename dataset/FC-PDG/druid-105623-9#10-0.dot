digraph {
10 [style = filled, label = "Assert.assertEquals(\"Failed long sum on dimension \" + i,2 * rows,result.getValue().getLongMetric(\"sumResult\" + i).intValue())@@@44@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "++i@@@8@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "final int expectedVal = elementsPerThread * taskCount@@@75@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
48 [style = filled, label = "TimeseriesQuery query = Druids.newTimeseriesQueryBuilder().dataSource(\"xxx\").granularity(Granularities.ALL).intervals(ImmutableList.of(queryInterval)).aggregators(queryAggregatorFactories).build()@@@72@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
59 [style = filled, label = "allFutures.addAll(queryFutures)@@@66@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
62 [style = filled, label = "indexExecutor.shutdown()@@@70@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
44 [style = filled, label = "++i@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "Assert.assertEquals(rows * (isRollup? 1: 2),result.getValue().getLongMetric(\"rows\").intValue())@@@40@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "final List<ListenableFuture<?>> queryFutures = new ArrayList<>()@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "index.add(getLongRow(timestamp + i,dimensionCount))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
42 [style = filled, label = "final ArrayList<AggregatorFactory> queryAggregatorFactories = new ArrayList<>(dimensionCount + 1)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "++i@@@80@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "final AtomicBoolean concurrentlyRan = new AtomicBoolean(false)@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "final AtomicInteger currentlyRunning = new AtomicInteger(0)@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
31 [style = filled, label = "++i@@@43@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
36 [style = filled, label = "final ArrayList<AggregatorFactory> queryAggregatorFactories = new ArrayList<>()@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
69 [style = filled, label = "final IncrementalIndex incrementalIndex = this.incrementalIndex.getConstructor(,,,,,).newInstance(new IncrementalIndexSchema.Builder().withMetrics(factories).build(),true,true,false,true,elementsPerThread * taskCount)@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
11 [style = filled, label = "ingestAggregatorFactories.add(new CountAggregatorFactory(\"rows\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "queryAggregatorFactories.add(new CountAggregatorFactory(\"rows\"))@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
77 [style = filled, label = "testConcurrentAddRead['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "queryAggregatorFactories.add(new CountAggregatorFactory(\"rows\"))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
35 [style = filled, label = "int i = 0@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
39 [style = filled, label = "i < dimensionCount@@@7@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
49 [style = filled, label = "final QueryRunnerFactory factory = new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()),new TimeseriesQueryEngine(),QueryRunnerTestHelper.NOOP_QUERYWATCHER)@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "QueryRunner<Result<TimeseriesResultValue>> runner = new FinalizeResultsQueryRunner<Result<TimeseriesResultValue>>(factory.createRunner(incrementalIndexSegment),factory.getToolchest())@@@71@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "final QueryRunnerFactory factory = new TimeseriesQueryRunnerFactory(new TimeseriesQueryQueryToolChest(QueryRunnerTestHelper.noopIntervalChunkingQueryRunnerDecorator()),new TimeseriesQueryEngine(),QueryRunnerTestHelper.NOOP_QUERYWATCHER)@@@35@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
52 [style = filled, label = "queryAggregatorFactories.add(new LongSumAggregatorFactory(StringUtils.format(\"sumResult%s\",i),StringUtils.format(\"sumResult%s\",i)))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "Assert.assertEquals(StringUtils.format(\"Failed long sum on dimension %d\",i),expectedVal,result.getValue().getLongMetric(StringUtils.format(\"sumResult%s\",i)).intValue())@@@81@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
63 [style = filled, label = "final ListeningExecutorService queryExecutor = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(concurrentThreads,new ThreadFactoryBuilder().setDaemon(false).setNameFormat(\"query-executor-%d\").build()))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "queryAggregatorFactories.add(new DoubleSumAggregatorFactory(StringUtils.format(\"doubleSumResult%s\",i),StringUtils.format(\"doubleSumResult%s\",i)))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "Futures.allAsList(allFutures).get()@@@68@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
82 [style = filled, label = "Assert.assertEquals(elementsPerThread,result.getValue().getLongMetric(\"rows\").intValue())@@@77@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "int i = 0@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
46 [style = filled, label = "final int concurrentThreads = 3@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "int i = 0@@@78@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
41 [style = filled, label = "testSingleThreadedIndexingAndQuery['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
20 [style = filled, label = "index.add(getLongRow(timestamp + i,dimensionCount))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
27 [style = filled, label = "i < rows@@@16@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "boolean isRollup = index.isRollup()@@@39@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "i < dimensionCount@@@10@@@['1', '1', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
53 [style = filled, label = "final Interval queryInterval = Intervals.of(\"1900-01-01T00:00:00Z/2900-01-01T00:00:00Z\")@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "final long timestamp = System.currentTimeMillis()@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "final QueryRunner<Result<TimeseriesResultValue>> runner = new FinalizeResultsQueryRunner<Result<TimeseriesResultValue>>(factory.createRunner(incrementalIndexSegment),factory.getToolchest())@@@36@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "TimeseriesQuery query = Druids.newTimeseriesQueryBuilder().dataSource(\"xxx\").granularity(Granularities.ALL).intervals(ImmutableList.of(Intervals.of(\"2000/2030\"))).aggregators(queryAggregatorFactories).build()@@@33@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "final List<ListenableFuture<?>> indexFutures = new ArrayList<>()@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "final int rows = 50@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
40 [style = filled, label = "List<Result<TimeseriesResultValue>> results = runner.run(QueryPlus.wrap(query)).toList()@@@37@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
65 [style = filled, label = "int j = 0@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "j < taskCount@@@27@@@['0', '0', '1']", fillcolor = white, shape = diamond image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "int i = 0@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "queryAggregatorFactories.add(new LongSumAggregatorFactory(StringUtils.format(\"sumResult%s\",i),StringUtils.format(\"sumResult%s\",i)))@@@30@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
60 [style = filled, label = "List<Result<TimeseriesResultValue>> results = runner.run(QueryPlus.wrap(query),context).toList()@@@74@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "final int dimensionCount = 5@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
56 [style = filled, label = "List<ListenableFuture<?>> allFutures = new ArrayList<>(queryFutures.size() + indexFutures.size())@@@65@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
45 [style = filled, label = "Map<String,Object> context = new HashMap<String,Object>()@@@73@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "List<Result<TimeseriesResultValue>> results = runner.run(QueryPlus.wrap(query),new HashMap<String,Object>()).toList()@@@37@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
32 [style = filled, label = "i++@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
25 [style = filled, label = "Result<TimeseriesResultValue> result = Iterables.getOnlyElement(results)@@@38@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "final ListeningExecutorService indexExecutor = MoreExecutors.listeningDecorator(Executors.newFixedThreadPool(concurrentThreads,new ThreadFactoryBuilder().setDaemon(false).setNameFormat(\"index-executor-%d\").setPriority(Thread.MIN_PRIORITY).build()))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "final ArrayList<AggregatorFactory> ingestAggregatorFactories = new ArrayList<>()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68 [style = filled, label = "i < dimensionCount@@@79@@@['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "j++@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
29 [style = filled, label = "i < dimensionCount@@@28@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
22 [style = filled, label = "int i = 0@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
57 [style = filled, label = "final int elementsPerThread = 1 << 15@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "i < rows@@@21@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "queryAggregatorFactories.add(new DoubleSumAggregatorFactory(StringUtils.format(\"doubleSumResult%s\",i),StringUtils.format(\"doubleSumResult%s\",i)))@@@31@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "allFutures.addAll(indexFutures)@@@67@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "final Segment incrementalIndexSegment = new IncrementalIndexSegment(incrementalIndex,null)@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "final int taskCount = 30@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
4 [style = filled, label = "testSingleThreadedIndexingAndQuery['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "indexFutures.add(indexExecutor.submit(new Runnable(){@Override public void run(){currentlyRunning.incrementAndGet()try {for (int i = 0 i < elementsPerThread i++){incrementalIndex.add(getLongRow(timestamp + i,1,dimensionCount))}}catch (IndexSizeExceededException e) currentlyRunning.decrementAndGet()someoneRan.set(true)}}))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
21 [style = filled, label = "i < dimensionCount@@@42@@@['1', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
43 [style = filled, label = "final AtomicBoolean someoneRan = new AtomicBoolean(false)@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
38 [style = filled, label = "++i@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
74 [style = filled, label = "queryExecutor.shutdown()@@@69@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "final IncrementalIndex index = closerRule.closeLater(indexCreator.createIndex(ingestAggregatorFactories.toArray(new AggregatorFactory(((()))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
33 [style = filled, label = "int i = 0@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
66 [style = filled, label = "queryFutures.add(queryExecutor.submit(new Runnable(){@Override public void run(){QueryRunner<Result<TimeseriesResultValue>> runner = new FinalizeResultsQueryRunner<Result<TimeseriesResultValue>>(factory.createRunner(incrementalIndexSegment),factory.getToolchest())TimeseriesQuery query = Druids.newTimeseriesQueryBuilder().dataSource(\"xxx\").granularity(Granularities.ALL).intervals(ImmutableList.of(queryInterval)).aggregators(queryAggregatorFactories).build()Map<String,Object> context = new HashMap<String,Object>()List<Result<TimeseriesResultValue>> results = runner.run(QueryPlus.wrap(query),context).toList()for (Result<TimeseriesResultValue> result : results){if (someoneRan.get()) {Assert.assertTrue(result.getValue().getDoubleMetric(\"doubleSumResult0\") > 0)}}if (currentlyRunning.get() > 0) {concurrentlyRan.set(true)}}}))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "Assert.assertEquals(StringUtils.format(\"Failed double sum on dimension %d\",i),expectedVal,result.getValue().getDoubleMetric(StringUtils.format(\"doubleSumResult%s\",i)).intValue())@@@82@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "int i = 0@@@41@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertEquals(\"Failed double sum on dimension \" + i,2 * rows,result.getValue().getDoubleMetric(\"doubleSumResult\" + i).intValue())@@@45@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
28 [style = filled, label = "final long timestamp = System.currentTimeMillis()@@@17@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "final Segment incrementalIndexSegment = new IncrementalIndexSegment(index,null)@@@34@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26->0 [style = solid, label="index"];
21->10 [style = bold, label=""];
55->68 [style = bold, label=""];
30->13 [style = bold, label=""];
9->14 [style = solid, label="i"];
3->40 [style = dashed, label="0"];
29->30 [style = bold, label=""];
39->24 [style = dotted, label="true"];
46->73 [style = solid, label="concurrentThreads"];
67->48 [style = bold, label=""];
69->70 [style = solid, label="incrementalIndex"];
40->25 [style = bold, label=""];
83->81 [style = dotted, label="true"];
24->73 [style = bold, label=""];
31->21 [style = bold, label=""];
68->80 [style = dotted, label="true"];
37->21 [style = solid, label="dimensionCount"];
8->24 [style = solid, label="i"];
27->15 [style = bold, label=""];
9->10 [style = solid, label="i"];
69->42 [style = bold, label=""];
62->67 [style = bold, label=""];
22->30 [style = solid, label="i"];
8->81 [style = solid, label="i"];
66->47 [style = bold, label=""];
70->66 [style = solid, label="incrementalIndexSegment"];
64->79 [style = bold, label=""];
26->12 [style = bold, label=""];
29->13 [style = dotted, label="true"];
81->66 [style = bold, label=""];
63->28 [style = bold, label=""];
71->74 [style = bold, label=""];
33->27 [style = solid, label="i"];
37->72 [style = dashed, label="0"];
57->69 [style = solid, label="elementsPerThread"];
70->67 [style = solid, label="incrementalIndexSegment"];
9->21 [style = bold, label=""];
58->76 [style = solid, label="expectedVal"];
35->39 [style = solid, label="i"];
32->18 [style = bold, label=""];
83->56 [style = bold, label=""];
65->47 [style = solid, label="j"];
16->9 [style = bold, label=""];
72->69 [style = solid, label="taskCount"];
76->75 [style = bold, label=""];
28->81 [style = solid, label="timestamp"];
58->75 [style = solid, label="expectedVal"];
52->78 [style = bold, label=""];
6->32 [style = bold, label=""];
40->25 [style = solid, label="results"];
49->64 [style = bold, label=""];
54->59 [style = solid, label="queryFutures"];
28->20 [style = solid, label="i"];
12->20 [style = solid, label="timestamp"];
68->75 [style = dotted, label="true"];
39->8 [style = dotted, label="true"];
10->14 [style = bold, label=""];
78->44 [style = bold, label=""];
51->54 [style = bold, label=""];
68->76 [style = bold, label=""];
34->27 [style = solid, label="rows"];
15->18 [style = solid, label="i"];
34->33 [style = bold, label=""];
41->37 [style = bold, label=""];
39->8 [style = bold, label=""];
83->47 [style = dotted, label="true"];
65->83 [style = bold, label=""];
68->82 [style = bold, label=""];
28->27 [style = solid, label="i"];
15->32 [style = solid, label="i"];
46->63 [style = solid, label="concurrentThreads"];
37->6 [style = solid, label="dimensionCount"];
33->27 [style = bold, label=""];
39->26 [style = bold, label=""];
24->78 [style = dashed, label="0"];
15->6 [style = solid, label="i"];
24->52 [style = dotted, label="true"];
0->7 [style = bold, label=""];
18->6 [style = dotted, label="true"];
32->18 [style = solid, label="i"];
79->43 [style = bold, label=""];
83->81 [style = bold, label=""];
12->6 [style = solid, label="timestamp"];
21->31 [style = dotted, label="true"];
7->2 [style = bold, label=""];
27->20 [style = dotted, label="true"];
61->8 [style = bold, label=""];
72->83 [style = solid, label="taskCount"];
55->76 [style = solid, label="i"];
22->29 [style = solid, label="i"];
33->20 [style = solid, label="i"];
45->60 [style = bold, label=""];
35->8 [style = solid, label="i"];
9->21 [style = solid, label="i"];
54->70 [style = bold, label=""];
27->20 [style = bold, label=""];
42->61 [style = bold, label=""];
57->69 [style = bold, label=""];
8->24 [style = bold, label=""];
59->50 [style = bold, label=""];
73->63 [style = bold, label=""];
37->39 [style = solid, label="dimensionCount"];
34->18 [style = solid, label="rows"];
57->81 [style = solid, label="elementsPerThread"];
2->3 [style = bold, label=""];
37->20 [style = solid, label="dimensionCount"];
35->39 [style = bold, label=""];
24->44 [style = dotted, label="true"];
22->29 [style = bold, label=""];
21->10 [style = dotted, label="true"];
24->78 [style = dotted, label="true"];
8->78 [style = solid, label="i"];
19->0 [style = bold, label=""];
34->10 [style = solid, label="rows"];
5->16 [style = bold, label=""];
60->58 [style = bold, label=""];
47->83 [style = solid, label="j"];
39->23 [style = dotted, label="true"];
74->62 [style = bold, label=""];
29->19 [style = bold, label=""];
18->6 [style = bold, label=""];
80->68 [style = bold, label=""];
33->28 [style = solid, label="i"];
55->75 [style = solid, label="i"];
43->65 [style = bold, label=""];
14->31 [style = bold, label=""];
47->83 [style = bold, label=""];
72->58 [style = solid, label="taskCount"];
23->39 [style = bold, label=""];
25->5 [style = bold, label=""];
82->55 [style = bold, label=""];
0->2 [style = solid, label="incrementalIndexSegment"];
50->71 [style = bold, label=""];
44->24 [style = bold, label=""];
34->14 [style = solid, label="rows"];
46->57 [style = bold, label=""];
56->59 [style = bold, label=""];
55->68 [style = solid, label="i"];
8->52 [style = dashed, label="0"];
70->49 [style = bold, label=""];
24->23 [style = bold, label=""];
75->80 [style = bold, label=""];
37->29 [style = solid, label="dimensionCount"];
35->24 [style = solid, label="i"];
68->76 [style = dotted, label="true"];
53->51 [style = bold, label=""];
72->46 [style = bold, label=""];
3->25 [style = bold, label=""];
28->53 [style = bold, label=""];
22->13 [style = solid, label="i"];
8->52 [style = solid, label="i"];
38->29 [style = bold, label=""];
37->17 [style = bold, label=""];
20->28 [style = bold, label=""];
65->83 [style = solid, label="j"];
29->38 [style = dotted, label="true"];
12->34 [style = bold, label=""];
18->36 [style = bold, label=""];
14->75 [style = dashed, label="0"];
2->40 [style = bold, label=""];
77->72 [style = bold, label=""];
57->58 [style = solid, label="elementsPerThread"];
10->76 [style = dashed, label="0"];
15->18 [style = bold, label=""];
18->32 [style = dotted, label="true"];
36->1 [style = bold, label=""];
11->35 [style = bold, label=""];
5->16 [style = solid, label="isRollup"];
34->53 [style = dashed, label="0"];
1->22 [style = bold, label=""];
32->6 [style = solid, label="i"];
57->82 [style = solid, label="elementsPerThread"];
27->28 [style = dotted, label="true"];
48->45 [style = bold, label=""];
51->50 [style = solid, label="indexFutures"];
4->37 [style = bold, label=""];
83->66 [style = dotted, label="true"];
3->25 [style = solid, label="results"];
21->14 [style = dotted, label="true"];
29->30 [style = dotted, label="true"];
34->16 [style = solid, label="rows"];
24->52 [style = bold, label=""];
13->38 [style = bold, label=""];
28->27 [style = bold, label=""];
58->82 [style = bold, label=""];
17->11 [style = bold, label=""];
}
