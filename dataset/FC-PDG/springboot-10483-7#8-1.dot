digraph {
11 [style = filled, label = "repository.add(new AuditEvent(\"phil\",\"d\"))@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"a\"))@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(events.size()).isEqualTo(2)@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "repository.add(new AuditEvent(\"phil\",\"b\"))@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "findByPrincipal['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "InMemoryAuditEventRepository repository = new InMemoryAuditEventRepository(2)@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"b\"))@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "repository.add(new AuditEvent(\"dave\",\"c\"))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "InMemoryAuditEventRepository repository = new InMemoryAuditEventRepository()@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "assertThat(events.get(0).getType()).isEqualTo(\"b\")@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "assertThat(events.get(1).getType()).isEqualTo(\"c\")@@@11@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "List<AuditEvent> events = repository.find(\"dave\",null,null)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "capacity['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
4 [style = filled, label = "capacity['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "assertThat(events.get(0).getType()).isEqualTo(\"a\")@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2->12 [style = dashed, label="0"];
5->11 [style = bold, label=""];
11->0 [style = bold, label=""];
12->3 [style = bold, label=""];
7->1 [style = bold, label=""];
1->8 [style = bold, label=""];
10->5 [style = bold, label=""];
8->10 [style = dashed, label="0"];
8->5 [style = bold, label=""];
5->0 [style = bold, label=""];
9->7 [style = bold, label=""];
1->10 [style = bold, label=""];
0->6 [style = bold, label=""];
13->14 [style = bold, label=""];
7->14 [style = dashed, label="0"];
4->7 [style = bold, label=""];
14->1 [style = bold, label=""];
2->3 [style = bold, label=""];
6->2 [style = bold, label=""];
6->12 [style = bold, label=""];
}
