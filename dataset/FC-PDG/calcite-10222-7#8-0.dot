digraph {
16 [style = filled, label = "filters.removeIf(null)@@@4@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
22 [style = filled, label = "scan['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<RexNode> filters@@@2@@@['1', '0', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "scan['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "final int(( fields = CsvEnumerator.identityList(fieldTypes.size())@@@5@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
2 [style = filled, label = "final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root)@@@13@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "scan['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
7 [style = filled, label = "Iterator<RexNode> i = filters.iterator()@@@4@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "List<RexNode> filters@@@2@@@['1', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "return new AbstractEnumerable<Object((>(){public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(source,cancelFlag,false,filterValues,new CsvEnumerator.ArrayRowConverter(fieldTypes,fields))}}@@@7@@@['0', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB2BBB"];
12 [style = filled, label = "final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root)@@@6@@@['0', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB2BBB"];
18 [style = filled, label = "final int(( fields = CsvEnumerator.identityList(fieldTypes.size())@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "final int(( fields = CsvEnumerator.identityList(fieldTypes.size())@@@12@@@['1', '0', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "DataContext root@@@2@@@['0', '0', '1']", fillcolor = tomato, shape = box image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "final AtomicBoolean cancelFlag = DataContext.Variable.CANCEL_FLAG.get(root)@@@4@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
10 [style = filled, label = "return new AbstractEnumerable<Object((>(){public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(source,cancelFlag,false,filterValues,new CsvEnumerator.ArrayRowConverter(fieldTypes,fields))}}@@@14@@@['1', '0', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "final String(( filterValues = new String((((@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "i.hasNext()@@@5@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
9 [style = filled, label = "addFilter(filter,filterValues)@@@8@@@['1', '0', '0']", fillcolor = red, shape = diamond image = "AAA1AAABBB1BBB"];
13 [style = filled, label = "DataContext root@@@2@@@['0', '1', '0']", fillcolor = tomato, shape = box image = "AAA0AAABBB2BBB"];
1 [style = filled, label = "i.remove()@@@9@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
8 [style = filled, label = "final RexNode filter = i.next()@@@7@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
20 [style = filled, label = "return new AbstractEnumerable<Object((>(){public Enumerator<Object((> enumerator(){return new CsvEnumerator<>(source,cancelFlag,true,null,new CsvEnumerator.ArrayRowConverter(fieldTypes,fields,true))}}@@@5@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
22->21 [style = dotted, label="true"];
4->5 [style = dotted, label="true"];
13->12 [style = solid, label="root"];
7->11 [style = bold, label=""];
9->11 [style = bold, label=""];
17->6 [style = bold, label=""];
4->6 [style = bold, label=""];
19->20 [style = bold, label=""];
4->0 [style = dotted, label="true"];
12->15 [style = bold, label=""];
18->19 [style = bold, label=""];
11->9 [style = dotted, label="true"];
5->2 [style = solid, label="root"];
19->20 [style = solid, label="cancelFlag"];
2->10 [style = bold, label=""];
3->10 [style = solid, label="fields"];
1->11 [style = bold, label=""];
6->15 [style = solid, label="filterValues"];
6->10 [style = solid, label="filterValues"];
12->15 [style = solid, label="cancelFlag"];
18->20 [style = solid, label="fields"];
22->18 [style = bold, label=""];
3->2 [style = bold, label=""];
6->9 [style = solid, label="filterValues"];
2->10 [style = solid, label="cancelFlag"];
11->3 [style = bold, label=""];
6->16 [style = bold, label=""];
14->12 [style = bold, label=""];
8->9 [style = bold, label=""];
9->1 [style = dotted, label="true"];
5->21 [style = dashed, label="0"];
11->8 [style = bold, label=""];
16->14 [style = bold, label=""];
11->8 [style = dotted, label="true"];
6->7 [style = bold, label=""];
9->1 [style = bold, label=""];
17->13 [style = dotted, label="true"];
14->15 [style = solid, label="fields"];
21->19 [style = solid, label="root"];
8->9 [style = solid, label="filter"];
17->5 [style = dotted, label="true"];
}
