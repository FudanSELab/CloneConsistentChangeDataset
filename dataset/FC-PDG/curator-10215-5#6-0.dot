digraph {
3 [style = filled, label = "Stat stat = observer.checkExists().usingWatcher(creationTrigger).forPath(path)@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "assertTrue(deletionTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "node.waitForInitialCreate(timing.forWaiting().seconds(),TimeUnit.SECONDS)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "assertNodeExists(curator,originalNode)@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "CuratorFramework observer = newCurator()@@@4@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "killSession(curator)@@@16@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
15 [style = filled, label = "Trigger creationTrigger = Trigger.created()@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
11 [style = filled, label = "assertTrue(stat != null || creationTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "i < 5@@@12@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "observer.checkExists().usingWatcher(deletionTrigger).forPath(path)@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "assertNodeExists(observer,path)@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "CuratorFramework curator = newCurator()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "KillSession.kill(curator.getZookeeperClient().getZooKeeper())@@@17@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
19 [style = filled, label = "node.debugReconnectLatch.countDown()@@@19@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
20 [style = filled, label = "node.debugReconnectLatch = new CountDownLatch(1)@@@14@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testRecreatesNodeWhenSessionReconnectsMultipleTimes['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
27 [style = filled, label = "Trigger createdWatchTrigger = Trigger.created()@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "Trigger deletionTrigger = Trigger.deleted()@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
30 [style = filled, label = "assertTrue(stat != null || createdWatchTrigger.firedWithin(timing.forWaiting().seconds(),TimeUnit.SECONDS))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "node.start()@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Stat stat = curator.checkExists().usingWatcher(createdWatchTrigger).forPath(originalNode)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
6 [style = filled, label = "int i = 0@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
0 [style = filled, label = "{node.close()}@@@25@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "PersistentEphemeralNode node = new PersistentEphemeralNode(curator,PersistentEphemeralNode.Mode.EPHEMERAL,PATH,new byte(((()@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "String originalNode = node.getActualPath()@@@8@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "String path = node.getActualPath()@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "{node.close()}@@@15@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testRecreatesNodeWhenItGetsDeleted['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "curator.delete().forPath(originalNode)@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8->16 [style = bold, label=""];
17->1 [style = solid, label="path"];
4->14 [style = bold, label=""];
6->4 [style = solid, label="i"];
14->19 [style = dotted, label="true"];
17->1 [style = bold, label=""];
8->16 [style = solid, label="curator"];
14->12 [style = dotted, label="true"];
1->26 [style = dashed, label="0"];
17->10 [style = solid, label="path"];
4->14 [style = solid, label="i"];
11->4 [style = bold, label=""];
3->11 [style = bold, label=""];
23->26 [style = bold, label=""];
10->21 [style = bold, label=""];
5->21 [style = dashed, label="0"];
2->1 [style = solid, label="observer"];
6->14 [style = solid, label="i"];
15->3 [style = bold, label=""];
23->26 [style = solid, label="originalNode"];
30->29 [style = bold, label=""];
14->10 [style = dotted, label="true"];
24->30 [style = bold, label=""];
23->28 [style = solid, label="originalNode"];
6->14 [style = bold, label=""];
22->8 [style = bold, label=""];
14->20 [style = dotted, label="true"];
23->24 [style = solid, label="originalNode"];
13->17 [style = bold, label=""];
14->15 [style = dotted, label="true"];
12->10 [style = bold, label=""];
1->6 [style = bold, label=""];
14->5 [style = dotted, label="true"];
14->21 [style = dotted, label="true"];
10->5 [style = bold, label=""];
14->0 [style = bold, label=""];
8->2 [style = bold, label=""];
24->30 [style = solid, label="stat"];
14->12 [style = bold, label=""];
14->7 [style = dotted, label="true"];
20->12 [style = bold, label=""];
13->23 [style = bold, label=""];
17->3 [style = solid, label="path"];
3->11 [style = solid, label="stat"];
14->3 [style = dotted, label="true"];
21->7 [style = bold, label=""];
5->7 [style = bold, label=""];
7->15 [style = bold, label=""];
14->11 [style = dotted, label="true"];
27->24 [style = bold, label=""];
25->8 [style = bold, label=""];
18->8 [style = bold, label=""];
8->5 [style = solid, label="curator"];
26->28 [style = bold, label=""];
28->27 [style = bold, label=""];
17->23 [style = dashed, label="0"];
19->15 [style = bold, label=""];
14->4 [style = dotted, label="true"];
7->19 [style = bold, label=""];
16->9 [style = bold, label=""];
14->20 [style = bold, label=""];
9->13 [style = bold, label=""];
8->26 [style = solid, label="curator"];
2->16 [style = bold, label=""];
}
