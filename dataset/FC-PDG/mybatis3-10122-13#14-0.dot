digraph {
41 [style = filled, label = "assertThat(environment.getId(),is(\"development\"))@@@49@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
47 [style = filled, label = "assertThat(config.getAutoMappingUnknownColumnBehavior(),is(AutoMappingUnknownColumnBehavior.WARNING))@@@10@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
15 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(true))@@@13@@@['1', '0', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB1BBB"];
11 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(false))@@@27@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
77 [style = filled, label = "assertThat(config.getAutoMappingBehavior(),is(AutoMappingBehavior.NONE))@@@9@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
24 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(false))@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
48 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\",\"xxx\"))))@@@25@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
52 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(false))@@@16@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
53 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@38@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
28 [style = filled, label = "assertThat(config.getAutoMappingUnknownColumnBehavior(),is(AutoMappingUnknownColumnBehavior.NONE))@@@9@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
81 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream,null,props)@@@7@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
78 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.BATCH))@@@18@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
18 [style = filled, label = "assertThat(config.isUseColumnLabel(),is(true))@@@15@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
51 [style = filled, label = "assertThat(config.getDefaultScriptingLanguageInstance(),is(instanceOf()))@@@27@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
22 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@11@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "assertNull(config.getDefaultFetchSize())@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
44 [style = filled, label = "assertThat(environment.getTransactionFactory(),is(instanceOf()))@@@51@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
33 [style = filled, label = "assertThat(config.getLogPrefix(),is(\"mybatis_\"))@@@29@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
35 [style = filled, label = "assertThat(config.getObjectWrapperFactory(),is(instanceOf()))@@@43@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
79 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(false))@@@15@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
75 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@54@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
55 [style = filled, label = "assertThat(objectFactory.getProperties().getProperty(\"objectFactoryProperty\"),is(\"100\"))@@@42@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
76 [style = filled, label = "String resource = \"org/apache/ibatis/builder/CustomizedSettingsMapperConfig.xml\"@@@3@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
72 [style = filled, label = "assertThat(config.getDefaultStatementTimeout(),is(10))@@@19@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
8 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.OTHER))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
59 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(true))@@@17@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
60 [style = filled, label = "assertThat(environment.getDataSource(),is(instanceOf()))@@@50@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
17 [style = filled, label = "InputStream inputStream = Resources.getResourceAsStream(resource)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
50 [style = filled, label = "assertThat(config.getMapperRegistry().getMappers().size(),is(4))@@@53@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
13 [style = filled, label = "assertThat(config.isCacheEnabled(),is(true))@@@10@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
31 [style = filled, label = "ExampleObjectFactory objectFactory = (ExampleObjectFactory)config.getObjectFactory()@@@40@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
34 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(,JdbcType.VARCHAR),is(instanceOf()))@@@39@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
3 [style = filled, label = "assertThat(config.getDefaultScriptingLanguageInstance(),is(instanceOf()))@@@26@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
6 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(false))@@@21@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
62 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(true))@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
19 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(true))@@@25@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "assertThat(config.getDefaultExecutorType(),is(ExecutorType.SIMPLE))@@@17@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
32 [style = filled, label = "Environment environment = config.getEnvironment()@@@48@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
1 [style = filled, label = "assertNull(config.getLogPrefix())@@@28@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
82 [style = filled, label = "assertThat(config.getDefaultFetchSize(),is(100))@@@20@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
80 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@56@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
46 [style = filled, label = "assertThat(config.getProxyFactory(),is(instanceOf()))@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
39 [style = filled, label = "props.put(\"prop2\",\"cccc\")@@@6@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
42 [style = filled, label = "ExamplePlugin plugin = (ExamplePlugin)config.getInterceptors().get(0)@@@45@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
84 [style = filled, label = "assertThat(plugin.getProperties().getProperty(\"pluginProperty\"),is(\"100\"))@@@47@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
40 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blog\").equals())@@@34@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
83 [style = filled, label = "assertThat(config.getVfsImpl().getName(),is(.getName()))@@@31@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
43 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.STATEMENT))@@@23@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
69 [style = filled, label = "assertThat(config.getConfigurationFactory().getName(),is(.getName()))@@@32@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
56 [style = filled, label = "Properties props = new Properties()@@@5@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
74 [style = filled, label = "assertThat(config.isCacheEnabled(),is(false))@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
30 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(false))@@@13@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
23 [style = filled, label = "shouldSuccessfullyLoadMinimalXMLConfigFile['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
63 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@36@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
37 [style = filled, label = "assertThat(config.getDatabaseId(),is(\"derby\"))@@@52@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
71 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"cart\").equals())@@@35@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
36 [style = filled, label = "shouldSuccessfullyLoadXMLConfigFile['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
70 [style = filled, label = "assertThat(config.isSafeResultHandlerEnabled(),is(false))@@@26@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
2 [style = filled, label = "XMLConfigBuilder builder = new XMLConfigBuilder(inputStream)@@@5@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "assertNull(config.getDefaultStatementTimeout())@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
29 [style = filled, label = "shouldSuccessfullyLoadMinimalXMLConfigFile['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
45 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@55@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
49 [style = filled, label = "assertThat(config.getMapperRegistry().hasMapper(),is(true))@@@57@@@['0', '0', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB3BBB"];
64 [style = filled, label = "assertThat(config.getJdbcTypeForNull(),is(JdbcType.NULL))@@@24@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "String resource = \"org/apache/ibatis/builder/MinimalMapperConfig.xml\"@@@3@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
7 [style = filled, label = "Configuration config = builder.parse()@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
16 [style = filled, label = "Configuration config = builder.parse()@@@6@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "assertNotNull(config)@@@7@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
65 [style = filled, label = "assertThat(config.isAggressiveLazyLoading(),is(false))@@@14@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
68 [style = filled, label = "assertThat(config.isSafeRowBoundsEnabled(),is(true))@@@22@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
57 [style = filled, label = "assertThat(objectFactory.getProperties().size(),is(1))@@@41@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
26 [style = filled, label = "assertThat(config.isMultipleResultSetsEnabled(),is(true))@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
73 [style = filled, label = "assertThat(config.getReflectorFactory(),is(instanceOf()))@@@44@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
67 [style = filled, label = "assertThat(plugin.getProperties().size(),is(1))@@@46@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "assertThat(config.isLazyLoadingEnabled(),is(false))@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
54 [style = filled, label = "assertThat(config.isMapUnderscoreToCamelCase(),is(true))@@@21@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
20 [style = filled, label = "assertThat(config.getLazyLoadTriggerMethods(),is((Set<String>)new HashSet<String>(Arrays.asList(\"equals\",\"clone\",\"hashCode\",\"toString\"))))@@@24@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "assertNull(config.getConfigurationFactory())@@@30@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
61 [style = filled, label = "assertThat(config.isCallSettersOnNulls(),is(true))@@@28@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
12 [style = filled, label = "assertNull(config.getLogImpl())@@@29@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
38 [style = filled, label = "assertThat(config.getTypeHandlerRegistry().getTypeHandler(),is(instanceOf()))@@@37@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
66 [style = filled, label = "assertTrue(config.getTypeAliasRegistry().getTypeAliases().get(\"blogauthor\").equals())@@@33@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
27 [style = filled, label = "assertThat(config.getLocalCacheScope(),is(LocalCacheScope.SESSION))@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
58 [style = filled, label = "assertThat(config.getLogImpl().getName(),is(.getName()))@@@30@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
9 [style = filled, label = "assertThat(config.isUseGeneratedKeys(),is(false))@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
68->43 [style = bold, label=""];
58->83 [style = bold, label=""];
54->68 [style = bold, label=""];
11->33 [style = dashed, label="0"];
25->30 [style = bold, label=""];
17->2 [style = solid, label="inputStream"];
29->0 [style = bold, label=""];
9->10 [style = bold, label=""];
52->59 [style = bold, label=""];
80->49 [style = bold, label=""];
76->17 [style = bold, label=""];
72->82 [style = bold, label=""];
70->51 [style = bold, label=""];
59->78 [style = bold, label=""];
77->47 [style = bold, label=""];
13->46 [style = dashed, label="0"];
71->63 [style = bold, label=""];
8->20 [style = bold, label=""];
47->74 [style = bold, label=""];
83->69 [style = bold, label=""];
51->61 [style = bold, label=""];
9->78 [style = dashed, label="0"];
53->34 [style = bold, label=""];
56->81 [style = solid, label="props"];
62->65 [style = bold, label=""];
1->12 [style = bold, label=""];
25->15 [style = bold, label=""];
15->79 [style = dashed, label="0"];
42->67 [style = bold, label=""];
13->22 [style = bold, label=""];
63->38 [style = bold, label=""];
19->3 [style = bold, label=""];
8->48 [style = dashed, label="0"];
2->16 [style = bold, label=""];
1->58 [style = dashed, label="0"];
22->25 [style = bold, label=""];
10->14 [style = bold, label=""];
50->75 [style = bold, label=""];
12->21 [style = bold, label=""];
0->17 [style = bold, label=""];
57->55 [style = bold, label=""];
30->26 [style = bold, label=""];
10->72 [style = dashed, label="0"];
3->11 [style = bold, label=""];
39->81 [style = bold, label=""];
38->53 [style = bold, label=""];
15->30 [style = dashed, label="0"];
34->31 [style = bold, label=""];
16->4 [style = solid, label="config"];
67->84 [style = bold, label=""];
75->45 [style = bold, label=""];
17->81 [style = solid, label="inputStream"];
79->52 [style = bold, label=""];
22->62 [style = dashed, label="0"];
17->2 [style = bold, label=""];
31->57 [style = bold, label=""];
19->51 [style = dashed, label="0"];
18->9 [style = bold, label=""];
21->69 [style = dashed, label="0"];
44->37 [style = bold, label=""];
14->82 [style = dashed, label="0"];
0->17 [style = solid, label="resource"];
55->35 [style = bold, label=""];
20->19 [style = bold, label=""];
27->8 [style = bold, label=""];
33->58 [style = bold, label=""];
60->44 [style = bold, label=""];
76->17 [style = solid, label="resource"];
82->54 [style = bold, label=""];
48->70 [style = bold, label=""];
35->73 [style = bold, label=""];
0->76 [style = dashed, label="0"];
65->79 [style = bold, label=""];
23->0 [style = bold, label=""];
4->7 [style = bold, label=""];
7->77 [style = bold, label=""];
40->71 [style = bold, label=""];
6->27 [style = bold, label=""];
74->46 [style = bold, label=""];
78->72 [style = bold, label=""];
7->28 [style = bold, label=""];
24->68 [style = dashed, label="0"];
5->24 [style = bold, label=""];
56->39 [style = bold, label=""];
32->41 [style = bold, label=""];
4->77 [style = dashed, label="0"];
84->32 [style = bold, label=""];
16->4 [style = bold, label=""];
69->66 [style = bold, label=""];
14->5 [style = bold, label=""];
7->47 [style = dashed, label="0"];
43->64 [style = bold, label=""];
11->1 [style = bold, label=""];
66->40 [style = bold, label=""];
6->43 [style = dashed, label="0"];
45->80 [style = bold, label=""];
18->59 [style = dashed, label="0"];
41->60 [style = bold, label=""];
28->13 [style = bold, label=""];
25->65 [style = dashed, label="0"];
15->26 [style = bold, label=""];
36->76 [style = bold, label=""];
73->42 [style = bold, label=""];
27->64 [style = dashed, label="0"];
12->83 [style = dashed, label="0"];
81->7 [style = bold, label=""];
26->52 [style = dashed, label="0"];
17->56 [style = bold, label=""];
24->6 [style = bold, label=""];
46->62 [style = bold, label=""];
61->33 [style = bold, label=""];
64->48 [style = bold, label=""];
37->50 [style = bold, label=""];
26->18 [style = bold, label=""];
}
