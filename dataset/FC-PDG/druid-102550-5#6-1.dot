digraph {
6 [style = filled, label = "recordSupplier.close()@@@14@@@['1', '1', '1']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
20 [style = filled, label = "StreamPartition<Integer> partition1 = StreamPartition.of(topic,1)@@@5@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
26 [style = filled, label = "recordSupplier.seekToLatest(partitions)@@@11@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
0 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long>> initialRecords = createOrderedPartitionableRecords()@@@14@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
21 [style = filled, label = "recordSupplier.seekToEarliest(partitions)@@@9@@@['0', '1', '0']", fillcolor = red, shape = ellipse image = "AAA1AAABBB2BBB"];
22 [style = filled, label = "testSeek['0', '1', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB2BBB"];
11 [style = filled, label = "recordSupplier.seek(partition0,2L)@@@12@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
3 [style = filled, label = "testSeek['1', '0', '0']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB1BBB"];
13 [style = filled, label = "recordSupplier.close()@@@24@@@['1', '1', '0']", fillcolor = lightgray, shape = ellipse image = "AAA0AAABBB1BBB"];
1 [style = filled, label = "Set<StreamPartition<Integer>> partitions = ImmutableSet.of(StreamPartition.of(topic,0),StreamPartition.of(topic,1))@@@6@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
15 [style = filled, label = "polledRecords.size() != 11 && i < pollRetry@@@17@@@['1', '1', '0']", fillcolor = white, shape = diamond image = "AAA0AAABBB1BBB"];
23 [style = filled, label = "List<OrderedPartitionableRecord<Integer,Long>> polledRecords = recordSupplier.poll(poll_timeout_millis)@@@12@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
25 [style = filled, label = "testSeekToLatest['0', '0', '1']", fillcolor = lightgray, shape = diamond image = "AAA0AAABBB3BBB"];
16 [style = filled, label = "polledRecords.addAll(recordSupplier.poll(poll_timeout_millis))@@@19@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
5 [style = filled, label = "recordSupplier.seek(partition1,2L)@@@13@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
18 [style = filled, label = "insertData()@@@3@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
4 [style = filled, label = "i++@@@18@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
14 [style = filled, label = "Assert.assertTrue(initialRecords.containsAll(polledRecords))@@@23@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
24 [style = filled, label = "Assert.assertEquals(Collections.emptyList(),polledRecords)@@@13@@@['0', '0', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB3BBB"];
7 [style = filled, label = "Assert.assertEquals(11,polledRecords.size())@@@22@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17 [style = filled, label = "KafkaRecordSupplier recordSupplier = new KafkaRecordSupplier(kafkaServer.consumerProperties(),objectMapper)@@@7@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
2 [style = filled, label = "int i = 0@@@16@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
8 [style = filled, label = "recordSupplier.assign(partitions)@@@8@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
10 [style = filled, label = "Thread.sleep(200)@@@20@@@['1', '1', '0']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
9 [style = filled, label = "Assert.assertEquals(0L,(long)recordSupplier.getEarliestSequenceNumber(partition0))@@@9@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
12 [style = filled, label = "Assert.assertEquals(0L,(long)recordSupplier.getEarliestSequenceNumber(partition1))@@@10@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
19 [style = filled, label = "StreamPartition<Integer> partition0 = StreamPartition.of(topic,0)@@@4@@@['1', '1', '1']", fillcolor = white, shape = ellipse image = "AAA0AAABBB1BBB"];
17->8 [style = bold, label=""];
6->14 [style = solid, label="polledRecords"];
15->7 [style = bold, label=""];
1->26 [style = solid, label="partitions"];
19->11 [style = solid, label="partition0"];
0->6 [style = bold, label=""];
16->10 [style = bold, label=""];
19->20 [style = bold, label=""];
11->26 [style = dashed, label="0"];
4->15 [style = bold, label=""];
12->11 [style = bold, label=""];
25->18 [style = bold, label=""];
18->19 [style = bold, label=""];
15->10 [style = dotted, label="true"];
19->9 [style = solid, label="partition0"];
12->26 [style = bold, label=""];
20->1 [style = bold, label=""];
15->16 [style = dotted, label="true"];
15->16 [style = bold, label=""];
2->15 [style = solid, label="i"];
20->12 [style = solid, label="partition1"];
15->4 [style = dotted, label="true"];
1->17 [style = bold, label=""];
3->18 [style = bold, label=""];
7->14 [style = bold, label=""];
6->2 [style = bold, label=""];
11->5 [style = bold, label=""];
23->24 [style = bold, label=""];
21->9 [style = bold, label=""];
22->18 [style = bold, label=""];
5->0 [style = bold, label=""];
4->15 [style = solid, label="i"];
26->23 [style = bold, label=""];
2->15 [style = bold, label=""];
2->4 [style = solid, label="i"];
8->9 [style = bold, label=""];
10->4 [style = bold, label=""];
23->24 [style = solid, label="polledRecords"];
8->21 [style = bold, label=""];
1->8 [style = solid, label="partitions"];
9->12 [style = bold, label=""];
14->13 [style = bold, label=""];
24->6 [style = bold, label=""];
1->21 [style = solid, label="partitions"];
20->5 [style = solid, label="partition1"];
}
